{
  "startTime": 1674252145790,
  "endTime": 1674252146406,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------------------------------------------------------------------------\n# KUBEFLOW PIPELINE COMPONENT CONTAINER BUILD SCRIPT v1.1\n# (c) Repro Inc.\n# ------------------------------------------------------------------------------\n\n#\n# BUILD BASE IMAGE (USED IN BOTH OF TEST/PROD)\n# ------------------------------------------------------------------------------\nFROM amd64/python:3.9.12-slim-bullseye AS build_base\n\n# install dependent packages\nRUN apt-get -y update && apt-get install -y --no-install-recommends \\\n    # for install\n    curl \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install poetry\nWORKDIR /home\nENV HOME /home\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\nENV PATH $PATH:/home/.poetry/bin\nRUN poetry config virtualenvs.create false\n\n# specify working directory and install dependency files\n# without dev dependencies (they are required only on testing.)\nWORKDIR /component\nCOPY pyproject.toml poetry.lock* ./\nRUN poetry install --no-dev\n\n# copy base source code and add path into PYTHONPATH\nENV PYTHONPATH $PYTHONPATH:/component/src\n\n# to utilize the cache system in docker, copying srcs has been moved to\n# subsequent stages instead of do it in here.\n\n#\n# BUILD AND EXECUTE UNIT TEST\n# ------------------------------------------------------------------------------\nFROM build_base AS test_runner\n\n# install full dependencies (includes dev-dependencies)\nRUN poetry install\n\n# copy test directory and run test\nCOPY src/ src/\nCOPY tests/ tests/\n\n# run unit tests\nRUN poetry run pytest\n\n#\n# BUILD PRODUCTION IMAGE\n# ------------------------------------------------------------------------------\nFROM build_base AS production\n\n# apply the cache system, copy codes\nCOPY src/ src/\n"
}