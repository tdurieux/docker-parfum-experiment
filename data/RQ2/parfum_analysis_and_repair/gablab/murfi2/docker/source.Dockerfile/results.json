{
  "startTime": 1674251806360,
  "endTime": 1674251808158,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 15,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 26,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 112,
        "lineEnd": 126,
        "columnStart": 6,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for murfi2. Most dependencies are compiled from source, except Qt5\n# and libace.\n#\n# Please note that because murfi has a GUI, the version of OpenGL has to be the\n# same -- similar is probably fine -- on the host and within the container.\n# The root operating system of this container is ubuntu:18.04, which was\n# released in April, 2018. If you get output like\n#\n#     X Error of failed request:  GLXBadContext\n#       Major opcode of failed request:  151 (GLX)\n#       Minor opcode of failed request:  6 (X_GLXIsDirect)\n#       Serial number of failed request:  45\n#\n# you should choose a different base image that better suits your host.\n\nFROM buildpack-deps:18.04 as builder\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\nARG NPROC=\"8\"\n\n# Build and install CMake.\nWORKDIR /src/cmake\nRUN curl -fsSL https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3.tar.gz \\\n    | tar xz --strip-components 1 \\\n    && ./bootstrap --parallel=$NPROC \\\n    && make -j$NPROC \\\n    && make install\n\n# Build and install vxl.\nWORKDIR /src/vxl\nRUN apt-get update -qq \\\n    && apt-get install --yes --quiet --no-install-recommends \\\n          libgeotiff-dev \\\n    && rm -r /var/lib/apt/lists/* \\\n    && curl -fsSL https://github.com/vxl/vxl/archive/v2.0.2.tar.gz \\\n    | tar xz --strip-components 1 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr .. \\\n    && make -j$NPROC \\\n    && make install\n\n# Build and install Boost (filesystem and system).\nWORKDIR /src/boost\nRUN curl -fsSL https://boostorg.jfrog.io/artifactory/main/release/1.69.0/source/boost_1_69_0.tar.gz \\\n    | tar xz --strip-components 1 \\\n    && ./bootstrap.sh \\\n    && ./b2 -j$NPROC --stagedir=/usr --with-filesystem --with-system \\\n    && ln -s /src/boost/boost /usr/include/boost\n\n# Build and install nifticlib.\nWORKDIR /src/nifti\nRUN curl -fsSL https://versaweb.dl.sourceforge.net/project/niftilib/nifticlib/nifticlib_2_0_0/nifticlib-2.0.0.tar.gz \\\n    | tar xz --strip-components 1 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DCMAKE_INSTALL_PREFIX=/usr \\\n             -DBUILD_SHARED_LIBS=ON \\\n             -DBUILD_TESTING=OFF \\\n             .. \\\n    && make -j$NPROC install\n\n# Build and install gsl.\nWORKDIR /src/gsl\nRUN curl -fsSL  https://ftpmirror.gnu.org/gsl/gsl-2.5.tar.gz \\\n    | tar xz --strip-components 1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make -j$NPROC \\\n    && make install\n\n# Install the more difficult things...\nRUN apt-get update -qq \\\n    && apt-get install --yes --quiet --no-install-recommends \\\n        libace-dev \\\n        libqt5opengl5-dev \\\n        qt5-default \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && ln -sv /usr/include/x86_64-linux-gnu/qt5 /usr/include/qt5\n\n# Build murfi.\nWORKDIR /src/murfi\nCOPY [\".\", \".\"]\nRUN make clean \\\n    && make -j8\n\n\nFROM ubuntu:18.04\nCOPY --from=builder [ \\\n    \"/usr/lib/libACE-6.4.5.so\", \\\n    \"/usr/lib/libniftiio.so.2\", \\\n    \"/usr/lib/libboost_filesystem.so.1.69.0\", \\\n    \"/usr/lib/libznz.so.2\", \\\n    \"/usr/lib/\"]\n\nCOPY --from=builder [\"/src/murfi\", \"/src/murfi\"]\nRUN ln -sv /src/murfi/bin/murfi \\\n           /src/murfi/util/scanner_sim/servenii \\\n           /src/murfi/util/scanner_sim/servenii4d \\\n           /usr/bin/ \\\n    && apt-get update -qq \\\n    && apt-get install --yes --no-install-recommends --quiet \\\n        iputils-ping \\\n        libace-6.4.5 \\\n        libqt5core5a \\\n        libqt5gui5 \\\n        libqt5opengl5 \\\n        libqt5printsupport5 \\\n        libqt5widgets5 \\\n        net-tools \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get -y update \\\n   && DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y dbus-x11 \\\n       firefox \\\n       xfce4 \\\n       xfce4-panel \\\n       xfce4-session \\\n       xfce4-terminal \\\n       xfce4-settings \\\n       xorg \\\n       xubuntu-icon-theme \\\n       wget \\\n       curl \\\n       python3-distutils \\\n       gcc \\\n       make \\\n       locales \\\n    && rm -rf /tmp/* \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\nENV LANG en_US.utf8\n\nARG WEBSOCKIFY_VERSION=0.10.0\nARG NOVNC_VERSION=1.2.0\n\nRUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt && \\\n    curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt && \\\n    mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC && \\\n    mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify && \\\n    ln -s /opt/noVNC/vnc_lite.html /opt/noVNC/index.html && \\\n    cd /opt && curl -f -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \\\n    python3 get-pip.py && \\\n    cd /opt/websockify && pip install --no-cache-dir . && make\n\n# Remove light-locker to prevent screen lock\nARG TURBOVNC_VERSION=2.2.6\nRUN wget -q \"https://sourceforge.net/projects/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb/download\" -O turbovnc_${TURBOVNC_VERSION}_amd64.deb && \\\n    apt-get install --no-install-recommends -y -q ./turbovnc_${TURBOVNC_VERSION}_amd64.deb && \\\n    apt-get remove -y -q light-locker && \\\n    rm ./turbovnc_${TURBOVNC_VERSION}_amd64.deb && \\\n    ln -s /opt/TurboVNC/bin/* /usr/local/bin/ && \\\n    mkdir -p ~/.vnc && \\\n    bash -c \"echo 'murfi123' | vncpasswd -f > ~/.vnc/passwd\" && \\\n    chmod 0600 ~/.vnc/passwd \\\n    && rm -rf /tmp/* && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://raw.githubusercontent.com/jupyterhub/jupyter-remote-desktop-proxy/main/jupyter_desktop/share/xstartup -O /opt/xstartup \\\n    && chmod +x /opt/xstartup\n\nRUN useradd -m -u 1000 -s /bin/bash murfi && \\\n    usermod -aG sudo murfi\n\nUSER 1000\n\nRUN mkdir -p ~/.vnc && \\\n    bash -c \"echo 'murfi123' | vncpasswd -f > ~/.vnc/passwd\" && \\\n    chmod 0600 ~/.vnc/passwd\n\nWORKDIR /home/murfi\n\n# CMD [\"/src/murfi/bin/murfi\"]\n\n# vncserver -SecurityTypes None -xstartup /opt/xstartup :1\n# /opt/websockify/websockify.py -v --web /opt/noVNC/ --heartbeat 30 8080 localhost:5901\n"
}