{
  "startTime": 1674248243925,
  "endTime": 1674248244833,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 47,
        "columnStart": 11,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 11,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 47,
        "columnStart": 11,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "# Docker Hub maintains an official Clojure library. Using it as our base saves\n# us from having to install Leiningen ourselves.\n\nFROM clojure:lein-2.8.1\n\n# Install curl so we can use it to download the Clojure command line tools,\n# install time so we can measure how long it takes to run the examples, install\n# rlwrap for use with clj, and install pip so we can install jupyter, and\n# install cmake and xxd so we can build Planck.\nRUN apt-get update -qq \\\n      && apt-get upgrade -qq \\\n      && apt-get install --no-install-recommends -qq -y \\\n        cmake \\\n        curl \\\n        nodejs \\\n        time \\\n        rlwrap \\\n        python3-pip \\\n        xxd && rm -rf /var/lib/apt/lists/*;\n\n# Install Node so we can run our tests in JVM-hosted Clojurescript mode.\n\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\n# Install the Clojure command line tools. These instructions are taken directly\n# from the Clojure \"Getting Started\" guide:\n# https://clojure.org/guides/getting_started\n\nENV CLOJURE_VERSION 1.9.0.394\nRUN curl -f -O https://download.clojure.org/install/linux-install-${CLOJURE_VERSION}.sh \\\n      && chmod +x linux-install-${CLOJURE_VERSION}.sh \\\n      && ./linux-install-${CLOJURE_VERSION}.sh\n\n# Work around a bug in the Ubuntu package `ca-certificates-java`\n# (https://stackoverflow.com/a/33440168)\nRUN dpkg --purge --force-depends ca-certificates-java \\\n      && apt-get install -y --no-install-recommends ca-certificates-java && rm -rf /var/lib/apt/lists/*;\n\n# Install Planck so we can run our tests in self-hosted mode.\n\nRUN apt-get update \\\n        && apt-get install -y --no-install-recommends apt-utils \\\n        && apt-get install --no-install-recommends -qq -y \\\n          libjavascriptcoregtk-4.0 \\\n          libglib2.0-dev \\\n          libzip-dev \\\n          libcurl4-gnutls-dev \\\n          libicu-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/planck-repl/planck.git \\\n        && cd planck \\\n        && git fetch --all --tags \\\n        && git checkout tags/2.21.0 \\\n        && script/build --fast \\\n        && script/install \\\n        && planck -h \\\n        && cd ..\n\n# Install jupyter.\n\nRUN pip3 install --no-cache-dir jupyter\n\n# Create a new user to run commands as per the best practice.\n# https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#user\n# Use --no-log-init to work around the bug detailed there.\n\nRUN groupadd metaprob && \\\n    useradd --no-log-init -m -g metaprob metaprob\n\n# Switch users early so files created by subsequent operations will be owned by the\n# runtime user. This also makes it so that commands will not be run as root.\n\nUSER metaprob\n\nENV METAPROB_DIR /home/metaprob/projects/metaprob-clojure\nRUN mkdir -p $METAPROB_DIR\nWORKDIR $METAPROB_DIR\n\n# Retrieve our dependencies now in order to reduce the time it takes for the\n# notebook to start when the image is run.\n\nCOPY --chown=metaprob:metaprob ./deps.edn $METAPROB_DIR\nCOPY --chown=metaprob:metaprob ./project.clj $METAPROB_DIR\nRUN clojure -e \"(clojure-version)\"\n\n# downgrade tornado.\n# see https://stackoverflow.com/questions/54963043/jupyter-notebook-no-connection-to-server-because-websocket-connection-fails\n\nUSER root\nRUN pip3 uninstall -y tornado\nRUN pip3 install --no-cache-dir tornado==5.1.1\n\nUSER metaprob\n\nRUN lein jupyter install-kernel\n\n# Copy in the rest of our source.\n\nCOPY --chown=metaprob:metaprob . $METAPROB_DIR\n"
}