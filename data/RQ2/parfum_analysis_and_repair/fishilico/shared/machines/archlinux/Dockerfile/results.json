{
  "startTime": 1674254931482,
  "endTime": 1674254933204,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# When Arch Linux had no official Docker image, bootstrap from Debian\n# Now Arch Linux provides base/archlinux:\n#    https://hub.docker.com/r/base/archlinux/\n#    https://github.com/archimg/archlinux\n#\n# Usage: docker build -t archlinux . && docker run --rm -ti archlinux\nFROM debian:sid-slim\nLABEL Description=\"Arch Linux base image\"\n\n# PGP key of Pierre Schmitz from https://pgp.mit.edu/pks/lookup?op=get&search=0x7F2D434B9741E8AC\n# cf. https://www.archlinux.org/master-keys/\nCOPY 4AA4767BBC9C4B1D18AE28B77F2D434B9741E8AC.asc /etc/archlinux-signing-key.asc\n\n# Steps:\n# - Install wget to be able to download and extract Arch Linux images\n# - Download bootstrap image and extract it in /arch/root (cf. https://wiki.archlinux.org/index.php/Install_from_existing_Linux)\n# - Switch over to Arch Linux, keeping Docker-special files\n# - Configure pacman, locales, etc.\n# - Initialize pacman keyring\n# - Remove packages which are not needed and install some useful base packages\nRUN \\\n    export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get -qq update && \\\n    apt-get install --no-install-recommends -qqy gnupg libarchive-tools wget && \\\n    apt-get clean && \\\n    gpg --batch --import /etc/archlinux-signing-key.asc && \\\n    mkdir /arch && cd /arch && \\\n    (wget -qO- https://mirror.rackspace.com/archlinux/iso/latest/sha1sums.txt | fgrep 'x86_64.tar' > sha1sum.txt) && \\\n    read -r SHA1 FILE < sha1sum.txt && \\\n    wget -q \"https://mirror.rackspace.com/archlinux/iso/latest/$FILE\" && \\\n    wget -q \"https://mirror.rackspace.com/archlinux/iso/latest/$FILE.sig\" && \\\n    gpg --batch --verify \"$FILE.sig\" \"$FILE\" && \\\n    sha1sum -c sha1sum.txt && \\\n    bsdtar -xpzf \"$FILE\" && \\\n    cd /arch/root.x86_64 && \\\n    rm -r /bin /lib* /opt /root /sbin /srv /usr /var && \\\n    LD_LIBRARY_PATH=/arch/root.x86_64/lib /arch/root.x86_64/lib/ld-linux-x86-64.so.* bin/mv bin lib* opt root sbin srv usr var / && \\\n    find /etc/* -maxdepth 0 -not \\( -name resolv.conf -o -name hostname -o -name hosts \\) -exec rm -r {} + && \\\n    rm /arch/root.x86_64/etc/hosts /arch/root.x86_64/etc/resolv.conf && \\\n    mv /arch/root.x86_64/etc/* /etc && \\\n    cd / && \\\n    rm -r /arch && \\\n    echo 'Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch' >> /etc/pacman.d/mirrorlist && \\\n    ln -sf ../usr/share/zoneinfo/UTC /etc/localtime && \\\n    echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen && \\\n    pacman-key --init && \\\n    pacman-key --populate archlinux && \\\n    pacman --noconfirm -Rn arch-install-scripts && \\\n    pacman --noconfirm -Syu diffutils gawk grep procps-ng sed tar which && \\\n    (pkill gpg-agent ; true) && \\\n    pacman --noconfirm -Sc && \\\n    rm -r /usr/share/info/* /usr/share/man/* && \\\n    rm -r /var/cache/pacman/pkg/* /var/lib/pacman/sync/* /var/log/*.log && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"/usr/bin/bash\"]\n"
}