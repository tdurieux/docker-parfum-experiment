{
  "startTime": 1674249673922,
  "endTime": 1674249674777,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:10-slim\n\nARG CONFD_VERSION\nARG PKIXSSH_VERSION\nARG APP_NAME\nARG USER=admin\nARG PASS=admin\n\nENV CONFD_VERSION=${CONFD_VERSION}\nENV APP_NAME=${APP_NAME}\nENV DEBIAN_FRONTEND=noninteractive\nENV CONFD_DIR=/confd\nENV USE_SSL_DIR=/usr/lib/x86_64-linux-gnu\nENV LD_LIBRARY_PATH=${USE_SSL_DIR}:$LD_LIBRARY_PATH\nENV PATH=${CONFD_DIR}/bin:${USE_SSL_DIR}/bin:/${APP_NAME}:$PATH\nENV CONFD=${CONFD_DIR}/bin/confd\nENV USER=${USER}\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends build-essential libssl-dev \\\n       openssh-client ca-certificates wget zlib1g-dev nano isc-dhcp-server sudo && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\nRUN echo \"sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\" >> /etc/passwd \\\n    && echo \"sshd:x:74:\" >> /etc/group \\\n    && wget https://roumenpetrov.info/secsh/src/pkixssh-${PKIXSSH_VERSION}.tar.gz \\\n    && tar xvfz pkixssh-${PKIXSSH_VERSION}.tar.gz \\\n    && cd pkixssh-${PKIXSSH_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install && rm pkixssh-${PKIXSSH_VERSION}.tar.gz\n\nCOPY confd-${CONFD_VERSION}.linux.x86_64.installer.bin /tmp\nRUN  /tmp/confd-${CONFD_VERSION}.linux.x86_64.installer.bin ${CONFD_DIR}\n\n# Rebuild the ConfD crypto integration and cleanup\nRUN rm -rf /tmp/* /var/tmp/* \\\n    && apt-get autoremove -y \\\n    && apt-get clean\n\n# Add user for test purposes\nRUN useradd --create-home --home-dir /home/${USER} --user-group --shell /bin/bash ${USER} \\\n    && echo \"${USER}:${PASS}\" | chpasswd \\\n    && chmod -R 755 /home/${USER} \\\n    && chmod -R 755 /${CONFD_DIR} \\\n    && chown -R ${USER}:${USER} /home/${USER} \\\n    && echo \"${USER} ALL = (ALL) ALL\" >> /etc/sudoers \\\n    && echo \"${USER} ALL = (root) NOPASSWD: /home/${USER}/dhcpd_conf\" >> /etc/sudoers \\\n    && touch /var/lib/dhcp/dhcpd.leases\n\nUSER ${USER}\nADD ${APP_NAME}.tar.gz /home/${USER}\n\n# Change priveleges for test purposes\nRUN mkdir -p /home/${USER}/.ssh \\\n    && chmod 700 /home/${USER}/.ssh\n\nWORKDIR /home/${USER}/\n\nCMD [ \"./run.sh\" ]\n"
}