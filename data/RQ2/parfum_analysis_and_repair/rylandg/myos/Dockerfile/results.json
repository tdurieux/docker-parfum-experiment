{
  "startTime": 1674249972392,
  "endTime": 1674249976252,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage:master\nLABEL Maintainer=\"Ryland Goldstein <rylandgoldstein@gmail.com>\"\n\n# Required for phusion, modifies PID 1\nCMD [\"/sbin/my_init\"]\n\nENV DEFAULT_USER=ubuntu\n\n# TODO: Fix locale for tmux so hack isn't needed\nENV LC_ALL en_US.UTF-8\n# For tmux (it gets confused)\nENV TERM xterm-256color\n# Configurable user home\nENV USER_HOME=/home/$DEFAULT_USER\n# This stops us from getting spammed about \"missing frontend\"\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Required for vim repo\nRUN apt-get update        --fix-missing\n# This vim has clipboard and xclipboard support\nRUN add-apt-repository    ppa:jonathonf/vim\nRUN apt-get install --no-install-recommends -y \\\n                          software-properties-common \\\n                          curl \\\n                          sudo \\\n                          nano \\\n                          vim-gtk3 && rm -rf /var/lib/apt/lists/*;\n\n\n# Now that we have curl let's update again to add yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | sudo bash -\nRUN apt-get update\n\n# Now install everything else\nRUN apt-get install --no-install-recommends -y \\\n                          x11-apps \\\n                          apt-utils \\\n                          zsh \\\n                          curl \\\n                          git \\\n                          wget \\\n                          fontconfig \\\n                          mosh \\\n                          fonts-powerline \\\n                          htop \\\n                          build-essential \\\n                          python3-pip \\\n                          locales \\\n                          nodejs \\\n                          xclip \\\n                          xauth \\\n                          yarn && rm -rf /var/lib/apt/lists/*;\n\n\n# TMUX binary always screws me, just build from source\nADD ./templates/tmux/install_tmux.sh ./\nRUN ./install_tmux.sh && rm -f ./install_tmux.sh\n\n#########################################################################\n# UNIX CONFIG\n#########################################################################\n\n# Tmux makes our life difficult, set all of this stuff\nRUN echo \"export TERM=xterm-256color\" >> /etc/zsh/zprofile\nRUN echo \"export USER_HOME=${USER_HOME}\" >> /etc/zsh/zprofile\nRUN echo \"export LC_ALL=en_US.UTF-8\" >> /etc/zsh/zprofile\n\n# Make sshd directory accessible as non-root user\nRUN chmod 0755 /var/run/sshd\n# Disable password based authentication with ssh\nRUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config\n# We want X11 features via ssh (for graphical display, clipboard etc)\nRUN sed -i 's/#X11UseLocalhost yes/X11UseLocalhost no/' /etc/ssh/sshd_config\n# We should be able to send custom env vars\nRUN sed -i 's/#PermitUserEnvironment no/PermitUserEnvironment yes/' /etc/ssh/sshd_config\n\n# Enable ssh with phusion (https://github.com/phusion/baseimage-docker#enabling-ssh)\nRUN rm -f /etc/service/sshd/down\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n\n# We don't want to run as root even inside our container\nRUN adduser --disabled-password --shell /usr/bin/zsh --gecos '' $DEFAULT_USER\nRUN adduser $DEFAULT_USER sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN runuser -l $DEFAULT_USER -c 'mkdir -p $USER_HOME/.ssh'\n\nSHELL [\"/usr/bin/zsh\", \"-c\"]\n\nRUN apt-get clean && apt-get autoclean && apt-get autoremove\n"
}