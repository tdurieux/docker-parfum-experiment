{
  "startTime": 1674254465073,
  "endTime": 1674254466586,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the python slim image\nFROM python:3.8.3-slim\n\n# Add build deps for python packages\n# curl to install vendored poetry\n# g++ to build sksurv\nRUN apt-get update && \\\n    apt-get install --no-install-recommends curl g++ -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Set the working directory to app\nWORKDIR /app\n\n# Set the poetry version explicitly\nENV POETRY_VERSION=1.1.11\n# Unbuffer the logger so we always get logs\nENV PYTHONUNBUFFERED=1\n# Update the path for poetry python\nENV PATH=/root/.poetry/bin:/root/.local/bin:$PATH\n\n# Install vendored poetry\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\n\n# Add dep configs\nADD ./pyproject.toml .\nADD ./poetry.lock .\n\n# Install packages\n# Disable virtualenv creation so we just use the already-installed python\nRUN poetry config virtualenvs.create false && \\\n    poetry run pip install pip==20.0.2 && \\\n    poetry install && \\\n    rm -r ~/.cache/pip\n\n# Add everything\nADD . .\n\n# Build skranger\nRUN poetry run python buildpre.py\nRUN poetry install\n\n# Set the entrypoint to poetry\nENTRYPOINT [\"poetry\"]\n"
}