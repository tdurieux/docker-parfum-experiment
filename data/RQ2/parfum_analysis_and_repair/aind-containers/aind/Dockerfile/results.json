{
  "startTime": 1674255272034,
  "endTime": 1674255273320,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 2,
        "columnEnd": 164
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 146
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 97,
        "columnStart": 2,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# this dockerfile can be translated to `docker/dockerfile:1-experimental` syntax for enabling cache mounts:\n# $ ./hack/translate-dockerfile-runopt-directive.sh < Dockerfile | DOCKER_BUILDKIT=1 docker build -f -  .\n\nARG BASE=ubuntu:20.04\n\n# Sep 26, 2020\nARG ANBOX_COMMIT=170f1e029e753e782c66bffb05e91dd770d47dc3\n\n# ARG ANDROID_IMAGE=https://build.anbox.io/android-images/2018/07/19/android_amd64.img\n# Mirror\nARG ANDROID_IMAGE=https://github.com/AkihiroSuda/anbox-android-images-mirror/releases/download/snapshot-20180719/android_amd64.img\n# https://build.anbox.io/android-images/2018/07/19/android_amd64.img.sha256sum\nARG ANDROID_IMAGE_SHA256=6b04cd33d157814deaf92dccf8a23da4dc00b05ca6ce982a03830381896a8cca\n\nFROM ${BASE} AS anbox\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install -qq -y --no-install-recommends \\\n  build-essential \\\n  ca-certificates \\\n  cmake \\\n  cmake-data \\\n  cmake-extras \\\n  debhelper \\\n  dbus \\\n  git \\\n  google-mock \\\n  libboost-dev \\\n  libboost-filesystem-dev \\\n  libboost-log-dev \\\n  libboost-iostreams-dev \\\n  libboost-program-options-dev \\\n  libboost-system-dev \\\n  libboost-test-dev \\\n  libboost-thread-dev \\\n  libcap-dev \\\n  libegl1-mesa-dev \\\n  libexpat1-dev \\\n  libgles2-mesa-dev \\\n  libglm-dev \\\n  libgtest-dev \\\n  liblxc1 \\\n  libproperties-cpp-dev \\\n  libprotobuf-dev \\\n  libsdl2-dev \\\n  libsdl2-image-dev \\\n  libsystemd-dev \\\n  lxc-dev \\\n  pkg-config \\\n  protobuf-compiler \\\n  python2 && rm -rf /var/lib/apt/lists/*;\nRUN git clone --recursive https://github.com/anbox/anbox /anbox\nWORKDIR /anbox\nARG ANBOX_COMMIT\nRUN git pull && git checkout ${ANBOX_COMMIT} && git submodule update --recursive\nCOPY ./src/patches/anbox /patches\n# `git am` requires user info to be set\nRUN git config user.email \"nobody@example.com\" && \\\n  git config user.name \"AinD Build Script\" && \\\n  if [ -f /patches/*.patch ]; then git am /patches/*.patch && git show --summary; fi\n# runopt = --mount=type=cache,id=aind-anbox,target=/build\nRUN ./scripts/build.sh && \\\n  cp -f ./build/src/anbox /anbox-binary\n\nFROM ${BASE} AS android-img\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install -qq -y --no-install-recommends \\\n  ca-certificates curl && rm -rf /var/lib/apt/lists/*;\nARG ANDROID_IMAGE\nARG ANDROID_IMAGE_SHA256\nRUN curl -f --retry 10 -L -o /android.img $ANDROID_IMAGE \\\n    && echo $ANDROID_IMAGE_SHA256 /android.img | sha256sum --check\n\nFROM ${BASE}\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install -qq -y --no-install-recommends \\\n# base system\n  ca-certificates curl iproute2 jq kmod socat \\\n# lxc\n  iptables lxc \\\n# anbox deps\n  libboost-log1.71.0  libboost-thread1.71.0 libboost-program-options1.71.0 libboost-iostreams1.71.0 libboost-filesystem1.71.0 libegl1-mesa libgles2-mesa libprotobuf-lite17 libsdl2-2.0-0 libsdl2-image-2.0-0 \\\n# squashfuse\n  squashfuse fuse3 \\\n# adb\n  adb \\\n# systemd\n  dbus dbus-user-session systemd systemd-container systemd-sysv \\\n# X11\n  xvfb x11vnc \\\n# noVNC\n  websockify novnc \\\n# WM\n  fvwm xterm \\\n# debug utilities\n  busybox figlet file strace less && \\\n# ...\n  useradd --create-home --home-dir /home/user --uid 1000 -G systemd-journal user && \\\n  curl -f -L -o /docker-entrypoint.sh https://raw.githubusercontent.com/AkihiroSuda/containerized-systemd/6ced78a9df65c13399ef1ce41c0bedc194d7cff6/docker-entrypoint.sh && \\\n  chmod +x /docker-entrypoint.sh && rm -rf /var/lib/apt/lists/*;\n# apk-pre.d is for pre-installed apks, /apk.d for the mountpoint for user-specific apks\nRUN mkdir -p /apk-pre.d /apk.d && \\\n  curl -f -L -o /apk-pre.d/FDroid.apk https://f-droid.org/FDroid.apk && \\\n  curl -f -L -o /apk-pre.d/firefox.apk https://ftp.mozilla.org/pub/mobile/releases/68.9.0/android-x86_64/en-US/fennec-68.9.0.en-US.android-x86_64.apk && \\\n  chmod 444 /apk-pre.d/*\nCOPY --from=android-img /android.img /aind-android.img\nCOPY --from=anbox /anbox-binary /usr/local/bin/anbox\nCOPY --from=anbox /anbox/scripts/anbox-bridge.sh /usr/local/share/anbox/anbox-bridge.sh\nCOPY --from=anbox /anbox/data/ui /usr/local/share/anbox/ui\nRUN ldconfig\nADD src/anbox-container-manager-pre.sh /usr/local/bin/anbox-container-manager-pre.sh\nADD src/anbox-container-manager.service /lib/systemd/system/anbox-container-manager.service\nRUN systemctl enable anbox-container-manager\nADD src/unsudo /usr/local/bin\nADD src/docker-2ndboot.sh  /home/user\n\nENV WEBMODE 0\n# Usage: docker run --rm --privileged -v /:/host --entrypoint bash ghcr.io/aind-containers/aind -exc \"cp -f /install-kmod.sh /host/aind-install-kmod.sh && cd /host && chroot . /aind-install-kmod.sh\"\nADD hack/install-kmod.sh /\nVOLUME /var/lib/anbox\nENTRYPOINT [\"/docker-entrypoint.sh\", \"unsudo\"]\nEXPOSE 5900\nEXPOSE 8080\nHEALTHCHECK --interval=15s --timeout=10s --start-period=60s --retries=5 \\\n  CMD [\"pgrep\", \"-f\", \"org.anbox.appmgr\"]\nCMD [\"/home/user/docker-2ndboot.sh\"]\n"
}