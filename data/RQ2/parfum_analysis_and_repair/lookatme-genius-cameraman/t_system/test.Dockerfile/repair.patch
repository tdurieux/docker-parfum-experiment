diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lookatme-genius-cameraman/t_system/test.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lookatme-genius-cameraman/t_system/test.Dockerfile/repaired.Dockerfile
index e51341f..e1e59b8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lookatme-genius-cameraman/t_system/test.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lookatme-genius-cameraman/t_system/test.Dockerfile/repaired.Dockerfile
@@ -8,15 +8,15 @@ MAINTAINER Cem Baybars GÜÇLÜ "cem.baybars@gmail.com"
 
 # Install all APT dependencies
 RUN apt-get update
-RUN apt-get -qqy install python3 python3-all-dev libglib2.0-dev libcairo2-dev libgtk2.0-dev
-RUN apt-get -qqy install python3-minimal ${misc:Pre-Depends}
-RUN apt-get -qqy install ${python3:Depends} ${misc:Depends} flite portaudio19-dev python3-all-dev flac libnotify-bin python-egenix-mx-base-dev python3-lxml python3-pyaudio python3-httplib2 python3-pip python-flake8 libgstreamer1.0-dev gstreamer1.0-plugins-good gstreamer1.0-tools subversion libatlas-base-dev automake autoconf libtool
-RUN apt-get -qqy install dnsmasq hostapd
+RUN apt-get -qqy --no-install-recommends install python3 python3-all-dev libglib2.0-dev libcairo2-dev libgtk2.0-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -qqy --no-install-recommends install python3-minimal ${misc:Pre-Depends} && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -qqy --no-install-recommends install ${python3:Depends} ${misc:Depends} flite portaudio19-dev python3-all-dev flac libnotify-bin python-egenix-mx-base-dev python3-lxml python3-pyaudio python3-httplib2 python3-pip python-flake8 libgstreamer1.0-dev gstreamer1.0-plugins-good gstreamer1.0-tools subversion libatlas-base-dev automake autoconf libtool && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -qqy --no-install-recommends install dnsmasq hostapd && rm -rf /var/lib/apt/lists/*;
 
 ## Install OpenCV
-RUN apt-get -qqy install build-essential
-RUN apt-get -qqy install cmake git unzip libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
-RUN apt-get install -qqy python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
+RUN apt-get -qqy --no-install-recommends install build-essential && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -qqy --no-install-recommends install cmake git unzip libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -qqy python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev && rm -rf /var/lib/apt/lists/*;
 RUN mkdir -p ~/opencv cd ~/opencv && \
     wget https://github.com/Itseez/opencv/archive/3.2.0.zip && \
     unzip 3.2.0.zip && rm 3.2.0.zip && \
@@ -42,10 +42,10 @@ WORKDIR /app
 ADD . /app
 
 # Install pip3
-RUN apt-get install -y python3-pip
+RUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
 
 # Install T_System Python package
-RUN pip3 install .
+RUN pip3 install --no-cache-dir .
 
 # Define environment variables
 ENV T_SYSTEM_DIR /usr/share/t_system
@@ -54,9 +54,9 @@ ENV T_SYSTEM_DIR /usr/share/t_system
 RUN mkdir $T_SYSTEM_DIR
 
 # Retry to install the Python package dependencies in case of a failure
-RUN pip3 install --upgrade picamera>=1.13 RPi.GPIO>=0.6.5 tinydb==3.9.0.post1 numpy paho-mqtt>=1.4.0 face_recognition multipledispatch wireless netifaces psutil pyaccesspoint wifi flask schema gitpython elevate imutils gpiozero
-RUN pip3 install pytest-faulthandler
-RUN pip3 install --upgrade flake8 sphinx sphinx_rtd_theme recommonmark m2r pytest docutils
+RUN pip3 install --no-cache-dir --upgrade picamera >=1.13 RPi.GPIO >=0.6.5 tinydb==3.9.0.post1 numpy paho-mqtt >=1.4.0 face_recognition multipledispatch wireless netifaces psutil pyaccesspoint wifi flask schema gitpython elevate imutils gpiozero
+RUN pip3 install --no-cache-dir pytest-faulthandler
+RUN pip3 install --no-cache-dir --upgrade flake8 sphinx sphinx_rtd_theme recommonmark m2r pytest docutils
 
 # Print success message
 RUN echo -e "\n\T_System is successfully installed into the container.\n"