diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/schnatterer/smeagol-galore/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/schnatterer/smeagol-galore/Dockerfile/repaired.Dockerfile
index 7f880bb..e6330e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/schnatterer/smeagol-galore/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/schnatterer/smeagol-galore/Dockerfile/repaired.Dockerfile
@@ -14,7 +14,7 @@ ENV SMEAGOL_MD5=78b9fec96ad15e841a32675995ef9421
 # https://packages.scm-manager.org/service/rest/repository/browse/plugin-releases/sonia/scm/plugins/
 ENV SCM_SCRIPT_PLUGIN_VERSION=2.3.2
 # e.g. https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-script-plugin/2.3.0/scm-script-plugin-2.3.0.smp.sha256
-ENV SCM_SCRIPT_PLUGIN_SHA256=4e52dc010b0682c9321f22573f698a59f0b667e3ef2a3a6885ffa57feeebfb5e 
+ENV SCM_SCRIPT_PLUGIN_SHA256=4e52dc010b0682c9321f22573f698a59f0b667e3ef2a3a6885ffa57feeebfb5e
 ENV SCM_CODE_EDITOR_PLUGIN_VERSION=1.0.0
 ENV SCM_CODE_EDITOR_PLUGIN_SHA256=c5d80fa7ab9723fd3d41b8422ec83433bc3376f59850d97a589fe093f5ca8989
 ENV SCM_CAS_PLUGIN_VERSION=2.4.0
@@ -31,8 +31,7 @@ ENV CATALINA_HOME=/dist/tomcat/webapps/
 
 USER root
 RUN mkdir -p ${CATALINA_HOME}
-RUN apt-get update
-RUN apt-get install -y wget zip gpg
+RUN apt-get update && apt-get install --no-install-recommends -y wget zip gpg && rm -rf /var/lib/apt/lists/*;
 
 
 FROM maven as cas-mavencache
@@ -44,7 +43,7 @@ RUN mvn dependency:resolve dependency:resolve-plugins
 
 
 FROM maven as cas-mavenbuild
-ENV MAVEN_OPTS='-Dmaven.repo.local=/mvn' 
+ENV MAVEN_OPTS='-Dmaven.repo.local=/mvn'
 COPY --from=cas-mavencache /mvn/ /mvn/
 ADD cas/ /cas/
 WORKDIR /cas
@@ -73,26 +72,26 @@ ENV SCM_PKG_URL=https://packages.scm-manager.org/repository/releases/sonia/scm/p
 ENV SCM_REQUIRED_PLUGINS=/dist/opt/scm-server/required-plugins
 
 RUN curl --fail -Lks ${SCM_PKG_URL} -o /tmp/scm-server.tar.gz \
-    && echo "${SCM_SHA256} */tmp/scm-server.tar.gz" | sha256sum -c -
+    && echo "${SCM_SHA256}  */tmp/scm-server.tar.gz" | sha256sum -c -
 RUN curl --fail -Lks ${SCM_PKG_URL}.asc -o /tmp/scm-server.tar.gz.asc
-RUN gpg --receive-keys 8A44E41377D51FA4
-RUN gpg --batch --verify /tmp/scm-server.tar.gz.asc /tmp/scm-server.tar.gz
+RUN gpg --batch --receive-keys 8A44E41377D51FA4
+RUN gpg --batch --verify /tmp/scm-server.tar.gz.asc /tmp/scm-server.tar.gz && rm /tmp/scm-server.tar.gz.asc
 RUN gunzip /tmp/scm-server.tar.gz
-RUN tar -C /opt -xf /tmp/scm-server.tar
+RUN tar -C /opt -xf /tmp/scm-server.tar && rm /tmp/scm-server.tar
 RUN unzip -o /opt/scm-server/var/webapp/scm-webapp.war -d ${CATALINA_HOME}/scm
 # download essential SCMM plugins
 RUN mkdir -p ${SCM_REQUIRED_PLUGINS}
 # Plugins are not signed, so no verification possible here
 RUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-rest-legacy-plugin/${SCM_REST_LEGACY_PLUGIN_VERSION}/scm-rest-legacy-plugin-${SCM_REST_LEGACY_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-rest-legacy-plugin.smp \
-  && echo "${SCM_REST_LEGACY_PLUGIN_MD5} *${SCM_REQUIRED_PLUGINS}/scm-rest-legacy-plugin.smp" | md5sum -c - 
+  && echo "${SCM_REST_LEGACY_PLUGIN_MD5} *${SCM_REQUIRED_PLUGINS}/scm-rest-legacy-plugin.smp" | md5sum -c -
 RUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-code-editor-plugin/${SCM_CODE_EDITOR_PLUGIN_VERSION}/scm-code-editor-plugin-${SCM_CODE_EDITOR_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-code-editor-plugin.smp \
-  && echo "${SCM_CODE_EDITOR_PLUGIN_SHA256} *${SCM_REQUIRED_PLUGINS}/scm-code-editor-plugin.smp" | sha256sum -c - 
+  && echo "${SCM_CODE_EDITOR_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-code-editor-plugin.smp" | sha256sum -c -
 RUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-script-plugin/${SCM_SCRIPT_PLUGIN_VERSION}/scm-script-plugin-${SCM_SCRIPT_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-script-plugin.smp \
-  && echo "${SCM_SCRIPT_PLUGIN_SHA256} *${SCM_REQUIRED_PLUGINS}/scm-script-plugin.smp" | sha256sum -c - 
+  && echo "${SCM_SCRIPT_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-script-plugin.smp" | sha256sum -c -
 RUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-cas-plugin/${SCM_CAS_PLUGIN_VERSION}/scm-cas-plugin-${SCM_CAS_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-cas-plugin.smp \
-  && echo "${SCM_CAS_PLUGIN_SHA256} *${SCM_REQUIRED_PLUGINS}/scm-cas-plugin.smp" | sha256sum -c - 
+  && echo "${SCM_CAS_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-cas-plugin.smp" | sha256sum -c -
 RUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-smeagol-plugin/${SCM_SMEAGOL_PLUGIN_VERSION}/scm-smeagol-plugin-${SCM_SMEAGOL_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-smeagol-plugin.smp \
-  && echo "${SCM_SMEAGOL_PLUGIN_SHA256} *${SCM_REQUIRED_PLUGINS}/scm-smeagol-plugin.smp" | sha256sum -c - 
+  && echo "${SCM_SMEAGOL_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-smeagol-plugin.smp" | sha256sum -c -
 
 # Make logging less verbose
 COPY /scm/logback.xml ${CATALINA_HOME}/scm/WEB-INF/classes/logback.xml
@@ -102,7 +101,7 @@ COPY scm/resources /dist
 
 FROM builder as smeagol-downloader
 RUN wget -O /tmp/smeagol-exec.war https://jitpack.io/com/github/cloudogu/smeagol/${SMEAGOL_VERSION}/smeagol-${SMEAGOL_VERSION}.war \
-  && echo "${SMEAGOL_MD5} */tmp/smeagol-exec.war" | md5sum -c - 
+  && echo "${SMEAGOL_MD5} */tmp/smeagol-exec.war" | md5sum -c -
 
 # Set plantuml.com as plantuml renderer. Alternative would be to deploy plantuml
 # "Fix" executable war (which seems to confuse jar & zip utilities)
@@ -110,10 +109,10 @@ ENV PLANTUMLSERVER="https://www.plantuml.com/plantuml/png/"
 RUN set -x && \
   zip -F /tmp/smeagol-exec.war --out /tmp/smeagol.war && \
   unzip /tmp/smeagol.war -d ${CATALINA_HOME}/smeagol
-RUN sed -i "s#rendererURL:\"/plantuml/png/#rendererURL:\"${PLANTUMLSERVER}#g" "$(ls ${CATALINA_HOME}/smeagol/WEB-INF/classes/static/static/js/main*.js)"  
+RUN sed -i "s#rendererURL:\"/plantuml/png/#rendererURL:\"${PLANTUMLSERVER}#g" "$(ls ${CATALINA_HOME}/smeagol/WEB-INF/classes/static/static/js/main*.js)" 
 # Patch link to SCM-Manager into Smeagol UI
 RUN sed -i 's#\(navbar-right"},e\)#\1,E.a.createElement("li",null, E.a.createElement("a",{href:"/scm"},"SCM-Manager"))#g' "$(ls ${CATALINA_HOME}/smeagol/WEB-INF/classes/static/static/js/main*.js)"
-  
+
 # Config
 COPY smeagol/application.yml /dist/application.yml
 COPY smeagol/logback.xml ${CATALINA_HOME}/smeagol/WEB-INF/classes/logback.xml
@@ -156,14 +155,14 @@ RUN mkdir -p /dist/home/tomcat/.smeagol
 # So we need to make sure to chmod everything we need at run time to the group not only the user.
 # That's why we use 770 instead of 700.
 RUN chmod -R 770 /dist
-    
+
 # Create Tomcat User so SCMM has a HOME to write to
 RUN useradd --uid 1001 --gid 0 --shell /bin/bash --create-home tomcat && \
     cp /etc/passwd /dist/etc
 
 # Use authbind to allow tomcat user to bin to port 443
 # Unfortunately, COPYing capabilities does not work in classic docker build
-# https://github.com/moby/moby/issues/20435 
+# https://github.com/moby/moby/issues/20435
 #RUN setcap CAP_NET_BIND_SERVICE=+ep /opt/java/openjdk/bin/java # requires libcap2-bin
 # Another option could be to install libcap and create a "capability.conf" with
 # cap_net_bind_service		tomcat
@@ -184,7 +183,7 @@ RUN rm -rf /dist/static/.well-known/acme-challenge
 RUN ln -s /tomcat/webapps/ROOT/.well-known/acme-challenge /dist/static/.well-known/acme-challenge
 RUN chmod 770 /dist/tomcat/webapps/ROOT/.well-known/acme-challenge
 
-# As SG's setup is rather complex the essential code of meta-entrypoint was included (and altered) in entrypoint.sh 
+# As SG's setup is rather complex the essential code of meta-entrypoint was included (and altered) in entrypoint.sh
 RUN rm /dist/meta-entrypoint.sh
 
 # Copy APR lib