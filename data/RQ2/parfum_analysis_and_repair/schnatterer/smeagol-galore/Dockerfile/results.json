{
  "startTime": 1674249159042,
  "endTime": 1674249160115,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 113
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 5,
        "columnEnd": 97
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 5,
        "columnEnd": 105
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Define image versions for all stages\nFROM adoptopenjdk/openjdk11:jre-11.0.13_8-debianslim as jre\nFROM maven:3.8.4-jdk-11-slim as maven\nFROM schnatterer/letsencrypt-tomcat:0.4.0 as letsencrypt-tomcat\n\n# Define global values in a central, DRY way\nFROM jre as builder\n\n# Note: On update patching the link to SCM-Manager into Smeagol UI has to be adapted :/\nENV SMEAGOL_VERSION=v1.6.1-1\n# https://jitpack.io/com/github/cloudogu/smeagol/${SMEAGOL_VERSION}/smeagol-${SMEAGOL_VERSION}.war.md5\nENV SMEAGOL_MD5=78b9fec96ad15e841a32675995ef9421\n\n# https://packages.scm-manager.org/service/rest/repository/browse/plugin-releases/sonia/scm/plugins/\nENV SCM_SCRIPT_PLUGIN_VERSION=2.3.2\n# e.g. https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-script-plugin/2.3.0/scm-script-plugin-2.3.0.smp.sha256\nENV SCM_SCRIPT_PLUGIN_SHA256=4e52dc010b0682c9321f22573f698a59f0b667e3ef2a3a6885ffa57feeebfb5e\nENV SCM_CODE_EDITOR_PLUGIN_VERSION=1.0.0\nENV SCM_CODE_EDITOR_PLUGIN_SHA256=c5d80fa7ab9723fd3d41b8422ec83433bc3376f59850d97a589fe093f5ca8989\nENV SCM_CAS_PLUGIN_VERSION=2.4.0\nENV SCM_CAS_PLUGIN_SHA256=bd9a0e0794fb1be40f357cbbde7396889055bd1af2c42b4f2cdb34763c5fb372\nENV SCM_SMEAGOL_PLUGIN_VERSION=1.2.1\nENV SCM_SMEAGOL_PLUGIN_SHA256=d588537fc77ddb85adaaecf43a94a3e0cf32880ec4d3b0aadf9d7c0fc50d344d\nENV SCM_REST_LEGACY_PLUGIN_VERSION=2.0.0\nENV SCM_REST_LEGACY_PLUGIN_MD5=1d7943bc76b0e88a79770f3285c3f272\nENV SCM_VERSION=2.28.0\n# https://packages.scm-manager.org/repository/releases/sonia/scm/packaging/unix/${SCM_VERSION}/unix-${SCM_VERSION}.tar.gz.sha256\nENV SCM_SHA256=c4108d671304e916003391ac81f74f04c699e5c24587539c86107c9b813ed1f6\n\nENV CATALINA_HOME=/dist/tomcat/webapps/\n\nUSER root\nRUN mkdir -p ${CATALINA_HOME}\nRUN apt-get update && apt-get install --no-install-recommends -y wget zip gpg && rm -rf /var/lib/apt/lists/*;\n\n\nFROM maven as cas-mavencache\nENV MAVEN_OPTS='-Dmaven.repo.local=/mvn'\nADD cas/pom.xml /cas/pom.xml\nWORKDIR /cas\n# Using go-offline results in issues resolving xmldsig from http://developer.ja-sig.org/maven2/ :-/\nRUN mvn dependency:resolve dependency:resolve-plugins\n\n\nFROM maven as cas-mavenbuild\nENV MAVEN_OPTS='-Dmaven.repo.local=/mvn'\nCOPY --from=cas-mavencache /mvn/ /mvn/\nADD cas/ /cas/\nWORKDIR /cas\nRUN mvn compile war:exploded\n\n\n\nFROM maven as tomcat-mavencache\nENV MAVEN_OPTS='-Dmaven.repo.local=/mvn'\nADD tomcat/pom.xml /tomcat/pom.xml\nWORKDIR /tomcat\nRUN mvn dependency:go-offline\n\nFROM maven as tomcat-mavenbuild\nENV MAVEN_OPTS='-Dmaven.repo.local=/mvn'\nCOPY --from=tomcat-mavencache /mvn/ /mvn/\nADD tomcat/ /tomcat/\nWORKDIR /tomcat\nRUN mvn package\n\n\n# User separate downloader stages for better caching (especially downloads)\nFROM builder as scm-downloader\n\nENV SCM_PKG_URL=https://packages.scm-manager.org/repository/releases/sonia/scm/packaging/unix/${SCM_VERSION}/unix-${SCM_VERSION}.tar.gz\nENV SCM_REQUIRED_PLUGINS=/dist/opt/scm-server/required-plugins\n\nRUN curl --fail -Lks ${SCM_PKG_URL} -o /tmp/scm-server.tar.gz \\\n    && echo \"${SCM_SHA256}  */tmp/scm-server.tar.gz\" | sha256sum -c -\nRUN curl --fail -Lks ${SCM_PKG_URL}.asc -o /tmp/scm-server.tar.gz.asc\nRUN gpg --batch --receive-keys 8A44E41377D51FA4\nRUN gpg --batch --verify /tmp/scm-server.tar.gz.asc /tmp/scm-server.tar.gz && rm /tmp/scm-server.tar.gz.asc\nRUN gunzip /tmp/scm-server.tar.gz\nRUN tar -C /opt -xf /tmp/scm-server.tar && rm /tmp/scm-server.tar\nRUN unzip -o /opt/scm-server/var/webapp/scm-webapp.war -d ${CATALINA_HOME}/scm\n# download essential SCMM plugins\nRUN mkdir -p ${SCM_REQUIRED_PLUGINS}\n# Plugins are not signed, so no verification possible here\nRUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-rest-legacy-plugin/${SCM_REST_LEGACY_PLUGIN_VERSION}/scm-rest-legacy-plugin-${SCM_REST_LEGACY_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-rest-legacy-plugin.smp \\\n  && echo \"${SCM_REST_LEGACY_PLUGIN_MD5} *${SCM_REQUIRED_PLUGINS}/scm-rest-legacy-plugin.smp\" | md5sum -c -\nRUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-code-editor-plugin/${SCM_CODE_EDITOR_PLUGIN_VERSION}/scm-code-editor-plugin-${SCM_CODE_EDITOR_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-code-editor-plugin.smp \\\n  && echo \"${SCM_CODE_EDITOR_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-code-editor-plugin.smp\" | sha256sum -c -\nRUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-script-plugin/${SCM_SCRIPT_PLUGIN_VERSION}/scm-script-plugin-${SCM_SCRIPT_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-script-plugin.smp \\\n  && echo \"${SCM_SCRIPT_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-script-plugin.smp\" | sha256sum -c -\nRUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-cas-plugin/${SCM_CAS_PLUGIN_VERSION}/scm-cas-plugin-${SCM_CAS_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-cas-plugin.smp \\\n  && echo \"${SCM_CAS_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-cas-plugin.smp\" | sha256sum -c -\nRUN curl --fail -Lks https://packages.scm-manager.org/repository/plugin-releases/sonia/scm/plugins/scm-smeagol-plugin/${SCM_SMEAGOL_PLUGIN_VERSION}/scm-smeagol-plugin-${SCM_SMEAGOL_PLUGIN_VERSION}.smp -o ${SCM_REQUIRED_PLUGINS}/scm-smeagol-plugin.smp \\\n  && echo \"${SCM_SMEAGOL_PLUGIN_SHA256}  *${SCM_REQUIRED_PLUGINS}/scm-smeagol-plugin.smp\" | sha256sum -c -\n\n# Make logging less verbose\nCOPY /scm/logback.xml ${CATALINA_HOME}/scm/WEB-INF/classes/logback.xml\n# config\nCOPY scm/resources /dist\n\n\nFROM builder as smeagol-downloader\nRUN wget -O /tmp/smeagol-exec.war https://jitpack.io/com/github/cloudogu/smeagol/${SMEAGOL_VERSION}/smeagol-${SMEAGOL_VERSION}.war \\\n  && echo \"${SMEAGOL_MD5} */tmp/smeagol-exec.war\" | md5sum -c -\n\n# Set plantuml.com as plantuml renderer. Alternative would be to deploy plantuml\n# \"Fix\" executable war (which seems to confuse jar & zip utilities)\nENV PLANTUMLSERVER=\"https://www.plantuml.com/plantuml/png/\"\nRUN set -x && \\\n  zip -F /tmp/smeagol-exec.war --out /tmp/smeagol.war && \\\n  unzip /tmp/smeagol.war -d ${CATALINA_HOME}/smeagol\nRUN sed -i \"s#rendererURL:\\\"/plantuml/png/#rendererURL:\\\"${PLANTUMLSERVER}#g\" \"$(ls ${CATALINA_HOME}/smeagol/WEB-INF/classes/static/static/js/main*.js)\" \n# Patch link to SCM-Manager into Smeagol UI\nRUN sed -i 's#\\(navbar-right\"},e\\)#\\1,E.a.createElement(\"li\",null, E.a.createElement(\"a\",{href:\"/scm\"},\"SCM-Manager\"))#g' \"$(ls ${CATALINA_HOME}/smeagol/WEB-INF/classes/static/static/js/main*.js)\"\n\n# Config\nCOPY smeagol/application.yml /dist/application.yml\nCOPY smeagol/logback.xml ${CATALINA_HOME}/smeagol/WEB-INF/classes/logback.xml\n\n\nFROM builder as aggregator\n# CAS\nCOPY --from=cas-mavenbuild /cas/target/cas ${CATALINA_HOME}/cas\n# Mitigate any possible attack vectors similar to Log4Shell (CVE-2021-44228)\n# https://www.slf4j.org/log4shell.html\nRUN cd ${CATALINA_HOME}/cas/WEB-INF/lib/ && zip -q -d log4j-*.jar org/apache/log4j/net/JMSAppender.class\n# config\nCOPY cas/etc/ /dist/etc/\n\nCOPY --from=scm-downloader /dist /dist\nCOPY --from=smeagol-downloader /dist /dist\n\n# Use smeagol favicons also for cas\nRUN cp ${CATALINA_HOME}/smeagol/WEB-INF/classes/static/favicon* ${CATALINA_HOME}/cas\n\n# Root webapp\nCOPY tomcat/webapps /dist/tomcat/webapps\n\nCOPY entrypoint.sh /dist/\n\n# Needed when running with read-only file system and mounting this folder as volume (which leads to being owend by 0:0)\nRUN mkdir /dist/tomcat/work\n# Allow for editing cacerts in entrypoint.sh\nRUN mkdir -p /dist/opt/java/openjdk/lib/security/ && \\\n    cp /opt/java/openjdk/lib/security/cacerts /dist/opt/java/openjdk/lib/security/cacerts\n# Create room for certs\nRUN mkdir -p /dist/config/certs\n# Make home folder writable\nRUN mkdir -p /dist/home/tomcat/.scm\nRUN mkdir -p /dist/home/tomcat/.smeagol\n# Once copied to the final stage everythings seems to be owend by root:root.\n# That is, the owner seems not to be preseverd, even when chown to UID 1001 here.\n# At least on Docker Hub this still pehttps://github.com/moby/moby/pull/38599oby/moby/pull/38599\n# To make things easier the final image will run as root group. For more info on this \"pattern\", see https://docs.openshift.com/container-platform/4.3/openshift_images/create-images.html#images-create-guide-openshift_create-images\n# So we need to make sure to chmod everything we need at run time to the group not only the user.\n# That's why we use 770 instead of 700.\nRUN chmod -R 770 /dist\n\n# Create Tomcat User so SCMM has a HOME to write to\nRUN useradd --uid 1001 --gid 0 --shell /bin/bash --create-home tomcat && \\\n    cp /etc/passwd /dist/etc\n\n# Use authbind to allow tomcat user to bin to port 443\n# Unfortunately, COPYing capabilities does not work in classic docker build\n# https://github.com/moby/moby/issues/20435\n#RUN setcap CAP_NET_BIND_SERVICE=+ep /opt/java/openjdk/bin/java # requires libcap2-bin\n# Another option could be to install libcap and create a \"capability.conf\" with\n# cap_net_bind_service\t\ttomcat\nRUN cd /tmp && apt-get download authbind\nRUN dpkg-deb -X /tmp/*.deb /dist\nRUN touch /dist/etc/authbind/byport/443 /dist/etc/authbind/byport/80 && \\\n    chown 1001:0 /dist/etc/authbind/byport/* && \\\n    chmod 550 /dist/etc/authbind/byport/*\n\n# Copy letsencrypt-related stuff\nCOPY --from=letsencrypt-tomcat /letsencrypt /dist\n\n# Serve /static\n# It would be simpler to link ROOT -> static but it seems that tomcat does not follow symlinks when serving static content\n# So just do it the other way round\nRUN mkdir -p /dist/tomcat/webapps/ROOT/.well-known/acme-challenge\nRUN rm -rf /dist/static/.well-known/acme-challenge\nRUN ln -s /tomcat/webapps/ROOT/.well-known/acme-challenge /dist/static/.well-known/acme-challenge\nRUN chmod 770 /dist/tomcat/webapps/ROOT/.well-known/acme-challenge\n\n# As SG's setup is rather complex the essential code of meta-entrypoint was included (and altered) in entrypoint.sh\nRUN rm /dist/meta-entrypoint.sh\n\n# Copy APR lib\nCOPY --from=letsencrypt-tomcat /lib /dist/\n\n# Copy embedded tomcat\nCOPY --from=tomcat-mavenbuild /tomcat/target/tomcat-jar-with-dependencies.jar /dist/app/app.jar\n\n\nFROM jre\n# Don't --chown=1001:0  here, or some binaries/libraries won't work (libcap/authbind)\nCOPY --from=aggregator /dist /\n\nVOLUME /home/tomcat/.scm\nVOLUME /home/tomcat/.smeagol\nEXPOSE 8443 2222\nUSER 1001:0\nENTRYPOINT [ \"/entrypoint.sh\" ]"
}