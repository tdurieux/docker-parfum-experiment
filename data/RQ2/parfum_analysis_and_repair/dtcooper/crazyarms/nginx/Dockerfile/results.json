{
  "startTime": 1674220139610,
  "endTime": 1674220140477,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:alpine AS builder\n\n# TODO: Pin version of nchan\n\n# Adapted from https://gist.github.com/hermanbanken/96f0ff298c162a522ddbba44cad31081#gistcomment-3555604\nRUN apk add --no-cache \\\n        curl \\\n        gcc \\\n        gd-dev \\\n        geoip-dev \\\n        gnupg \\\n        libc-dev \\\n        libxslt-dev \\\n        linux-headers \\\n        make \\\n        openssl-dev \\\n        pcre-dev \\\n        zlib-dev\n\nWORKDIR /tmp\n\nRUN curl -f -sL \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" | tar xzf - \\\n    && curl -f -sL \"https://github.com/slact/nchan/archive/master.tar.gz\" | tar xzf -\n\nRUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') \\\n    CONFARGS=${CONFARGS/-Os -fomit-frame-pointer -g/-Os} \\\n    && cd \"nginx-${NGINX_VERSION}\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-compat $CONFARGS \"--add-dynamic-module=../nchan-master\" \\\n    && make && make install\n\n\nFROM nginx:alpine\n\nCOPY --from=builder /usr/lib/nginx/modules/ngx_nchan_module.so /usr/local/nginx/modules/ngx_nchan_module.so\n\nENV NOVNC_VERSION \"1.2.0\"\n\nRUN apk add --no-cache \\\n        certbot \\\n        certbot-nginx \\\n        openssl \\\n        py3-pip\n\nRUN pip install --no-cache-dir j2cli\n\nRUN curl -f -sLo /usr/local/bin/wait-for https://raw.githubusercontent.com/eficode/wait-for/master/wait-for \\\n    curl -sL curl \"https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz\" | tar xz -C /tmp \\\n    && mv \"/tmp/noVNC-${NOVNC_VERSION}\" /usr/share/noVNC \\\n    && chmod +x /usr/local/bin/wait-for\n\nRUN sed -i '1s/^/# Load nchan module\\nload_module \\/usr\\/local\\/nginx\\/modules\\/ngx_nchan_module.so;\\n/' /etc/nginx/nginx.conf\n\nCOPY image/ /\n"
}