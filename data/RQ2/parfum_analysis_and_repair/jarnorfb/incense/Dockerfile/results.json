{
  "startTime": 1674247876514,
  "endTime": 1674247877631,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM continuumio/miniconda3\n\nARG USERNAME=vscode\n# Adapt to your output of id -u\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Configure apt\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils 2>&1 && rm -rf /var/lib/apt/lists/*;\n\n# Create the user\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    #\n    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;\n\n# Install git, process tools, lsb-release (common in install instructions for CLIs)\nRUN apt -y --no-install-recommends install git procps lsb-release ffmpeg vim exuberant-ctags zsh wget && rm -rf /var/lib/apt/lists/*;\n\n# Install any missing dependencies for enhanced language service\nRUN apt install --no-install-recommends -y libicu[0-9][0-9] && rm -rf /var/lib/apt/lists/*;\n\n# Clean up\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\nENV DEBIAN_FRONTEND=dialog\n\nRUN chown -R ${USER_UID}:${USER_GID} /opt/conda/\n\nUSER $USERNAME\n\nENV HOME /home/${USERNAME}\n\n\nRUN mkdir -p ${HOME}/.ssh \\\n    && mkdir -p ${HOME}/.vscode-server \\\n    && mkdir -p ${HOME}/workspace\n\nWORKDIR ${HOME}/workspace\n\n# Install Python dependencies from requirements.txt if it exists\nRUN conda create -n env python=3.6\nRUN echo \"source activate env\" > ~/.bashrc\nENV PATH /opt/conda/envs/env/bin:$PATH\nRUN conda install virtualenv\nRUN pip install --no-cache-dir tox-conda\nCOPY requirements.txt requirements-dev.txt ${HOME}/workspace/\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\n\nENV TERM=xterm \\\n    ZSH_THEME=agnoster \\\n    EDITOR=vi\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh\nENV SHELL /usr/bin/zsh\n"
}