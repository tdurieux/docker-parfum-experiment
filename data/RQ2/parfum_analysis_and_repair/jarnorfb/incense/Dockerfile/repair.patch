diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jarnorfb/incense/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jarnorfb/incense/Dockerfile/repaired.Dockerfile
index b1ff106..f8a259b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jarnorfb/incense/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jarnorfb/incense/Dockerfile/repaired.Dockerfile
@@ -8,7 +8,7 @@ ARG USER_GID=$USER_UID
 # Configure apt
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update \
-    && apt-get -y install --no-install-recommends apt-utils 2>&1
+    && apt-get -y install --no-install-recommends apt-utils 2>&1 && rm -rf /var/lib/apt/lists/*;
 
 # Create the user
 RUN groupadd --gid $USER_GID $USERNAME \
@@ -16,15 +16,15 @@ RUN groupadd --gid $USER_GID $USERNAME \
     #
     # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
     && apt-get update \
-    && apt-get install -y sudo \
+    && apt-get install --no-install-recommends -y sudo \
     && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
-    && chmod 0440 /etc/sudoers.d/$USERNAME
+    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;
 
 # Install git, process tools, lsb-release (common in install instructions for CLIs)
-RUN apt -y install git procps lsb-release ffmpeg vim exuberant-ctags zsh wget
+RUN apt -y --no-install-recommends install git procps lsb-release ffmpeg vim exuberant-ctags zsh wget && rm -rf /var/lib/apt/lists/*;
 
 # Install any missing dependencies for enhanced language service
-RUN apt install -y libicu[0-9][0-9]
+RUN apt install --no-install-recommends -y libicu[0-9][0-9] && rm -rf /var/lib/apt/lists/*;
 
 # Clean up
 RUN apt-get autoremove -y \
@@ -50,9 +50,9 @@ RUN conda create -n env python=3.6
 RUN echo "source activate env" > ~/.bashrc
 ENV PATH /opt/conda/envs/env/bin:$PATH
 RUN conda install virtualenv
-RUN pip install tox-conda
+RUN pip install --no-cache-dir tox-conda
 COPY requirements.txt requirements-dev.txt ${HOME}/workspace/
-RUN pip install -r requirements-dev.txt
+RUN pip install --no-cache-dir -r requirements-dev.txt
 
 
 ENV TERM=xterm \