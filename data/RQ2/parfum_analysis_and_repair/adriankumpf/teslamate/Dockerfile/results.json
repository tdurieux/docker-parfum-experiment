{
  "startTime": 1674253879222,
  "endTime": 1674253880260,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.13 AS builder\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash - && \\\n    apt-get update && apt-get install -y --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN mix local.rebar --force && \\\n    mix local.hex --force\n\nENV MIX_ENV=prod\nWORKDIR /opt/app\n\nCOPY mix.exs mix.lock ./\nRUN mix deps.get --only $MIX_ENV\n\nCOPY config/$MIX_ENV.exs config/$MIX_ENV.exs\nCOPY config/config.exs config/config.exs\nRUN mix deps.compile\n\nCOPY assets/package.json assets/package-lock.json ./assets/\nRUN npm ci --prefix ./assets --progress=false --no-audit --loglevel=error\n\nCOPY assets assets\nCOPY priv/static priv/static\nRUN mix assets.deploy\n\nCOPY lib lib\nCOPY priv/repo/migrations priv/repo/migrations\nCOPY priv/gettext priv/gettext\nCOPY grafana/dashboards grafana/dashboards\nCOPY VERSION VERSION\nRUN mix compile\n\nCOPY config/runtime.exs config/runtime.exs\nRUN SKIP_LOCALE_DOWNLOAD=true mix release --path /opt/built\n\n########################################################################\n\nFROM debian:bullseye-slim AS app\n\nENV LANG=C.UTF-8 \\\n    SRTM_CACHE=/opt/app/.srtm_cache \\\n    HOME=/opt/app\n\nWORKDIR $HOME\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libodbc1  \\\n        libsctp1  \\\n        libssl1.1  \\\n        libstdc++6 \\\n        netcat \\\n        tini  \\\n        tzdata && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    addgroup --gid 10001 --system nonroot && \\\n    adduser  --uid 10000 --system --ingroup nonroot --home /home/nonroot nonroot && \\\n    chown -R nonroot:nonroot .\n\nUSER nonroot:nonroot\nCOPY --chown=nonroot:nonroot entrypoint.sh /\nCOPY --from=builder --chown=nonroot:nonroot /opt/built .\nRUN mkdir $SRTM_CACHE\n\nEXPOSE 4000\n\nENTRYPOINT [\"tini\", \"--\", \"/bin/sh\", \"/entrypoint.sh\"]\nCMD [\"bin/teslamate\", \"start\"]\n"
}