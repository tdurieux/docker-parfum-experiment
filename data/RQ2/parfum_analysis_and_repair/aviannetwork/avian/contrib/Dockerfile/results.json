{
  "startTime": 1674249035318,
  "endTime": 1674249036317,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 20,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 35,
        "columnStart": 1,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amd64/ubuntu:18.04 AS base\n\n#If you found this docker image helpful please donate AVN to the maintainer\nLABEL maintainer=\"RV9zdNeUTQUToZUcRp9uNF8gwH5LzDFtan\"\n\nEXPOSE 8766/tcp\nEXPOSE 8767/tcp\n\nENV DEBIAN_FRONTEND=noninteractive\n\n#Add ppa:bitcoin/bitcoin repository so we can install libdb4.8 libdb4.8++\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y software-properties-common && \\\n\tadd-apt-repository ppa:bitcoin/bitcoin && rm -rf /var/lib/apt/lists/*;\n\n#Install runtime dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\tbash net-tools libminiupnpc10 \\\n\tlibevent-2.1 libevent-pthreads-2.1 \\\n\tlibdb4.8 libdb4.8++ \\\n\tlibboost-system1.65 libboost-filesystem1.65 libboost-chrono1.65 \\\n\tlibboost-program-options1.65 libboost-thread1.65 \\\n\tlibzmq5 && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\nFROM base AS build\n\n#Install build dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\tbash net-tools build-essential libtool autotools-dev automake \\\n\tpkg-config libssl-dev libevent-dev bsdmainutils python3 \\\n\tlibboost-system1.65-dev libboost-filesystem1.65-dev libboost-chrono1.65-dev \\\n\tlibboost-program-options1.65-dev libboost-test1.65-dev libboost-thread1.65-dev \\\n\tlibzmq3-dev libminiupnpc-dev libdb4.8-dev libdb4.8++-dev && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#Build Avian from source\nCOPY . /home/avian/build/Avian/\nWORKDIR /home/avian/build/Avian\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-tests --with-gui=no && make\n\nFROM base AS final\n\n#Add our service account user\nRUN useradd -ms /bin/bash avian && \\\n\tmkdir /var/lib/avian && \\\n\tchown avian:avian /var/lib/avian && \\\n\tln -s /var/lib/avian /home/avian/.avian && \\\n\tchown -h avian:avian /home/avian/.avian\n\nVOLUME /var/lib/avian\n\n#Copy the compiled binaries from the build\nCOPY --from=build /home/avian/build/Avian/src/aviand /usr/local/bin/aviand\nCOPY --from=build /home/avian/build/Avian/src/avian-cli /usr/local/bin/avian-cli\n\nWORKDIR /home/avian\nUSER avian\n\nCMD /usr/local/bin/aviand -datadir=/var/lib/avian -printtoconsole -onlynet=ipv4\n"
}