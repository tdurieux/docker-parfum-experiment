{
  "startTime": 1674215932848,
  "endTime": 1674215933804,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: LGPL-3.0-or-later\n# Copyright 2019, Kopano and its licensors\n\n# Kopano Groupware Core Dockerfile\n#\n# Build command:\n# `docker build . -f Dockerfile.build -t kopanocore-builder`\n#\n# Run command:\n# `docker run -it --rm -v $(pwd):/build -u $(id -u) kopanocore-builder`\n\nFROM debian:buster\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Build args\nARG DEPENDENCY_HASH=51c3a68\nARG CONFIGURE_ARGS=--enable-kcoidc\nARG EXTRA_PACKAGES=\n\n# Noninteractive for package manager\nENV DEBIAN_FRONTEND noninteractive\n\n# Lang for tests\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# Install curl before adding dependency-repository\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    apt-utils \\\n    curl \\\n    gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# Get kopano-dependencies and create local repository\nRUN curl -f -sSL https://download.kopano.io/community/dependencies:/kopano-dependencies-${DEPENDENCY_HASH}-Debian_10-amd64.tar.gz | \\\n    tar -C /var/local/ -vxzf - && \\\n    cd /var/local/kopano-dependencies/ && \\\n    apt-ftparchive packages . | gzip -c9 > Packages.gz && \\\n    echo \"deb [trusted=yes] file:/var/local/kopano-dependencies ./\" > /etc/apt/sources.list.d/local.list\n\n# Install buildttime dependencies\nRUN apt-get update -y \\\n    && apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        autotools-dev \\\n        binutils \\\n        debhelper \\\n        devscripts \\\n        dh-systemd \\\n        flake8 \\\n        g++ \\\n        gettext \\\n        gsoap \\\n        libcurl4-openssl-dev \\\n        libgoogle-perftools-dev \\\n        libgsoap-dev \\\n        libhx-dev \\\n        libical-dev \\\n        libicu-dev \\\n        libjsoncpp-dev \\\n        libkcoidc-dev \\\n        libkrb5-dev \\\n        libldap2-dev \\\n        libmariadbclient-dev \\\n        libncurses-dev \\\n        libpam0g-dev \\\n        librrd-dev \\\n        libs3-dev \\\n        libssl-dev \\\n        libtool \\\n        libtool-bin \\\n        libvmime-dev \\\n        libxml2-dev \\\n        lsb-release \\\n        m4 \\\n        php-dev \\\n        pkg-config \\\n        python3-dateutil \\\n        python3-dev \\\n        python3-pillow \\\n        python3-pytest \\\n        python3-setuptools \\\n        python3-tz \\\n        python3-tzlocal \\\n        swig \\\n        tidy-html5-dev \\\n        uuid-dev \\\n        zlib1g-dev \\\n        $EXTRA_PACKAGES \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set working directory\nENV WORKSPACE=/build\nWORKDIR ${WORKSPACE}\n\n# Create build user\nRUN groupadd -r -g 1000 builder && useradd -l -r -u 1000 -g builder builder\n\nCOPY test/docker-entrypoint.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/*.sh\n\nUSER builder\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nENV CONFIGURE_ARGS $CONFIGURE_ARGS\n\n# Default command (requires mounting kopanocore directory to /build/)\nCMD ./bootstrap.sh && PYTHON=/usr/bin/python3 ./configure $CONFIGURE_ARGS && make -j $(nproc)\n"
}