{
  "startTime": 1674249507217,
  "endTime": 1674249508582,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 42,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 42,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "##\n# Use Java base image and setup required DEBS as cacheable image.\n##\nARG BASE_IMAGE=\"opennms/deploy-base\"\nARG BASE_IMAGE_VERSION=\"jre-1.2.0.b105\"\n\nFROM ${BASE_IMAGE}:${BASE_IMAGE_VERSION} as sentinel-base\n\nARG REQUIRED_DEBS=\"hostname wget gettext openssh-client\"\n\nARG REPO_KEY_URL=\"https://debian.opennms.org/OPENNMS-GPG-KEY\"\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Collect generic steps in a layer for caching\n# import keys & install required debs\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gnupg ca-certificates && \\\n    curl -fsSL ${REPO_KEY_URL} | apt-key add && \\\n    apt-get install --no-install-recommends -yq ${REQUIRED_DEBS} && rm -rf /var/lib/apt/lists/*;\n\n# Allow to send ICMP messages as non-root user\nRUN setcap cap_net_raw+ep ${JAVA_HOME}/bin/java && \\\n    echo ${JAVA_HOME}/lib/jli > /etc/ld.so.conf.d/java-latest.conf && \\\n    ldconfig\n\n# Create Sentinel user with a specific group ID\nRUN groupadd -g 10001 sentinel && \\\n    adduser --uid 10001 --gid 10001 --home /usr/share/sentinel --shell /usr/bin/bash sentinel\n\n# Create SSH Key-Pair to use with the Karaf Shell\nRUN mkdir /usr/share/sentinel/.ssh && \\\n    chmod 700 /usr/share/sentinel/.ssh && \\\n    ssh-keygen -t rsa -f /usr/share/sentinel/.ssh/id_rsa -q -N \"\"\n\n##\n# Install and setup OpenNMS Sentinel DEBS\n##\nFROM sentinel-base\n\n# A default which installs the minimum required Minion packages\nARG SENTINEL_PACKAGES=\"opennms-sentinel\"\n\n# Allow to install optional packages via DEB\nARG ADD_DEB_PACKAGES\n\nCOPY ./debs /tmp/debs\n\n# Prevent setup prompt\nENV DEBIAN_FRONTEND=noninteractive\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# we want these to break the caching so yum will re-install now that\n# we're not copying DEBs into /tmp/debs by default\nARG BUILD_DATE=\"1970-01-01T00:00:00+0000\"\nARG REVISION\n\nRUN id sentinel\nRUN  getent group sentinel\nRUN  getent passwd sentinel\n\n# Install repositories, system and OpenNMS packages and do some cleanup\nRUN echo \"installing packages for build ${REVISION} (${BUILD_DATE})\"; \\\n    if [[ \"$(ls -1 /tmp/debs/*.deb 2>/dev/null | wc -l)\" != 0 ]]; then \\\n        echo \"installing local DEBs from filesystem\" && \\\n        apt -y --no-install-recommends install /tmp/debs/*.deb; rm -rf /var/lib/apt/lists/*; \\\n    elif [[ -e /tmp/debs/opennms.list ]]; then \\\n        echo \"installing local DEBs over HTTP\" && \\\n        mv -f /tmp/debs/opennms.list /etc/apt/sources.list.d && \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -yq ${SENTINEL_PACKAGES}; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n        echo \"installing remote DEBs from stable\" && \\\n        apt-get install --no-install-recommends -yq ${SENTINEL_PACKAGES}; rm -rf /var/lib/apt/lists/*; \\\n    fi && \\\n    if [[ -n ${ADD_DEB_PACKAGES} ]]; then \\\n    apt-get install --no-install-recommends -yq ${ADD_DEB_PACKAGES}; rm -rf /var/lib/apt/lists/*; fi && \\\n    rm -rf /tmp/debs && \\\n    apt-get autoclean && \\\n    apt-get clean && \\\n    # make sure entrypoint.sh able to do cp -r with original path\n    rm /usr/share/sentinel/{data,etc,deploy} && \\\n    mv /var/lib/sentinel/{data,deploy} /usr/share/sentinel && \\\n    mv /etc/sentinel /usr/share/sentinel/etc && \\\n    ln -s /usr/share/sentinel/data /var/lib/sentinel/data && \\\n    ln -s /usr/share/sentinel/deploy /var/lib/sentinel/deploy && \\\n    ln -s /usr/share/sentinel/etc /etc/sentinel && \\\n    mkdir -p /usr/share/sentinel/data/{log,tmp} && \\\n    echo sentinel=$(cat /usr/share/sentinel/.ssh/id_rsa.pub | awk '{print $2}'),viewer > /usr/share/sentinel/etc/keys.properties && \\\n    echo \"_g_\\\\:admingroup = group,admin,manager,viewer,systembundles,ssh\" >> /usr/share/sentinel/etc/keys.properties && \\\n    chown 10001:10001 -R /usr/share/sentinel /var/lib/sentinel && \\\n    chgrp -R 0 /usr/share/sentinel && \\\n    chmod -R g=u /usr/share/sentinel && \\\n    chmod 600 /usr/share/sentinel/.ssh/id_rsa && \\\n    ln -s /usr/share/sentinel /opt/sentinel\n\nCOPY ./assets/* /\n\nVOLUME [ \"/usr/share/sentinel/deploy\", \"/usr/share/sentinel/etc\", \"/usr/share/sentinel/data\" ]\n\nWORKDIR /usr/share/sentinel\n\n### Containers should NOT run as root as a good practice\nUSER 10001\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\nSTOPSIGNAL SIGTERM\n\nCMD [ \"-f\" ]\n\n# Arguments for labels should not invalidate caches\nARG VERSION\nARG SOURCE\nARG BUILD_JOB_ID\nARG BUILD_NUMBER\nARG BUILD_URL\nARG BUILD_BRANCH\n\nLABEL org.opencontainers.image.created=\"${BUILD_DATE}\" \\\n      org.opencontainers.image.title=\"OpenNMS Sentinel ${VERSION}\" \\\n      org.opencontainers.image.source=\"${SOURCE}\" \\\n      org.opencontainers.image.revision=\"${REVISION}\" \\\n      org.opencontainers.image.version=\"${VERSION}\" \\\n      org.opencontainers.image.vendor=\"The OpenNMS Group, Inc.\" \\\n      org.opencontainers.image.authors=\"OpenNMS Community\" \\\n      org.opencontainers.image.licenses=\"AGPL-3.0\" \\\n      org.opennms.image.base=\"${BASE_IMAGE}:${BASE_IMAGE_VERSION}\" \\\n      org.opennme.cicd.jobid=\"${BUILD_JOB_ID}\" \\\n      org.opennms.cicd.buildnumber=\"${BUILD_NUMBER}\" \\\n      org.opennms.cicd.buildurl=\"${BUILD_URL}\" \\\n      org.opennms.cicd.branch=\"${BUILD_BRANCH}\"\n\n### Runtime information and not relevant at build time\n\n# TODO MVR SENTINEL_LOCATION is not used at the moment\nENV SENTINEL_HOME=\"/usr/share/sentinel\" \\\n    SENTINEL_ID=\"\" \\\n    SENTINEL_LOCATION=\"SENTINEL\" \\\n    OPENNMS_BROKER_URL=\"tcp://127.0.0.1:61616\" \\\n    OPENNMS_HTTP_USER=\"minion\" \\\n    OPENNMS_HTTP_PASS=\"minion\" \\\n    OPENNMS_BROKER_USER=\"minion\" \\\n    OPENNMS_BROKER_PASS=\"minion\" \\\n    POSTGRES_HOST=\"localhost\" \\\n    POSTGRES_PORT=\"5432\" \\\n    POSTGRES_USER=\"postgres\" \\\n    POSTGRES_PASSWORD=\"\" \\\n    POSTGRES_DB=\"opennms\"\n\n##------------------------------------------------------------------------------\n## EXPOSED PORTS\n##------------------------------------------------------------------------------\n## -- Sentinel Karaf Debug 5005/TCP\n## -- Sentinel KARAF SSH   8301/TCP\n\nEXPOSE 8301\n"
}