{
  "startTime": 1674251729811,
  "endTime": 1674251731060,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 23,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 23,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:11.3.1-base-ubuntu20.04\n\n# install ros-core and ros-base\n\n# setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && \\\n    apt-get install -q -y --no-install-recommends tzdata && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install packages\nRUN apt-get update && apt-get install -q -y --no-install-recommends \\\n    dirmngr \\\n    gnupg2 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu focal main\" > /etc/apt/sources.list.d/ros1-latest.list\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV ROS_DISTRO noetic\n\n# install ros packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ros-noetic-ros-core=1.5.0-1* \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install bootstrap tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    python3-rosdep \\\n    python3-rosinstall \\\n    python3-vcstools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# bootstrap rosdep\nRUN rosdep init && \\\n  rosdep update --rosdistro $ROS_DISTRO\n\n# install ros packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ros-noetic-ros-base=1.5.0-1* \\\n    && rm -rf /var/lib/apt/lists/*\n\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tcmake \\\n\tcurl \\\n\tg++ \\\n\tgit \\\n\tmake \\\n\tvim \\\n\twget \\\n\tcuda-command-line-tools-11-3 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Needed for QT window for cv2\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tlibsm6 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install miniconda to /miniconda\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN bash Miniconda-latest-Linux-x86_64.sh -p /miniconda -b\nRUN rm Miniconda-latest-Linux-x86_64.sh\nENV PATH=/miniconda/bin:${PATH}\n\nRUN conda update -y conda\nRUN conda create -y -n igibson python=3.8\n\nENV PATH /miniconda/envs/igibson/bin:$PATH\n\n# NOTE: This needs to be updated in-step with the base cudagl image so the tensor renderer works\nRUN pip install torch==1.10.0+cu113 torchvision==0.11.1+cu113 torchaudio==0.10.0+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html --no-cache-dir\n\nRUN git clone --depth 1 https://github.com/StanfordVL/iGibson /opt/iGibson --recursive\n\nWORKDIR /opt/iGibson\nRUN pip install --no-cache-dir -e .\n\nRUN pip install --no-cache-dir pytest ray[default,rllib] stable-baselines3 && rm -rf /root/.cache\n\n\nRUN python3 -m igibson.utils.assets_utils --download_assets && rm -rf /tmp/*\nRUN python3 -m igibson.utils.assets_utils --download_demo_data && rm -rf /tmp/*\n\nWORKDIR /opt/iGibson/igibson/examples\n\nRUN apt-get update && apt-get install --no-install-recommends -y mesa-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /opt/catkin_ws/src\nRUN ln -s /opt/iGibson/igibson/examples/ros/igibson-ros /opt/catkin_ws/src/igibson-ros\n\nENV PYTHONPATH /opt/ros/noetic/lib/python3/dist-packages:/miniconda/envs/igibson/lib/python3.8/site-packages/:/usr/lib/python3/dist-packages:/opt/iGibson/\n\nRUN cd /opt/catkin_ws && /opt/ros/noetic/env.sh catkin_make\n\n\nRUN cd /opt/catkin_ws && /opt/ros/noetic/env.sh rosdep install --from-paths src --ignore-src -r -y\n\nWORKDIR /opt/catkin_ws/src/igibson-ros\n\n# run source /opt/catkin_ws/devel/setup.bash after getting into docker"
}