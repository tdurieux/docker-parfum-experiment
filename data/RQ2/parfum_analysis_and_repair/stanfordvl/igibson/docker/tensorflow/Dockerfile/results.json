{
  "startTime": 1674220485512,
  "endTime": 1674220487068,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 20,
        "columnStart": 23,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from nvidia/cudagl:10.0-base-ubuntu18.04\n\nARG CUDA=10.0\nARG CUDNN=7.6.2.24-1\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tcurl build-essential git cmake \\\n\tcuda-command-line-tools-10-0 \\\n    cuda-cublas-10-0 \\\n    cuda-cufft-10-0 \\\n    cuda-curand-10-0 \\\n    cuda-cusolver-10-0 \\\n    cuda-cusparse-10-0 \\\n    libcudnn7=${CUDNN}+cuda${CUDA} \\\n    vim \\\n    tmux \\\n    libhdf5-dev \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Install miniconda to /miniconda\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN bash Miniconda-latest-Linux-x86_64.sh -p /miniconda -b\nRUN rm Miniconda-latest-Linux-x86_64.sh\nENV PATH=/miniconda/bin:${PATH}\n\nRUN conda update -y conda\nRUN conda create -y -n igibson python=3.7\n\nENV PATH /miniconda/envs/igibson/bin:$PATH\n\n# NOTE: This needs to be updated in-step with the base cudagl image so the tensor renderer works\nRUN pip install --no-cache-dir tensorflow-gpu==1.15.0\n\nRUN git clone --depth 1 https://github.com/StanfordVL/iGibson /opt/iGibson --recursive\n\nWORKDIR /opt/iGibson\nRUN pip install --no-cache-dir -e .\n\nRUN git clone https://github.com/StanfordVL/agents/ /opt/agents\n\nWORKDIR /opt/agents\nRUN pip install --no-cache-dir -e .\n\nRUN pip install --no-cache-dir pytest\n\nRUN python3 -m igibson.utils.assets_utils --download_assets && rm -rf /tmp/*\nRUN python3 -m igibson.utils.assets_utils --download_demo_data && rm -rf /tmp/*\n\nWORKDIR /opt/iGibson/igibson/examples\n"
}