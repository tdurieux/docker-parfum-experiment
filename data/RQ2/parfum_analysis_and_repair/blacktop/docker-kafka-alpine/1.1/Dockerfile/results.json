{
  "startTime": 1674249764293,
  "endTime": 1674249765374,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 14,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nENV KAFKA_VERSION 1.1.0\nENV SCALA_VERSION 2.12\n\nLABEL name=\"kafka\" version=${KAFKA_VERSION}\n\nRUN apk add --no-cache openjdk8-jre bash docker coreutils su-exec\nRUN apk add --no-cache -t .build-deps curl ca-certificates jq \\\n  && mkdir -p /opt \\\n  && mirror=$( curl -f --stderr /dev/null https://www.apache.org/dyn/closer.cgi\\?as_json\\=1 | jq -r '.preferred') \\\n  && curl -f -sSL \"${mirror}kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz\" \\\n  | tar -xzf - -C /opt \\\n  && mv /opt/kafka_${SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka \\\n  && adduser -DH -s /sbin/nologin kafka \\\n  && chown -R kafka: /opt/kafka \\\n  && rm -rf /tmp/* \\\n  && apk del --purge .build-deps\n\nENV PATH /sbin:/opt/kafka/bin/:$PATH\n\nWORKDIR /opt/kafka\n\nVOLUME [\"/tmp/kafka-logs\"]\n\nEXPOSE 9092 2181\n\n# COPY config/log4j.properties /opt/kafka/config/\nCOPY config/server.properties /opt/kafka/config/\nCOPY config/zookeeper.properties /opt/kafka/config/\nCOPY kafka-entrypoint.sh /kafka-entrypoint.sh\nCOPY scripts /\n\nENTRYPOINT [\"/kafka-entrypoint.sh\"]\nCMD [\"kafka-server-start.sh\", \"config/server.properties\"]\n\n# HEALTHCHECK --interval=5s --timeout=2s --retries=5 CMD bin/health.sh\n"
}