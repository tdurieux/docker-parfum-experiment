{
  "startTime": 1674250507653,
  "endTime": 1674250508603,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 193
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from osrf/ubuntu_i386:xenial\n\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list\nRUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\nRUN apt-get update && apt-get install --no-install-recommends -y ros-kinetic-ros-base ros-kinetic-tf2-geometry-msgs ros-kinetic-gps-common ros-kinetic-nmea-msgs ros-kinetic-nav-msgs ros-kinetic-rosdoc-lite dh-make python-bloom vim sudo && rm -rf /var/lib/apt/lists/*;\n\nENV ROS_DISTRO=kinetic\n\n\n#----------------------------------\nRUN groupadd -g 1000 build \nRUN useradd -u 1000 -g 1000 -G sudo,build,dialout -ms /bin/bash build\nRUN echo \"build:build\" | chpasswd\nUSER build\n#----------------------------------\n\n\n# If no command is provided when the container is started, this will be run, giving you a shell inside the container as the 'build' user.\nCMD \"/bin/bash\"\n"
}