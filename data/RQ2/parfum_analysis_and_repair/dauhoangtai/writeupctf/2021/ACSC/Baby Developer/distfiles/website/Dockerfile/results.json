{
  "startTime": 1674215299562,
  "endTime": 1674215300243,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 21,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 37,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM node:lts-buster\nWORKDIR /srv/\nRUN apt-get update && apt-get -y --no-install-recommends install ssh && rm -rf /var/lib/apt/lists/*;\n\n# For remote ssh from the library PC\nRUN useradd -d /home/stypr -s /home/stypr/readflag stypr && \\\n    mkdir -p /home/stypr/.ssh/ && ssh-keygen -q -t rsa -N '' -f /home/stypr/.ssh/id_rsa && \\\n    cp /home/stypr/.ssh/id_rsa.pub /home/stypr/.ssh/authorized_keys\n\n# Challenge: get flag!\nRUN touch /home/stypr/.hushlogin && \\\n    echo '#include <stdio.h>\\r\\n#include <stdlib.h>\\r\\nint main(){FILE *fp;char flag[1035];fp = popen(\"/usr/bin/curl -s http://genflag/flag\", \"r\");if (fp == NULL) {printf(\"Error found. Please contact administrator.\");exit(1);}while (fgets(flag, sizeof(flag), fp) != NULL) {printf(\"%s\", flag);}pclose(fp);return 0;}' > /home/stypr/readflag.c && \\\n    gcc -o /home/stypr/readflag /home/stypr/readflag.c && \\\n    chmod +x /home/stypr/readflag && rm -rf /home/stypr/readflag.c\n\n# Run dev version of harold.kim\nRUN git clone https://github.com/stypr/harold.kim\nRUN cd harold.kim && yarn install && yarn cache clean;\n\nCMD [\"sh\", \"-c\", \"service ssh start && cd /srv/harold.kim/ && yarn build && yarn dev --port 80 2>&1 >/dev/null\"]\n"
}