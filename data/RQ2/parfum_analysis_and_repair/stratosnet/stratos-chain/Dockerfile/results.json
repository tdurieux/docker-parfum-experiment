{
  "startTime": 1674249127210,
  "endTime": 1674249127644,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple usage with a mounted data directory:\n# > docker build -t stratos-chain .\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.stratos-chain:/stratos-chain/.stratos-chain stratos-chain stratos-chain init\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.stratos-chain:/stratos-chain/.stratos-chain stratos-chain stratos-chain start\nFROM golang:1.15-alpine AS build-env\n\n# Set up dependencies\nENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python3\n\n# Set working directory for the build\nWORKDIR /go/src/github.com/stratosnet/stratos-chain\n\n# Add source files\nCOPY . .\n\nRUN go version\n\n# Install minimum necessary dependencies, build Cosmos SDK, remove packages\nRUN apk add --no-cache $PACKAGES && \\\n    make install\n\n# Final image\nFROM alpine:edge\n\nENV STRATOS /stchaind\n\n# Install ca-certificates\nRUN apk add --no-cache --update ca-certificates\n\nRUN addgroup stratos && \\\n    adduser -S -G stratos stratos -h \"$STRATOS\"\n\nUSER stratos\n\nWORKDIR $STRATOS\n\n# Copy over binaries from the build-env\nCOPY --from=build-env /go/bin/stchaind /usr/bin/stchaind\n\n# Run stchaind by default, omit entrypoint to ease using container with stchaincli\nCMD [\"stchaind\"]\n"
}