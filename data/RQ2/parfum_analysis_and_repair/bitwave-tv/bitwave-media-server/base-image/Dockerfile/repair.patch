diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bitwave-tv/bitwave-media-server/base-image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bitwave-tv/bitwave-media-server/base-image/Dockerfile/repaired.Dockerfile
index a79f75d..63a7840 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bitwave-tv/bitwave-media-server/base-image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bitwave-tv/bitwave-media-server/base-image/Dockerfile/repaired.Dockerfile
@@ -11,8 +11,8 @@ ENV SRC="/usr/local/" \
 
 # update repos & install build tools
 RUN apt-get update && \
-    apt-get install -y \
-        # libraries
+    apt-get install --no-install-recommends -y \
+
         libass-dev \
         libfreetype6-dev \
         libvorbis-dev \
@@ -26,76 +26,76 @@ RUN apt-get update && \
         libgd-dev \
         libgeoip-dev \
         libperl-dev \
-        # etc
+
         pkg-config \
         curl \
         texinfo \
         autoconf \
         automake \
         build-essential \
-        cmake
+        cmake && rm -rf /var/lib/apt/lists/*;
 
 
 # nasm
 ARG NASM_VERSION=2.14.02
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz" && \
+    curl -f -OL "https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz" && \
     tar -xvJ -f nasm-${NASM_VERSION}.tar.xz && \
     cd nasm-${NASM_VERSION} && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j$(nproc) && \
-    make install
+    make install && rm nasm-${NASM_VERSION}.tar.xz
 
 
 # x264
 ARG X264_VERSION=20190409-2245-stable
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "https://code.videolan.org/videolan/x264/-/archive/stable/x264-stable.tar.bz2" && \
+    curl -f -OL "https://code.videolan.org/videolan/x264/-/archive/stable/x264-stable.tar.bz2" && \
     tar -xvj -f x264-stable.tar.bz2 && \
     cd x264-stable && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix="${SRC}" \
         --bindir="${SRC}/bin" \
         --enable-shared && \
     make -j$(nproc) && \
-    make install
+    make install && rm x264-stable.tar.bz2
 
 
 # x265
 ARG X265_VERSION=3.0
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "http://ftp.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz" && \
+    curl -f -OL "https://ftp.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz" && \
     tar -xvz -f x265_${X265_VERSION}.tar.gz && \
     cd x265_${X265_VERSION}/build && \
     cmake ../source && \
     make -j$(nproc) && \
-    make install
+    make install && rm x265_${X265_VERSION}.tar.gz
 
 
 # libmp3lame
 ARG LAME_VERSION=3.100
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "https://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz" && \
+    curl -f -OL "https://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz" && \
     tar -xvz -f lame-${LAME_VERSION}.tar.gz && \
     cd lame-${LAME_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix="${SRC}" \
         --bindir="${SRC}/bin" \
         --disable-static \
         --enable-nasm && \
     make -j$(nproc) && \
-    make install
+    make install && rm lame-${LAME_VERSION}.tar.gz
 
 
 # ffmpeg && patch
 ARG FFMPEG_VERSION=4.3
 COPY ./contrib/ffmpeg /dist/bitwave-media-server/contrib/ffmpeg
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz" && \
+    curl -f -OL "https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz" && \
     tar -xvz -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \
     cd ffmpeg-${FFMPEG_VERSION} && \
     patch -p1 < /dist/bitwave-media-server/contrib/ffmpeg/bitrate.patch && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --bindir="${SRC}/bin" \
         --extra-cflags="-I${SRC}/include" \
         --extra-ldflags="-L${SRC}/lib" \
@@ -114,17 +114,17 @@ RUN mkdir -p /dist && cd /dist && \
         --disable-doc \
         --disable-shared && \
     make -j$(nproc) && \
-    make install
+    make install && rm ffmpeg-${FFMPEG_VERSION}.tar.gz
 
 
 # node.js
 ARG NODE_VERSION=12.18.2
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz" && \
+    curl -f -OL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz" && \
     tar -xvJ -f "node-v${NODE_VERSION}-linux-x64.tar.xz" && \
     cd node-v${NODE_VERSION}-linux-x64 && \
     cp -R bin /usr/local && \
-    cp -R lib /usr/local
+    cp -R lib /usr/local && rm "node-v${NODE_VERSION}-linux-x64.tar.xz"
 
 
 # nginx-rtmp
@@ -137,15 +137,15 @@ ARG NGINX_VERSION=1.18.0
 ARG NGINX_RTMP_REPO=sergey-dryabzhinsky
 
 RUN mkdir -p /dist && cd /dist && \
-    curl -OL "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" && \
+    curl -f -OL "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" && \
     tar -xvz -f "nginx-${NGINX_VERSION}.tar.gz" && \
-    curl -OL "https://github.com/${NGINX_RTMP_REPO}/nginx-rtmp-module/archive/dev.tar.gz" && \
+    curl -f -OL "https://github.com/${NGINX_RTMP_REPO}/nginx-rtmp-module/archive/dev.tar.gz" && \
     tar -xvz -f "dev.tar.gz" && \
     cd nginx-${NGINX_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local/nginx \
         --with-http_ssl_module \
         --with-http_v2_module \
         --add-module=/dist/nginx-rtmp-module-dev && \
     make -j$(nproc) && \
-    make install
+    make install && rm "nginx-${NGINX_VERSION}.tar.gz"