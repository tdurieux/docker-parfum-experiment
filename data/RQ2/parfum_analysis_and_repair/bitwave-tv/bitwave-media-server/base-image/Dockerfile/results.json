{
  "startTime": 1674251903783,
  "endTime": 1674251905056,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 144,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE=amd64/debian:stretch-slim\n\nFROM $IMAGE as builder\n\nMAINTAINER dispatch <admin@bitwave.tv>\n\n# setup envvironment variables\nENV SRC=\"/usr/local/\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\n\n# update repos & install build tools\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n\n        libass-dev \\\n        libfreetype6-dev \\\n        libvorbis-dev \\\n        libpcre3-dev \\\n        libtool \\\n        libssl-dev \\\n        zlib1g-dev \\\n        libasound2-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libgd-dev \\\n        libgeoip-dev \\\n        libperl-dev \\\n\n        pkg-config \\\n        curl \\\n        texinfo \\\n        autoconf \\\n        automake \\\n        build-essential \\\n        cmake && rm -rf /var/lib/apt/lists/*;\n\n\n# nasm\nARG NASM_VERSION=2.14.02\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz\" && \\\n    tar -xvJ -f nasm-${NASM_VERSION}.tar.xz && \\\n    cd nasm-${NASM_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j$(nproc) && \\\n    make install && rm nasm-${NASM_VERSION}.tar.xz\n\n\n# x264\nARG X264_VERSION=20190409-2245-stable\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://code.videolan.org/videolan/x264/-/archive/stable/x264-stable.tar.bz2\" && \\\n    tar -xvj -f x264-stable.tar.bz2 && \\\n    cd x264-stable && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=\"${SRC}\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --enable-shared && \\\n    make -j$(nproc) && \\\n    make install && rm x264-stable.tar.bz2\n\n\n# x265\nARG X265_VERSION=3.0\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://ftp.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz\" && \\\n    tar -xvz -f x265_${X265_VERSION}.tar.gz && \\\n    cd x265_${X265_VERSION}/build && \\\n    cmake ../source && \\\n    make -j$(nproc) && \\\n    make install && rm x265_${X265_VERSION}.tar.gz\n\n\n# libmp3lame\nARG LAME_VERSION=3.100\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz\" && \\\n    tar -xvz -f lame-${LAME_VERSION}.tar.gz && \\\n    cd lame-${LAME_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=\"${SRC}\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --disable-static \\\n        --enable-nasm && \\\n    make -j$(nproc) && \\\n    make install && rm lame-${LAME_VERSION}.tar.gz\n\n\n# ffmpeg && patch\nARG FFMPEG_VERSION=4.3\nCOPY ./contrib/ffmpeg /dist/bitwave-media-server/contrib/ffmpeg\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz\" && \\\n    tar -xvz -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    cd ffmpeg-${FFMPEG_VERSION} && \\\n    patch -p1 < /dist/bitwave-media-server/contrib/ffmpeg/bitrate.patch && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --extra-cflags=\"-I${SRC}/include\" \\\n        --extra-ldflags=\"-L${SRC}/lib\" \\\n        --prefix=\"${SRC}\" \\\n        --enable-nonfree \\\n        --enable-gpl \\\n        --enable-version3 \\\n        --enable-libmp3lame \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-openssl \\\n        --enable-postproc \\\n        --enable-small \\\n        --enable-static \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-shared && \\\n    make -j$(nproc) && \\\n    make install && rm ffmpeg-${FFMPEG_VERSION}.tar.gz\n\n\n# node.js\nARG NODE_VERSION=12.18.2\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz\" && \\\n    tar -xvJ -f \"node-v${NODE_VERSION}-linux-x64.tar.xz\" && \\\n    cd node-v${NODE_VERSION}-linux-x64 && \\\n    cp -R bin /usr/local && \\\n    cp -R lib /usr/local && rm \"node-v${NODE_VERSION}-linux-x64.tar.xz\"\n\n\n# nginx-rtmp\n# ARG NGINX_RTMP_REPO=arut\n# ARG NGINXRTMP_VERSION=1.1.7.10\n# curl -OL \"https://github.com/${NGINX_RTMP_REPO}}/nginx-rtmp-module/archive/v${NGINXRTMP_VERSION}.tar.gz\" && \\\n# tar -xvz -f \"v${NGINXRTMP_VERSION}.tar.gz\" && \\\n\nARG NGINX_VERSION=1.18.0\nARG NGINX_RTMP_REPO=sergey-dryabzhinsky\n\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" && \\\n    tar -xvz -f \"nginx-${NGINX_VERSION}.tar.gz\" && \\\n    curl -f -OL \"https://github.com/${NGINX_RTMP_REPO}/nginx-rtmp-module/archive/dev.tar.gz\" && \\\n    tar -xvz -f \"dev.tar.gz\" && \\\n    cd nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/nginx \\\n        --with-http_ssl_module \\\n        --with-http_v2_module \\\n        --add-module=/dist/nginx-rtmp-module-dev && \\\n    make -j$(nproc) && \\\n    make install && rm \"nginx-${NGINX_VERSION}.tar.gz\"\n"
}