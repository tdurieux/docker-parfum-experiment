diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rukzuk/rukzuk/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rukzuk/rukzuk/docker/Dockerfile/repaired.Dockerfile
index 224fdbc..b53b026 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rukzuk/rukzuk/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rukzuk/rukzuk/docker/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ RUN echo "Europe/Berlin" > /etc/timezone
 # Install Depencies
 RUN apt-get install -y --no-install-recommends \
         tzdata \
-        sudo
+        sudo && rm -rf /var/lib/apt/lists/*;
 
 RUN dpkg-reconfigure --frontend noninteractive tzdata
 
@@ -24,7 +24,7 @@ RUN dpkg-reconfigure --frontend noninteractive tzdata
 ENV DEBIAN_FRONTEND noninteractive
 
 # install phantomjs
-RUN apt-get install -y --no-install-recommends phantomjs
+RUN apt-get install -y --no-install-recommends phantomjs && rm -rf /var/lib/apt/lists/*;
 
 # PhantomJS Offscreen wrapper
 COPY phantomjs-offscreen /usr/local/bin/phantomjs
@@ -33,7 +33,7 @@ RUN chmod +x /usr/local/bin/phantomjs
 # add php source list
 RUN apt-get install -y --no-install-recommends software-properties-common && \
     add-apt-repository ppa:ondrej/php && \
-    apt-get update
+    apt-get update && rm -rf /var/lib/apt/lists/*;
 
 # Install Apache httpd
 RUN apt-get install -y --no-install-recommends \
@@ -43,7 +43,7 @@ RUN apt-get install -y --no-install-recommends \
         msmtp \
         msmtp-mta \
         php7.3 \
-#        php7.3-sqlite \
+
         php7.3-mysql \
         php7.3-cli \
         php7.3-curl \
@@ -51,7 +51,7 @@ RUN apt-get install -y --no-install-recommends \
         php7.3-intl \
         php7.3-xml \
         php7.3-zip \
-        php7.3-mbstring
+        php7.3-mbstring && rm -rf /var/lib/apt/lists/*;
 
 # dev/build stuff (pecl for mcrypt and v8js)
 RUN apt-get install -y --no-install-recommends \
@@ -59,7 +59,7 @@ RUN apt-get install -y --no-install-recommends \
         libmcrypt-dev \
         libmcrypt4 \
         php7.3-dev \
-        php-pear
+        php-pear && rm -rf /var/lib/apt/lists/*;
 
 # install mcrypt (now pecl) DISABLED because it is deprecated
 #RUN sudo CFLAGS=-w CPPFLAGS=-w pecl install mcrypt
@@ -68,13 +68,13 @@ RUN apt-get install -y --no-install-recommends \
 
 # lib v8
 RUN add-apt-repository ppa:stesie/libv8 && apt-get update
-RUN apt-get install -y libv8-7.5-dev
+RUN apt-get install --no-install-recommends -y libv8-7.5-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN echo "/opt/libv8-7.5/lib" | sudo tee -a /etc/ld.so.conf.d/libv8.conf
 RUN ldconfig
 
 RUN printf "\/opt/libv8-7.5\n" | sudo CFLAGS=-w CPPFLAGS=-w pecl install v8js-2.1.1
-RUN echo "extension = v8js.so" | sudo tee -a /etc/php/7.3/mods-available/v8js.ini 
+RUN echo "extension = v8js.so" | sudo tee -a /etc/php/7.3/mods-available/v8js.ini
 
 # Activate PHP mods
 RUN phpenmod v8js
@@ -84,9 +84,9 @@ RUN a2enmod ssl && \
     a2enmod rewrite
 
 # Install mysql
-RUN apt-get install -y --no-install-recommends mariadb-server
+RUN apt-get install -y --no-install-recommends mariadb-server && rm -rf /var/lib/apt/lists/*;
 
-# major version update if 
+# major version update if
 ENV MARIADB_MAJOR 10.1
 
 ## based on https://github.com/docker-library/mariadb/blob/master/10.1/Dockerfile#L90
@@ -98,10 +98,10 @@ RUN set -ex; \
 		echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'; \
 	} | debconf-set-selections; \
 	apt-get update; \
-	apt-get install -y \
+	apt-get install --no-install-recommends -y \
 		"mariadb-server" \
 		socat \
-	; \
+	; rm -rf /var/lib/apt/lists/*; \
 #	rm -rf /var/lib/apt/lists/*; \
 # comment out any "user" entires in the MySQL config ("docker-entrypoint.sh" or "--user" will handle user switching)
 	sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*; \
@@ -139,7 +139,7 @@ RUN mkdir -p ${INSTANCE_PATH}/htdocs/cms
 RUN chown -R www-data:www-data ${INSTANCE_PATH}/htdocs
 
 # Install latest github release
-RUN curl -L $(curl -s https://api.github.com/repos/rukzuk/rukzuk/releases/latest | grep browser_download_url | grep 'tgz\|tar.gz' | cut -d '"' -f 4) | tar -xz --strip 1 -C ${CMS_PATH}/..
+RUN curl -f -L $( curl -f -s https://api.github.com/repos/rukzuk/rukzuk/releases/latest | grep browser_download_url | grep 'tgz\|tar.gz' | cut -d '"' -f 4) | tar -xz --strip 1 -C ${CMS_PATH}/..
 
 RUN ln -s ${CMS_PATH}/app/server/environment ${INSTANCE_PATH}/environment
 RUN ln -s ${CMS_PATH} ${INSTANCE_PATH}/application
@@ -189,7 +189,7 @@ RUN apt-get install -y --no-install-recommends \
         python3-dev \
         python3-pip \
         python3-setuptools \
-        redis
+        redis && rm -rf /var/lib/apt/lists/*;
 
 # Add users and folders
 RUN useradd -s /bin/bash -d /opt/publisher publisher
@@ -201,14 +201,14 @@ RUN chown publisher /var/tmp/publisher
 # copy code
 RUN mkdir -p /opt/publisher
 # get latest publisher release form github and extract it
-RUN curl -L $(curl -s https://api.github.com/repos/rukzuk/publisher/releases/latest | grep tarball_url | cut -d '"' -f 4) | tar -xz --strip 1 -C /opt/publisher
+RUN curl -f -L $( curl -f -s https://api.github.com/repos/rukzuk/publisher/releases/latest | grep tarball_url | cut -d '"' -f 4) | tar -xz --strip 1 -C /opt/publisher
 # remove dev config file
 RUN rm /opt/publisher/settings-dev.ini 2>/dev/null
 # fix rights
 RUN chown -R publisher /opt/publisher
 
 # install requirements
-RUN pip3 install -r /opt/publisher/requirements.txt
+RUN pip3 install --no-cache-dir -r /opt/publisher/requirements.txt
 
 # Activate services in runit
 RUN mkdir -p /etc/service/supervisord
@@ -222,7 +222,7 @@ RUN chmod +x /etc/service/redis/run
 ### End Publisher
 
 
-# Remove unused packages (only used to build)  & Cleanup 
+# Remove unused packages (only used to build)  & Cleanup
 RUN apt-get purge -y php7.3-dev libmcrypt-dev php-pear build-essential
 RUN apt-get clean -y
 RUN apt-get autoremove -y