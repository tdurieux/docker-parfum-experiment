{
  "startTime": 1674253835211,
  "endTime": 1674253836926,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 6,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 19,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 38,
        "columnEnd": 63
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 38,
        "columnEnd": 63
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 6,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© 2016 and later: Unicode, Inc. and others.\n# License & terms of use: http://www.unicode.org/copyright.html\n\nFROM alpine:latest as build\nLABEL maintainer=\"srl@icu-project.org\"\n\nUSER root\nENV HOME /home/build\n\nRUN apk --update --no-cache add gcc make python3 g++ ccache valgrind pkgconfig doxygen tar zip curl wget git bash bsd-compat-headers\nRUN addgroup build && adduser -g \"Build user\" -h $HOME -S -G build -D -s /bin/sh build\n\n## Change this to a file:///mnt/icu/blah.tgz to replace, or another URL.\nARG ICU_PATH\nENV ICU_PATH=${ICU_PATH}\n\n# The fun one. Note DEPS= speeds up the build when we're doing a one time compile.\n# nproc gives the number of processors.\nRUN if [ $ICU_PATH = \"system\" ]; then \\\n apk --update --no-cache add icu-dev; \\\n else curl -f -L $ICU_PATH | ( mkdir /tmp/icu && cd /tmp/icu && tar xvfpz - && \\\n  cd icu/source && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make DEPS= -j$(nproc) install && make DEPS= -j$(nproc)  DESTDIR=/tmp/ICU/usr install); fi\nUSER build\n\n# Wanted to use this: --wildcards -s '%icu[^/]*%%'\n\nENV LD_LIBRARY_PATH /usr/local/lib\n\n# Make sure ICU is installed and working\n# VOLUME /mnt/icu\nRUN icuinfo | tee /tmp/icuinfo.txt\n\n# VOLUME /home/build\nRUN mkdir /home/build/build /home/build/src\nWORKDIR /home/build/build\nENV PREFIX=/home/build/icu\nRUN if [ -d /tmp/ICU ]; then mkdir -p /home/build/icu/ICU && cp -R /tmp/ICU /home/build/icu/ICU; fi\nADD --chown=build . /home/build/src/\n# HACK: translitdemo is not out of source enabled\nRUN cp -R /home/build/src/translitdemo /home/build/build/translitdemo\n#  No -j$(nproc) - not multithread safe!\nRUN /home/build/src/configure  --prefix=${PREFIX} ICU_CONFIG=$(which icu-config) && \\\n make all install OBS= DESTDIR=${PREFIX} CONTEXTPATH=/icu-bin/ ICU_COMMON_HEADERS=/home/build/src/icu-kube/icuheaders\n#make -k DEPS= clean && make -k DEPS= distclean && sudo apt-get purge -y git subversion python3 doxygen zip curl g++ && sudo apt-get -y autoremove && sudo apt-get clean -y\n#RUN make all\nRUN cp -R /home/build/src/translitdemo /home/build/icu/translitdemo\n\nFROM alpine:latest as httpd\nUSER root\nARG ICU_PATH\nENV ICU_PATH=${ICU_PATH}\nRUN apk --update --no-cache add lighttpd\nCOPY --from=build /home/build/icu /home/build/icu\n# Try to re-install the same ICU\nRUN if [ $ICU_PATH = \"system\" ]; then \\\n apk --update --no-cache add icu-dev; \\\n else apk --update --no-cache add libstdc++ && cp -Rv /home/build/icu/ICU/ICU/usr/usr / && rm -rf /home/build/icu/ICU/usr; fi\nRUN if [ -d /home/build/icu/usr/local ]; then (cd /home/build/icu/usr/; ln -sv local/* .); fi; ls -l /home/build/icu/usr/bin/\nENV LD_LIBRARY_PATH /home/build/icu/usr/lib\nEXPOSE 8080\n# this needs special treatment\nRUN cp -v /home/build/icu/usr/bin/data/collation.html /var/www/localhost/htdocs/ || true\nCOPY icu-kube/lighttpd.conf /etc/lighttpd/lighttpd.conf\nCOPY icu-kube/index.html /var/www/localhost/htdocs/index.html\nCMD [\"lighttpd\", \"-D\", \"-f\", \"/etc/lighttpd/lighttpd.conf\"]\n"
}