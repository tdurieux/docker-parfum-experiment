{
  "startTime": 1674256217454,
  "endTime": 1674256218497,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.opensuse.org/opensuse/tumbleweed:latest\n# Catapult dependencies:\nRUN zypper ref && zypper in --no-recommends -y git zip wget docker ruby gzip make jq curl which unzip bazel1.2 direnv\nRUN echo 'eval $(direnv hook bash)' >> ~/.bashrc\n\nRUN wget \"https://github.com/mikefarah/yq/releases/download/3.2.1/yq_linux_amd64\" -O /usr/local/bin/yq && \\\n  chmod +x /usr/local/bin/yq\n\nRUN wget \"https://github.com/krishicks/yaml-patch/releases/download/v0.0.10/yaml_patch_linux\" -O /usr/local/bin/yaml-patch && \\\n  chmod +x /usr/local/bin/yaml-patch\n\n# Extras, mostly for the terminal image (that could be split in another image)\nRUN zypper in --no-recommends -y vim zsh tmux glibc-locale glibc-i18ndata python ruby python3 python3-pip cf-cli gnuplot\n\nRUN zypper ar --priority 100 https://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/devel:languages:go.repo && \\\n  zypper --gpg-auto-import-keys -n in --no-recommends -y --from=devel_languages_go go1.13\n\nRUN zypper ar --priority 100 https://download.opensuse.org/repositories/Cloud:Tools/openSUSE_Tumbleweed/Cloud:Tools.repo && \\\n  zypper --gpg-auto-import-keys -n in --no-recommends -y Cloud_Tools:kubernetes-client\n\nRUN helm_version=v3.1.1 \\\n  && wget https://get.helm.sh/helm-${helm_version}-linux-amd64.tar.gz -O - | tar xz -C /usr/bin --strip-components=1 linux-amd64/helm\n\n# k8s backends dependencies:\nRUN zypper in --no-recommends -y terraform\n\nRUN zypper in --no-recommends -y python-xml\nRUN curl -f \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"awscli-bundle.zip\" && \\\n  unzip awscli-bundle.zip && rm awscli-bundle.zip && \\\n  ./awscli-bundle/install --install-dir=/usr/lib/ --bin-location=/usr/local/bin/aws && \\\n  rm -rf awscli-bundle*\n\nRUN curl -f -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator && \\\n  chmod +x aws-iam-authenticator && mv aws-iam-authenticator /usr/local/bin/\n\nRUN curl -f https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-292.0.0-linux-x86_64.tar.gz \\\n         > /tmp/google-cloud-sdk.tar.gz \\\n  && mkdir -p /usr/local/gcloud \\\n  && tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz && rm -rf /tmp/google-cloud-sdk.tar.gz \\\n  && /usr/local/gcloud/google-cloud-sdk/install.sh --override-components gcloud --quiet\nENV PATH $PATH:/usr/local/gcloud/google-cloud-sdk/bin\n\nRUN curl -f -o kubectl-aws https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl && \\\n  mv kubectl-aws /usr/local/bin/ && chmod +x /usr/local/bin/kubectl-aws\n\nRUN zypper in --no-recommends -y gcc libffi-devel python3-devel libopenssl-devel\nRUN curl -f -o install.py https://azurecliprod.blob.core.windows.net/install.py && \\\n  sed -i 's/python3-devel/python38-devel/g' install.py && \\\n  printf \"/usr/local/lib/azure-cli\\n/usr/local/bin\\n\\n\\n\" | python3 ./install.py && \\\n  rm ./install.py\n\n# KubeCF dependencies:\nRUN zypper in --no-recommends -y python3-yamllint ShellCheck\n\nRUN zypper rm -y glibc-locale && zypper clean --all\n\nADD . /catapult\nWORKDIR /catapult\nENTRYPOINT [ \"/usr/bin/make\" ]\n"
}