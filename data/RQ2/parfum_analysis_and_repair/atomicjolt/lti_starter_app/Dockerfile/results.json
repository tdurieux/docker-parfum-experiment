{
  "startTime": 1674215558529,
  "endTime": 1674215559168,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.7.4-alpine3.14 as build-env\n\n# Build options:\n# --build-arg VERSION=4.0.4\n\n# VERSION is the semantic version or GIT SHA\n\n# With no build args the build uses VERSION=latest\n\nARG RAILS_ROOT=/app\n\nWORKDIR $RAILS_ROOT\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV SECRET_KEY_BASE=abc\nENV DATABASE_URL=postgresql:does_not_exist\nENV APARTMENT_DISABLE_INIT=true\n\nENV BUNDLE_APP_CONFIG=\"$RAILS_ROOT/.bundle\"\nENV RAILS_GROUPS=\"build\"\n\nRUN apk update \\\n  && apk upgrade \\\n  && apk add --update --no-cache \\\n     build-base curl-dev git postgresql-dev \\\n     yaml-dev zlib-dev nodejs yarn cmake tzdata \\\n     shared-mime-info sassc curl\n\nCOPY Gemfile* package.json yarn.lock ./\nCOPY ./config/secrets.yml.example ./config/k8s/secrets.yml\n\nRUN gem install bundler \\\n  && bundle config frozen 1 \\\n  && bundle install --without test linter development ci --with build\n\nRUN yarn install && yarn cache clean;\nCOPY . .\n\nARG VERSION=latest\n\nRUN printf 'APP_VERSION=\"%s\".freeze\\n' \"$VERSION\" > config/version.rb \\\n  && bin/rails assets:precompile\n\nRUN rm -rf node_modules client tmp/cache spec \\\n  && bundle install --without test linter development ci build \\\n  && bundle clean --force \\\n  && rm -rf /usr/local/bundle/cache/*.gem \\\n  && find /usr/local/bundle/gems/ -name \"*.c\" -delete \\\n  && find /usr/local/bundle/gems/ -name \"*.o\" -delete\n\n##############\nFROM ruby:2.7.4-alpine3.14\n\nARG RAILS_ROOT=/app\n\nWORKDIR $RAILS_ROOT\n\nENV RAILS_ENV=production\nENV RAILS_LOG_TO_STDOUT=1\nENV RAILS_SERVE_STATIC_FILES=1\n\nRUN apk update \\\n  && apk upgrade \\\n  && apk add --update --no-cache \\\n     tzdata postgresql-client bash \\\n     shared-mime-info git \\\n  && addgroup -S app-user && adduser -S app-user -G app-user\n\nCOPY --from=build-env /usr/local/bundle /usr/local/bundle\nCOPY --from=build-env $RAILS_ROOT $RAILS_ROOT\n\nRUN bundle install --without test linter development ci build \\\n  && mkdir -p tmp/pids \\\n  && chown -R app-user tmp public\n\nUSER app-user\n\nEXPOSE 3000\nCMD [\"puma\", \"--preload\"]\n"
}