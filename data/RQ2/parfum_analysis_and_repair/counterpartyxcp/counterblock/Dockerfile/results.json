{
  "startTime": 1674248611532,
  "endTime": 1674248612211,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 34,
        "columnStart": 15,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 66,
        "columnStart": 15,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Counterparty Developers <dev@counterparty.io>\n\n# PyEnv\nENV PYENV_ROOT /root/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\n# Configure Python not to try to write .pyc files on the import of source modules\nENV PYTHONDONTWRITEBYTECODE true\nENV PYTHON_VERSION 3.6.2\n\nRUN apt-get update -q \\\n            && apt-get install -y --no-install-recommends \\\n            apt-utils \\\n            ca-certificates \\\n            wget \\\n            build-essential \\\n            ca-certificates \\\n            curl \\\n            unzip \\\n            vim \\\n            git \\\n            mercurial \\\n            software-properties-common \\\n            gettext-base \\\n            libbz2-dev \\\n            net-tools \\\n            iputils-ping \\\n            telnet \\\n            lynx \\\n            locales \\\n            libreadline-dev \\\n            libsqlite3-dev \\\n            libssl-dev \\\n            zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install pyenv and default python version\nRUN git clone https://github.com/pyenv/pyenv.git /root/.pyenv \\\n            && cd /root/.pyenv \\\n            && git checkout `git describe --abbrev=0 --tags` \\\n            && echo 'export PATH=\"$HOME/.pyenv/bin:$PATH\"' >> ~/.bashrc \\\n            && echo 'eval \"$(pyenv init -)\"'               >> ~/.bashrc\n\nRUN pyenv install $PYTHON_VERSION && pyenv global $PYTHON_VERSION\n\n# Set locale\nRUN dpkg-reconfigure -f noninteractive locales && \\\n            locale-gen en_US.UTF-8 && \\\n            /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# Set home dir env variable\nENV HOME /root\n\n# Install extra counterblock deps\nRUN apt-get update -q \\\n            && apt-get -y upgrade \\\n            && apt-get install -y --no-install-recommends \\\n            libjpeg8-dev \\\n            libgmp-dev \\\n            libzmq3-dev \\\n            libxml2-dev \\\n            libxslt-dev \\\n            zlib1g-dev \\\n            libimage-exiftool-perl \\\n            libevent-dev \\\n            cython && rm -rf /var/lib/apt/lists/*;\n\n# Install\nCOPY requirements.txt /counterblock/\nCOPY setup.py /counterblock/\nCOPY ./counterblock/lib/config.py /counterblock/counterblock/lib/\nWORKDIR /counterblock\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir --upgrade -vv setuptools\nRUN pip3 install --no-cache-dir -r requirements.txt\nCOPY . /counterblock\nRUN python3 setup.py develop\n\nCOPY docker/server.conf /root/.config/counterblock/server.conf\nCOPY docker/modules.conf /root/.config/counterblock/modules.conf\nCOPY docker/modules.conf /root/.config/counterblock/modules.testnet.conf\nCOPY docker/modules.conf /root/.config/counterblock/modules.regtest.conf\nCOPY docker/counterwallet.conf /root/.config/counterblock/counterwallet.conf\nCOPY docker/start.sh /usr/local/bin/start.sh\nRUN chmod a+x /usr/local/bin/start.sh\n\nEXPOSE 4100 4101 4102 14100 14101 14102\n\nENTRYPOINT [\"start.sh\"]\n"
}