{
  "startTime": 1674218610781,
  "endTime": 1674218612350,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.6.0-cuda10.1-cudnn7-devel\n# python3.7 pip 20.0.2\nENV LANG C.UTF-8\n\n#####################################################################################################\n# Install LASER\n#####################################################################################################\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y unzip \\\n      g++ wget cpio \\\n      libgtest-dev swig3.0 \\\n      libopenblas-dev \\\n      git \\\n      libssl-dev \\\n      wget && \\\n    git clone https://github.com/Kitware/CMake ~/cmake && \\\n    cd ~/cmake && \\\n    ./bootstrap && \\\n    make -j 8 install && rm -rf /var/lib/apt/lists/*;\n\n# python modules\nRUN pip install --no-cache-dir transliterate jieba\n\n#install faiss\nRUN cd /opt && \\\n    git clone https://github.com/facebookresearch/faiss.git && \\\n    cd faiss && \\\n    cmake -B build . && \\\n    make -C build -j 8 && \\\n    cd build/faiss/python && python setup.py install\n\n#install LASER\nRUN cd /opt && \\\n    git clone https://github.com/facebookresearch/LASER.git && \\\n    cd LASER && \\\n    LASER=/opt/LASER bash ./install_models.sh\n\n#install LASER tools-external\nRUN cd /opt/LASER && \\\n    sed -i \"s#cd fastBPE#cd fastBPE; ln -s main.cc fastBPE/fastBPE.cpp#g\" install_external_tools.sh && \\\n    sed -i \"s#python setup.py install##g\" install_external_tools.sh && \\\n    LASER=/opt/LASER bash ./install_external_tools.sh\n\n#install fastBPE\nRUN pip install --no-cache-dir fastBPE\n\n#install mecab\nRUN cd /tmp && \\\n    wget -O mecab-0.996.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE\" && \\\n    tar xvzf mecab-0.996.tar.gz && \\\n    cd mecab-0.996 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /opt/LASER/tools-external/mecab --with-charset=utf8 && \\\n    make install && \\\n    rm -rf mecab-0.996.tar.gz mecab-0.996\n\nRUN cd /tmp && \\\n    wget -O mecab-ipadic-2.7.0-XXXX.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM\" && \\\n    tar xvzf mecab-ipadic-2.7.0-XXXX.tar.gz && \\\n    cd mecab-ipadic-2.7.0-20070801/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/LASER/tools-external/mecab --with-mecab-config=/opt/LASER/tools-external/mecab/bin/mecab-config --with-charset=utf8 && \\\n    make install && \\\n    rm -rf mecab-ipadic-2.7.0-XXXX.tar.gz mecab-ipadic-2.7.0-20070801\n\nRUN echo \"export LASER=/opt/LASER\" >> /etc/bash.bashrc && echo \"export LC_ALL=C.UTF-8\" >> /etc/bash.bashrc\n#####################################################################################################\n# config & cleanup\n#####################################################################################################\nRUN ldconfig && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n#####################################################################################################\n# nmt-wizard-docker\n#####################################################################################################\nADD nmtwizard /nmtwizard\nADD requirements.txt /\nRUN pip --no-cache-dir install -r /requirements.txt && rm /requirements.txt\n\nADD utilities/tuminer/entrypoint.py /\nENTRYPOINT [\"python3\", \"/entrypoint.py\"]\n"
}