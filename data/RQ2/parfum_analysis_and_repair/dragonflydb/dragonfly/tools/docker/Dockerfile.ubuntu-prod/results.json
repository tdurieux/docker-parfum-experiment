{
  "startTime": 1674250725510,
  "endTime": 1674250726168,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from ghcr.io/romange/ubuntu-dev:20 as builder\n\nARG TARGETPLATFORM\n\nWORKDIR /build\nCOPY tools/docker/fetch_release.sh /tmp/\nCOPY releases/dragonfly-* /tmp/\n\nRUN curl -f -O https://raw.githubusercontent.com/ncopa/su-exec/master/su-exec.c && \\\n     gcc -Wall -O2 su-exec.c -o su-exec\n\nRUN /tmp/fetch_release.sh ${TARGETPLATFORM}\n\n\n# Now prod image\nFROM ubuntu:20.04\n\n# ARG in fact change the env vars during the build process\n# ENV persist the env vars for the built image as well.\nARG QEMU_CPU\nARG ORG_NAME=dragonflydb\nARG DEBIAN_FRONTEND=noninteractive\n\nLABEL org.opencontainers.image.title Dragonfly\nLABEL org.opencontainers.image.source https://github.com/${ORG_NAME}/dragonfly\n\n\nRUN groupadd -r -g 999 dfly && useradd -r -g dfly -u 999 dfly\nRUN mkdir /data && chown dfly:dfly /data\n\nVOLUME /data\nWORKDIR /data\nCOPY tools/docker/entrypoint.sh /usr/local/bin/entrypoint.sh\nCOPY --from=builder /build/su-exec /usr/local/bin/\nCOPY --from=builder /build/dragonfly /usr/local/bin/\n\nENTRYPOINT [\"entrypoint.sh\"]\n\n# For inter-container communication.\nEXPOSE 6379\n\nCMD [\"dragonfly\", \"--logtostderr\"]\n"
}