{
  "startTime": 1674221077329,
  "endTime": 1674221079761,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 27,
        "columnEnd": 43
      }
    }
  ],
  "repairedDockerfile": "FROM node:13 AS node\nLABEL maintainer \"Patrick Baber <patrick.baber@ueber.io>\"\n\nWORKDIR /var/www\n\nCOPY ./src/resources /var/www/src/resources\nCOPY ./webpack /var/www/webpack\nCOPY ./.editorconfig /var/www/.editorconfig\nCOPY ./.eslintrc.js /var/www/.eslintrc.js\nCOPY ./package.json /var/www/package.json\nCOPY ./yarn.lock /var/www/yarn.lock\n\nRUN yarn install && \\\n    yarn build && \\\n    rm -Rf node_modules && yarn cache clean;\n\n\nFROM php:7.4-fpm-buster\nLABEL maintainer \"Patrick Baber <patrick.baber@ueber.io>\"\n\n# Install PHP dependencies\nRUN buildDeps=\" \\\n        libgmp-dev \\\n        libicu-dev \\\n    \" \\\n    runtimeDeps=\" \\\n        libgmp10 \\\n    \" && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $buildDeps $runtimeDeps && \\\n    docker-php-ext-install \\\n    gmp \\\n\tpdo_mysql \\\n    && \\\n    apt-get purge -y $buildDeps && \\\n    rm -r /var/lib/apt/lists/*\n\n# Install pandoc\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget && \\\n    mkdir -p /usr/src/pandoc && \\\n    cd /usr/src/pandoc && \\\n    wget https://github.com/jgm/pandoc/releases/download/2.9.2/pandoc-2.9.2-1-amd64.deb && \\\n    dpkg -i pandoc-2.9.2-1-amd64.deb && \\\n    apt-get purge -y wget && \\\n    rm -rf /usr/src/pandoc && \\\n    rm -r /var/lib/apt/lists/*\n\n# Install Redis PECL extension\nRUN pecl install redis && \\\n    docker-php-ext-enable redis\n\n# Use the default production configuration\nRUN mv \"$PHP_INI_DIR/php.ini-production\" \"$PHP_INI_DIR/php.ini\"\n\n# Override with custom settings\nCOPY docker/php/etc/custom.ini $PHP_INI_DIR/conf.d/\n\n# Add entrypoint script\nCOPY docker/php/usr/local/bin/docker-entrypoint.sh /usr/local/bin\nRUN curl -f -o /usr/local/bin/wait-for https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && \\\n    chmod +x /usr/local/bin/wait-for\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"php-fpm\"]\n\n# Add Healthcheck\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends procps && \\\n    rm -r /var/lib/apt/lists/*\nHEALTHCHECK --interval=30s --start-period=120s --timeout=5s --retries=3 \\\n    CMD ps aux | egrep '[s]chedule' || ps aux | egrep '[q]ueue' || ps aux | egrep '[f]pm'\n\n# Install Composer\nENV PATH=\"/composer/vendor/bin:$PATH\"\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_MEMORY_LIMIT=-1\nENV COMPOSER_HOME /composer\nCOPY --from=composer:2 /usr/bin/composer /usr/bin/composer\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends git unzip \\\n    && rm -r /var/lib/apt/lists/*\n\n# Install app dependencies\nCOPY --chown=www-data:www-data src/composer.* /var/www/\nRUN cd /var/www/ && \\\n    composer install --no-autoloader --no-scripts && \\\n    chown -R www-data:www-data /var/www/\n\n# Add application & generate classmap\nCOPY --chown=www-data:www-data src/ /var/www/\nCOPY --from=node /var/www/src/public /var/www/public\n\nRUN cd /var/www/ && \\\n    composer dump-autoload --no-scripts && \\\n    chown -R www-data:www-data /var/www/\n\nVOLUME /var/www/storage/\nWORKDIR /var/www/\n"
}