{
  "startTime": 1674219700875,
  "endTime": 1674219702016,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# pull official base image\nFROM python:3.10-slim\n\n# Set the working directory\nENV BASE_DIR=/home/app\nENV APP_HOME=$BASE_DIR/web\nRUN mkdir -p $APP_HOME\nWORKDIR $APP_HOME\n\n# create assets directory\nENV ASSETS_HOME=$BASE_DIR/assets\nRUN mkdir -p $ASSETS_HOME/staticfiles && mkdir $ASSETS_HOME/mediafiles\n\n# Set enviroment variables - Prevents Python from writing pyc files to disc\nENV PYTHONDONTWRITEBYTECODE 1\n\n# Prevents Python from buffering stdout and stderr\nENV PYTHONUNBUFFERED 1\n\n# install psycopg2 dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends postgresql-client gcc python3-dev libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\n\n# install python dependencies\nCOPY ./requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY ./entrypoint.sh .\nRUN sed -i 's/\\r$//g' $APP_HOME/entrypoint.sh\nRUN chmod +x $APP_HOME/entrypoint.sh\n\n# Copies everything over to Docker environment\nCOPY . $APP_HOME\n\n# run entrypoint.sh\nENTRYPOINT [\"/home/app/web/entrypoint.sh\"]\n"
}