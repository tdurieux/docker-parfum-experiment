{
  "startTime": 1674255961219,
  "endTime": 1674255962291,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 6,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim\n\n# make it fresh\n# add en UTF-8 as a locale\nENV OTHER_PROJECTS mulle-objc/mulle-objc-developer; \\\nmulle-c/mulle-c-developer;\n\nENV SDE_PROJECTS    mulle-test; \\\nmulle-sde-developer;\n\n# Uncomment for prerelease\nENV MULLE_SDE_DEFAULT_VERSION prerelease\nENV MULLE_HOSTNAME ci-prerelease\n\n#   && apt-get -y install locales \\\n#   && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && locale-gen \\\n\n# bsdmainutils for column\n# in theory we could use the tools from mulle-clang instead of build-essential\n# but they are untested...\n\nRUN DEBIAN_FRONTEND=noninteractive \\\n      apt-get update \\\n   && apt-get -y --no-install-recommends install cmake ninja-build build-essential uuid-runtime bsdmainutils wget \\\n\n   && wget \"https://raw.githubusercontent.com/mulle-sde/mulle-sde/prerelease/bin/installer-all\" \\\n   && chmod 755 installer-all \\\n   && ./installer-all /usr no \\\n\n   && wget \"https://github.com/Codeon-GmbH/mulle-clang-project/releases/download/11.0.0.0/mulle-clang-11.0.0.0-bullseye-amd64.deb\" \\\n   && dpkg --install \"mulle-clang-11.0.0.0-bullseye-amd64.deb\" && rm -rf /var/lib/apt/lists/*;\n\n"
}