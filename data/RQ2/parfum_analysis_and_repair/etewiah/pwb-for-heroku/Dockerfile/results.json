{
  "startTime": 1674256230180,
  "endTime": 1674256230778,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:alpine\n\n# https://www.chrisblunt.com/rails-on-docker-getting-started-docker-ruby-rails/\n# https://hub.docker.com/_/ruby/\n\n# Install app's runtime dependencies\nRUN apk add --no-cache -U tzdata git postgresql postgresql-client nodejs libffi-dev readline sqlite && \\\n    apk add --no-cache --virtual build-deps build-base libc-dev linux-headers libxml2-dev libxslt-dev readline-dev postgresql-dev && \\\n    cp /usr/share/zoneinfo/Europe/London /etc/localtime && \\\n    echo \"Europe/London\" > /etc/timezone\n\n# Bundle into the temp directory\nWORKDIR /tmp\nADD Gemfile ./\nRUN bundle install --jobs=2 && \\\n    apk del build-deps\n\n# Copy the app's code into the container\nENV APP_HOME /app\nCOPY . $APP_HOME\nWORKDIR $APP_HOME\n\n# Configure production environment variables\nENV RAILS_ENV=production \\\n    RACK_ENV=production \\\n    RAILS_LOG_TO_STDOUT=enabled \\\n    RAILS_SERVE_STATIC_FILES=enabled \\\n    LANG=en_US.UTF-8\n\n# Expose port 3000 from the container\nEXPOSE 9292\n\n# setup postgresql\n# https://github.com/kiasaki/docker-alpine-postgres/blob/master/docker-entrypoint.sh\nENV LANG=en_US.utf8 \\\n    PGDATA=/var/lib/postgresql/data \\\n    POSTGRES_DB=pwb \\\n    POSTGRES_PASSWORD=superman \\\n    POSTGRES_USER=superman \\\n    SECRET_KEY_BASE=20dbf7add3eb28096f1e77cb4e15f13a46e6692f4d0c0f9a3e9db7cb4ddaa8a7cac0912cc1f8ac9ae1fae9eb3115e2dbd32b1e626ca72da9c9fc83beb2cb6312\nRUN apk add --no-cache sudo && \\\n    mkdir -p $PGDATA && \\\n    mkdir -p /run/postgresql/ && \\\n    chown -R postgres \"$PGDATA\" && \\\n    chown -R postgres /run/postgresql/ && \\\n    sudo -E -u postgres initdb && \\\n    sed -ri \"s/^#(listen_addresses\\s*=\\s*)\\S+/\\1'*'/\" \"$PGDATA\"/postgresql.conf && \\\n    echo \"CREATE DATABASE $POSTGRES_DB\" | sudo -E -u postgres postgres --single -jE && \\\n    echo \"CREATE USER $POSTGRES_USER WITH SUPERUSER PASSWORD '$POSTGRES_PASSWORD'\" | sudo -E -u postgres postgres --single -jE && \\\n    echo \"host all all 0.0.0.0/0 md5\" >> \"$PGDATA\"/pg_hba.conf && \\\n    sed  -e 's/pwb-for-heroku$/superman/g' \\\n        -e 's/pwb-for-heroku_production/pwb/g' \\\n        -e 's/PWB-FOR-HEROKU_DATABASE_PASSWORD/POSTGRES_PASSWORD/g' -i config/database.yml\n\n# the main entry point\nCMD /app/docker-entrypoint.sh\n"
}