{
  "startTime": 1674254455275,
  "endTime": 1674254455991,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG REGISTRY\nARG CODE_VERSION\nFROM ${REGISTRY}/lib_base:${CODE_VERSION}\n\nLABEL maintainer=\"Dan Crankshaw <dscrankshaw@gmail.com>\"\n\n# install docker and other apt-installable dependencies\nRUN apt-get update -qq && apt-get install -y -qq --no-install-recommends \\\n    wget apt-transport-https ca-certificates curl gnupg-agent software-properties-common clang-format redis-server \\\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n    && apt-get update -qq \\\n    && apt-get install --no-install-recommends -y -qq docker-ce \\\n    && apt-get install --no-install-recommends -y -qq python3.7 python3.7-dev \\\n    && wget https://bootstrap.pypa.io/get-pip.py \\\n    && python3.7 get-pip.py \\\n    && rm -rf get-pip.py \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get autoremove -y\n\nENV PIP_DEFAULT_TIMEOUT=100\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Alias python to python3\nRUN echo '#!/bin/bash\\npython3.7 \"$@\"' > /usr/bin/python && \\\n    chmod +x /usr/bin/python\n\nRUN pip3 install --no-cache-dir cloudpickle==0.5.* pyzmq==17.0.* requests==2.20.0 scikit-learn==0.19.* \\\n  numpy==1.14.* pyyaml >=4.2b1 docker==3.1.* kubernetes==5.0.* tensorflow==1.13.* mxnet==1.4.* pyspark==2.3.* \\\n  xgboost==0.7.* urllib3==1.24.* keras==2.2.*# CI is broken when urllib3's version is 1.25.1. Delete urllib3==1.24.* later once version compatibility is stabilized\n\n# Install PyTorch\nRUN pip3 install --no-cache-dir torch==1.1.* torchvision==0.3.*\n\n# Install kubectl\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \\\n      && chmod +x kubectl \\\n      && mv kubectl /usr/local/bin/\n\n# Install Java\nRUN mkdir -p /usr/share/man/man1 && \\\n    apt-get update -qq -y && \\\n    apt-get install --no-install-recommends openjdk-8-jre openjdk-8-jdk-headless -y && rm -rf /var/lib/apt/lists/*;\n\n# Marking R as unmaintained for now\n# Install R\n# RUN apt-get update -qq && apt-get install -y -qq --no-install-recommends r-base libxml2-dev gfortran \\\n#   && rm -rf /var/lib/apt/lists/*\n# COPY containers/R/tests/install_test_dependencies.R /install_test_dependencies.R\n# RUN Rscript /install_test_dependencies.R\n\nENTRYPOINT [\"bash\"]\n\n# vim: set filetype=dockerfile:\n"
}