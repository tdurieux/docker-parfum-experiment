{
  "startTime": 1674250374167,
  "endTime": 1674250374999,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This ARG isn't used but prevents warnings in the build script\nARG REGISTRY\nARG CODE_VERSION\nFROM openjdk:8-jdk\n\nLABEL maintainer=\"Dan Crankshaw <dscrankshaw@gmail.com>\"\n\n# First set up maven\nARG MAVEN_VERSION=3.5.0\nARG SHA=beb91419245395bd69a4a6edad5ca3ec1a8b64e41457672dc687c173a495f034\nARG BASE_URL=https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn \\\n  && apt-get update -qq \\\n  && apt-get install --no-install-recommends -y -qq libzmq5 libzmq3-dev git pkg-config libtool autoconf g++ make \\\n  && git clone https://github.com/zeromq/jzmq.git /root/jzmq \\\n  && cd /root/jzmq/jzmq-jni \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install && rm -rf /var/lib/apt/lists/*;\n\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG /root/.m2\n\nCOPY ./containers/jvm/ /root/container\n\nWORKDIR /root/container\n\nRUN mkdir -p /model \\\n      && cd /root/container \\\n      && mvn clean package -DskipTests\n\nENV CLIPPER_MODEL_PATH=/model\n\nCMD [\"java\", \"-Djava.library.path=/usr/local/lib\", \"-Xmx512m\", \"-cp\", \"/root/container/spark-container-impl/target/spark-container-impl-0.1.jar\", \"ai.clipper.spark.container.impl.ContainerMain\"]\n\nHEALTHCHECK --interval=3s --timeout=3s --retries=1 CMD test -f /model_is_ready.check || exit 1\n# vim: set filetype=dockerfile:\n"
}