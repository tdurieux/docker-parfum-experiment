{
  "startTime": 1674216316684,
  "endTime": 1674216317633,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Use this dockerfile to run the application.\n#\n# Start the server using docker-compose:\n#\n#   docker-compose build\n#   docker-compose up\n#\n# NOTE: In future examples replace {{volume_name}} with your projects desired volume name\n#\n# You can install dependencies via the container:\n#\n#   docker-compose run {{volume_name}} composer install\n#\n# You can manipulate dev mode from the container:\n#\n#   docker-compose run {{volume_name}} composer development-enable\n#   docker-compose run {{volume_name}} composer development-disable\n#   docker-compose run {{volume_name}} composer development-status\n#\n# OR use plain old docker\n#\n#   docker build -f Dockerfile-dev -t {{volume_name}} .\n#   docker run -it -p \"8080:80\" -v $PWD:/var/www {{volume_name}}\n#\nFROM php:7.4-apache\n\n# system dependecies\nRUN apt-get update \\\n && apt-get remove -y mariadb-server mariadb-client \\\n && apt-get install --no-install-recommends -y \\\n git \\\n libssl-dev \\\n default-mysql-client \\\n libmcrypt-dev \\\n libicu-dev \\\n libpq-dev \\\n libjpeg62-turbo-dev \\\n libjpeg-dev \\\n libpng-dev \\\n zlib1g-dev \\\n libonig-dev \\\n libxml2-dev \\\n libzip-dev \\\n unzip && rm -rf /var/lib/apt/lists/*;\n\n# PHP dependencies\nRUN docker-php-ext-install \\\n gd \\\n intl \\\n mbstring \\\n pdo \\\n pdo_mysql \\\n mysqli \\\n zip\n\n# Xdebug\nRUN pecl install xdebug \\\n && docker-php-ext-enable xdebug \\\n && echo 'xdebug.remote_autostart=0' >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo 'xdebug.remote_enable=1' >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo 'xdebug.remote_host=host.docker.internal' >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo 'xdebug.remote_port=9000' >>  /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo 'xdebug.remote_cookie_expire_time=36000' >>  /usr/local/etc/php/conf.d/xdebug.ini\n\n# Apache\nRUN a2enmod rewrite \\\n && echo \"ServerName docker\" >> /etc/apache2/apache2.conf\n\n# Composer\nRUN curl -f -sS https://getcomposer.org/installer | php && \\\n mv composer.phar /usr/local/bin/composer\n\nWORKDIR /var/www/public\n"
}