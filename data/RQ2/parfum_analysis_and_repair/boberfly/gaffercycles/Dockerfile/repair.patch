diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/boberfly/gaffercycles/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/boberfly/gaffercycles/Dockerfile/repaired.Dockerfile
index 49fb334..8f0bd7a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/boberfly/gaffercycles/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/boberfly/gaffercycles/Dockerfile/repaired.Dockerfile
@@ -44,7 +44,7 @@ RUN yum install -y centos-release-scl && \
 	yum install -y cmake3 && \
 	ln -s /usr/bin/cmake3 /usr/bin/cmake && \
 #
-	pip install scons==3.1.2 && \
+	pip install --no-cache-dir scons==3.1.2 && \
 #
 	yum install -y \
 		git \
@@ -93,7 +93,7 @@ RUN yum install -y centos-release-scl && \
 #	Install Appleseed dependencies
 #
 	yum install -y \
-		lz4 lz4-devel
+		lz4 lz4-devel && rm -rf /var/cache/yum
 #
 # Install packages needed to generate the
 # Gaffer documentation.
@@ -119,18 +119,18 @@ RUN yum install -y centos-release-scl && \
 # correct version will already be installed and we just ignore this...
 #	./versionlock.sh lock-new /tmp/packages
 
-RUN yum install -y wget
+RUN yum install -y wget && rm -rf /var/cache/yum
 #
 #
 # CUDA 11.5.1
 #
-RUN	wget -O cuda.rpm https://developer.download.nvidia.com/compute/cuda/11.5.1/local_installers/cuda-repo-rhel7-11-5-local-11.5.1_495.29.05-1.x86_64.rpm --progress=dot:mega \
-	&& rpm -i cuda.rpm && yum install -y cuda && rm cuda.rpm
+RUN wget -O cuda.rpm https://developer.download.nvidia.com/compute/cuda/11.5.1/local_installers/cuda-repo-rhel7-11-5-local-11.5.1_495.29.05-1.x86_64.rpm --progress=dot:mega \
+	&& rpm -i cuda.rpm && yum install -y cuda && rm cuda.rpm && rm -rf /var/cache/yum
 #
 # ISPC 1.16.1
 #
 RUN wget -O ispc.tar.gz https://github.com/ispc/ispc/releases/download/v1.16.1/ispc-v1.16.1-linux.tar.gz -- \
-	&& mkdir /ispc && tar xf ispc.tar.gz -C /ispc --strip-components=1 && mv /ispc/bin/ispc /usr/bin/ispc && rm -rf /ispc
+	&& mkdir /ispc && tar xf ispc.tar.gz -C /ispc --strip-components=1 && mv /ispc/bin/ispc /usr/bin/ispc && rm -rf /ispc && rm ispc.tar.gz
 #
 # OptiX 7.4.0
 #
@@ -140,7 +140,7 @@ RUN mkdir /optix && chmod +x NVIDIA-OptiX-SDK-7.4.0-linux64-x86_64.sh && ./NVIDI
 # ROCm/HIP 4.5
 #
 RUN echo -e "[ROCm]\nname=ROCm\nbaseurl=https://repo.radeon.com/rocm/yum/4.5\nenabled=1\ngpgcheck=0" >> /etc/yum.repos.d/rocm.repo \
-	&& yum install -y rocm-dev rocm-libs
+	&& yum install -y rocm-dev rocm-libs && rm -rf /var/cache/yum
 
 # Copy over build script and set an entry point that
 # will use the compiler we want.