diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/metasfresh/metasfresh/backend/metasfresh-dist/dist/src/main/docker/app/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/metasfresh/metasfresh/backend/metasfresh-dist/dist/src/main/docker/app/Dockerfile/repaired.Dockerfile
index 9a6f846..5d0c6b6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/metasfresh/metasfresh/backend/metasfresh-dist/dist/src/main/docker/app/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/metasfresh/metasfresh/backend/metasfresh-dist/dist/src/main/docker/app/Dockerfile/repaired.Dockerfile
@@ -2,16 +2,16 @@
 FROM docker.metasfresh.com:6000/ubuntu:16.04
 
 # to make sure that the cache is only used during one day, run docker build --build-arg CACHEBUST=$(date "+%Y-%m-%d")
-# that way we should get the latest updates since the release of our base image 
+# that way we should get the latest updates since the release of our base image
 # thx to https://github.com/moby/moby/issues/1996#issuecomment-185872769
 ARG CACHEBUST=1
 
 RUN apt update \
     && apt -y full-upgrade \
-    && apt -y install openjdk-8-jdk-headless \
-    && apt -y install unzip \
+    && apt -y --no-install-recommends install openjdk-8-jdk-headless \
+    && apt -y --no-install-recommends install unzip \
     && apt -y autoremove \
-    && apt -y clean
+    && apt -y clean && rm -rf /var/lib/apt/lists/*;
 
 # create the metasfresh-folder as well as a folder for optional jars that might be volume-mounted from outside
 RUN mkdir -p /opt/metasfresh/external-lib
@@ -19,7 +19,7 @@ RUN mkdir -p /opt/metasfresh/external-lib
 # metasfresh_server.jar is just for historical reasons (service configs on some legacy servers etc)
 COPY ./metasfresh_server.jar /opt/metasfresh/metasfresh-app.jar
 
-# Explode the uber jar to make it easier to work with the docker image; 
+# Explode the uber jar to make it easier to work with the docker image;
 # e.g. with the exploded uber jar, we can later copy or overwrite config files into the docker image that change the applications behavior.
 # Note that the skript start_materialdispo_docker.sh is adapted to the exploded jar.
 # Note2 that we need unzip; jar doesn't work, thx to https://stackoverflow.com/a/39653862/1012103