{
  "startTime": 1674217679367,
  "endTime": 1674217680247,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-alpine as build-step\n\nLABEL maintainer=\"info@metasfresh.com\"\nLABEL runinfo=\"Run this image with -e PUBLIC_URL=https://yourdomain.org\"\n\nCOPY . /\n\nRUN yarn install && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\nRUN chmod a+x ./nginx-config/docker-entrypoint.d/*\n\n# Step 2\nFROM nginx\n\n# We copy our files to staging folders. They will be copied to the actual folders at startup, to prevent overmounting.\n# Also see the script in nginx-config.\nRUN mkdir -p /usr/share/nginx/prepared_nginx_files/html\nCOPY --from=build-step build /usr/share/nginx/prepared_nginx_files/html\n\n# Make sure that the default files are gone, because the startup-script won't overwrite existing files\nRUN rm -r /usr/share/nginx/html/*\n#COPY --from=build-step build /usr/share/nginx/html\n\nCOPY --from=build-step ./nginx-config/docker-entrypoint.d /docker-entrypoint.d\n"
}