{
  "startTime": 1674252793374,
  "endTime": 1674252794448,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8/nodejs-14-minimal AS frontend-builder\n\nENV NPM_CACHE_LOCATION=$HOME/.npm \\\n    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\n\nWORKDIR /label-studio/label_studio/frontend\n\nCOPY --chown=1001:0 label_studio/frontend .\nCOPY --chown=1001:0 label_studio/__init__.py /label-studio/label_studio/__init__.py\n\nRUN --mount=type=cache,target=$NPM_CACHE_LOCATION,uid=1001,gid=0 \\\n    npm ci \\\n && npm run build:production\n\nFROM registry.access.redhat.com/ubi8/python-39\n\nENV LS_DIR=/label-studio \\\n    PIP_CACHE_DIR=$HOME/.cache \\\n    DJANGO_SETTINGS_MODULE=core.settings.label_studio \\\n    LABEL_STUDIO_BASE_DATA_DIR=/label-studio/data\n\nWORKDIR $LS_DIR\n\n# Copy and install middleware dependencies\nCOPY --chown=1001:0 deploy/requirements-mw.txt .\nRUN --mount=type=cache,target=$PIP_CACHE_DIR,uid=1001,gid=0 \\\n    pip3 install --no-cache-dir -r requirements-mw.txt\n\n# Copy and install requirements.txt first for caching\nCOPY --chown=1001:0 deploy/requirements.txt .\nRUN --mount=type=cache,target=$PIP_CACHE_DIR,uid=1001,gid=0 \\\n    pip3 install --no-cache-dir -r requirements.txt\n\nCOPY --chown=1001:0 . .\nRUN --mount=type=cache,target=$PIP_CACHE_DIR,uid=1001,gid=0 \\\n    pip3 install --no-cache-dir -e .\n\nRUN rm -rf ./label_studio/frontend\nCOPY --chown=1001:0 --from=frontend-builder /label-studio/label_studio/frontend/dist ./label_studio/frontend/dist\n\nRUN python3 label_studio/manage.py collectstatic --no-input\n\nEXPOSE 8080\n\nLABEL name=\"LabelStudio\" \\\n  maintainer=\"infra@heartex.com\" \\\n  vendor=\"Heartex\" \\\n  version=\"1.5.0dev\" \\\n  release=\"1\" \\\n  summary=\"LabelStudio\" \\\n  description=\"Label Studio is an open source data labeling tool.\"\n\nCOPY --chown=1001:0 licenses/ /licenses\nRUN cp $LS_DIR/LICENSE /licenses\n\nENTRYPOINT [\"./deploy/docker-entrypoint.sh\"]\nCMD [\"label-studio\"]"
}