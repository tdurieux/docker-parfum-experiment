{
  "startTime": 1674252722660,
  "endTime": 1674252723397,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# RUST_CONTAINTER - base rust tooling, based on https://github.com/liuchong/docker-rustup\n#\nFROM debian:buster as rustup\nWORKDIR /root\n\n# common packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    ca-certificates curl file \\\n    build-essential \\\n    autoconf automake autotools-dev libtool xutils-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV SSL_VERSION=1.0.2u\n\nRUN curl -f https://www.openssl.org/source/openssl-$SSL_VERSION.tar.gz -O && \\\n    tar -xzf openssl-$SSL_VERSION.tar.gz && \\\n    cd openssl-$SSL_VERSION && ./config && make depend && make install && \\\n    cd .. && rm -rf openssl-$SSL_VERSION* && rm openssl-$SSL_VERSION.tar.gz\n\nENV OPENSSL_LIB_DIR=/usr/local/ssl/lib \\\n    OPENSSL_INCLUDE_DIR=/usr/local/ssl/include \\\n    OPENSSL_STATIC=1\nENV RUST_TOOLCHAIN=nightly-2021-10-19\n\nENV RUSTUP_HOME=/opt/rust\nENV CARGO_HOME=/opt/cargo\nENV PATH=/opt/rust/bin:$PATH\nENV PATH=/opt/cargo/bin:$PATH\nRUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain ${RUST_TOOLCHAIN} -y --no-modify-path\nRUN rustup target add wasm32-unknown-unknown --toolchain ${RUST_TOOLCHAIN}\n\n#\n# BUILDER - mangata tooling required for building mangata-node\n#\nFROM rustup AS builder_core\nLABEL description=\"Compiles all workspace artifacts\"\n#Export memory Profile env. variables.\nENV MEMORY_PROFILER_OUTPUT=profiling_%e_%t.dat\nENV MEMORY_PROFILER_CULL_TEMPORARY_ALLOCATIONS=1\nENV MEMORY_PROFILER_LOG=info\nENV MEMORY_PROFILER_LOGFILE=profiling_%e_%t.log\nENV ETH_APP_ID=0xdd514baa317bf095ddba2c0a847765feb389c6a0\nENV ERC20_APP_ID=0x00e392c04743359e39f00cd268a5390d27ef6b44\n\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t# cmake \\\n\tpkg-config \\\n\t# libssl-dev \\\n\tgit \\\n\t# build-essential \\\n\tclang \\\n\tlibclang-dev \\\n\t# curl \\\n\t# llvm \\\n\tnodejs \\\n\tnpm \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN npm install --global yarn && npm cache clean --force;\n\nRUN cargo install cargo2junit \\\n\t&& rm -rf ${CARGO_HOME}/git \\\n\t&& rm -rf ${CARGO_HOME}/registry\n\nRUN chmod 777 /opt/\nRUN chmod 777 /opt/cargo/\n"
}