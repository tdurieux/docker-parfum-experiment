{
  "startTime": 1674245986313,
  "endTime": 1674245987661,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\nARG ARCH=gpu\n\nARG py_version=3\n\n# Validate that arguments are specified\nRUN test $py_version || exit 1\n\nRUN echo $py_version\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         ca-certificates \\\n         libjpeg-dev \\\n         nginx \\\n         jq \\\n         libsm6 \\\n         libxext6 \\\n         libxrender-dev \\\n         nginx \\\n         libpng-dev && \\\n     rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o ~/miniconda.sh -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda install -y python=3.7 numpy pyyaml scipy ipython mkl mkl-include ninja cython typing && \\\n     /opt/conda/bin/conda install -y -c pytorch magma-cuda100 && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN python --version\nRUN pip --version\n\n# #RUN df -a\nRUN pip install --no-cache-dir --trusted-host pypi.python.org -v --log /tmp/pip.log torch torchvision\n\n\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\n# Force stdin, stdout and stderr to be totally unbuffered. Good for logging\nENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 PYTHONIOENCODING=UTF-8 LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nRUN nvcc --version\nRUN which nvcc\n\nRUN git clone https://github.com/NVIDIA/apex.git && cd apex && python setup.py install --cuda_ext --cpp_ext\n\nCOPY requirements.txt ./requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\nENV PATH=\"/opt/ml/code:${PATH}\"\nCOPY /t5 /opt/ml/code\n\nWORKDIR /opt/ml/code\n"
}