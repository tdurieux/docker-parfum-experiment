{
  "startTime": 1674248747975,
  "endTime": 1674248748974,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM instructure/ruby-passenger:2.6\n\nARG DEV_BUILD='false'\nENV APP_HOME /usr/src/app/\n\nUSER root\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n  && curl -f --silent https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get update -y \\\n  && apt-get install --no-install-recommends -y \\\n    mysql-client-5.7 \\\n    postgresql-client-9.6 \\\n  && ( [ \"$DEV_BUILD\" = 'true' ] \\\n    && apt-get install --no-install-recommends -y \\\n      libqt4-dev \\\n      libqtwebkit-dev \\\n      xvfb \\\n    || true) \\\n  && apt-get clean \\\n  && rm -rf \\\n    /tmp/* \\\n    /var/lib/apt/lists/* \\\n    /var/tmp/*\n\nCOPY config/nginx/location.conf /usr/src/nginx/location.d/location.conf\n\nRUN if [ \"$DEV_BUILD\" = 'true' ]; then echo 'docker ALL=(ALL) NOPASSWD: SETENV: /usr/sbin/update-ca-certificates' >> /etc/sudoers; fi\n\nUSER docker\n\nCOPY --chown=docker:docker Gemfile Gemfile.lock $APP_HOME\n\nRUN if [ \"$DEV_BUILD\" = 'false' ]; then BUNDLER_ARGS='--without development test'; fi; \\\n  bundle install --jobs 8 $BUNDLER_ARGS\n\nRUN mkdir -p tmp\nCOPY --chown=docker:docker . $APP_HOME\n\nRUN RAILS_ENV=production \\\n    DATABASE_URL=postgres://user:pass@127.0.0.1/does_not_exist_dbname \\\n    LTI_KEY=12345 \\\n    LTI_SECRET=secret \\\n    CANVAS_KEY=1 \\\n    CANVAS_SECRET=secret \\\n    SECRET_KEY_BASE=fake \\\n    bundle exec rake assets:precompile\n\nENTRYPOINT [ \"/usr/src/app/docker-entrypoint.sh\" ]\n"
}