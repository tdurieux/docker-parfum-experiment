{
  "startTime": 1674217353081,
  "endTime": 1674217353870,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "<%= generation_message %>\nARG RUBY=2.7\n\n<% if development? -%>\nFROM instructure/ruby-passenger:$RUBY\n<% else -%>\nFROM starlord.inscloudgate.net/jenkins/ruby-passenger:$RUBY\n<% end -%>\nLABEL maintainer=\"Instructure\"\n\nARG POSTGRES_CLIENT=12\nENV APP_HOME /usr/src/app/\n<% if development? -%>\nENV RAILS_ENV development\n<% else -%>\nENV RAILS_ENV production\nENV SASS_STYLE compressed\n<% end -%>\nENV NGINX_MAX_UPLOAD_SIZE 10g\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nARG CANVAS_RAILS=6.1\nENV CANVAS_RAILS=${CANVAS_RAILS}\n\nENV YARN_VERSION 1.19.1-1\nENV BUNDLER_VERSION 2.2.17\nENV GEM_HOME /home/docker/.gem/$RUBY\nENV PATH $GEM_HOME/bin:$PATH\nENV BUNDLE_APP_CONFIG /home/docker/.bundle\n\nWORKDIR $APP_HOME\n\nUSER root\n<% if development? -%>\n\nARG USER_ID\n# This step allows docker to write files to a host-mounted volume with the correct user permissions.\n# Without it, some linux distributions are unable to write at all to the host mounted volume.\nRUN if [ -n \"$USER_ID\" ]; then usermod -u \"${USER_ID}\" docker \\\n        && chown --from=9999 docker /usr/src/nginx /usr/src/app -R; fi\n\n<% end -%>\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n  && printf 'path-exclude /usr/share/doc/*\\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n  && curl -f -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get update -qq \\\n  && apt-get install -qqy --no-install-recommends \\\n       nodejs \\\n       yarn=\"$YARN_VERSION\" \\\n       libxmlsec1-dev \\\n       python3-lxml \\\n       python-is-python3 \\\n       libicu-dev \\\n       parallel \\\n       postgresql-client-$POSTGRES_CLIENT \\\n       unzip \\\n       pbzip2 \\\n       fontforge \\\n       git \\\n       build-essential \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0\n\nRUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ]; then BUNDLER_INSTALL=\"-i /var/lib/gems/$RUBY_MAJOR.0\"; fi \\\n  && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \\\n  && gem install bundler --no-document -v $BUNDLER_VERSION \\\n  && find $GEM_HOME ! -user docker | xargs chown docker:docker\nRUN npm install -g npm@latest && npm cache clean --force\n\nUSER docker\n\n<% if development? -%>\nRUN set -eux; \\\n  mkdir -p \\\n    <%= docker_compose_volume_paths.join(\" \\\\\\n    \") %>\n<% end -%>\n"
}