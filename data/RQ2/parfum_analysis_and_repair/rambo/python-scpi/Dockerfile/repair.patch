diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rambo/python-scpi/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rambo/python-scpi/Dockerfile/repaired.Dockerfile
index bf8ed68..32b6a98 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rambo/python-scpi/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rambo/python-scpi/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# syntax=docker/dockerfile:1.1.7-experimental
 #############################################
 # Tox testsuite for multiple python version #
 #############################################
@@ -7,7 +6,7 @@ ARG PYTHON_VERSIONS="3.8.7 3.9.1 3.7.9 3.6.12"
 ARG POETRY_VERSION="1.1.4"
 RUN for pyver in $PYTHON_VERSIONS; do pyenv install -s $pyver; done \
     && pyenv global $PYTHON_VERSIONS \
-    && poetry self update $POETRY_VERSION || pip install -U poetry==$POETRY_VERSION \
+    && poetry self update $POETRY_VERSION || pip install --no-cache-dir -U poetry==$POETRY_VERSION \
     && python -m pip install -U tox \
     && apk add --no-cache \
         git \
@@ -50,8 +49,8 @@ RUN apk add --no-cache \
         cargo \
     # githublab ssh
     && mkdir -p -m 0700 ~/.ssh && ssh-keyscan gitlab.com github.com | sort > ~/.ssh/known_hosts \
-    # Install poetry package manager their way (pypi package sometimes has issues)
-    && curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 \
+    # Install poetry package manager their way (pypi package sometimes has issues) \
+    && curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 \
     && echo 'source $HOME/.poetry/env' >>/root/.profile \
     && source $HOME/.poetry/env \
     # We're in a container, do not create useless virtualenvs
@@ -65,10 +64,10 @@ SHELL ["/bin/bash", "-lc"]
 WORKDIR /pysetup
 COPY ./poetry.lock ./pyproject.toml /pysetup/
 # Install basic requirements (utilizing an internal docker wheelhouse if available)
-RUN --mount=type=ssh pip3 install wheel \
+RUN --mount=type=ssh pip3 install --no-cache-dir wheel \
     && poetry export -f requirements.txt --without-hashes -o /tmp/requirements.txt \
     && pip3 wheel --wheel-dir=/tmp/wheelhouse --trusted-host 172.17.0.1 --find-links=http://172.17.0.1:3141 -r /tmp/requirements.txt \
-    && pip3 install --trusted-host 172.17.0.1 --find-links=http://172.17.0.1:3141 --find-links=/tmp/wheelhouse/ /tmp/wheelhouse/*.whl \
+    && pip3 install --no-cache-dir --trusted-host 172.17.0.1 --find-links=http://172.17.0.1:3141 --find-links=/tmp/wheelhouse/ /tmp/wheelhouse/*.whl \
     && true
 
 
@@ -101,7 +100,7 @@ RUN --mount=type=ssh apk add --no-cache \
         bash \
         tini \
     && chmod a+x /docker-entrypoint.sh \
-    && pip3 install --trusted-host 172.17.0.1 --find-links=http://172.17.0.1:3141 --find-links=/tmp/wheelhouse/ /tmp/wheelhouse/scpi-*.whl \
+    && pip3 install --no-cache-dir --trusted-host 172.17.0.1 --find-links=http://172.17.0.1:3141 --find-links=/tmp/wheelhouse/ /tmp/wheelhouse/scpi-*.whl \
     && rm -rf /tmp/wheelhouse/ \
     # Do whatever else you need to
     && true
@@ -141,6 +140,6 @@ WORKDIR /app
 RUN apk add --no-cache zsh \
     && sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" \
     && echo "source /root/.profile" >>/root/.zshrc \
-    && pip3 install git-up \
+    && pip3 install --no-cache-dir git-up \
     && true
 ENTRYPOINT ["/bin/zsh", "-l"]