diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mvt-project/mvt/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mvt-project/mvt/Dockerfile/repaired.Dockerfile
index a96e1cf..dd9df87 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mvt-project/mvt/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mvt-project/mvt/Dockerfile/repaired.Dockerfile
@@ -11,28 +11,26 @@ ENV PIP_NO_CACHE_DIR=1
 # Fixing major OS dependencies
 # ----------------------------
 RUN apt update \
-  && apt install -y python3 python3-pip libusb-1.0-0-dev \
-  && apt install -y wget unzip\ 
-  && DEBIAN_FRONTEND=noninteractive apt-get -y install default-jre-headless \
-
+  && apt install --no-install-recommends -y python3 python3-pip libusb-1.0-0-dev \
+  && apt install --no-install-recommends -y wget unzip\ 
+ && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install default-jre-headless \
+ 
 # Install build tools for libimobiledevice
-# ----------------------------------------
-  build-essential \
-  checkinstall \
+--------------- \
+  build-essent \
+  che \
   git \
   autoconf \
   automake \
   libtool-bin \
   libplist-dev \
-  libusbmuxd-dev \
-  libssl-dev \
+  libusbmuxd \
+  libssl- \
   sqlite3 \
-  pkg-config \
-
-# Clean up
-# --------
-  && apt-get clean \
-  && rm -rf /var/lib/apt/lists/* /var/cache/apt
+    pkg-config
+ 
+Cl an up \
+-- ----- && rm -rf /var/lib/apt/lists/*;
 
 
 # Build libimobiledevice
@@ -58,7 +56,7 @@ RUN git clone https://github.com/libimobiledevice/libplist \
 
 # Installing MVT
 # --------------
-RUN pip3 install mvt
+RUN pip3 install --no-cache-dir mvt
 
 # Installing ABE
 # --------------
@@ -67,23 +65,23 @@ RUN mkdir /opt/abe \
 # Create alias for abe
   && echo 'alias abe="java -jar /opt/abe/abe.jar"' >> ~/.bashrc
 
-# Install Android Platform Tools 
-# ------------------------------ 
+# Install Android Platform Tools
+# ------------------------------
 
 RUN mkdir /opt/android \
   && wget -q https://dl.google.com/android/repository/platform-tools-latest-linux.zip \
   && unzip platform-tools-latest-linux.zip -d /opt/android \
 # Create alias for adb 
-  && echo 'alias adb="/opt/android/platform-tools/adb"' >> ~/.bashrc 
+  && echo 'alias adb="/opt/android/platform-tools/adb"' >> ~/.bashrc
 
-# Generate adb key folder 
-# ------------------------------ 
+# Generate adb key folder
+# ------------------------------
 RUN mkdir /root/.android && /opt/android/platform-tools/adb keygen /root/.android/adbkey
 
 # Setup investigations environment
 # --------------------------------
 RUN mkdir /home/cases
-WORKDIR /home/cases 
+WORKDIR /home/cases
 RUN echo 'echo "Mobile Verification Toolkit @ Docker\n------------------------------------\n\nYou can find information about how to use this image for Android (https://github.com/mvt-project/mvt/tree/master/docs/android) and iOS (https://github.com/mvt-project/mvt/tree/master/docs/ios) in the official docs of the project.\n"' >> ~/.bashrc \
   && echo 'echo "Note that to perform the debug via USB you might need to give the Docker image access to the USB using \"docker run -it --privileged -v /dev/bus/usb:/dev/bus/usb mvt\" or, preferably, the \"--device=\" parameter.\n"' >> ~/.bashrc