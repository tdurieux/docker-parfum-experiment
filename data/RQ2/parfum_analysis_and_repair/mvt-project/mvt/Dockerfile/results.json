{
  "startTime": 1674216983592,
  "endTime": 1674216984899,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 0
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 0
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 0
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Ref. https://github.com/mvt-project/mvt\n\nLABEL url=\"https://mvt.re\"\nLABEL vcs-url=\"https://github.com/mvt-project/mvt\"\nLABEL description=\"MVT is a forensic tool to look for signs of infection in smartphone devices.\"\n\nENV PIP_NO_CACHE_DIR=1\n\n# Fixing major OS dependencies\n# ----------------------------\nRUN apt update \\\n  && apt install --no-install-recommends -y python3 python3-pip libusb-1.0-0-dev \\\n  && apt install --no-install-recommends -y wget unzip\\ \n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install default-jre-headless \\\n \n# Install build tools for libimobiledevice\n--------------- \\\n  build-essent \\\n  che \\\n  git \\\n  autoconf \\\n  automake \\\n  libtool-bin \\\n  libplist-dev \\\n  libusbmuxd \\\n  libssl- \\\n  sqlite3 \\\n    pkg-config\n \nCl an up \\\n-- ----- && rm -rf /var/lib/apt/lists/*;\n\n\n# Build libimobiledevice\n# ----------------------\nRUN git clone https://github.com/libimobiledevice/libplist \\\n  && git clone https://github.com/libimobiledevice/libimobiledevice-glue \\\n  && git clone https://github.com/libimobiledevice/libusbmuxd \\\n  && git clone https://github.com/libimobiledevice/libimobiledevice \\\n  && git clone https://github.com/libimobiledevice/usbmuxd \\\n\n  && cd libplist && ./autogen.sh && make && make install && ldconfig \\\n\n  && cd ../libimobiledevice-glue && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./autogen.sh --prefix=/usr && make && make install && ldconfig \\\n\n  && cd ../libusbmuxd && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./autogen.sh && make && make install && ldconfig \\\n\n  && cd ../libimobiledevice && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./autogen.sh --enable-debug && make && make install && ldconfig \\\n\n  && cd ../usbmuxd && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./autogen.sh --prefix=/usr --sysconfdir=/etc --localstatedir=/var --runstatedir=/run && make && make install \\\n\n  # Clean up.\n  && cd .. && rm -rf libplist libimobiledevice-glue libusbmuxd libimobiledevice usbmuxd\n\n# Installing MVT\n# --------------\nRUN pip3 install --no-cache-dir mvt\n\n# Installing ABE\n# --------------\nRUN mkdir /opt/abe \\\n  && wget https://github.com/nelenkov/android-backup-extractor/releases/download/20210709062403-4c55371/abe.jar -O /opt/abe/abe.jar \\\n# Create alias for abe\n  && echo 'alias abe=\"java -jar /opt/abe/abe.jar\"' >> ~/.bashrc\n\n# Install Android Platform Tools\n# ------------------------------\n\nRUN mkdir /opt/android \\\n  && wget -q https://dl.google.com/android/repository/platform-tools-latest-linux.zip \\\n  && unzip platform-tools-latest-linux.zip -d /opt/android \\\n# Create alias for adb \n  && echo 'alias adb=\"/opt/android/platform-tools/adb\"' >> ~/.bashrc\n\n# Generate adb key folder\n# ------------------------------\nRUN mkdir /root/.android && /opt/android/platform-tools/adb keygen /root/.android/adbkey\n\n# Setup investigations environment\n# --------------------------------\nRUN mkdir /home/cases\nWORKDIR /home/cases\nRUN echo 'echo \"Mobile Verification Toolkit @ Docker\\n------------------------------------\\n\\nYou can find information about how to use this image for Android (https://github.com/mvt-project/mvt/tree/master/docs/android) and iOS (https://github.com/mvt-project/mvt/tree/master/docs/ios) in the official docs of the project.\\n\"' >> ~/.bashrc \\\n  && echo 'echo \"Note that to perform the debug via USB you might need to give the Docker image access to the USB using \\\"docker run -it --privileged -v /dev/bus/usb:/dev/bus/usb mvt\\\" or, preferably, the \\\"--device=\\\" parameter.\\n\"' >> ~/.bashrc\n\nCMD /bin/bash\n"
}