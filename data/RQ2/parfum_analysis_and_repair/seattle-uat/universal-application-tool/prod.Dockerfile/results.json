{
  "startTime": 1674249044175,
  "endTime": 1674249044870,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM adoptopenjdk/openjdk11:jdk-11.0.14.1_1-alpine-slim AS stage1\n\nENV SBT_VERSION \"1.6.2\"\nENV INSTALL_DIR /usr/local\nENV SBT_HOME /usr/local/sbt\nENV PATH \"${PATH}:${SBT_HOME}/bin\"\nENV SBT_URL \"https://github.com/sbt/sbt/releases/download/v$SBT_VERSION/sbt-$SBT_VERSION.tgz\"\n\nRUN set -o pipefail && \\\n    apk update && \\\n    apk add --no-cache --upgrade apk-tools && \\\n    apk upgrade --available && \\\n    apk add --no-cache --update bash wget npm git openssh && \\\n    mkdir -p \"$SBT_HOME\" && \\\n    wget -qO - \"${SBT_URL}\" | tar xz -C \"${INSTALL_DIR}\" && \\\n    echo -ne \"- with sbt $SBT_VERSION\\n\" >> /root/.built\n\nENV PROJECT_HOME /usr/src\nENV PROJECT_NAME server\nENV PROJECT_LOC \"${PROJECT_HOME}/${PROJECT_NAME}\"\n\nCOPY \"${PROJECT_NAME}\" \"${PROJECT_LOC}\"\nRUN cd \"${PROJECT_LOC}\" && \\\n    npm install -g npm@8.5.1 && \\\n    npm install && \\\n    sbt update && \\\n    sbt dist && \\\n    unzip \"${PROJECT_LOC}/target/universal/civiform-server-0.0.1.zip\" -d / && \\\n    chmod +x /civiform-server-0.0.1/bin/civiform-server && npm cache clean --force;\n\n# This is a common trick to shrink container sizes. We discard everything added\n# during the build phase and use only the inflated artifacts created by sbt dist.\nFROM adoptopenjdk/openjdk11:jdk-11.0.14.1_1-alpine-slim AS stage2\nCOPY --from=stage1 /civiform-server-0.0.1 /civiform-server-0.0.1\n\n# Upgrade packages for stage2 to include latest versions.\nRUN set -o pipefail && \\\n    apk update && \\\n    apk add --no-cache --upgrade apk-tools && \\\n    apk upgrade --available && \\\n    apk add --no-cache --update bash openssh\n\nARG image_tag\nENV CIVIFORM_IMAGE_TAG=$image_tag\n\nCMD [\"/civiform-server-0.0.1/bin/civiform-server\", \"-Dconfig.file=/civiform-server-0.0.1/conf/application.conf\"]\n"
}