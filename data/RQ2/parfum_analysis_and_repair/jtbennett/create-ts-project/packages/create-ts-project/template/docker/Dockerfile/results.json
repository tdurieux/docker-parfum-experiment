{
  "startTime": 1674215328887,
  "endTime": 1674215329503,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 24,
        "columnEnd": 40
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 23,
        "columnEnd": 39
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 54,
        "columnEnd": 70
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 57,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM node:12.18.3-alpine3.11 as node\n\n# ----------------------------------------\n# Build the app.\n# ----------------------------------------\n\nFROM node as build\n\nWORKDIR /tmp/build\n\nARG TEMP_DEPS_DIR\n\n# ----- Copy only the files that affect yarn install -----\n# Allows docker to use cache and skip install if dependencies are unchanged.\n# Assumes that ./packages/*/package.json files have been copied to TEMP_DEPS_DIR\n# with that same directory structure. build.sh does this.\nCOPY .yarn /tmp/build/.yarn/\nCOPY .yarnrc.yml /tmp/build/\nCOPY yarn.lock /tmp/build/\nCOPY package.json /tmp/build/\nCOPY ${TEMP_DEPS_DIR} /tmp/build/\n\n# ----- Install dependencies -----\n# Install dependencies exactly as in the yarn.lock file - no updates.\nRUN yarn --immutable && yarn cache clean;\n\n# ----- Copy source and all other files that affect lint, test, build -----\nCOPY config config/\nCOPY packages packages/\nCOPY .eslintignore ./\nCOPY .eslintrc.js ./\n\n# ----- Lint, test and build -----\nRUN yarn verify:all && yarn cache clean;\n\n# ----- Bundle the app for deployment -----\nARG APP_NAME\nRUN yarn workspaces focus --production ${APP_NAME} && yarn cache clean;\nRUN yarn tsp bundle ${APP_NAME} --out-dir /tmp/bundle && yarn cache clean;\n\n\n# ----------------------------------------\n# Copy files to the deployment image.\n# ----------------------------------------\n\nFROM node\n\nENV NODE_ENV=production\nENV PORT=8001\nEXPOSE 8001\n\n# This user is created in the base image with uid and gid = 1000.\nUSER node\n\n# ----- Copy files required at runtime by the app -----\nCOPY --from=build --chown=1000:1000 /tmp/build/node_modules /home/node/node_modules/\nCOPY --from=build --chown=1000:1000 /tmp/bundle /home/node/\n\nARG COMMIT_HASH\nENV COMMIT_HASH ${COMMIT_HASH:-unknown}\n\nARG APP_DIR\nWORKDIR /home/node/${APP_DIR}\n\nCMD [\"node\", \"./lib/index.js\"]\n"
}