{
  "startTime": 1674248328953,
  "endTime": 1674248329607,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---\n# Stage 1: Install certs, build binary, create default config file\n# ---\nFROM ghcr.io/project-zot/golang:1.18 AS builder\nARG COMMIT\nRUN apt-get update && apt-get install --no-install-recommends -y git make ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /go/src/github.com/project-zot/zot\nWORKDIR /go/src/github.com/project-zot/zot\nCOPY . .\nRUN make COMMIT=$COMMIT clean binary\nRUN echo '# Default config file for zot server\\n\\\nhttp:\\n\\\n  address: 0.0.0.0\\n\\\n  port: 5000\\n\\\nstorage:\\n\\\n  rootDirectory: /var/lib/registry\\n\\\n  gc: false\\n\\\n  dedupe: false' > config.yml && cat config.yml\n\n# ---\n# Stage 2: Final image with nothing but certs, binary, and default config file\n# ---\nFROM gcr.io/distroless/base AS final\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /go/src/github.com/project-zot/zot/bin/zot-linux-amd64 /usr/bin/zot\nCOPY --from=builder /go/src/github.com/project-zot/zot/config.yml /etc/zot/config.yml\nENTRYPOINT [\"/usr/bin/zot\"]\nEXPOSE 5000\nVOLUME [\"/var/lib/registry\"]\nCMD [\"serve\", \"/etc/zot/config.yml\"]\n"
}