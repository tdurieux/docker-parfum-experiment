{
  "startTime": 1674251453551,
  "endTime": 1674251454071,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################################\n# Build stage\n#########################################\nFROM node:lts-alpine AS builder\n\n# Setup env\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\nENV REACT_APP_API_ROOT /api\nENV REACT_APP_REDIRECT_URL /login\n\n# Install dependencies\nCOPY package.json /usr/src/app/package.json\nCOPY package-lock.json /usr/src/app/package-lock.json\nRUN npm install --silent && npm cache clean --force;\n\n# Build website\nCOPY . /usr/src/app\nRUN npm run build\n\n#########################################\n# Distribution stage\n#########################################\nFROM nginx:stable-alpine\n\n# Install website\nCOPY --from=builder /usr/src/app/build /usr/share/nginx/html\n\n# Install configuration\nRUN rm -rf /etc/nginx/conf.d\nCOPY etc/nginx/conf.d /etc/nginx/conf.d\n\n# Port\nEXPOSE 80\n\n# Entrypoint\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}