{
  "startTime": 1674250021384,
  "endTime": 1674250022286,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 44,
        "columnStart": 9,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 9,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 31,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 31,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 72,
        "columnStart": 27,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-devel-ubuntu18.04\n\n# FROM tensorflow/tensorflow:latest-gpu-py3\n\nLABEL maintainer=\"Lander Usategui <lander at erlerobotics dot com>\"\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV CUDNN_VERSION 7.5.1.10\n\nENV ROS2_DISTRO dashing\n#Prepare work-space\nRUN mkdir -p /root/ros2_mara_ws/src\nWORKDIR /root/ros2_mara_ws\n\nRUN \\\n     echo 'Etc/UTC' > /etc/timezone \\\n      && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n      && apt-get update -qq && apt-get install --no-install-recommends -qq -y tzdata dirmngr gnupg2 lsb-release curl \\\n      # setup ros2 keys\n      && curl -f https://repo.ros2.org/repos.key | apt-key add - \\\n      # setup sources.list\n      && echo \"deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros2-latest.list \\\n      && apt-get update -qq && apt-get install --no-install-recommends -qq -y \\\n        build-essential \\\n        cuda-libraries-dev-$CUDA_PKG_VERSION \\\n        cuda-nvml-dev-$CUDA_PKG_VERSION \\\n        cuda-minimal-build-$CUDA_PKG_VERSION \\\n        cuda-command-line-tools-$CUDA_PKG_VERSION \\\n        libnccl-dev=$NCCL_VERSION-1+cuda10.0 \\\n        libcudnn7=$CUDNN_VERSION-1+cuda10.0 \\\n        libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0 \\\n        cmake \\\n        git \\\n        python3-colcon-common-extensions \\\n        python3-pip \\\n        python3-vcstool \\\n        wget \\\n      && pip3 install --no-cache-dir \\\n        tensorflow-gpu \\\n        transforms3d \\\n        billiard \\\n        psutil \\\n      && apt-mark hold libcudnn7 \\\n      && apt update -qq && apt install --no-install-recommends -qq -y \\\n        python3-colcon-common-extensions \\\n        python3-vcstool \\\n        python3-numpy \\\n        python3-sip-dev \\\n        python3-tk \\\n        libeigen3-dev \\\n        wget \\\n        libboost-all-dev \\\n        ros-$ROS2_DISTRO-ros-base \\\n        ros-$ROS2_DISTRO-action-msgs \\\n        ros-$ROS2_DISTRO-message-filters \\\n        ros-$ROS2_DISTRO-yaml-cpp-vendor \\\n        ros-$ROS2_DISTRO-urdf \\\n        ros-$ROS2_DISTRO-rttest \\\n        ros-$ROS2_DISTRO-tf2 \\\n        ros-$ROS2_DISTRO-tf2-geometry-msgs \\\n        ros-$ROS2_DISTRO-rclcpp-action \\\n        ros-$ROS2_DISTRO-cv-bridge \\\n        ros-$ROS2_DISTRO-control-msgs \\\n        ros-$ROS2_DISTRO-image-transport \\\n        ros-$ROS2_DISTRO-gazebo-dev \\\n        ros-$ROS2_DISTRO-gazebo-msgs \\\n        ros-$ROS2_DISTRO-gazebo-plugins \\\n        ros-$ROS2_DISTRO-gazebo-ros \\\n        ros-$ROS2_DISTRO-gazebo-ros-pkgs \\\n        libopencv-dev \\\n        && rm -rf /var/lib/apt/lists/* \\\n      && wget https://raw.githubusercontent.com/AcutronicRobotics/MARA/dashing/mara-ros2.repos && vcs import src < mara-ros2.repos \\\n      && wget https://raw.githubusercontent.com/AcutronicRobotics/gym-gazebo2/dashing/provision/additional-repos.repos && vcs import src < additional-repos.repos \\\n      #Generete HRIM packages\n      && cd ~/ros2_mara_ws/src/HRIM \\\n      && pip3 install --no-cache-dir hrim \\\n      && hrim generate models/actuator/servo/servo.xml \\\n      && hrim generate models/actuator/gripper/gripper.xml \\\n      #Compile the work-space\n      && bash -c \" cd /root/ros2_mara_ws \\\n      && source /opt/ros/dashing/setup.bash && colcon build --merge-install --parallel-workers $(nproc) --packages-ignore orocos_kinematics_dynamics individual_trajectories_bridge \\\n      && touch /root/ros2_mara_ws/install/share/orocos_kdl/local_setup.sh /root/ros2_mara_ws/install/share/orocos_kdl/local_setup.bash \\\n      && cd /root && git clone https://github.com/openai/gym && cd /root/gym && pip3 install -e . \\\n      #ros2learn\n      && cd /root && git clone -b dashing https://github.com/AcutronicRobotics/ros2learn \\\n      && cd /root/ros2learn \\\n      && git submodule update --init --recursive \\\n      && git pull --recurse-submodules && git submodule update --recursive --remote \\\n      && cd /root/ros2learn/environments/gym-gazebo2 && pip3 install -e . \\\n      && cd /root/ros2learn/algorithms/baselines && pip3 install -e . \\\n      #Load provisioning script\n      && echo 'source /root/ros2learn/environments/gym-gazebo2/provision/mara_setup.sh' >> ~/.bashrc \\\n      \"\nWORKDIR /root/ros2learn/\nEXPOSE 11597\nENTRYPOINT [\"bash\"]\n"
}