diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/swiftwasm/swiftwasm-pad/CompileAPI/scripts/toolchain/amazonlinux/2/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/swiftwasm/swiftwasm-pad/CompileAPI/scripts/toolchain/amazonlinux/2/Dockerfile/repaired.Dockerfile
index c05161c..ba3e13a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/swiftwasm/swiftwasm-pad/CompileAPI/scripts/toolchain/amazonlinux/2/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/swiftwasm/swiftwasm-pad/CompileAPI/scripts/toolchain/amazonlinux/2/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@ ARG SWIFT_TAG="swift-wasm-5.3-SNAPSHOT-2020-08-28-a"
 
 # The build needs a package from the EPEL repo so that needs to be enabled.
 # https://www.tecmint.com/install-epel-repository-on-centos/
-RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
+RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum
 
 # Update and install needed build packages
 RUN yum -y update
@@ -15,14 +15,14 @@ RUN yum -y install \
       git cmake clang python swig uuid-devel libicu-devel libedit-devel \
       libxml2-devel sqlite-devel ncurses-devel pkgconfig python-devel \
       python-pkgconfig libbsd-devel libuuid-devel pexpect curl-devel \
-      tzdata rsync wget which python-six
+      tzdata rsync wget which python-six && rm -rf /var/cache/yum
 
 # Grab an updated version of cmake
 RUN wget https://cmake.org/files/v3.15/cmake-3.15.5-Linux-x86_64.tar.gz \
       && tar xvzf cmake-3.15.5-Linux-x86_64.tar.gz \
       && rm cmake-3.15.5-Linux-x86_64.tar.gz
 
-# Add updated version of cmake to path 
+# Add updated version of cmake to path
 ENV PATH="/home/ec2-user/cmake-3.15.5-Linux-x86_64/bin/:${PATH}"
 
 # Cloning ninja into the root build area will cause it to be built by
@@ -34,7 +34,7 @@ RUN git clone --branch ${SWIFT_TAG} https://github.com/swiftwasm/swift.git
 WORKDIR /home/ec2-user/swift
 RUN ./utils/update-checkout --clone --scheme wasm/5.3
 
-# Configure all build directories 
+# Configure all build directories
 RUN ./utils/build-script --release \
         --wasm --build-stdlib-deployment-targets=wasi-wasm32 \
         --build-swift-dynamic-sdk-overlay=false \
@@ -83,7 +83,7 @@ RUN /home/ec2-user/build/Ninja-ReleaseAssert/ninja-build/ninja swift \
 WORKDIR /home/ec2-user
 
 RUN wget https://github.com/swiftwasm/swift/releases/download/$SWIFT_TAG/$SWIFT_TAG-linux.tar.gz \
-  && tar xfzv $SWIFT_TAG-linux.tar.gz
+  && tar xfzv $SWIFT_TAG-linux.tar.gz && rm $SWIFT_TAG-linux.tar.gz
 
 RUN cp build/Ninja-ReleaseAssert/swift-linux-x86_64/bin/swift $SWIFT_TAG/usr/bin/swift \
   && tar cfz $SWIFT_TAG-amazonlinux2.tar.gz $SWIFT_TAG