{
  "startTime": 1674253787190,
  "endTime": 1674253788289,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "# Requires Docker 17.09 or later (multi stage builds)\n#\n# Orchestrator will look for a configuration file at /etc/orchestrator.conf.json.\n# It will listen on port 3000.\n# If not present a minimal configuration will be generated using the following environment variables:\n#\n# Default variables which can be used are:\n#\n# ORC_TOPOLOGY_USER (default: orchestrator): username used by orchestrator to login to MySQL when polling/discovering\n# ORC_TOPOLOGY_PASSWORD (default: orchestrator):  password needed to login to MySQL when polling/discovering\n# ORC_DB_HOST (default: orchestrator):  orchestrator backend MySQL host\n# ORC_DB_PORT (default: 3306):  port used by orchestrator backend MySQL server\n# ORC_DB_NAME (default: orchestrator): database named used by orchestrator backend MySQL server\n# ORC_USER (default: orc_server_user): username used to login to orchestrator backend MySQL server\n# ORC_PASSWORD (default: orc_server_password): password used to login to orchestrator backend MySQL server\n\nFROM golang:1.16.6-stretch\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y ruby ruby-dev rubygems build-essential && rm -rf /var/lib/apt/lists/*;\nRUN gem install --no-ri --no-rdoc fpm\nENV GOPATH=/tmp/go\n\nRUN apt-get install --no-install-recommends -y curl rsync gcc g++ bash git tar rpm && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p $GOPATH/src/github.com/openark/orchestrator\nWORKDIR $GOPATH/src/github.com/openark/orchestrator\nCOPY . .\nRUN bash build.sh -b -P\nRUN bash build.sh -R -N -i sysv\nRUN bash build.sh -R -N -i systemd\n"
}