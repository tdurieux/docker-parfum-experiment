{
  "startTime": 1674255088811,
  "endTime": 1674255090432,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 27,
        "columnEnd": 141
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 as tool_builder\nENV LANG C.UTF-8\nWORKDIR /tool\n\n#RUN tdnf install -y \\\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    wget \\\n    git \\\n    tar \\\n\n\n    curl \\\n    libssl-dev \\\n    uuid-dev && rm -rf /var/lib/apt/lists/*;\n#ubuntu\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository -y ppa:longsleep/golang-backports && \\\n    apt-get install --no-install-recommends -y golang-go && rm -rf /var/lib/apt/lists/*;\n\nRUN pwd && mkdir /tool/binary && \\\n    # Install CONTAINERD\n    CONTAINERD_VERSION=1.4.4 &&  \\\n    wget https://github.com/containerd/containerd/releases/download/v$CONTAINERD_VERSION/containerd-$CONTAINERD_VERSION-linux-amd64.tar.gz && \\\n    tar zxvf containerd-$CONTAINERD_VERSION-linux-amd64.tar.gz && \\\n    cd bin && cp -f containerd ctr /tool/binary/ && \\\n    # docker compose\n    curl -f -L \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /tool/binary/docker-compose && \\\n    chmod +x /tool/binary/docker-compose && \\\n    # Install helm v2\n    HELM2_VERSION=2.16.12 && wget https://get.helm.sh/helm-v$HELM2_VERSION-linux-amd64.tar.gz && \\\n    tar zxvf helm-v$HELM2_VERSION-linux-amd64.tar.gz && \\\n    cp linux-amd64/helm /tool/binary/helm && \\\n    cp linux-amd64/helm /tool/binary/helm2 && \\\n    # Install helm v3\n    HELM3_VERSION=3.3.3 && wget https://get.helm.sh/helm-v$HELM3_VERSION-linux-amd64.tar.gz && \\\n    tar zxvf helm-v$HELM3_VERSION-linux-amd64.tar.gz && \\\n    ls || pwd && \\\n    mv linux-amd64/helm /tool/binary/helm3 && \\\n    # Install helm v3.7\n    HELM3_7_VERSION=3.7.0 && wget https://get.helm.sh/helm-v$HELM3_7_VERSION-linux-amd64.tar.gz && \\\n    tar zxvf helm-v$HELM3_7_VERSION-linux-amd64.tar.gz && \\\n    ls || pwd && \\\n    mv linux-amd64/helm /tool/binary/helm3.7 && \\\n    # Install ORAS\n    ORAS_VERSION=0.12.0 && curl -f -LO https://github.com/deislabs/oras/releases/download/v$ORAS_VERSION/oras_${ORAS_VERSION}_linux_amd64.tar.gz && \\\n    mkdir -p oras-install/ && \\\n    tar -zxf oras_${ORAS_VERSION}_*.tar.gz -C oras-install/ && \\\n    mv oras-install/oras /tool/binary/ && \\\n    # Install notary\n    NOTARY_VERSION=0.6.1 && wget https://github.com/theupdateframework/notary/releases/download/v$NOTARY_VERSION/notary-Linux-amd64 && \\\n    chmod +x notary-Linux-amd64 && \\\n    mv notary-Linux-amd64 /tool/binary/notary && \\\n    # Install CNAB\n    CNAB_PATH=$(go env GOPATH)/src/github.com/cnabio && \\\n    mkdir -p $CNAB_PATH && cd $CNAB_PATH && git clone https://github.com/cnabio/cnab-to-oci.git && \\\n    cd cnab-to-oci && git checkout v0.3.3 && \\\n    go list && \\\n    make build && \\\n    mv bin/cnab-to-oci /tool/binary/ && \\\n    # Install DIND\n    DIND_COMMIT=3b5fac462d21ca164b3778647420016315289034 && \\\n    wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /tool/binary/dind \\\n    && chmod +x /tool/binary/dind && \\\n    # Install wasm-to-oci\n    WASM_TO_OCI_VERSION=0.1.2 && wget https://github.com/engineerd/wasm-to-oci/releases/download/v${WASM_TO_OCI_VERSION}/linux-amd64-wasm-to-oci && \\\n    chmod +x linux-amd64-wasm-to-oci && mv linux-amd64-wasm-to-oci /tool/binary/wasm-to-oci && \\\n    # Install imgpkg\n    IMGPKG_VERSION=0.29.0 && wget https://github.com/vmware-tanzu/carvel-imgpkg/releases/download/v$IMGPKG_VERSION/imgpkg-linux-amd64 && \\\n    mv imgpkg-linux-amd64 /tool/binary/imgpkg && chmod +x /tool/binary/imgpkg && \\\n    # Install cosign\n    COSIGN_VERSION=1.9.0 && wget https://github.com/sigstore/cosign/releases/download/v$COSIGN_VERSION/cosign-linux-amd64 && \\\n    mv cosign-linux-amd64 /tool/binary/cosign && chmod +x /tool/binary/cosign && \\\n    pwd && rm containerd-$CONTAINERD_VERSION-linux-amd64.tar.gz\n\n#ubuntu\nRUN wget https://github.com/hpcng/singularity/releases/download/v3.3.0/singularity-3.3.0.tar.gz && \\\n    tar -xzf singularity-3.3.0.tar.gz && \\\n    cd singularity && \\\n    ./mconfig && \\\n    make -C builddir && \\\n    make -C builddir install && rm singularity-3.3.0.tar.gz\nRUN pwd && \\\n    ls -l /usr/local/bin && \\\n    rm -rf singularity && \\\n    mv /usr/local/bin/singularity /tool/binary/\n\nRUN cd /tool/binary/ && tar czvf tools.tar.gz * && cp tools.tar.gz /tool\n# --- End of base file ---"
}