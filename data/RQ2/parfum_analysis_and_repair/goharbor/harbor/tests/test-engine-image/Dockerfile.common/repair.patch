diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/goharbor/harbor/tests/test-engine-image/Dockerfile.common b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/goharbor/harbor/tests/test-engine-image/Dockerfile.common/repaired.Dockerfile
index 6eb406e..8cbc553 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/goharbor/harbor/tests/test-engine-image/Dockerfile.common
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/goharbor/harbor/tests/test-engine-image/Dockerfile.common/repaired.Dockerfile
@@ -3,20 +3,20 @@ ENV LANG C.UTF-8
 WORKDIR /tool
 
 #RUN tdnf install -y \
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     wget \
     git \
     tar \
-    #go
-    #ubuntu
+
+
     curl \
     libssl-dev \
-    uuid-dev
+    uuid-dev && rm -rf /var/lib/apt/lists/*;
 #ubuntu
-RUN apt-get update && apt-get install -y software-properties-common && \
+RUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && \
     add-apt-repository -y ppa:longsleep/golang-backports && \
-    apt-get install -y golang-go
+    apt-get install --no-install-recommends -y golang-go && rm -rf /var/lib/apt/lists/*;
 
 RUN pwd && mkdir /tool/binary && \
     # Install CONTAINERD
@@ -25,7 +25,7 @@ RUN pwd && mkdir /tool/binary && \
     tar zxvf containerd-$CONTAINERD_VERSION-linux-amd64.tar.gz && \
     cd bin && cp -f containerd ctr /tool/binary/ && \
     # docker compose
-    curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /tool/binary/docker-compose && \
+    curl -f -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /tool/binary/docker-compose && \
     chmod +x /tool/binary/docker-compose && \
     # Install helm v2
     HELM2_VERSION=2.16.12 && wget https://get.helm.sh/helm-v$HELM2_VERSION-linux-amd64.tar.gz && \
@@ -43,9 +43,9 @@ RUN pwd && mkdir /tool/binary && \
     ls || pwd && \
     mv linux-amd64/helm /tool/binary/helm3.7 && \
     # Install ORAS
-    ORAS_VERSION=0.12.0 && curl -LO https://github.com/deislabs/oras/releases/download/v$ORAS_VERSION/oras_${ORAS_VERSION}_linux_amd64.tar.gz && \
-    mkdir -p oras-install/  && \
-    tar -zxf oras_${ORAS_VERSION}_*.tar.gz -C oras-install/  && \
+    ORAS_VERSION=0.12.0 && curl -f -LO https://github.com/deislabs/oras/releases/download/v$ORAS_VERSION/oras_${ORAS_VERSION}_linux_amd64.tar.gz && \
+    mkdir -p oras-install/ && \
+    tar -zxf oras_${ORAS_VERSION}_*.tar.gz -C oras-install/ && \
     mv oras-install/oras /tool/binary/ && \
     # Install notary
     NOTARY_VERSION=0.6.1 && wget https://github.com/theupdateframework/notary/releases/download/v$NOTARY_VERSION/notary-Linux-amd64 && \
@@ -71,7 +71,7 @@ RUN pwd && mkdir /tool/binary && \
     # Install cosign
     COSIGN_VERSION=1.9.0 && wget https://github.com/sigstore/cosign/releases/download/v$COSIGN_VERSION/cosign-linux-amd64 && \
     mv cosign-linux-amd64 /tool/binary/cosign && chmod +x /tool/binary/cosign && \
-    pwd
+    pwd && rm containerd-$CONTAINERD_VERSION-linux-amd64.tar.gz
 
 #ubuntu
 RUN wget https://github.com/hpcng/singularity/releases/download/v3.3.0/singularity-3.3.0.tar.gz && \
@@ -79,7 +79,7 @@ RUN wget https://github.com/hpcng/singularity/releases/download/v3.3.0/singulari
     cd singularity && \
     ./mconfig && \
     make -C builddir && \
-    make -C builddir install
+    make -C builddir install && rm singularity-3.3.0.tar.gz
 RUN pwd && \
     ls -l /usr/local/bin && \
     rm -rf singularity && \