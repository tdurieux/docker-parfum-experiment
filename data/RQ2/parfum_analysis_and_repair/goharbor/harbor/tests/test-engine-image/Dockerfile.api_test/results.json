{
  "startTime": 1674214990519,
  "endTime": 1674214991260,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# photon based image\nFROM photon:4.0\nENV LANG C.UTF-8\nENV HELM_EXPERIMENTAL_OCI=1\nENV COSIGN_PASSWORD=Harbor12345\n\nCOPY --from=tool_builder /tool/tools.tar.gz /usr/local/bin\n\nRUN tdnf install -y \\\n    wget \\\n    git \\\n    openjdk8 \\\n    iproute2 \\\n    iptables \\\n    build-essential \\\n    sed \\\n    openssl-devel \\\n    tar \\\n    which \\\n    procps-ng \\\n    gzip && \\\n    tdnf erase -y toybox && \\\n    tdnf install -y python3 python3-pip python3-setuptools httpd && \\\n    pip3 install --no-cache-dir --upgrade pip pyasn1 google-apitools==0.5.31 gsutil python-dateutil \\\n    robotframework==3.2.1 robotframework-sshlibrary robotframework-httplibrary \\\n    requests dbbot robotframework-seleniumlibrary==4.3.0 robotframework-pabot \\\n    robotframework-JSONLibrary hurry.filesize --upgrade && \\\n    tdnf clean all\n\nRUN pwd && ls && \\\n    # Install docker\n    DOCKER_VERSION=20.10.3 && wget https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz && \\\n    tar --strip-components=1 -xvzf docker-$DOCKER_VERSION.tgz -C /usr/bin &&  \\\n    rm docker-$DOCKER_VERSION.tgz\n\nCOPY containerd_config.toml /etc/containerd/config.toml\nCOPY busybox.tar /\n# This container needs to be run in privileged mode(run with --privileged option) to make it work\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh && \\\n    mkdir -p $HOME/.pki/nssdb && \\\n    echo Harbor12345 > password.ca && \\\n    certutil -d sql:$HOME/.pki/nssdb -N -f password.ca\n\nVOLUME /var/lib/docker\n"
}