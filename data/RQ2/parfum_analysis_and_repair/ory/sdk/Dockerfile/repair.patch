diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ory/sdk/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ory/sdk/Dockerfile/repaired.Dockerfile
index 9798998..6e13432 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ory/sdk/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ory/sdk/Dockerfile/repaired.Dockerfile
@@ -1,6 +1,6 @@
 FROM openjdk:15-buster
 
-RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates ssh bash
+RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates ssh bash && rm -rf /var/lib/apt/lists/*;
 
 ENV GOLANG_VERSION 1.17
 
@@ -50,10 +50,10 @@ ENV GO111MODULE=on
 
 RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
 
-RUN curl -sL https://deb.nodesource.com/setup_15.x | bash - && apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_15.x | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 # the following is a workaround for openjdk-11-jre-headless erroring due to not having a man path in slim-debian
 RUN apt-get update -y
-RUN apt-get install -y --no-install-recommends python3 python3-dev python3-pip ruby jq gnupg git gettext libffi6 libffi-dev libssl-dev php composer php-curl php7.3-tokenizer php-dom php-xml php-simplexml php-xmlwriter maven pkg-config
+RUN apt-get install -y --no-install-recommends python3 python3-dev python3-pip ruby jq gnupg git gettext libffi6 libffi-dev libssl-dev php composer php-curl php7.3-tokenizer php-dom php-xml php-simplexml php-xmlwriter maven pkg-config && rm -rf /var/lib/apt/lists/*;
 # RUN apk add -U --no-cache ca-certificates bash nodejs npm python3 python3-dev py-pip ruby jq build-base gnupg git openssh curl gettext libffi libffi-dev openssl-dev php composer php-curl php7-tokenizer wget php-dom php-xml php-simplexml php-xmlwriter maven
 
 # https://stackoverflow.com/questions/35736598/cannot-pip-install-cryptography-in-docker-alpine-linux-3-3-with-openssl-1-0-2g
@@ -69,8 +69,8 @@ RUN apt-get install -y --no-install-recommends python3 python3-dev python3-pip r
 
 # RUN wget http://central.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.2/openapi-generator-cli-4.2.2.jar -O openapi-generator-cli.jar
 
-RUN npm install -g npm@7.21.0
-RUN npm i -g @openapitools/openapi-generator-cli
+RUN npm install -g npm@7.21.0 && npm cache clean --force;
+RUN npm i -g @openapitools/openapi-generator-cli && npm cache clean --force;
 RUN openapi-generator-cli version-manager set 5.2.1
 RUN python3 -m pip install --upgrade pip
 RUN python3 -m pip install --user --upgrade setuptools wheel twine
@@ -85,15 +85,15 @@ RUN apt-get install -y --no-install-recommends \
 	&& wget -O dotnet-install.sh https://dot.net/v1/dotnet-install.sh \
 	&& chmod +x dotnet-install.sh \
 	&& ./dotnet-install.sh --channel 5.0 \
-	&& rm dotnet-install.sh
+	&& rm dotnet-install.sh && rm -rf /var/lib/apt/lists/*;
 
 # dart
 RUN \
   apt-get -q update && apt-get install --no-install-recommends -y -q gnupg2 curl git ca-certificates apt-transport-https openssh-client && \
-  curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
-  curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \
+  curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
+  curl -f https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \
   apt-get update && \
-  apt-get install dart=2.13.4-1
+  apt-get install -y --no-install-recommends dart=2.13.4-1 && rm -rf /var/lib/apt/lists/*;
 
 # elixir
 RUN \
@@ -101,22 +101,22 @@ RUN \
   dpkg -i erlang-solutions_2.0_all.deb && \
   apt-get -q update && apt-get install --no-install-recommends -y -q esl-erlang elixir && \
   rm erlang-solutions_2.0_all.deb && \
-  mix local.hex --force
+  mix local.hex --force && rm -rf /var/lib/apt/lists/*;
 
 # rust
 RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
 
 RUN rm -rf /var/lib/apt/lists/*
-RUN download_url=$(curl -s https://api.github.com/repos/go-swagger/go-swagger/releases/latest | \
+RUN download_url=$( curl -f -s https://api.github.com/repos/go-swagger/go-swagger/releases/latest | \
       jq -r '.assets[] | select(.name | contains("'"$(uname | tr '[:upper:]' '[:lower:]')"'_amd64")) | .browser_download_url') \
-    && curl -o /usr/local/bin/swagger -L'#' "$download_url" \
+    && curl -f -o /usr/local/bin/swagger -L'#' "$download_url" \
     && chmod +x /usr/local/bin/swagger
 
 RUN td=$(mktemp) \
     tdd=$(mktemp -d) \
-    download_url=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | \
+    download_url=$( curl -f -s https://api.github.com/repos/cli/cli/releases/latest | \
       jq -r '.assets[] | select(.name | contains("'"$(uname | tr '[:upper:]' '[:lower:]')"'_386.tar.gz")) | .browser_download_url') \
-    && curl -o $td -L'#' "$download_url" \
+    && curl -f -o $td -L'#' "$download_url" \
     && tar -xzf $td --strip 1 -C $tdd \
     && mv $tdd/bin/gh /usr/local/bin/gh \
     && chmod +x /usr/local/bin/gh \
@@ -124,7 +124,7 @@ RUN td=$(mktemp) \
 
 RUN gem install bundler && \
       apt-get update && \
-      apt-get install -y --no-install-recommends ruby-dev
+      apt-get install -y --no-install-recommends ruby-dev && rm -rf /var/lib/apt/lists/*;
 
 ADD go.mod go.mod
 ADD go.sum go.sum