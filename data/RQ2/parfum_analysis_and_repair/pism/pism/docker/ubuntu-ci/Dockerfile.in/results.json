{
  "startTime": 1674252759469,
  "endTime": 1674252760650,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 26,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 52,
        "columnStart": 26,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.04\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install required packages listed in the manual. This is done separately so that we can\n# re-use this fs layer.\nRUN set -eux; \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        ${PISM_DEBIAN_PACKAGE_LIST} \\\n        ; \\\n        rm -rf /var/lib/apt/lists/*\n\n# Install tools:\n# - ccache and lld to speed up builds,\n# - Cython to build PETSc\n# - wget to download sources of I/O libraries\n# - NumPy is used by petsc4py and PISM's scripts\n# - SciPy is used by at least one regression test\n# - python-netcdf4 is use by many regression tests\n# - NCO is used by many regression tests\n# - PROJ is used by PISM's code computing lon,lat coordinates\n# - python3-dev is needed to build Python bindings\n# - python3-nose is used to run some regression tests\n# - SWIG is needed to build Python bindings\n# - MPICH is needed to build PETSc and PISM\n# - doxygen and graphviz are needed to build the source code browser\n# - python2 is needed to install old PETSc\nRUN set -eux; \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        ccache \\\n        clang \\\n        cython3 \\\n        doxygen \\\n        graphviz \\\n        latexmk \\\n        libmpich-dev \\\n        libproj-dev \\\n        lld \\\n        m4 \\\n        nco \\\n        python2 \\\n        python3-dev \\\n        python3-netcdf4 \\\n        python3-nose \\\n        python3-numpy \\\n        python3-pip \\\n        python3-scipy \\\n        python3-sphinx \\\n        python3-sphinxcontrib.bibtex \\\n        swig \\\n        texlive-latex-extra \\\n        texlive-latex-recommended \\\n        wget \\\n        ; \\\n        rm -rf /var/lib/apt/lists/*\n\nRUN useradd --create-home --system --shell=/bin/false builder && usermod --lock builder\nUSER builder\n\n# Install parallel HDF5, NetCDF, PnetCDF, and ParallelIO by building them from sources.\n#\n# Uses wget installed above.\n#\n# This step uses scripts that are used to describe how to install these libraries in the\n# manual. Re-using them here makes it easier to keep this part of the manual up to date.\n\nCOPY hdf5.sh /tmp/\nCOPY netcdf.sh /tmp/\nCOPY pnetcdf.sh /tmp/\nCOPY parallelio.sh /tmp/\n\nRUN set -eux; \\\n        cd /tmp && \\\n        ./hdf5.sh && \\\n        ./netcdf.sh && \\\n        ./pnetcdf.sh && \\\n        ./parallelio.sh && \\\n        rm -rf ~/local/build\n\n# Build the current PETSc version\nCOPY petsc.sh /tmp/\nRUN set -eux;\\\n        cd /tmp && \\\n        ./petsc.sh && \\\n        rm -rf ~/local/build\n\n# Build the oldest supported PETSc version. The goal is to check if PISM's C++ code\n# compiles with PETSc 3.7. We do not support PISM's Python bindings with old PETSc\n# versions, so we build PETSc without petsc4py here.\nCOPY petsc-3_7_0.sh /tmp/\nRUN set -eux;\\\n        cd /tmp && \\\n        ./petsc-3_7_0.sh && \\\n        rm -rf ~/local/build\n\n# Build the oldest supported CMake version\nCOPY cmake-3_3_0.sh /tmp/\nRUN set -eux;\\\n        cd /tmp && \\\n        ./cmake-3_3_0.sh && \\\n        rm -rf ~/local/build\n\nENV PETSC_DIR=\"/home/builder/local/petsc\" \\\n    PYTHONPATH=\"/home/builder/local/petsc/lib\"\n"
}