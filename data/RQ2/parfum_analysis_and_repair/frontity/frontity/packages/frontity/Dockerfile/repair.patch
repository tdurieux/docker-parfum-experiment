diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/frontity/frontity/packages/frontity/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/frontity/frontity/packages/frontity/Dockerfile/repaired.Dockerfile
index bd9f808..1fe0d19 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/frontity/frontity/packages/frontity/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/frontity/frontity/packages/frontity/Dockerfile/repaired.Dockerfile
@@ -7,14 +7,14 @@ FROM node:${ALPINE_VERSION}
 WORKDIR /home/frontity-cli
 
 # Add the unix `tree` tool. We use it for snapshot testing its output.
-RUN apk add tree
+RUN apk add --no-cache tree
 
 # Assuming that the CLI has been compiled from the TS source files, we can
 # copy it from the host to the docker image.
 COPY dist /home/frontity-cli/dist/
 
-# `--ignore-scripts` because otherwise npm install will run the `prepublish` 
+# `--ignore-scripts` because otherwise npm install will run the `prepublish`
 # npm script which in turn tries to run `npm build` and `npm build` will try to
 # compile the TS source to JS which is unnecessary and results in error because
-# our `tsconfig.build.json` extends the tsconfig.json at the root of the repo. 
-RUN cd ./dist && npm install --ignore-scripts
\ No newline at end of file
+# our `tsconfig.build.json` extends the tsconfig.json at the root of the repo.
+RUN cd ./dist && npm install --ignore-scripts && npm cache clean --force;
\ No newline at end of file