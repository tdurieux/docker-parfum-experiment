{
  "startTime": 1674217097820,
  "endTime": 1674217098479,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.9 AS builder\n\nENV DEP_VERSION=\"0.4.1\"\nENV PROTOC_VERSION=\"3.5.1\"\n\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends unzip && \\\n\trm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\n# Install Go Dep\nRUN curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 && chmod +x /usr/local/bin/dep\n\n# install protoc\nRUN curl -f -L https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip > protoc.zip && \\\n\tunzip protoc.zip -d .\n\nRUN go get google.golang.org/grpc && \\\n\t\tgo get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway && \\\n\t\tgo get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger && \\\n\t\tgo get -u github.com/golang/protobuf/protoc-gen-go\n\n# Install dependencies\nCOPY Gopkg.toml Gopkg.lock /go/src/github.com/dhrp/moulin/\nWORKDIR /go/src/github.com/dhrp/moulin/\nRUN dep ensure -vendor-only\n\n# install and build go app\nCOPY . /go/src/github.com/dhrp/moulin/\n\nRUN make -C protobuf\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o moulin server/*.go\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o moulin-cli cli/*.go\n\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /\nCOPY --from=0 /go/src/github.com/dhrp/moulin/moulin /usr/local/bin/moulin\nCOPY --from=0 /go/src/github.com/dhrp/moulin/moulin-cli /usr/local/bin/moulin-cli\n\n\nENV REDIS_HOST=\"localhost\"\nEXPOSE 8042\nCMD [\"moulin\"]\n"
}