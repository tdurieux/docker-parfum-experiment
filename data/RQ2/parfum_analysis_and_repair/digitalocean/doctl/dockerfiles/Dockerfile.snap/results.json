{
  "startTime": 1674254032033,
  "endTime": 1674254033488,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 14,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 14,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 14,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 14,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 14,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 76,
        "columnStart": 39,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Note to maintainers: after you make changes to this file, please run `make snap_image`.\n#  The script will gives instructions to complete the update once it finishes. Be patient, it\n#  takes a long time to run.\n#\n# For help with the technical aspects of this Dockerfile, see\n#   https://snapcraft.io/docs/t/creating-docker-images-for-snapcraft/11739\n#   https://github.com/snapcore/snapcraft/blob/main/docker/Dockerfile\n# and https://forum.snapcraft.io/. Note that the snapcraft forum does not appear to be indexed\n# effectively (at all?) by google.\n#\n# See https://docs.docker.com/develop/develop-images/dockerfile_best-practices/\n#  for guidance on the style of this Dockerfile\nFROM ubuntu:focal as builder\n\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n        curl \\\n        jq \\\n        squashfs-tools && rm -rf /var/lib/apt/lists/*;\n\n# Grab the core snap (for backwards compatibility) from the stable channel and unpack it in the proper place\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core' | jq '.download_url' -r) --output core.snap && \\\n        mkdir -p /snap/core && \\\n        unsquashfs -d /snap/core/current core.snap\n\n# Grab the core18 snap (which snapcraft uses as a base) from the stable channel and unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core18' | jq '.download_url' -r) --output core18.snap && \\\n        mkdir -p /snap/core18 && \\\n        unsquashfs -d /snap/core18/current core18.snap\n\n# Grab the core20 snap from the stable channel and unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core20' | jq '.download_url' -r) --output core20.snap && \\\n        mkdir -p /snap/core20 && \\\n        unsquashfs -d /snap/core20/current core20.snap\n\n# Grab the snapcraft snap from the stable channel and unpack it in the proper place\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/snapcraft?channel=stable' | jq '.download_url' -r) --output snapcraft.snap && \\\n        mkdir -p /snap/snapcraft && \\\n        unsquashfs -d /snap/snapcraft/current snapcraft.snap\n\n# Fix Python3 installation: Make sure we use the interpreter from\n# the snapcraft snap:\nRUN unlink /snap/snapcraft/current/usr/bin/python3\nRUN ln -s /snap/snapcraft/current/usr/bin/python3.* /snap/snapcraft/current/usr/bin/python3\nRUN echo /snap/snapcraft/current/lib/python3.*/site-packages >> /snap/snapcraft/current/usr/lib/python3/dist-packages/site-packages.pth\n\n# Create a snapcraft runner (TODO: move version detection to the core of snapcraft)\nRUN mkdir -p /snap/bin && \\\n        echo \"#!/bin/sh\" > /snap/bin/snapcraft && \\\n        snap_version=\"$(awk '/^version:/{print $2}' /snap/snapcraft/current/meta/snap.yaml | tr -d \\')\" && \\\n        echo \"export SNAP_VERSION=\\\"$snap_version\\\"\" >> /snap/bin/snapcraft && \\\n        echo 'exec \"$SNAP/usr/bin/python3\" \"$SNAP/bin/snapcraft\" \"$@\"' >> /snap/bin/snapcraft && \\\n        chmod +x /snap/bin/snapcraft\n\n# Grab the golang snap from the stable channel, unpack it in the proper place, and create a runner for it\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/go?channel=1.18/stable' | jq '.download_url' -r) --output go.snap && \\\n        mkdir -p /snap/go && \\\n        unsquashfs -d /snap/go/current go.snap && \\\n        cd /snap/bin && \\\n        ln -s /snap/go/current/bin/go\n\n# Multi-stage build, only need the snaps from the builder. Copy them one at a\n# time so they can be cached.\nFROM ubuntu:focal\nCOPY --from=builder /snap/core /snap/core\nCOPY --from=builder /snap/core18 /snap/core18\nCOPY --from=builder /snap/core20 /snap/core20\nCOPY --from=builder /snap/snapcraft /snap/snapcraft\nCOPY --from=builder /snap/bin/snapcraft /snap/bin/snapcraft\nCOPY --from=builder /snap/go /snap/go\nCOPY --from=builder /snap/bin/go /snap/bin/go\n\n# Install Snap build-time dependencies & generate locale\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends --yes \\\n\tsudo \\\n\tlocales \\\n\tsnapd && \\\n\tlocale-gen en_US.UTF-8 && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Set the proper environment\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV PATH \"/snap/bin:/snap/snapcraft/current/usr/bin:$PATH\"\nENV SNAP /snap/snapcraft/current\nENV SNAP_NAME snapcraft\nENV SNAP_ARCH amd64\n\nSHELL [\"/bin/bash\", \"-c\"]\nENTRYPOINT \"snapcraft\"\n"
}