diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/digitalocean/doctl/dockerfiles/Dockerfile.snap b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/digitalocean/doctl/dockerfiles/Dockerfile.snap/repaired.Dockerfile
index d4a8221..12224a6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/digitalocean/doctl/dockerfiles/Dockerfile.snap
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/digitalocean/doctl/dockerfiles/Dockerfile.snap/repaired.Dockerfile
@@ -12,28 +12,28 @@
 #  for guidance on the style of this Dockerfile
 FROM ubuntu:focal as builder
 
-RUN apt-get update && apt-get install --yes \
+RUN apt-get update && apt-get install --no-install-recommends --yes \
         curl \
         jq \
-        squashfs-tools
+        squashfs-tools && rm -rf /var/lib/apt/lists/*;
 
 # Grab the core snap (for backwards compatibility) from the stable channel and unpack it in the proper place
-RUN curl -L $(curl -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core' | jq '.download_url' -r) --output core.snap && \
+RUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core' | jq '.download_url' -r) --output core.snap && \
         mkdir -p /snap/core && \
         unsquashfs -d /snap/core/current core.snap
 
 # Grab the core18 snap (which snapcraft uses as a base) from the stable channel and unpack it in the proper place.
-RUN curl -L $(curl -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core18' | jq '.download_url' -r) --output core18.snap && \
+RUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core18' | jq '.download_url' -r) --output core18.snap && \
         mkdir -p /snap/core18 && \
         unsquashfs -d /snap/core18/current core18.snap
 
 # Grab the core20 snap from the stable channel and unpack it in the proper place.
-RUN curl -L $(curl -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core20' | jq '.download_url' -r) --output core20.snap && \
+RUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core20' | jq '.download_url' -r) --output core20.snap && \
         mkdir -p /snap/core20 && \
         unsquashfs -d /snap/core20/current core20.snap
 
 # Grab the snapcraft snap from the stable channel and unpack it in the proper place
-RUN curl -L $(curl -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/snapcraft?channel=stable' | jq '.download_url' -r) --output snapcraft.snap && \
+RUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/snapcraft?channel=stable' | jq '.download_url' -r) --output snapcraft.snap && \
         mkdir -p /snap/snapcraft && \
         unsquashfs -d /snap/snapcraft/current snapcraft.snap
 
@@ -52,7 +52,7 @@ RUN mkdir -p /snap/bin && \
         chmod +x /snap/bin/snapcraft
 
 # Grab the golang snap from the stable channel, unpack it in the proper place, and create a runner for it
-RUN curl -L $(curl -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/go?channel=1.18/stable' | jq '.download_url' -r) --output go.snap && \
+RUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/go?channel=1.18/stable' | jq '.download_url' -r) --output go.snap && \
         mkdir -p /snap/go && \
         unsquashfs -d /snap/go/current go.snap && \
         cd /snap/bin && \
@@ -71,7 +71,7 @@ COPY --from=builder /snap/bin/go /snap/bin/go
 
 # Install Snap build-time dependencies & generate locale
 ARG DEBIAN_FRONTEND=noninteractive
-RUN apt-get clean && apt-get update && apt-get install --yes \
+RUN apt-get clean && apt-get update && apt-get install --no-install-recommends --yes \
 	sudo \
 	locales \
 	snapd && \