{
  "startTime": 1674253486773,
  "endTime": 1674253487789,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye AS lldap\nARG DEBIAN_FRONTEND=noninteractive\nARG TARGETPLATFORM\nRUN apt update && apt install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nWORKDIR /dim\nCOPY bin/ bin/\nCOPY web/ web/\n\nRUN mkdir -p target/\nRUN mkdir -p /lldap/app\n\nRUN if [ \"${TARGETPLATFORM}\" = \"linux/amd64\" ]; then \\\n    mv bin/amd64-bin/lldap target/lldap && \\\n    mv bin/amd64-bin/migration-tool target/migration-tool && \\\n    chmod +x target/lldap && \\\n    chmod +x target/migration-tool && \\\n    ls -la target/ . && \\\n    pwd \\\n    ; fi\n\nRUN if [ \"${TARGETPLATFORM}\" = \"linux/arm64\" ]; then \\\n    mv bin/aarch64-bin/lldap target/lldap && \\\n    mv bin/aarch64-bin/migration-tool target/migration-tool && \\\n    chmod +x target/lldap && \\\n    chmod +x target/migration-tool && \\\n    ls -la target/ . && \\\n    pwd \\\n    ; fi\n\nRUN if [ \"${TARGETPLATFORM}\" = \"linux/arm/v7\" ]; then \\\n    mv bin/armhf-bin/lldap target/lldap && \\\n    mv bin/armhf-bin/migration-tool target/migration-tool && \\\n    chmod +x target/lldap && \\\n    chmod +x target/migration-tool && \\\n    ls -la target/ . && \\\n    pwd \\\n    ; fi\n\n# Web and App dir\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nCOPY lldap_config.docker_template.toml /lldap/\nRUN cp target/lldap /lldap/ && \\\n    cp target/migration-tool /lldap/ && \\\n    cp -R web/index.html \\\n          web/pkg \\\n          web/static \\\n          /lldap/app/\n\nRUN set -x \\\n    && for file in $(cat /lldap/app/static/libraries.txt); do wget -P app/static \"$file\"; done \\\n    && for file in $(cat /lldap/app/static/fonts/fonts.txt); do wget -P app/static/fonts \"$file\"; done \\\n    && chmod a+r -R .\n\nFROM alpine:3.16\nWORKDIR /app\nENV UID=1000\nENV GID=1000\nENV USER=lldap\nRUN echo http://mirror.math.princeton.edu/pub/alpinelinux/edge/testing/ >> /etc/apk/repositories && \\\n    apk add --no-cache tini ca-certificates bash gosu && \\\n    addgroup -g $GID $USER && \\\n    adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"$(pwd)\" \\\n    --ingroup \"$USER\" \\\n    --no-create-home \\\n    --uid \"$UID\" \\\n    \"$USER\" && \\\n    mkdir -p /data && \\\n    chown $USER:$USER /data\nCOPY --from=lldap --chown=$CONTAINERUSER:$CONTAINERUSER /lldap /app\nCOPY --from=lldap --chown=$CONTAINERUSER:$CONTAINERUSER /docker-entrypoint.sh /docker-entrypoint.sh\nVOLUME [\"/data\"]\nWORKDIR /app\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"run\", \"--config-file\", \"/data/lldap_config.toml\"]\n"
}