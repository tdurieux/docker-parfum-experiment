{
  "startTime": 1674246433550,
  "endTime": 1674246434100,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official osgeo/gdal image.\nFROM osgeo/gdal:ubuntu-small-latest\n\n# Allow statements and log messages to immediately appear in the Knative logs\nENV PYTHONUNBUFFERED True\n\n# Set provider dir path\nENV PROVIDER providers/gcp\n\nENV APP_HOME /app\n\nRUN if [ -z \"$MONITOR_TABLE\" ]; then echo 'WARNING: Environment variable MONITOR_TABLE not specified. Task statuses wont be output.'; fi\n\n\nWORKDIR $APP_HOME\n# Copy local code to the container image.\nCOPY . ./satextractor\nCOPY $PROVIDER ./\n# Install GDAL dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\n# Install production dependencies.\nRUN pip install --no-cache-dir ./satextractor\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Run the web service on container startup. Here we use the gunicorn\n# webserver, with one worker process and 8 threads.\n# For environments with multiple CPU cores, increase the number of workers\n# to be equal to the cores available.\n# Timeout is set to 0 to disable the timeouts of the workers to allow Cloud Run to handle instance scaling.\nCMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 main:app\n"
}