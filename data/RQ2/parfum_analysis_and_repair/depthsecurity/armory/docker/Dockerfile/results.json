{
  "startTime": 1674253707679,
  "endTime": 1674253708768,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 270
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 270
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable-slim\nMAINTAINER dlawson@depthsecurity.com\n\nENV DEBIAN_FRONTEND noninteractive\nENV GOROOT /opt/src/golang/go\nENV GOPATH /root/go\nRUN echo \"deb-src http://deb.debian.org/debian buster main\" >> /etc/apt/sources.list\nCMD [\"echo\", \"Installing Debian packages needed.\"]\n\n\nRUN apt update && apt install --no-install-recommends -y python python3 git python3-pip python-pip libmariadb-dev-compat wget ruby ruby-dev gem p7zip-full dnsrecon hydra nmap whois git gcc make libpcap-dev libnet-ssleay-perl build-essential zlib1g-dev sudo chromium xclip nano redis-server tmux && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/src/golang\nRUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz\nRUN tar zxfv go1.14.2.linux-amd64.tar.gz && rm go1.14.2.linux-amd64.tar.gz\nRUN ln -s /opt/src/golang/go/bin/go /usr/local/bin/\nRUN ln -s /opt/src/golang/go/bin/gofmt /usr/local/bin/\nRUN mkdir /root/go\n\nWORKDIR /opt/src\n\nCMD [\"echo\", \"Cloning various repos\"]\nRUN git clone https://github.com/joaomatosf/jexboss.git\nRUN touch /tmp/linkedint2\nRUN git clone https://github.com/fang0654/LinkedInt\nRUN git clone https://github.com/robertdavidgraham/masscan\nRUN git clone https://github.com/sullo/nikto\nRUN git clone https://github.com/m8r0wn/pymeta\nRUN git clone https://github.com/rbsec/sslscan.git\nRUN git clone https://github.com/aboul3la/Sublist3r.git\nRUN git clone https://github.com/anshumanbh/tko-subs.git\nRUN git clone https://github.com/DanMcInerney/xsscrapy.git\nRUN git clone https://github.com/fang0654/Asnlookup.git\nRUN git clone https://github.com/laramies/theHarvester\nRUN git clone https://github.com/projectdiscovery/subfinder.git\nRUN touch /tmp/update1\n\nRUN git clone https://github.com/fang0654/DomLink.git\nRUN git clone https://github.com/offensive-security/exploitdb.git\n\n# RUN go get github.com/ffuf/ffuf\n\n# Next couple of lines are to use custom version of ffuf until it gets updated\nRUN go get github.com/ffuf/ffuf\n\nRUN ln -s /root/go/bin/ffuf /usr/local/bin/ffuf\nRUN gem install aquatone\nRUN go get github.com/OJ/gobuster\nRUN ln -s /root/go/bin/gobuster /usr/local/bin/gobuster\n\n# Gowitness doesn't seem to be building right now - will just use the latest (at the time) release\n\n# RUN go get github.com/sensepost/gowitness\n# RUN ln -s /root/go/bin/gowitness /usr/local/bin/gowitness\n\nRUN wget https://github.com/sensepost/gowitness/releases/download/2.1.1/gowitness-2.1.1-linux-amd64 -O /usr/local/bin/gowitness\nRUN chmod +x /usr/local/bin/gowitness\n\n#RUN go get github.com/projectdiscovery/subfinder/cmd/subfinder\n\n#RUN GO111MODULE=on go get -u -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder\n\nWORKDIR /opt/src/subfinder/v2/cmd/subfinder\nRUN go build .\nRUN ln -s /opt/src/subfinder/v2/cmd/subfinder/subfinder /usr/local/bin/subfinder\n#RUN ln -s /root/go/bin/subfinder /usr/local/bin/subfinder\n# Run this to create the subfinder config, so it doesn't create a race condition causing others to error out as multiple threads try to create it at once\nRUN /usr/local/bin/subfinder -d domainthatdoesnotexits.biz -sources shodan\n\nRUN go get github.com/hakluke/hakrawler\nRUN ln -s /root/go/bin/hakrawler /usr/local/bin/hakrawler\nWORKDIR /opt/src/jexboss\nRUN pip install --no-cache-dir -r requires.txt\nRUN ln -s /opt/src/jexboss/jexboss.py /usr/local/bin/jexboss.py\nWORKDIR /opt/src/LinkedInt\nRUN pip install --no-cache-dir thready http\nRUN chmod +x /opt/src/LinkedInt/LinkedInt.py\nRUN ln -s /opt/src/LinkedInt/LinkedInt.py /usr/local/bin/LinkedInt.py\nWORKDIR /opt/src/masscan\nRUN make -j\nRUN make install\nRUN ln -s /opt/src/nikto/program /opt/nikto\nRUN ln -s /opt/nikto/nikto.pl /usr/local/bin/nikto\nWORKDIR /opt/src/pymeta\nRUN python3 setup.py install\nRUN chmod +x pymeta.py\n\nWORKDIR /opt/src/sslscan\nRUN apt-get build-dep openssl -y\n# RUN sed -i 's/fPIE/fPIC/g' Makefile\nRUN make static\n\nRUN ln -s /opt/src/sslscan/sslscan /usr/local/bin/sslscan\nWORKDIR /opt/src/Sublist3r\nRUN pip install --no-cache-dir -r requirements.txt\nRUN ln -s /opt/src/Sublist3r/sublist3r.py /usr/local/bin/sublist3r\nRUN go get github.com/anshumanbh/tko-subs\nRUN ln -s /root/go/bin/tko-subs /usr/local/bin/tko-subs\nRUN ln -s /root/go/src/github.com/anshumanbh/tko-subs/providers-data.csv /usr/local/bin/providers-data.csv\n\n\n# Install amass - for whatever reason, I haven't been able to get the go get to work\n#ENV GO111MODULE on\n#RUN go get -v github.com/OWASP/Amass/v3\n#RUN ln -s /root/go/bin/amass /usr/local/bin/amass\n\nWORKDIR /opt/src/amass\nRUN wget https://github.com/OWASP/Amass/releases/download/v3.10.2/amass_linux_amd64.zip\nRUN unzip amass_linux_amd64.zip\nRUN ln -s /opt/src/amass/amass_linux_amd64/amass /usr/local/bin/\n\nWORKDIR /opt/src/xsscrapy\nRUN pip install --no-cache-dir -r requirements.txt\nENV PATH=\"${PATH}:/opt/src/xsscrapy\"\nRUN chmod +x /opt/src/xsscrapy/xsscrapy.py\nRUN export PATH=$PATH:/opt/src/xsscrapy\nRUN ln -s /opt/src/Asnlookup/asnlookup.py /usr/local/bin/asnlookup.py\nRUN chmod +x /usr/local/bin/asnlookup.py\nRUN ln -s /opt/src/DomLink/domLink.py /usr/local/bin/domLink.py\nRUN chmod +x /usr/local/bin/domLink.py\n\nWORKDIR /opt/src/theHarvester\nRUN pip3 install --no-cache-dir -r requirements.txt\nRUN python3 setup.py install\n\n\nRUN sed -i 's/\\/opt\\/exploitdb/\\/opt\\/src\\/exploitdb/g' /opt/src/exploitdb/.searchsploit_rc\nRUN cp /opt/src/exploitdb/.searchsploit_rc /root/\nRUN ln -s /opt/src/exploitdb/searchsploit /usr/local/bin/searchsploit\n\nWORKDIR /opt/src\n\n# Going to increment this everytime I want to update armory.\nRUN touch /tmp/revision139\n\n\n\n\nRUN git clone https://github.com/depthsecurity/armory.git\nWORKDIR /opt/src/armory\n\nCMD [\"echo\", \"Installing Armory\"]\nRUN pip3 install --no-cache-dir django# Not sure why this doesn't work from the setup\nRUN python3 setup.py install\nRUN pip3 install --no-cache-dir jinja2 xlsxwriter django_q\nWORKDIR /root/current\nCOPY launch_api.sh /usr/bin/launch_api.sh\nRUN chmod +x /usr/bin/launch_api.sh\n"
}