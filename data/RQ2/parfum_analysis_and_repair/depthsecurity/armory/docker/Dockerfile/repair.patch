diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/depthsecurity/armory/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/depthsecurity/armory/docker/Dockerfile/repaired.Dockerfile
index 3c9529c..3550e30 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/depthsecurity/armory/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/depthsecurity/armory/docker/Dockerfile/repaired.Dockerfile
@@ -8,11 +8,11 @@ RUN echo "deb-src http://deb.debian.org/debian buster main" >> /etc/apt/sources.
 CMD ["echo", "Installing Debian packages needed."]
 
 
-RUN apt update && apt install -y python python3 git python3-pip python-pip libmariadb-dev-compat wget ruby ruby-dev gem p7zip-full dnsrecon hydra nmap whois git gcc make libpcap-dev libnet-ssleay-perl build-essential zlib1g-dev sudo chromium xclip nano redis-server tmux
+RUN apt update && apt install --no-install-recommends -y python python3 git python3-pip python-pip libmariadb-dev-compat wget ruby ruby-dev gem p7zip-full dnsrecon hydra nmap whois git gcc make libpcap-dev libnet-ssleay-perl build-essential zlib1g-dev sudo chromium xclip nano redis-server tmux && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /opt/src/golang
 RUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz
-RUN tar zxfv go1.14.2.linux-amd64.tar.gz
+RUN tar zxfv go1.14.2.linux-amd64.tar.gz && rm go1.14.2.linux-amd64.tar.gz
 RUN ln -s /opt/src/golang/go/bin/go /usr/local/bin/
 RUN ln -s /opt/src/golang/go/bin/gofmt /usr/local/bin/
 RUN mkdir /root/go
@@ -70,10 +70,10 @@ RUN /usr/local/bin/subfinder -d domainthatdoesnotexits.biz -sources shodan
 RUN go get github.com/hakluke/hakrawler
 RUN ln -s /root/go/bin/hakrawler /usr/local/bin/hakrawler
 WORKDIR /opt/src/jexboss
-RUN pip install -r requires.txt
+RUN pip install --no-cache-dir -r requires.txt
 RUN ln -s /opt/src/jexboss/jexboss.py /usr/local/bin/jexboss.py
 WORKDIR /opt/src/LinkedInt
-RUN pip install thready http
+RUN pip install --no-cache-dir thready http
 RUN chmod +x /opt/src/LinkedInt/LinkedInt.py
 RUN ln -s /opt/src/LinkedInt/LinkedInt.py /usr/local/bin/LinkedInt.py
 WORKDIR /opt/src/masscan
@@ -92,7 +92,7 @@ RUN make static
 
 RUN ln -s /opt/src/sslscan/sslscan /usr/local/bin/sslscan
 WORKDIR /opt/src/Sublist3r
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 RUN ln -s /opt/src/Sublist3r/sublist3r.py /usr/local/bin/sublist3r
 RUN go get github.com/anshumanbh/tko-subs
 RUN ln -s /root/go/bin/tko-subs /usr/local/bin/tko-subs
@@ -110,7 +110,7 @@ RUN unzip amass_linux_amd64.zip
 RUN ln -s /opt/src/amass/amass_linux_amd64/amass /usr/local/bin/
 
 WORKDIR /opt/src/xsscrapy
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 ENV PATH="${PATH}:/opt/src/xsscrapy"
 RUN chmod +x /opt/src/xsscrapy/xsscrapy.py
 RUN export PATH=$PATH:/opt/src/xsscrapy
@@ -120,7 +120,7 @@ RUN ln -s /opt/src/DomLink/domLink.py /usr/local/bin/domLink.py
 RUN chmod +x /usr/local/bin/domLink.py
 
 WORKDIR /opt/src/theHarvester
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 RUN python3 setup.py install
 
 
@@ -140,9 +140,9 @@ RUN git clone https://github.com/depthsecurity/armory.git
 WORKDIR /opt/src/armory
 
 CMD ["echo", "Installing Armory"]
-RUN pip3 install django # Not sure why this doesn't work from the setup
+RUN pip3 install --no-cache-dir django# Not sure why this doesn't work from the setup
 RUN python3 setup.py install
-RUN pip3 install jinja2 xlsxwriter django_q
+RUN pip3 install --no-cache-dir jinja2 xlsxwriter django_q
 WORKDIR /root/current
 COPY launch_api.sh /usr/bin/launch_api.sh
 RUN chmod +x /usr/bin/launch_api.sh