{
  "startTime": 1674218930148,
  "endTime": 1674218930625,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# cb4\n#\n# VERSION               0.1.0\n\nFROM ubuntu:18.04\n\nENV HOME=\"/root\"\n\n# Install dependencies\nCOPY ./sources.list /etc/apt/\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python python3-dev python3-pip curl git mmdb-bin && \\\n    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash && rm -rf /var/lib/apt/lists/*;\n\n# Install node.js\nENV NVM_DIR=\"$HOME/.nvm\"\nRUN \\. \"$NVM_DIR/nvm.sh\" && nvm install 9\n\n# Enable IP Geo-Location\n#RUN curl \"http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz\" | gunzip -c > GeoLite2-City.mmdb\nRUN curl -f \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=AkW8B1e4mQXDkzwx&suffix=tar.gz\" | gunzip -c > GeoLite2-City.mmdb\n\n# Copy the cb4 dependencies\nCOPY ./package.json ./requirements.txt /srv/cb4/\nWORKDIR /srv/cb4\n\n# Install python and node dependencies\nRUN \\. \"$NVM_DIR/nvm.sh\" && nvm use 9 && \\\n    npm install --registry=https://registry.npm.taobao.org && npm cache clean --force;\nRUN pip3 install --no-cache-dir -r ./requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/\n\n# Build node modules\nCOPY ./vj4/ui /srv/cb4/vj4/ui\nCOPY ./scripts /srv/cb4/scripts\nRUN \\. \"$NVM_DIR/nvm.sh\" && nvm use 9 && npm run build\n\n# Copy the cb4 files\nCOPY ./vj4 /srv/cb4/vj4\nCOPY ./.git /srv/cb4/.git\nCOPY ./pm /usr/local/bin/\n\n# Start the server\n\nENV HOST=\"localhost\" \\\n    PORT=34765 \\\n    URL_PREFIX=\"localhost\" \\\n    OAUTH=\"\" \\\n    OAUTH_CLIENT_ID=\"\" \\\n    OAUTH_CLIENT_SECRET=\"\" \\\n    DB_HOST=\"localhost\" \\\n    DB_NAME=\"cb4-production\" \\\n    MQ_HOST=\"localhost\" \\\n    MQ_VHOST=\"/\" \\\n    MOSS_USER_ID=987654321\n\nEXPOSE $PORT\n\nCMD python3 -m vj4.server \\\n    --listen=http://$HOST:$PORT \\\n    --url-prefix=$URL_PREFIX \\\n    --oauth=$OAUTH \\\n    --oauth-client-id=$OAUTH_CLIENT_ID \\\n    --oauth-client-secret=$OAUTH_CLIENT_SECRET \\\n    --db-host=$DB_HOST \\\n    --db-name=$DB_NAME \\\n    --mq-host=$MQ_HOST \\\n    --mq_vhost=$MQ_VHOST \\\n    --moss-user-id=$MOSS_USER_ID\n"
}