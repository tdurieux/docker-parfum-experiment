{
  "startTime": 1674256114058,
  "endTime": 1674256114883,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 - The Android Open Source Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM alpine AS unzipper\n\nRUN apk add --no-cache --update unzip\n\nCOPY emulator-29.2.11.zip /tmp/\nRUN unzip -u -o /tmp/emulator-29.2.11.zip -d /emu/\n\n\nFROM nvidia/opengl:1.0-glvnd-runtime-ubuntu18.04 AS emulator\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},display\n\n# Install all the required emulator dependencies.\n# You can get these by running ./android/scripts/unix/run_tests.sh --verbose --verbose --debs | grep apt | sort -u\n# pulse audio is needed due to some webrtc dependencies.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n# Emulator & video bridge dependencies\n    libc6 libdbus-1-3 libfontconfig1 libgcc1 \\\n    libpulse0 libtinfo5 libx11-6 libxcb1 libxdamage1 \\\n    libnss3 libxcomposite1 libxcursor1 libxi6 \\\n    libxext6 libxfixes3 zlib1g libgl1 pulseaudio socat \\\n# Enable turncfg through usage of curl\n    curl ca-certificates && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Now we configure the user account under which we will be running the emulator\nRUN mkdir -p /android/sdk/platforms && \\\n    mkdir -p /android/sdk/platform-tools && \\\n    mkdir -p /android/sdk/system-images && \\\n    mkdir -p /android-home\n\n# Make sure to place files that do not change often in the higher layers\n# as this will improve caching.\nCOPY launch-emulator.sh /android/sdk/\nCOPY platform-tools/adb /android/sdk/platform-tools/adb\nCOPY default.pa /etc/pulse/default.pa\nRUN gpasswd -a root audio && \\\n    chmod +x /android/sdk/launch-emulator.sh /android/sdk/platform-tools/adb\n\nCOPY --from=unzipper /emu/ /android/sdk/\n\nCOPY avd /android-home\n# Create an initial snapshot so we will boot fast next time around,\n# This is currently an experimental feature, and is not easily configurable//\n# RUN --security=insecure cd /android/sdk && ./launch-emulator.sh -quit-after-boot 120\n\n# Open up adb & grpc port\nEXPOSE 5555\nEXPOSE 5556\nENV ANDROID_SDK_ROOT /android/sdk\nENV ANDROID_AVD_HOME /android-home\nWORKDIR /android/sdk\n\n# You will need to make use of the grpc snapshot/webrtc functionality to actually interact with\n# the emulator.\nCMD [\"/android/sdk/launch-emulator.sh\"]\n\n# Note we should use gRPC status endpoint to check for health once the canary release is out.\nHEALTHCHECK --interval=30s \\\n            --timeout=30s \\\n            --start-period=30s \\\n            --retries=3 \\\n            CMD /android/sdk/platform-tools/adb -s emulator-6554 shell getprop dev.bootcomplete | grep \"1\"\n\nFROM unzipper as sys_unzipper\n\nCOPY sys-img-android-28-O-x86_64.zip /tmp/\nRUN unzip -u -o /tmp/sys-img-android-28-O-x86_64.zip -d /sysimg/\n\nFROM emulator\n\nCOPY --from=sys_unzipper /sysimg/ /android/sdk/system-images/android/\n# Date frequently changes, so we place this in the last layer.\nLABEL maintainer=\"romain@romain-pc\" \\\n      SystemImage.Abi=x86_64 \\\n      SystemImage.TagId=android \\\n      SystemImage.GpuSupport=true \\\n      AndroidVersion.ApiLevel=28 \\\n      com.google.android.emulator.build-date=\"2019-12-06T23:45:10.947398Z\" \\\n      com.google.android.emulator.description=\"Pixel 2 Emulator, running API 28\" \\\n      com.google.android.emulator.version=\"android-28-x86_64/29.2.11\""
}