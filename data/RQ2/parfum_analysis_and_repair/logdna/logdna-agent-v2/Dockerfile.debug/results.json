{
  "startTime": 1674254080024,
  "endTime": 1674254081192,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_IMAGE\n\nFROM --platform=${BUILDPLATFORM} ${BUILD_IMAGE} as build\n\nENV _RJEM_MALLOC_CONF=\"narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0\"\nENV JEMALLOC_SYS_WITH_MALLOC_CONF=\"narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0\"\n\nARG FEATURES\n\nARG SCCACHE_BUCKET\nARG SCCACHE_REGION\nARG SCCACHE_ENDPOINT\nARG SCCACHE_SERVER_PORT=4226\nARG SCCACHE_RECACHE\nARG AWS_ACCESS_KEY_ID\nARG AWS_SECRET_ACCESS_KEY\n\nENV RUST_LOG=rustc_codegen_ssa::back::link=info\n\n# Create the directory for agent repo\nWORKDIR /opt/logdna-agent-v2\n\n# Add the actual agent source files\nCOPY . .\n\n# Rebuild the agent\n# hadolint ignore=SC1091\nRUN --mount=type=secret,id=aws,target=/root/.aws/credentials \\\n    --mount=type=cache,target=/opt/rust/cargo/registry \\\n    --mount=type=cache,target=/opt/logdna-agent-v2/target \\\n    set -a; \\\n    if [ -z \"$SCCACHE_BUCKET\" ]; then unset RUSTC_WRAPPER; fi; \\\n    if [ -z \"$SCCACHE_ENDPOINT\" ]; then unset SCCACHE_ENDPOINT; fi; \\\n    if [ -z \"$SCCACHE_RECACHE\" ]; then unset SCCACHE_RECACHE; fi; \\\n    set +a && env && \\\n    cargo build --manifest-path bin/Cargo.toml ${FEATURES} && \\\n    cp ./target/debug/logdna-agent logdna-agent && \\\n    sccache --show-stats\n\n# Use Debian as agent base image\nFROM debian:bullseye\n\nARG REPO\nARG BUILD_TIMESTAMP\nARG VCS_REF\nARG VCS_URL\nARG BUILD_VERSION\n\nLABEL org.opencontainers.image.created=\"${BUILD_TIMESTAMP}\"\nLABEL org.opencontainers.image.authors=\"LogDNA <support@logdna.com>\"\nLABEL org.opencontainers.image.url=\"https://logdna.com\"\nLABEL org.opencontainers.image.documentation=\"\"\nLABEL org.opencontainers.image.source=\"${VCS_URL}\"\nLABEL org.opencontainers.image.version=\"${BUILD_VERSION}\"\nLABEL org.opencontainers.image.revision=\"${VCS_REF}\"\nLABEL org.opencontainers.image.vendor=\"LogDNA Inc.\"\nLABEL org.opencontainers.image.licenses=\"MIT\"\nLABEL org.opencontainers.image.ref.name=\"\"\nLABEL org.opencontainers.image.title=\"LogDNA Agent\"\nLABEL org.opencontainers.image.description=\"The blazingly fast, resource efficient log collection client\"\n\nENV DEBIAN_FRONTEND=noninteractive\nENV _RJEM_MALLOC_CONF=\"narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0\"\nENV JEMALLOC_SYS_WITH_MALLOC_CONF=\"narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0\"\n\n# Copy the agent binary from the build stage\nCOPY --from=build /opt/logdna-agent-v2/logdna-agent /work/\nWORKDIR /work/\n\nRUN apt update -y \\\n    && apt upgrade -y \\\n    && apt auto-remove -y \\\n    && apt install --no-install-recommends ca-certificates libcap2-bin netcat-openbsd nmap \\\n                   dnsutils vim curl procps net-tools gdbserver -y \\\n    && rm -rf /var/cache/apt \\\n    && chmod -R 777 . \\\n    && setcap \"cap_dac_read_search+p\" /work/logdna-agent \\\n    && groupadd -g 5000 logdna \\\n    && useradd -u 5000 -g logdna logdna && rm -rf /var/lib/apt/lists/*;\n\nCMD gdbserver :11111 ./logdna-agent\n"
}