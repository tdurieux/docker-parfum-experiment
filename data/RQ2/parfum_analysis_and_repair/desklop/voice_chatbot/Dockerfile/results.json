{
  "startTime": 1674248848156,
  "endTime": 1674248848952,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 337
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 327
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 327
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Для поддержки TensorFlow-GPU (подробнее в https://github.com/Desklop/Docker_image_CUDA10.0_cuDNN7.5)\n#FROM cuda10.0_cudnn7.5:1.0\nFROM ubuntu:18.04\nMAINTAINER Vlad Klim 'vladsklim@gmail.com'\n\n# Установка необходимых пакетов для Ubuntu alsa-utils dbus-x11\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y tzdata build-essential python3.6 python3.6-dev python3-pip python3-setuptools python3-tk make git scons gcc pkg-config pulseaudio libpulse-dev portaudio19-dev libglibmm-2.4-dev libasound-dev libao4 libao-dev sonic sox swig flite1-dev ffmpeg x264 x265 locales locales-all net-tools zip unzip dbus-x11 wget && rm -rf /var/lib/apt/lists/*;\n\n# Установка часового пояса хост-машины\nENV TZ=Europe/Minsk\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \\\n    echo $TZ > /etc/timezone && \\\n    dpkg-reconfigure -f noninteractive tzdata\n\n# Установка модулей для Python3\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir decorator==4.4.0 flask==1.0.2 flask-httpauth==3.2.4 gensim==3.7.1 gevent==1.3.7 h5py==2.9.0 tensorflow==1.13.1 keras==2.2.4 matplotlib==3.0.3 numpy==1.16.2 pocketsphinx==0.1.15 pydub==0.23.1 simpleaudio==1.0.2 requests==2.18.4 git+https://github.com/datalogai/recurrentshop.git git+https://github.com/Desklop/seq2seq.git\n# Для установки tensorflow-gpu изменить tensorflow на tensorflow-gpu в строке выше\n\n# Копирование файлов проекта\nCOPY . /Voice_ChatBot\nWORKDIR /Voice_ChatBot\n\n# Загрузка обучающих данных и моделей из Google Drive\nRUN /bin/bash -c \"if [[ ! '$(ls -A 'data')' || ! -f 'install_files/RHVoice.zip' ]]; then ./install_files/download_train_data_and_models.sh && rm -rf 'data/converations_ru' 'data/subtitles_ru' 'data/plays_ru/*.npz' 'data/plays_ru/*.pkl' 'data/plays_ru/*.png'; fi\"\n\n# Установка CMUclmtk_v0.7\nRUN unzip install_files/cmuclmtk-0.7.zip\nWORKDIR /Voice_ChatBot/cmuclmtk-0.7\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\nWORKDIR /Voice_ChatBot\n\n# Установка RHVoice\nRUN unzip install_files/RHVoice.zip\nWORKDIR /Voice_ChatBot/RHVoice\nRUN scons --config=force\nRUN scons install\nWORKDIR /Voice_ChatBot\n\nRUN rm -rf cmuclmtk-0.7 RHVoice install_files\nRUN ldconfig\n\n# Копирование статической языковой модели, словаря и акустической модели для PocketSphinx\nWORKDIR /Voice_ChatBot/temp\nRUN cp prepared_questions_plays_ru.lm /usr/local/lib/python3.6/dist-packages/pocketsphinx/model/ru_bot_plays_ru.lm && \\\n    cp prepared_questions_plays_ru.dic /usr/local/lib/python3.6/dist-packages/pocketsphinx/model/ru_bot_plays_ru.dic && \\\n    cp -r zero_ru.cd_cont_4000 /usr/local/lib/python3.6/dist-packages/pocketsphinx/model/zero_ru.cd_cont_4000\nRUN rm -rf zero_ru.cd_cont_4000\nWORKDIR /Voice_ChatBot\n\n# Изменение локализации для вывода кириллицы в терминале\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\n# Очистка кеша\nRUN apt-get -y autoremove && \\\n    apt-get -y autoclean && \\\n    apt-get -y clean\n\nENTRYPOINT ./run_rest_server.sh\n#CMD [\"rest_server.py\"]\n"
}