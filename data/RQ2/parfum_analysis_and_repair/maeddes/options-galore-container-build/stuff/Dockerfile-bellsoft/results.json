{
  "startTime": 1674251908072,
  "endTime": 1674251909010,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 8,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.11 as liberica\n\n### Modify argument LIBERICA_IMAGE_VARIANT or redefine it via --build-arg parameter to have specific liberica image installed:\n###    docker build . --build-arg LIBERICA_IMAGE_VARIANT=[standard|lite|base]\n### base: minimal image with compressed java.base module, Server VM and optional files stripped, ~37 MB with Alpine base\n### lite: lite image with minimal footprint and Server VM, ~ 100 MB\n### standard: standard jdk image with Server VM and jmods, can be used to create arbirary module set, ~180 MB\n\nENV  LANG=en_US.UTF-8 \\\n     LANGUAGE=en_US:en\n#\t LC_ALL=en_US.UTF-8\n\nARG LIBERICA_IMAGE_VARIANT=lite\n\nARG LIBERICA_JVM_DIR=/usr/lib/jvm\nARG LIBERICA_ROOT=${LIBERICA_JVM_DIR}/jdk-15.0.2-bellsoft\nARG LIBERICA_VERSION=15.0.2\nARG LIBERICA_BUILD=10\nARG LIBERICA_VARIANT=jdk\nARG LIBERICA_RELEASE_TAG=\nARG LIBERICA_ARCH=x64\nARG LIBERICA_GLIBC=no\n\nARG OPT_PKGS=\n\nRUN RTAG=\"$LIBERICA_RELEASE_TAG\" && if [ \"x${RTAG}\" = \"x\" ]; then RTAG=\"$LIBERICA_VERSION\"; fi && \\\n  RSUFFIX=\"\" && if [ \"$LIBERICA_IMAGE_VARIANT\" = \"lite\" ]; then RSUFFIX=\"-lite\"; fi && \\\n  LIBSUFFIX=\"\" && if [ \"$LIBERICA_GLIBC\" = \"no\" ]; then LIBSUFFIX=\"-musl\"; fi && \\\n  for pkg in $OPT_PKGS ; do apk --no-cache add $pkg ; done && \\\n  mkdir -p /tmp/java && \\\n  LIBERICA_BUILD_STR=${LIBERICA_BUILD:+\"+${LIBERICA_BUILD}\"} && \\\n  PKG=`echo \"bellsoft-${LIBERICA_VARIANT}${LIBERICA_VERSION}${LIBERICA_BUILD_STR}-linux-${LIBERICA_ARCH}${LIBSUFFIX}${RSUFFIX}.tar.gz\"` && \\\n  PKG_URL=\"https://download.bell-sw.com/java/${LIBERICA_VERSION}${LIBERICA_BUILD_STR}/${PKG}\" && \\\n  echo \"Download ${PKG_URL}\" && \\\n  wget \"${PKG_URL}\" -O /tmp/java/jdk.tar.gz && \\\n  SHA1=`wget -q \"https://download.bell-sw.com/sha1sum/java/${LIBERICA_VERSION}${LIBERICA_BUILD_STR}\" -O - | grep ${PKG} | cut -f1 -d' '` && \\\n  echo \"${SHA1} */tmp/java/jdk.tar.gz\" | sha1sum -c - && \\\n  tar xzf /tmp/java/jdk.tar.gz -C /tmp/java && \\\n  UNPACKED_ROOT=\"/tmp/java/${LIBERICA_VARIANT}-${LIBERICA_VERSION}\" && \\\n  case $LIBERICA_IMAGE_VARIANT in \\\n  base apk add --no-cache binutils && mkdir -pv \"${LIBERICA_JVM_DIR}\" && \"${UNPACKED_ROOT}/bin/jlink\" --add-modules java.base --compress=2 --no-header-files --no-man-pages --strip-debug --module-path \\\n    \"${UNPACKED_ROOT}\"/jmods --vm=server --output \"${LIBERICA_ROOT}\" && apk del binutils;; \\\n  standard) apk --no-cache add binutils &&  mkdir -pv \"${LIBERICA_ROOT}\" && find /tmp/java/${LIBERICA_VARIANT}* -maxdepth 1 -mindepth 1 -exec mv -v \"{}\" \"${LIBERICA_ROOT}/\" \\; ;; \\\n  *) mkdir -pv \"${LIBERICA_ROOT}\" && find /tmp/java/${LIBERICA_VARIANT}* -maxdepth 1 -mindepth 1 -exec mv -v \"{}\" \"${LIBERICA_ROOT}/\" \\; ;; \\\n esac && \\\n  ln -s $LIBERICA_ROOT /usr/lib/jvm/jdk && \\\n  rm -rf /tmp/java && rm -rf /tmp/hsperfdata_root && rm /tmp/java/jdk.tar.gz\n\nENV JAVA_HOME=${LIBERICA_ROOT} \\\n\tPATH=${LIBERICA_ROOT}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n"
}