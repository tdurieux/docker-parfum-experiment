{
  "startTime": 1674255821889,
  "endTime": 1674255822531,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Chong Simon Chu (chong.simon.chu@gmail.com) (Initially by Soo Lee (duplexa@gmail.com))\n\n# 1. general updates & installing necessary Linux components\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    bzip2 \\\n    gcc \\\n    git \\\n    less \\\n    libncurses-dev \\\n    make \\\n    time \\\n    unzip \\\n    vim \\\n    wget \\\n    zlib1g-dev \\\n    liblz4-tool \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# conda and pysam\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh && bash Miniconda3-py38_4.10.3-Linux-x86_64.sh -p /miniconda -b\nENV PATH=/miniconda/bin:$PATH\nRUN conda update -y conda \\\n    && rm Miniconda3-py38_4.10.3-Linux-x86_64.sh\nRUN conda config --add channels r \\\n    && conda config --add channels bioconda \\\n    && conda install -c conda-forge libgcc-ng \\\n    && conda install -c bioconda samtools \\\n    && conda install -c bioconda bwa \\\n    && conda install pysam sortedcontainers numpy pandas scikit-learn -y\n\n#install bamsnap\nRUN pip install --no-cache-dir bamsnap\n\n#install deep-forest\nRUN pip install --no-cache-dir deep-forest\n\n# download tools\nWORKDIR /usr/local/bin\n#COPY downloads.sh .\n#RUN . downloads.sh\n\n# set path\n#ENV PATH=/usr/local/bin/bwa/:$PATH\n#ENV PATH=/usr/local/bin/samtools/:$PATH\n\n# supporting UTF-8\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# wrapper\nCOPY *.py *.sh ./\nRUN chmod +x *.py\n\n# copy the trained model for genotyping\nCOPY genotyping ./genotyping\n\n# default command\nCMD [\"ls /usr/local/bin\"]\n\n#\n"
}