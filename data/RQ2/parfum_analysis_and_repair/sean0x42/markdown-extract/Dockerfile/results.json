{
  "startTime": 1674250954661,
  "endTime": 1674250955553,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for creating statically-linked Rust applications.\n# See: https://www.artificialworlds.net/blog/2020/04/22/creating-a-tiny-docker-image-of-a-rust-project/\n# See: https://alexbrand.dev/post/how-to-package-rust-applications-into-minimal-docker-containers/\n\n# 1: Build the exe\nFROM rust:1.57 as builder\nWORKDIR /usr/src\n\n# 1a: Prepare for static linking\nRUN apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get install --no-install-recommends -y musl-tools && \\\n    rustup target add x86_64-unknown-linux-musl && rm -rf /var/lib/apt/lists/*;\n\n# 1b: Download and compile Rust dependencies (and store as a separate Docker layer)\nRUN USER=root cargo new markdown-extract\nWORKDIR /usr/src/markdown-extract\nCOPY Cargo.toml Cargo.lock ./\nCOPY src ./src\nRUN cargo install --target x86_64-unknown-linux-musl --path .\n\n# 2: Copy the exe and extra files (\"static\") to an empty Docker image\nFROM scratch\nCOPY --from=builder /usr/local/cargo/bin/markdown-extract .\n# COPY static .\nUSER 1000\nENTRYPOINT [\"./markdown-extract\"]\n"
}