{
  "startTime": 1674217858825,
  "endTime": 1674217860205,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build the image, run `docker build` command from the root of the\n# repository:\n#\n#    docker build -f docker/Dockerfile .\n#\n# There is an optional PYTHON_VERSION build argument which sets the\n# version of python to build against. For example:\n#\n#    docker build -f docker/Dockerfile --build-arg PYTHON_VERSION=3.9 .\n#\n#\n# And an optional LIBOLM_VERSION build argument which sets the\n# version of libolm to build against. For example:\n#\n#    docker build -f docker/Dockerfile --build-arg LIBOLM_VERSION=3.2.11 .\n#\n\n##\n## Creating a builder container\n##\n\n# We use an initial docker container to build all of the runtime dependencies,\n# then transfer those dependencies to the container we're going to ship,\n# before throwing this one away\nARG PYTHON_VERSION=3.8\nFROM docker.io/python:${PYTHON_VERSION}-alpine3.16 as builder\n\n##\n## Build libolm for matrix-nio e2e support\n##\n\n# Install libolm build dependencies\nARG LIBOLM_VERSION=3.2.11\nRUN apk add --no-cache \\\n    make \\\n    cmake \\\n    gcc \\\n    g++ \\\n    git \\\n    libffi-dev \\\n    python3-dev\n\n# Build libolm at the specified version\n#\n# This will build libolm and place it at /libolm\n# This will also build the libolm python bindings and place them at /python-libs\n# We will later copy contents from both of these folders to the runtime container\nCOPY docker/build_and_install_libolm.sh /scripts/\nRUN /scripts/build_and_install_libolm.sh ${LIBOLM_VERSION} /python-libs\n\n# Now that libolm is installed, install matrix-nio with e2e dependencies\n# We again install to /python-libs\nRUN pip install --no-cache-dir --prefix=\"/python-libs\" --no-warn-script-location \\\n    \"matrix-nio[e2e]\"\n\n##\n## Creating the runtime container\n##\n\n# Create the container we'll actually ship. We need to copy libolm and any\n# python dependencies that we built above to this container\nFROM docker.io/python:${PYTHON_VERSION}-alpine3.16\n\n# Copy python dependencies from the \"builder\" container\nCOPY --from=builder /python-libs /usr/local\n\n# Copy libolm from the \"builder\" container\nCOPY --from=builder /usr/local/lib/libolm* /usr/local/lib/\n\n# Install any native runtime dependencies\nRUN apk add --no-cache \\\n    libstdc++\n"
}