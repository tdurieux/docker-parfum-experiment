diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nurdism/neko/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nurdism/neko/.devcontainer/Dockerfile/repaired.Dockerfile
index 3bc2529..9a91cc3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nurdism/neko/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nurdism/neko/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -1,6 +1,6 @@
 FROM nurdism/neko:dev
 
-# Use the "remoteUser" property in devcontainer.json to use it. On Linux, the container 
+# Use the "remoteUser" property in devcontainer.json to use it. On Linux, the container
 # user's GID/UIDs will be updated to match your local UID/GID (when using the dockerFile property).
 # See https://aka.ms/vscode-remote/containers/non-root-user for details.
 ARG USERNAME=neko
@@ -24,18 +24,19 @@ ARG COMPOSE_VERSION=1.24.0
 # Verify git, common tools / libs installed, add/modify non-root user, optionally install zsh
 RUN set -eux; \
     wget -q -O /tmp/common-setup.sh $COMMON_SCRIPT_SOURCE; \
-    if [ "$COMMON_SCRIPT_SHA" != "dev-mode" ]; then echo "$COMMON_SCRIPT_SHA /tmp/common-setup.sh" | sha256sum -c - ; fi; \
+    if [ "$COMMON_SCRIPT_SHA" != "dev-mode" ]; then \
+    echo "$COMMON_SCRIPT_SHA  /tmp/common-setup.sh" | sha256sum -c -; fi; \
     /bin/bash /tmp/common-setup.sh "$INSTALL_ZSH" "$USERNAME" "$USER_UID" "$USER_GID"; \
     rm /tmp/common-setup.sh; \
     #
     # Install docker
-    apt-get install -y apt-transport-https gnupg-agent software-properties-common lsb-release; \
+    apt-get install --no-install-recommends -y apt-transport-https gnupg-agent software-properties-common lsb-release; rm -rf /var/lib/apt/lists/*; \
     curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | (OUT=$(apt-key add - 2>&1) || echo $OUT); \
     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable"; \
-    apt-get update; apt-get install -y docker-ce-cli; \
+    apt-get update; apt-get install --no-install-recommends -y docker-ce-cli; \
     #
     # Install docker compose
-    curl -sSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose; \
+    curl -f -sSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose; \
     chmod +x /usr/local/bin/docker-compose; \
     #
     # Set alternate global install location that both users have rights to access