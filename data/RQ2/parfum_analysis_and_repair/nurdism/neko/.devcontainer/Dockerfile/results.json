{
  "startTime": 1674254347511,
  "endTime": 1674254348363,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 52,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 20,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 20,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 20,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "FROM nurdism/neko:dev\n\n# Use the \"remoteUser\" property in devcontainer.json to use it. On Linux, the container\n# user's GID/UIDs will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=neko\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n#\n# Set to false to skip installing zsh and Oh My ZSH!\nARG INSTALL_ZSH=\"true\"\n\n#\n# Location and expected SHA for common setup script - SHA generated on release\nARG COMMON_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh\"\nARG COMMON_SCRIPT_SHA=\"dev-mode\"\n\n#\n# Docker Compose version\nARG COMPOSE_VERSION=1.24.0\n\n#\n# Verify git, common tools / libs installed, add/modify non-root user, optionally install zsh\nRUN set -eux; \\\n    wget -q -O /tmp/common-setup.sh $COMMON_SCRIPT_SOURCE; \\\n    if [ \"$COMMON_SCRIPT_SHA\" != \"dev-mode\" ]; then \\\n    echo \"$COMMON_SCRIPT_SHA  /tmp/common-setup.sh\" | sha256sum -c -; fi; \\\n    /bin/bash /tmp/common-setup.sh \"$INSTALL_ZSH\" \"$USERNAME\" \"$USER_UID\" \"$USER_GID\"; \\\n    rm /tmp/common-setup.sh; \\\n    #\n    # Install docker\n    apt-get install --no-install-recommends -y apt-transport-https gnupg-agent software-properties-common lsb-release; rm -rf /var/lib/apt/lists/*; \\\n    curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | (OUT=$(apt-key add - 2>&1) || echo $OUT); \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\"; \\\n    apt-get update; apt-get install --no-install-recommends -y docker-ce-cli; \\\n    #\n    # Install docker compose\n    curl -f -sSL \"https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose; \\\n    chmod +x /usr/local/bin/docker-compose; \\\n    #\n    # Set alternate global install location that both users have rights to access\n    mkdir -p /usr/local/share/npm-global; \\\n    chown ${USERNAME}:root /usr/local/share/npm-global; \\\n    npm config -g set prefix /usr/local/share/npm-global; \\\n    sudo -u ${USERNAME} npm config -g set prefix /usr/local/share/npm-global\n\nENV PATH=/usr/local/share/npm-global/bin:$PATH\n\n#\n# switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\n"
}