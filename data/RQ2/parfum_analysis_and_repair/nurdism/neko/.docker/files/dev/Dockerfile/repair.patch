diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nurdism/neko/.docker/files/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nurdism/neko/.docker/files/dev/Dockerfile/repaired.Dockerfile
index 9569f3e..16d455c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nurdism/neko/.docker/files/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nurdism/neko/.docker/files/dev/Dockerfile/repaired.Dockerfile
@@ -14,7 +14,7 @@ RUN set -eux; apt-get update; apt-get install -y --no-install-recommends \
   build-essential perl python autopoint bison flex \
   gettext openssl libopus-dev libvpx-dev libpulse-dev libx11-dev libxv-dev libxt-dev libxrandr-dev \
   libxfixes-dev apt-utils x11vnc libxtst-dev dialog \
-  pulseaudio openbox chromium firefox-esr dbus-x11 xserver-xorg-video-dummy supervisor;
+  pulseaudio openbox chromium firefox-esr dbus-x11 xserver-xorg-video-dummy supervisor; rm -rf /var/lib/apt/lists/*;
 
 #
 # add git
@@ -61,7 +61,7 @@ RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
       arm64) ARCH='arm64';; \
       armhf) ARCH='armv7l';; \
       i386) ARCH='x86';; \
-      *) echo "unsupported architecture"; exit 1 ;; \
+      * echo "unsupported  architecture"; exit 1;; \
     esac \
     && set -ex \
     && for key in \
@@ -75,11 +75,11 @@ RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
       4ED778F539E3634C779C87C6D7062848A1AB005C \
       A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
-      B9E2F5981AA6E0CD28160D9FF13993A75599653C \
-    ; do \
-      gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
-      gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
-      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
+      B9E2F5981AA6E0CD28160D9FF13993A75599653C; \
+    do \
+      gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys "$key" || \
+      gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys "$key" || \
+      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"; \
     done \
     && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
     && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
@@ -117,7 +117,7 @@ RUN set -eux; \
 	esac; \
 	url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"; \
 	wget -O go.tgz "$url"; \
-	echo "${goRelSha256} *go.tgz" | sha256sum -c -; \
+	echo "${goRelSha256}  *go.tgz" | sha256sum -c -; \
 	tar -C /usr/local -xzf go.tgz; \
 	rm go.tgz; \
 	if [ "$goRelArch" = 'src' ]; then \
@@ -177,7 +177,7 @@ RUN mkdir -p /tmp/gotools \
     #
     # setup paths
     && mkdir -p "$GOPATH/src" "$GOPATH/bin" "$GOPATH/pkg/mod" \
-    && chmod -R 777 "$GOPATH" 
+    && chmod -R 777 "$GOPATH"
 
 #
 # turn on go modules
@@ -188,4 +188,4 @@ ENV GO111MODULE=on
 RUN set -eux; \
     curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | (OUT=$(apt-key add - 2>&1) || echo $OUT); \
     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable"; \
-    apt-get update; apt-get install -y docker-ce-cli;
\ No newline at end of file
+    apt-get update; apt-get install --no-install-recommends -y docker-ce-cli; rm -rf /var/lib/apt/lists/*;
\ No newline at end of file