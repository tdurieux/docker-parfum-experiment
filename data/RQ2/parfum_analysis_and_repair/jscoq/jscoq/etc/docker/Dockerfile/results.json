{
  "startTime": 1674247970627,
  "endTime": 1674247972261,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 238,
        "lineEnd": 238,
        "columnStart": 44,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 239,
        "lineEnd": 239,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 198,
        "lineEnd": 198,
        "columnStart": 17,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 58,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 278,
        "lineEnd": 278,
        "columnStart": 76,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 58,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 192,
        "lineEnd": 192,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 58,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 192,
        "lineEnd": 192,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 278,
        "lineEnd": 278,
        "columnStart": 76,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 20,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "ARG BRANCH=v8.15\n\nARG WORDSIZE=32\nARG SWITCH=jscoq+${WORDSIZE}bit\n\nFROM debian:11-slim as opam\n\n# ------------\n#   Get OPAM\n# ------------\n\nARG WORDSIZE\n\nRUN if [ ${WORDSIZE} = 32 ] ; then dpkg --add-architecture i386 ; fi\n\nRUN apt-get update && apt-get upgrade -y apt && \\\n    apt-get install --no-install-recommends -y \\\n    wget ca-certificates \\\n    m4 bubblewrap gcc libc6-dev binutils make patch unzip \\\n    opam && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ ${WORDSIZE} = 32 ] ; then \\\n    apt install --no-install-recommends -y gcc-multilib libgmp-dev:i386; rm -rf /var/lib/apt/lists/*; fi\n\n# Basic OPAM setup\nARG NJOBS=2\nENV OPAMJOBS=${NJOBS}          \\\n    OPAMROOT=/root/.opamcache  \\\n    OPAMROOTISOK=true\n\nRUN opam init -a --bare --disable-sandboxing\n\n# ----------------------------------------------------------\n#\n#       j s C o q   (JavaScript backend)\n#\n# ----------------------------------------------------------\n\n# -----------------\n# jsCoq pre-install\n# -----------------\nFROM opam as jscoq-preinstall\n\nARG SWITCH\nARG WORDSIZE\nRUN if [ ${WORDSIZE} != 32 ] ; then opam switch create ${SWITCH} 4.12.0 ; fi\nRUN if [ ${WORDSIZE} = 32 ] ;  then opam switch create ${SWITCH} --packages=\"ocaml-variants.4.12.0+options,ocaml-option-32bit\" ; fi\n\n# Other deps: Git, Node.js, GMP\nENV APT_PACKAGES=\"git rsync bzip2 nodejs curl libgmp-dev\"\nRUN wget -O- https://deb.nodesource.com/setup_16.x | bash -\n# ^ https://github.com/nodesource/distributions/blob/master/README.md\nRUN apt install --no-install-recommends -y $APT_PACKAGES && rm -rf /var/lib/apt/lists/*;\n\n# ---------------------\n# jsCoq toolchain setup\n# ---------------------\nFROM jscoq-preinstall as jscoq-prereq\n\nARG BRANCH\nARG WORDSIZE\nARG JSCOQ_REPO=https://github.com/jscoq/jscoq\nARG JSCOQ_BRANCH=${BRANCH}\n\nWORKDIR /root\nRUN git clone --recursive -b ${JSCOQ_BRANCH} ${JSCOQ_REPO}\n\nWORKDIR jscoq\nRUN ./etc/toolchain-setup.sh --${WORDSIZE}\nRUN opam clean -a -c\nRUN opam list\n\n# -----------\n# jsCoq build\n# -----------\nFROM jscoq-prereq as jscoq\n\nARG SUB_BRANCH\nARG NJOBS=4\n\nRUN git pull --ff-only\nRUN if [ _${SUB_BRANCH} != _ ] ; then git checkout ${SUB_BRANCH} && git pull --ff-only ; fi\nRUN eval $(opam env) && make coq && make jscoq\n\n# - dist tarballs\nRUN eval $(opam env) && make dist-tarball && make dist-npm \\\n        && mkdir dist && mv _build/dist/*.tgz dist\n\n# --------------\n# Addon packages\n# --------------\nFROM jscoq as jscoq-addons\n\n# - install to OPAM for use by package builds\nRUN eval $(opam env) && make install &&   \\\n    cd _build/jscoq+* && npm link\n\nARG BRANCH\nARG WORDSIZE\nARG SWITCH\nARG ADDONS_REPO=https://github.com/jscoq/addons\nARG ADDONS_BRANCH=${BRANCH}\n\n# - fetch submodules with ssh urls using https instead\n#   (to avoid the need for an ssh key)\nRUN git config --global url.\"https://github.com/\".insteadOf git@github.com:\n\nWORKDIR /root\nRUN git clone --recursive -b ${ADDONS_BRANCH} ${ADDONS_REPO} jscoq-addons\n\nWORKDIR jscoq-addons\nRUN make set-ver VER=`jscoq --version`\nRUN eval $(opam env) && make CONTEXT=${SWITCH}\n\n# Private repos: re-enable SSH\nCOPY Dockerfile _ssh* /root/_ssh/\n#    ^ this is a hack in case `_ssh` does not exist (https://stackoverflow.com/a/46801962/37639)\nENV GIT_SSH_COMMAND 'ssh -i /root/_ssh/id_rsa -o StrictHostKeyChecking=no'\n\nRUN if [ -e /root/_ssh/id_rsa ] ; then \\\n rm ~/.gitconfig && apt-get install --no-install-recommends -y openssh-client; rm -rf /var/lib/apt/lists/*; fi\nRUN if [ -e /root/_ssh/id_rsa ] ; then eval $(opam env) && make privates WITH_PRIVATE=software-foundations ; fi\n\nRUN make pack CONTEXT=${SWITCH}\n\n# -------------------------\n# Building small increments\n# -------------------------\n\nFROM jscoq-addons AS jscoq-inc\n\nARG SUB_BRANCH\nARG NJOBS=4\n\nWORKDIR /root/jscoq\nRUN git pull --ff-only\nRUN if [ _${SUB_BRANCH} != _ ] ; then git checkout ${SUB_BRANCH} && git pull --ff-only ; fi\nRUN eval $(opam env) && make jscoq\n\n# - dist tarballs\nRUN eval $(opam env) && make dist-tarball && make dist-npm \\\n        && mkdir -p dist && mv _build/dist/*.tgz dist\n\n# ---------\n# jsCoq SDK\n# ---------\n\nFROM jscoq as jscoq-sdk-prepare\n\nRUN cp -rL _build/install/jscoq+*bit/ ./dist-sdk && \\\n    rm dist-sdk/bin/*.byte dist-sdk/bin/*.opt\n\n# @todo these have moved; probably some of them are actually needed too.\n# rm dist-sdk/lib/coq/*/*.cmxs \\\n# `find dist-sdk -regex '.*\\.\\(cm\\(a\\|t\\|ti\\)\\|mli?\\)'`\n\nFROM debian:11-slim as jscoq-sdk\n\nARG WORDSIZE\n\nCOPY --from=jscoq-sdk-prepare /root/jscoq/dist-sdk /opt/jscoq\n\n# Needs to be squashed into a single step to facilitate cleanup\nRUN if [ ${WORDSIZE} = 32 ] ; then \\\n        dpkg --add-architecture i386 && apt-get update && \\\n        apt-get install --no-install-recommends -y \\\n            libgmp10:i386 libc6-i386 ; \\\n    else apt-get update ; \\\n    fi ; \\\n    apt-get install --no-install-recommends -y gosu sudo && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nCOPY gosu-entrypoint.sh /root/gosu-entrypoint.sh\nENTRYPOINT [\"/root/gosu-entrypoint.sh\"]\n\nENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/jscoq/bin\n\n# ----------------------------------------------------------\n#\n#       w a C o q   (WebAssembly backend)\n#\n# ----------------------------------------------------------\n\n# -----------------\n# waCoq pre-install\n# -----------------\nFROM opam as wacoq-preinstall\n\nRUN opam switch create wacoq --packages=\"ocaml-base-compiler.4.12.0\"\n\nENV APT_PACKAGES=\"git rsync bzip2 nodejs curl libgmp-dev\"\nRUN wget -O- https://deb.nodesource.com/setup_16.x | bash -\n# ^ https://github.com/nodesource/distributions/blob/master/README.md\nRUN apt-get install --no-install-recommends -y $APT_PACKAGES && rm -rf /var/lib/apt/lists/*;\n#RUN curl https://www.npmjs.com/install.sh | sh\n## ^ https://github.com/nodejs/help/issues/1877\n\nARG WASI_SDK_URL=\"https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-12/wasi-sdk-12.0-linux.tar.gz\"\nRUN wget -O/tmp/wasi-sdk.tar.gz ${WASI_SDK_URL}\nRUN ( cd /opt && tar xf /tmp/wasi-sdk.tar.gz && ln -s wasi-sdk-* wasi-sdk) && rm /tmp/wasi-sdk.tar.gz\n\n# ---------------------\n# waCoq toolchain setup\n# ---------------------\nFROM wacoq-preinstall as wacoq-prereq\n\nARG BRANCH\nARG WACOQ_BIN_REPO=https://github.com/jscoq/wacoq-bin.git\nARG WACOQ_BIN_BRANCH=${BRANCH}\n\nWORKDIR /root\nRUN git clone --recursive -b ${WACOQ_BIN_BRANCH} ${WACOQ_BIN_REPO} wacoq-bin\n\nWORKDIR wacoq-bin\nRUN opam update\nRUN ./etc/setup.sh\nRUN opam clean -a -c\nRUN opam list\n\n# -----------------\n# waCoq+jsCoq build\n# -----------------\nFROM wacoq-prereq as wacoq\n\nARG BRANCH\nARG JSCOQ_REPO=https://github.com/jscoq/jscoq.git\nARG JSCOQ_BRANCH=${BRANCH}\n\nARG NJOBS=4\n\nRUN git pull --ff-only\nRUN npm install && npm cache clean --force;\nRUN eval $(opam env) && make coq && make\nRUN make dist-npm\n\nWORKDIR /root\nRUN git clone --recursive -b ${JSCOQ_BRANCH} ${JSCOQ_REPO} jscoq+wacoq\n\nWORKDIR jscoq+wacoq\nRUN cp ../wacoq-bin/wacoq-bin-*.tar.gz . && npm install ./wacoq-bin-*.tar.gz && npm cache clean --force;\nRUN npm install && npm cache clean --force;\nRUN make wacoq\nRUN make dist-npm-wacoq\n\n# - dist tarballs\n# @oops `dist` is also used by the build...\nRUN rm -rf dist && mkdir dist && mv *.tgz ../wacoq-bin/*.tar.gz dist\n\n# --------------\n# Addon packages\n# --------------\nFROM wacoq as wacoq-addons\n\nARG BRANCH\nARG ADDONS_REPO=https://github.com/jscoq/addons\nARG ADDONS_BRANCH=${BRANCH}\n\nARG CONTEXT=wacoq\n\n# - install to OPAM for use by package builds\nWORKDIR /root/wacoq-bin\nRUN eval $(opam env) && make install && npm link\n\n# - fetch submodules with ssh urls using https instead\n#   (to avoid the need for an ssh key)\nRUN git config --global url.\"https://github.com/\".insteadOf git@github.com:\n\nWORKDIR /root\nRUN git clone --recursive -b ${ADDONS_BRANCH} ${ADDONS_REPO} jscoq-addons\n\nWORKDIR jscoq-addons\nRUN make set-ver CONTEXT=${CONTEXT}\nRUN eval $(opam env) && make CONTEXT=${CONTEXT}\n\n# Private repos: re-enable SSH\nCOPY Dockerfile _ssh* /root/_ssh/\n#    ^ this is a hack in case `_ssh` does not exist (https://stackoverflow.com/a/46801962/37639)\nENV GIT_SSH_COMMAND 'ssh -i /root/_ssh/id_rsa -o StrictHostKeyChecking=no'\n\nRUN if [ -e /root/_ssh/id_rsa ] ; then \\\n rm ~/.gitconfig && apt-get update && apt-get install --no-install-recommends -y openssh-client; rm -rf /var/lib/apt/lists/*; fi\nRUN if [ -e /root/_ssh/id_rsa ] ; then eval $(opam env) && make privates WITH_PRIVATE=software-foundations CONTEXT=${CONTEXT} ; fi\n\nRUN make pack CONTEXT=${CONTEXT}\n"
}