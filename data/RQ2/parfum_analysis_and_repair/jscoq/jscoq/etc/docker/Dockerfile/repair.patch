diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jscoq/jscoq/etc/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jscoq/jscoq/etc/docker/Dockerfile/repaired.Dockerfile
index 69f950b..88375d6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jscoq/jscoq/etc/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jscoq/jscoq/etc/docker/Dockerfile/repaired.Dockerfile
@@ -17,10 +17,10 @@ RUN apt-get update && apt-get upgrade -y apt && \
     apt-get install --no-install-recommends -y \
     wget ca-certificates \
     m4 bubblewrap gcc libc6-dev binutils make patch unzip \
-    opam
+    opam && rm -rf /var/lib/apt/lists/*;
 
 RUN if [ ${WORDSIZE} = 32 ] ; then \
-    apt install --no-install-recommends -y gcc-multilib libgmp-dev:i386; fi
+    apt install --no-install-recommends -y gcc-multilib libgmp-dev:i386; rm -rf /var/lib/apt/lists/*; fi
 
 # Basic OPAM setup
 ARG NJOBS=2
@@ -50,7 +50,7 @@ RUN if [ ${WORDSIZE} = 32 ] ;  then opam switch create ${SWITCH} --packages="oca
 ENV APT_PACKAGES="git rsync bzip2 nodejs curl libgmp-dev"
 RUN wget -O- https://deb.nodesource.com/setup_16.x | bash -
 # ^ https://github.com/nodesource/distributions/blob/master/README.md
-RUN apt install --no-install-recommends -y $APT_PACKAGES
+RUN apt install --no-install-recommends -y $APT_PACKAGES && rm -rf /var/lib/apt/lists/*;
 
 # ---------------------
 # jsCoq toolchain setup
@@ -117,7 +117,8 @@ COPY Dockerfile _ssh* /root/_ssh/
 #    ^ this is a hack in case `_ssh` does not exist (https://stackoverflow.com/a/46801962/37639)
 ENV GIT_SSH_COMMAND 'ssh -i /root/_ssh/id_rsa -o StrictHostKeyChecking=no'
 
-RUN if [ -e /root/_ssh/id_rsa ] ; then rm ~/.gitconfig && apt-get install -y openssh-client ; fi
+RUN if [ -e /root/_ssh/id_rsa ] ; then \
+ rm ~/.gitconfig && apt-get install --no-install-recommends -y openssh-client; rm -rf /var/lib/apt/lists/*; fi
 RUN if [ -e /root/_ssh/id_rsa ] ; then eval $(opam env) && make privates WITH_PRIVATE=software-foundations ; fi
 
 RUN make pack CONTEXT=${SWITCH}
@@ -190,13 +191,13 @@ RUN opam switch create wacoq --packages="ocaml-base-compiler.4.12.0"
 ENV APT_PACKAGES="git rsync bzip2 nodejs curl libgmp-dev"
 RUN wget -O- https://deb.nodesource.com/setup_16.x | bash -
 # ^ https://github.com/nodesource/distributions/blob/master/README.md
-RUN apt-get install --no-install-recommends -y $APT_PACKAGES
+RUN apt-get install --no-install-recommends -y $APT_PACKAGES && rm -rf /var/lib/apt/lists/*;
 #RUN curl https://www.npmjs.com/install.sh | sh
 ## ^ https://github.com/nodejs/help/issues/1877
 
 ARG WASI_SDK_URL="https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-12/wasi-sdk-12.0-linux.tar.gz"
 RUN wget -O/tmp/wasi-sdk.tar.gz ${WASI_SDK_URL}
-RUN ( cd /opt && tar xf /tmp/wasi-sdk.tar.gz && ln -s wasi-sdk-* wasi-sdk )
+RUN ( cd /opt && tar xf /tmp/wasi-sdk.tar.gz && ln -s wasi-sdk-* wasi-sdk) && rm /tmp/wasi-sdk.tar.gz
 
 # ---------------------
 # waCoq toolchain setup
@@ -228,7 +229,7 @@ ARG JSCOQ_BRANCH=${BRANCH}
 ARG NJOBS=4
 
 RUN git pull --ff-only
-RUN npm install
+RUN npm install && npm cache clean --force;
 RUN eval $(opam env) && make coq && make
 RUN make dist-npm
 
@@ -236,8 +237,8 @@ WORKDIR /root
 RUN git clone --recursive -b ${JSCOQ_BRANCH} ${JSCOQ_REPO} jscoq+wacoq
 
 WORKDIR jscoq+wacoq
-RUN cp ../wacoq-bin/wacoq-bin-*.tar.gz . && npm install ./wacoq-bin-*.tar.gz
-RUN npm install
+RUN cp ../wacoq-bin/wacoq-bin-*.tar.gz . && npm install ./wacoq-bin-*.tar.gz && npm cache clean --force;
+RUN npm install && npm cache clean --force;
 RUN make wacoq
 RUN make dist-npm-wacoq
 
@@ -276,7 +277,8 @@ COPY Dockerfile _ssh* /root/_ssh/
 #    ^ this is a hack in case `_ssh` does not exist (https://stackoverflow.com/a/46801962/37639)
 ENV GIT_SSH_COMMAND 'ssh -i /root/_ssh/id_rsa -o StrictHostKeyChecking=no'
 
-RUN if [ -e /root/_ssh/id_rsa ] ; then rm ~/.gitconfig && apt-get update && apt-get install -y openssh-client ; fi
+RUN if [ -e /root/_ssh/id_rsa ] ; then \
+ rm ~/.gitconfig && apt-get update && apt-get install --no-install-recommends -y openssh-client; rm -rf /var/lib/apt/lists/*; fi
 RUN if [ -e /root/_ssh/id_rsa ] ; then eval $(opam env) && make privates WITH_PRIVATE=software-foundations CONTEXT=${CONTEXT} ; fi
 
 RUN make pack CONTEXT=${CONTEXT}