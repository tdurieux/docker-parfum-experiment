{
  "startTime": 1674219208237,
  "endTime": 1674219208745,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "############################\n# Build api\n############################\nFROM golang:1.15.15-alpine3.14 AS apibuilder\nRUN apk update && apk add --no-cache git dep\nCOPY api $GOPATH/src/github.com/alexbrazier/go-url/api\nWORKDIR $GOPATH/src/github.com/alexbrazier/go-url/api\n\n# install the dependencies without checking for go code\nRUN dep ensure -vendor-only\n\n# Build my app\nRUN go build -o /go/bin/server\n\n############################\n# Build frontend\n############################\nFROM node:14.18-alpine AS frontendbuilder\n\nCOPY frontend /app\nWORKDIR /app\n\nRUN yarn --frozen-lockfile --network-timeout 600000 && \\\n    yarn build && yarn cache clean;\n\n############################\n# Build actual image\n############################\nFROM alpine:3.14\n# Need to get updated certificates to connect to Slack API\nRUN apk update && apk add bash dumb-init ca-certificates && rm -rf /var/cache/apk/*\n# Copy our static executable.\nCOPY --from=apibuilder /go/bin/server /go/bin/server\nCOPY --from=frontendbuilder /app/build /go/bin/public\nWORKDIR /go/bin\nCOPY entrypoint.sh .\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/go/bin/entrypoint.sh\"]\n"
}