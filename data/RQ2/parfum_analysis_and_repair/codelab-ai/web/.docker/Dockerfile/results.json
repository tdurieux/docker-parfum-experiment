{
  "startTime": 1674254538715,
  "endTime": 1674254539247,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# We don't use .dockerignore due to performance issues.\n#\n# We build `dist` with CI first before building our image, installing NPM here is require due to some packages that require native bindings.\n#\nFROM node:14.18.0-alpine AS build\n\nRUN apk add --no-cache bash make nasm autoconf automake libtool dpkg pkgconfig libpng libpng-dev g++\n\nWORKDIR /usr/local/codelab\n\nCOPY package.json package.json\nCOPY yarn.lock yarn.lock\n\nRUN yarn --immutable\n\n\n#\n# (2) Prod\n#\nFROM node:14.18.0-alpine AS prod\n\nRUN apk add --no-cache curl\n\nWORKDIR /usr/local/codelab\n\n# Ignore specs from image\n\nCOPY package.json package.json\nCOPY dist dist\nCOPY scripts scripts\nCOPY .docker .docker\nCOPY --from=build /usr/local/codelab/node_modules node_modules\n\n# RUN ls node_modules\n\n# default commands and/or parameters for a container\nCMD [\"node\", \"dist/apps/api/main.js\"]\n\n# is preferred when you want to define a container with a specific executable\n# You cannot override the ENTRYPOINT instruction by adding command-line parameters, but rather append to it\n# ENTRYPOINT\n"
}