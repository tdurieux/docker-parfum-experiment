{
  "startTime": 1674251045161,
  "endTime": 1674251045870,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://pythonspeed.com/articles/base-image-python-docker-images/\nFROM python:3.9-bullseye as base\nMAINTAINER Andreas van Cranenburgh <a.w.van.cranenburgh@rug.nl>\n# https://snyk.io/blog/best-practices-containerizing-python-docker/\nENV HOME=/usr\nRUN apt-get update && apt-get install --yes --no-install-recommends \\\n        build-essential \\\n        curl \\\n        git \\\n        python3-dev \\\n        python3-numpy \\\n        python3-scipy \\\n        python3-pandas \\\n        && apt-get clean && rm -rf /var/lib/apt/lists/*;\nWORKDIR /usr\nRUN git clone --recursive https://github.com/andreasvc/disco-dop.git\nWORKDIR /usr/disco-dop\nRUN pip3 install --no-cache-dir \\\n        --requirement requirements.txt \\\n        --requirement web/requirements \\\n        && python3 setup.py install\n\nCOPY requirements.txt requirements-neural.txt /\nRUN pip install --no-cache-dir -r /requirements.txt -r /requirements-neural.txt\n\n# FIXME: model name should go in a configuration file\nRUN python -c 'from transformers import AutoTokenizer, AutoModel; \\\n\tname=\"GroNLP/bert-base-dutch-cased\"; \\\n\tAutoTokenizer.from_pretrained(name); \\\n\tAutoModel.from_pretrained(name)'\n\nRUN groupadd -g 999 user && \\\n    useradd -r -u 999 -g user user\nRUN mkdir --parents /usr/app/data /usr/app/templates /usr/groref && \\\n\tchown --recursive user:user /usr/app /usr/.cache\n\nWORKDIR /usr/groref\nRUN wget https://bitbucket.org/robvanderg/groref/raw/cb1eb35a4955cc8adc7036eb4cf4ec57e1ccb392/ngdata\n\nWORKDIR /usr/app\nCOPY --chown=user:user mentionspanclassif.* mentionfeatclassif.* pronounmodel.* ./\nCOPY --chown=user:user data data/\nCOPY --chown=user:user templates templates/\nCOPY --chown=user:user *.py ./\n\nUSER 999\nRUN python -c 'import coref; coref.readngdata()'\nENV GUNICORN_CMD_ARGS=\"--bind=0.0.0.0:8899 --workers=2 --preload --timeout=600\"\n# disable GPU\nENV CUDA_VISIBLE_DEVICES=\"-1\"\nCMD [\"gunicorn\", \"web:APP\"]\n"
}