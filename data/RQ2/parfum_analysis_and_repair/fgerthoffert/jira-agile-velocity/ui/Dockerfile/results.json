{
  "startTime": 1674217210281,
  "endTime": 1674217211006,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# => Build container\n# https://www.freecodecamp.org/news/how-to-implement-runtime-environment-variables-with-create-react-app-docker-and-nginx-7f9d42a91d70/\nFROM node:lts-alpine as builder\nWORKDIR /app\nCOPY package.json .\nCOPY package-lock.json .\nRUN npm install && npm cache clean --force;\nCOPY . .\nRUN npm run build\n\n# => Run container\nFROM nginx:1.15.2-alpine\n\n# Nginx config\nRUN rm -rf /etc/nginx/conf.d\nCOPY conf /etc/nginx\n\n# Static build\nCOPY --from=builder /app/build /usr/share/nginx/html/\n\n# Default port exposure\nEXPOSE 80\n\n# Copy .env file and shell script to container\nWORKDIR /usr/share/nginx/html\nCOPY ./env.sh .\nCOPY .env .\n\n# Add bash\nRUN apk add --no-cache bash\n\n# Make our shell script executable\nRUN chmod +x env.sh\n\n# Start Nginx server\nCMD [\"/bin/bash\", \"-c\", \"/usr/share/nginx/html/env.sh && nginx -g \\\"daemon off;\\\"\"]\n"
}