{
  "startTime": 1674250049375,
  "endTime": 1674250051127,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# We need libpython2.7 due to GDB tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    bison \\\n    ca-certificates \\\n    ccache \\\n    check \\\n    curl \\\n    flex \\\n    git \\\n    gperf \\\n    lcov \\\n    libncurses-dev \\\n    libusb-1.0-0-dev \\\n    make \\\n    ninja-build \\\n    libpython2.7 \\\n    python3 \\\n    python3-pip \\\n    unzip \\\n    wget \\\n    xz-utils \\\n    zip \\\n   && apt-get autoremove -y \\\n   && rm -rf /var/lib/apt/lists/* \\\n   && update-alternatives --install /usr/bin/python python /usr/bin/python3 10\n\nRUN python -m pip install --upgrade pip virtualenv\n\n# To build the image for a branch or a tag of IDF, pass --build-arg IDF_CLONE_BRANCH_OR_TAG=name.\n# To build the image with a specific commit ID of IDF, pass --build-arg IDF_CHECKOUT_REF=commit-id.\n# It is possibe to combine both, e.g.:\n#   IDF_CLONE_BRANCH_OR_TAG=release/vX.Y\n#   IDF_CHECKOUT_REF=<some commit on release/vX.Y branch>.\n\nARG IDF_CLONE_URL=https://github.com/espressif/esp-idf.git\nARG IDF_CLONE_BRANCH_OR_TAG=master\nARG IDF_CHECKOUT_REF=\n\nENV IDF_PATH=/opt/esp/idf\nENV IDF_TOOLS_PATH=/opt/esp\n\nRUN echo IDF_CHECKOUT_REF=$IDF_CHECKOUT_REF IDF_CLONE_BRANCH_OR_TAG=$IDF_CLONE_BRANCH_OR_TAG && \\\n    git clone --recursive \\\n      ${IDF_CLONE_BRANCH_OR_TAG:+-b $IDF_CLONE_BRANCH_OR_TAG} \\\n      $IDF_CLONE_URL $IDF_PATH && \\\n    if [ -n \"$IDF_CHECKOUT_REF\" ]; then \\\n      cd $IDF_PATH && \\\n      git checkout $IDF_CHECKOUT_REF && \\\n      git submodule update --init --recursive; \\\n    fi\n\n# Install all the required tools, plus CMake\nRUN $IDF_PATH/tools/idf_tools.py --non-interactive install required \\\n  && $IDF_PATH/tools/idf_tools.py --non-interactive install cmake \\\n  && $IDF_PATH/tools/idf_tools.py --non-interactive install-python-env \\\n  && rm -rf $IDF_TOOLS_PATH/dist\n\n# Ccache is installed, enable it by default\nENV IDF_CCACHE_ENABLE=1\n\nCOPY entrypoint.sh /opt/esp/entrypoint.sh\n\nENTRYPOINT [ \"/opt/esp/entrypoint.sh\" ]\nCMD [ \"/bin/bash\" ]\n"
}