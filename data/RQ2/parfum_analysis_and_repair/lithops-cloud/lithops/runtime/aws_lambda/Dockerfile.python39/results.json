{
  "startTime": 1674253319230,
  "endTime": 1674253320143,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Define custom function directory\nARG FUNCTION_DIR=\"/function\"\n\nFROM python:3.9-buster as build-image\n\n# Include global arg in this stage of the build\nARG FUNCTION_DIR\n\n# Install aws-lambda-cpp build dependencies\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  g++ \\\n  make \\\n  cmake \\\n  unzip \\\n  libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Copy function code\nRUN mkdir -p ${FUNCTION_DIR}\n\n# Update pip\nRUN pip install --no-cache-dir --upgrade --ignore-installed pip wheel six setuptools\n\n# Install the function's dependencies\nRUN pip install --upgrade --no-cache-dir --ignore-installed\\\n    --target ${FUNCTION_DIR} \\\n        awslambdaric \\\n        boto3 \\\n        redis \\\n        httplib2 \\\n        requests \\\n        numpy \\\n        scipy \\\n        pandas \\\n        pika \\\n        kafka-python \\\n        cloudpickle \\\n        ps-mem \\\n        tblib\n\n\nFROM python:3.9-buster\n\n# Include global arg in this stage of the build\nARG FUNCTION_DIR\n# Set working directory to function root directory\nWORKDIR ${FUNCTION_DIR}\n\n# Copy in the built dependencies\nCOPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}\n\n# Add Lithops\nCOPY lithops_lambda.zip ${FUNCTION_DIR}\nRUN unzip lithops_lambda.zip \\\n    && rm lithops_lambda.zip \\\n    && mkdir handler \\\n    && touch handler/__init__.py \\\n    && mv entry_point.py handler/\n\n# Put your dependencies here, using RUN pip install... or RUN apt install...\n\nENTRYPOINT [ \"/usr/local/bin/python\", \"-m\", \"awslambdaric\" ]\nCMD [ \"handler.entry_point.lambda_handler\" ]"
}