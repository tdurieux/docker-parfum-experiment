diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lithops-cloud/lithops/runtime/ibm_cf/Dockerfile.gdal b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lithops-cloud/lithops/runtime/ibm_cf/Dockerfile.gdal/repaired.Dockerfile
index 1d7d9b4..90bbb2c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lithops-cloud/lithops/runtime/ibm_cf/Dockerfile.gdal
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lithops-cloud/lithops/runtime/ibm_cf/Dockerfile.gdal/repaired.Dockerfile
@@ -19,7 +19,7 @@ RUN apt-get update -y \
             git make cmake wget unzip libtool automake \
             zlib1g-dev libsqlite3-dev pkg-config sqlite3 \
             # Newly Added
-            libhdf4-alt-dev libhdf5-serial-dev libnetcdf-dev
+            libhdf4-alt-dev libhdf5-serial-dev libnetcdf-dev && rm -rf /var/lib/apt/lists/*;
 
 # Setup build env for GDAL
 RUN apt-get update -y \
@@ -30,7 +30,7 @@ RUN apt-get update -y \
        libwebp-dev \
        libzstd1-dev bash zip curl \
        libpq-dev libssl-dev \
-       autoconf automake sqlite3 bash-completion
+       autoconf automake sqlite3 bash-completion && rm -rf /var/lib/apt/lists/*;
 
 # Build openjpeg
 ARG OPENJPEG_VERSION=2.3.1
@@ -54,12 +54,12 @@ ARG PROJ_INSTALL_PREFIX
 ARG PROJ_DATUMGRID_LATEST_LAST_MODIFIED
 RUN \
     mkdir -p /build_projgrids/${PROJ_INSTALL_PREFIX}/share/proj \
-    && curl -LOs http://download.osgeo.org/proj/proj-datumgrid-latest.zip \
+    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-latest.zip \
     && unzip -q -j -u -o proj-datumgrid-latest.zip  -d /build_projgrids/${PROJ_INSTALL_PREFIX}/share/proj \
     && rm -f *.zip
 
 RUN apt-get update -y \
-    && apt-get install -y --fix-missing --no-install-recommends rsync ccache
+    && apt-get install -y --fix-missing --no-install-recommends rsync ccache && rm -rf /var/lib/apt/lists/*;
 ARG RSYNC_REMOTE
 
 # Build PROJ
@@ -79,7 +79,8 @@ RUN mkdir proj \
         ccache -M 100M; \
     fi \
     && CFLAGS='-DPROJ_RENAME_SYMBOLS -O2' CXXFLAGS='-DPROJ_RENAME_SYMBOLS -O2' \
-        ./configure --prefix=${PROJ_INSTALL_PREFIX} --disable-static \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+        --prefix=${PROJ_INSTALL_PREFIX} --disable-static \
     && make -j$(nproc) \
     && make install DESTDIR="/build" \
     && if test "${RSYNC_REMOTE}" != ""; then \
@@ -98,7 +99,7 @@ RUN mkdir proj \
     && mv /build${PROJ_INSTALL_PREFIX}/lib/libproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so.${PROJ_SO} \
     && ln -s libinternalproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so.${PROJ_SO_FIRST} \
     && ln -s libinternalproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so \
-    && rm /build${PROJ_INSTALL_PREFIX}/lib/libproj.*  \
+    && rm /build${PROJ_INSTALL_PREFIX}/lib/libproj.* \
     && ln -s libinternalproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libproj.so.${PROJ_SO_FIRST} \
     && strip -s /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so.${PROJ_SO} \
     && for i in /build${PROJ_INSTALL_PREFIX}/bin/*; do strip -s $i 2>/dev/null || /bin/true; done
@@ -108,7 +109,7 @@ ARG GDAL_VERSION=master
 ARG GDAL_RELEASE_DATE
 ARG GDAL_BUILD_IS_RELEASE
 RUN if test "${GDAL_VERSION}" = "master"; then \
-        export GDAL_VERSION=$(curl -Ls https://api.github.com/repos/OSGeo/gdal/commits/HEAD -H "Accept: application/vnd.github.VERSION.sha"); \
+        export GDAL_VERSION=$( curl -f -Ls https://api.github.com/repos/OSGeo/gdal/commits/HEAD -H "Accept: application/vnd.github.VERSION.sha"); \
         export GDAL_RELEASE_DATE=$(date "+%Y%m%d"); \
     fi \
     && if test "x${GDAL_BUILD_IS_RELEASE}" = "x"; then \
@@ -131,7 +132,7 @@ RUN if test "${GDAL_VERSION}" = "master"; then \
         export CXX=$PWD/ccache_g++.sh; \
         ccache -M 1G; \
     fi \
-    && ./configure --prefix=/usr --without-libtool \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --without-libtool \
     --with-hide-internal-symbols \
     --with-jpeg12 \
     --with-python \
@@ -171,28 +172,28 @@ FROM ubuntu:18.04 as runner
 ENV FLASK_PROXY_PORT 8080
 
 RUN apt-get update \
-  && apt-get install -y python3-pip python3-dev \
+  && apt-get install --no-install-recommends -y python3-pip python3-dev \
   && cd /usr/local/bin \
   && ln -s /usr/bin/python3 python \
-  && pip3 install --upgrade pip
+  && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;
 
 # PROJ dependencies
 RUN apt-get update; \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y  --no-install-recommends \
+    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
         libsqlite3-0 \
-        curl unzip
+        curl unzip && rm -rf /var/lib/apt/lists/*;
 
 # GDAL dependencies
 RUN apt-get update -y; \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y  --no-install-recommends \
+    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
         python3-numpy libpython3.6 \
         libjpeg-turbo8 libgeos-3.6.2 libgeos-c1v5 \
         libcurl4 libexpat1 \
         libxerces-c3.2 \
         libwebp6 \
         libzstd1 bash libpq5 libssl1.1 \
-        # Newly Added
-        libhdf4-0-alt libhdf5-100 libhdf5-cpp-100 libnetcdf-c++4 netcdf-bin
+
+        libhdf4-0-alt libhdf5-100 libhdf5-cpp-100 libnetcdf-c++4 netcdf-bin && rm -rf /var/lib/apt/lists/*;
 
 # Order layers starting with less frequently varying ones
 COPY --from=builder  /build_thirdparty/usr/ /usr/
@@ -212,7 +213,7 @@ COPY --from=builder  /build_gdal_version_changing/usr/ /usr/
 
 RUN ldconfig
 
-RUN pip install --upgrade pip setuptools six && pip install --no-cache-dir flask gevent ibm-cos-sdk redis pika==0.13.1 requests
+RUN pip install --no-cache-dir --upgrade pip setuptools six && pip install --no-cache-dir flask gevent ibm-cos-sdk redis pika==0.13.1 requests
 
 # create action working directory
 RUN mkdir -p /action
@@ -225,7 +226,7 @@ ADD https://raw.githubusercontent.com/apache/openwhisk-runtime-python/3%401.0.3/
 
 # Application Layer
 # Update numpy version for pyarrow
-RUN pip install numpy --upgrade
-RUN pip install pyrip pyarrow --upgrade
+RUN pip install --no-cache-dir numpy --upgrade
+RUN pip install --no-cache-dir pyrip pyarrow --upgrade
 
 CMD ["/bin/bash", "-c", "cd /pythonAction && python -u pythonrunner.py"]
\ No newline at end of file