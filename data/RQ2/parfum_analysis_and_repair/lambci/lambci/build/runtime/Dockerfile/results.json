{
  "startTime": 1674248417023,
  "endTime": 1674248417836,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lambci/lambda-base:build\n\nRUN yum install -y yum-utils rpm-build ncurses-devel; rm -rf /var/cache/yum \\\n  yumdownloader --source bash && \\\n  yum-builddep -y bash && \\\n  rpm -ivh *.rpm && \\\n  rm -rf /dev/core /dev/fd /dev/tty && \\\n  rpmbuild -bi --nocheck /usr/src/rpm/SPECS/bash.spec\nRUN mv /usr/src/rpm/BUILDROOT/bash-*/bin /tmp/\n\n\nFROM lambci/yumda:1\n\nARG GIT_VERSION\n\nRUN yum install -y git-${GIT_VERSION} zip perl-Digest-SHA && rm -rf /var/cache/yum\n\n\nFROM lambci/lambda-base:build\n\nWORKDIR /opt\n\nCOPY --from=0 /tmp/bin ./bin\nCOPY --from=1 /lambda/opt .\n\nARG PIP_VERSION\n\nRUN python3 -m venv /opt && /opt/bin/pip install -U \"pip==${PIP_VERSION}\" setuptools wheel && \\\n  find /opt/lib/python3.6 \\( -name examples -or -name \"*.exe\" -or -name __pycache__ \\) | xargs rm -rf\n\nARG NODE_VERSION\n\nRUN curl -f -sSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz | \\\n  tar -xJ --strip-components 1\n\nRUN curl -f -O https://raw.githubusercontent.com/lambci/node-custom-lambda/${NODE_VERSION}/v12.x/layer.zip && \\\n  unzip -o layer.zip && \\\n  rm layer.zip\n\nARG NPM_VERSION\n\nRUN npm install -g npm@${NPM_VERSION} && \\\n  rm -rf LICENSE README.md CHANGELOG.md share/{man,doc} \\\n    lib/node_modules/npm/{docs,man,changelogs,node_modules/ajv/dist} && \\\n  find lib/node_modules -name '*.ts' -delete && npm cache clean --force;\n\nARG AWS_SDK_VERSION\n\nRUN npm install -g aws-sdk@${AWS_SDK_VERSION} && \\\n  rm -rf lib/node_modules/aws-sdk/dist && \\\n  find lib/node_modules -name '*.ts' -delete && npm cache clean --force;\n\nRUN mkdir nodejs && mv lib/node_modules nodejs/ && \\\n  cd bin && \\\n  ln -sf ../nodejs/node_modules/npm/bin/npm-cli.js npm && \\\n  ln -sf ../nodejs/node_modules/npm/bin/npx-cli.js npx\n\nRUN zip -yr /tmp/layer.zip .\n"
}