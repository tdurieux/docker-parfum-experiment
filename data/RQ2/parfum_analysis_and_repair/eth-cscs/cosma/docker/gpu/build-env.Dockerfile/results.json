{
  "startTime": 1674218909226,
  "endTime": 1674218909998,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.6.0-devel-ubuntu20.04\n\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG MPICH_VERSION=4.0.1\nARG OPENBLAS_VERSION=0.3.20\nARG NETLIB_SCALAPACK_VERSION=2.2.0\n\nENV DEBIAN_FRONTEND noninteractive\nENV MKLROOT=/opt/intel/compilers_and_libraries/linux/mkl\nENV FORCE_UNSAFE_CONFIGURE 1\nENV MPICH_VERSION ${MPICH_VERSION}\nENV MKL_VERSION ${MKL_VERSION}\n\n# reduce the minimum local dimension to allow all mpi ranks to take part\n# in testing\nENV COSMA_MIN_LOCAL_DIMENSION=32\n\n# Install basic tools\nRUN apt-get update -qq && \\\n    apt-get install -qq -y --no-install-recommends \\\n      software-properties-common \\\n      build-essential gfortran pkg-config \\\n      git tar wget curl && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install cmake\nRUN wget -qO- \"https://cmake.org/files/v3.22/cmake-3.22.1-linux-x86_64.tar.gz\" | tar --strip-components=1 -xz -C /usr/local\n\n# Install MPICH ABI compatible with Cray's lib on Piz Daint\nRUN wget -q https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \\\n    tar -xzf mpich-${MPICH_VERSION}.tar.gz && \\\n    cd mpich-${MPICH_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make install -j$(nproc) && \\\n    rm -rf /root/mpich-${MPICH_VERSION}.tar.gz /root/mpich-${MPICH_VERSION}\n\n# Install OpenBLAS\nRUN wget -qO - https://github.com/xianyi/OpenBLAS/archive/v${OPENBLAS_VERSION}.tar.gz -O openblas.tar.gz && \\\n    tar -xzf openblas.tar.gz && \\\n    cd OpenBLAS-${OPENBLAS_VERSION}/ && \\\n    make TARGET=HASWELL NO_STATIC=1 -j$(nproc) && \\\n    make install TARGET=HASWELL NO_STATIC=1 PREFIX=/usr/local/ && \\\n    rm -rf /root/openblas.tar.gz /root/OpenBLAS-${OPENBLAS_VERSION}/ && \\\n    ldconfig\n\nRUN wget -qO - https://www.netlib.org/scalapack/scalapack-${NETLIB_SCALAPACK_VERSION}.tgz -O scalapack.tar.gz && \\\n    tar -xzf scalapack.tar.gz && \\\n    cd scalapack-${NETLIB_SCALAPACK_VERSION} && \\\n    mkdir build && \\\n    cd build && \\\n    CC=mpicc FC=mpif90 cmake .. \\\n      -DBUILD_STATIC_LIBS=OFF \\\n      -DBUILD_SHARED_LIBS=ON \\\n      -DCMAKE_BUILD_TYPE=Release && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf /root/scalapack.tar.gz /root/scalapack-${NETLIB_SCALAPACK_VERSION} && \\\n    ldconfig\n\n# Add deployment tooling\nRUN mkdir -p /opt/libtree && \\\n    curl -Lfso /opt/libtree/libtree https://github.com/haampie/libtree/releases/download/v3.0.3/libtree_x86_64 && \\\n    chmod +x /opt/libtree/libtree\n\n"
}