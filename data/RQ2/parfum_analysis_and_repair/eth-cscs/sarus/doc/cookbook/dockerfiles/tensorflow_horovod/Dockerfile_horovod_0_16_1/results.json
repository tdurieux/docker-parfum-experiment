{
  "startTime": 1674249692985,
  "endTime": 1674249694186,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-devel-ubuntu16.04\n\n# Define the software versions\nENV HOROVOD_VERSION=0.16.1 \\\n    TENSORFLOW_VERSION=1.13.1 \\\n    CUDNN_VERSION=7.5.0.56-1+cuda10.0 \\\n    NCCL_VERSION=2.4.2-1+cuda10.0\n\n# Python version\nARG python=3.5\nENV PYTHON_VERSION=${python}\n\n# Install the necessary packages\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    cmake git curl vim wget ca-certificates \\\n    libibverbs-dev \\\n    libcudnn7=${CUDNN_VERSION} \\\n    libnccl2=${NCCL_VERSION} \\\n    libnccl-dev=${NCCL_VERSION} \\\n    libjpeg-dev \\\n    libpng-dev \\\n    python${PYTHON_VERSION} python${PYTHON_VERSION}-dev && rm -rf /var/lib/apt/lists/*;\n\n# Create symbolic link in order to make the installed python default\nRUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python\n\n# Download pip bootstrap script and install pip\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\nr   m get-pip.py\n\n# Install Tensorflow, Keras and h5py\nRUN pip install --no-cache-dir tensorflow-gpu==${TENSORFLOW_VERSION} keras h5py\n\n# Install MPICH 3.1.4\nRUN cd /tmp \\\n    && wget -q https://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz \\\n    && tar xf mpich-3.1.4.tar.gz \\\n    && cd mpich-3.1.4 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-fortran --enable-fast=all,O3 --prefix=/usr \\\n    && make -j$(nproc) \\\n    && make install \\\n    && ldconfig \\\n    && cd .. \\\n    && rm -rf mpich-3.1.4 mpich-3.1.4.tar.gz \\\n    && cd /\n\n# Install Horovod\nRUN ldconfig /usr/local/cuda-10.0/targets/x86_64-linux/lib/stubs && \\\n    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod==${HOROVOD_VERSION} && \\\nl   dconfig\n\n# NCCL configuration\nRUN echo NCCL_DEBUG=INFO >> /etc/nccl.conf && \\\n    echo NCCL_IB_HCA=ipogif0 >> /etc/nccl.conf && \\\n    echo NCCL_IB_CUDA_SUPPORT=1 >> /etc/nccl.conf\n"
}