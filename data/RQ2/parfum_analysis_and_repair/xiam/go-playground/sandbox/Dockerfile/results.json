{
  "startTime": 1674253321999,
  "endTime": 1674253323514,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 22,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Go Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\nFROM debian:jessie as builder\nLABEL maintainer \"golang-dev@googlegroups.com\"\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\nENV GOROOT_BOOTSTRAP /usr/local/gobootstrap\nENV CGO_ENABLED=0\nENV GO_VERSION 1.11.1\nENV BUILD_DEPS 'curl bzip2 git gcc patch libc6-dev ca-certificates'\n\n# Fake time\nCOPY enable-fake-time.patch /usr/local/playground/\n# Fake file system\nCOPY fake_fs.lst /usr/local/playground/\n\nRUN apt-get update && apt-get install -y ${BUILD_DEPS} --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -s https://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/trunk.544461/naclsdk_linux.tar.bz2 | tar -xj -C /tmp --strip-components=2 pepper_67/tools/sel_ldr_x86_64\n\n# Get the Go binary.\nRUN curl -f -sSL https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz -o /tmp/go.tar.gz\nRUN curl -f -sSL https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz.sha256 -o /tmp/go.tar.gz.sha256\nRUN echo \"$(cat /tmp/go.tar.gz.sha256)  /tmp/go.tar.gz\" | sha256sum -c -\nRUN tar -C /usr/local/ -vxzf /tmp/go.tar.gz && rm /tmp/go.tar.gz\n# Make a copy for GOROOT_BOOTSTRAP, because we rebuild the toolchain and make.bash removes bin/go as its first step.\nRUN cp -R /usr/local/go $GOROOT_BOOTSTRAP\n# Apply the fake time and fake filesystem patches.\nRUN patch /usr/local/go/src/runtime/rt0_nacl_amd64p32.s /usr/local/playground/enable-fake-time.patch\nRUN cd /usr/local/go && go run misc/nacl/mkzip.go -p syscall /usr/local/playground/fake_fs.lst src/syscall/fstest_nacl.go\n# Re-build the Go toolchain.\nRUN cd /usr/local/go/src && GOOS=nacl GOARCH=amd64p32 ./make.bash --no-clean\n\n# BEGIN deps (run `make update-deps` to update)\n\n# Repo cloud.google.com/go at 3afaae4 (2018-03-02)\nENV REV=3afaae429987a1884530d6018d6e963a932d28c0\nRUN go get -d cloud.google.com/go/compute/metadata `#and 6 other pkgs` &&\\\n    (cd /go/src/cloud.google.com/go && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo github.com/bradfitz/gomemcache at 1952afa (2017-02-08)\nENV REV=1952afaa557dc08e8e0d89eafab110fb501c1a2b\nRUN go get -d github.com/bradfitz/gomemcache/memcache &&\\\n    (cd /go/src/github.com/bradfitz/gomemcache && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo github.com/golang/protobuf at bbd03ef (2018-02-02)\nENV REV=bbd03ef6da3a115852eaf24c8a1c46aeb39aa175\nRUN go get -d github.com/golang/protobuf/proto `#and 8 other pkgs` &&\\\n    (cd /go/src/github.com/golang/protobuf && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo github.com/googleapis/gax-go at 317e000 (2017-09-15)\nENV REV=317e0006254c44a0ac427cc52a0e083ff0b9622f\nRUN go get -d github.com/googleapis/gax-go &&\\\n    (cd /go/src/github.com/googleapis/gax-go && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo golang.org/x/net at ae89d30 (2018-03-11)\nENV REV=ae89d30ce0c63142b652837da33d782e2b0a9b25\nRUN go get -d golang.org/x/net/context `#and 8 other pkgs` &&\\\n    (cd /go/src/golang.org/x/net && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo golang.org/x/oauth2 at 2f32c3a (2018-02-28)\nENV REV=2f32c3ac0fa4fb807a0fcefb0b6f2468a0d99bd0\nRUN go get -d golang.org/x/oauth2 `#and 5 other pkgs` &&\\\n    (cd /go/src/golang.org/x/oauth2 && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo golang.org/x/text at b7ef84a (2018-03-02)\nENV REV=b7ef84aaf62aa3e70962625c80a571ae7c17cb40\nRUN go get -d golang.org/x/text/secure/bidirule `#and 4 other pkgs` &&\\\n    (cd /go/src/golang.org/x/text && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo golang.org/x/tools at 265a513 (2018-10-16)\nENV REV=265a51357114e0a09a88f3436f5eaef823bd046c\nRUN go get -d golang.org/x/tools/go/ast/astutil `#and 5 other pkgs` &&\\\n    (cd /go/src/golang.org/x/tools && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo google.golang.org/api at ab90adb (2018-02-22)\nENV REV=ab90adb3efa287b869ecb698db42f923cc734972\nRUN go get -d google.golang.org/api/googleapi `#and 6 other pkgs` &&\\\n    (cd /go/src/google.golang.org/api && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo google.golang.org/genproto at 2c5e7ac (2018-03-02)\nENV REV=2c5e7ac708aaa719366570dd82bda44541ca2a63\nRUN go get -d google.golang.org/genproto/googleapis/api/annotations `#and 4 other pkgs` &&\\\n    (cd /go/src/google.golang.org/genproto && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Repo google.golang.org/grpc at f0a1202 (2018-02-28)\nENV REV=f0a1202acdc5c4702be05098d5ff8e9b3b444442\nRUN go get -d google.golang.org/grpc `#and 24 other pkgs` &&\\\n    (cd /go/src/google.golang.org/grpc && (git cat-file -t $REV 2>/dev/null || git fetch -q origin $REV) && git reset --hard $REV)\n\n# Optimization to speed up iterative development, not necessary for correctness:\nRUN go install cloud.google.com/go/compute/metadata \\\n\tcloud.google.com/go/datastore \\\n\tcloud.google.com/go/internal \\\n\tcloud.google.com/go/internal/atomiccache \\\n\tcloud.google.com/go/internal/fields \\\n\tcloud.google.com/go/internal/version \\\n\tgithub.com/bradfitz/gomemcache/memcache \\\n\tgithub.com/golang/protobuf/proto \\\n\tgithub.com/golang/protobuf/protoc-gen-go/descriptor \\\n\tgithub.com/golang/protobuf/ptypes \\\n\tgithub.com/golang/protobuf/ptypes/any \\\n\tgithub.com/golang/protobuf/ptypes/duration \\\n\tgithub.com/golang/protobuf/ptypes/struct \\\n\tgithub.com/golang/protobuf/ptypes/timestamp \\\n\tgithub.com/golang/protobuf/ptypes/wrappers \\\n\tgithub.com/googleapis/gax-go \\\n\tgolang.org/x/net/context \\\n\tgolang.org/x/net/context/ctxhttp \\\n\tgolang.org/x/net/http2 \\\n\tgolang.org/x/net/http2/hpack \\\n\tgolang.org/x/net/idna \\\n\tgolang.org/x/net/internal/timeseries \\\n\tgolang.org/x/net/lex/httplex \\\n\tgolang.org/x/net/trace \\\n\tgolang.org/x/oauth2 \\\n\tgolang.org/x/oauth2/google \\\n\tgolang.org/x/oauth2/internal \\\n\tgolang.org/x/oauth2/jws \\\n\tgolang.org/x/oauth2/jwt \\\n\tgolang.org/x/text/secure/bidirule \\\n\tgolang.org/x/text/transform \\\n\tgolang.org/x/text/unicode/bidi \\\n\tgolang.org/x/text/unicode/norm \\\n\tgolang.org/x/tools/go/ast/astutil \\\n\tgolang.org/x/tools/godoc/static \\\n\tgolang.org/x/tools/imports \\\n\tgoogle.golang.org/api/googleapi \\\n\tgoogle.golang.org/api/googleapi/internal/uritemplates \\\n\tgoogle.golang.org/api/internal \\\n\tgoogle.golang.org/api/iterator \\\n\tgoogle.golang.org/api/option \\\n\tgoogle.golang.org/api/transport/grpc \\\n\tgoogle.golang.org/genproto/googleapis/api/annotations \\\n\tgoogle.golang.org/genproto/googleapis/datastore/v1 \\\n\tgoogle.golang.org/genproto/googleapis/rpc/status \\\n\tgoogle.golang.org/genproto/googleapis/type/latlng \\\n\tgoogle.golang.org/grpc \\\n\tgoogle.golang.org/grpc/balancer \\\n\tgoogle.golang.org/grpc/balancer/base \\\n\tgoogle.golang.org/grpc/balancer/roundrobin \\\n\tgoogle.golang.org/grpc/codes \\\n\tgoogle.golang.org/grpc/connectivity \\\n\tgoogle.golang.org/grpc/credentials \\\n\tgoogle.golang.org/grpc/credentials/oauth \\\n\tgoogle.golang.org/grpc/encoding \\\n\tgoogle.golang.org/grpc/encoding/proto \\\n\tgoogle.golang.org/grpc/grpclb/grpc_lb_v1/messages \\\n\tgoogle.golang.org/grpc/grpclog \\\n\tgoogle.golang.org/grpc/internal \\\n\tgoogle.golang.org/grpc/keepalive \\\n\tgoogle.golang.org/grpc/metadata \\\n\tgoogle.golang.org/grpc/naming \\\n\tgoogle.golang.org/grpc/peer \\\n\tgoogle.golang.org/grpc/resolver \\\n\tgoogle.golang.org/grpc/resolver/dns \\\n\tgoogle.golang.org/grpc/resolver/passthrough \\\n\tgoogle.golang.org/grpc/stats \\\n\tgoogle.golang.org/grpc/status \\\n\tgoogle.golang.org/grpc/tap \\\n\tgoogle.golang.org/grpc/transport\n# END deps\n\n# Add and compile playground daemon\nCOPY . /go/src/playground/\nRUN go install playground\n\nFROM debian:jessie\n\nRUN apt-get update && apt-get install -y git ca-certificates --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /usr/local/go /usr/local/go\nCOPY --from=builder /tmp/sel_ldr_x86_64 /usr/local/bin\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\n\n# Add and compile tour packages\nRUN GOOS=nacl GOARCH=amd64p32 go get \\\n    golang.org/x/tour/pic \\\n    golang.org/x/tour/reader \\\n    golang.org/x/tour/tree \\\n    golang.org/x/tour/wc \\\n    golang.org/x/talks/content/2016/applicative/google && \\\n    rm -rf $GOPATH/src/golang.org/x/tour/.git && \\\n    rm -rf $GOPATH/src/golang.org/x/talks/.git\n\n# Add tour packages under their old import paths (so old snippets still work)\nRUN mkdir -p $GOPATH/src/code.google.com/p/go-tour && \\\n    cp -R $GOPATH/src/golang.org/x/tour/* $GOPATH/src/code.google.com/p/go-tour/ && \\\n    sed -i 's_// import_// public import_' $(find $GOPATH/src/code.google.com/p/go-tour/ -name *.go) && \\\n    go install \\\n    code.google.com/p/go-tour/pic \\\n    code.google.com/p/go-tour/reader \\\n    code.google.com/p/go-tour/tree \\\n    code.google.com/p/go-tour/wc\n\nRUN mkdir /app\n\nCOPY --from=builder /go/bin/playground /app\nWORKDIR /app\n\n# Run tests\nRUN /app/playground test\n\nEXPOSE 8080\nENTRYPOINT [\"/app/playground\"]\n"
}