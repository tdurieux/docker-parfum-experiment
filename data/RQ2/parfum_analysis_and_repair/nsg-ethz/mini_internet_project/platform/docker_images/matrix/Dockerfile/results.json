{
  "startTime": 1674254860983,
  "endTime": 1674254862163,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 1,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM d_base:latest\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# runtime dependencies\nRUN set -eux; \\\n\tapk add --no-cache \\\n\t\tca-certificates \\\n\t\ttzdata \\\n\t;\n\nENV GPG_KEY E3FF2839C048B25C084DEBE9B26995E310250568\nENV PYTHON_VERSION 3.8.12\n\nRUN set -eux; \\\n\t\\\n\tapk add --no-cache --virtual .build-deps \\\n\t\tgnupg \\\n\t\ttar \\\n\t\txz \\\n\t\t\\\n\t\tbluez-dev \\\n\t\tbzip2-dev \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\texpat-dev \\\n\t\tfindutils \\\n\t\tgcc \\\n\t\tgdbm-dev \\\n\t\tlibc-dev \\\n\t\tlibffi-dev \\\n\t\tlibnsl-dev \\\n\t\tlibtirpc-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tncurses-dev \\\n\t\topenssl-dev \\\n\t\tpax-utils \\\n\t\treadline-dev \\\n\t\tsqlite-dev \\\n\t\ttcl-dev \\\n\t\ttk \\\n\t\ttk-dev \\\n\t\tutil-linux-dev \\\n\t\txz-dev \\\n\t\tzlib-dev \\\n\t; \\\n\t\\\n\twget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"; \\\n\twget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"; \\\n\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\"; \\\n\tgpg --batch --verify python.tar.xz.asc python.tar.xz; \\\n\tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \\\n\trm -rf \"$GNUPGHOME\" python.tar.xz.asc; \\\n\tmkdir -p /usr/src/python; \\\n\ttar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz; \\\n\trm python.tar.xz; \\\n\t\\\n\tcd /usr/src/python; \\\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-optimizations \\\n\t\t--enable-option-checking=fatal \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t; \\\n\tnproc=\"$(nproc)\"; \\\n\tmake -j \"$nproc\" \\\n# set thread stack size to 1MB so we don't segfault before we hit sys.getrecursionlimit()\n# https://github.com/alpinelinux/aports/commit/2026e1259422d4e0cf92391ca2d3844356c649d0\n\t\tEXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n\t\tLDFLAGS=\"-Wl,--strip-all\" \\\n\t; \\\n\tmake install; \\\n\tcd /; \\\n\trm -rf /usr/src/python; \\\n\t\\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \\\n\t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t; \\\n\t\\\n\tfind /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' \\\n\t\t| tr ',' '\\n' \\\n\t\t| sort -u \\\n\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t\t| xargs -rt apk add --no-network --virtual .python-rundeps \\\n\t; \\\n\tapk del --no-network .build-deps; \\\n\t\\\n\tpython3 --version\n\n# make some useful symlinks that are expected to exist (\"/usr/local/bin/python\" and friends)\nRUN set -eux; \\\n\tfor src in idle3 pydoc3 python3 python3-config; do \\\n\t\tdst=\"$(echo \"$src\" | tr -d 3)\"; \\\n\t\t[ -s \"/usr/local/bin/$src\" ]; \\\n\t\t[ ! -e \"/usr/local/bin/$dst\" ]; \\\n\t\tln -svT \"/usr/local/bin/$src\" \"/usr/local/bin/$dst\"; \\\n\tdone\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 21.2.4\n# https://github.com/docker-library/python/issues/365\nENV PYTHON_SETUPTOOLS_VERSION 57.5.0\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/2caf84b14febcda8077e59e9b8a6ef9a680aa392/public/get-pip.py\nENV PYTHON_GET_PIP_SHA256 7c5239cea323cadae36083079a5ee6b2b3d56f25762a0c060d2867b89e5e06c5\n\nRUN set -eux; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum -c -; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t\t\"setuptools==$PYTHON_SETUPTOOLS_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t; \\\n\trm -f get-pip.py\n\n# CMD [\"python3\"]\n\n\nRUN apk add --no-cache tmux\n\nCOPY ping.py /home/ping.py\nRUN chmod +x /home/ping.py\n\nCMD [\"tail\", \"-f\", \"/dev/null\"]\n"
}