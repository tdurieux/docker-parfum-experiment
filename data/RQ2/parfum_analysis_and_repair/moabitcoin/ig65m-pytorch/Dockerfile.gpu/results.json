{
  "startTime": 1674254645336,
  "endTime": 1674254646249,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-cudnn7-runtime as build-stage\n\nWORKDIR /usr/src/app\n\nENV LANG=\"C.UTF-8\" LC_ALL=\"C.UTF-8\" PATH=\"/opt/venv/bin:$PATH\" PIP_NO_CACHE_DIR=\"false\" CFLAGS=\"-mavx2 -mf16c\" CXXFLAGS=\"-mavx2 -mf16c\"\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    python3 python3-pip python3-venv python3-dev wget make g++ libblas-dev liblapack-dev swig patch && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY requirements.txt .\n\nRUN python3 -m venv /opt/venv && \\\n    python3 -m pip install pip==19.3.1 pip-tools==4.2.0 wheel==0.33.6\n\nRUN python3 -m piptools sync\n\nCOPY patches .\n\nRUN wget -q https://github.com/facebookresearch/faiss/archive/v1.6.0.tar.gz -O faiss.tar.gz && \\\n    echo \"71a47cbb00aa0ae09b77a70d3fa1617bf7861cc7d41936458b88c7a161b03660  faiss.tar.gz\" | sha256sum -c && \\\n    tar xf faiss.tar.gz && \\\n    rm faiss.tar.gz && \\\n    cd faiss* && \\\n    ls .. && \\\n    patch -p1 < ../faiss-fix-compilation-for-mavx2.patch && \\\n    patch -p1 < ../faiss-fix-python-module-prints.patch && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-cuda && \\\n    make -j $(nproc) && \\\n    cd python && \\\n    make -j $(nproc) && \\\n    python3 setup.py bdist_wheel && \\\n    cd ../../ && \\\n    python3 -m pip install faiss*/python/dist/faiss*.whl && \\\n    cp faiss*/python/dist/faiss*.whl /opt/ && \\\n    rm -rf faiss*\n\n\n\nFROM nvidia/cuda:10.1-cudnn7-runtime as dev-stage\n\nWORKDIR /usr/src/app\n\nENV LANG=\"C.UTF-8\" LC_ALL=\"C.UTF-8\" PATH=\"/opt/venv/bin:$PATH\" PIP_NO_CACHE_DIR=\"false\"\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    python3 python3-pip python3-venv libglib2.0-0 libblas3 liblapack3 libgomp1 && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY requirements.txt .\n\nRUN python3 -m venv /opt/venv && \\\n    python3 -m pip install pip==19.3.1 pip-tools==4.2.0\n\nRUN echo \"https://download.pytorch.org/whl/cu100/torch-1.3.0%2Bcu100-cp36-cp36m-linux_x86_64.whl        \\\n          --hash=sha256:2414744c5f9fc25e4ee181019df188b0ea28c7866ce7af13116c4d7e538460b7                \\\n          \\n                                                                                            \\\n          https://download.pytorch.org/whl/cu100/torchvision-0.4.1%2Bcu100-cp36-cp36m-linux_x86_64.whl  \\\n          --hash=sha256:6a90d52d88dd2e4bc411b1d6b9bf89521b8727228318bf91832f3961c854622c                \\\n          \\n\" >> requirements.txt\n\nRUN python3 -m piptools sync\n\nCOPY --from=build-stage /opt/faiss*.whl /opt\nRUN python3 -m pip install /opt/faiss*.whl && \\\n    rm /opt/faiss*.whl\n\nCOPY . .\n\nENTRYPOINT [\"/usr/src/app/bin/ig65m\"]\nCMD [\"-h\"]\n"
}