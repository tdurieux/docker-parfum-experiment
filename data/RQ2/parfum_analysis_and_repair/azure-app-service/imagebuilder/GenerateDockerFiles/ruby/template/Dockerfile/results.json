{
  "startTime": 1674219352641,
  "endTime": 1674219354490,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 98
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 5,
        "columnEnd": 106
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:stretch-curl\nLABEL maintainer=\"Azure App Services Container Images <appsvc-images@microsoft.com>\"\n\nENV RUBY_VERSION=VERSION_PLACEHOLDER\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN echo \"deb http://deb.debian.org/debian/ stretch main\" > /etc/apt/sources.list \\\n && echo \"deb-src http://deb.debian.org/debian/ stretch main\" >> /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org/ stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://security.debian.org/ stretch/updates main\" >> /etc/apt/sources.list \\\n && echo \"deb http://deb.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://deb.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list \\\n && echo \"Acquire::Check-Valid-Until \\\"false\\\";\" > /etc/apt/apt.conf\n\nRUN apt-get update -qq\n\n# Dependencies for various ruby and rubygem installations\nRUN apt-get install -y --no-install-recommends libreadline-dev bzip2 build-essential libssl-dev zlib1g-dev libpq-dev \\\n  libsqlite3-dev patch gawk g++ gcc make libc6-dev patch libreadline6-dev libyaml-dev sqlite3 autoconf \\\n  libgdbm-dev libncurses5-dev automake libtool bison pkg-config libffi-dev bison libxslt-dev \\\n  libxml2-dev default-libmysqlclient-dev wget git net-tools dnsutils curl tcpdump iproute2 && rm -rf /var/lib/apt/lists/*;\n\n# rbenv\nENV RBENV_ROOT=\"/usr/local/.rbenv\"\nRUN git clone https://github.com/rbenv/rbenv.git $RBENV_ROOT\nRUN chmod -R 777 $RBENV_ROOT\n\nENV PATH=\"$RBENV_ROOT/bin:/usr/local:$PATH\"\n\nRUN git clone https://github.com/rbenv/ruby-build.git $RBENV_ROOT/plugins/ruby-build\nRUN chmod -R 777 $RBENV_ROOT/plugins/ruby-build\n\nRUN $RBENV_ROOT/plugins/ruby-build/install.sh\n\n# Install ruby\nENV RUBY_CONFIGURE_OPTS=--disable-install-doc\n\nENV RUBY_CFLAGS=-O3\n\nRUN cd $RBENV_ROOT \\\n  && git pull\n\nRUN eval \"$(rbenv init -)\" \\\n  && rbenv install --force $RUBY_VERSION \\\n  && rbenv rehash \\\n  && rbenv global $RUBY_VERSION \\\n  && ls /usr/local -a \\\n  && gem install bundler --version \"=1.13.6\" \\\n  && chmod -R 777 $RBENV_ROOT/versions \\\n  && chmod -R 777 $RBENV_ROOT/version\n\nRUN eval \"$(rbenv init -)\" \\\n  && rbenv global $RUBY_VERSION \\\n  && bundle config --global build.nokogiri -- --use-system-libraries\n\n# Because Nokogiri tries to build libraries on its own otherwise\nENV NOKOGIRI_USE_SYSTEM_LIBRARIES=true\n\n# SQL Server gem support\nRUN apt-get install --no-install-recommends -y unixodbc-dev && rm -rf /var/lib/apt/lists/*;\n\n# find latest version of FreeTDS ftp://ftp.freetds.org/pub/freetds/stable/\nENV FREETDS_VERSION=1.1.6\nRUN wget ftp://ftp.freetds.org/pub/freetds/stable/freetds-$FREETDS_VERSION.tar.gz \\\n  && tar -xzf freetds-$FREETDS_VERSION.tar.gz \\\n  && rm freetds-$FREETDS_VERSION.tar.gz \\\n  && cd freetds-$FREETDS_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --with-tdsver=7.3 \\\n  && make \\\n  && make install \\\n  && cd ..\n\n# Make temp directory for ruby images\nRUN mkdir -p /tmp/bundle\nRUN chmod 777 /tmp/bundle\n\nCOPY init_container.sh /bin/\nCOPY startup.sh /opt/\nCOPY sshd_config /etc/ssh/\nCOPY hostingstart.html /opt/startup/hostingstart.html\nCOPY staticsite.rb /opt/staticsite.rb\n\nRUN apt-get update -qq \\\n    && apt-get install -y nodejs openssh-server vim curl wget tcptraceroute --no-install-recommends \\\n    && echo \"root:Docker!\" | chpasswd \\\n    && echo \"cd /home\" >> /root/.bashrc && rm -rf /var/lib/apt/lists/*;\n\nRUN eval \"$(rbenv init -)\" \\\n  && rbenv global $RUBY_VERSION\n\nRUN chmod 755 /bin/init_container.sh \\\n  && mkdir -p /home/LogFiles/ \\\n  && chmod 755 /opt/startup.sh\n\nEXPOSE 2222 8080\n\nENV PORT 8080\nENV SSH_PORT 2222\nENV WEBSITE_ROLE_INSTANCE_ID localRoleInstance\nENV WEBSITE_INSTANCE_ID localInstance\nENV PATH ${PATH}:/home/site/wwwroot\n\n# install libssl1.0.2, and libssl1.1\n# these links need to be updated constantly\n# maybe save a copy locally\nRUN wget https://ftp.us.debian.org/debian/pool/main/o/openssl1.0/libssl1.0.2_1.0.2u-1~deb9u1_amd64.deb \\\n  && dpkg -i libssl1.0.2_1.0.2u-1~deb9u1_amd64.deb \\\n  && wget https://ftp.us.debian.org/debian/pool/main/libx/libxcrypt/libcrypt1-udeb_4.4.18-4_amd64.udeb \\\n  && dpkg -i libcrypt1-udeb_4.4.18-4_amd64.udeb \\\n  && wget https://http.us.debian.org/debian/pool/main/g/glibc/libc6-udeb_2.28-10+deb10u1_amd64.udeb \\\n  && dpkg -i --force-overwrite libc6-udeb_2.28-10+deb10u1_amd64.udeb \\\n  && wget https://ftp.us.debian.org/debian/pool/main/o/openssl/libcrypto1.1-udeb_1.1.0l-1~deb9u1_amd64.udeb \\\n  && dpkg -i --force-overwrite libcrypto1.1-udeb_1.1.0l-1~deb9u1_amd64.udeb \\\n  && wget https://ftp.us.debian.org/debian/pool/main/o/openssl/libssl1.1-udeb_1.1.0l-1~deb9u1_amd64.udeb \\\n  && dpkg -i --force-overwrite libssl1.1-udeb_1.1.0l-1~deb9u1_amd64.udeb\n\nWORKDIR /home/site/wwwroot\n\nENTRYPOINT [ \"/bin/init_container.sh\" ]\n"
}