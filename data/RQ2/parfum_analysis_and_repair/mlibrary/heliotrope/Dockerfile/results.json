{
  "startTime": 1674256024498,
  "endTime": 1674256025491,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6\nARG UNAME=app\nARG UID=1000\nARG GID=1000\nARG APP_HOME=/app\nARG GEM_HOME=/gems\n\n# Adapted from https://medium.com/hackernoon/preventing-race-conditions-in-docker-781854121ed3\nENV DOCKERIZE_VERSION=v0.5.0\nRUN wget -O - \\\n    https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    | tar -C /usr/local/bin -xzvf -\n\nRUN wget -q -O- https://dl.yarnpkg.com/debian/pubkey.gpg | \\\n  apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > \\\n    /etc/apt/sources.list.d/yarn.list && \\\n  apt-get update && \\\n  apt-get install -yqq --no-install-recommends \\\n    apt-transport-https \\\n    nodejs \\\n    yarn && \\\n  rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/locale /usr/share/man\nRUN gem install bundler\n\nRUN groupadd -g $GID -o $UNAME\nRUN useradd -m -d /home/app -u $UID -g $GID -o -s /bin/bash $UNAME\nRUN mkdir -p $APP_HOME && chown $UID:$GID $APP_HOME\nRUN mkdir -p $GEM_HOME && chown $UID:$GID $GEM_HOME\n\nENV BUNDLE_GEMFILE=${APP_HOME}/Gemfile\nENV BUNDLE_JOBS=2\nENV BUNDLE_PATH=${GEM_HOME}\nENV DB_VENDOR=mysql\nENV DB_ADAPTER=mysql2\nENV MYSQL_PORT=3306\nENV MYSQL_HOST=db\nENV MYSQL_USER=helio\nENV MYSQL_PASSWORD=helio\nENV MYSQL_DATABASE=helio\nENV RAILS_ENV=development\n\nRUN mkdir -p ${APP_HOME} ${BUNDLE_PATH}\nWORKDIR ${APP_HOME}\n\nUSER $UNAME\nCOPY --chown=$UID:$GID Gemfile* ${APP_HOME}/\nRUN bundle install\n\n# Note that docker-compose.yml mounts /app/node_modules like the gem cache\nCOPY --chown=$UID:$GID package.json yarn.lock ${APP_HOME}/\nRUN yarn install --check-files && yarn cache clean;\n\nCOPY --chown=$UID:$GID . ${APP_HOME}\n\nCMD dockerize -wait tcp://${MYSQL_HOST}:${MYSQL_PORT} -timeout 5m && \\\n  bundle exec rake db:migrate && \\\n  bundle exec rails server --binding 0.0.0.0 --port 3000\n\n"
}