diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/khronosgroup/vulkan-samples/.github/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/khronosgroup/vulkan-samples/.github/docker/Dockerfile/repaired.Dockerfile
index a3984d6..3a62888 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/khronosgroup/vulkan-samples/.github/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/khronosgroup/vulkan-samples/.github/docker/Dockerfile/repaired.Dockerfile
@@ -18,13 +18,13 @@ FROM ubuntu:20.04
 
 # Vulkan Samples Docker
 # This image is using the the KhronosGroup/Vulkan-Samples project
-# 
+#
 # When adding new dependencies the /tmp directory can be used for building and installation
 # This is cleaned at the end of the docker build
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         wget \
         alien \
         git \
@@ -40,7 +40,7 @@ RUN apt-get update && apt-get install -y \
         libglu1-mesa-dev \
         xorg-dev \
         adb \
-        software-properties-common
+        software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 RUN pip3 --no-cache-dir install \
     pyyaml \
@@ -54,11 +54,11 @@ RUN wget -O- https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
     && apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-$LLVM_VERSION main" \
     && apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-9 main" \
     && apt-get -yqq update \
-    && apt-get -yqq install \
+    && apt-get -yqq --no-install-recommends install \
         clang-format-$LLVM_VERSION \
         clang-tidy-$LLVM_VERSION \
         clang-tidy-9 \
-        ccache
+        ccache && rm -rf /var/lib/apt/lists/*;
 
 # Install Gradle
 ENV GRADLE_VERSION_MAJOR=7 \
@@ -110,7 +110,7 @@ ENV DOXYGEN_VERSION=$DOXYGEN_VERSION_MAJOR.$DOXYGEN_VERSION_MINOR.$DOXYGEN_VERSI
 
 RUN wget https://doxygen.nl/files/doxygen-$DOXYGEN_VERSION.linux.bin.tar.gz -O /tmp/doxygen.tar.gz \
     && tar -xzf /tmp/doxygen.tar.gz -C /usr/local \
-    && mv /usr/local/doxygen-* /usr/local/doxygen
+    && mv /usr/local/doxygen-* /usr/local/doxygen && rm /tmp/doxygen.tar.gz
 
 # Install CMake
 ENV CMAKE_VERSION_MAJOR=3 \
@@ -127,16 +127,16 @@ RUN set -x && echo "Installing $CMAKE_VERSION" \
     && ./bootstrap \
     && make -j$(nproc) \
     && make install \
-    && cd ~/ && cmake --version
+    && cd ~/ && cmake --version && rm /tmp/cmake.tar.gz
 
 # Install Latest ImageMagick
 RUN wget https://www.imagemagick.org/download/ImageMagick.tar.gz -O /tmp/ImageMagick.tar.gz \
     && cd /tmp && tar -xf /tmp/ImageMagick.tar.gz \
     && cd /tmp/ImageMagick-* \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
-    && ldconfig /usr/local/lib
+    && ldconfig /usr/local/lib && rm /tmp/ImageMagick.tar.gz
 
 # Create lexer used in snake_case.py
 ADD scripts/vk_convert.lex /tmp/vk_convert.lex
@@ -144,7 +144,7 @@ RUN set -x \
     && cd /tmp \
     && flex -+ vk_convert.lex \
     && gcc lex.yy.cc -ll -lstdc++ \
-    && mv ./a.out /usr/local/bin 
+    && mv ./a.out /usr/local/bin
 
 # Add Other scripts
 ADD scripts/check_copyright_headers.py /usr/local/bin/check_copyright_headers.py
@@ -158,7 +158,7 @@ RUN set -x \
     && dos2unix /usr/local/bin/check_copyright_headers.py \
     && dos2unix /usr/local/bin/snake_case.py \
     && dos2unix /usr/local/bin/run-clang-tidy.py \
-    && dos2unix /usr/local/bin/clang_format.py 
+    && dos2unix /usr/local/bin/clang_format.py
 
 # Finalise script setup
 RUN set -x \
@@ -167,7 +167,7 @@ RUN set -x \
     && git config --global clangFormat.extensions h,hpp,c,cpp \
     && chmod +x /usr/local/bin/snake_case.py \
     && chmod +x /usr/local/bin/run-clang-tidy.py \
-    && chmod +x /usr/local/bin/clang_format.py 
+    && chmod +x /usr/local/bin/clang_format.py
 
 # Remove all files created in the /tmp folder
 # Dependencies should be installed above this command