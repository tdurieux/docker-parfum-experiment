{
  "startTime": 1674249466484,
  "endTime": 1674249467245,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS builder\nENV DEBIAN_FRONTEND noninteractive\nWORKDIR /opt/\nRUN set -x; \\\n    apt-get update \\\n    && apt-get install --no-install-recommends -y g++ make wget libssl-dev zlib1g-dev git \\\n    && git clone https://github.com/blechschmidt/massdns.git \\\n    && cd /opt/massdns \\\n    && make \\\n    && /opt/massdns/bin/massdns --version \\\n    && cd /opt/ \\\n    && wget https://nmap.org/ncrack/dist/ncrack-0.7.tar.gz --no-check-certificate \\\n    && tar -xzf ncrack-0.7.tar.gz \\\n    && cd ncrack-0.7 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && /opt/ncrack-0.7/ncrack -V && rm ncrack-0.7.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n\n\nFROM ubuntu:20.04\nENV DEBIAN_FRONTEND noninteractive\nENV LANG en_US.UTF-8\n\nWORKDIR /code\n\nRUN set -x; \\\n    apt-get update \\\n    && apt-get install --no-install-recommends -y python3.8 python3-pip curl nginx nmap \\\n    && ln -s /usr/bin/python3.8 /usr/bin/python3.6 \\\n    && useradd -s /bin/false nginx \\\n    && nmap -v && rm -rf /var/lib/apt/lists/*;\n\nCOPY app/ app/\nCOPY test/ test/\nCOPY --from=builder /opt/ncrack-0.7/ncrack /usr/local/bin/ncrack\nCOPY --from=builder /opt/ncrack-0.7/ncrack-services /usr/local/share/ncrack/ncrack-services\nCOPY --from=builder /opt/massdns/bin/massdns app/tools/massdns\nCOPY docker/frontend/ frontend/\nCOPY docker/nginx.conf  /etc/nginx/nginx.conf\n\n## 复制生成ssl证书文件\nCOPY docker/worker/gen_crt.sh /usr/bin/gen_crt.sh\n## 复制 wait-for-it\nCOPY docker/worker/wait-for-it.sh /usr/bin/wait-for-it.sh\n\n## 复制npoc 并安装\nCOPY docker/ARL-NPoC/ /opt/ARL-NPoC/\nWORKDIR /opt/ARL-NPoC/\nRUN pip3 install --no-cache-dir -e .\n\nWORKDIR /code\nRUN curl -f https://ssl-config.mozilla.org/ffdhe2048.txt -o /etc/ssl/certs/dhparam.pem\nCOPY requirements.txt requirements.txt\nCOPY docker/GeoLite2/ /data/GeoLite2/\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n\n## 安装 NPoC 的依赖\nWORKDIR /opt/ARL-NPoC/\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n## 切换工作目录\nWORKDIR /code\n"
}