{
  "startTime": 1674218626491,
  "endTime": 1674218627059,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as builder\n\nENV GOPATH /go\nARG GIT_REMOTE_URL=https://github.com/coreroller/coreroller\nARG GIT_BRANCH=master\nWORKDIR /build\n\nRUN set -x \\\n    && apk --no-cache add git curl musl-dev \\\n    ca-certificates tzdata \\\n    && mkdir -p /build /coreroller/static \\\n    # Switch to https://pkgs.alpinelinux.org/package/edge/testing/x86_64/gb once this is in stable\n    && git clone --branch v0.4.4 https://github.com/constabulary/gb /go/src/github.com/constabulary/gb \\\n    && go get github.com/constabulary/gb/... \\\n    && git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REMOTE_URL} \\\n    && cd coreroller/backend \\\n    && /go/bin/gb build \\\n    && cp /build/coreroller/backend/bin/rollerd /coreroller\n\nFROM node:9-alpine as assets\nWORKDIR /build\n\nARG GIT_REMOTE_URL=https://github.com/coreroller/coreroller\nARG GIT_BRANCH=master\n\nRUN apk --no-cache add git \\\n    && git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REMOTE_URL} \\\n    && cd /build/coreroller/frontend \\\n    && npm install \\\n    && npm run build && npm cache clean --force;\n\nFROM alpine:3.8\nRUN apk --no-cache add ca-certificates tzdata \\\n    && mkdir -p /coreroller/static\n\nCOPY --from=builder /build/coreroller/backend/bin/rollerd /coreroller/\nCOPY --from=assets /build/coreroller/frontend/built/ /coreroller/static/\n\nENV COREROLLER_DB_URL \"postgres://postgres@postgresqld.local:5432/coreroller?sslmode=disable\"\nEXPOSE 8000\nCMD [\"/coreroller/rollerd\", \"-http-static-dir=/coreroller/static\"]\n"
}