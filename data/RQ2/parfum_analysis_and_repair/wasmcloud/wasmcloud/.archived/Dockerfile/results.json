{
  "startTime": 1674253179826,
  "endTime": 1674253180192,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:slim-buster as builder\nWORKDIR /build\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    clang \\\n    libclang-dev \\\n    libssl-dev \\\n    llvm-dev \\\n    pkg-config \\\n    ; rm -rf /var/lib/apt/lists/*;\nCOPY Cargo.toml .\nCOPY Cargo.lock .\nCOPY ./src ./src\nCOPY ./crates ./crates\nCOPY ./samples ./samples\nENV RUSTFLAGS=-Ctarget-feature=-crt-static\nRUN cargo build --release\n\nFROM debian:buster-slim as final\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    libssl-dev && \\\n    rm -rf /var/lib/apt/lists/* \\\n    ;\nCOPY --from=builder /build/target/release/wasmcloud /usr/local/bin/wasmcloud\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/nonexistent\" \\\n    --shell \"/sbin/nologin\" \\\n    --no-create-home \\\n    --uid \"10001\" \\\n    \"user\" \\\n    ;\nUSER user:user\n\nENTRYPOINT [\"/usr/local/bin/wasmcloud\"]\nCMD [\"-V\"]\n\n# Sometimes you want to be able to debug the cluster connectivity,\n# or the http/redis capability providers. Build and upload this target with:\n#\n#   docker build --target debug -t wasmcloud/wasmcloud:0.18.2-debug .\n#   docker push wasmcloud/wasmcloud:0.18.2-debug\n#\nFROM final as debug\nUSER root\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    redis && \\\n    curl -f -sSL https://github.com/nats-io/natscli/releases/download/0.0.25/nats-0.0.25-amd64.deb -o nats-0.0.25-amd64.deb && \\\n    dpkg -i nats-0.0.25-amd64.deb && \\\n    rm -rf nats-0.0.25-amd64.deb /var/lib/apt/lists/* \\\n    ;\nUSER user:user\n\n# Make docker build use the `final` target by default.\nFROM final\n"
}