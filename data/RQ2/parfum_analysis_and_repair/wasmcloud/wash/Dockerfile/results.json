{
  "startTime": 1674251726232,
  "endTime": 1674251727024,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:alpine as builder\n\nWORKDIR /build\nRUN apk add --no-cache clang clang-dev libressl-dev ca-certificates musl-dev llvm-dev clang-libs curl gcompat\nRUN curl -f -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.8/protoc-3.15.8-linux-x86_64.zip && \\\n    mkdir -p $HOME/.local/bin && \\\n    unzip protoc-3.15.8-linux-x86_64.zip -d $HOME/.local\nENV PATH=\"${HOME}/.local/bin:${PATH}\"\n\nCOPY Cargo.toml .\nCOPY Cargo.lock .\nCOPY ./src ./src\n\nRUN adduser \\    \n    --disabled-password \\    \n    --gecos \"\" \\    \n    --home \"/home/user\" \\    \n    --shell \"/sbin/nologin\" \\\n    --no-create-home \\\n    --uid \"10001\" \\    \n    \"user\"\n\nENV RUSTFLAGS=-Ctarget-feature=-crt-static\nRUN cargo build --release\n\nFROM alpine as release-alpine\nWORKDIR /home/user\nRUN apk add --no-cache bash curl libgcc libressl-dev ca-certificates musl-dev\n\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/group /etc/group\n\nCOPY --from=builder /build/target/release/wash /usr/local/bin/\n\nUSER user:user\n\nFROM scratch\n\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/group /etc/group\n\nCOPY --from=builder /usr/lib/libssl.so.* /usr/lib/\nCOPY --from=builder /usr/lib/libcrypto.so.* /usr/lib/\nCOPY --from=builder /usr/lib/libgcc_s.so.* /usr/lib/\nCOPY --from=builder /lib/ld-musl-x86_64.so.* /lib/\n\nCOPY --from=builder /build/target/release/wash /usr/local/bin/\n\nUSER user:user\nENTRYPOINT [\"/usr/local/bin/wash\"]\nCMD [\"-V\"]\n"
}