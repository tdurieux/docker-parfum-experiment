{
  "startTime": 1674251516042,
  "endTime": 1674251517228,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2022 Intel Corporation\n# SPDX-License-Identifier: Apache-2.0\n#\n# NOTICE: THIS FILE HAS BEEN MODIFIED BY INTEL CORPORATION UNDER COMPLIANCE\n# WITH THE APACHE 2.0 LICENSE FROM THE ORIGINAL WORK\n#\n################################################################################\n# build_base\n#\n# This image is used to provide environment for spdk build and get it in the\n# form of spdk packages\n################################################################################\nFROM fedora:36 AS base\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\nARG SPDK_VERSION\n\nRUN dnf install -y git\nCOPY spdk/ /spdk\nRUN mkdir /spdk-rpm\nCOPY core/build_base/pre-install /install\nRUN chmod +x /install\nRUN /install\n\n################################################################################\n# spdk\n#\n# Contains installed SPDK from build_base rpm packages.\n# Does not contain dependencies required to build SPDK\n################################################################################\nFROM fedora:36 AS spdk\n\nLABEL maintainer=spdk.io\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\n\n# Copy SPDK's RPMs built during pre-install step.\n# This allows to reduce final image size since we won't have any dependencies\n# which are only required to perform build.\nRUN mkdir /spdk-rpm\nCOPY --from=base /spdk-rpm/*.rpm /spdk-rpm/\nCOPY --from=base /spdk-rpm/fio /spdk-rpm/\n\nRUN dnf install -y python python3-pip\nRUN python -m pip install grpcio grpcio-tools\n\n# Wrap up the image\nCOPY core/build_base/post-install /install\nRUN chmod +x /install\nRUN /install\n\n\n################################################################################\n# spdk-app\n#\n# This image in addition to installed SPDK binaries contains a script run at\n# container boot.\n# This script runs SPDK service.\n################################################################################\nFROM spdk as spdk-app\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\n\nRUN dnf install -y socat\nCOPY core/spdk-app/init /init\n\nENTRYPOINT [\"/init\"]\n\n\n################################################################################\n# storage-target\n#\n# This image should be placed on a dedicated machine and responsible for\n# exposing ideal storage target (SPDK Malloc bdev) over NVMe/TCP\n# Configuration is performed by means of SPDK Json rpc.\n################################################################################\nFROM spdk-app AS storage-target\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\n\n################################################################################\n# ipu-storage-container\n#\n# This image is placed on IPU and attaching to storage-target NVMe/TCP devices.\n# It is responsible for creation of vhost virtio-blk devices and exposing them\n# to hosts(KVM or physical ones)\n################################################################################\nFROM spdk as ipu-storage-container\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\n\nRUN dnf install -y socat\nRUN pip install --no-cache-dir pyyaml\n\nCOPY core/ipu-storage-container/init /init\nCOPY --from=spdk-app /init /init_spdk\n\nENTRYPOINT [ \"/init\" ]\n\n\n################################################################################\n# host-target\n#\n# This image is responsible for running fio payload over different pci devices.\n# It has to be placed into host (a vm for KVM case or physical host for IPU\n# case). It uses gRPC to expose this service.\n################################################################################\nFROM fedora:36 AS host-target\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\n\nRUN dnf install -y python fio python3-pip\nRUN python -m pip install grpcio grpcio-tools grpcio-reflection\n\nCOPY core/host-target/init /init\nCOPY core/host-target/*.py /\nCOPY core/host-target/host_target.proto /host_target.proto\n\nRUN python -m grpc_tools.protoc -I/ --python_out=. --grpc_python_out=/ \\\n    /host_target.proto\n\nENV CUSTOMIZATION_DIR_IN_CONTAINER=/customizations\nCOPY core/host-target/customizations $CUSTOMIZATION_DIR_IN_CONTAINER\n\nENTRYPOINT [ \"/init\" ]\n\n################################################################################\n# ipdk-unit-tests\n################################################################################\nFROM fedora:36 AS ipdk-unit-tests\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG NO_PROXY\n\nRUN dnf install -y python fio python3-pip\nRUN python -m pip install grpcio-reflection pyfakefs\n\nCOPY tests/ut/host-target /host-target/tests\nCOPY --from=host-target fio_runner.py /host-target/src/\nCOPY --from=host-target pci_devices.py /host-target/src/\nCOPY --from=host-target device_exerciser_kvm.py /host-target/src/\nCOPY --from=host-target device_exerciser_if.py /host-target/src/\nCOPY --from=host-target device_exerciser_customization.py /host-target/src/\nCOPY --from=host-target host_target_main.py /host-target/src/\nCOPY --from=host-target host_target_grpc_server.py /host-target/src/\nCOPY --from=host-target host_target_*pb2.py /host-target/generated/\nCOPY --from=host-target host_target_*pb2_grpc.py /host-target/generated/\n\nCOPY tests/ut/run_all_unit_tests.sh /\n\nENV PYTHONPATH=/host-target/src:/host-target/generated\n\nENTRYPOINT [ \"/run_all_unit_tests.sh\" ]\n"
}