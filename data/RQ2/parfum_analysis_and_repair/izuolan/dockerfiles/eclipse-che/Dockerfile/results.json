{
  "startTime": 1674253232316,
  "endTime": 1674253233129,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 175
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\nMAINTAINER izuolan <i@zuolan.me>\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install sudo procps wget unzip mc && \\\n    echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user && \\\n    echo \"secret\\nsecret\" | passwd user && apt-get clean && \\\n    sudo apt-get install --no-install-recommends -y -q git subversion apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    lxc \\\n    iptables && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nUSER user\n\nRUN curl -f -sSL https://get.docker.com/ | sh && \\\n    sudo usermod -aG docker user\n\nENV CHE_VERSION=\"3.13.4.2\" \\\n    MAVEN_VERSION=3.2.2 \\\n    JAVA_VERSION=8u45 \\\n    JAVA_VERSION_PREFIX=1.8.0_45 \\\n    CHE_LOCAL_CONF_DIR=/home/user/.che\n\nENV JAVA_HOME=/opt/jdk$JAVA_VERSION_PREFIX \\\n    M2_HOME=/opt/apache-maven-$MAVEN_VERSION\n\nENV PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\n\nRUN mkdir /home/user/che-$CHE_VERSION /home/user/che-projects && \\\n    wget -q https://maven.codenvycorp.com/content/repositories/codenvy-public-releases/org/eclipse/che/ide/assembly-sdk/$CHE_VERSION/assembly-sdk-$CHE_VERSION.zip -P /home/user && \\\n    unzip -q /home/user/assembly-sdk-$CHE_VERSION.zip -d /home/user && \\\n    cp -a /home/user/assembly-sdk-$CHE_VERSION/. /home/user/che-$CHE_VERSION/ && \\\n    rm /home/user/assembly-sdk-$CHE_VERSION.zip && \\\n    rm -rf /home/user/assembly-sdk-$CHE_VERSION && \\\n    wget \\\n    --no-cookies \\\n    --no-check-certificate \\\n    --header \"Cookie: oraclelicense=accept-securebackup-cookie\" \\\n    -qO- \\\n    \"https://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b14/jdk-$JAVA_VERSION-linux-x64.tar.gz\" | sudo tar -zx -C /opt/ && \\\n    echo \"export JAVA_HOME=$JAVA_HOME\" >> /home/user/.bashrc && \\\n    sudo mkdir /opt/apache-maven-$MAVEN_VERSION/ && \\\n    sudo wget -qO- \"https://archive.apache.org/dist/maven/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | sudo tar -zx --strip-components=1 -C /opt/apache-maven-$MAVEN_VERSION/ && \\\n    echo \"export M2_HOME=$M2_HOME\" >> /home/user/.bashrc && \\\n    mkdir -p /home/user/.che && \\\n    echo \"export PATH=$PATH\" >> /home/user/.bashrc && \\\n    cd /home/user/.che && \\\n    touch vfs && \\\n    echo \"1q2w3e=/home/user/che-$CHE_VERSION/temp/fs-root\" >> vfs && \\\n    echo \"export CHE_LOCAL_CONF_DIR=$CHE_LOCAL_CONF_DIR\" >> /home/user/.bashrc && \\\n    sudo chmod 757 -R /home/user/che-$CHE_VERSION && \\\n    sudo chmod 757 -R /home/user/.che\n\nADD che.properties /home/user/.che/che.properties\nADD ./wrapdocker /usr/local/bin/wrapdocker\nRUN sudo chmod +x /usr/local/bin/wrapdocker\nWORKDIR /home/user/che-$CHE_VERSION/bin\n\n# expose 8080 port and a range of ports for runners\nEXPOSE 8080 8000 49152-49162\nCMD sudo wrapdocker & ./che.sh run\n"
}