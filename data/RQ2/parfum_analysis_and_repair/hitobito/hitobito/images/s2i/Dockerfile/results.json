{
  "startTime": 1674249461588,
  "endTime": 1674249462791,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# HOW TO DEPLOY CHANGES TO THIS:\n#\n# Changes to this file will eventually get deployed\n# when OpenShift deploys the base image due to\n# security patches to the FROM image given below.\n#\n# If you want to manually deploy them, change into\n# the OpenShift-Project, start the build 'rails-sti',\n# wait for both the builds 'rails-sti' and 'rails'\n# to finish and start the CI job that you'd normally\n# use to deploy.\n#\n# (Using the CLI, you can achieve this by running\n# `oc start-build rails-sti-base`)\n\nFROM centos/ruby-27-centos7\n\nUSER root\n\nRUN \\\n    mv $STI_SCRIPTS_PATH/assemble $STI_SCRIPTS_PATH/assemble-base && \\\n    mv $STI_SCRIPTS_PATH/run $STI_SCRIPTS_PATH/run-base\n\nADD ./root /\n\nRUN \\\n    yum localinstall -y \\\n      \"https://github.com/sphinxsearch/sphinx/releases/download/2.2.11-release/sphinx-2.2.11-1.rhel7.x86_64.rpm\" && \\\n    scl enable rh-ruby27 /opt/bin/install-nodejs && \\\n    yum install rh-python38 -y && \\\n    scl enable rh-python38 'pip install transifex-client' && \\\n    wget https://kojipkgs.fedoraproject.org//packages/sqlite/3.8.11/1.fc21/x86_64/sqlite-devel-3.8.11-1.fc21.x86_64.rpm &&  \\\n    wget https://kojipkgs.fedoraproject.org//packages/sqlite/3.8.11/1.fc21/x86_64/sqlite-3.8.11-1.fc21.x86_64.rpm && \\\n    yum install -y sqlite-3.8.11-1.fc21.x86_64.rpm sqlite-devel-3.8.11-1.fc21.x86_64.rpm && \\\n    chmod ugo+x $STI_SCRIPTS_PATH/* && \\\n    # TODO Why do we do this?\n    # Check with the fix-permissions call in $STI_SCRIPTS_PATH/assemble.\n    chgrp -R 0 ./ && \\\n    chmod -R g+rw ./ && \\\n    find ./ -type d -exec chmod g+x {} + && \\\n    chown -R 1001:0 ./ && \\\n    yum install ImageMagick ImageMagick-devel -y && \\\n    yum install cacerts ca-certificates -y && update-ca-trust && \\\n    yum clean all -y && rm -rf /var/cache/yum\n\n# BUNDLE_WITHOUT is a workaround for the base image:\n# Do not install gems from development and test environments.\nENV \\\n    BUNDLE_WITHOUT=development:test \\\n    RAILS_ENV=production \\\n    RAILS_ROOT=/opt/app-root/src \\\n    RUBY_GC_HEAP_INIT_SLOTS=1800000 \\\n    RUBY_HEAP_FREE_MIN=18000 \\\n    RUBY_HEAP_SLOTS_INCREMENT=144000 \\\n    RUBY_HEAP_SLOTS_GROWTH_FACTOR=1 \\\n    RUBY_GC_MALLOC_LIMIT=60000000\n\nUSER 1001\n"
}