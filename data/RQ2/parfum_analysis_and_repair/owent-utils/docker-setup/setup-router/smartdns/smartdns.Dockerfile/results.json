{
  "startTime": 1674252373352,
  "endTime": 1674252374167,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 21,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build --build-arg GITHUB_TOKEN=$GITHUB_TOKEN --force-rm --tag smartdns -f smartdns.Dockerfile .\nFROM debian:latest as builder\n\n# We should build from git source because some release do not support separeted ipset rules\n\nRUN set -x; \\\n    if [ -z \"$GITHUB_TOKEN\" ] && [ -z \"$GITHUB_ACTION\" ]; then          \\\n    sed -i.bak -r 's;#?https?://.*/debian-security/?[[:space:]];http://mirrors.aliyun.com/debian-security/ ;g' /etc/apt/sources.list ;  \\\n    sed -i -r 's;#?https?://.*/debian/?[[:space:]];http://mirrors.aliyun.com/debian/ ;g' /etc/apt/sources.list ;                        \\\n    fi; \\\n    apt update -y; \\\n    apt install --no-install-recommends -y curl unzip bash git git-lfs build-essential g++ libssl-dev musl musl-tools; rm -rf /var/lib/apt/lists/*; \\\n    git clone --depth 1 https://github.com/pymumu/smartdns.git ~/smartdns ; \\\n    cd ~/smartdns/package ; \\\n    bash ./build-pkg.sh bash ./build-pkg.sh --platform linux --arch x86-64 --static ; \\\n    mv -f smartdns.*.tar.gz /tmp/smartdns.x86_64-linux-all.tar.gz; \\\n    cd /usr/local/ ; tar -axvf /tmp/smartdns.x86_64-linux-all.tar.gz ; rm /tmp/smartdns.x86_64-linux-all.tar.gz \\\n    find /usr/local/smartdns -type f ; \\\n    if [ -e \"/var/lib/apt/lists\" ]; then for APT_CACHE in /var/lib/apt/lists/* ; do rm -rf \"$APT_CACHE\"; done; fi\n\nFROM docker.io/alpine:latest\n\nLABEL maintainer \"OWenT <admin@owent.net>\"\n\nCOPY --from=builder /usr/local/smartdns/usr/sbin/smartdns        /usr/local/smartdns/bin/\nCOPY --from=builder /usr/local/smartdns/systemd/smartdns.service /usr/local/smartdns/share/systemd/\nCOPY --from=builder /usr/local/smartdns/LICENSE                  /usr/local/smartdns/share/\nCOPY --from=builder /usr/local/smartdns/ReadMe.md                /usr/local/smartdns/share/\nCOPY --from=builder /usr/local/smartdns/ReadMe_en.md             /usr/local/smartdns/share/\nCOPY ./smartdns.origin.conf                                      /usr/local/smartdns/etc/smartdns.conf\n\n# sed -i -r 's#dl-cdn.alpinelinux.org#mirrors.tencent.com#g' /etc/apk/repositories ;    \\\nRUN set -ex ;                                                                           \\\n    if [ -z \"$GITHUB_TOKEN\" ] && [ -z \"$GITHUB_ACTION\" ]; then                                                     \\\n    sed -i -r 's#dl-cdn.alpinelinux.org#mirrors.aliyun.com#g' /etc/apk/repositories ;   \\\n    fi;                                                                                 \\\n    apk --no-cache add ca-certificates tzdata ;                                         \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime ;                           \\\n    apk --no-cache add bash iproute2 knot-utils bind-tools busybox-extras ipset ;       \\\n    mkdir -p /var/log/smartdns/ ;                                                       \\\n    chmod +x /usr/local/smartdns/bin/smartdns ;\n\nENV PATH /usr/local/smartdns/bin/:$PATH\n\nVOLUME /var/log/smartdns\n\nCMD [\"smartdns\", \"-p\", \"/var/run/smartdns.pid\", \"-c\", \"/usr/local/smartdns/etc/smartdns.conf\", \"-f\"]\n\n# podman run -d --name smartdns -v $SMARTDNS_ETC_DIR:/usr/local/smartdns/etc -v /data/logs/smartdns:/var/log/smartdns -p 53:53/tcp -p 53:53/udp docker.io/owt5008137/smartdns:latest\n# podman run -d --name smartdns -v $SMARTDNS_ETC_DIR:/usr/local/smartdns/etc -v /data/logs/smartdns:/var/log/smartdns --cap-add=NET_ADMIN --network=host docker.io/owt5008137/smartdns:latest\n# podman generate systemd --name smartdns | tee $SMARTDNS_ETC_DIR/smartdns.service\n# systemctl --user enable $SMARTDNS_ETC_DIR/smartdns.service\n# systemctl --user  daemon-reload\n# systemctl --user restart smartdns\n"
}