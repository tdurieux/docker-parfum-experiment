{
  "startTime": 1674252421318,
  "endTime": 1674252422524,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 27,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build --build-arg=GITHUB_TOKEN=$GITHUB_TOKEN --force-rm --tag proxy-with-geo -f v2ray.Dockerfile .\nFROM debian:latest as builder\n\nRUN set -x; \\\n    if [[ \"x$GITHUB_TOKEN\" == \"x\" ]]; then   \\\n    sed -i.bak -r 's;#?https?://.*/debian-security/?[[:space:]];http://mirrors.aliyun.com/debian-security/ ;g' /etc/apt/sources.list ;  \\\n    sed -i -r 's;#?https?://.*/debian/?[[:space:]];http://mirrors.aliyun.com/debian/ ;g' /etc/apt/sources.list ;                        \\\n    fi; \\\n    apt update -y; \\\n    apt install --no-install-recommends curl unzip -y; rm -rf /var/lib/apt/lists/*; \\\n    if [[ \"x$GITHUB_TOKEN\" != \"x\" ]]; then GITHUB_TOKEN_ARGS=\"-H Authorization: token $GITHUB_TOKEN\"; fi; \\\n    V2RAY_LATEST_VERSION=$( curl -f -L $GITHUB_TOKEN_ARGS 'https://api.github.com/repos/v2fly/v2ray-core/releases/latest' | grep tag_name | grep -E -o 'v[0-9]+[0-9\\.]+' | head -n 1) ; \\\n    curl -f -k -qL https://github.com/v2fly/v2ray-core/releases/download/$V2RAY_LATEST_VERSION/v2ray-linux-64.zip -o /tmp/v2ray-linux-64.zip; \\\n    mkdir -p /usr/local/v2ray/etc ; mkdir -p /usr/local/v2ray/bin ; mkdir -p /usr/local/v2ray/share ; \\\n    cd /usr/local/v2ray/bin ; unzip /tmp/v2ray-linux-64.zip; rm -f /tmp/v2ray-linux-64.zip; \\\n    cp -f config.json /usr/local/v2ray/etc; \\\n    curl -f -k -qL \"https://github.com/owent/update-geoip-geosite/releases/download/latest/geoip.dat\" -o /usr/local/v2ray/bin/geoip.dat; \\\n    curl -f -k -qL \"https://github.com/owent/update-geoip-geosite/releases/download/latest/geosite.dat\" -o /usr/local/v2ray/bin/geosite.dat; \\\n    curl -f -k -qL \"https://github.com/owent/update-geoip-geosite/releases/download/latest/all.tar.gz\" -o /usr/local/v2ray/share/geo-all.tar.gz; \\\n    find /usr/local/v2ray -type f ; \\\n    if [[ -e \"/var/lib/apt/lists\" ]]; then for APT_CACHE in /var/lib/apt/lists/* ; do rm -rf \"$APT_CACHE\"; done; fi\n\nFROM docker.io/alpine:latest\n\nLABEL maintainer \"OWenT <admin@owent.net>\"\n\nCOPY --from=builder /usr/local/v2ray/bin/v2ray            /usr/local/v2ray/bin/\nCOPY --from=builder /usr/local/v2ray/bin/v2ctl            /usr/local/v2ray/bin/\nCOPY --from=builder /usr/local/v2ray/etc/config.json      /usr/local/v2ray/etc/\nCOPY --from=builder /usr/local/v2ray/share/geo-all.tar.gz /usr/local/v2ray/share/\nCOPY --from=builder /usr/local/v2ray/bin/geoip.dat        /usr/local/v2ray/bin/\nCOPY --from=builder /usr/local/v2ray/bin/geosite.dat      /usr/local/v2ray/bin/\n\n# sed -i -r 's#dl-cdn.alpinelinux.org#mirrors.tencent.com#g' /etc/apk/repositories ;    \\\nRUN set -ex ;                                                                           \\\n    sed -i -r 's#dl-cdn.alpinelinux.org#mirrors.aliyun.com#g' /etc/apk/repositories ;   \\\n    apk --no-cache add ca-certificates tzdata ;                                         \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime ;                           \\\n    mkdir -p /var/log/v2ray/ ;                                                          \\\n    chmod +x /usr/local/v2ray/bin/v2ctl ;                                               \\\n    chmod +x /usr/local/v2ray/bin/v2ray ;\n\nENV PATH /usr/local/v2ray/bin/:$PATH\n\nVOLUME /var/log/v2ray\n\nCMD [\"v2ray\", \"-config=/usr/local/v2ray/etc/config.json\"]\n\n# podman run -d --name v2ray -v /etc/v2ray:/usr/local/v2ray/etc -v /data/logs/v2ray:/var/log/v2ray --cap-add=NET_ADMIN --network=host docker.io/owt5008137/proxy-with-geo v2ray -config=/usr/local/v2ray/etc/config.json\n# podman generate systemd v2ray | sudo tee /lib/systemd/system/v2ray.service\n# sudo systemctl daemon-reload\n"
}