diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kframework/k/package/debian/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kframework/k/package/debian/Dockerfile/repaired.Dockerfile
index ef45e34..af54da1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kframework/k/package/debian/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kframework/k/package/debian/Dockerfile/repaired.Dockerfile
@@ -9,54 +9,54 @@ ENV TZ America/Chicago
 ENV DEBIAN_FRONTEND=noninteractive
 
 # RUN if [ "$BASE_IMAGE" = "debian:bullseye" ]; then echo "Enabling backports..."; echo "deb http://deb.debian.org/debian bullseye-backports main" > /etc/apt/sources.list.d/bullseye-backports.list; fi
-RUN    apt-get update            \
-    && apt-get install --yes     \
-        bison                    \
-        build-essential          \
-        clang-$LLVM_VERSION      \
-        cmake                    \
-        curl                     \
-        debhelper                \
-        flex                     \
-        gcc                      \
-        git                      \
-        libboost-test-dev        \
-        libgdbm-dev              \
-        libgmp-dev               \
-        libjemalloc-dev          \
-        libffi-dev               \
-        libmpfr-dev              \
-        libncurses5-dev          \
-        libnss3-dev              \
-        libreadline-dev          \
-        libsqlite3-dev           \
-        libssl-dev               \
-        libyaml-dev              \
-        libbz2-dev               \
-        libz3-dev                \
-        lld-$LLVM_VERSION        \
+RUN apt-get update \
+    && apt-get install --no-install-recommends --yes \
+        bison \
+        build-essential \
+        clang-$LLVM_VERSION \
+        cmake \
+        curl \
+        debhelper \
+        flex \
+        gcc \
+        git \
+        libboost-test-dev \
+        libgdbm-dev \
+        libgmp-dev \
+        libjemalloc-dev \
+        libffi-dev \
+        libmpfr-dev \
+        libncurses5-dev \
+        libnss3-dev \
+        libreadline-dev \
+        libsqlite3-dev \
+        libssl-dev \
+        libyaml-dev \
+        libbz2-dev \
+        libz3-dev \
+        lld-$LLVM_VERSION \
         llvm-$LLVM_VERSION-tools \
-        maven                    \
-        openjdk-11-jdk           \
-        parallel                 \
-        pkg-config               \
-        python3                  \
-        python3-graphviz         \
-        python3-pip              \
-        zlib1g-dev
+        maven \
+        openjdk-11-jdk \
+        parallel \
+        pkg-config \
+        python3 \
+        python3-graphviz \
+        python3-pip \
+        zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install virtualenv
+RUN pip3 install --no-cache-dir virtualenv
 
-RUN    curl -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
-    && tar -zxvf Python-${PYTHON_VERSION}.tgz                                                   \
-    && cd Python-${PYTHON_VERSION}                                                              \
-    && ./configure --enable-optimizations                                                       \
-    && make -j8                                                                                 \
-    && make altinstall                                                                          \
-    && cd ..                                                                                    \
+RUN curl -f -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
+    && tar -zxvf Python-${PYTHON_VERSION}.tgz \
+    && cd Python-${PYTHON_VERSION} \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations \
+    && make -j8 \
+    && make altinstall \
+    && cd .. \
     && rm -rf Python-${PYTHON_VERSION} Python-${PYTHON_VERSION}.tgz
 
-RUN curl -sSL https://get.haskellstack.org/ | sh
+RUN curl -f -sSL https://get.haskellstack.org/ | sh
 
 RUN    git clone 'https://github.com/z3prover/z3' --branch=z3-4.8.15 \
     && cd z3                                                         \