{
  "startTime": 1674215770282,
  "endTime": 1674215771403,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=ubuntu:focal\nFROM ${BASE_IMAGE}\nARG BASE_IMAGE\n\nARG LLVM_VERSION=10\nARG PYTHON_VERSION=3.8.12\n\nENV TZ America/Chicago\nENV DEBIAN_FRONTEND=noninteractive\n\n# RUN if [ \"$BASE_IMAGE\" = \"debian:bullseye\" ]; then echo \"Enabling backports...\"; echo \"deb http://deb.debian.org/debian bullseye-backports main\" > /etc/apt/sources.list.d/bullseye-backports.list; fi\nRUN apt-get update \\\n    && apt-get install --no-install-recommends --yes \\\n        bison \\\n        build-essential \\\n        clang-$LLVM_VERSION \\\n        cmake \\\n        curl \\\n        debhelper \\\n        flex \\\n        gcc \\\n        git \\\n        libboost-test-dev \\\n        libgdbm-dev \\\n        libgmp-dev \\\n        libjemalloc-dev \\\n        libffi-dev \\\n        libmpfr-dev \\\n        libncurses5-dev \\\n        libnss3-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libyaml-dev \\\n        libbz2-dev \\\n        libz3-dev \\\n        lld-$LLVM_VERSION \\\n        llvm-$LLVM_VERSION-tools \\\n        maven \\\n        openjdk-11-jdk \\\n        parallel \\\n        pkg-config \\\n        python3 \\\n        python3-graphviz \\\n        python3-pip \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir virtualenv\n\nRUN curl -f -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n    && tar -zxvf Python-${PYTHON_VERSION}.tgz \\\n    && cd Python-${PYTHON_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations \\\n    && make -j8 \\\n    && make altinstall \\\n    && cd .. \\\n    && rm -rf Python-${PYTHON_VERSION} Python-${PYTHON_VERSION}.tgz\n\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\nRUN    git clone 'https://github.com/z3prover/z3' --branch=z3-4.8.15 \\\n    && cd z3                                                         \\\n    && python3 scripts/mk_make.py                                     \\\n    && cd build                                                      \\\n    && make -j8                                                      \\\n    && make install                                                  \\\n    && cd ../..                                                      \\\n    && rm -rf z3\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN    groupadd -g $GROUP_ID user                     \\\n    && useradd -m -u $USER_ID -s /bin/sh -g user user\n\nUSER $USER_ID:$GROUP_ID\n\nENV LC_ALL=C.UTF-8\nADD --chown=user:user haskell-backend/src/main/native/haskell-backend/stack.yaml        /home/user/.tmp-haskell/\nADD --chown=user:user haskell-backend/src/main/native/haskell-backend/kore/kore.cabal /home/user/.tmp-haskell/kore/\nRUN    cd /home/user/.tmp-haskell  \\\n    && stack build --only-snapshot\n\nADD pom.xml                                                    /home/user/.tmp-maven/\nADD ktree/pom.xml                                              /home/user/.tmp-maven/ktree/\nADD llvm-backend/pom.xml                                       /home/user/.tmp-maven/llvm-backend/\nADD llvm-backend/src/main/native/llvm-backend/matching/pom.xml /home/user/.tmp-maven/llvm-backend/src/main/native/llvm-backend/matching/\nADD haskell-backend/pom.xml                                    /home/user/.tmp-maven/haskell-backend/\nADD kernel/pom.xml                                             /home/user/.tmp-maven/kernel/\nADD java-backend/pom.xml                                       /home/user/.tmp-maven/java-backend/\nADD k-distribution/pom.xml                                     /home/user/.tmp-maven/k-distribution/\nADD kore/pom.xml                                               /home/user/.tmp-maven/kore/\nRUN    cd /home/user/.tmp-maven               \\\n    && mvn --batch-mode dependency:go-offline\n"
}