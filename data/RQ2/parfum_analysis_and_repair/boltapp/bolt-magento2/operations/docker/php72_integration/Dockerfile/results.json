{
  "startTime": 1674256271188,
  "endTime": 1674256272294,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile\nFROM circleci/php:7.2-apache-node-browsers-legacy\n\nUSER root\nENV LANG=C.UTF-8\n\n################ MySQL Install ################\n\n# Based off of https://github.com/docker-library/mysql/blob/master/5.7/Dockerfile\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tpwgen \\\n\t\topenssl \\\n\t\tperl \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex; \\\n# Not the most reliable may need to run a couple times https://github.com/docker-library/mysql/issues/530\n# gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\n\tkey='A4A9406876FCBD3C456770C88C718D3B5072E1F5'; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\tapt-key list > /dev/null\n\nENV MYSQL_MAJOR 5.7\nENV MYSQL_VERSION 5.7.27-1debian9\n\nRUN echo \"deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN { \\\n\t\techo mysql-community-server mysql-community-server/data-dir select ''; \\\n\t\techo mysql-community-server mysql-community-server/root-pass password ''; \\\n\t\techo mysql-community-server mysql-community-server/re-root-pass password ''; \\\n\t\techo mysql-community-server mysql-community-server/remove-test-db select false; \\\n\t} | debconf-set-selections \\\n\t&& apt-get update && apt-get install --no-install-recommends -y mysql-server=\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* \\\n\t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \\\n\t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\n\t&& chmod 777 /var/run/mysqld \\\n# comment out a few problematic configuration values\n\t&& find /etc/mysql/ -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n# don't reverse lookup hostnames, they are usually another container\n\t&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\n\nENV MYSQL_ALLOW_EMPTY_PASSWORD=true \\\n    MYSQL_DATABASE=circle_test \\\n    MYSQL_HOST=127.0.0.1 \\\n    MYSQL_ROOT_HOST=% \\\n    MYSQL_USER=root\n\nRUN echo '\\n\\\n[mysqld]\\n\\\ncollation-server = utf8_unicode_ci\\n\\\ninit-connect=\"SET NAMES utf8\"\\n\\\ncharacter-set-server = utf8\\n\\\ninnodb_flush_log_at_trx_commit=2\\n\\\nsync_binlog=0\\n\\\ninnodb_use_native_aio=0\\n' >> /etc/mysql/my.cnf\n\n##########################################################################\n\nRUN MAGENTO_VERSION=2.3.0\n\nRUN apt-get update && apt-get -y --no-install-recommends install curl mysql-client libmcrypt-dev mcrypt libpng-dev libjpeg-dev libxml2-dev libxslt-dev && rm -rf /var/lib/apt/lists/*;\nRUN pecl channel-update pecl.php.net\nRUN pecl install zip &&  docker-php-ext-enable zip\nRUN docker-php-ext-enable xdebug\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/\nRUN docker-php-ext-install gd\nRUN docker-php-ext-install soap\nRUN docker-php-ext-install xsl\nRUN apt-get install --no-install-recommends -y libmcrypt-dev && rm -rf /var/lib/apt/lists/*;\nRUN pecl install mcrypt-1.0.2\nRUN docker-php-ext-enable mcrypt\nRUN docker-php-ext-install bcmath && docker-php-ext-enable bcmath\nRUN docker-php-ext-install pdo_mysql && docker-php-ext-enable pdo_mysql\nRUN composer self-update -q\n\nCOPY auth.json /home/circleci/.composer/auth.json\nUSER circleci\nWORKDIR /home/circleci\nRUN composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.3.0 magento/\nWORKDIR /home/circleci/magento\nCOPY install_magento_data.sh /home/circleci/magento\n\nRUN [\"bash\", \"install_magento_data.sh\"]\n\nRUN composer require \"bugsnag/bugsnag:^3.0\"\n\nWORKDIR /home/circleci"
}