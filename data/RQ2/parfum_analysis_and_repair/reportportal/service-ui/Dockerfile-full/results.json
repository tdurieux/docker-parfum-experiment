{
  "startTime": 1674249821467,
  "endTime": 1674249822150,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Only for technical/build aims, built image will be with nginx:alpine according to the last step\nFROM alpine:3.10.9 as generate-build-info\nRUN apk add --no-cache git\nRUN apk add --no-cache make\nRUN mkdir -p /usr/src/app/build && rm -rf /usr/src/app/build\nCOPY ./Makefile /usr/src/\nWORKDIR /usr/src\nARG version\nRUN make generate-build-info v=$version\n\nFROM node:12-alpine as build-frontend\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nCOPY ./app/ /usr/src/app/\nRUN export NODE_OPTIONS=\"--max-old-space-size=4096\"\nRUN npm ci && npm run build && npm run test\n\nFROM nginx:alpine\nCOPY --from=build-frontend /usr/src/app/build /usr/share/nginx/html\nCOPY --from=generate-build-info /usr/src/app/build /usr/share/nginx/html\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 8080\n"
}