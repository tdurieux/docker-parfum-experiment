{
  "startTime": 1674254675090,
  "endTime": 1674254676232,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use local version of image built from Dockerfile.gpu in /docker/1.6.0/base\n#MAINTAINER Amazon AI\nFROM nvidia/cuda:9.0-base-ubuntu16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-dev-9-0 \\\n        cuda-cudart-dev-9-0 \\\n        cuda-cufft-dev-9-0 \\\n        cuda-curand-dev-9-0 \\\n        cuda-cusolver-dev-9-0 \\\n        cuda-cusparse-dev-9-0 \\\n        curl \\\n        git \\\n        libcudnn7=7.0.5.15-1+cuda9.0 \\\n        libcudnn7-dev=7.0.5.15-1+cuda9.0 \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        wget \\\n        vim \\\n        nginx \\\n        iputils-ping \\\n\tlibjemalloc-dev \\\n        && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    find /usr/local/cuda-9.0/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \\\n    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        numpy \\\n        scipy \\\n        sklearn \\\n        pandas \\\n        h5py \\\n\tpsutil \\\n\tmemory_profiler \\\n\topencv-python \\\n\tboto3 \\\n\tawscli\n\n\n#RUN pip install numpy tensorflow-serving-api==1.5\n\n\nARG framework_installable\n\nWORKDIR /root\n\n# Will install from pypi once packages are released there. For now, copy from local file system.\nRUN echo \"Creating the new docker image\"\nRUN framework_installable_local=$(basename $framework_installable) && \\\n\n    pip install --no-cache-dir $framework_installable_local --pre && \\\n\n    echo \"DONE\"\n\n\n"
}