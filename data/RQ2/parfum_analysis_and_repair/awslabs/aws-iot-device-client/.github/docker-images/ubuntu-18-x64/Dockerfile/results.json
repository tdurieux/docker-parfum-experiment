{
  "startTime": 1674218261167,
  "endTime": 1674218262509,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nARG OPENSSL_VERSION=1.1.1n\n\n###############################################################################\n# Install prereqs\n###############################################################################\nRUN apt-get update -qq \\\n    && apt-get -y --no-install-recommends install \\\n    git \\\n    curl \\\n    build-essential \\\n    wget \\\n    cppcheck \\\n    libc6-dbg \\\n    softhsm \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n###############################################################################\n# Install OpenSSL 1.1.1\n###############################################################################\nWORKDIR /tmp\nRUN wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \\\n    && tar -zxvf openssl-${OPENSSL_VERSION}.tar.gz \\\n    && cd openssl-${OPENSSL_VERSION} \\\n    && ./config \\\n    && make \\\n    && make install \\\n    && ldconfig && rm openssl-${OPENSSL_VERSION}.tar.gz\n\n###############################################################################\n# Install pre-built CMake\n###############################################################################\nWORKDIR /tmp\nRUN curl -f -sSL https://github.com/Kitware/CMake/releases/download/v3.10.0/cmake-3.10.0.tar.gz -o cmake-3.10.0.tar.gz \\\n    && tar -zxvf cmake-3.10.0.tar.gz \\\n    && cd cmake-3.10.0 \\\n    && ./bootstrap \\\n    && make -j 2 \\\n    && make install && rm cmake-3.10.0.tar.gz\n\n###############################################################################\n# Clone and build Google Test\n###############################################################################\nWORKDIR /tmp\nRUN wget --ca-certificate=/etc/ssl/certs/ca-certificates.crt https://github.com/google/googletest/archive/release-1.10.0.tar.gz \\\n    && tar xf release-1.10.0.tar.gz \\\n    && cd googletest-release-1.10.0 \\\n    && cmake -DBUILD_SHARED_LIBS=ON . \\\n    && make \\\n    && cp -a googletest/include/gtest /usr/include/ \\\n    && cp -a googlemock/include/gmock /usr/include/ \\\n    && cp -a lib/* /usr/lib/ && rm release-1.10.0.tar.gz\n\n###############################################################################\n# Clone and build valgrind\n###############################################################################\nWORKDIR /tmp\nRUN wget --ca-certificate=/etc/ssl/certs/ca-certificates.crt https://sourceware.org/pub/valgrind/valgrind-3.19.0.tar.bz2 \\\n    && tar jxvf valgrind-3.19.0.tar.bz2 \\\n    && cd valgrind-3.19.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install && rm valgrind-3.19.0.tar.bz2\n\n###############################################################################\n# Install Aws Iot Device Sdk Cpp v2\n###############################################################################\nWORKDIR /home/aws-iot-device-client\nRUN mkdir sdk-cpp-workspace \\\n    && cd sdk-cpp-workspace \\\n    && git clone https://github.com/aws/aws-iot-device-sdk-cpp-v2.git \\\n    && cd aws-iot-device-sdk-cpp-v2 \\\n    && git checkout ac3ba3774b031dde1b988e698880d6064d53b9d9 \\\n    && git submodule update --init --recursive \\\n    && cd .. \\\n    && mkdir aws-iot-device-sdk-cpp-v2-build \\\n    && cd aws-iot-device-sdk-cpp-v2-build \\\n    && cmake -DCMAKE_INSTALL_PREFIX=\"/usr\" -DUSE_OPENSSL=ON -DBUILD_DEPS=ON ../aws-iot-device-sdk-cpp-v2 \\\n    && cmake --build . --target install\n\nADD entry-script.sh /home/entry-script\nRUN chmod a+x /home/entry-script\nENTRYPOINT [\"/home/entry-script\"]\n"
}