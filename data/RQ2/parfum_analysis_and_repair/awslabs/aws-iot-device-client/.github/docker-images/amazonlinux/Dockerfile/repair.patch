diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/awslabs/aws-iot-device-client/.github/docker-images/amazonlinux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/awslabs/aws-iot-device-client/.github/docker-images/amazonlinux/Dockerfile/repaired.Dockerfile
index 5e6a1af..16e86d7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/awslabs/aws-iot-device-client/.github/docker-images/amazonlinux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/awslabs/aws-iot-device-client/.github/docker-images/amazonlinux/Dockerfile/repaired.Dockerfile
@@ -26,19 +26,19 @@ RUN yum -y update \
 # Install and enable epel repository.
 # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/add-repositories.html
 ###############################################################################
-RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
-RUN yum --enablerepo=epel install -y cppcheck
+RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum
+RUN yum --enablerepo=epel install -y cppcheck && rm -rf /var/cache/yum
 
 ###############################################################################
 # Install pre-built CMake
 ###############################################################################
 WORKDIR /tmp
-RUN curl -sSL https://github.com/Kitware/CMake/releases/download/v3.10.0/cmake-3.10.0.tar.gz -o cmake-3.10.0.tar.gz \
+RUN curl -f -sSL https://github.com/Kitware/CMake/releases/download/v3.10.0/cmake-3.10.0.tar.gz -o cmake-3.10.0.tar.gz \
     && tar -zxvf cmake-3.10.0.tar.gz \
     && cd cmake-3.10.0 \
     && ./bootstrap \
     && make -j 4 \
-    && make install
+    && make install && rm cmake-3.10.0.tar.gz
 
 ###############################################################################
 # Install OpenSSL 1.1.1
@@ -49,13 +49,13 @@ RUN wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
     && cd openssl-${OPENSSL_VERSION} \
     && ./config \
     && make \
-    && sudo make install
+    && sudo make install && rm openssl-${OPENSSL_VERSION}.tar.gz
 
 ###############################################################################
 # Clone and build Google Test
 ###############################################################################
 WORKDIR /tmp
-RUN curl -sSL https://github.com/google/googletest/archive/release-1.10.0.tar.gz -o release-1.10.0.tar.gz \
+RUN curl -f -sSL https://github.com/google/googletest/archive/release-1.10.0.tar.gz -o release-1.10.0.tar.gz \
     && tar xf release-1.10.0.tar.gz \
     && cd googletest-release-1.10.0 \
     && cmake -DBUILD_SHARED_LIBS=ON . \
@@ -72,9 +72,9 @@ WORKDIR /tmp
 RUN wget https://sourceware.org/pub/valgrind/valgrind-3.19.0.tar.bz2 \
     && tar jxvf valgrind-3.19.0.tar.bz2 \
     && cd valgrind-3.19.0 \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
-    && make install
+    && make install && rm valgrind-3.19.0.tar.bz2
 
 # ###############################################################################
 # # Install Aws Iot Device Sdk Cpp v2