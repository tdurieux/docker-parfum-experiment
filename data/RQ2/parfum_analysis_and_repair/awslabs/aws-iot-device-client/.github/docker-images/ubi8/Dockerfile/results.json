{
  "startTime": 1674253326568,
  "endTime": 1674253327471,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.redhat.io/ubi8/ubi\n\nARG OPENSSL_VERSION=1.1.1n\n\n###############################################################################\n# Install prereqs\n###############################################################################\nRUN subscription-manager config --rhsm.manage_repos=0\nRUN yum --disableplugin=subscription-manager -y update \\\n    && yum --disableplugin=subscription-manager -y install \\\n    tar \\\n    bzip2 \\\n    git \\\n    wget \\\n    curl \\\n    sudo \\\n    make \\\n    gcc \\\n    gcc-c++ \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum\n\n###############################################################################\n# Install cppcheck\n# cppcheck package is not available from Redhat Linux default repositories\n# Install and enable epel repository.\n# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/add-repositories.html\n###############################################################################\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\nRUN yum --enablerepo=epel install -y cppcheck && rm -rf /var/cache/yum\n\n###############################################################################\n# Install pre-built CMake\n###############################################################################\nWORKDIR /tmp\nRUN curl -f -sSL https://github.com/Kitware/CMake/releases/download/v3.10.0/cmake-3.10.0.tar.gz -o cmake-3.10.0.tar.gz \\\n    && tar -zxvf cmake-3.10.0.tar.gz \\\n    && cd cmake-3.10.0 \\\n    && ./bootstrap \\\n    && make \\\n    && make install && rm cmake-3.10.0.tar.gz\n\n###############################################################################\n# Install OpenSSL 1.1.1\n###############################################################################\nWORKDIR /tmp\nRUN wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \\\n    && tar -zxvf openssl-${OPENSSL_VERSION}.tar.gz \\\n    && cd openssl-${OPENSSL_VERSION} \\\n    && ./config \\\n    && make \\\n    && make install && rm openssl-${OPENSSL_VERSION}.tar.gz\n\n###############################################################################\n# Install softhsm v2.3.0 from source\n###############################################################################\n\nWORKDIR /tmp\nRUN wget https://dist.opendnssec.org/source/softhsm-2.3.0.tar.gz \\\n    && tar -xzf softhsm-2.3.0.tar.gz \\\n    && cd softhsm-2.3.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-gost \\\n    && make \\\n    && make install && rm softhsm-2.3.0.tar.gz\n\n###############################################################################\n# Clone and build Google Test\n###############################################################################\nWORKDIR /tmp\nRUN curl -f -sSL https://github.com/google/googletest/archive/release-1.10.0.tar.gz -o release-1.10.0.tar.gz \\\n    && tar xf release-1.10.0.tar.gz \\\n    && cd googletest-release-1.10.0 \\\n    && cmake -DBUILD_SHARED_LIBS=ON . \\\n    && make \\\n    && cp -a googletest/include/gtest /usr/include/ \\\n    && cp -a googlemock/include/gmock /usr/include/ \\\n    && cp -a lib/* /usr/lib64/ \\\n    && rm -f /tmp/release-1.10.0.tar.gz\n\n###############################################################################\n# Clone and build valgrind\n###############################################################################\nWORKDIR /tmp\nRUN wget https://sourceware.org/pub/valgrind/valgrind-3.19.0.tar.bz2 \\\n    && tar jxvf valgrind-3.19.0.tar.bz2 \\\n    && cd valgrind-3.19.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install && rm valgrind-3.19.0.tar.bz2\n\n################################################################################\n# Install Aws Iot Device Sdk Cpp v2\n################################################################################\nWORKDIR /home/aws-iot-device-client\nRUN mkdir sdk-cpp-workspace \\\n    && cd sdk-cpp-workspace \\\n    && git clone https://github.com/aws/aws-iot-device-sdk-cpp-v2.git \\\n    && cd aws-iot-device-sdk-cpp-v2 \\\n    && git checkout ac3ba3774b031dde1b988e698880d6064d53b9d9 \\\n    && git submodule update --init --recursive \\\n    && cd .. \\\n    && mkdir aws-iot-device-sdk-cpp-v2-build \\\n    && cd aws-iot-device-sdk-cpp-v2-build \\\n    && cmake -DCMAKE_INSTALL_PREFIX=\"/usr\" -DUSE_OPENSSL=ON -DBUILD_DEPS=ON ../aws-iot-device-sdk-cpp-v2 \\\n    && cmake --build . --target install\n\nADD entry-script.sh /home/entry-script\nRUN chmod a+x /home/entry-script\nENTRYPOINT [\"/home/entry-script\"]\n"
}