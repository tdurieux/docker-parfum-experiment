{
  "startTime": 1674255711624,
  "endTime": 1674255712211,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 182
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/amazonlinux/amazonlinux:2\n\nARG NODE_VERSION=16\nARG NVM_VERSION=v0.37.2\nARG DEEQU_VERSION=2.0.0-spark-3.1\nARG PYTHON_VERSION=python3.8\n\nRUN yum upgrade -y;\\\n    find /var/tmp -name \"*.rpm\" -print -delete ;\\\n    find /tmp -name \"*.rpm\" -print -delete ;\\\n    yum autoremove -y; \\\n    yum clean packages; yum clean headers; yum clean metadata; yum clean all; rm -rfv /var/cache/yum\n\nRUN yum -y install shadow-utils wget && rm -rf /var/cache/yum\nRUN yum -y install openssl-devel bzip2-devel libffi-devel postgresql-devel gcc unzip tar gzip && rm -rf /var/cache/yum\nRUN amazon-linux-extras install $PYTHON_VERSION\nRUN yum -y install python38-devel && rm -rf /var/cache/yum\n\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nRUN unzip awscliv2.zip\nRUN ./aws/install\n\nRUN touch ~/.bashrc\n\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh | bash\n\nRUN /bin/bash -c \". ~/.nvm/nvm.sh && \\\n\tnvm install $NODE_VERSION && nvm use $NODE_VERSION && \\\n\tnpm install -g aws-cdk && \\\n\tnvm alias default node && nvm cache clear\"\n\nRUN echo export PATH=\"\\\n/root/.nvm/versions/node/${NODE_VERSION}/bin:\\\n$(${PYTHON_VERSION} -m site --user-base)/bin:\\\n$(python3 -m site --user-base)/bin:\\\n$PATH\" >> ~/.bashrc && \\\n     echo \"nvm use ${NODE_VERSION} 1> /dev/null\" >> ~/.bashrc\nRUN /bin/bash -c  \". ~/.nvm/nvm.sh && cdk --version\"\n\nRUN $PYTHON_VERSION -m pip install -U pip\n\nADD backend/requirements.txt /dh.requirements.txt\nADD backend/dataall/cdkproxy/requirements.txt /cdk.requirements.txt\n\nRUN /bin/bash -c \"pip3.8 install -r /dh.requirements.txt\"\nRUN /bin/bash -c \"pip3.8 install -r /cdk.requirements.txt\"\n\nADD backend/dataall /dataall\nADD backend/blueprints /blueprints\nADD backend/cdkproxymain.py /cdkproxymain.py\n\nRUN mkdir -p dataall/cdkproxy/assets/glueprofilingjob/jars\nRUN mkdir -p blueprints/ml_data_pipeline/engine/glue/jars\nRUN curl -f https://repo1.maven.org/maven2/com/amazon/deequ/deequ/$DEEQU_VERSION/deequ-$DEEQU_VERSION.jar --output dataall/cdkproxy/assets/glueprofilingjob/jars/deequ-$DEEQU_VERSION.jar\nRUN cp -f dataall/cdkproxy/assets/glueprofilingjob/jars/deequ-$DEEQU_VERSION.jar blueprints/ml_data_pipeline/engine/glue/jars/deequ-$DEEQU_VERSION.jar\n\nWORKDIR /\n\nCMD [ \"/bin/bash\", \"-c\", \". ~/.nvm/nvm.sh && uvicorn cdkproxymain:app --host 0.0.0.0 --port 8080\" ]\n"
}