{
  "startTime": 1674219272105,
  "endTime": 1674219273524,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/amazonlinux/amazonlinux:latest\n\nARG NODE_VERSION=16\nARG NVM_VERSION=v0.37.2\nARG PYTHON_VERSION=python3.8\n\nRUN mkdir /code\nRUN mkdir /build\n\nRUN yum -y install shadow-utils wget && rm -rf /var/cache/yum\nRUN yum -y install openssl-devel bzip2-devel libffi-devel postgresql-devel gcc unzip tar gzip && rm -rf /var/cache/yum\nRUN amazon-linux-extras install $PYTHON_VERSION\nRUN yum -y install python38-devel && rm -rf /var/cache/yum\n\nRUN useradd -m app\n\nWORKDIR /build\n\nRUN touch ~/.bashrc\n\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nRUN unzip awscliv2.zip\nRUN ./aws/install\n\nCOPY ./docker/dev/wait-for-it.sh /build/wait-for-it.sh\nRUN chmod +x /build/wait-for-it.sh\nRUN chown -R app:root /build/wait-for-it.sh\n\nWORKDIR /code\nRUN touch ~/.bashrc\n\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh | bash\nRUN /bin/bash -c \". ~/.nvm/nvm.sh && \\\n\tnvm install $NODE_VERSION && nvm use $NODE_VERSION && \\\n\tnpm install -g aws-cdk && \\\n\tnvm alias default node && nvm cache clear\"\n\nRUN echo export PATH=\"\\\n/root/.nvm/versions/node/${NODE_VERSION}/bin:\\\n$(${PYTHON_VERSION} -m site --user-base)/bin:\\\n$(python3 -m site --user-base)/bin:\\\n$PATH\" >> ~/.bashrc && \\\n     echo \"nvm use ${NODE_VERSION} 1> /dev/null\" >> ~/.bashrc\n\nRUN /bin/bash -c  \". ~/.nvm/nvm.sh && cdk --version\"\n\nCOPY ./requirements.txt dh.requirements.txt\nCOPY ./dataall/cdkproxy/requirements.txt cdk.requirements.txt\n\nRUN /bin/bash -c \"${PYTHON_VERSION} -m pip install -U pip \"\nRUN /bin/bash -c \"${PYTHON_VERSION} -m pip install -r dh.requirements.txt\"\nRUN /bin/bash -c \"${PYTHON_VERSION} -m pip install -r cdk.requirements.txt\"\n\nENTRYPOINT [ \"/bin/bash\", \"-c\", \". ~/.nvm/nvm.sh && uvicorn cdkproxymain:app --host 0.0.0.0 --port 8080\" ]\n"
}