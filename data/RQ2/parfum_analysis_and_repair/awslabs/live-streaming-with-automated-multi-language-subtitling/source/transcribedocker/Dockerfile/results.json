{
  "startTime": 1674251906243,
  "endTime": 1674251906782,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 175
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: Apache-2.0\n\n# start with long-term-support version of the node.js with alpine os docker image\nFROM node:lts-alpine\n\n# create the application directory\nRUN mkdir /transcriber\nWORKDIR /transcriber\n\n# Install Build Dependencies for the docker image.\nRUN apk add --no-cache --virtual .gyp \\\n        python3 \\\n        make \\\n        g++ \\\n        ffmpeg\n\n# install application dependencies\nRUN npm install aws-sdk aws-signature-v4 query-string sleep websocket bcrypt @aws-sdk/client-transcribe-streaming@gamma @aws-sdk/eventstream-marshaller @aws-sdk/util-utf8-node && npm cache clean --force;\n\n# copy the application files\nCOPY transcribe-to-dynamo-withSDK.js healthcheck.py run.sh ./\n\nRUN [\"chmod\", \"+x\", \"run.sh\"]\n\n# Expose the port for UDP\nEXPOSE 7950\n\n# Run this inside the docker container\n# CMD ./ffmpeg -re -i video.mp4 -f mpegts udp://localhost:7950\n\n# run it when the container starts -- requires environment vars\nCMD sh run.sh\n"
}