{
  "startTime": 1674254304162,
  "endTime": 1674254304942,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# SPDX-FileCopyrightText: Copyright (c) 1993-2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nARG CUDA_VERSION=11.6.2\nARG OS_VERSION=18.04\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn8-devel-ubuntu${OS_VERSION}\n\nENV TRT_VERSION 8.4.1.5\nSHELL [\"/bin/bash\", \"-c\"]\nRUN mkdir -p /workspace\n\n# Install Required Libraries\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libcurl4-openssl-dev \\\n    wget \\\n    git \\\n    pkg-config \\\n    sudo \\\n    ssh \\\n    libssl-dev \\\n    pbzip2 \\\n    pv \\\n    bzip2 \\\n    unzip \\\n    devscripts \\\n    lintian \\\n    fakeroot \\\n    dh-make \\\n    build-essential \\\n    openjdk-11-jdk && \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*\n\n# Install python3\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      python3 \\\n      python3-pip \\\n      python3-dev \\\n      python3-wheel &&\\\n    cd /usr/local/bin &&\\\n    ln -s /usr/bin/python3 python &&\\\n    ln -s /usr/bin/pip3 pip && \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*\n\n# Install TensorRT\nRUN v=\"${TRT_VERSION%.*}-1+cuda${CUDA_VERSION%.*}\" &&\\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub &&\\\n    apt-get update && \\\n    sudo apt-get install -y --no-install-recommends libnvinfer8=${v} libnvonnxparsers8=${v} libnvparsers8=${v} libnvinfer-plugin8=${v} \\\n        libnvinfer-dev=${v} libnvonnxparsers-dev=${v} libnvparsers-dev=${v} libnvinfer-plugin-dev=${v} \\\n        python3-libnvinfer=${v}; \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*\n\n# Install Cmake\nRUN cd /tmp && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh && \\\n    chmod +x cmake-3.14.4-Linux-x86_64.sh && \\\n    ./cmake-3.14.4-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license && \\\n    rm ./cmake-3.14.4-Linux-x86_64.sh\n\nRUN cd /usr/local/bin && \\\n    wget https://ngc.nvidia.com/downloads/ngccli_cat_linux.zip && \\\n    unzip ngccli_cat_linux.zip && \\\n    chmod u+x ngc-cli/ngc && \\\n    rm ngccli_cat_linux.zip ngc-cli.md5 && \\\n    echo \"no-apikey\\nascii\\n\" | ngc-cli/ngc config set\n\n\n# Set environment and working directory\nENV TRT_LIBPATH /usr/lib/x86_64-linux-gnu\nENV TRT_OSSPATH /workspace/TensorRT\nENV PATH=\"${PATH}:/usr/local/bin/ngc-cli\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${TRT_OSSPATH}/build/out:${TRT_LIBPATH}\"\nWORKDIR /workspace\n\nRUN [\"/bin/bash\"]\n"
}