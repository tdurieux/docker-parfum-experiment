{
  "startTime": 1674249727612,
  "endTime": 1674249728176,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 23,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 11,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/amazonlinux/amazonlinux:2 as build-stage\nARG ARCH=x86_64\nRUN rpm --rebuilddb && yum install -y yum-plugin-ovl jq && rm -rf /var/cache/yum\nRUN yum groupinstall -y \"Development tools\"\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nRUN source $HOME/.cargo/env && rustup target add ${ARCH}-unknown-linux-musl\nRUN curl -f -k -o /${ARCH}-linux-musl-cross.tgz https://musl.cc/${ARCH}-linux-musl-cross.tgz \\\n        && tar zxf /${ARCH}-linux-musl-cross.tgz \\\n        && ln -s /${ARCH}-linux-musl-cross/bin/${ARCH}-linux-musl-gcc /usr/local/bin/${ARCH}-unknown-linux-musl-gcc && rm /${ARCH}-linux-musl-cross.tgz\nWORKDIR /app\nADD . /app\nRUN source $HOME/.cargo/env &&\\\n    LAMBDA_RUNTIME_USER_AGENT=aws-lambda-rust/aws-lambda-adapter/$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].version') \\\n    CC=${ARCH}-unknown-linux-musl-gcc cargo build --release --target=${ARCH}-unknown-linux-musl\n\nFROM scratch AS package-stage\nARG ARCH=x86_64\nCOPY --from=build-stage /app/target/${ARCH}-unknown-linux-musl/release/lambda-adapter /lambda-adapter\n"
}