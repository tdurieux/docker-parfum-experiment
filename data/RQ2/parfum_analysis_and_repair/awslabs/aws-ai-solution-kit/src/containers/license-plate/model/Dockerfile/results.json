{
  "startTime": 1674248739613,
  "endTime": 1674248740533,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/lambda/python:3.9\n\nARG FUNCTION_DIR=\"/opt/program\"\n# Lite version\nARG MODEL_URL=\"https://aws-gcr-solutions-assets.s3.cn-northwest-1.amazonaws.com.cn/ai-solution-kit/license-plate\"\nARG MODEL_VERSION=\"1.2.0\"\n\nADD / ${FUNCTION_DIR}/\n\nRUN pip3 install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ -r ${FUNCTION_DIR}/requirements.txt\nRUN pip3 install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/ --target ${FUNCTION_DIR} awslambdaric\n\nRUN mkdir -p ${FUNCTION_DIR}/model\nRUN yum install -y wget && rm -rf /var/cache/yum\nRUN wget -c $MODEL_URL/$MODEL_VERSION/classifier.onnx -O ${FUNCTION_DIR}/model/classifier.onnx\nRUN wget -c $MODEL_URL/$MODEL_VERSION/det_standard.onnx -O ${FUNCTION_DIR}/model/det_standard.onnx\nRUN wget -c $MODEL_URL/$MODEL_VERSION/keys_v1.txt -O ${FUNCTION_DIR}/model/keys_v1.txt\nRUN wget -c $MODEL_URL/$MODEL_VERSION/rec_standard.onnx -O ${FUNCTION_DIR}/model/rec_standard.onnx\n\nWORKDIR ${FUNCTION_DIR}\nENV PYTHONUNBUFFERED=TRUE\nENV PYTHONDONTWRITEBYTECODE=TRUE\nENV PYTHONIOENCODING=\"utf8\"\nENV MODEL_NAME=\"standard\"\nENV MODEL_PATH=\"${FUNCTION_DIR}/model/\"\n\nENTRYPOINT [ \"python3\", \"-m\", \"awslambdaric\" ]\nCMD [ \"license_plate_app.handler\" ]"
}