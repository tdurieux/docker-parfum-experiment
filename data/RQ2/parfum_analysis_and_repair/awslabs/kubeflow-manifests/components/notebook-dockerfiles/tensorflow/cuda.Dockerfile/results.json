{
  "startTime": 1674246572779,
  "endTime": 1674246573599,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=763104351884.dkr.ecr.us-west-2.amazonaws.com/tensorflow-training:2.6.3-gpu-py38-cu112-ubuntu20.04-v1.8-2022-06-23-16-57-41\n\nFROM $BASE_IMAGE\n\nARG NB_USER=jovyan\n\n# TODO: User should be refactored instead of hard coded jovyan\nUSER root\nENV DEBIAN_FRONTEND noninteractive\nENV NB_USER $NB_USER\nENV NB_UID 1000\nENV HOME /home/$NB_USER\nENV NB_PREFIX /\n\n\n# Use bash instead of sh\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update \\\n  && apt-get install -yq --no-install-recommends \\\n  apt-transport-https \\\n  build-essential \\\n  bash \\\n  bzip2 \\\n  ca-certificates \\ \n  curl \\\n  emacs \\\n  g++ \\\n  git \\\n  gnupg \\\n  gnupg2 \\\n  graphviz \\\n  locales \\\n  lsb-release \\\n  openssh-client \\\n  python3-pip \\\n  python3-dev \\\n  python3-setuptools \\\n  sudo \\\n  unzip \\\n  vim \\\n  wget \\\n  zip \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# install -- node.js\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && curl -f -sL \"https://deb.nodesource.com/gpgkey/nodesource.gpg.key\" | apt-key add - \\\n && echo \"deb https://deb.nodesource.com/node_14.x focal main\" > /etc/apt/sources.list.d/nodesource.list \\\n && apt-get -yq update \\\n && apt-get -yq install --no-install-recommends \\\n    nodejs \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install kubectl client\nRUN echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list \\\n && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;\n\n# set locale configs\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Create NB_USER user with UID=1000 and in the 'users' group\n# but allow for non-initial launches of the notebook to have\n# $HOME provided by the contents of a PV\nRUN useradd -M -s /bin/bash -N -u ${NB_UID} ${NB_USER} \\\n && mkdir -p ${HOME} \\\n && chown -R ${NB_USER}:users ${HOME} \\\n && chown -R ${NB_USER}:users /usr/local/bin\n\n# Install Tini - used as entrypoint for container\nRUN cd /tmp \\\n && wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini \\\n && echo \"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855  *tini\" | sha256sum -c - \\\n && mv tini /usr/local/bin/tini \\\n && chmod +x /usr/local/bin/tini\n\n# NOTE: Beyond this point be careful of breaking out\n# or otherwise adding new layers with RUN, chown, etc.\n# The image size can grow significantly.\n\nCOPY --chown=jovyan:users requirements.txt /tmp\nRUN python3 -m pip install -r /tmp/requirements.txt --quiet --no-cache-dir \\\n && rm -f /tmp/requirements.txt \\\n && jupyter lab --generate-config\n\n# Grant NB_USER access to /usr/local/lib\nRUN chown -R ${NB_USER}:users /usr/local/lib\n\n# Configure container startup\nEXPOSE 8888\nUSER jovyan\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"sh\",\"-c\", \"jupyter lab --notebook-dir=/home/${NB_USER} --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.allow_origin='*' --NotebookApp.base_url=${NB_PREFIX}\"]"
}