{
  "startTime": 1674216836167,
  "endTime": 1674216837549,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 79,
        "columnEnd": 95
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.7.9\nARG PRODUCTION=true\n\n## Install Querybook package requirements + NodeJS\n# Installing build-essential and python-dev for uwsgi\nRUN rm -rf /var/lib/apt/lists/* \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n    libsasl2-dev \\\n    libsasl2-modules \\\n    build-essential \\\n    python-dev \\\n    libssl-dev \\\n    libldap2-dev \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n    nodejs \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install YARN\nRUN npm i -g npm@6.14.5 \\\n    && npm i -g yarn@^1.22 \\\n    && npm explore npm --global -- npm install node-gyp@7.0.0 \\\n    && yarn config set cache-folder /mnt/yarn-cache/cache \\\n    && yarn config set yarn-offline-mirror /mnt/yarn-offline-mirror && npm cache clean --force; && yarn cache clean;\n\nWORKDIR /opt/querybook\n\nCOPY querybook-master/requirements requirements/\nRUN pip install --no-cache-dir -r requirements/base.txt \\\n    && if [ \"${PRODUCTION}\" = \"true\" ] ; then \\\n    pip install --no-cache-dir -r requirements/prod.txt; \\\n    else \\\n    pip install --no-cache-dir -r requirements/dev.txt; \\\n    fi\n\nCOPY querybook-master/package.json querybook-master/yarn.lock ./\nRUN yarn install --frozen-lockfile --pure-lockfile && npm rebuild node-sass && yarn cache clean;\n\n\n# Copy everything else\nCOPY querybook-master .\n\n# Webpack if prod\nRUN if [ \"${PRODUCTION}\" = \"true\" ] ; then ./node_modules/.bin/webpack --mode=production; fi\n\n# Environment variables, override plugins path for customization\nENV QUERYBOOK_PLUGIN=/opt/querybook/plugins\nENV PYTHONPATH=/opt/querybook/querybook/server:/opt/querybook/plugins\nENV production=${PRODUCTION}"
}