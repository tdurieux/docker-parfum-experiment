{
  "startTime": 1674251965415,
  "endTime": 1674251965973,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: MIT-0\n\nFROM amazonlinux:2\n\n# This builds a development image for Visual Studio Code and other local access\n# to develop and deploy components\n\n# Replace the args to lock to a specific version\nARG GREENGRASS_RELEASE_VERSION=2.4.0\nARG GREENGRASS_ZIP_FILE=greengrass-${GREENGRASS_RELEASE_VERSION}.zip\nARG GREENGRASS_RELEASE_URI=https://d2s8p88vqu9w66.cloudfront.net/releases/${GREENGRASS_ZIP_FILE}\nARG GREENGRASS_ZIP_SHA256=greengrass.zip.sha256\n\n# Author\nLABEL maintainer=\"AWS IoT Greengrass\"\n# Greengrass Version\nLABEL greengrass-version=${GREENGRASS_RELEASE_VERSION}\n\n# Set up Greengrass v2 execution parameters\n# TINI_KILL_PROCESS_GROUP allows forwarding SIGTERM to all PIDs in the PID group so Greengrass can exit gracefully\nENV TINI_KILL_PROCESS_GROUP=1 \\ \n    GGC_ROOT_PATH=/greengrass/v2 \\\n    PROVISION=false \\\n    AWS_REGION=us-east-1 \\\n    THING_NAME=default_thing_name \\\n    THING_GROUP_NAME=default_thing_group_name \\\n    TES_ROLE_NAME=default_tes_role_name \\\n    TES_ROLE_ALIAS_NAME=default_tes_role_alias_name \\\n    COMPONENT_DEFAULT_USER=default_component_user \\\n    DEPLOY_DEV_TOOLS=false \\\n    INIT_CONFIG=default_init_config \\\n    TRUSTED_PLUGIN=default_trusted_plugin_path \\\n    THING_POLICY_NAME=default_thing_policy_name\nENV PATH=\"$PATH:${GGC_ROOT_PATH}/bin\"\nRUN env\n\n# Development Entrypoint script to install and run Greengrass\nCOPY \"dockerfile-assets/greengrass-entrypoint-dev.sh\" /greengrass-entrypoint.sh\nCOPY \"dockerfile-assets/${GREENGRASS_ZIP_SHA256}\" /\n\n# Install Greengrass v2 dependencies\nRUN yum update -y && yum install -y python37 tar unzip wget sudo procps which && \\\n    amazon-linux-extras enable python3.8 && yum install -y python3.8 java-11-amazon-corretto-headless && \\\n    wget $GREENGRASS_RELEASE_URI && sha256sum -c ${GREENGRASS_ZIP_SHA256} && \\\n    rm -rf /var/cache/yum && \\\n    chmod +x /greengrass-entrypoint.sh && \\\n    mkdir -p /opt/greengrassv2 $GGC_ROOT_PATH && unzip $GREENGRASS_ZIP_FILE -d /opt/greengrassv2 && rm $GREENGRASS_ZIP_FILE && rm $GREENGRASS_ZIP_SHA256\n\n# modify /etc/sudoers\nCOPY \"dockerfile-assets/modify-sudoers.sh\" /\nRUN chmod +x /modify-sudoers.sh\nRUN ./modify-sudoers.sh\n\n############## BEGIN DEVELOPEMENT ADDITIONS\n# Install development packages\nRUN yum update -y && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    yum -y install net-tools iputils less yum-utils zip && \\\n    amazon-linux-extras enable docker && yum install -y docker && \\\n    rm -rf /var/cache/yum && \\\n    curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"/tmp/awscliv2.zip\" && unzip -d /tmp -q /tmp/awscliv2.zip && \\\n    /tmp/aws/install && rm -rf /tmp/aws && rm /tmp/awscliv2.zip\n\n# Pre-create ggc_user, ggc_group, and add to docker group\nRUN useradd ggc_user && groupadd ggc_group && usermod -a -G ggc_group,docker ggc_user\n\n# Install common development tools at file system level (outside Greengrass)\nRUN pip3 install --no-cache-dir black\n\n# Create directory where folder volume will be mapped\nRUN mkdir -p /opt/component_development\n\n############## END DEVELOPEMENT ADDITIONS\n\nENTRYPOINT [\"/greengrass-entrypoint.sh\"]"
}