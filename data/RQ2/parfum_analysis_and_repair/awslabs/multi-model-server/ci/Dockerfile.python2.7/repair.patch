diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/awslabs/multi-model-server/ci/Dockerfile.python2.7 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/awslabs/multi-model-server/ci/Dockerfile.python2.7/repaired.Dockerfile
index e3553d0..956c845 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/awslabs/multi-model-server/ci/Dockerfile.python2.7
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/awslabs/multi-model-server/ci/Dockerfile.python2.7/repaired.Dockerfile
@@ -27,8 +27,8 @@ RUN set -ex \
     && apt-get install software-properties-common -y --no-install-recommends\
     && apt-add-repository ppa:git-core/ppa \
     && apt-get update \
-    && apt-get install git -y --no-install-recommends\
-    && git version
+    && apt-get install git -y --no-install-recommends \
+    && git version && rm -rf /var/lib/apt/lists/*;
 
 RUN set -ex \
     && echo 'Acquire::CompressionTypes::Order:: "gz";' > /etc/apt/apt.conf.d/99use-gzip-compression \
@@ -61,7 +61,7 @@ RUN set -ex \
 # Install Docker
 RUN set -ex \
     && curl -fSL "https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz" -o docker.tgz \
-    && echo "${DOCKER_SHA256} *docker.tgz" | sha256sum -c - \
+    && echo "${DOCKER_SHA256}  *docker.tgz" | sha256sum -c - \
     && tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/ \
     && rm docker.tgz \
     && docker -v \
@@ -71,7 +71,7 @@ RUN set -ex \
     && echo 'dockremap:165536:65536' >> /etc/subuid \
     && echo 'dockremap:165536:65536' >> /etc/subgid \
     && wget "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind" -O /usr/local/bin/dind \
-    && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \
+    && curl -f -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \
     && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \
 # Ensure docker-compose works
     && docker-compose version
@@ -93,23 +93,23 @@ RUN set -ex \
 	&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
 	&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
 	&& export GNUPGHOME="$(mktemp -d)" \
-	&& (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEY" \
-        || gpg --keyserver pgp.mit.edu --recv-keys "$GPG_KEY" \
-        || gpg --keyserver keyserver.ubuntu.com --recv-keys "$GPG_KEY") \
+	&& ( gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEY" \
+        || gpg --batch --keyserver pgp.mit.edu --recv-keys "$GPG_KEY" \
+        || gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$GPG_KEY") \
 	&& gpg --batch --verify python.tar.xz.asc python.tar.xz \
 	&& rm -r "$GNUPGHOME" python.tar.xz.asc \
 	&& mkdir -p /usr/src/python \
 	&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
 	&& rm python.tar.xz \
-	\
+
 	&& cd /usr/src/python \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 		--enable-shared \
 		--enable-unicode=ucs4 \
 	&& make -j$(nproc) \
 	&& make install \
 	&& ldconfig \
-	\
+
 		&& wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \
 		&& python2 /tmp/get-pip.py "pip==$PYTHON_PIP_VERSION" \
 		&& rm /tmp/get-pip.py \
@@ -121,7 +121,7 @@ RUN set -ex \
 # then we use "pip list" to ensure we don't have more than one pip version installed
 # https://github.com/docker-library/python/pull/100
 	&& [ "$(pip list |tac|tac| awk -F '[ ()]+' '$1 == "pip" { print $2; exit }')" = "$PYTHON_PIP_VERSION" ] \
-	\
+
 	&& find /usr/local -depth \
 		\( \
 			\( -type d -a -name test -o -name tests \) \
@@ -147,16 +147,16 @@ ENV JAVA_VERSION=8 \
 # Install Java
 RUN set -ex \
     && apt-get update \
-    && apt-get install -y software-properties-common=$PROPERTIES_COMMON_VERSIION \
+    && apt-get install --no-install-recommends -y software-properties-common=$PROPERTIES_COMMON_VERSIION \
     && add-apt-repository ppa:openjdk-r/ppa \
     && apt-get update \
-    && apt-get -y install python-setuptools=$PYTHON_TOOL_VERSION \
-    && apt-get -y install openjdk-$JAVA_VERSION-jdk=$JDK_VERSION \
+    && apt-get -y --no-install-recommends install python-setuptools=$PYTHON_TOOL_VERSION \
+    && apt-get -y --no-install-recommends install openjdk-$JAVA_VERSION-jdk=$JDK_VERSION \
     && apt-get clean \
     # Ensure Java cacerts symlink points to valid location
     && update-ca-certificates -f \
     && mkdir -p /usr/src/ant \
-    && wget "http://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" -O /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz \
+    && wget "https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" -O /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz \
     && tar -xzf /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz -C /usr/local \
     && ln -s /usr/local/apache-ant-$ANT_VERSION/bin/ant /usr/bin/ant \
     && rm -rf /usr/src/ant \
@@ -169,20 +169,20 @@ RUN set -ex \
     && unzip /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip -d /usr/local \
     && ln -s /usr/local/gradle-$GRADLE_VERSION/bin/gradle /usr/bin/gradle \
     && rm -rf /usr/src/gradle \
-    && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*
+    && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz
 
 COPY m2-settings.xml $MAVEN_CONFIG/settings.xml
 
 # MMS build environment
 RUN set -ex \
     && apt-get update \
-    && pip install retrying \
-    && pip install mock \
-    && pip install pytest -U \
-    && pip install pylint
+    && pip install --no-cache-dir retrying \
+    && pip install --no-cache-dir mock \
+    && pip install --no-cache-dir pytest -U \
+    && pip install --no-cache-dir pylint
 
 # Install protobuf
 RUN wget https://github.com/google/protobuf/archive/v3.4.1.zip \
     && unzip v3.4.1.zip && rm v3.4.1.zip \
-    && cd protobuf-3.4.1 && ./autogen.sh && ./configure --prefix=/usr && make && make install && cd .. \
+    && cd protobuf-3.4.1 && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && make && make install && cd .. \
     && rm -r protobuf-3.4.1