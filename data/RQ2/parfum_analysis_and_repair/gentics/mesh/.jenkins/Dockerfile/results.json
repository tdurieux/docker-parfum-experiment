{
  "startTime": 1674252720530,
  "endTime": 1674252721438,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 3,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is used to build an image containing basic stuff to be used as a Jenkins slave build node.\nFROM jenkinsci/jnlp-slave:3.27-1\nUSER root\n\n# APT\nRUN echo 'deb http://debian.apa.at/debian buster main contrib non-free' > /etc/apt/sources.list && \\\n   echo 'deb http://debian.apa.at/debian buster-backports main' >> /etc/apt/sources.list && \\\n   echo 'deb http://security.debian.org/ buster/updates main contrib' >> /etc/apt/sources.list && \\\n   echo 'deb http://security.debian.org/debian-security buster/updates main contrib' >> /etc/apt/sources.list && \\\n   apt-get update  && \\\n   apt-get -y upgrade && \\\n   apt-get install --no-install-recommends -y git-core gawk sed wget curl sudo \\\n                      less vim curl tar wget sed psmisc \\\n                      file pwgen locales zip unzip \\\n                      software-properties-common devscripts \\\n                      bzip2 rsync gpg && \\\n   apt-get clean && \\\n   rm -Rf /var/lib/apt/lists/*\n\n# Maven\nRUN cd /opt && wget -nv -O maven.tar.gz \"https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\" && \\\n    tar -xzf maven.tar.gz && mv apache-maven* maven && rm maven.tar.gz && \\\n    ln -s /opt/maven/bin/mvn /usr/local/bin/mvn\n\n# kubectl\nRUN curl -f -LO \"https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl\" && \\\n    chmod +x kubectl && \\\n    mv kubectl /usr/local/bin/kubectl\n\n# Docker\nRUN curl -f \"https://get.docker.com/builds/`uname -s`/`uname -m`/docker-latest.tgz\" > docker.tgz && \\\n    tar -xzf docker.tgz && \\\n    mv docker/* /usr/bin && \\\n    rm -rf docke* && rm docker.tgz\n\n# Install Java 11 (default)\nRUN mkdir -p /usr/lib/jvm/ && \\\n   cd /usr/lib/jvm/ && \\\n   wget -nv -O openjdk-11.tar.gz \"https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz\" && \\\n   tar xfz openjdk-11.tar.gz && \\\n   rm *.gz && \\\n   mv jdk-11* java-11 && rm openjdk-11.tar.gz\nENV JAVA_HOME /usr/lib/jvm/java-11\n\n# Install Java 15\nRUN mkdir -p /usr/lib/jvm/ && \\\n   cd /usr/lib/jvm/ && \\\n   wget -nv -O openjdk-15.tar.gz \"https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15%2B36/OpenJDK15U-jdk_x64_linux_hotspot_15_36.tar.gz\" && \\\n   tar xfz openjdk-15.tar.gz && \\\n   rm *.gz && \\\n   mv jdk-15* java-15 && rm openjdk-15.tar.gz\nENV JAVA_1_15_HOME /usr/lib/jvm/java-15\n\n# Add Jenkins user\nRUN echo \"jenkins:jenkins\" | chpasswd\nRUN mkdir -p /home/jenkins/workspace && mkdir -p /home/jenkins/.ssh\n\nADD ./files/settings.xml /opt/maven/conf/settings.xml\n#ADD ./files/gentics /home/jenkins/.gnupg/gentics\nRUN chown jenkins: /home/jenkins -R\n\nRUN echo \"root:root\" | chpasswd\nADD ./files/config /home/jenkins/.ssh/config\nRUN ssh-keyscan github.com >> /home/jenkins/.ssh/known_hosts\nRUN ssh-keyscan git.gentics.com >> /home/jenkins/.ssh/known_hosts\n\nRUN mkdir -p /home/jenkins/.m2/repository\nRUN chown jenkins: /home/jenkins -R\n\n# Update Bash RC\nRUN rm /home/jenkins/.bashrc\nRUN echo '. /etc/profile.d/*.sh' > /home/jenkins/.bashrc\nRUN chown jenkins: /home/jenkins/.bashrc\n\n# Setup locale\nRUN sed -i  's/.*\\(en_US.UTF-8.*\\)/\\1/' /etc/locale.gen\nRUN locale-gen\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANGUAGE=en_US:en\" >> /etc/default/locale\n\n# Setup timezone\nRUN cp /usr/share/zoneinfo/Europe/Vienna /etc/localtime\nRUN echo \"Europe/Vienna\" > /etc/timezone\n\n# Setup Git\nADD ./files/.gitconfig /home/jenkins/.gitconfig\nRUN chown jenkins: /home/jenkins/.gitconfig\n\nRUN chown jenkins: /opt -R\n\n# Fix docker socket permission issue\nRUN groupadd -g 117 docker && usermod -aG docker jenkins\n\nENV LANG en_US.UTF-8\n\nUSER jenkins\n\n"
}