{
  "startTime": 1674255021290,
  "endTime": 1674255022684,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV SPARK_VERSION \"2.4.4\"\nENV KAFKA_VERSION \"2.2.0\"\nENV USRLIBS /home/libs\n\nWORKDIR $USRLIBS\n\n# install base deps\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  git apt-utils software-properties-common axel vim wget bzip2 curl \\\n  apt-transport-https ca-certificates gnupg-agent \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install docker\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n  && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y docker-ce docker-ce-cli containerd.io && rm -rf /var/lib/apt/lists/*;\n\n# Install docker-compose\nRUN curl -f -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose \\\n  && chmod +x /usr/local/bin/docker-compose\n\n# Install Java 8\nRUN add-apt-repository -y ppa:openjdk-r/ppa \\\n  && apt-get -qq update \\\n  && apt-get install -y openjdk-8-jdk --no-install-recommends \\\n  && update-java-alternatives -s java-1.8.0-openjdk-amd64 && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n# Install Apache Kafka\nWORKDIR $USRLIBS\n\nRUN wget https://www.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_2.12-${KAFKA_VERSION}.tgz -O kafka.tgz \\\n && mkdir -p $USRLIBS/kafka \\\n && tar -xzf $USRLIBS/kafka.tgz -C $USRLIBS/kafka --strip-components 1 \\\n && rm $USRLIBS/kafka.tgz\n\nENV KAFKA_HOME $USRLIBS/kafka\n\n# Install Apache Spark\nRUN axel --quiet http://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz \\\n  && tar -xf $USRLIBS/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz \\\n  && rm $USRLIBS/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz\n\nENV SPARK_HOME $USRLIBS/spark-${SPARK_VERSION}-bin-hadoop2.7\nENV SPARKLIB ${SPARK_HOME}/python:${SPARK_HOME}/python/lib/py4j-0.10.7-src.zip\nENV PYTHONPATH \"${SPARKLIB}:${FINK_HOME}:$PYTHONPATH\"\nENV PATH \"${SPARK_HOME}/bin:${SPARK_HOME}/sbin:${PATH}\"\n\nRUN echo \"spark.yarn.jars=${SPARK_HOME}/jars/*.jar\" > ${SPARK_HOME}/conf/spark-defaults.conf\n\n# Install Python\nWORKDIR $USRLIBS/anaconda3\n\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \\\n && bash $USRLIBS/anaconda3/miniconda.sh -b -p $USRLIBS/anaconda3/miniconda\n\nENV PATH $USRLIBS/anaconda3/miniconda/bin:$PATH\n\n# Install the broker deps\n# fink-filters and fink-science are not installed!\nCOPY requirements-docker.txt $USRLIBS/anaconda3/requirements-docker.txt\nRUN pip install --no-cache-dir --upgrade pip setuptools wheel \\\n  && pip install --no-cache-dir ipython \\\n  && pip install --no-cache-dir -r $USRLIBS/anaconda3/requirements-docker.txt\n\n# Install the simulator\nWORKDIR /home\nRUN git clone https://github.com/astrolabsoftware/fink-alert-simulator.git\n\nENV FINK_ALERT_SIMULATOR /home/fink-alert-simulator\n\n# Here we assume the container will be ran with\n# --v $HOST_PATH_TO/fink-package:/home/fink-package\nENV FINK_HOME /home/fink-broker\nENV FINK_SCIENCE /home/fink-science\nENV FINK_FILTERS /home/fink-filters\n\nENV PYTHONPATH $FINK_HOME:$FINK_ALERT_SIMULATOR:$FINK_SCIENCE:$FINK_FILTERS:$PYTHONPATH\nENV PATH $FINK_HOME/bin:$FINK_ALERT_SIMULATOR/bin:$PATH\n\nWORKDIR $FINK_HOME\n"
}