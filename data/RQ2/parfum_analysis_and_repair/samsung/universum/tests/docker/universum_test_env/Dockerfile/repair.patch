diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/samsung/universum/tests/docker/universum_test_env/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/samsung/universum/tests/docker/universum_test_env/Dockerfile/repaired.Dockerfile
index 90281fa..b98db03 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/samsung/universum/tests/docker/universum_test_env/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/samsung/universum/tests/docker/universum_test_env/Dockerfile/repaired.Dockerfile
@@ -6,11 +6,11 @@ ARG PYTHON=python3.7
 # In scope of non-interactive configuration there's no need to fix it
 
 # Update package list and install wget
-RUN apt-get update && apt-get install -y wget software-properties-common
+RUN apt-get update && apt-get install --no-install-recommends -y wget software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # Install latest python & pip
 RUN add-apt-repository ppa:deadsnakes/ppa && apt-get update
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ${PYTHON}-dev ${PYTHON}-distutils gnupg2 libssl-dev build-essential
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y ${PYTHON}-dev ${PYTHON}-distutils gnupg2 libssl-dev build-essential && rm -rf /var/lib/apt/lists/*;
 
 # Please note: wget is writing logs to stderr, these logs are not any kind of warning
 RUN wget --no-verbose --no-check-certificate -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'
@@ -20,7 +20,7 @@ FROM universum_test_env_no_vcs AS universum_test_env_no_p4
 ARG PYTHON=python3.7
 
 # Install Git & gitpython
-RUN apt-get install -y git
+RUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
 
 # Please note, that using Pip as a root user is, indeed, a bad practice
 # But in case of 'gitpython' and 'p4python' installing packages into system once per image instead of repeatedly
@@ -33,9 +33,9 @@ FROM universum_test_env_no_p4 AS universum_test_env
 ARG PYTHON=python3.7
 
 # Install Perforce and p4python
-RUN wget -q http://package.perforce.com/perforce.pubkey -O - | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - && \
+RUN wget -q https://package.perforce.com/perforce.pubkey -O - | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - && \
     echo "deb http://package.perforce.com/apt/ubuntu bionic release" > /etc/apt/sources.list.d/perforce.list && \
     apt-get update
 
-RUN apt-get install -y helix-cli
+RUN apt-get install --no-install-recommends -y helix-cli && rm -rf /var/lib/apt/lists/*;
 RUN ${PYTHON} -m pip install p4python