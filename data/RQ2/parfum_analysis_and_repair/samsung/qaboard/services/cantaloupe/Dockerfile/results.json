{
  "startTime": 1674255649765,
  "endTime": 1674255651096,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 116
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# this file is an edited version of https://github.com/crkn-rcdr/cihm-cantaloupe/blob/master/Dockerfile\nFROM alpine:3.10\n\nWORKDIR /tmp\nRUN apk add --no-cache --update -X http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n    curl \\\n    graphicsmagick \\\n    openjpeg-tools \\\n    wget \\\n    && rm -rf /var/cache/apk/*\n\n\nENV JAIHOME=/tmp/jai-1_1_2_01/lib \\\n  CLASSPATH=$JAIHOME/jai_core.jar:$JAIHOME/jai_codec.jar:$JAIHOME/mlibwrapper_jai.jar:$CLASSPATH \\\n  LD_LIBRARY_PATH=.:$JAIHOME:$CLASSPATH \\\n  GEM_HOME=/tmp/gems \\\n  JAVA_HOME=/usr/lib/jvm/java-11-openjdk\n\nRUN apk --no-cache add openjdk11 wget openjpeg-tools \\\n  # network issues at SIRC...\n  # msttcorefonts-installer fontconfig \\\n  # && update-ms-fonts \\\n  # && fc-cache -f \\\n  # See https://github.com/exo-docker/exo/blob/master/Dockerfile#L99 \\\n  && wget -nv -q --no-cookies \\\n  --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \\\n  -O \"/tmp/jai.tar.gz\" \"https://download.oracle.com/otn-pub/java/jai/1.1.2_01-fcs/jai-1_1_2_01-lib-linux-i586.tar.gz\" \\\n  && tar -xzpf jai.tar.gz \\\n  && rm -rf /var/cache/apk/* && rm jai.tar.gz\n\n\n# https://github.com/crkn-rcdr/cihm-cantaloupe/issues/15\nRUN cd /tmp && apk add --no-cache --virtual build-dependencies cmake g++ make nasm \\\n  && wget https://github.com/libjpeg-turbo/libjpeg-turbo/archive/2.0.4.tar.gz -O libjpeg-turbo-2.0.4.tar.gz \\\n  && tar -xpf libjpeg-turbo-2.0.4.tar.gz \\\n  && cd libjpeg-turbo-2.0.4 \\\n  && cmake \\\n  -DCMAKE_INSTALL_PREFIX=/usr \\\n  -DCMAKE_INSTALL_LIBDIR=/usr/lib \\\n  -DBUILD_SHARED_LIBS=True \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DCMAKE_C_FLAGS=\"$CFLAGS\" \\\n  -DWITH_JPEG8=1 \\\n  -DWITH_JAVA=1 \\\n  && make && make install \\\n  && cd .. &&  rm -rf libjpeg-turbo-2.0.4* \\\n  && apk del build-dependencies \\\n  && rm -rf /var/cache/apk/* && rm libjpeg-turbo-2.0.4.tar.gz\n\n\n\nENV VERSION=4.1.5\n\nARG user=cantaloupe\nARG uid=8182\nARG group=cantaloupe\nARG gid=8182\nRUN wget -nv \"https://github.com/medusa-project/cantaloupe/releases/download/v$VERSION/Cantaloupe-$VERSION.zip\" \\\n  && mkdir -p /usr/local/ \\\n  && cd /usr/local \\\n  && unzip /tmp/Cantaloupe-$VERSION.zip \\\n  && ln -s cantaloupe-$VERSION cantaloupe \\\n  && rm -rf /tmp/Cantaloupe-$VERSION \\\n  && rm /tmp/Cantaloupe-$VERSION.zip \\\n  # can fail if already exists (e.g. uucp)\n  && (addgroup -S $group --gid $gid || true) && (adduser -S $user --uid $uid -G $group || true) \\\n  && mkdir -p /var/log/cantaloupe \\\n  && mkdir -p /var/cache/cantaloupe \\\n  && chown -R $user:$group /var/log/cantaloupe \\\n  && chown -R $user:$group /var/cache/cantaloupe\n\n\nCOPY --chown=$user:$group cantaloupe.properties /etc/\n\n# if we run as another user, we don't want to deal with uid/gid issues\nRUN mkdir -p /srv/cantaloupe/logs\nVOLUME /srv/cantaloupe\nRUN chmod 777 /srv/cantaloupe && chmod 777 /srv/cantaloupe/logs\n\n# ENV GEM_HOME /tmp/gems\nUSER $user\nCMD [\"sh\", \"-c\", \"java -Dcantaloupe.config=/etc/cantaloupe.properties -Dcom.sun.media.jai.disableMediaLib=true -Xms4g -Xmx12g -jar /usr/local/cantaloupe/cantaloupe-$VERSION.war\"]\n"
}