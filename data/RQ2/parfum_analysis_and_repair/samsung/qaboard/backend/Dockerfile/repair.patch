diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/samsung/qaboard/backend/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/samsung/qaboard/backend/Dockerfile/repaired.Dockerfile
index 726149f..f7ddd4d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/samsung/qaboard/backend/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/samsung/qaboard/backend/Dockerfile/repaired.Dockerfile
@@ -20,26 +20,26 @@ RUN apt-get update -qq \
 #     && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1715D88E1DF1F24 \
 #     && add-apt-repository -y ppa:git-core/ppa \
 #     && apt-get update -qq \
-    && apt-get install -y git
+    && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
 
 
 # https://www.psycopg.org/docs/install.html#install-from-source
 # https://www.psycopg.org/docs/faq.html#faq-compile
 RUN apt-get update \
-    # postgresql and toolchain
-    && apt-get install -y libpq-dev gcc \
+    # postgresql and toolchain \
+    && apt-get install --no-install-recommends -y libpq-dev gcc \
     # login packages
-    && apt-get install -y libsasl2-dev libldap2-dev libssl-dev \
-    && apt-get clean
+    && apt-get install --no-install-recommends -y libsasl2-dev libldap2-dev libssl-dev \
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # At SIRC we need to be able to turn into any user to delete their output files
-RUN apt-get update && apt-get install -y sudo
+RUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;
 
 # If we want uwsgi's routing support
 # https://uwsgi-docs.readthedocs.io/en/latest/InternalRouting.html
 # RUN sudo apt-get install libpcre3 libpcre3-dev
 
-# we want /qaboard to "look" like a package for poetry not to fail 
+# we want /qaboard to "look" like a package for poetry not to fail
 WORKDIR /qaboard
 COPY setup.py fastentrypoints.py  ./
 
@@ -48,7 +48,7 @@ COPY setup.py fastentrypoints.py  ./
 # There are other ways to do it, maybe faster
 #   https://github.com/python-poetry/poetry/issues/1301
 #   https://github.com/python-poetry/poetry/issues/856
-RUN pip install poetry
+RUN pip install --no-cache-dir poetry
 WORKDIR /qaboard/backend
 COPY backend/pyproject.toml backend/poetry.lock ./
 # Inside the docker container we don't care about isolating virtual environment
@@ -56,7 +56,7 @@ COPY backend/pyproject.toml backend/poetry.lock ./
 # changing PATH to use the installed executable challenging.
 # There are other approaches
 # https://github.com/python-poetry/poetry/issues/1579
-# https://github.com/python-poetry/poetry/issues/214 
+# https://github.com/python-poetry/poetry/issues/214
 RUN poetry config virtualenvs.create false
 RUN poetry install --no-root
 ENV QA_NO_CHECK_FOR_UPDATES=1
@@ -75,13 +75,13 @@ WORKDIR /qaboard
 # We want to install "qaboard", but copying it ahead of time invalidates the build cache
 # this solution still has us install the pinned-deps of "qaboard" each time...
 # I guess we should bury our pride and list qaboard's deps as deps of the backend,
-# this way the install below would not install any 3rd parties :| 
+# this way the install below would not install any 3rd parties :|
 WORKDIR /qaboard/backend
 COPY backend/wait-for-it.sh backend/init.sh backend/uwsgi.ini ./
 RUN poetry install --extras qaboard
 
-# TODO: "poetry add" it 
-RUN pip install celery
+# TODO: "poetry add" it
+RUN pip install --no-cache-dir celery
 
 
 
@@ -105,4 +105,4 @@ RUN mkdir -p /var/qaboard/git && chmod -R 777 /var/qaboard/git
 #         we could read their projects's .envrc
 #   - [ ] Middle term, execute those functions in a docker container used by users to define their environment
 #   - [ ] The above makes things *slow* (?). What do we do? A sort of iter_input server?
-#         Limit the logic/connections available to users? 
+#         Limit the logic/connections available to users?