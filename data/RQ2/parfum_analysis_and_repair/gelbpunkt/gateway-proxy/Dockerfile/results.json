{
  "startTime": 1674216151236,
  "endTime": 1674216152128,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# I will only support x86_64 hosts because this allows for best hardware optimizations.\n# Compiling a Dockerfile for aarch64 should work but I won't support it myself.\nARG TARGET_CPU=\"haswell\"\n\nFROM docker.io/library/alpine:edge AS builder\nARG TARGET_CPU\nENV RUST_TARGET \"x86_64-unknown-linux-musl\"\nENV RUSTFLAGS \"-Lnative=/usr/lib -Z mir-opt-level=3 -C target-cpu=${TARGET_CPU}\"\n\nRUN apk upgrade && \\\n    apk add --no-cache curl gcc g++ musl-dev cmake make && \\\n    curl -sSf https://sh.rustup.rs | sh -s -- --profile minimal --component rust-src --default-toolchain nightly -y\n\nWORKDIR /build\n\nCOPY Cargo.toml Cargo.lock ./\nCOPY .cargo ./.cargo/\n\nRUN mkdir src/\nRUN echo 'fn main() {}' > ./src/main.rs\nRUN source $HOME/.cargo/env && \\\n    if [ \"$TARGET_CPU\" == 'x86-64' ]; then \\\n        cargo build --release --target=\"$RUST_TARGET\" --no-default-features --features no-simd; \\\n    else \\\n        cargo build --release --target=\"$RUST_TARGET\"; \\\n    fi\n\nRUN rm -f target/$RUST_TARGET/release/deps/gateway_proxy*\nCOPY ./src ./src\n\nRUN source $HOME/.cargo/env && \\\n    if [ \"$TARGET_CPU\" == 'x86-64' ]; then \\\n        cargo build --release --target=\"$RUST_TARGET\" --no-default-features --features no-simd; \\\n    else \\\n        cargo build --release --target=\"$RUST_TARGET\"; \\\n    fi && \\\n    cp target/$RUST_TARGET/release/gateway-proxy /gateway-proxy && \\\n    strip /gateway-proxy\n\nFROM scratch\n\nCOPY --from=builder /gateway-proxy /gateway-proxy\n\nCMD [\"./gateway-proxy\"]\n"
}