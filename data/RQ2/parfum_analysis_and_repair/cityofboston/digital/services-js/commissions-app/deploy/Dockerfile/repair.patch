diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cityofboston/digital/services-js/commissions-app/deploy/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cityofboston/digital/services-js/commissions-app/deploy/Dockerfile/repaired.Dockerfile
index d301a75..0c36fb8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cityofboston/digital/services-js/commissions-app/deploy/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cityofboston/digital/services-js/commissions-app/deploy/Dockerfile/repaired.Dockerfile
@@ -10,12 +10,12 @@ RUN apk add --no-cache git openssl
 ENV PYTHONUNBUFFERED=1
 RUN apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python
 RUN python3 -m ensurepip
-RUN pip3 install --no-cache --upgrade pip setuptools
+RUN pip3 install --no-cache-dir --no-cache --upgrade pip setuptools
 
 # Install the AWS CLI
-RUN apk add --update curl unzip git \
+RUN apk add --no-cache --update curl unzip git \
   && cd /tmp \
-  && curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" \
+  && curl -f "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" \
   && unzip awscli-bundle.zip \
   && ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \
   && rm awscli-bundle.zip \
@@ -25,7 +25,7 @@ RUN apk add --update curl unzip git \
 RUN npm config set unsafe-perm true
 
 # Need to upgrade yarn to at least 1.6
-RUN yarn global add yarn@^1.6.0
+RUN yarn global add yarn@^1.6.0 && yarn cache clean;
 
 # This is the tar'd up collection of package.json files created by
 # build-service-container.sh. Working with it and the lockfiles means we can
@@ -36,7 +36,7 @@ ADD package-json.tar yarn.lock lerna.json .yarnrc /app/
 # which will fail because we don’t have the source code at this point.
 #
 # TODO(finh): Scope this down to $WORKSPACE when yarn has that capability.
-RUN yarn install --frozen-lockfile --ignore-scripts
+RUN yarn install --frozen-lockfile --ignore-scripts && yarn cache clean;
 
 ADD . /app/
 
@@ -45,7 +45,7 @@ RUN /app/scripts/generate-ssl-key.sh /app/services-js/$WORKSPACE
 # This does the building of our repo’s packages, which couldn’t happen during
 # the initial install because we didn’t have source. The scope keeps us from
 # building unnecessary packages.
-RUN npx lerna run --stream --include-filtered-dependencies --scope services-js.$WORKSPACE prepare 
+RUN npx lerna run --stream --include-filtered-dependencies --scope services-js.$WORKSPACE prepare
 
 EXPOSE 3000