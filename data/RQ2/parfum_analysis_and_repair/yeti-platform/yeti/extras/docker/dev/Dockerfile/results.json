{
  "startTime": 1674254613858,
  "endTime": 1674254614750,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 26,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\n# Python\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        curl \\\n        git \\\n        python3-pip \\\n        && apt-get clean \\\n        && rm -rf /var/lib/apt/lists/*\n# ftontend\n\n# Install frontend dependencies\nRUN apt-get update && apt-get install -y --no-install-suggests --no-install-recommends \\\n        gnupg2 && \\\n        curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \\\n        curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n        echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        nodejs \\\n        yarn \\\n        && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /usr/share/man/* /root/.cache/*\n\n\n# Upgrade pip\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Install & Configure YETI\nADD . /opt/yeti\nWORKDIR /opt/yeti\nRUN pip3 install --no-cache-dir -r requirements.txt && \\\n        yarn install && \\\n        mv yeti.conf.sample yeti.conf && \\\n        sed -i '35s/# host = 127.0.0.1/host = mongodb/' yeti.conf && \\\n        sed -i '49s/# host = 127.0.0.1/host = redis/' yeti.conf && yarn cache clean;\n\nRUN mkdir /var/log/yeti\n\n# Update tld domain list\nRUN tldextract --update\n\nCOPY ./extras/docker/scripts/docker-entrypoint.sh /docker-entrypoint.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"webserver\"]\n"
}