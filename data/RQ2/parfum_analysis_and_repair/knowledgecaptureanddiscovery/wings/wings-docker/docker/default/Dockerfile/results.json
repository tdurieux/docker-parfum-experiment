{
  "startTime": 1674219153079,
  "endTime": 1674219153645,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tomcat:8\nRUN sed -i 's/debian testing main/debian testing main contrib non-free/' /etc/apt/sources.list\n\n# Install general tools\nRUN apt-get update && apt-get -y install --no-install-recommends \\\n        graphviz \\\n        libcurl4-openssl-dev \\\n        libxml2-dev \\\n        python3-pip \\\n        git \\\n        cgroupfs-mount \\\n        maven \\\n        tcl \\\n        tk \\\n        apt-transport-https \\\n        software-properties-common \\\n        gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker\nRUN curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add -\nRUN add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n   $(lsb_release -cs) \\\n   stable\"\nRUN apt-get update && apt-get -y --no-install-recommends install docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Configure tomcat\n# Add the tomcat users file\nCOPY ./wings-docker/config/tomcat/tomcat-users.xml /usr/local/tomcat/conf/\n\n# Add the tomcat server configuration file\nCOPY ./wings-docker/config/tomcat/server.xml /usr/local/tomcat/conf/\n\n# Add wings environment variable\nENV WINGS_MODE='dind'\n\n# Install wings\nRUN apt-get update && apt-get install --no-install-recommends -y git default-jdk && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /wings-src/wings/\nWORKDIR /wings-src/wings\n\n\n# Add wings properties\nRUN mkdir -p /opt/wings/storage/default \\\n    && mkdir -p /etc/wings/ \\\n    && mkdir -p /usr/local/tomcat/webapps/wings-portal/META-INF/\n\n\n# Add Wings build to tomcat (Deploy)\nWORKDIR /usr/local/tomcat/webapps/wings-portal\nCOPY build/wings-portal-*.war .\nRUN jar -xvf wings-portal-*.war\n\n# Add wings context file to the wings portal webapp\nCOPY ./wings-docker/config/default/wings-portal.xml /usr/local/tomcat/webapps/wings-portal/META-INF/context.xml\nCOPY ./wings-docker/config/default/portal.properties /etc/wings/portal.properties\n\nWORKDIR /usr/local/tomcat\n"
}