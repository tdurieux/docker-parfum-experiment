diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cassproject/cass/docker/fips/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cassproject/cass/docker/fips/Dockerfile/repaired.Dockerfile
index a373365..f78d2f7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cassproject/cass/docker/fips/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cassproject/cass/docker/fips/Dockerfile/repaired.Dockerfile
@@ -1,14 +1,14 @@
 FROM docker.elastic.co/elasticsearch/elasticsearch:7.17.4
 
-RUN curl -sL https://deb.nodesource.com/setup_18.x | bash -
-RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -qqy nodejs git build-essential checkinstall zlib1g-dev wget libssl-dev curl clang
+RUN curl -f -sL https://deb.nodesource.com/setup_18.x | bash -
+RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt --no-install-recommends install -qqy nodejs git build-essential checkinstall zlib1g-dev wget libssl-dev curl clang && rm -rf /var/lib/apt/lists/*;
 
 RUN openssl version
-RUN cd /usr/local/src && wget https://www.openssl.org/source/openssl-3.0.3.tar.gz && tar xvf openssl-3.0.3.tar.gz && cd openssl-3.0.3 && ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib enable-fips linux-x86_64 && make -j8 > make.log && make install > makeinstall.log && make install_ssldirs > makeinstallssldirs.log && make install_fips > makeinstallfips.log && cd /
+RUN cd /usr/local/src && wget https://www.openssl.org/source/openssl-3.0.3.tar.gz && tar xvf openssl-3.0.3.tar.gz && cd openssl-3.0.3 && ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib enable-fips linux-x86_64 && make -j8 > make.log && make install > makeinstall.log && make install_ssldirs > makeinstallssldirs.log && make install_fips > makeinstallfips.log && cd / && rm openssl-3.0.3.tar.gz
 RUN openssl version
 
 RUN git clone https://github.com/nodejs/node.git -b v18.x
-RUN cd node && export OPENSSL_ENABLE_MD5_VERIFY=true && export OPENSSL_CONF=/usr/local/ssl/openssl.cnf && export OPENSSL_MODULES=/usr/local/ssl/lib64/ossl-modules && ./configure --shared-openssl --shared-openssl-libpath=/usr/local/ssl/lib64 --shared-openssl-includes=/usr/local/ssl/include --shared-openssl-libname=crypto,ssl --openssl-is-fips > configure.log && export LD_LIBRARY_PATH=/usr/local/ssl/lib64 && make -j8 > make.log && make install > makeinstall.log && cd ..
+RUN cd node && export OPENSSL_ENABLE_MD5_VERIFY=true && export OPENSSL_CONF=/usr/local/ssl/openssl.cnf && export OPENSSL_MODULES=/usr/local/ssl/lib64/ossl-modules && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --shared-openssl --shared-openssl-libpath=/usr/local/ssl/lib64 --shared-openssl-includes=/usr/local/ssl/include --shared-openssl-libname=crypto,ssl --openssl-is-fips > configure.log && export LD_LIBRARY_PATH=/usr/local/ssl/lib64 && make -j8 > make.log && make install > makeinstall.log && cd ..
 
 ENV OPENSSL_ENABLE_MD5_VERIFY=true
 ENV OPENSSL_CONF=/usr/local/ssl/openssl.cnf
@@ -26,7 +26,7 @@ RUN echo 'activate = 1' >> /usr/local/ssl/openssl.cnf
 
 RUN mkdir CASS
 COPY package.json CASS/package.json
-RUN cd CASS && npm install && cd ..
+RUN cd CASS && npm install && cd .. && npm cache clean --force;
 COPY src CASS/src
 COPY etc CASS/etc
 COPY ca.crt CASS/ca.crt