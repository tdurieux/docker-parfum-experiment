{
  "startTime": 1674254766344,
  "endTime": 1674254767235,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 166,
        "columnEnd": 359
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 85,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 140
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 164
      }
    }
  ],
  "repairedDockerfile": "FROM docker.elastic.co/elasticsearch/elasticsearch:7.17.4\n\nRUN curl -f -sL https://deb.nodesource.com/setup_18.x | bash -\nRUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt --no-install-recommends install -qqy nodejs git build-essential checkinstall zlib1g-dev wget libssl-dev curl clang && rm -rf /var/lib/apt/lists/*;\n\nRUN openssl version\nRUN cd /usr/local/src && wget https://www.openssl.org/source/openssl-3.0.3.tar.gz && tar xvf openssl-3.0.3.tar.gz && cd openssl-3.0.3 && ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib enable-fips linux-x86_64 && make -j8 > make.log && make install > makeinstall.log && make install_ssldirs > makeinstallssldirs.log && make install_fips > makeinstallfips.log && cd / && rm openssl-3.0.3.tar.gz\nRUN openssl version\n\nRUN git clone https://github.com/nodejs/node.git -b v18.x\nRUN cd node && export OPENSSL_ENABLE_MD5_VERIFY=true && export OPENSSL_CONF=/usr/local/ssl/openssl.cnf && export OPENSSL_MODULES=/usr/local/ssl/lib64/ossl-modules && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --shared-openssl --shared-openssl-libpath=/usr/local/ssl/lib64 --shared-openssl-includes=/usr/local/ssl/include --shared-openssl-libname=crypto,ssl --openssl-is-fips > configure.log && export LD_LIBRARY_PATH=/usr/local/ssl/lib64 && make -j8 > make.log && make install > makeinstall.log && cd ..\n\nENV OPENSSL_ENABLE_MD5_VERIFY=true\nENV OPENSSL_CONF=/usr/local/ssl/openssl.cnf\nENV OPENSSL_MODULES=/usr/local/ssl/lib64/ossl-modules\nENV LD_LIBRARY_PATH=/usr/local/ssl/lib64\nENV HTTP2=false\nENV FIPS=true\n\nRUN echo '.include /usr/local/ssl/fipsmodule.cnf' >> /usr/local/ssl/openssl.cnf\nRUN echo '[provider_sect]' >> /usr/local/ssl/openssl.cnf\nRUN echo 'default = default_sect' >> /usr/local/ssl/openssl.cnf\nRUN echo 'fips = fips_sect' >> /usr/local/ssl/openssl.cnf\nRUN echo '[default_sect]' >> /usr/local/ssl/openssl.cnf\nRUN echo 'activate = 1' >> /usr/local/ssl/openssl.cnf\n\nRUN mkdir CASS\nCOPY package.json CASS/package.json\nRUN cd CASS && npm install && cd .. && npm cache clean --force;\nCOPY src CASS/src\nCOPY etc CASS/etc\nCOPY ca.crt CASS/ca.crt\nCOPY cass.crt CASS/cass.crt\nCOPY cass.key CASS/cass.key\nCOPY pm2.standalone.config.js CASS/pm2.standalone.config.js\nCOPY copyright.txt CASS/copyright.txt\nCOPY LICENSE CASS/LICENSE\nRUN cd CASS\n\nRUN echo 'discovery.type: single-node' >> config/elasticsearch.yml\nRUN echo 'node.name: cass-a' >> config/elasticsearch.yml\nRUN echo '-Xms4g' >> config/jvm.options\nRUN echo '-Xmx4g' >> config/jvm.options\n\nEXPOSE 80\nVOLUME [\"/usr/share/elasticsearch/data\",\"/usr/share/elasticsearch/CASS/etc\",\"/usr/share/elasticsearch/CASS/logs\"]\nENTRYPOINT /usr/local/bin/docker-entrypoint.sh & (cd CASS && npm run run:standalone && npm run logs)"
}