diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uwnetworkslab/uproxy-p2p/tools/build_env/android/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uwnetworkslab/uproxy-p2p/tools/build_env/android/Dockerfile/repaired.Dockerfile
index 8a00f04..c52c482 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uwnetworkslab/uproxy-p2p/tools/build_env/android/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uwnetworkslab/uproxy-p2p/tools/build_env/android/Dockerfile/repaired.Dockerfile
@@ -1,34 +1,34 @@
 # Many of the Android build tools require glibc and are
 # built for 32 bit systems. Running such binaries is a
-# lot easier on Ubuntu than on Alpine.  
+# lot easier on Ubuntu than on Alpine. 
 FROM ubuntu:xenial
 LABEL description="Docker container for building uProxy for Android"
 
 RUN apt-get update
-RUN apt-get install -y curl unzip \
-# For installing phantomjs via NPM.
+RUN apt-get install --no-install-recommends -y curl unzip \
+
 bzip2 \
-# Android SDK.
+
 openjdk-8-jdk \
-# CCA.
+
 git \
-# NDK.
+
 make libc6-i386 lib32z1 lib32gcc1 \
-# replace_xwalk_in_apk.sh.
-zip
+
+zip && rm -rf /var/lib/apt/lists/*;
 
 # Node.js.
-RUN curl -sL https://deb.nodesource.com/setup_6.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
-RUN npm install -g --production grunt-cli yarn
+RUN npm install -g --production grunt-cli yarn && npm cache clean --force;
 
 # Since the command-line Android development tools are poorly
 # documented, these steps are cobbled together from lots of
 # trial and error, old pinball machine parts, and various
 # Dockerfiles lying around Github. Bitrise, in particular,
 # maintains some images with many useful hints:
-#   https://github.com/bitrise-docker/android 
+#   https://github.com/bitrise-docker/android
 
 # Android SDK:
 #   https://developer.android.com/studio/index.html#downloads
@@ -45,7 +45,7 @@ ENV ANDROID_BUILD_TOOLS_VERSION 25.0.0
 ENV ANDROID_NDK_VERSION 13
 
 # SDK.
-RUN curl -o /tmp/android-sdk.tgz "http://dl.google.com/android/android-sdk_r${ANDROID_SDK_VERSION}-linux.tgz" && \
+RUN curl -f -o /tmp/android-sdk.tgz "https://dl.google.com/android/android-sdk_r${ANDROID_SDK_VERSION}-linux.tgz" && \
     tar xvf /tmp/android-sdk.tgz -C /opt && \
     rm /tmp/android-sdk.tgz
 ENV PATH ${PATH}:/opt/android-sdk-linux/tools:/opt/android-sdk-linux/platform-tools
@@ -67,7 +67,7 @@ RUN echo y | android update sdk --no-ui --all --filter extra-android-m2repositor
 RUN echo y | android update sdk --no-ui --all --filter extra-google-google_play_services
 
 # NDK.
-RUN curl -o /tmp/android-ndk.zip "http://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip" && \
+RUN curl -f -o /tmp/android-ndk.zip "https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip" && \
     unzip /tmp/android-ndk.zip -d /opt && \
     rm /tmp/android-ndk.zip
 ENV PATH "${PATH}:/opt/android-ndk-r${ANDROID_NDK_VERSION}"