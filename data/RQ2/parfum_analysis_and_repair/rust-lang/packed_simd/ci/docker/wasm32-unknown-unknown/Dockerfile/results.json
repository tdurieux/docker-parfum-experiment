{
  "startTime": 1674253228388,
  "endTime": 1674253229070,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n  ca-certificates \\\n  clang \\\n  cmake \\\n  curl \\\n  git \\\n  libc6-dev \\\n  make \\\n  python \\\n  xz-utils && rm -rf /var/lib/apt/lists/*;\n\n# Install `wasm2wat`\nRUN git clone --recursive https://github.com/WebAssembly/wabt\nRUN make -C wabt -j$(nproc)\nENV PATH=$PATH:/wabt/bin\n\n# Install `wasm-bindgen-test-runner`\nRUN curl -f -L https://github.com/rustwasm/wasm-bindgen/releases/download/0.2.73/wasm-bindgen-0.2.73-x86_64-unknown-linux-musl.tar.gz \\\n  | tar xzf -\n# Keep in sync with the version on Cargo.toml.\nENV PATH=$PATH:/wasm-bindgen-0.2.73-x86_64-unknown-linux-musl\nENV CARGO_TARGET_WASM32_UNKNOWN_UNKNOWN_RUNNER=wasm-bindgen-test-runner\n\n# Install `node`\nRUN curl -f https://nodejs.org/dist/v14.16.0/node-v14.16.0-linux-x64.tar.xz | tar xJf -\nENV PATH=$PATH:/node-v14.16.0-linux-x64/bin\n\n# We use a shim linker that removes `--strip-debug` when passed to LLD. While\n# this typically results in invalid debug information in release mode it doesn't\n# result in an invalid names section which is what we're interested in.\nCOPY lld-shim.rs /\nENV CARGO_TARGET_WASM32_UNKNOWN_UNKNOWN_LINKER=/tmp/lld-shim\n\n# Rustc isn't available until this container starts, so defer compilation of the\n# shim.\nENTRYPOINT /rust/bin/rustc /lld-shim.rs -o /tmp/lld-shim && exec bash \"$@\"\n"
}