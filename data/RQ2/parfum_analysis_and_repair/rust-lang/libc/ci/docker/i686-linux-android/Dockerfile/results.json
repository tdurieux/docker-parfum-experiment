{
  "startTime": 1674217447984,
  "endTime": 1674217449047,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN dpkg --add-architecture i386\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends libc6-dev gcc && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends \\\n  file \\\n  wget \\\n  ca-certificates \\\n  python3 \\\n  python3-distutils \\\n  unzip \\\n  expect \\\n  openjdk-8-jre \\\n  libstdc++6:i386 \\\n  libpulse0 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /android/\nCOPY android* /android/\n\nENV ANDROID_ARCH=i686\nENV PATH=$PATH:/android/ndk-$ANDROID_ARCH/bin:/android/sdk/cmdline-tools/tools:/android/sdk/platform-tools\n\nRUN sh /android/android-install-ndk.sh $ANDROID_ARCH\nRUN sh /android/android-install-sdk.sh $ANDROID_ARCH\nRUN mv /root/.android /tmp\nRUN chmod 777 -R /tmp/.android\nRUN chmod 755 /android/sdk/cmdline-tools/tools/* /android/sdk/emulator/qemu/linux-x86_64/*\n\nENV PATH=$PATH:/rust/bin \\\n    CARGO_TARGET_I686_LINUX_ANDROID_LINKER=i686-linux-android-gcc \\\n    CARGO_TARGET_I686_LINUX_ANDROID_RUNNER=/tmp/runtest \\\n    CC_i686_linux_android=i686-linux-android-gcc \\\n    HOME=/tmp\n\nADD runtest-android.rs /tmp/runtest.rs\nENTRYPOINT [ \\\n  \"bash\", \\\n  \"-c\", \\\n  # set SHELL so android can detect a 64bits system, see\n  # http://stackoverflow.com/a/41789144\n  \"SHELL=/bin/dash /android/sdk/emulator/emulator @i686 -no-window -no-accel & \\\n   rustc /tmp/runtest.rs -o /tmp/runtest && \\\n   exec \\\"$@\\\"\", \\\n  \"--\" \\\n]\n"
}