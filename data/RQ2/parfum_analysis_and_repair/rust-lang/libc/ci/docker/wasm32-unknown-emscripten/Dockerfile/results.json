{
  "startTime": 1674249937881,
  "endTime": 1674249938701,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# This is a workaround to avoid the interaction with tzdata.\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=America/New_York\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    g++ \\\n    make \\\n    file \\\n    curl \\\n    gcc \\\n    git \\\n    libc6-dev \\\n    libxml2 \\\n    python3 \\\n    python3-distutils \\\n    cmake \\\n    sudo \\\n    gdb \\\n    xz-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/python3 /usr/bin/python & \\\n    ln -s /usr/bin/pip3 /usr/bin/pip\nCOPY emscripten.sh /\nRUN bash /emscripten.sh\n\nENV PATH=$PATH:/rust/bin \\\n    CARGO_TARGET_WASM32_UNKNOWN_EMSCRIPTEN_RUNNER=node-wrapper.sh\n\nCOPY emscripten-entry.sh /\nCOPY docker/wasm32-unknown-emscripten/node-wrapper.sh /usr/local/bin/node-wrapper.sh\nENTRYPOINT [\"/emscripten-entry.sh\"]\n"
}