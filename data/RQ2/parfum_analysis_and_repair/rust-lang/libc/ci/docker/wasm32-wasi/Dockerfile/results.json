{
  "startTime": 1674253014073,
  "endTime": 1674253014693,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    clang \\\n    curl \\\n    git \\\n    libc6-dev \\\n    make \\\n    xz-utils && rm -rf /var/lib/apt/lists/*;\n\n# Note that we're using `git reset --hard` to pin to a specific commit for\n# verification for now. The sysroot is currently in somewhat of a state of flux\n# and is expected to have breaking changes, so this is an attempt to mitigate\n# those breaking changes on `libc`'s own CI\nRUN git clone https://github.com/WebAssembly/wasi-libc && \\\n  cd wasi-libc && \\\n  git reset --hard ad5133410f66b93a2381db5b542aad5e0964db96\nRUN apt-get install -y --no-install-recommends llvm && rm -rf /var/lib/apt/lists/*;\nRUN make -C wasi-libc install -j $(nproc) INSTALL_DIR=/wasi-libc\n\nRUN curl -f -L https://github.com/bytecodealliance/wasmtime/releases/download/dev/wasmtime-dev-x86_64-linux.tar.xz | \\\n  tar xJf -\nENV PATH=$PATH:/wasmtime-dev-x86_64-linux\nCOPY docker/wasm32-wasi/clang.sh /wasi-libc/bin/clang\n\nRUN apt-get install -y --no-install-recommends lld && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/wasm-ld-10 /usr/bin/wasm-ld\nENV PATH=$PATH:/usr/lib/llvm-10/bin\n\n# Of note here is our clang wrapper which just executes a normal clang\n# executable with the right sysroot, and then we're sure to turn off the\n# crt-static feature to ensure that the CRT that we're specifying with `clang`\n# is used.\nENV CARGO_TARGET_WASM32_WASI_RUNNER=wasmtime \\\n  CARGO_TARGET_WASM32_WASI_LINKER=/wasi-libc/bin/clang \\\n  CC_wasm32_wasi=/wasi-libc/bin/clang \\\n  PATH=$PATH:/rust/bin \\\n  RUSTFLAGS=-Ctarget-feature=-crt-static\n"
}