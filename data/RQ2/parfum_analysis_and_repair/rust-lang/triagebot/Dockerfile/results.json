{
  "startTime": 1674253593597,
  "endTime": 1674253594114,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is composed of two steps: the first one builds the release\n# binary, and then the binary is copied inside another, empty image.\n\n#################\n#  Build image  #\n#################\n\nFROM ubuntu:22.04 as build\n\nRUN apt-get update -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      g++ \\\n      curl \\\n      ca-certificates \\\n      libc6-dev \\\n      make \\\n      libssl-dev \\\n      pkg-config \\\n      git \\\n      cmake \\\n      zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- \\\n    --default-toolchain stable --profile minimal -y\n\nCOPY . .\nRUN bash -c 'source $HOME/.cargo/env && cargo test --release --all'\nRUN bash -c 'source $HOME/.cargo/env && cargo build --release'\n\n##################\n#  Output image  #\n##################\n\nFROM ubuntu:22.04 AS binary\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /opt/triagebot\n\nCOPY --from=build /target/release/triagebot /usr/local/bin/\nCOPY templates /opt/triagebot/templates\nWORKDIR /opt/triagebot\nENV PORT=80\nCMD triagebot\n"
}