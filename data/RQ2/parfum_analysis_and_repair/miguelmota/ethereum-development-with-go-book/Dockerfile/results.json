{
  "startTime": 1674252186182,
  "endTime": 1674252186892,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  curl \\\n  wget \\\n  python \\\n  pkg-config \\\n  libcairo2-dev \\\n  libjpeg-dev \\\n  libgif-dev \\\n  libglib2.0-0 \\\n  libgl-dev \\\n  libnss3-dev \\\n  libx11-6 \\\n  libx11-xcb1 \\\n  libxcb1 \\\n  libxcursor1 \\\n  libxdamage1 \\\n  libxext6 \\\n  libxfixes3 \\\n  libxi6 \\\n  libxrandr2 \\\n  libxrender1 \\\n  libxss1 \\\n  libxtst6 \\\n  libxcb1-dev \\\n  libxcomposite-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | bash\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nRUN useradd -rm -d /home/ubuntu -s /bin/bash -g root -G sudo -u 1001 ubuntu\n\nRUN mkdir -p /usr/local/nvm\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 11.15.0\n\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.39.1/install.sh | bash \\\n    && source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\nCOPY Makefile .\nRUN make install-gitbook\n\nUSER ubuntu\nRUN mkdir -p /home/ubuntu/app\nCOPY . /home/ubuntu/app\nWORKDIR /home/ubuntu/app\n\nRUN make install-modules\nRUN make build\nRUN make ebooks\n\nCMD [\"echo\", \"complete\"]\n"
}