{
  "startTime": 1674246708711,
  "endTime": 1674246710049,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 133
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 133
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH=\"amd64\"\n\nFROM ${ARCH}/ubuntu:18.04\nARG GOLANG_VERSION\nARG ARCH=\"amd64\"\nARG GOARCH=\"amd64\"\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential git libboost-all-dev wget sqlite3 autoconf jq bsdmainutils shellcheck awscli && rm -rf /var/lib/apt/lists/*;\nWORKDIR /root\nRUN wget https://dl.google.com/go/go${GOLANG_VERSION}.linux-${GOARCH}.tar.gz \\\n    && tar -xvf go${GOLANG_VERSION}.linux-${GOARCH}.tar.gz && \\\n    mv go /usr/local && rm go${GOLANG_VERSION}.linux-${GOARCH}.tar.gz\nENV GOROOT=/usr/local/go \\\n    GOPATH=$HOME/go \\\n    ARCH_TYPE=${ARCH}\nRUN mkdir -p $GOPATH/src/github.com/algorand\nCOPY . $GOPATH/src/github.com/algorand/go-algorand\nENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH \\\n    GOPROXY=https://proxy.golang.org,https://pkg.go.dev,https://goproxy.io,direct\nWORKDIR $GOPATH/src/github.com/algorand/go-algorand\nRUN git config --global --add safe.directory '*'\nRUN make clean\nRUN rm -rf $GOPATH/src/github.com/algorand/go-algorand && \\\n    mkdir -p $GOPATH/src/github.com/algorand/go-algorand\nRUN echo \"vm.max_map_count = 262144\" >> /etc/sysctl.conf\nCMD [\"/bin/bash\"]\n"
}