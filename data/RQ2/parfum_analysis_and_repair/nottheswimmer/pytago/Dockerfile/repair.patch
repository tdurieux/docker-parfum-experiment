diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nottheswimmer/pytago/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nottheswimmer/pytago/Dockerfile/repaired.Dockerfile
index 62b2e14..53b62a2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nottheswimmer/pytago/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nottheswimmer/pytago/Dockerfile/repaired.Dockerfile
@@ -47,15 +47,15 @@ RUN set -eux; \
 			;; \
 		*) echo >&2 "error: unsupported architecture '$apkArch' (likely packaging update needed)"; exit 1 ;; \
 	esac; \
-	\
+
 # https://github.com/golang/go/issues/38536#issuecomment-616897960
 	url='https://dl.google.com/go/go1.18.1.src.tar.gz'; \
 	sha256='efd43e0f1402e083b73a03d444b7b6576bb4c539ac46208b63a916b69aca4088'; \
-	\
+
 	wget -O go.tgz.asc "$url.asc"; \
 	wget -O go.tgz "$url"; \
-	echo "$sha256 *go.tgz" | sha256sum -c -; \
-	\
+	echo "$sha256  *go.tgz" | sha256sum -c -; \
+
 # https://github.com/golang/go/issues/14739#issuecomment-324767697
 	export GNUPGHOME="$(mktemp -d)"; \
 # https://www.google.com/linuxrepositories/
@@ -63,10 +63,10 @@ RUN set -eux; \
 	gpg --batch --verify go.tgz.asc go.tgz; \
 	gpgconf --kill all; \
 	rm -rf "$GNUPGHOME" go.tgz.asc; \
-	\
+
 	tar -C /usr/local -xzf go.tgz; \
 	rm go.tgz; \
-	\
+
 	( \
 		cd /usr/local/go/src; \
 # set GOROOT_BOOTSTRAP + GOHOST* such that we can build Go successfully
@@ -76,14 +76,14 @@ RUN set -eux; \
 			rm -rf "$GOROOT_BOOTSTRAP"; \
 		fi; \
 	); \
-	\
+
 # pre-compile the standard library, just like the official binary release tarballs do
 	go install std; \
 # go install: -race is only supported on linux/amd64, linux/ppc64le, linux/arm64, freebsd/amd64, netbsd/amd64, darwin/amd64 and windows/amd64
 #	go install -race std; \
-	\
+
 	apk del --no-network .build-deps; \
-	\
+
 # remove a few intermediate / bootstrapping files the official binary release tarballs do not contain
 	rm -rf \
 		/usr/local/go/pkg/*/cmd \
@@ -93,7 +93,7 @@ RUN set -eux; \
 		/usr/local/go/pkg/tool/*/go_bootstrap \
 		/usr/local/go/src/cmd/dist/dist \
 	; \
-	\
+
 	go version
 
 ENV GOPATH /go
@@ -112,6 +112,6 @@ ENV APP_HOME /app
 WORKDIR $APP_HOME
 COPY . $APP_HOME
 
-RUN pip install -r requirements-web.txt .
+RUN pip install --no-cache-dir -r requirements-web.txt .
 
 CMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 --chdir $APP_HOME/pytago pytago.app:app