{
  "startTime": 1674220914035,
  "endTime": 1674220914520,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# NOTE: DO *NOT* EDIT THIS FILE. IT IS GENERATED.\n# PLEASE UPDATE Dockerfile.erb INSTEAD OF THIS FILE.\n# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\nFROM sider/devon_rex_java:2.46.0\n\n\nENV RUNNERS_DEPS_DIR ${RUNNER_USER_HOME}/dependencies\nARG RUNNERS_DIR=${RUNNER_USER_HOME}/runners\n\n# Install required gems first (due to slow download)\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} Gemfile Gemfile.lock runners.gemspec analyzers.yml ${RUNNERS_DIR}/\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} lib/runners/version.rb ${RUNNERS_DIR}/lib/runners/\n\nRUN cd \"${RUNNERS_DIR}\" && \\\n    bundle config set --global jobs 4 && \\\n    bundle config set --global retry 3 && \\\n    bundle config && \\\n    BUNDLE_WITHOUT=development bundle install && \\\n    bundle list && \\\n    echo 'Checking if the Bundler version is expected...' && \\\n    lockfile_bundler_version=$(bundle exec ruby -e 'puts Bundler.locked_gems.bundler_version') && \\\n    bundle version | grep \"Bundler version ${lockfile_bundler_version}\"\n\nARG LANGUAGETOOL_VERSION=5.7\n\nRUN cd \"${RUNNER_USER_HOME}\" && \\\n    curl -f -sSLO --compressed https://languagetool.org/download/LanguageTool-${LANGUAGETOOL_VERSION}.zip && \\\n    unzip -q LanguageTool-${LANGUAGETOOL_VERSION}.zip && \\\n    rm LanguageTool-${LANGUAGETOOL_VERSION}.zip\n\nENV CLASSPATH ${RUNNER_USER_HOME}/LanguageTool-${LANGUAGETOOL_VERSION}/*:${CLASSPATH}\n\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} images/languagetool/languagetool images/runjava ${RUNNER_USER_BIN}/\n\n\n# Copy the main source code\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} exe ${RUNNERS_DIR}/exe\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} lib ${RUNNERS_DIR}/lib\n\nENV PATH ${RUNNERS_DIR}/exe:${PATH}\n\n# Run as non-root user\nUSER $RUNNER_USER\nWORKDIR $RUNNER_USER_HOME\n\nCOPY images/docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\", \"runners\", \"--analyzer=languagetool\"]\n"
}