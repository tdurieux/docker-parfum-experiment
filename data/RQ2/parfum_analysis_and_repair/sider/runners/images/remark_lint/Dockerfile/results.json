{
  "startTime": 1674246519584,
  "endTime": 1674246520529,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# NOTE: DO *NOT* EDIT THIS FILE. IT IS GENERATED.\n# PLEASE UPDATE Dockerfile.erb INSTEAD OF THIS FILE.\n# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\nFROM sider/devon_rex_npm:2.46.0\n\n\nENV RUNNERS_DEPS_DIR ${RUNNER_USER_HOME}/dependencies\nARG RUNNERS_DIR=${RUNNER_USER_HOME}/runners\n\n# Install required gems first (due to slow download)\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} Gemfile Gemfile.lock runners.gemspec analyzers.yml ${RUNNERS_DIR}/\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} lib/runners/version.rb ${RUNNERS_DIR}/lib/runners/\n\nRUN cd \"${RUNNERS_DIR}\" && \\\n    bundle config set --global jobs 4 && \\\n    bundle config set --global retry 3 && \\\n    bundle config && \\\n    BUNDLE_WITHOUT=development bundle install && \\\n    bundle list && \\\n    echo 'Checking if the Bundler version is expected...' && \\\n    lockfile_bundler_version=$(bundle exec ruby -e 'puts Bundler.locked_gems.bundler_version') && \\\n    bundle version | grep \"Bundler version ${lockfile_bundler_version}\"\n\n# Install the default version\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} images/remark_lint/package.json ${RUNNERS_DEPS_DIR}/\nRUN cd \"${RUNNERS_DEPS_DIR}\" && \\\n    npm install --strict-peer-deps --ignore-scripts --engine-strict --no-progress --no-save && \\\n    rm package*.json && \\\n    # We can't use NODE_PATH\n    # See the details here: https://github.com/sider/runners/issues/2636\n    ln -s \"${RUNNERS_DEPS_DIR}\"/node_modules \"${RUNNER_USER_HOME}\" && npm cache clean --force;\nENV PATH ${RUNNERS_DEPS_DIR}/node_modules/.bin:${PATH}\n\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} images/remark_lint/sider_recommended_remark_lint.yml ${RUNNER_USER_HOME}/\n\n\n# Copy the main source code\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} exe ${RUNNERS_DIR}/exe\nCOPY --chown=${RUNNER_USER}:${RUNNER_GROUP} lib ${RUNNERS_DIR}/lib\n\nENV PATH ${RUNNERS_DIR}/exe:${PATH}\n\n# Run as non-root user\nUSER $RUNNER_USER\nWORKDIR $RUNNER_USER_HOME\n\nCOPY images/docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\", \"runners\", \"--analyzer=remark_lint\"]\n"
}