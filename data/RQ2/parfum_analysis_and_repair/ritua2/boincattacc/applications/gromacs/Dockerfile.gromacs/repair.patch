diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ritua2/boincattacc/applications/gromacs/Dockerfile.gromacs b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ritua2/boincattacc/applications/gromacs/Dockerfile.gromacs/repaired.Dockerfile
index 8df92ac..cba36a5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ritua2/boincattacc/applications/gromacs/Dockerfile.gromacs
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ritua2/boincattacc/applications/gromacs/Dockerfile.gromacs/repaired.Dockerfile
@@ -1,5 +1,5 @@
 #################################################
-# HTSeq 
+# HTSeq
 
 # Largery based on gromacs/gromacs
 # All commands are the same as the ones from the base image
@@ -32,23 +32,23 @@ WORKDIR /gromacs
 # Permanently exports the docker file when using bash
 # BOINC still requires another source add 'source /usr/local/gromacs/bin/GMXRC.bash' at the start of run command
 
-RUN apt-get update && apt-get install build-essential unzip curl wget gcc g++ cmake libboost-all-dev -y &&\
-    curl -O ftp://ftp.gromacs.org/pub/gromacs/gromacs-5.0.7.tar.gz &&\
-    tar xfz gromacs-5.0.7.tar.gz &&\
-    cd gromacs-5.0.7 &&\
-    mkdir build &&\
-    cd build &&\
-    cmake .. -DGMX_BUILD_OWN_FFTW=ON -DREGRESSIONTEST_DOWNLOAD=ON &&\
-    make &&\
-    make check &&\
-    make install &&\
-    printf "\nsource /usr/local/gromacs/bin/GMXRC.bash\n" >> /root/.bashrc
+RUN apt-get update && apt-get install --no-install-recommends build-essential unzip curl wget gcc g++ cmake libboost-all-dev -y && \
+    curl -f -O ftp://ftp.gromacs.org/pub/gromacs/gromacs-5.0.7.tar.gz && \
+    tar xfz gromacs-5.0.7.tar.gz && \
+    cd gromacs-5.0.7 && \
+    mkdir build && \
+    cd build && \
+    cmake .. -DGMX_BUILD_OWN_FFTW=ON -DREGRESSIONTEST_DOWNLOAD=ON && \
+    make && \
+    make check && \
+    make install && \
+    printf "\nsource /usr/local/gromacs/bin/GMXRC.bash\n" >> /root/.bashrc && rm gromacs-5.0.7.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 
 WORKDIR /data
 
-RUN mkdir -p /root/shared/results && apt-get install -y coreutils && touch /All_outs.txt &&\
-	for afil in $(find /data -name '*.txt'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done &&\
-	for afil in $(find /data -name '*.jpeg'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done &&\
-	for afil in $(find /data -name '*.jpg'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done &&\
-	for afil in $(find /data -name '*.png'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done
+RUN mkdir -p /root/shared/results && apt-get install --no-install-recommends -y coreutils && touch /All_outs.txt && \
+	for afil in $(find /data -name '*.txt'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done && \
+	for afil in $(find /data -name '*.jpeg'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done && \
+	for afil in $(find /data -name '*.jpg'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done && \
+	for afil in $(find /data -name '*.png'); do printf "$(realpath $afil)\n" >>  /All_outs.txt; done && rm -rf /var/lib/apt/lists/*;