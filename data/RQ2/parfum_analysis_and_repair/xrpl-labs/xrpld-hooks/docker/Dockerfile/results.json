{
  "startTime": 1674251169106,
  "endTime": 1674251170282,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official image as a parent image.\nFROM centos\n\n# Set the working directory.\nWORKDIR /opt/xrpld-hooks/\n\n# Copy the file from your host to your current location.\nCOPY docker/screenrc /root/.screenrc\nCOPY docker/wasm2wat /usr/bin/\nCOPY rippled .\nCOPY testnet.cfg .\nCOPY testnetvalidators.txt .\nCOPY docker/libboost/libboost_coroutine.so.1.70.0 /usr/lib/\nCOPY docker/libboost/libboost_context.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_filesystem.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_program_options.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_regex.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_system.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_thread.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_chrono.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_date_time.so.1.70.0 /usr/lib\nCOPY docker/libboost/libboost_atomic.so.1.70.0 /usr/lib\nCOPY docker/js/ ./\n# Run the command inside your image filesystem.\nRUN dnf install epel-release -y\nRUN yum install -y vim screen python3-setuptools-wheel python3-pip-wheel python3 python3-pip curl make nodejs && rm -rf /var/cache/yum\nRUN curl -f https://cmake.org/files/v3.17/cmake-3.17.1-Linux-x86_64.sh --output cmake-3.17.1-Linux-x86_64.sh \\\n    && mkdir /opt/cmake \\\n    && printf \"y\\nn\\n\" | sh cmake-3.17.1-Linux-x86_64.sh --prefix=/opt/cmake > /dev/null \\\n    && ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake\nRUN curl -f https://raw.githubusercontent.com/wasienv/wasienv/master/install.sh | sh\nRUN echo 'PATH=$PATH:/root/.wasienv/bin/' >> /root/.bash_rc\nRUN rm -f cmake-3.17.1-Linux-x86_64.sh\nRUN mkdir /etc/opt/ripple\nRUN ln -s /opt/xrpld-hooks/testnet.cfg /etc/opt/ripple/rippled.cfg\nRUN ln -s /opt/xrpld-hooks/testnetvalidators.txt /etc/opt/ripple/testnetvalidators.txt\n\n# Add metadata to the image to describe which port the container is listening on at runtime.\nEXPOSE 6005\nEXPOSE 5005\n\n# Run the specified command within the container.\nCMD ./rippled --conf testnet.cfg --net >> log 2>> log\n"
}