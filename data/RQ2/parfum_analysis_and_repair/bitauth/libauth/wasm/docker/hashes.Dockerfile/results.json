{
  "startTime": 1674216840386,
  "endTime": 1674216841489,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM liuchong/rustup:nightly\nFROM liuchong/rustup@sha256:57795147db06a7ebad574469fb1198cf36fc26dc74d504d128ae2160271b2b61\nRUN rustup target add wasm32-unknown-unknown --toolchain nightly\nRUN cargo +nightly install wasm-bindgen-cli\nRUN cargo install wasm-pack\nRUN apt-get update && apt-get install --no-install-recommends git cmake python -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\n# Build Binaryen v1.38.6\nRUN BINARYEN_RELEASE=aab16136b9752eb0586b3a5b32b1d0e7a5803835 \\\n  && git clone --single-branch https://github.com/WebAssembly/binaryen.git \\\n  && cd binaryen \\\n  && git checkout $BINARYEN_RELEASE \\\n  && cmake . && make\n\n# ripemd160\nCOPY wasm/hashes/ripemd160 /libauth/wasm/hashes/ripemd160\nWORKDIR /libauth/wasm/hashes/ripemd160\nRUN mkdir -p out/ripemd160\nRUN wasm-pack init\nRUN /binaryen/bin/wasm-opt -O3 pkg/ripemd160_bg.wasm -o pkg/ripemd160.wasm\nRUN cp pkg/ripemd160.wasm out/ripemd160\nRUN cp pkg/ripemd160.d.ts out/ripemd160\nRUN cp pkg/ripemd160.js out/ripemd160\nRUN OUTPUT_TS_FILE=out/ripemd160/ripemd160.base64.ts; printf \"/**\\n * @hidden\\n */\\n// prettier-ignore\\nexport const ripemd160Base64Bytes =\\n  '\" > $OUTPUT_TS_FILE && base64 -w 0 pkg/ripemd160.wasm >> $OUTPUT_TS_FILE && printf \"';\\n\" >> $OUTPUT_TS_FILE\nRUN cp -r /libauth/wasm/hashes/ripemd160/out/ripemd160 /libauth/bin\n\n# sha256\nCOPY wasm/hashes/sha256 /libauth/wasm/hashes/sha256\nWORKDIR /libauth/wasm/hashes/sha256\nRUN mkdir -p out/sha256\nRUN wasm-pack init\nRUN /binaryen/bin/wasm-opt -O3 pkg/sha256_bg.wasm -o pkg/sha256.wasm\nRUN cp pkg/sha256.wasm out/sha256\nRUN cp pkg/sha256.d.ts out/sha256\nRUN cp pkg/sha256.js out/sha256\nRUN OUTPUT_TS_FILE=out/sha256/sha256.base64.ts; printf \"/**\\n * @hidden\\n */\\n// prettier-ignore\\nexport const sha256Base64Bytes =\\n  '\" > $OUTPUT_TS_FILE && base64 -w 0 pkg/sha256.wasm >> $OUTPUT_TS_FILE && printf \"';\\n\" >> $OUTPUT_TS_FILE\nRUN cp -r /libauth/wasm/hashes/sha256/out/sha256 /libauth/bin\n\n# sha512\nCOPY wasm/hashes/sha512 /libauth/wasm/hashes/sha512\nWORKDIR /libauth/wasm/hashes/sha512\nRUN mkdir -p out/sha512\nRUN wasm-pack init\nRUN /binaryen/bin/wasm-opt -O3 pkg/sha512_bg.wasm -o pkg/sha512.wasm\nRUN cp pkg/sha512.wasm out/sha512\nRUN cp pkg/sha512.d.ts out/sha512\nRUN cp pkg/sha512.js out/sha512\nRUN OUTPUT_TS_FILE=out/sha512/sha512.base64.ts; printf \"/**\\n * @hidden\\n */\\n// prettier-ignore\\nexport const sha512Base64Bytes =\\n  '\" > $OUTPUT_TS_FILE && base64 -w 0 pkg/sha512.wasm >> $OUTPUT_TS_FILE && printf \"';\\n\" >> $OUTPUT_TS_FILE\nRUN cp -r /libauth/wasm/hashes/sha512/out/sha512 /libauth/bin\n\n# sha1\nCOPY wasm/hashes/sha1 /libauth/wasm/hashes/sha1\nWORKDIR /libauth/wasm/hashes/sha1\nRUN mkdir -p out/sha1\nRUN wasm-pack init\nRUN /binaryen/bin/wasm-opt -O3 pkg/sha1_bg.wasm -o pkg/sha1.wasm\nRUN cp pkg/sha1.wasm out/sha1\nRUN cp pkg/sha1.d.ts out/sha1\nRUN cp pkg/sha1.js out/sha1\nRUN OUTPUT_TS_FILE=out/sha1/sha1.base64.ts; printf \"/**\\n * @hidden\\n */\\n// prettier-ignore\\nexport const sha1Base64Bytes =\\n  '\" > $OUTPUT_TS_FILE && base64 -w 0 pkg/sha1.wasm >> $OUTPUT_TS_FILE && printf \"';\\n\" >> $OUTPUT_TS_FILE\nRUN cp -r /libauth/wasm/hashes/sha1/out/sha1 /libauth/bin\n\nWORKDIR /libauth/wasm/hashes/\n\n# copy outputs to mounted volume\nCMD [\"cp\", \"-r\", \"/libauth/bin\", \"/libauth/out\"]"
}