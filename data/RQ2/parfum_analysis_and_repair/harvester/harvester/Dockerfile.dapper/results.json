{
  "startTime": 1674217048651,
  "endTime": 1674217049721,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/costoolkit/releases-green:luet-toolchain-0.21.2 as luet\nFROM quay.io/costoolkit/releases-green:luet-makeiso-toolchain-0.4.0 as makeiso\n\nFROM golang:1.18.3-buster\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends \\\n        xz-utils \\\n        unzip \\\n        netcat \\\n        zstd \\\n        squashfs-tools \\\n        xorriso \\\n        jq \\\n        mtools \\\n        dosfstools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install yq\nRUN GO111MODULE=on go install github.com/mikefarah/yq/v4@v4.6.0\n# set up helm\nENV HELM_VERSION v3.5.4\nENV HELM_URL=https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz\nRUN mkdir /usr/tmp && \\\n    curl -f ${HELM_URL} | tar xvzf - --strip-components=1 -C /usr/tmp/ && \\\n    mv /usr/tmp/helm /usr/bin/helm\n\n# -- for make rules\n## install docker client\nRUN apt-get update -qq && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        gnupg \\\n    && rm -rf /var/lib/apt/lists/*; \\\n    \\\n    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - >/dev/null; \\\n    echo \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/debian buster stable\" > /etc/apt/sources.list.d/docker.list; \\\n    \\\n    apt-get update -qq && apt-get install -y --no-install-recommends \\\n        docker-ce=5:20.10.* \\\n    && rm -rf /var/lib/apt/lists/*\n## install golangci\nRUN if [ \"${ARCH}\" = \"amd64\" ]; then \\\n        curl -f -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b \"$(go env GOPATH)/bin\" v1.41.1; \\\n    fi\n## install controller-gen\nRUN if [ \"${ARCH}\" = \"amd64\" ]; then \\\n        GO111MODULE=on go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.6.1; \\\n    fi\n## install ginkgo\nRUN if [ \"${ARCH}\" = \"amd64\" ]; then \\\n        GO111MODULE=on go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.4; \\\n    fi\n# install openapi-gen\nRUN  GO111MODULE=on go install k8s.io/code-generator/cmd/openapi-gen@v0.23.7\n\n# install kind\nRUN curl -f -Lo /usr/bin/kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64 && chmod +x /usr/bin/kind\n\n# luet & makeiso\nCOPY --from=luet /usr/bin/luet /usr/bin/luet\nCOPY --from=makeiso /usr/bin/luet-makeiso /usr/bin/luet-makeiso\n\n# -- for make rules\n\n# -- for dapper\nENV DAPPER_RUN_ARGS --privileged --network host -v /run/containerd/containerd.sock:/run/containerd/containerd.sock\nENV GO111MODULE off\nENV DAPPER_ENV REPO TAG DRONE_TAG DRONE_BRANCH CROSS GOPROXY PUSH\nENV DAPPER_SOURCE /go/src/github.com/harvester/harvester/\nENV DAPPER_OUTPUT ./bin ./dist ./package\nENV DAPPER_DOCKER_SOCKET true\nENV HOME ${DAPPER_SOURCE}\n# -- for dapper\n\nWORKDIR ${DAPPER_SOURCE}\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}