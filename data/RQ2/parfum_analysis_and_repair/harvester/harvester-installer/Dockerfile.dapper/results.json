{
  "startTime": 1674246092970,
  "endTime": 1674246094092,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/costoolkit/releases-green:luet-toolchain-0.21.2 as luet\nFROM quay.io/costoolkit/releases-green:luet-makeiso-toolchain-0.4.0 as makeiso\n\nFROM registry.suse.com/bci/bci-base:15.3\n\nARG http_proxy=$http_proxy\nARG https_proxy=$https_proxy\nARG no_proxy=$no_proxy\nENV http_proxy=$http_proxy\nENV https_proxy=$https_proxy\nENV no_proxy=$no_proxy\n\nARG HARVESTER_INSTALLER_OFFLINE_BUILD\nENV HARVESTER_INSTALLER_OFFLINE_BUILD=$HARVESTER_INSTALLER_OFFLINE_BUILD\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\n# mtools and dosfstools are requirements for luet-makeiso >= 0.4.0 to build hybrid ISO.\nRUN zypper -n rm container-suseconnect && \\\n    zypper -n install go1.18 git curl docker gzip tar wget zstd squashfs xorriso awk jq mtools dosfstools\nRUN curl -sfL https://github.com/mikefarah/yq/releases/download/v4.21.1/yq_linux_${ARCH} -o /usr/bin/yq && chmod +x /usr/bin/yq\nRUN go install golang.org/x/lint/golint@latest\nRUN go install golang.org/x/tools/cmd/goimports@latest\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -f -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.41.1; \\\n    fi\n# set up helm\nENV HELM_VERSION v3.3.1\nENV HELM_URL=https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz\nRUN mkdir /usr/tmp && \\\n    curl -f ${HELM_URL} | tar xvzf - --strip-components=1 -C /usr/tmp/ && \\\n    mv /usr/tmp/helm /usr/bin/helm\n\n# luet & makeiso\nCOPY --from=luet /usr/bin/luet /usr/bin/luet\nCOPY --from=makeiso /usr/bin/luet-makeiso /usr/bin/luet-makeiso\n\nENV DAPPER_ENV REPO TAG DRONE_TAG DRONE_BRANCH CROSS\nENV DAPPER_SOURCE /go/src/github.com/harvester/harvester-installer/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS \"-v /run/containerd/containerd.sock:/run/containerd/containerd.sock -v harvester-installer-go:/root/go -v harvester-installer-cache:/root/.cache\"\n\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}