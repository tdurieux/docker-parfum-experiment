{
  "startTime": 1674255481914,
  "endTime": 1674255482552,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Derived from the Docker file:\n# https://github.com/cypress-io/cypress-docker-images/tree/master/included/7.4.0\n\n# Any updates to this Dockerfile should also be accompanied by a bump\n# in the version number in the farmdata2_modules/testrunner.bash\n# script so that the image will be rebuilt for anyone using it.\nFROM cypress/browsers:node14.16.0-chrome89-ff77\n\n# Update the dependencies to get the latest and greatest (and safest!) packages.\n# Updating here breaks things if packages move on.  As this is purely a\n# dev tool it's better to stay fixed and not break.\n# RUN apt-get update && apt-get upgrade -y\n\n# avoid too many progress messages\n# https://github.com/cypress-io/cypress/issues/1243\nENV CI=1\n\n# disable shared memory X11 affecting Cypress v4 and Chrome\n# https://github.com/cypress-io/cypress-docker-images/issues/270\nENV QT_X11_NO_MITSHM=1\nENV _X11_NO_MITSHM=1\nENV _MITSHM=0\n\n# should be root user\nRUN echo \"whoami: $(whoami)\"\nRUN npm config -g set user $(whoami)\n\n# command \"id\" should print:\n# uid=0(root) gid=0(root) groups=0(root)\n# which means the current user is root\nRUN id\n\n# point Cypress at the /root/cache no matter what user account is used\n# see https://on.cypress.io/caching\n#ENV CYPRESS_CACHE_FOLDER=/root/.cache/Cypress\n#RUN npm install -g \"cypress@7.4.0\"\n#RUN cypress verify\n\n# Cypress cache and installed version\n# should be in the root user's home folder\n#RUN cypress cache path\n#RUN cypress cache list\n#RUN cypress info\n#RUN cypress version\n\n# give every user read access to the \"/root\" folder where the binary is cached\n# we really only need to worry about the top folder, fortunately\n#RUN ls -la /root\n#RUN chmod 755 /root\n\n# always grab the latest Yarn\n# otherwise the base image might have old versions\n# NPM does not need to be installed as it is already included with Node.\nRUN npm i -g yarn@1.22.10 && npm cache clean --force;\n\n# Add the vue command line interface tool\nRUN npm install -g vue@2.6.13 @vue/cli@4.5.13 && npm cache clean --force;\n\n# Make a vue project into which the fd2 testing will be mounted\nRUN vue create -d fd2test --packageManager npm\n\n# Add cypress compontent testing and axios to the Vue project.\nWORKDIR fd2test\nRUN npm install --save-dev cypress@7.4.0 @cypress/vue@2.2.3 @cypress/webpack-dev-server@1.3.1 webpack-dev-server@3.11.2 && npm cache clean --force;\nRUN npm install --save-dev axios && npm cache clean --force;\n\n# should print Cypress version\n# plus Electron and bundled Node versions\nRUN npx cypress version\n\nRUN echo  \" node version:    $(node -v) \\n\" \\\n  \"npm version:     $(npm -v) \\n\" \\\n  \"yarn version:    $(yarn -v) \\n\" \\\n  \"debian version:  $(cat /etc/debian_version) \\n\" \\\n  \"user:            $(whoami) \\n\" \\\n  \"chrome:          $(google-chrome --version || true) \\n\" \\\n  \"firefox:         $(firefox --version || true) \\n\"\n\nENTRYPOINT [\"npx\", \"cypress\", \"open\"]"
}