{
  "startTime": 1674250749168,
  "endTime": 1674250750440,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# OCRmyPDF\n#\n\nFROM ubuntu:22.04 as base\n\nENV LANG=C.UTF-8\nENV TZ=UTC\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  python3 \\\n  libqpdf-dev \\\n  zlib1g \\\n  liblept5 && rm -rf /var/lib/apt/lists/*;\n\nFROM base as builder\n\n# Note we need leptonica here to build jbig2\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential autoconf automake libtool \\\n  libleptonica-dev \\\n  zlib1g-dev \\\n  python3-dev \\\n  python3-distutils \\\n  libffi-dev \\\n  ca-certificates \\\n  curl \\\n  git && rm -rf /var/lib/apt/lists/*;\n\n# Get the latest pip (Ubuntu version doesn't support manylinux2010)\nRUN \\\n  curl -f https://bootstrap.pypa.io/get-pip.py | python3\n\n# Compile and install jbig2\n# Needs libleptonica-dev, zlib1g-dev\nRUN \\\n  mkdir jbig2 \\\n  && curl -f -L https://github.com/agl/jbig2enc/archive/ea6a40a.tar.gz | \\\n  tar xz -C jbig2 --strip-components=1 \\\n  && cd jbig2 \\\n  && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n  && rm -rf jbig2\n\nCOPY . /app\n\nWORKDIR /app\n\nRUN pip3 install --no-cache-dir .[test,webservice,watcher]\n\nFROM base\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  ghostscript \\\n  img2pdf \\\n  libsm6 libxext6 libxrender-dev \\\n  pngquant \\\n  tesseract-ocr \\\n  tesseract-ocr-chi-sim \\\n  tesseract-ocr-deu \\\n  tesseract-ocr-eng \\\n  tesseract-ocr-fra \\\n  tesseract-ocr-por \\\n  tesseract-ocr-spa \\\n  unpaper \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\nCOPY --from=builder /usr/local/lib/ /usr/local/lib/\nCOPY --from=builder /usr/local/bin/ /usr/local/bin/\n\nCOPY --from=builder /app/misc/webservice.py /app/\nCOPY --from=builder /app/misc/watcher.py /app/\n\n# Copy minimal project files to get the test suite.\nCOPY --from=builder /app/setup.cfg /app/setup.py /app/README.md /app/\nCOPY --from=builder /app/tests /app/tests\n\nENTRYPOINT [\"/usr/local/bin/ocrmypdf\"]\n"
}