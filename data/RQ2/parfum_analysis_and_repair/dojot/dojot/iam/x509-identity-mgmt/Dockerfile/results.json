{
  "startTime": 1674220396007,
  "endTime": 1674220396775,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.21-alpine AS base\n\nWORKDIR /usr/local/app\n\n# To install 'node-rdkafka'\n# https://github.com/Blizzard/node-rdkafka/blob/master/examples/docker-alpine.md\nRUN apk --no-cache add \\\n      bash \\\n      g++ \\\n      ca-certificates \\\n      lz4-dev \\\n      musl-dev \\\n      cyrus-sasl-dev \\\n      openssl-dev \\\n      make \\\n      python3\n\nRUN apk add --no-cache --virtual \\\n      .build-deps gcc zlib-dev libc-dev bsd-compat-headers py-setuptools bash\n\n# A wildcard is used to ensure both package.json AND\n# package-lock.json are copied where available (npm@5+)\nCOPY js/package*.json ./\n\n# Install the all dependent node modules before copying the application code,\n# this way, during development, where the project files are changed frequently,\n# we save time in generating the final docker image because the image with the\n# dependent node modules will be in cache.\n# (\"--production\" not install modules listed in devDependencies)\nRUN npm install --production && npm cache clean --force;\n\n# After the dependencies are installed, we can copy the node application files\nCOPY js ./\n\n################################################################################\n\nFROM node:12.21-alpine\n\nWORKDIR /opt/x509-identity-mgmt\n\n# 'node-rdkafka' shared libraries: 'liblz4.so', 'libsasl2.so'\nRUN apk --no-cache add \\\n      lz4-libs \\\n      libsasl \\\n      tini\n\n# Uses the same UID as the one used by the EJBCA container\n#   -u UID          User id\n#   -G GRP          Group\n#   -s SHELL        Login shell\n#   -D              Don't assign a password\n#   USER            Alias\nRUN adduser -u 10001 -G \"root\" -s /bin/sh -D \"ejbca\"\n\nUSER 10001\n\n# Copies the node application and its dependencies to the final image\nCOPY --chown=10001:0 --from=base /usr/local/app /opt/x509-identity-mgmt/\n\nVOLUME [\"/opt/tls/\"]\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\nCMD [\"npm\", \"run\", \"app\"]\n"
}