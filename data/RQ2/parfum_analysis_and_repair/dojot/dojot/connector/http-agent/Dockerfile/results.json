{
  "startTime": 1674251692137,
  "endTime": 1674251692925,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS base\n\nWORKDIR /opt/http-agent\n\nRUN apk --no-cache add \\\n  bash \\\n  g++ \\\n  ca-certificates \\\n  lz4-dev \\\n  musl-dev \\\n  cyrus-sasl-dev \\\n  openssl-dev \\\n  make \\\n  python3 \\\n  && \\\n  apk add --no-cache --virtual \\\n  .build-deps \\\n  gcc \\\n  zlib-dev \\\n  libc-dev \\\n  bsd-compat-headers \\\n  py-setuptools \\\n  bash\n\nCOPY package.json ./package.json\nCOPY package-lock.json ./package-lock.json\n\nRUN npm install --only=prod && npm cache clean --force;\n\nCOPY app ./app\nCOPY config ./config\nCOPY index.js ./index.js\n\nFROM node:14-alpine\n\nWORKDIR /opt/http-agent\n\nRUN apk --no-cache add \\\n  libsasl \\\n  lz4-libs \\\n  openssl \\\n  tini \\\n  curl\n\nCOPY --from=base /opt/http-agent /opt/http-agent\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\nCMD [\"npm\", \"start\"]\n\nHEALTHCHECK --start-period=2m --interval=30s --timeout=10s --retries=3 \\\n  CMD curl -f http://localhost:9000/health || exit 1"
}