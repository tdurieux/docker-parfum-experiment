{
  "startTime": 1674250225631,
  "endTime": 1674250226321,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 15,
        "columnEnd": 102
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Sergio Morales \"sdmoralesma@gmail.com\"\n\n#Install packages on ubuntu base image\nRUN \\\n  apt-get update && \\\n  apt-get install -y && \\\n  apt-get install --no-install-recommends -y software-properties-common && \\\n  apt-get install --no-install-recommends -y wget unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install JDK 8\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n# Install WildFly to /opt\nENV WILDFLY_VERSION 10.1.0.Final\nRUN cd /opt && wget https://download.jboss.org/wildfly/$WILDFLY_VERSION/wildfly-$WILDFLY_VERSION.tar.gz && \\\n  tar xvf wildfly-$WILDFLY_VERSION.tar.gz && \\\n  ln -s /opt/wildfly-$WILDFLY_VERSION /opt/wildfly && \\\n  rm wildfly-$WILDFLY_VERSION.tar.gz\n\nENV JBOSS_HOME /opt/wildfly\n\n# Create admin user for wildfly\nRUN $JBOSS_HOME/bin/add-user.sh admin admin123 --silent\n\n# dowload mysql connector\nRUN mkdir $JBOSS_HOME/connector/ && \\\n  cd $JBOSS_HOME/connector/ && \\\n  wget https://central.maven.org/maven2/mysql/mysql-connector-java/5.1.38/mysql-connector-java-5.1.38.jar\n\n#add datasource to wildfly\nADD wildfly-config/scripts $JBOSS_HOME/scripts/\nRUN $JBOSS_HOME/scripts/execute.sh\n\n# Solves bug in history\nRUN rm -rf $JBOSS_HOME/standalone/configuration/standalone_xml_history/current\n\n# Install Gradle\nENV GRADLE_VERSION 3.0\nWORKDIR /usr/bin\nRUN wget https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip && \\\n  unzip gradle-$GRADLE_VERSION-bin.zip && \\\n  ln -s gradle-$GRADLE_VERSION gradle && \\\n  rm gradle-$GRADLE_VERSION-bin.zip\n\n# Set Appropriate Environmental Variables\nENV GRADLE_HOME /usr/bin/gradle\nENV PATH $PATH:$GRADLE_HOME/bin\n\n# Install Ruby Buildr\nRUN \\\n  apt-get install --no-install-recommends -y build-essential ruby ruby-dev ruby-bundler && \\\n  rm -rf /var/lib/apt/lists/*\nRUN gem install buildr\n\nENV BUILDR_HOME /usr/local/bin/buildr\nENV PATH $PATH:$BUILDR_HOME\n\n# Create the wildfly user and group\nRUN groupadd -r wildfly-group -g 433 && \\\n  useradd -u 431 -r -g wildfly-group -s /bin/false wildfly -m\n\n# Gradle workaround, will explode if TERM isn't declared\nENV TERM xterm\n\nENV USER_HOME /home/wildfly\n\n# Add java project\nADD java-gradle $USER_HOME/java-gradle\n\n# Add scala project\nADD scala-gradle $USER_HOME/scala-gradle\n\n# Add groovy project\nADD groovy-gradle $USER_HOME/groovy-gradle\n\n# Run everything below as the wildfly user\nRUN chown -R wildfly:wildfly-group $JBOSS_HOME/* && \\\n  chown -R wildfly:wildfly-group $USER_HOME/* && \\\n  chmod -R 777 $JBOSS_HOME/* && \\\n  chmod -R 777 $USER_HOME/*\n\nUSER wildfly\n\n# Expose the ports\nEXPOSE 8080 9990 8787 8443\n\n# Boot WildFly in the standalone mode and bind to all interfaces\nCMD [\"sh\", \"-c\", \"${JBOSS_HOME}/bin/standalone.sh\", \"--debug\", \"8787\", \"-b\", \"0.0.0.0\", \"-bmanagement\", \"0.0.0.0\"]\n"
}