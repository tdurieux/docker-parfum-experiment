{
  "startTime": 1674218313357,
  "endTime": 1674218314831,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple Dockerfile adding Maven and GraalVM Native Image compiler to the standard\n# https://github.com/graalvm/container/pkgs/container/graalvm-ce image\nFROM ghcr.io/graalvm/graalvm-ce:ol7-java11-21.2.0\n\nADD . /build\nWORKDIR /build\n\n# For SDKMAN to work we need unzip & zip\nRUN yum install -y unzip zip && rm -rf /var/cache/yum\n\nRUN \\\n\n    curl -f -s \"https://get.sdkman.io\" | bash; \\\n    source \"$HOME/.sdkman/bin/sdkman-init.sh\"; \\\n    sdk install maven; \\\n    # Install GraalVM Native Image\n    gu install native-image;\n\nRUN source \"$HOME/.sdkman/bin/sdkman-init.sh\" && mvn --version\n\nRUN native-image --version\n\nRUN source \"$HOME/.sdkman/bin/sdkman-init.sh\" && mvn -B clean package -P native --no-transfer-progress\n\n\n# We use a Docker multi-stage build here in order that we only take the compiled native Spring Boot App from the first build container\nFROM oraclelinux:7-slim\n\nMAINTAINER Jonas Hecht\n\n# Add Spring Boot Native app spring-boot-graal to Container\nCOPY --from=0 \"/build/target/spring-boot-graal\" spring-boot-graal\n\n# Fire up our Spring Boot Native app by default\nCMD [ \"sh\", \"-c\", \"./spring-boot-graal -Dserver.port=$PORT\" ]\n\n\n"
}