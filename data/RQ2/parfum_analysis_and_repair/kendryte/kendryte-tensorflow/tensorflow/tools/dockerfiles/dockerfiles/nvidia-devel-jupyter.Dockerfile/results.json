{
  "startTime": 1674254498979,
  "endTime": 1674254499879,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 98,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 110,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 98,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 110,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n#\n# THIS IS A GENERATED DOCKERFILE.\n#\n# This file was assembled from multiple pieces, whose use is documented\n# below. Please refer to the the TensorFlow dockerfiles documentation for\n# more information. Build args are documented as their default value.\n#\n# Ubuntu-based, Nvidia-GPU-enabled environment for developing changes for TensorFlow, with Jupyter included.\n#\n# Start from Nvidia's Ubuntu base image with CUDA and CuDNN, with TF development\n# packages.\n# --build-arg UBUNTU_VERSION=16.04\n#    ( no description )\n#\n# Python is required for TensorFlow and other libraries.\n# --build-arg USE_PYTHON_3_NOT_2=True\n#    Install python 3 over Python 2\n#\n# Install the latest version of Bazel and Python development tools.\n#\n# Configure TensorFlow's shell prompt and login tools.\n#\n# Launch Jupyter on execution instead of a bash prompt.\n\nARG UBUNTU_VERSION=16.04\nFROM nvidia/cuda:9.0-base-ubuntu${UBUNTU_VERSION}\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-dev-9-0 \\\n        cuda-cudart-dev-9-0 \\\n        cuda-cufft-dev-9-0 \\\n        cuda-curand-dev-9-0 \\\n        cuda-cusolver-dev-9-0 \\\n        cuda-cusparse-dev-9-0 \\\n        curl \\\n        git \\\n        libcudnn7=7.2.1.38-1+cuda9.0 \\\n        libcudnn7-dev=7.2.1.38-1+cuda9.0 \\\n        libnccl2=2.2.13-1+cuda9.0 \\\n        libnccl-dev=2.2.13-1+cuda9.0 \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        wget \\\n        && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    find /usr/local/cuda-9.0/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \\\n    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends libnvinfer4=4.1.2-1+cuda9.0 && \\\n        apt-get install -y --no-install-recommends libnvinfer-dev=4.1.2-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;\n\n# Link NCCL libray and header where the build script expects them.\nRUN mkdir /usr/local/cuda-9.0/lib &&  \\\n    ln -s /usr/lib/x86_64-linux-gnu/libnccl.so.2 /usr/local/cuda/lib/libnccl.so.2 && \\\n    ln -s /usr/include/nccl.h /usr/local/cuda/include/nccl.h\n\n# TODO(tobyboyd): Remove after license is excluded from BUILD file.\nRUN gunzip /usr/share/doc/libnccl2/NCCL-SLA.txt.gz && \\\n    cp /usr/share/doc/libnccl2/NCCL-SLA.txt /usr/local/cuda/\n\nARG USE_PYTHON_3_NOT_2=True\nARG _PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}\nARG PYTHON=python${_PY_SUFFIX}\nARG PIP=pip${_PY_SUFFIX}\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ${PYTHON} \\\n    ${PYTHON}-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN ${PIP} install --upgrade \\\n    pip \\\n    setuptools\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    curl \\\n    git \\\n    openjdk-8-jdk \\\n    ${PYTHON}-dev \\\n    swig && rm -rf /var/lib/apt/lists/*;\n\n# Install bazel\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list && \\\n    curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y bazel && rm -rf /var/lib/apt/lists/*;\n\nCOPY bashrc /etc/bash.bashrc\nRUN chmod a+rwx /etc/bash.bashrc\n\nRUN ${PIP} install jupyter\n\nRUN mkdir /notebooks && chmod a+rwx /notebooks\nRUN mkdir /.local && chmod a+rwx /.local\nWORKDIR /notebooks\nEXPOSE 8888\n\nCMD [\"bash\", \"-c\", \"source /etc/bash.bashrc && jupyter notebook --notebook-dir=/notebooks --ip 0.0.0.0 --no-browser --allow-root\"]\n"
}