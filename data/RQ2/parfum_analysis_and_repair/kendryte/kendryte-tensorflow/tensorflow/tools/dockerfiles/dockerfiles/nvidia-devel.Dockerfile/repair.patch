diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kendryte/kendryte-tensorflow/tensorflow/tools/dockerfiles/dockerfiles/nvidia-devel.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kendryte/kendryte-tensorflow/tensorflow/tools/dockerfiles/dockerfiles/nvidia-devel.Dockerfile/repaired.Dockerfile
index a3ba02a..41cc2c9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kendryte/kendryte-tensorflow/tensorflow/tools/dockerfiles/dockerfiles/nvidia-devel.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kendryte/kendryte-tensorflow/tensorflow/tools/dockerfiles/dockerfiles/nvidia-devel.Dockerfile/repaired.Dockerfile
@@ -70,10 +70,10 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a
 
 RUN apt-get update && \
-        apt-get install nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \
+        apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \
         apt-get update && \
-        apt-get install libnvinfer4=4.1.2-1+cuda9.0 && \
-        apt-get install libnvinfer-dev=4.1.2-1+cuda9.0
+        apt-get install -y --no-install-recommends libnvinfer4=4.1.2-1+cuda9.0 && \
+        apt-get install -y --no-install-recommends libnvinfer-dev=4.1.2-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;
 
 # Link NCCL libray and header where the build script expects them.
 RUN mkdir /usr/local/cuda-9.0/lib &&  \
@@ -92,27 +92,27 @@ ARG PIP=pip${_PY_SUFFIX}
 # See http://bugs.python.org/issue19846
 ENV LANG C.UTF-8
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     ${PYTHON} \
-    ${PYTHON}-pip
+    ${PYTHON}-pip && rm -rf /var/lib/apt/lists/*;
 
 RUN ${PIP} install --upgrade \
     pip \
     setuptools
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     curl \
     git \
     openjdk-8-jdk \
     ${PYTHON}-dev \
-    swig
+    swig && rm -rf /var/lib/apt/lists/*;
 
 # Install bazel
 RUN echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list && \
-    curl https://bazel.build/bazel-release.pub.gpg | apt-key add - && \
+    curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add - && \
     apt-get update && \
-    apt-get install -y bazel
+    apt-get install --no-install-recommends -y bazel && rm -rf /var/lib/apt/lists/*;
 
 COPY bashrc /etc/bash.bashrc
 RUN chmod a+rwx /etc/bash.bashrc