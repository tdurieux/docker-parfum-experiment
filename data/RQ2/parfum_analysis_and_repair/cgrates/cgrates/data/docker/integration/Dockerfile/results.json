{
  "startTime": 1674246290317,
  "endTime": 1674246291879,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 204
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 204
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 204
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 228
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedDockerfile": "FROM  debian:buster-slim\n\nRUN groupadd -r mongodb && useradd -r -g mongodb mongodb\nRUN groupadd -r redis && useradd -r -g redis redis\nRUN groupadd -r kafka && useradd -r -g kafka kafka\n\nRUN mkdir -p /usr/share/cgrates/conf /usr/share/man/man1 /var/spool/cgrates/ers/in /var/spool/cgrates/ers/out /var/spool/cgrates/cdre/csv /var/spool/cgrates/cdre/fwv /var/spool/cgrates/tpe /var/spool/cgrates/failed_posts /var/spool/cgrates/analyzers /run /data/configdb /data/db /kafka /logs\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install necessary libs\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y apt-utils wget gnupg gnupg2 apt-transport-https curl redis-server git build-essential rsyslog procps gosu \"mariadb-server\" mariadb-backup socat default-jdk-headless neovim net-tools && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -\nRUN echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list\n\nRUN wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main\" | tee /etc/apt/sources.list.d/pgdg.list\n\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb\nRUN dpkg -i erlang-solutions_1.0_all.deb\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y erlang erlang-nox && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | bash\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y mongodb-org postgresql rabbitmq-server && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /kafka\n\nRUN wget \"https://archive.apache.org/dist/kafka/2.1.0/kafka_2.11-2.1.0.tgz\"\nRUN tar -xvzf ./kafka_2.11-2.1.0.tgz --strip 1 && rm ./kafka_2.11-2.1.0.tgz\nRUN rm kafka_2.11-2.1.0.tgz\nCOPY ./conf/server.properties /kafka/config/server.properties\nWORKDIR /\n\n\nRUN set -ex; \\\n\trm -rf /var/lib/apt/lists/*; \\\n# purge and re-create /var/lib/mysql with appropriate ownership\n\trm -rf /var/lib/mysql; \\\n\tmkdir -p /var/lib/mysql /var/run/mysqld; \\\n\tchown -R mysql:mysql /var/lib/mysql /var/run/mysqld; \\\n# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\n\tchmod 777 /var/run/mysqld; \\\n# comment out a few problematic configuration values\n\tfind /etc/mysql/ -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log|user\\s)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log|user\\s)/#&/'; \\\n# don't reverse lookup hostnames, they are usually another container\n\techo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\n\n\nRUN wget -O go.tgz \"https://storage.googleapis.com/golang/go1.18.linux-amd64.tar.gz\" --progress=dot:giga\nRUN tar -C /usr/local -xzf go.tgz && rm go.tgz\nRUN rm go.tgz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nRUN\tgo version\n\n\nRUN touch /logs/mariadb.log /logs/mariadb_script.log /logs/rabbitmq.log\nRUN chmod 777  /logs/mariadb.log /logs/mariadb_script.log /logs/rabbitmq.log\n\n\nCOPY ./scripts /scripts\nCOPY ./scripts/service /usr/local/bin/service\n\nCOPY ./conf/rsyslogd.conf /etc/rsyslogd.conf\nCOPY ./conf/rsyslog.d /etc/rsyslog.d\nCOPY ./conf/redis.conf /etc/redis/redis.conf\n\nCOPY ./docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]"
}