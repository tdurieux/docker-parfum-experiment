{
  "startTime": 1674217747064,
  "endTime": 1674217747807,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 8,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install dependencies then build ghostream\nFROM debian:bullseye-slim AS build_base\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends ca-certificates \\\n        gcc golang libc6-dev libsrt1 libsrt-openssl-dev musl-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /code\nCOPY go.* ./\nRUN go mod download && go get github.com/markbates/pkger/cmd/pkger\nCOPY . .\nRUN PATH=/root/go/bin:$PATH go generate && go build -o ./out/ghostream .\n\n# Production image\nFROM debian:bullseye-slim\nRUN apt-get update && apt-get install --no-install-recommends -y ffmpeg libsrt1 musl && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build_base /code/out/ghostream /app/ghostream\nWORKDIR /app\n# 2112 for monitoring, 8023 for Telnet, 8080 for Web, 9710 for SRT, 10000-10005 (UDP) for WebRTC\nEXPOSE 2112 8023 8080 9710/udp 10000-10005/udp\nCMD [\"/app/ghostream\"]\n"
}