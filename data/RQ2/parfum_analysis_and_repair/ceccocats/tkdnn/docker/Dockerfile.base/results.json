{
  "startTime": 1674254568214,
  "endTime": 1674254569888,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 51,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 63,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 0,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:11.3.1-devel-ubuntu20.04\n\nLABEL maintainer \"TKDNN AUTHORS\"\nLABEL Description=\"tkDNN+cudagl\"\nLABEL com.tkdnn.nvidia.version=\"11.3.1\"\n\nENV DEBIAN_FRONTEND noninteractive\nENV CC gcc\nENV CXX g++\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\nlibblkid-dev && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\nlibcudnn8-dev=8.2.1.32-1+cuda11.3 \\\nlibcudnn8=8.2.1.32-1+cuda11.3 \\\nlibnvinfer-dev=8.0.3-1+cuda11.3 \\\nlibnvinfer8=8.0.3-1+cuda11.3 && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\nlibblkid-dev \\\nlocales \\\nlsb-release \\\nmesa-utils \\\ngit \\\nnano \\\nterminator \\\nwget \\\ncurl \\\nlibssl-dev \\\nhtop \\\ndbus-x11 \\\nlibqt5opengl5-dev \\\nlibgtk-3-dev \\\nlibvtk7-dev \\\nlibv4l-dev \\\ntar \\\nlibgoogle-glog-dev \\\nlibgflags-dev \\\ngfortran-9 \\\nlibtbb-dev \\\nlibgstreamer1.0-dev \\\nlibgstreamer-plugins-base1.0-dev \\\nlibdc1394-22-dev \\\nlibavresample-dev \\\nlibatlas-cpp-0.6-dev \\\npython3-dev \\\ngdb \\\npython3-pip \\\nunzip libtbb-dev && \\\napt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\nsoftware-properties-common && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-add-repository universe\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip python3 openssh-server ssh pyqt5-dev sip-dev && apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir --upgrade virtualenv\nRUN pip3 install --no-cache-dir --upgrade paramiko\nRUN pip3 install --no-cache-dir --ignore-installed --upgrade numpy protobuf\n\n\nRUN cd ~ && mkdir build\nRUN cd ~/build && wget https://github.com/Kitware/CMake/releases/download/v3.21.4/cmake-3.21.4.tar.gz  && \\\ntar -xvf cmake-3.21.4.tar.gz && cd cmake-3.21.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --qt-gui --parallel=12 && \\\nmake -j8 && make install && rm cmake-3.21.4.tar.gz\n\nRUN apt-get update && apt-get install --no-install-recommends -y automake autoconf pkg-config libevent-dev libncurses5-dev bison && \\\napt-get clean && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/tmux/tmux.git && \\\ncd tmux && git checkout tags/3.2 && ls -la && sh autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j8 && make install\n\nRUN apt-get update && apt-get install --no-install-recommends -y zsh && apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true\nRUN chsh -s /usr/bin/zsh root\nRUN git clone https://github.com/sindresorhus/pure /root/.oh-my-zsh/custom/pure\nRUN ln -s /root/.oh-my-zsh/custom/pure/pure.zsh-theme /root/.oh-my-zsh/custom/\nRUN ln -s /root/.oh-my-zsh/custom/pure/async.zsh /root/.oh-my-zsh/custom/\nRUN sed -i -e 's/robbyrussell/refined/g' /root/.zshrc\nRUN sed -i '/plugins=(/c\\plugins=(git git-flow adb pyenv tmux)' /root/.zshrc\n\nRUN mkdir -p /root/.config/terminator/\nCOPY assets/terminator_config /root/.config/terminator/config\n\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu:/usr/local/lib:${LD_LIBRARY_PATH}\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility,graphics\n\n\n\nRUN cd ~/build && wget https://github.com/opencv/opencv/archive/4.5.4.tar.gz && tar -xf 4.5.4.tar.gz && rm 4.5.4.tar.gz\nRUN cd ~/build && wget https://github.com/opencv/opencv_contrib/archive/4.5.4.tar.gz && tar -xf 4.5.4.tar.gz && rm 4.5.4.tar.gz\nRUN cd ~/build && \\\n    cd opencv-4.5.4 && mkdir build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D INSTALL_C_EXAMPLES=OFF \\\n    -D OPENCV_EXTRA_MODULES_PATH='~/build/opencv_contrib-4.5.4/modules' \\\n    -D BUILD_EXAMPLES=OFF \\\n    -D BUILD_TESTS=OFF \\\n    -D BUILD_PERF_TESTS=OFF \\\n    -D BUILD_DOCS=OFF \\\n    -D WITH_CUDA=ON \\\n    -D WITH_OPENGL=ON \\\n    -D WITH_NVCUVID=ON \\\n    -D CUDA_ARCH_BIN=7.2 \\\n    -D CUDA_ARCH_PTX=7.2 \\\n    -D ENABLE_FAST_MATH=ON \\\n    -D CUDA_FAST_MATH=ON \\\n    -D WITH_CUBLAS=ON \\\n    -D WITH_CUDNN=ON \\\n    -D WITH_OPENMP=ON \\\n    -D WITH_NONFREE=ON \\\n    -D WITH_LIBV4L=ON \\\n    -D WITH_GSTREAMER=ON \\\n    -D WITH_GSTREAMER_0_10=OFF \\\n    -D WITH_TBB=ON \\\n    ../ && make -j12 && make install && ldconfig\n\nRUN cd ~ && rm -rf build\n\nRUN cd ~ && mkdir Development && cd Development && \\\ngit clone https://github.com/ceccocats/tkDNN.git && cd tkDNN && \\\nmkdir build && cd build && \\\ncmake -DCMAKE_BUILD_TYPE=Release .. && \\\nmake -j6\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\nCOPY assets/entrypoint_setup.sh /\nENTRYPOINT [\"/entrypoint_setup.sh\"]\nCMD [\"terminator\"]"
}