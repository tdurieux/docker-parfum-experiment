{
  "startTime": 1674220827858,
  "endTime": 1674220829315,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-slim AS prebuild\nWORKDIR /app\n\n# Copy package metadata\nCOPY package.json yarn.lock ./\n\n# Copy all the submodules\nCOPY frontend frontend\nCOPY packages packages\n\n# Remove every file in submodules except package metadata\nRUN find packages \\! -name \"package.json\" -mindepth 2 -maxdepth 2 -print | xargs rm -rf\nRUN find frontend \\! -name \"package.json\" -mindepth 1 -maxdepth 1 -print | xargs rm -rf\n\n\nFROM node:16-slim AS builder\nWORKDIR /app\n\n# Copy all the package metadata from prebuild stage\n# This stage is time consuming. So its made sure it runs only when necessary\nCOPY --from=prebuild /app ./\n\n# Install deps\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Copy the source code\nCOPY . .\n\n# Next.js collects completely anonymous telemetry data about general usage.\n# Learn more here: https://nextjs.org/telemetry\n# Uncomment the following line in case you want to disable telemetry during the build.\nENV NEXT_TELEMETRY_DISABLED 1\n\n# build the image\nRUN yarn build && yarn cache clean;\n\n\n# Production image, copy all the files and run the server\nFROM node:16-slim AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n# Uncomment the following line in case you want to disable telemetry during runtime.\nENV NEXT_TELEMETRY_DISABLED 1\n\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\n\n# Copy the build files from the builder stage\nCOPY --from=builder --chown=nextjs:nodejs /app/frontend/next.config.js ./frontend/\nCOPY --from=builder --chown=nextjs:nodejs /app/frontend/.next/static ./frontend/.next/static\nCOPY --from=builder --chown=nextjs:nodejs /app/frontend/public ./frontend/public\n\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=builder --chown=nextjs:nodejs /app/frontend/.next/standalone ./\n\nUSER nextjs\n\n# Expose port 3000\nEXPOSE 3000\n\nENV PORT 3000\n\n# Run the server\nCMD [\"node\", \"frontend/server.js\"]\n"
}