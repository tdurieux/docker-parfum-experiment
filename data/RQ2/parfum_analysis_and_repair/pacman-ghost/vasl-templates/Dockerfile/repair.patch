diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pacman-ghost/vasl-templates/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pacman-ghost/vasl-templates/Dockerfile/repaired.Dockerfile
index 4350e0f..bf576d6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pacman-ghost/vasl-templates/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pacman-ghost/vasl-templates/Dockerfile/repaired.Dockerfile
@@ -12,18 +12,18 @@ RUN dnf -y upgrade-minimal && \
 
 # install Java
 ARG JAVA_URL=https://download.java.net/java/GA/jdk15.0.1/51f4f36ad4ef43e39d0dfdbaf6549e32/9/GPL/openjdk-15.0.1_linux-x64_bin.tar.gz
-RUN curl -s "$JAVA_URL" | tar -xz -C /usr/bin/
+RUN curl -f -s "$JAVA_URL" | tar -xz -C /usr/bin/
 
 # install Firefox
 ARG FIREFOX_URL=https://ftp.mozilla.org/pub/firefox/releases/94.0.2/linux-x86_64/en-US/firefox-94.0.2.tar.bz2
 RUN dnf install -y bzip2 xorg-x11-server-Xvfb gtk3 dbus-glib && \
-    curl -s "$FIREFOX_URL" | tar -jx -C /usr/local/ && \
+    curl -f -s "$FIREFOX_URL" | tar -jx -C /usr/local/ && \
     ln -s /usr/local/firefox/firefox /usr/bin/firefox && \
     echo "exclude=firefox" >>/etc/dnf/dnf.conf
 
 # install geckodriver
 ARG GECKODRIVER_URL=https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
-RUN curl -sL "$GECKODRIVER_URL" | tar -xz -C /usr/bin/
+RUN curl -f -sL "$GECKODRIVER_URL" | tar -xz -C /usr/bin/
 
 # clean up
 RUN dnf clean all
@@ -35,14 +35,14 @@ FROM base AS build
 # set up a virtualenv
 RUN python3 -m venv /opt/venv
 ENV PATH="/opt/venv/bin:$PATH"
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # install the application requirements
 COPY requirements.txt requirements-dev.txt /tmp/
-RUN pip3 install -r /tmp/requirements.txt
+RUN pip3 install --no-cache-dir -r /tmp/requirements.txt
 ARG CONTROL_TESTS_PORT
 RUN if [ -n "$CONTROL_TESTS_PORT" ]; then \
-    pip3 install -r /tmp/requirements-dev.txt \
+    pip3 install --no-cache-dir -r /tmp/requirements-dev.txt \
 ; fi
 
 # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@@ -58,7 +58,7 @@ WORKDIR /app
 COPY vasl_templates/ ./vasl_templates/
 COPY vassal-shim/release/vassal-shim.jar ./vassal-shim/release/
 COPY setup.py requirements.txt requirements-dev.txt LICENSE.txt ./
-RUN pip3 install --editable .
+RUN pip3 install --no-cache-dir --editable .
 
 # install the config files
 COPY vasl_templates/webapp/config/logging.yaml.example ./vasl_templates/webapp/config/logging.yaml