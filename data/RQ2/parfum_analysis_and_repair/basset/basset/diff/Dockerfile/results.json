{
  "startTime": 1674250911312,
  "endTime": 1674250911972,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 167
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 167
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN groupadd --gid 1000 python \\\n    && useradd --uid 1000 --gid python --shell /bin/bash --create-home python\n\nWORKDIR /basset/\n\nRUN apt-get update && apt-get install --no-install-recommends -y unzip wget python3 python3-pip ttf-dejavu fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf && rm -rf /var/lib/apt/lists/*;\n# libglib2 required for opencv\n# RUN apt-get update && apt-get -y install unzip wget; apt-get clean\n\n# install chrome\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n    && apt-get update -qqy \\\n    && apt-get -qqy --no-install-recommends install \\\n    ${CHROME_VERSION:-google-chrome-stable} \\\n    && rm /etc/apt/sources.list.d/google-chrome.list \\\n    && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n# install chromedriver\nARG CHROME_DRIVER_VERSION\nRUN CHROME_STRING=$(google-chrome --version) \\\n    && CHROME_VERSION_STRING=$(echo \"${CHROME_STRING}\" | grep -oP \"\\d+\\.\\d+\\.\\d+\\.\\d+\") \\\n    && CHROME_MAYOR_VERSION=$(echo \"${CHROME_VERSION_STRING%%.*}\") \\\n    && wget --no-verbose -O /tmp/LATEST_RELEASE \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAYOR_VERSION}\" \\\n    && CD_VERSION=$(cat \"/tmp/LATEST_RELEASE\") \\\n    && rm /tmp/LATEST_RELEASE \\\n    && if [ -z \"$CHROME_DRIVER_VERSION\" ]; \\\n    then CHROME_DRIVER_VERSION=\"${CD_VERSION}\"; \\\n    fi \\\n    && CD_VERSION=$(echo $CHROME_DRIVER_VERSION) \\\n    && echo \"Using chromedriver version: \"$CD_VERSION \\\n    && wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip \\\n    && rm -rf /opt/selenium/chromedriver \\\n    && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n    && rm /tmp/chromedriver_linux64.zip \\\n    && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CD_VERSION \\\n    && chmod 755 /opt/selenium/chromedriver-$CD_VERSION \\\n    && ln -fs /opt/selenium/chromedriver-$CD_VERSION /usr/bin/chromedriver\n\n# install firefox\nARG FIREFOX_VERSION=latest\nRUN FIREFOX_DOWNLOAD_URL=$(if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ]; then echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\"; else echo \"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2\"; fi) \\\n    && apt-get update -qqy \\\n    && apt-get -qqy --no-install-recommends install firefox \\\n    && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n    && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n    && apt-get -y purge firefox \\\n    && rm -rf /opt/firefox \\\n    && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n    && rm /tmp/firefox.tar.bz2 \\\n    && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n    && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n\n\n# install geckodriver\nARG GECKODRIVER_VERSION=latest\nRUN GK_VERSION=$(if [ ${GECKODRIVER_VERSION:-latest} = \"latest\" ]; then echo \"0.24.0\"; else echo $GECKODRIVER_VERSION; fi) \\\n    && echo \"Using GeckoDriver version: \"$GK_VERSION \\\n    && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GK_VERSION/geckodriver-v$GK_VERSION-linux64.tar.gz \\\n    && rm -rf /opt/geckodriver \\\n    && tar -C /opt -zxf /tmp/geckodriver.tar.gz \\\n    && rm /tmp/geckodriver.tar.gz \\\n    && mv /opt/geckodriver /opt/geckodriver-$GK_VERSION \\\n    && chmod 755 /opt/geckodriver-$GK_VERSION \\\n    && ln -fs /opt/geckodriver-$GK_VERSION /usr/bin/geckodriver\n\n\nCOPY requirements.txt run.py /basset/\nRUN pip3 install --no-cache-dir -r requirements.txt\nCOPY diff /basset/diff/\nCOPY render /basset/render/\nCOPY utils /basset/utils/\nCOPY workers /basset/workers/\n\nUSER python\n\nENTRYPOINT [\"python3\", \"-u\", \"-m\"]"
}