{
  "startTime": 1674254298718,
  "endTime": 1674254299950,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN mkdir -p /app\nWORKDIR /app\n\nENV LANG C.UTF-8\nRUN apt-get update && apt-get install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 --no-cache-dir install --upgrade pip setuptools\n\nRUN groupadd -r dev && useradd -r -g dev dev && mkdir /url-feed && chown dev:dev /url-feed && mkdir /url-feed/uwsgi\n\n# see e.g. https://github.com/janza/docker-python3-opencv/blob/master/Dockerfile\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        libswscale-dev \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev \\\n        libavformat-dev \\\n        libpq-dev \\\n        vim \\\n        ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n# OpenCV compilation requires numpy to be installed\nRUN pip install --no-cache-dir numpy\n\nENV OPENCV_VERSION=\"3.4.6\"\nRUN wget -nv https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \\\n&& unzip -q ${OPENCV_VERSION}.zip \\\n&& mkdir /app/opencv-${OPENCV_VERSION}/cmake_binary \\\n&& cd /app/opencv-${OPENCV_VERSION}/cmake_binary \\\n&& cmake -DBUILD_TIFF=ON \\\n  -DBUILD_opencv_java=OFF \\\n  -DWITH_CUDA=OFF \\\n  -DWITH_OPENGL=ON \\\n  -DWITH_OPENCL=ON \\\n  -DWITH_IPP=ON \\\n  -DWITH_TBB=ON \\\n  -DWITH_EIGEN=ON \\\n  -DWITH_V4L=ON \\\n  -DBUILD_TESTS=OFF \\\n  -DBUILD_PERF_TESTS=OFF \\\n  -DCMAKE_BUILD_TYPE=RELEASE \\\n  -DCMAKE_INSTALL_PREFIX=$(python3 -c \"import sys; print(sys.prefix)\") \\\n  -DPYTHON_EXECUTABLE=$(which python3) \\\n  -DPYTHON_INCLUDE_DIR=$(python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n  -DPYTHON_PACKAGES_PATH=$(python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") .. \\\n&& make install \\\n&& rm /app/${OPENCV_VERSION}.zip \\\n&& rm -r /app/opencv-${OPENCV_VERSION}\n\n# Python dependencies\nRUN pip3 --no-cache-dir install tensorflow==1.12.0 \\\n  asyncio-nats-client \\\n  protobuf \\\n  boto3 \\\n  configparser \\\n  psycopg2 \\\n  Pillow\n\nRUN wget https://yolo-model-configurations.s3.us-east-2.amazonaws.com/yolov3.weights\nRUN wget https://yolo-model-configurations.s3.us-east-2.amazonaws.com/yolov3.cfg\nRUN wget https://yolo-model-configurations.s3.us-east-2.amazonaws.com/database.ini\nRUN wget https://github.com/shadiakiki1986/nats-cli/releases/download/0.0.4.2/nats-amd64 -O /sbin/nats && chmod +x /sbin/nats\n\nCOPY *.py /app/\nCMD [\"python3\", \"infrared-app.py\"]\n"
}