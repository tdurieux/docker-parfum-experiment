{
  "startTime": 1674249441771,
  "endTime": 1674249442704,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 1,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\n# persistent dependencies\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n# Ghostscript is required for rendering PDF previews\n\t\tghostscript \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\n# install the PHP extensions we need (https://make.wordpress.org/hosting/handbook/handbook/server-environment/#php-extensions)\nRUN set -ex; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibmagickwand-dev \\\n\t\tlibpng-dev \\\n\t\tlibzip-dev \\\n\t; \\\n\t\\\n\tdocker-php-ext-configure gd --with-freetype --with-jpeg; \\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\t\tbcmath \\\n\t\texif \\\n\t\tgd \\\n\t\tmysqli \\\n\t\topcache \\\n\t\tzip \\\n\t; \\\n\tpecl install imagick-3.4.4; \\\n\tdocker-php-ext-enable imagick; \\\n\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n# https://wordpress.org/support/article/editing-wp-config-php/#configure-error-logging\nRUN { \\\n# https://www.php.net/manual/en/errorfunc.constants.php\n# https://github.com/docker-library/wordpress/issues/420#issuecomment-517839670\n\t\techo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \\\n\t\techo 'display_errors = Off'; \\\n\t\techo 'display_startup_errors = Off'; \\\n\t\techo 'log_errors = On'; \\\n\t\techo 'error_log = /dev/stderr'; \\\n\t\techo 'log_errors_max_len = 1024'; \\\n\t\techo 'ignore_repeated_errors = On'; \\\n\t\techo 'ignore_repeated_source = Off'; \\\n\t\techo 'html_errors = Off'; \\\n\t} > /usr/local/etc/php/conf.d/error-logging.ini\n\nRUN set -eux; \\\n\ta2enmod rewrite expires; \\\n\t\\\n# https://httpd.apache.org/docs/2.4/mod/mod_remoteip.html\n\ta2enmod remoteip; \\\n\t{ \\\n\t\techo 'RemoteIPHeader X-Forwarded-For'; \\\n# these IP ranges are reserved for \"private\" use and should thus *usually* be safe inside Docker\n\t\techo 'RemoteIPTrustedProxy 10.0.0.0/8'; \\\n\t\techo 'RemoteIPTrustedProxy 172.16.0.0/12'; \\\n\t\techo 'RemoteIPTrustedProxy 192.168.0.0/16'; \\\n\t\techo 'RemoteIPTrustedProxy 169.254.0.0/16'; \\\n\t\techo 'RemoteIPTrustedProxy 127.0.0.0/8'; \\\n\t} > /etc/apache2/conf-available/remoteip.conf; \\\n\ta2enconf remoteip; \\\n# https://github.com/docker-library/wordpress/issues/383#issuecomment-507886512\n# (replace all instances of \"%h\" with \"%a\" in LogFormat)\n\tfind /etc/apache2 -type f -name '*.conf' -exec sed -ri 's/([[:space:]]*LogFormat[[:space:]]+\"[^\"]*)%h([^\"]*\")/\\1%a\\2/g' '{}' +\n\nENV WORDPRESS_VERSION 5.4.1\nENV WORDPRESS_SHA1 9800c231828eb5cd76ba0b8aa6c1a74dfca2daff\n\nRUN set -ex; \\\n\tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\"; \\\n\techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \\\n# upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress\n\ttar -xzf wordpress.tar.gz -C /usr/src/; \\\n\trm wordpress.tar.gz; \\\n\tchown -R www-data:www-data /usr/src/wordpress\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends vim less && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar; \\\n   chmod a+x wp-cli.phar; \\\n   mv wp-cli.phar /usr/local/bin/wp\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nCOPY wordpress-data.tgz /tmp\nRUN tar -zxvf /tmp/wordpress-data.tgz -C /var/www/html && rm /tmp/wordpress-data.tgz\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n"
}