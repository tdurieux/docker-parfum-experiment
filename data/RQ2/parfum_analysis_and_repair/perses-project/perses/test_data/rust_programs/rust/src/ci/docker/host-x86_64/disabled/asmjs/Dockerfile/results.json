{
  "startTime": 1674255192289,
  "endTime": 1674255193184,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  g++ \\\n  make \\\n  ninja-build \\\n  file \\\n  curl \\\n  ca-certificates \\\n  python3 \\\n  git \\\n  cmake \\\n  sudo \\\n  gdb \\\n  xz-utils \\\n  bzip2 && rm -rf /var/lib/apt/lists/*;\n\nCOPY scripts/emscripten.sh /scripts/\nRUN bash /scripts/emscripten.sh\n\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n\nENV PATH=$PATH:/emsdk-portable\nENV PATH=$PATH:/emsdk-portable/upstream/emscripten/\nENV PATH=$PATH:/emsdk-portable/node/12.9.1_64bit/bin/\nENV BINARYEN_ROOT=/emsdk-portable/upstream/\n\nENV TARGETS=asmjs-unknown-emscripten\n\n# Use -O1 optimizations in the link step to reduce time spent optimizing JS.\nENV EMCC_CFLAGS=-O1\n\n# Emscripten installation is user-specific\nENV NO_CHANGE_USER=1\n\nENV SCRIPT python3 ../x.py --stage 2 test --host='' --target $TARGETS\n\n# This is almost identical to the wasm32-unknown-emscripten target, so\n# running with assertions again is not useful\nENV NO_DEBUG_ASSERTIONS=1\nENV NO_LLVM_ASSERTIONS=1\n"
}