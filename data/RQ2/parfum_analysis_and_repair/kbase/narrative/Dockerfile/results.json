{
  "startTime": 1674252766288,
  "endTime": 1674252767555,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile that builds a minimal container for IPython + narrative\n#\n# Requires a narrative base images that contains runtime dependencies.\n#\n# Steve Chan sychan@lbl.gov\n#\n# Copyright 2013 The Regents of the University of California,\n#                Lawrence Berkeley National Laboratory\n#                United States Department of Energy\n#          \t The DOE Systems Biology Knowledgebase (KBase)\n# Made available under the KBase Open Source License\n#\n\nFROM kbase/narrbase:6.2\n\n# These ARGs values are passed in via the docker build command\nARG BUILD_DATE\nARG VCS_REF\nARG BRANCH=develop\nARG NARRATIVE_VERSION\nARG SKIP_MINIFY\n\nEXPOSE 8888\n\n# install NodeJS 16.x (latest LTS until ~October 2022, https://nodejs.org/en/about/releases/)\n# N.b. this version of node is not available in the conda `base` environment as kbase/narrbase:6.2\n# installs ancient versions of node (6.x) and npm (3.x).\nRUN \\\n    curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    source activate base && \\\n    conda update -n base -c defaults conda && \\\n    python -m pip install --upgrade pip setuptools wheel && rm -rf /var/lib/apt/lists/*;\n\n# Copy in the narrative repo\nADD ./ /kb/dev_container/narrative\nADD ./kbase-logdb.conf /tmp/kbase-logdb.conf\nADD ./deployment/ /kb/deployment/\nWORKDIR /kb/dev_container/narrative\n\nRUN \\\n\n    mkdir -p /kb/deployment/ui-common/ && \\\n    ./src/scripts/kb-update-config -f src/config.json.templ -o /kb/deployment/ui-common/narrative_version && \\\n    # install JS deps\n    npm install -g grunt-cli && \\\n    npm install && npm run install-npm && \\\n    # Compile Javascript down into an itty-bitty ball unless SKIP_MINIFY is non-empty\n    echo Skip=$SKIP_MINIFY && \\\n    [ -n \"$SKIP_MINIFY\" ] || npm run minify && \\\n    # install the narrative and jupyter console\n    /bin/bash scripts/install_narrative_docker.sh && \\\n    cd /tmp && \\\n    mkdir /tmp/narrative && \\\n    chown -R nobody:www-data /tmp/narrative /kb/dev_container/narrative ; npm cache clean --force; find / -xdev \\( -perm -4000 \\) -type f -print -exec rm {} \\;\n\n# Set a default value for the environment variable VERSION_CHECK that gets expanded in the config.json.templ\n# into the location to check for a new narrative version. Normally we would put this in the template itself\n# but since the raw template is consumed at build time as a JSON file, a template with a default string would\n# cause JSON parsing to fail - GRRRRR!!!\nENV VERSION_CHECK /narrative_version\n\n# Set the default environment to be CI, can be overridden by passing new CONFIG_ENV setting at container start\nENV CONFIG_ENV ci\nENV DOCKER_CONTAINER true\n\nUSER nobody\n\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vcs-url=\"https://github.com/kbase/narrative.git\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.schema-version=\"1.0.0-rc1\" \\\n      us.kbase.vcs-branch=$BRANCH \\\n      us.kbase.narrative-version=$NARRATIVE_VERSION \\\n      maintainer=\"William Riehl wjriehl@lbl.gov\"\n\n# populate the config files on start up\nENTRYPOINT [\"/kb/deployment/bin/dockerize\"]\nCMD [ \"--template\", \\\n      \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/src/config.json\", \\\n      \"--template\", \\\n      \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/kbase-extension/static/kbase/config/config.json\", \\\n      \"kbase-narrative\"]\n"
}