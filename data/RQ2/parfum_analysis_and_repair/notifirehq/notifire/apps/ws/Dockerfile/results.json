{
  "startTime": 1674249658377,
  "endTime": 1674249658885,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-buster-slim\n\nWORKDIR /usr/src/app\n\nRUN npm install -g pnpm@7.3.0 --loglevel notice && npm cache clean --force;\nRUN npm i pm2 -g && npm cache clean --force;\n\nCOPY .npmrc .\nCOPY package.json .\n\nCOPY apps/ws ./apps/ws\nCOPY libs/dal ./libs/dal\nCOPY libs/shared ./libs/shared\nCOPY libs/testing ./libs/testing\n\nCOPY tsconfig.json .\nCOPY tsconfig.base.json .\n\nCOPY nx.json .\nCOPY pnpm-workspace.yaml .\nCOPY pnpm-lock.yaml .\n\nRUN pnpm install\nRUN pnpm build:ws\n\nWORKDIR /usr/src/app/apps/ws\nRUN cp src/.example.env dist/src/.env\nRUN cp src/.env.test dist/src/.env.test\nRUN cp src/.env.development dist/src/.env.development\nRUN cp src/.env.production dist/src/.env.production\n\nCMD [ \"pm2-runtime\", \"dist/src/main.js\" ]\n"
}