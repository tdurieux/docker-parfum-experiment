{
  "startTime": 1674255394867,
  "endTime": 1674255395441,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM vsiri/sattel_voxel_globe:celery\nMAINTAINER Andy Neff <andrew.neff@visionsystemsinc.com>\n\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\n\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \\\n    NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 && \\\n    apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub && \\\n    apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub && \\\n    echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub && \\\n    echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\n\nENV CUDA_VERSION 7.5\nLABEL com.nvidia.cuda.version=\"7.5\"\n\nENV CUDA_PKG_VERSION 7-5=7.5-18\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-cudart-$CUDA_PKG_VERSION && \\\n    ln -s cuda-$CUDA_VERSION /usr/local/cuda && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf && \\\n    echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf && \\\n    echo libnvidia-opencl.so.1 > /etc/OpenCL/vendors/nvidia.icd && \\\n    ldconfig\n\n# RUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n#     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}\n\nRUN build_deps=\"curl ca-certificates gcc make g++ unzip libdevil-dev libglew-dev freeglut3-dev \\\n        cuda-misc-headers-$CUDA_PKG_VERSION \\\n        cuda-cudart-dev-$CUDA_PKG_VERSION \\\n        cuda-core-$CUDA_PKG_VERSION \\\n        cuda-command-line-tools-$CUDA_PKG_VERSION \\\n        cuda-driver-dev-$CUDA_PKG_VERSION\" && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        libdevil1c2 freeglut3 libglew1.10 libgtk2.0 ${build_deps} && \\\n    curl -f -LO http://grail.cs.washington.edu/projects/mcba/pba_v1.0.5.zip && \\\n    unzip pba_v1.0.5.zip && \\\n    cd pba && \\\n    make && \\\n    cp bin/driver /usr/local/bin/ && \\\n    cp bin/libpba.so /usr/local/lib && \\\n    cd .. && \\\n    curl -f -L https://wwwx.cs.unc.edu/~ccwu/cgi-bin/siftgpu.cgi -o siftgpu.zip && \\\n    unzip siftgpu.zip && \\\n    cd SiftGPU && \\\n    make siftgpu_enable_cuda=1 && \\\n    cp bin/SimpleSIFT /usr/local/bin && \\\n    cp bin/*.so /usr/local/lib && \\\n    cd .. && \\\n    curl -f -LO http://ccwu.me/vsfm/download/VisualSFM_linux_64bit.zip && \\\n    unzip VisualSFM_linux_64bit.zip && \\\n    cd vsfm && \\\n    make && \\\n    cp bin/VisualSFM /usr/local/bin/ && \\\n    cd .. && \\\n    DEBIAN_FRONTEND=noninteractive apt-get purge -y --auto-remove ${build_deps} && \\\n    rm -rf /var/lib/apt/lists/* *.zip vsfm SiftGPU pba"
}