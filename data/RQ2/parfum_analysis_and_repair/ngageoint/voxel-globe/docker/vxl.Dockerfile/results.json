{
  "startTime": 1674252668640,
  "endTime": 1674252669623,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        cmake python python-dev gcc g++ curl bzip2 rsync unzip ca-certificates \\\n        libglew1.10 libglu1-mesa libxmu6 libxi6 freeglut3 libgtk2.0-0 \\\n        libglew-dev libglu1-mesa-dev libxmu-dev libxi-dev freeglut3-dev libgtk2.0-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /tmp/amd && \\\n    cd /tmp/amd && \\\n    curl -f -LOk https://vsi-ri.com/staging/AMD-APP-SDKInstaller-v3.0.130.136-GA-linux64.tar.bz2 && \\\n    tar jxf AMD*.tar.bz2 && \\\n    ./AMD*.sh -- -s -a 'yes' && \\\n    cd / && \\\n    rm -rf /tmp/amd && \\\n    echo /opt/AMDAPPSDK*/lib/x86_64/sdk > /etc/ld.so.conf.d/amdapp_x86_64.conf && \\\n    ldconfig && rm AMD*.tar.bz2\n\nRUN cd /usr/bin && \\\n    curl -f -LO https://github.com/ninja-build/ninja/releases/download/v1.7.1/ninja-linux.zip && \\\n    unzip ninja-linux.zip && rm ninja-linux.zip\n\n#Similar to https://github.com/NVIDIA/nvidia-docker/pull/146, so we somehow hardcode libGL.so?\nRUN mkdir /vxl_hack && \\\n    ln -s /usr/local/nvidia/lib64/libGL.so.1 /vxl_hack/libGL.so\n\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\n\n#And install the nvidia icd so that nvidia works in opencl\nRUN echo libnvidia-opencl.so.1 > /etc/OpenCL/vendors/nvidia.icd && \\\n    echo '/usr/local/nvidia/lib64\\n/vxl_hack\\n/usr/local/nvidia/lib' > /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH /usr/local/nvidia/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/vxl_hack:${LD_LIBRARY_PATH}\n\nENV VIP_VXL_BUILD_TYPE=Release\nENV VIP_VXL_CMAKE_ENTRIES=-DCMAKE_BUILD_TYPE=${VIP_VXL_BUILD_TYPE}\n\nADD vxl_entrypoint.bsh /\n\nENTRYPOINT [\"/vxl_entrypoint.bsh\"]\n\nCMD [\"vxl\"]"
}