{
  "startTime": 1674251433842,
  "endTime": 1674251434633,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nLABEL \\\ndescription=\"Container for running a Hootenanny command via flask\" \\\nmaintainer=\"matthew.jackson@maxar.com\" \\\nname=\"Hootenanny External Command\" \\\nvendor=\"Maxar\"\n\n\nENV container=docker\nENV LANG=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\n\nRUN yum install -y wget curl sudo vim yum-utils epel-release && \\\n yum-config-manager --add-repo https://hoot-repo.s3.amazonaws.com/el7/master/hoot.repo && \\\n yum-config-manager --add-repo https://geoint-deps.s3.amazonaws.com/el7/stable/geoint-deps.repo && rm -rf /var/cache/yum\n\n# Installing this to make sure that the one in the Postgresql repo DOES NOT get installed\nRUN yum install -y CGAL && rm -rf /var/cache/yum\n\nRUN yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm && rm -rf /var/cache/yum\n\n# RUN yum -y update && \\\nRUN yum install -y hootenanny-core && rm -rf /var/cache/yum\nRUN pip3 install --no-cache-dir flask flask_shell2http flask-executor\n\n# Put the entrypoint & flask scripts into the container\nCOPY scripts /home/scripts\n\nENV FLASK_APP=/home/scripts/CommandsAcrossContainer.py\nENV FLASK_ENV=development\n\nRUN yum -y clean all && rm -rf /var/cache/yum\n\nWORKDIR /home\nENTRYPOINT [ \"/home/scripts/hoot_docker_entrypoint.sh\" ]\n"
}