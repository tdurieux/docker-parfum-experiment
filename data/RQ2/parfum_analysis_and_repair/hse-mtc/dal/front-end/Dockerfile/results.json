{
  "startTime": 1674215662750,
  "endTime": 1674215663699,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Step 1.\n## Build front-end app.\n\n# Latest Node image\nFROM node:16-alpine AS builder\n\n# Install tools that npm needs\nRUN apk add --no-cache python3 make g++\n\n# Set working directory\nWORKDIR /front-end\n\n# Copy package[-lock].json\nCOPY front-end/package*.json ./\n\n# Install packages\nRUN npm install --loglevel=error && npm cache clean --force;\n\n# Copy everything else\nADD front-end .\n\n# Reference build arguments\nARG VUE_APP_BACK_END_HOST\nARG VUE_APP_BACK_END_PORT\n\n# Build front-end in directory `/front-end/dist`\nRUN npm run build:production --loglevel=error\n\n### Step 2.\n## Serve build.\n\n# Latest Nginx image\nFROM nginx:stable-alpine\n\n# Install bash for tools\nRUN apk add --no-cache bash\n\n# Copy tools\nCOPY tools tools\n\n# Copy built front-end app\nCOPY --from=builder /front-end/dist /usr/share/nginx/html\n\n# Expose port\nEXPOSE 80\n"
}