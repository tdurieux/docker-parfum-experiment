{
  "startTime": 1674251566860,
  "endTime": 1674251567737,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 128
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{{\n  var mavenRepo = fp.config.base.mavenRepo;\n  var mavenVersion = fp.config.base.version.maven;\n}}FROM {{= fp.config.base.from }}\n\nARG EXPOSE_PORT=8080\nEXPOSE ${EXPOSE_PORT}\n\nENV JOLOKIA_VERSION=\"{{= fp.config.base.version.jolokia }}\" \\\n    PROMETHEUS_JMX_EXPORTER_VERSION=\"{{= fp.config.base.version.jmxexporter }}\" \\\n    PATH=$PATH:\"/usr/local/s2i\" \\\n    AB_JOLOKIA_PASSWORD_RANDOM=\"true\" \\\n    AB_JOLOKIA_AUTH_OPENSHIFT=\"true\" \\\n    JAVA_MAJOR_VERSION=\"{{= fp.config.base.version.javaMajor}}\" \\\n    JAVA_DATA_DIR=\"/deployments/data\"\n\n# Some version information\nLABEL io.fabric8.s2i.version.maven=\"{{= fp.config.base.version.maven }}\" \\\n      io.fabric8.s2i.version.jolokia=\"{{= fp.config.base.version.jolokia }}\" \\\n      io.fabric8.s2i.version.prometheus.jmx_exporter=\"{{= fp.config.base.version.jmxexporter }}\" \\\n      io.k8s.description=\"Platform for building and running plain Java applications (fat-jar and flat classpath)\" \\\n      io.k8s.display-name=\"Java Applications\" \\\n      io.openshift.tags=\"builder,java\" \\\n      io.openshift.s2i.scripts-url=\"image:///usr/local/s2i\" \\\n      io.openshift.s2i.destination=\"/tmp\" \\\n      org.jboss.deployments-dir=\"/deployments\" \\\n      com.redhat.deployments-dir=\"/deployments\" \\\n      com.redhat.dev-mode=\"JAVA_DEBUG:false\" \\\n      com.redhat.dev-mode.port=\"JAVA_DEBUG_PORT:5005\"\n\n# Temporary switch to root\nUSER root\n\n\n# Install Java package & download Maven from Apache\nRUN yum -y update \\\n  && yum install -y --setopt=skip_missing_names_on_install=False \\\n       unzip rsync \\\n       java-{{= fp.config.base.version.javaPackage}}-openjdk{{= fp.config.base.version.java}} \\\n       java-{{= fp.config.base.version.javaPackage}}-openjdk-devel{{= fp.config.base.version.java}} \\\n  && yum clean all \\\n  && curl -f https://archive.apache.org/dist/maven/maven-3/{{= mavenVersion }}/binaries/apache-maven-{{= mavenVersion }}-bin.tar.gz | \\\n    tar -xzf - -C /opt \\\n  && ln -s /opt/apache-maven-{{= mavenVersion }} /opt/maven \\\n  && ln -s /opt/maven/bin/mvn /usr/bin/mvn \\\n  && groupadd -r jboss -g 1000 \\\n  && useradd -u 1000 -r -g jboss -m -d /opt/jboss -s /sbin/nologin -c \"JBoss user\" jboss \\\n  && chmod 755 /opt/jboss && rm -rf /var/cache/yum\n\nENV JAVA_HOME /etc/alternatives/jre\n\n\n# Use /dev/urandom to speed up startups & Add jboss user to the root group\nRUN echo securerandom.source=file:/dev/urandom >> {{= fp.config.base.javaSecurity }} \\\n && usermod -g root -G jboss jboss\n\n{{=\n  fp.block(\"jmxexporter\", \"install\",\n          { dest: \"/opt/prometheus/prometheus-opts\",\n            userGroupMode: \"root\",\n            version: fp.config.base.version.jmxexporter }) }}\n\n{{=\n  fp.block(\"jolokia\", \"install\",\n          { dest: \"/opt/jolokia/jolokia-opts\",\n            mavenRepo: mavenRepo,\n            userGroupMode: \"root\",\n            version: fp.config.base.version.jolokia }) }}\n\n# S2I scripts + README\nCOPY s2i /usr/local/s2i\nRUN chmod 755 /usr/local/s2i/*\nADD README.md /usr/local/s2i/usage.txt\n\n{{= fp.block(\"run-java-sh\",\"copy\",{dest: \"/opt/run-java\"}) }}\n# Adding run-env.sh to set app dir\nCOPY run-env.sh /opt/run-java/run-env.sh\nRUN chmod 755 /opt/run-java/run-env.sh\n\n\n# Copy licenses\nRUN mkdir -p /opt/fuse/licenses\nCOPY licenses.css /opt/fuse/licenses\nCOPY licenses.xml /opt/fuse/licenses\nCOPY licenses.html /opt/fuse/licenses\nCOPY apache_software_license_version_2.0-apache-2.0.txt /opt/fuse/licenses\n\n\n# Necessary to permit running with a randomised UID\nRUN mkdir -p /deployments/data \\\n && chmod -R \"g+rwX\" /deployments \\\n && chown -R jboss:root /deployments \\\n && chmod -R \"g+rwX\" {{= fp.config.base.home }} \\\n && chown -R jboss:root {{= fp.config.base.home }} \\\n && chmod 664 /etc/passwd\n\n# S2I scripts rely on {{= fp.config.base.home }} as working directory\nWORKDIR {{= fp.config.base.home }}\n\n# S2I requires a numeric, non-0 UID. This is the UID for the jboss user in the base image\nUSER 1000\nRUN mkdir -p /opt/jboss/.m2\nCOPY settings.xml /opt/jboss/.m2/settings.xml\n\n\n# Use the run script as default since we are working as an hybrid image which can be\n# used directly to. (If we were a plain s2i image we would print the usage info here)\nCMD [ \"/usr/local/s2i/run\" ]\n"
}