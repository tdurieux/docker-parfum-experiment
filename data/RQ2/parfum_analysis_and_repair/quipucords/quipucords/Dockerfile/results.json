{
  "startTime": 1674250276918,
  "endTime": 1674250277606,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM redhat/ubi8\n\nENV DJANGO_DB_PATH=/var/data/\nENV DJANGO_DEBUG=False\nENV DJANGO_LOG_FILE=/var/log/app.log\nENV DJANGO_LOG_FORMATTER=verbose\nENV DJANGO_LOG_HANDLERS=console,file\nENV DJANGO_LOG_LEVEL=INFO\nENV DJANGO_SECRET_PATH=/var/data/secret.txt\nENV LANG=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV PATH=\"/opt/venv/bin:${PATH}\"\nENV PRODUCTION=True\nENV PYTHONPATH=/app/quipucords\nENV QUIPUCORDS_LOG_LEVEL=INFO\n\nRUN dnf -yq install python39 make openssh-clients glibc-langpack-en git &&\\\n    dnf clean all &&\\\n    python3 -m venv /opt/venv\n\n\nRUN pip install --no-cache-dir --upgrade pip wheel\n\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Fetch UI code\nCOPY Makefile .\nARG UI_RELEASE=0.9.3\nRUN make fetch-ui -e QUIPUCORDS_UI_RELEASE=${UI_RELEASE}\n\n# Create /etc/ssl/qpc\nCOPY deploy/ssl/* /etc/ssl/qpc/\n\n# Create /deploy\nCOPY deploy/*  /deploy/\n\n# Create log directories\nVOLUME /var/log\n\n# Create /var/data\nRUN mkdir -p /var/data\nVOLUME /var/data\n\n# Create /etc/ansible/roles/\nRUN mkdir -p /etc/ansible/roles/\nCOPY quipucords/scanner/network/runner/roles/ /etc/ansible/roles/\nVOLUME /etc/ansible/roles/\n\n# Set production environment\nARG BUILD_COMMIT=master\nENV QUIPUCORDS_COMMIT=$BUILD_COMMIT\n\n# Copy server code\nCOPY . .\n\n# Install quipucords as package\nRUN pip install --no-cache-dir -v -e .\n\n# Collect static files\nRUN make server-static\n\nEXPOSE 443\nCMD [\"/bin/bash\", \"/deploy/docker_run.sh\"]\n"
}