{
  "startTime": 1674251904909,
  "endTime": 1674251906190,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 83,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# #==========================================================================\n\nFROM tensorflow/tensorflow:nightly-devel\n\n# Get the tensorflow models research directory, and move it into tensorflow\n# source folder to match recommendation of installation\nRUN git clone --depth 1 https://github.com/tensorflow/models.git && \\\n    mv models /tensorflow/models\n\n\n# Install gcloud and gsutil commands\n# https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && rm -rf /var/lib/apt/lists/*;\n\n\n# Install the Tensorflow Object Detection API from here\n# https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md\n\n# Install object detection api dependencies\nRUN apt-get install --no-install-recommends -y protobuf-compiler python-pil python-lxml python-tk && \\\n    pip install --no-cache-dir Cython && \\\n    pip install --no-cache-dir contextlib2 && \\\n    pip install --no-cache-dir jupyter && \\\n    pip install --no-cache-dir matplotlib && rm -rf /var/lib/apt/lists/*;\n\n# Install pycocoapi\nRUN git clone --depth 1 https://github.com/cocodataset/cocoapi.git && \\\n    cd cocoapi/PythonAPI && \\\n    make -j8 && \\\n    cp -r pycocotools /tensorflow/models/research && \\\n    cd ../../ && \\\n    rm -rf cocoapi\n\n# Get protoc 3.0.0, rather than the old version already in the container\nRUN curl -f -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" && \\\n    unzip protoc-3.0.0-linux-x86_64.zip -d proto3 && \\\n    mv proto3/bin/* /usr/local/bin && \\\n    mv proto3/include/* /usr/local/include && \\\n    rm -rf proto3 protoc-3.0.0-linux-x86_64.zip\n\n# Run protoc on the object detection repo\nRUN cd /tensorflow/models/research && \\\n    protoc object_detection/protos/*.proto --python_out=.\n\n# Set the PYTHONPATH to finish installing the API\nENV PYTHONPATH $PYTHONPATH:/tensorflow/models/research:/tensorflow/models/research/slim\n\n\n# Install wget (to make life easier below) and editors (to allow people to edit\n# the files inside the container)\nRUN apt-get install --no-install-recommends -y wget vim emacs nano && rm -rf /var/lib/apt/lists/*;\n\n\n# Grab various data files which are used throughout the demo: dataset,\n# pretrained model, and pretrained TensorFlow Lite model. Install these all in\n# the same directories as recommended by the blog post.\n\n# Pets example dataset\nRUN mkdir -p /tmp/pet_faces_tfrecord/ && \\\n    cd /tmp/pet_faces_tfrecord && \\\n    curl -f \"https://download.tensorflow.org/models/object_detection/pet_faces_tfrecord.tar.gz\" | tar xzf -\n\n# Pretrained model\n# This one doesn't need its own directory, since it comes in a folder.\nRUN cd /tmp && \\\n    curl -f -O \"http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\" && \\\n    tar xzf ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz && \\\n    rm ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\n\n# Trained TensorFlow Lite model. This should get replaced by one generated from\n# export_tflite_ssd_graph.py when that command is called.\nRUN cd /tmp && \\\n    curl -f -L -o tflite.zip \\\n    https://storage.googleapis.com/download.tensorflow.org/models/tflite/frozengraphs_ssd_mobilenet_v1_0.75_quant_pets_2018_06_29.zip && \\\n    unzip tflite.zip -d tflite && \\\n    rm tflite.zip\n\n\n# Install Android development tools\n# Inspired by the following sources:\n# https://github.com/bitrise-docker/android/blob/master/Dockerfile\n# https://github.com/reddit/docker-android-build/blob/master/Dockerfile\n\n# Set environment variables\nENV ANDROID_HOME /opt/android-sdk-linux\nENV ANDROID_NDK_HOME /opt/android-ndk-r14b\nENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\n\n# Install SDK tools\nRUN cd /opt && \\\n    curl -f -OL https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip && \\\n    unzip sdk-tools-linux-4333796.zip -d ${ANDROID_HOME} && \\\n    rm sdk-tools-linux-4333796.zip\n\n# Accept licenses before installing components, no need to echo y for each component\n# License is valid for all the standard components in versions installed from this file\n# Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n\n# Install platform tools, SDK platform, and other build tools\nRUN yes | sdkmanager \\\n    \"tools\" \\\n    \"platform-tools\" \\\n    \"platforms;android-27\" \\\n    \"platforms;android-23\" \\\n    \"build-tools;27.0.3\" \\\n    \"build-tools;23.0.3\"\n\n# Install Android NDK (r14b)\nRUN cd /opt && \\\n    curl -f -L -o android-ndk.zip https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip && \\\n    unzip -q android-ndk.zip && \\\n    rm -f android-ndk.zip\n\n# Configure the build to use the things we just downloaded\nRUN cd /tensorflow && \\\n    printf '\\n\\nn\\ny\\nn\\nn\\nn\\ny\\nn\\nn\\nn\\nn\\nn\\nn\\n\\ny\\n%s\\n\\n\\n' ${ANDROID_HOME} | ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\n\nWORKDIR /tensorflow\n"
}