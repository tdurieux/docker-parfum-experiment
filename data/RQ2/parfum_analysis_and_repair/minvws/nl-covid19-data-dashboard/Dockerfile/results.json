{
  "startTime": 1674216815796,
  "endTime": 1674216816868,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 3,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 3,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 3,
        "columnEnd": 15
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 3,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 3,
        "columnEnd": 73
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 3,
        "columnEnd": 93
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 3,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 19,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 72,
        "columnEnd": 88
      }
    }
  ],
  "repairedDockerfile": "# Install dependencies only when needed\nFROM node:lts-alpine AS deps\n\nENV NODE_ENV=\"production\"\nENV NEXT_TELEMETRY_DISABLED=1\n\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\nCOPY package.json yarn.lock .yarnrc.yml ./\nCOPY ./.yarn/releases ./.yarn/releases\nCOPY ./.yarn/plugins ./.yarn/plugins\nCOPY packages/app/package.json ./packages/app/\nCOPY packages/cli/package.json ./packages/cli/\nCOPY packages/cms/package.json ./packages/cms/\nCOPY packages/common/package.json ./packages/common/\nCOPY packages/icons/package.json ./packages/icons/\nRUN apk add --no-cache --virtual \\\n      build-dependencies \\\n      python3 \\\n      g++ \\\n      build-base \\\n      cairo-dev \\\n      jpeg-dev \\\n      pango-dev \\\n      musl-dev \\\n      giflib-dev \\\n      pixman-dev \\\n      pangomm-dev \\\n      libjpeg-turbo-dev \\\n      freetype-dev \\\n    && yarn install \\\n    && apk del build-dependencies \\\n    && apk add --no-cache \\\n      cairo \\\n      jpeg \\\n      pango \\\n      musl \\\n      giflib \\\n      pixman \\\n      pangomm \\\n      libjpeg-turbo \\\n      freetype && yarn cache clean;\n\n# Layer cache for rebuilds without sourcecode changes.\n# This relies on the JSONS being downloaded by the builder.\nFROM deps as builder\nCOPY . .\nRUN yarn workspace @corona-dashboard/common build \\\n&& yarn workspace @corona-dashboard/cli generate-data-types \\\n&& yarn workspace @corona-dashboard/icons build \\\n&& yarn test:ci && yarn cache clean;\n\n# Map arguments to environment variables\nARG ARG_NEXT_PUBLIC_SANITY_DATASET\nARG ARG_NEXT_PUBLIC_SANITY_PROJECT_ID\nARG ARG_NEXT_PUBLIC_COMMIT_ID\nARG ARG_NEXT_PUBLIC_PHASE=\"production\"\nARG ARG_NEXT_PUBLIC_HOT_RELOAD_LOKALIZE=0\nARG ARG_API_URL\n\nENV NEXT_PUBLIC_SANITY_DATASET=$ARG_NEXT_PUBLIC_SANITY_DATASET\nENV NEXT_PUBLIC_SANITY_PROJECT_ID=$ARG_NEXT_PUBLIC_SANITY_PROJECT_ID\nENV NEXT_PUBLIC_COMMIT_ID=$ARG_NEXT_PUBLIC_COMMIT_ID\nENV NEXT_PUBLIC_PHASE=$ARG_NEXT_PUBLIC_PHASE\nENV NEXT_PUBLIC_HOT_RELOAD_LOKALIZE=ARG_NEXT_PUBLIC_HOT_RELOAD_LOKALIZE\nENV API_URL=$ARG_API_URL\n\n# Layer that always gets executed\nFROM builder\n\n# Yarn download uses the API_URL env variable to download the zip with JSONs from the provided URL.\nRUN yarn download \\\n&& yarn workspace @corona-dashboard/cli validate-json-all \\\n&& yarn workspace @corona-dashboard/cli validate-last-values --fail-early \\\n&& yarn workspace @corona-dashboard/cms lokalize:import --dataset=$NEXT_PUBLIC_SANITY_DATASET \\\n&& yarn workspace @corona-dashboard/app build \\\n&& mkdir -p /app/packages/app/public/images/choropleth \\\n&& addgroup -g 1001 -S nodejs \\\n&& adduser -S nextjs -u 1001 \\\n&& chown -R nextjs:nodejs /app/packages/app/.next \\\n&& chown -R nextjs:nodejs /app/packages/app/public/images/choropleth && yarn cache clean;\n\nUSER nextjs\n\nCMD [\"yarn\", \"start\"]\n"
}