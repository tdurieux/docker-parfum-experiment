diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opveclib/opveclib/docker/Dockerfile.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opveclib/opveclib/docker/Dockerfile.cpu/repaired.Dockerfile
index 9992ee0..d07ca37 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opveclib/opveclib/docker/Dockerfile.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opveclib/opveclib/docker/Dockerfile.cpu/repaired.Dockerfile
@@ -8,7 +8,7 @@
 # on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 # the specific language governing permissions and limitations under the License.
 
-# Start from ubuntu 14.04 
+# Start from ubuntu 14.04
 FROM ubuntu:14.04
 
 MAINTAINER Karen Brems <karen.brems@hpe.com>
@@ -20,7 +20,7 @@ ENV https_proxy ${proxy}
 
 # install dependencies
 # install nose2 for python 2 so we can run OVL tests
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         curl \
         g++ \
         python-numpy \
@@ -32,15 +32,15 @@ RUN apt-get update && apt-get install -y \
     rm -rf /var/lib/apt/lists/*
 
 # get pip2 and pip3
-# note, this generates a warning due to missing ca cert. 
+# note, this generates a warning due to missing ca cert.
 # need to figure out how to get ssl certs inside docker or just ignore with curl -k option?
-RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \
     python get-pip.py && \
     python3 get-pip.py && \
     rm get-pip.py
 
 # install nose2 for python 3
-RUN pip3 install nose2
+RUN pip3 install --no-cache-dir nose2
 
 # Install TensorFlow CPU version for both python2.7 and python 3.4.
 ENV TENSORFLOW_VERSION 0.11.0
@@ -63,7 +63,7 @@ WORKDIR /usr/opveclib
 
 # install sphinx so we can run doctest
 # note we use the python3 version here and the python2 version for gpu to get better coverage
-RUN pip3 install -U sphinx
+RUN pip3 install --no-cache-dir -U sphinx
 
 # copy opveclib source that was already cloned from github via jenkins
 COPY opveclib /usr/opveclib/opveclib