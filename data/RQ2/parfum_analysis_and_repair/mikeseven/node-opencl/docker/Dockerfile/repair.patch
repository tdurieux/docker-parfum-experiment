diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mikeseven/node-opencl/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mikeseven/node-opencl/docker/Dockerfile/repaired.Dockerfile
index 9d2283d..43ff8fa 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mikeseven/node-opencl/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mikeseven/node-opencl/docker/Dockerfile/repaired.Dockerfile
@@ -4,31 +4,31 @@ MAINTAINER Dan Liew <daniel.liew@imperial.ac.uk>, Ioweb <contact@ioweb.fr>
 ##### INSTRUCTIONS
 #
 # You need to download AMD APP SDK and put it in the same folder as the Dockerfile
-# with the name : 
+# with the name :
 # amd-app-sdk.tar.bz2
 #
 #####
 
 RUN apt-get update
-RUN apt-get -y install software-properties-common python-software-properties 
-RUN apt-get update && apt-get -y install curl
-RUN apt-get -y install gcc g++ gdb
-RUN apt-get -y --no-install-recommends install cmake mercurial git make subversion
-RUN apt-get -y install python python-dev python-pip vim wget openssh-server
+RUN apt-get -y --no-install-recommends install software-properties-common python-software-properties && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get -y --no-install-recommends install curl && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install gcc g++ gdb && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install cmake mercurial git make subversion && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install python python-dev python-pip vim wget openssh-server && rm -rf /var/lib/apt/lists/*;
 
 RUN \
   cd /tmp && \
-  wget http://nodejs.org/dist/node-latest.tar.gz && \
+  wget https://nodejs.org/dist/node-latest.tar.gz && \
   tar xvzf node-latest.tar.gz && \
   rm -f node-latest.tar.gz && \
   cd node-v* && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   CXX="g++ -Wno-unused-local-typedefs" make && \
   CXX="g++ -Wno-unused-local-typedefs" make install && \
   cd /tmp && \
   rm -rf /tmp/node-v* && \
   npm install -g npm && \
-  echo -e '\n# Node.js\nexport PATH="node_modules/.bin:$PATH"' >> /root/.bashrc
+  echo -e '\n# Node.js\nexport PATH="node_modules/.bin:$PATH"' >> /root/.bashrc && npm cache clean --force;
 
 WORKDIR /root
 
@@ -50,13 +50,13 @@ RUN echo "/usr/lib64/OpenCL/vendors/amd" > /etc/ld.so.conf.d/opencl-vendor-amd.c
 RUN ldconfig
 RUN ln -s /usr/lib64/OpenCL/vendors/amd/libOpenCL.so /usr/lib64/libOpenCL.so
 RUN cp /etc/OpenCL/amdocl64.icd /etc/OpenCL/vendors
-RUN ln -s /opt/AMDAPPSDK-*/include/CL /usr/include/ 
+RUN ln -s /opt/AMDAPPSDK-*/include/CL /usr/include/
 
 # Provide easy access to root if needed
 RUN echo "root:root" | chpasswd
 
 # NodeJS
-RUN npm install -g mocha node-gyp eslint
+RUN npm install -g mocha node-gyp eslint && npm cache clean --force;
 
 # Add a non root user
 RUN useradd -m aasdk