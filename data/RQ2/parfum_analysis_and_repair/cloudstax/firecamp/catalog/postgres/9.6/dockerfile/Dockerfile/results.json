{
  "startTime": 1674248709990,
  "endTime": 1674248711541,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 18,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nRUN set -ex; \\\n  if ! command -v gpg > /dev/null; then \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n      gnupg \\\n      dirmngr \\\n    ; \\\n    rm -rf /var/lib/apt/lists/*; \\\n  fi\n\n# explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 && useradd -m -r -g postgres --uid=999 postgres\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.10\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget && rm -rf -d\n\n\n# make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN set -eux; \\\n  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \\\n  # if this file exists, we're likely in \"debian:xxx-slim\", and locales are thus being excluded so we need to remove that exclusion (since we need locales)\n    grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \\\n    sed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \\\n    ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \\\n  fi; \\\n  apt-get update; apt-get install --no-install-recommends -y locales; rm -rf /var/lib/apt/lists/*; \\\n  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\n# install \"nss_wrapper\" in case we need to fake \"/etc/passwd\" and \"/etc/group\" (especially for OpenShift)\n# https://github.com/docker-library/postgres/issues/359\n# https://cwrap.org/nss_wrapper.html\nRUN set -eux; \\\n  apt-get update; \\\n  apt-get install -y --no-install-recommends libnss-wrapper; \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN set -ex; \\\n# pub   4096R/ACCC4CF8 2011-10-13 [expires: 2019-07-02]\n#       Key fingerprint = B97B 0AFC AA1A 47F0 44F2  44A0 7FCC 7D46 ACCC 4CF8\n# uid                  PostgreSQL Debian Repository\n  key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  gpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \\\n  rm -rf \"$GNUPGHOME\"; \\\n  apt-key list\n\nENV PG_MAJOR 9.6\nENV PG_VERSION 9.6.9-2.pgdg90+1\n\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list\n\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y postgresql-common \\\n\t&& sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tdnsutils \\\n\t\tpostgresql-$PG_MAJOR=$PG_VERSION \\\n\t\tpostgresql-contrib-$PG_MAJOR=$PG_VERSION \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n\t&& ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n\t&& sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\n\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod g+s /var/run/postgresql\n\nENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH\n\nCOPY waitdns.sh /\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\", \"postgres\"]\n\nEXPOSE 5432\n"
}