{
  "startTime": 1674250640576,
  "endTime": 1674250641648,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jre-alpine\n\n# Install required packages\nRUN apk add --no-cache \\\n  bash \\\n  su-exec\n\nENV ZOO_USER=zookeeper\n\nRUN set -x \\\n  && adduser -D \"$ZOO_USER\"\n\nARG GPG_KEY=767E7473\nARG DISTRO_NAME=zookeeper-3.4.13\n\n\n# Download Apache Zookeeper, verify its PGP signature, untar and clean up\nRUN set -ex; \\\n    apk add --no-cache --virtual .build-deps \\\n        ca-certificates \\\n        gnupg \\\n        libressl; \\\n    wget -q \"https://www.apache.org/dist/zookeeper/$DISTRO_NAME/$DISTRO_NAME.tar.gz\"; \\\n    wget -q \"https://www.apache.org/dist/zookeeper/$DISTRO_NAME/$DISTRO_NAME.tar.gz.asc\"; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-key \"$GPG_KEY\" || \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEY\"; \\\n    gpg --batch --verify \"$DISTRO_NAME.tar.gz.asc\" \"$DISTRO_NAME.tar.gz\"; \\\n    tar -xzf \"$DISTRO_NAME.tar.gz\"; \\\n    mv \"$DISTRO_NAME/conf/\"* \"$ZOO_CONF_DIR\"; \\\n    rm -rf \"$GNUPGHOME\" \"$DISTRO_NAME.tar.gz\" \"$DISTRO_NAME.tar.gz.asc\"; \\\n    apk del .build-deps\n\nENV PATH=$PATH:/$DISTRO_NAME/bin\n\n# set the JVM TTL.\nRUN sed -i 's/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/g' $JAVA_HOME/lib/security/java.security\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\", \"zkServer.sh\", \"start-foreground\"]\n\n# expose client port, peer connect port, leader elect port\nEXPOSE 2181 2888 3888\n# expose jmx port\nEXPOSE 2191\n"
}