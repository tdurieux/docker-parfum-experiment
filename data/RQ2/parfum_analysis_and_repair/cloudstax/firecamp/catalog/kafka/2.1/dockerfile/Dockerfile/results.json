{
  "startTime": 1674250797199,
  "endTime": 1674250797896,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jre-alpine\n\n# Install required packages\nRUN apk add --no-cache \\\n  bash \\\n  su-exec\n\nENV KAFKA_USER=kafka\n\nRUN set -x \\\n  && adduser -D \"$KAFKA_USER\"\n\nENV KAFKA_VERSION 2.1.0\nENV KAFKA_SCALA_VERSION 2.12\nENV KAFKA_RELEASE kafka_${KAFKA_SCALA_VERSION}-${KAFKA_VERSION}\n\n# Download Kafka Zookeeper, verify its digest integrity, untar and clean up\nRUN set -x \\\n  && wget -q https://www.us.apache.org/dist/kafka/${KAFKA_VERSION}/${KAFKA_RELEASE}.tgz \\\n  && tar -zx -C / -f ${KAFKA_RELEASE}.tgz \\\n  && mv /${KAFKA_RELEASE} /kafka \\\n  && chown -R $KAFKA_USER /kafka \\\n  && rm -f ${KAFKA_RELEASE}.tgz\n\nENV PATH=$PATH:/kafka/bin\n\n# set the JVM TTL.\n# https://www.confluent.io/blog/design-and-deployment-considerations-for-deploying-apache-kafka-on-aws/\nRUN sed -i 's/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/g' $JAVA_HOME/lib/security/java.security\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\", \"kafka-server-start.sh\", \"/kafka/config/server.properties\"]\n\n# Kafka listen port\nEXPOSE 9092\n# Kafka JMX port\nEXPOSE 9093\n"
}