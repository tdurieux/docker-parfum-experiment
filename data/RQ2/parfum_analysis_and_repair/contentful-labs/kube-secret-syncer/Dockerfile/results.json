{
  "startTime": 1674251127988,
  "endTime": 1674251128910,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.14 as base\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY pkg/ pkg/\n\n# Test image\nFROM base as test\n\nRUN curl -f -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_linux_amd64.tar.gz | \\\n  tar -xz -C /tmp/ && \\\n  mv /tmp/kubebuilder_2.3.1_linux_amd64 /usr/local/kubebuilder\n\nCOPY Makefile Makefile\nCOPY hack/ hack/\nCOPY config/ config/\n\nENV PATH=$PATH:/usr/local/kubebuilder/bin\n\nFROM base as builder\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static:latest\nWORKDIR /\nCOPY --from=builder /workspace/manager .\nENTRYPOINT [\"/manager\"]\n"
}