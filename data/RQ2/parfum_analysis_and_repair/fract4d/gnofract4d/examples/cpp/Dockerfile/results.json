{
  "startTime": 1674249165440,
  "endTime": 1674249166928,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV TZ=Europe/Minsk\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y build-essential git cmake autoconf libtool pkg-config libpng-dev libjpeg-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libmpfr-dev libgmp-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /src\n\n# set up benchmark library\nRUN git clone https://github.com/google/benchmark.git && \\\n\tgit clone https://github.com/google/googletest.git benchmark/googletest && \\\n\tcd benchmark && \\\n\tmkdir build && cd build && \\\n\tcmake ../ && make && make install\n\n\nARG main_source\nARG formula_source\nARG gmp_support\n\nCOPY examples/cpp/${main_source} ./main.cpp\nCOPY examples/cpp/CMakeLists.txt ./\nCOPY fract4d/c/fract_stdlib.cpp fract4d/c/fract_stdlib.h fract4d/c/pf.h  ./\nCOPY fract4d/c/model/ ./model\nCOPY ${formula_source} ./\n\nENV formula_source=$formula_source\nENV gmp_support=$gmp_support\nCOPY examples/cpp/mp_double.h ./mp_double.h\n\nRUN cmake . && make\n\nCMD [\"./example\"]"
}