{
  "startTime": 1674216623305,
  "endTime": 1674216624802,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bellsoft/liberica-openjre-alpine:11.0.15\n\n# ===============\n# Alpine packages\n# ===============\n\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache openssl python3 tini curl bash py3-cryptography py3-psycopg2 py3-grpcio \\\n    && apk add --no-cache --virtual .build-deps wget git zip \\\n    && mkdir -p /usr/java/latest \\\n    && ln -sf /usr/lib/jvm/jre /usr/java/latest/jre\n\n# =====\n# Jetty\n# =====\n\nARG JETTY_VERSION=11.0.8\nARG JETTY_HOME=/opt/jetty\nARG JETTY_BASE=/opt/jans/jetty\nARG JETTY_USER_HOME_LIB=/home/jetty/lib\n\n# Install jetty\nRUN wget -q https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-home/${JETTY_VERSION}/jetty-home-${JETTY_VERSION}.tar.gz -O /tmp/jetty.tar.gz \\\n    && mkdir -p /opt \\\n    && tar -xzf /tmp/jetty.tar.gz -C /opt \\\n    && mv /opt/jetty-home-${JETTY_VERSION} ${JETTY_HOME} \\\n    && rm -rf /tmp/jetty.tar.gz\n\n# Ports required by jetty\nEXPOSE 8080\n\n# ======\n# Jython\n# ======\n\nARG JYTHON_VERSION=2.7.3\nRUN wget -q https://ox.gluu.org/maven/org/gluufederation/jython-installer/${JYTHON_VERSION}/jython-installer-${JYTHON_VERSION}.jar -O /tmp/jython-installer.jar \\\n    && mkdir -p /opt/jython \\\n    && java -jar /tmp/jython-installer.jar -v -s -d /opt/jython \\\n    && rm -f /tmp/jython-installer.jar /tmp/*.properties\n\n# install pydev debugger into Jython\nRUN wget -q https://github.com/fabioz/PyDev.Debugger/archive/refs/tags/pydev_debugger_2_3_0.tar.gz -P /tmp \\\n    && tar xvf /tmp/pydev_debugger_2_3_0.tar.gz -C /tmp \\\n    && cd /tmp/PyDev.Debugger-pydev_debugger_2_3_0 \\\n    && /opt/jython/bin/pip install . \\\n    && rm -rf /tmp/pydev_debugger* /tmp/PyDev.Debugger-* && rm /tmp/pydev_debugger_2_3_0.tar.gz\n\n# uninstall Jython pip and easy_install to reduce vulnerabilities\nRUN /opt/jython/bin/pip uninstall -y pip\n\n# ===========\n# Auth server\n# ===========\n\nENV CN_VERSION=1.0.2-SNAPSHOT\nENV CN_BUILD_DATE='2022-07-06 12:51'\nENV CN_SOURCE_URL=https://jenkins.jans.io/maven/io/jans/jans-auth-server/${CN_VERSION}/jans-auth-server-${CN_VERSION}.war\n\n# Install Jans Auth\nCOPY jetty/jetty-env.xml /tmp/WEB-INF/jetty-env.xml\nRUN mkdir -p ${JETTY_BASE}/jans-auth/webapps \\\n    && wget -q ${CN_SOURCE_URL} -O /tmp/jans-auth.war \\\n    && cd /tmp \\\n    && zip -d jans-auth.war WEB-INF/jetty-web.xml \\\n    && zip -r jans-auth.war WEB-INF/jetty-env.xml \\\n    && cp jans-auth.war ${JETTY_BASE}/jans-auth/webapps/jans-auth.war \\\n    && java -jar ${JETTY_HOME}/start.jar jetty.home=${JETTY_HOME} jetty.base=${JETTY_BASE}/jans-auth --add-module=server,deploy,annotations,resources,http,http-forwarded,threadpool,jsp,websocket,cdi-decorate \\\n    && rm -rf /tmp/jans-auth.war /tmp/WEB-INF\n\n# ===========\n# Custom libs\n# ===========\n\nRUN mkdir -p /usr/share/java\n\nARG TWILIO_VERSION=7.17.0\nRUN wget -q https://repo1.maven.org/maven2/com/twilio/sdk/twilio/${TWILIO_VERSION}/twilio-${TWILIO_VERSION}.jar -P /usr/share/java/\n\nARG JSMPP_VERSION=2.3.7\nRUN wget -q https://repo1.maven.org/maven2/org/jsmpp/jsmpp/${JSMPP_VERSION}/jsmpp-${JSMPP_VERSION}.jar -P /usr/share/java/\n\n# This will later be refactored and moved to be pulled from persitence or a central bucket\nARG CASA_CONFIG_VERSION=5.0.0-SNAPSHOT\nARG CASA_CONFIG_BUILD_DATE=\"2022-05-26 13:56\"\nRUN wget -q https://jenkins.gluu.org/maven/org/gluu/casa-config/${CASA_CONFIG_VERSION}/casa-config-${CASA_CONFIG_VERSION}.jar -P /usr/share/java/\n\n# A workaround for Fido2 integration\nARG FIDO2_CLIENT_VERSION=1.0.1\nARG FIDO2_CLIENT_BUILD_DATE=\"2022-07-06 12:49\"\nRUN wget -q https://jenkins.jans.io/maven/io/jans/jans-fido2-client/${FIDO2_CLIENT_VERSION}/jans-fido2-client-${FIDO2_CLIENT_VERSION}.jar -P /usr/share/java/\n\n# =====================\n# Casa external scripts\n# =====================\n\nARG FLEX_SOURCE_VERSION=99558e9998b5f1168e4b7b755cad7a7be00caa93\nARG CASA_EXTRAS_DIR=casa/extras\n\nRUN mkdir -p /opt/jans/python/libs\nRUN git clone --filter blob:none --no-checkout https://github.com/GluuFederation/flex.git /tmp/flex \\\n    && cd /tmp/flex \\\n    && git sparse-checkout init --cone \\\n    && git checkout ${FLEX_SOURCE_VERSION} \\\n    && git sparse-checkout add ${CASA_EXTRAS_DIR} \\\n    && cd /opt/jans/python/libs \\\n    && cp /tmp/flex/${CASA_EXTRAS_DIR}/casa-external_* . \\\n    && rm -rf /tmp/flex\n\n# ===========\n# Agama files\n# ===========\n\nRUN mkdir -p ${JETTY_BASE}/jans-auth/agama/fl \\\n    ${JETTY_BASE}/jans-auth/agama/ftl \\\n    ${JETTY_BASE}/jans-auth/agama/scripts\n\n# janssenproject/jans SHA commit\nARG JANS_SOURCE_VERSION=7ad2b06edf70322d85b40de05a423c2f8cdd4200\n\n# note that as we're pulling from a monorepo (with multiple project in it)\n# we are using partial-clone and sparse-checkout to get the agama code\nRUN git clone --filter blob:none --no-checkout https://github.com/janssenproject/jans /tmp/jans \\\n    && cd /tmp/jans \\\n    && git sparse-checkout init --cone \\\n    && git checkout ${JANS_SOURCE_VERSION} \\\n    && git sparse-checkout add agama/misc\n\nRUN cp -R /tmp/jans/agama/misc/* ${JETTY_BASE}/jans-auth/agama/ \\\n    && rm -rf /tmp/jans\n\n# ======\n# Python\n# ======\n\nCOPY requirements.txt /app/requirements.txt\nRUN python3 -m ensurepip \\\n    && pip3 install --no-cache-dir -U pip wheel \\\n    && pip3 install --no-cache-dir --default-timeout=300 -r /app/requirements.txt \\\n    && pip3 uninstall -y pip wheel\n\n# ==========\n# Prometheus\n# ==========\n\nARG PROMETHEUS_JAVAAGENT_VERSION=0.17.0\nCOPY conf/prometheus-config.yaml /opt/prometheus/\nRUN mkdir -p /opt/prometheus \\\n    && wget -q https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${PROMETHEUS_JAVAAGENT_VERSION}/jmx_prometheus_javaagent-${PROMETHEUS_JAVAAGENT_VERSION}.jar -O /opt/prometheus/jmx_prometheus_javaagent.jar \\\n    && java -jar ${JETTY_HOME}/start.jar jetty.home=${JETTY_HOME} jetty.base=${JETTY_BASE}/jans-auth --add-module=jmx,stats\n\n# =======\n# Cleanup\n# =======\n\nRUN apk del .build-deps \\\n    && rm -rf /var/cache/apk/*\n\n# =======\n# License\n# =======\n\nCOPY LICENSE /licenses/LICENSE\n\n# ==========\n# Config ENV\n# ==========\n\nENV CN_CONFIG_ADAPTER=consul \\\n    CN_CONFIG_CONSUL_HOST=localhost \\\n    CN_CONFIG_CONSUL_PORT=8500 \\\n    CN_CONFIG_CONSUL_CONSISTENCY=stale \\\n    CN_CONFIG_CONSUL_SCHEME=http \\\n    CN_CONFIG_CONSUL_VERIFY=false \\\n    CN_CONFIG_CONSUL_CACERT_FILE=/etc/certs/consul_ca.crt \\\n    CN_CONFIG_CONSUL_CERT_FILE=/etc/certs/consul_client.crt \\\n    CN_CONFIG_CONSUL_KEY_FILE=/etc/certs/consul_client.key \\\n    CN_CONFIG_CONSUL_TOKEN_FILE=/etc/certs/consul_token \\\n    CN_CONFIG_CONSUL_NAMESPACE=jans \\\n    CN_CONFIG_KUBERNETES_NAMESPACE=default \\\n    CN_CONFIG_KUBERNETES_CONFIGMAP=jans \\\n    CN_CONFIG_KUBERNETES_USE_KUBE_CONFIG=false \\\n    CN_CONFIG_GOOGLE_SECRET_VERSION_ID=latest \\\n    CN_CONFIG_GOOGLE_SECRET_NAME_PREFIX=jans\n\n# ==========\n# Secret ENV\n# ==========\n\nENV CN_SECRET_ADAPTER=vault \\\n    CN_SECRET_VAULT_SCHEME=http \\\n    CN_SECRET_VAULT_HOST=localhost \\\n    CN_SECRET_VAULT_PORT=8200 \\\n    CN_SECRET_VAULT_VERIFY=false \\\n    CN_SECRET_VAULT_ROLE_ID_FILE=/etc/certs/vault_role_id \\\n    CN_SECRET_VAULT_SECRET_ID_FILE=/etc/certs/vault_secret_id \\\n    CN_SECRET_VAULT_CERT_FILE=/etc/certs/vault_client.crt \\\n    CN_SECRET_VAULT_KEY_FILE=/etc/certs/vault_client.key \\\n    CN_SECRET_VAULT_CACERT_FILE=/etc/certs/vault_ca.crt \\\n    CN_SECRET_VAULT_NAMESPACE=jans \\\n    CN_SECRET_KUBERNETES_NAMESPACE=default \\\n    CN_SECRET_KUBERNETES_SECRET=jans \\\n    CN_SECRET_KUBERNETES_USE_KUBE_CONFIG=false \\\n    CN_SECRET_GOOGLE_SECRET_MANAGER_PASSPHRASE=secret \\\n    CN_SECRET_GOOGLE_SECRET_VERSION_ID=latest \\\n    CN_SECRET_GOOGLE_SECRET_NAME_PREFIX=jans\n\n# ===============\n# Persistence ENV\n# ===============\n\nENV CN_PERSISTENCE_TYPE=ldap \\\n    CN_HYBRID_MAPPING=\"{}\" \\\n    CN_LDAP_URL=localhost:1636 \\\n    CN_LDAP_USE_SSL=true \\\n    CN_COUCHBASE_URL=localhost \\\n    CN_COUCHBASE_USER=admin \\\n    CN_COUCHBASE_CERT_FILE=/etc/certs/couchbase.crt \\\n    CN_COUCHBASE_PASSWORD_FILE=/etc/jans/conf/couchbase_password \\\n    CN_COUCHBASE_CONN_TIMEOUT=10000 \\\n    CN_COUCHBASE_CONN_MAX_WAIT=20000 \\\n    CN_COUCHBASE_SCAN_CONSISTENCY=not_bounded \\\n    CN_COUCHBASE_BUCKET_PREFIX=jans \\\n    CN_COUCHBASE_TRUSTSTORE_ENABLE=true \\\n    CN_COUCHBASE_KEEPALIVE_INTERVAL=30000 \\\n    CN_COUCHBASE_KEEPALIVE_TIMEOUT=2500 \\\n    CN_GOOGLE_SPANNER_INSTANCE_ID=\"\" \\\n    CN_GOOGLE_SPANNER_DATABASE_ID=\"\"\n\n# ===========\n# Generic ENV\n# ===========\n\nENV CN_MAX_RAM_PERCENTAGE=75.0 \\\n    CN_WAIT_MAX_TIME=300 \\\n    CN_WAIT_SLEEP_DURATION=10 \\\n    PYTHON_HOME=/opt/jython \\\n    CN_DOCUMENT_STORE_TYPE=LOCAL \\\n    CN_JACKRABBIT_URL=http://localhost:8080 \\\n    CN_JACKRABBIT_ADMIN_ID=admin \\\n    CN_JACKRABBIT_ADMIN_PASSWORD_FILE=/etc/jans/conf/jackrabbit_admin_password \\\n    CN_JAVA_OPTIONS=\"\" \\\n    CN_SYNC_JKS_ENABLED=false \\\n    CN_SYNC_JKS_INTERVAL=30 \\\n    GOOGLE_PROJECT_ID=\"\" \\\n    GOOGLE_APPLICATION_CREDENTIALS=/etc/jans/conf/google-credentials.json \\\n    ADMIN_UI_JWKS=http://0.0.0.0:8080/jans-auth/restv1/jwks \\\n    CN_JETTY_REQUEST_HEADER_SIZE=8192 \\\n    CN_PROMETHEUS_PORT=\"\"\n\n# ==========\n# misc stuff\n# ==========\n\nLABEL name=\"janssenproject/auth-server\" \\\n    maintainer=\"Janssen Project <support@jans.io>\" \\\n    vendor=\"Janssen Project\" \\\n    version=\"1.0.2\" \\\n    release=\"1\" \\\n    summary=\"Janssen Authorization Server\" \\\n    description=\"OAuth 2.0 server and client; OpenID Connect Provider (OP) & UMA Authorization Server (AS)\"\n\nRUN mkdir -p ${JETTY_BASE}/jans-auth/custom/pages \\\n    ${JETTY_BASE}/jans-auth/custom/static \\\n    ${JETTY_BASE}/jans-auth/custom/libs \\\n    ${JETTY_BASE}/jans-auth/custom/i18n \\\n    ${JETTY_BASE}/jans-auth/logs \\\n    /etc/jans/conf \\\n    /app/templates\n\nCOPY certs /etc/certs\nCOPY jetty/jans-auth_web_resources.xml ${JETTY_BASE}/jans-auth/webapps/\nCOPY jetty/agama_web_resources.xml ${JETTY_BASE}/jans-auth/webapps/\nCOPY jetty/log4j2.xml ${JETTY_BASE}/jans-auth/resources/\nCOPY conf/*.tmpl /app/templates/\nCOPY scripts /app/scripts\nRUN chmod +x /app/scripts/entrypoint.sh\n\n# create non-root user\nRUN adduser -s /bin/sh -D -G root -u 1000 jetty\n\nCOPY --chown=1000:0 jetty/jans-auth.xml ${JETTY_BASE}/jans-auth/webapps/\n\n# adjust ownership and permission\nRUN chmod -R g=u ${JETTY_BASE}/jans-auth/custom \\\n    && chmod -R g=u ${JETTY_BASE}/jans-auth/resources \\\n    && chmod -R g=u ${JETTY_BASE}/jans-auth/logs \\\n    && chmod -R g=u /etc/certs \\\n    && chmod -R g=u /etc/jans \\\n    && chmod 664 /usr/java/latest/jre/lib/security/cacerts \\\n    && chmod 664 /opt/jetty/etc/jetty.xml \\\n    && chmod 664 /opt/jetty/etc/webdefault.xml \\\n    && chown -R 1000:0 ${JETTY_BASE}/jans-auth/agama \\\n    && chown -R 1000:0 /opt/jans/python/libs\n\nUSER 1000\n\nENTRYPOINT [\"tini\", \"-e\", \"143\", \"-g\", \"--\"]\nCMD [\"sh\", \"/app/scripts/entrypoint.sh\"]\n"
}