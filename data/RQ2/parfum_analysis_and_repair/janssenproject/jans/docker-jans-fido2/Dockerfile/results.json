{
  "startTime": 1674252521685,
  "endTime": 1674252522829,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bellsoft/liberica-openjre-alpine:11.0.15\n\n# ===============\n# Alpine packages\n# ===============\n\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache openssl python3 tini curl py3-cryptography py3-psycopg2 py3-grpcio \\\n    && apk add --no-cache --virtual .build-deps wget git zip \\\n    && mkdir -p /usr/java/latest \\\n    && ln -sf /usr/lib/jvm/jre /usr/java/latest/jre\n\n# =====\n# Jetty\n# =====\n\nARG JETTY_VERSION=11.0.8\nARG JETTY_HOME=/opt/jetty\nARG JETTY_BASE=/opt/jans/jetty\nARG JETTY_USER_HOME_LIB=/home/jetty/lib\n\n# Install jetty\nRUN wget -q https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-home/${JETTY_VERSION}/jetty-home-${JETTY_VERSION}.tar.gz -O /tmp/jetty.tar.gz \\\n    && mkdir -p /opt \\\n    && tar -xzf /tmp/jetty.tar.gz -C /opt \\\n    && mv /opt/jetty-home-${JETTY_VERSION} ${JETTY_HOME} \\\n    && rm -rf /tmp/jetty.tar.gz\n\n# Ports required by jetty\nEXPOSE 8080\n\n# =====\n# FIDO2\n# =====\n\nENV CN_VERSION=1.0.2-SNAPSHOT\nENV CN_BUILD_DATE='2022-07-06 12:50'\nENV CN_SOURCE_URL=https://jenkins.jans.io/maven/io/jans/jans-fido2-server/${CN_VERSION}/jans-fido2-server-${CN_VERSION}.war\n\n# Install FIDO2\n\nCOPY jetty/jetty-env.xml /tmp/WEB-INF/jetty-env.xml\nRUN mkdir -p ${JETTY_BASE}/jans-fido2/webapps \\\n    && wget -q ${CN_SOURCE_URL} -O /tmp/jans-fido2.war \\\n    && cd /tmp \\\n    && zip -d jans-fido2.war WEB-INF/jetty-web.xml \\\n    && zip -r jans-fido2.war WEB-INF/jetty-env.xml \\\n    && cp jans-fido2.war ${JETTY_BASE}/jans-fido2/webapps/jans-fido2.war \\\n    && java -jar ${JETTY_HOME}/start.jar jetty.home=${JETTY_HOME} jetty.base=${JETTY_BASE}/jans-fido2 --add-module=server,deploy,resources,http,http-forwarded,threadpool,jsp,cdi-decorate \\\n    && rm -rf /tmp/jans-fido2.war /tmp/WEB-INF\n\n# =====================\n# jans-linux-setup sync\n# =====================\n\nENV JANS_LINUX_SETUP_VERSION=cfdc70e6a2ddcc9d2ba4e3cf07df19344d613944\nARG JANS_SETUP_DIR=jans-linux-setup/jans_setup\n\n# note that as we're pulling from a monorepo (with multiple project in it)\n# we are using partial-clone and sparse-checkout to get the jans-linux-setup code\nRUN git clone --filter blob:none --no-checkout https://github.com/janssenproject/jans /tmp/jans \\\n    && cd /tmp/jans \\\n    && git sparse-checkout init --cone \\\n    && git checkout ${JANS_LINUX_SETUP_VERSION} \\\n    && git sparse-checkout set ${JANS_SETUP_DIR}\n\nRUN mkdir -p /etc/jans/conf \\\n    /etc/jans/conf/fido2/mds/cert \\\n    /etc/jans/conf/fido2/mds/toc \\\n    /etc/jans/conf/fido2/server_metadata\n\n# COPY conf/fido2 /etc/jans/conf/fido2\n# sync static files from linux-setup\nRUN cd /tmp/jans \\\n    && cp -R ${JANS_SETUP_DIR}/static/fido2/authenticator_cert /etc/jans/conf/fido2/authenticator_cert \\\n    && cp ${JANS_SETUP_DIR}/static/fido2/mds_toc_cert/metadata-root-ca.cer /etc/jans/conf/fido2/mds/cert/\n\n# cleanup\nRUN rm -rf /tmp/jans\n\n# download external files\nRUN wget -q https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem -P /etc/jans/conf/fido2/apple/ \\\n    && wget -q https://mds.fidoalliance.org/ -O /etc/jans/conf/fido2/mds/toc/toc.jwt \\\n    && wget -q https://secure.globalsign.com/cacert/root-r3.crt -P /etc/jans/conf/fido2/mds/cert/\n\n# ======\n# Python\n# ======\n\nCOPY requirements.txt /app/requirements.txt\nRUN python3 -m ensurepip \\\n    && pip3 install --no-cache-dir -U pip wheel \\\n    && pip3 install --no-cache-dir -r /app/requirements.txt \\\n    && pip3 uninstall -y pip wheel\n\n# ==========\n# Prometheus\n# ==========\n\nARG PROMETHEUS_JAVAAGENT_VERSION=0.17.0\nCOPY conf/prometheus-config.yaml /opt/prometheus/\nRUN mkdir -p /opt/prometheus \\\n    && wget -q https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${PROMETHEUS_JAVAAGENT_VERSION}/jmx_prometheus_javaagent-${PROMETHEUS_JAVAAGENT_VERSION}.jar -O /opt/prometheus/jmx_prometheus_javaagent.jar \\\n    && java -jar ${JETTY_HOME}/start.jar jetty.home=${JETTY_HOME} jetty.base=${JETTY_BASE}/jans-fido2 --add-module=jmx,stats\n\n# =======\n# Cleanup\n# =======\n\nRUN apk del .build-deps \\\n    && rm -rf /var/cache/apk/*\n\n# =======\n# License\n# =======\n\nCOPY LICENSE /licenses/LICENSE\n\n# ==========\n# Config ENV\n# ==========\n\nENV CN_CONFIG_ADAPTER=consul \\\n    CN_CONFIG_CONSUL_HOST=localhost \\\n    CN_CONFIG_CONSUL_PORT=8500 \\\n    CN_CONFIG_CONSUL_CONSISTENCY=stale \\\n    CN_CONFIG_CONSUL_SCHEME=http \\\n    CN_CONFIG_CONSUL_VERIFY=false \\\n    CN_CONFIG_CONSUL_CACERT_FILE=/etc/certs/consul_ca.crt \\\n    CN_CONFIG_CONSUL_CERT_FILE=/etc/certs/consul_client.crt \\\n    CN_CONFIG_CONSUL_KEY_FILE=/etc/certs/consul_client.key \\\n    CN_CONFIG_CONSUL_TOKEN_FILE=/etc/certs/consul_token \\\n    CN_CONFIG_CONSUL_NAMESPACE=jans \\\n    CN_CONFIG_KUBERNETES_NAMESPACE=default \\\n    CN_CONFIG_KUBERNETES_CONFIGMAP=jans \\\n    CN_CONFIG_KUBERNETES_USE_KUBE_CONFIG=false \\\n    CN_CONFIG_GOOGLE_SECRET_VERSION_ID=latest \\\n    CN_CONFIG_GOOGLE_SECRET_NAME_PREFIX=jans\n\n# ==========\n# Secret ENV\n# ==========\n\nENV CN_SECRET_ADAPTER=vault \\\n    CN_SECRET_VAULT_SCHEME=http \\\n    CN_SECRET_VAULT_HOST=localhost \\\n    CN_SECRET_VAULT_PORT=8200 \\\n    CN_SECRET_VAULT_VERIFY=false \\\n    CN_SECRET_VAULT_ROLE_ID_FILE=/etc/certs/vault_role_id \\\n    CN_SECRET_VAULT_SECRET_ID_FILE=/etc/certs/vault_secret_id \\\n    CN_SECRET_VAULT_CERT_FILE=/etc/certs/vault_client.crt \\\n    CN_SECRET_VAULT_KEY_FILE=/etc/certs/vault_client.key \\\n    CN_SECRET_VAULT_CACERT_FILE=/etc/certs/vault_ca.crt \\\n    CN_SECRET_VAULT_NAMESPACE=jans \\\n    CN_SECRET_KUBERNETES_NAMESPACE=default \\\n    CN_SECRET_KUBERNETES_SECRET=jans \\\n    CN_SECRET_KUBERNETES_USE_KUBE_CONFIG=false \\\n    CN_SECRET_GOOGLE_SECRET_MANAGER_PASSPHRASE=secret \\\n    CN_SECRET_GOOGLE_SECRET_VERSION_ID=latest \\\n    CN_SECRET_GOOGLE_SECRET_NAME_PREFIX=jans\n\n# ===============\n# Persistence ENV\n# ===============\n\nENV CN_PERSISTENCE_TYPE=ldap \\\n    CN_HYBRID_MAPPING=\"{}\" \\\n    CN_LDAP_URL=localhost:1636 \\\n    CN_LDAP_USE_SSL=true \\\n    CN_COUCHBASE_URL=localhost \\\n    CN_COUCHBASE_USER=admin \\\n    CN_COUCHBASE_CERT_FILE=/etc/certs/couchbase.crt \\\n    CN_COUCHBASE_PASSWORD_FILE=/etc/jans/conf/couchbase_password \\\n    CN_COUCHBASE_CONN_TIMEOUT=10000 \\\n    CN_COUCHBASE_CONN_MAX_WAIT=20000 \\\n    CN_COUCHBASE_SCAN_CONSISTENCY=not_bounded \\\n    CN_COUCHBASE_BUCKET_PREFIX=jans \\\n    CN_COUCHBASE_TRUSTSTORE_ENABLE=true \\\n    CN_COUCHBASE_KEEPALIVE_INTERVAL=30000 \\\n    CN_COUCHBASE_KEEPALIVE_TIMEOUT=2500\n\n# ===========\n# Generic ENV\n# ===========\n\nENV CN_MAX_RAM_PERCENTAGE=75.0 \\\n    CN_WAIT_MAX_TIME=300 \\\n    CN_WAIT_SLEEP_DURATION=10 \\\n    CN_JAVA_OPTIONS=\"\" \\\n    GOOGLE_PROJECT_ID=\"\" \\\n    GOOGLE_APPLICATION_CREDENTIALS=/etc/jans/conf/google-credentials.json \\\n    CN_PROMETHEUS_PORT=\"\"\n\n# ==========\n# misc stuff\n# ==========\n\nLABEL name=\"janssenproject/fido2\" \\\n    maintainer=\"Janssen Project <support@jans.io>\" \\\n    vendor=\"Janssen Project\" \\\n    version=\"1.0.2\" \\\n    release=\"1\" \\\n    summary=\"Janssen FIDO2\" \\\n    description=\"FIDO2 server\"\n\nRUN mkdir -p /etc/certs \\\n    ${JETTY_BASE}/jans-fido2/logs\n\nCOPY jetty/jans-fido2.xml ${JETTY_BASE}/jans-fido2/webapps/\nCOPY jetty/log4j2.xml ${JETTY_BASE}/jans-fido2/resources/\nCOPY conf/*.tmpl /app/templates/\n\nCOPY scripts /app/scripts\nRUN chmod +x /app/scripts/entrypoint.sh\n\n# create non-root user\nRUN adduser -s /bin/sh -D -G root -u 1000 jetty\n\n# adjust ownership and permission\nRUN chmod -R g=u ${JETTY_BASE}/jans-fido2/resources \\\n    && chmod -R g=u ${JETTY_BASE}/jans-fido2/logs \\\n    && chmod -R g=u /etc/certs \\\n    && chmod -R g=u /etc/jans \\\n    && chmod 664 /usr/java/latest/jre/lib/security/cacerts \\\n    && chmod 664 /opt/jetty/etc/jetty.xml \\\n    && chmod 664 /opt/jetty/etc/webdefault.xml\n\nUSER 1000\n\nENTRYPOINT [\"tini\", \"-e\", \"143\", \"-g\", \"--\"]\nCMD [\"sh\", \"/app/scripts/entrypoint.sh\"]\n"
}