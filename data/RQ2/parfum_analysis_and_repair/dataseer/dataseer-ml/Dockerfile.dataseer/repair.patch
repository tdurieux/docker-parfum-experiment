diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dataseer/dataseer-ml/Dockerfile.dataseer b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dataseer/dataseer-ml/Dockerfile.dataseer/repaired.Dockerfile
index d46021e..3378598 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dataseer/dataseer-ml/Dockerfile.dataseer
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dataseer/dataseer-ml/Dockerfile.dataseer/repaired.Dockerfile
@@ -7,7 +7,7 @@ FROM openjdk:8u275-jdk as builder
 USER root
 
 RUN apt-get update && \
-    apt-get -y --no-install-recommends install unzip
+    apt-get -y --no-install-recommends install unzip && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /opt/grobid-source
 
@@ -73,7 +73,7 @@ COPY --from=builder /opt/grobid .
 RUN python3 -m pip install pip --upgrade
 
 # install DeLFT via pypi
-RUN pip3 install requests delft==0.3.1
+RUN pip3 install --no-cache-dir requests delft==0.3.1
 # link the data directory to /data
 # the current working directory will most likely be /opt/grobid
 RUN mkdir -p /data \
@@ -104,14 +104,14 @@ RUN curl --fail --show-error --location -q ${JDK_URL} -o /tmp/openjdk.tar.gz \
         --directory "${TEMP_JDK_HOME}" \
         --strip-components 1 \
         --no-same-owner \
-    && JAVA_HOME=${TEMP_JDK_HOME} pip3 install jep==4.0.2 \
+    && JAVA_HOME=${TEMP_JDK_HOME} pip3 --no-cache-dir install jep==4.0.2 \
     && rm -f /tmp/openjdk.tar.gz \
     && rm -rf "${TEMP_JDK_HOME}"
 ENV LD_LIBRARY_PATH=/usr/local/lib/python3.8/dist-packages/jep:${LD_LIBRARY_PATH}
 # remove libjep.so because we are providng our own version in the virtual env
 RUN rm /opt/grobid/grobid-home/lib/lin-64/jep/libjep.so
 
-# preload embeddings, for GROBID all the RNN models use glove-840B (default for the script), ELMo is currently not loaded 
+# preload embeddings, for GROBID all the RNN models use glove-840B (default for the script), ELMo is currently not loaded
 # download GROBID fine-tuned models based on SciBERT if selected
 
 COPY --from=builder /opt/grobid-source/grobid-home/scripts/preload_embeddings.py .
@@ -132,7 +132,7 @@ WORKDIR /opt/grobid/dataseer-ml
 
 # trigger gradle wrapper install
 RUN ./gradlew --version
-RUN ./gradlew copyModels && rm -rf resources/models 
+RUN ./gradlew copyModels && rm -rf resources/models
 #RUN rm -rf /opt/grobid/dataseer-ml/lib/org
 
 # this will build and load embeddings on the image forever :)