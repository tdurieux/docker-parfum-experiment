{
  "startTime": 1674252889386,
  "endTime": 1674252889988,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 25,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 25,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM adoptopenjdk/maven-openjdk8 as build-stage\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install nodejs git dos2unix && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./ /gtas-parent/\nCOPY ./docker-resources/hibernate.properties /gtas-parent/gtas-commons/src/main/resources/hibernate.properties\n\nWORKDIR /gtas-parent\nRUN mvn clean install -Dmaven.test.skip=true\nRUN cd / && rm -rf /gtas-parent\n\nRUN mkdir /temp-dos\nCOPY ./docker-resources/setenv.sh /temp-dos/setenv.sh\nRUN dos2unix /temp-dos/setenv.sh\n\n\nFROM tomcat:9-jdk8-adoptopenjdk-openj9 as tomcat\n\nRUN mkdir -p /usr/local/tomcat/webapps/gtas /logs/apache-tomcat-web /logs/apache-tomcat /temp\n\nCOPY --from=build-stage /root/.m2/repository/gov/gtas/gtas-webapp/1.0.0-BUILD-SNAPSHOT/gtas-webapp-1.0.0-BUILD-SNAPSHOT.war /usr/local/tomcat/webapps/gtas.war\nCOPY --from=build-stage /temp-dos/setenv.sh /usr/local/tomcat/bin/setenv.sh\nCOPY ./docker-resources/default.application.properties /usr/local/tomcat/conf/application.properties\nCOPY ./docker-resources/logrotate.conf /\nCOPY ./docker-resources/server.xml /usr/local/tomcat/conf/\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y logrotate wget && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz\nRUN tar -C /usr/local/bin -xzf dockerize-linux-amd64-v0.6.1.tar.gz && rm dockerize-linux-amd64-v0.6.1.tar.gz\n\nWORKDIR /usr/local/tomcat/webapps/gtas\nRUN  jar -xvf /usr/local/tomcat/webapps/gtas.war\n\nWORKDIR /usr/local/tomcat/bin\nENTRYPOINT mkdir -p /scheduler-logs/temp && dockerize -wait tcp://${DB_HOST}:3306 -timeout 1000s logrotate /logrotate.conf && catalina.sh run"
}