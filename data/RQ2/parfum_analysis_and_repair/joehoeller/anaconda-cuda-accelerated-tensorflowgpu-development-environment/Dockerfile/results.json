{
  "startTime": 1674252118901,
  "endTime": 1674252119876,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 82,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 82,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04\n\n# Core Linux Deps\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --fix-missing --no-install-recommends \\\n        build-essential \\\n    \tcmake \\\n        curl \\\n\tbinutils \\\n\tgdb \\\n        git \\\n\tfreeglut3 \\\n\tfreeglut3-dev \\\n\tlibxi-dev \\\n\tlibxmu-dev \\\n\tgfortran \\\n        pkg-config \\\n\tpython-numpy \\\n\tpython-dev \\\n\tpython-setuptools \\\n\tlibboost-python-dev \\\n\tlibboost-thread-dev \\\n        pbzip2 \\\n        rsync \\\n        software-properties-common \\\n        libboost-all-dev \\\n        libopenblas-dev \\ \n        libtbb2 \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev \\\n\tlibgraphicsmagick1-dev \\\n        libavformat-dev \\\n        libhdf5-dev \\\n        libpq-dev \\\n\tlibgraphicsmagick1-dev \\\n\tlibavcodec-dev \\\n\tlibgtk2.0-dev \\\n\tliblapack-dev \\\n        liblapacke-dev \\\n\tlibswscale-dev \\\n\tlibcanberra-gtk-module \\\n        libboost-dev \\\n\tlibboost-all-dev \\\n        libeigen3-dev \\\n\twget \\\n        vim \\\n        qt5-default \\\n        unzip \\\n\tzip \\ \n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*  && \\\n    apt-get clean && rm -rf /tmp/* /var/tmp/*\n\n# Install TensorRT (TPU Access)\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y nvinfer-runtime-trt-repo-ubuntu1804-5.0.2-ga-cuda10.0 && \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y libnvinfer5=5.0.2-1+cuda10.0 && rm -rf /var/lib/apt/lists/*;\n\nRUN file=\"$(ls -1 /usr/local/)\" && echo $file\n\n\n# Install Anaconda\nRUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n/bin/bash Miniconda3-latest-Linux-x86_64.sh -f -b -p /opt/conda && \\\nrm Miniconda3-latest-Linux-x86_64.sh\nENV PATH /opt/conda/bin:$PATH\n\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\nARG PYTHON=python3\nARG PIP=pip3\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ${PYTHON} \\\n    ${PYTHON}-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN ${PIP} --no-cache-dir install --upgrade \\\n    pip \\\n    setuptools\n\nRUN pip install --no-cache-dir pycuda\n\nRUN conda update -n base -c defaults conda\n\n# Install TF for GPU\nRUN conda create -n tensorflow_gpuenv tensorflow-gpu\nRUN /bin/bash -c conda activate tensorflow_gpuenv\n\nRUN conda install -c anaconda jupyter\n\nRUN conda update conda\nRUN conda install numba\nRUN conda install -c anaconda cupy\nRUN conda install -c anaconda ipykernel\nRUN conda install -c conda-forge featuretools\nRUN conda install -c anaconda scikit-learn\nRUN conda install -c anaconda future\nRUN conda install -c conda-forge dask\nRUN conda install -c conda-forge xgboost\nRUN conda install -c anaconda seaborn\nRUN conda install -c anaconda ipython\nRUN conda install -c anaconda keras-gpu\n\nWORKDIR /\n\nRUN mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/\nRUN mkdir /.local && chmod a+rwx /.local\nRUN chmod -R 777 /.local\nRUN apt-get install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/*;\nWORKDIR /tf/tensorflow-tutorials\nRUN wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/basic_classification.ipynb\nRUN wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/basic_text_classification.ipynb\nRUN wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb\nRUN wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_restore_models.ipynb\n\nRUN apt-get autoremove -y && apt-get remove -y wget\nRUN conda install -c conda-forge tensorboard\nRUN conda install ipykernel jupyter\nRUN python -m ipykernel install --user --name tf-gpu --display-name \"TensorFlow-GPU\"\n\nWORKDIR /tf\nEXPOSE 8888 6006\n\nRUN useradd -ms /bin/bash container_user\nRUN python3 -m ipykernel.kernelspec\n\nCMD [\"bash\", \"-c\", \"source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root --NotebookApp.custom_display_url='http://localhost:8888'\"]\n"
}