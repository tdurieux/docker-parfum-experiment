{
  "startTime": 1674252650758,
  "endTime": 1674252652315,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 47,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 81,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.13\n#MAINTAINER Paul Smith <pa.ulsmith.net>\n#See https://hub.docker.com/r/ulsmith/alpine-apache-php7\n\n# modified to be used especially for texmlbus\n\n#MAINTAINER Heinrich Stamerjohanns <heinrich@stamerjohanns.de>\n\n# Add repos\n#RUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\n# Add basics first\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n    apache2 \\\n    apache2-ssl \\\n    bash \\\n    ca-certificates \\\n    curl \\\n    git \\\n    nano \\\n    openssh-keygen \\\n    openssl \\\n    openntpd \\\n    php7 \\\n    php7-apache2 \\\n    php7-iconv \\\n    php7-json \\\n    php7-openssl \\\n    php7-phar \\\n    tzdata\n\n# dmake specific stuff\nRUN apk add --no-cache \\\n    file \\\n    make \\\n    mysql-client \\\n    perl \\\n    sudo \\\n    unrar \\\n    zip\n\n# Add Composer\nRUN curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer\n\n# Setup apache and php\nRUN apk add --no-cache \\\n    php7-apcu \\\n    php7-bcmath \\\n    php7-bz2 \\\n    php7-ctype \\\n    php7-curl \\\n    php7-dom \\\n    php7-exif \\\n    php7-ftp \\\n    php7-gd \\\n    php7-gettext \\\n    php7-mbstring \\\n    php7-mysqli \\\n    php7-pcntl \\\n    php7-pdo \\\n    php7-pdo_mysql \\\n    php7-posix \\\n    php7-redis \\\n    php7-session \\\n    php7-sysvshm \\\n    php7-soap \\\n    php7-tokenizer \\\n    php7-xdebug \\\n    php7-xml \\\n    php7-xmlreader \\\n    php7-xmlrpc \\\n    php7-xmlwriter \\\n    php7-zip\n\n# only available in testing, but unstable\n# php7-pecl-inotify\n# therefore manually install via pecl\n\n# needed for pecl\nRUN apk add --no-cache \\\n    php7-dev \\\n    php7-pear\n\nRUN set -xe; \\\n    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n      # build tools\n      autoconf g++ gcc make \\\n      # lib tools\n      #bzip2-dev freetype-dev gettext-dev icu-dev imagemagick-dev libintl libjpeg-turbo-dev \\\n      #libpng-dev libxslt-dev libzip-dev \\\n      ; \\\n    pecl channel-update pecl.php.net \\\n    && pecl install -o -f \\\n      inotify \\\n      ; \\\n    apk del .build-deps\n\nRUN echo \"extension=inotify.so\" > /etc/php7/conf.d/inotify.ini\n\n# Problems installing in above stack\nRUN apk add --no-cache php7-simplexml\n\nRUN cp /usr/bin/php7 /usr/bin/php\n\nRUN curl -f -L -s \"https://mirrors.ctan.org/support/latexmk/latexmk.pl\" -o /usr/bin/latexmk \\\n    && chmod ugo+rx /usr/bin/latexmk\n\n# Add apache to run and configure\nRUN sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ expires_module/LoadModule\\ expires_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/srv/texmlbus/src/server/htdocs\\\"#g\" /etc/apache2/httpd.conf \\\n    && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/srv/texmlbus/src/server/htdocs\\\"#g\" /etc/apache2/conf.d/ssl.conf \\\n    && sed -i \"s#/var/www/localhost/htdocs#/srv/texmlbus/src/server/htdocs#\" /etc/apache2/httpd.conf \\\n    && sed -i \"s#/var/www/localhost/htdocs#/srv/texmlbus/src/server/htdocs#\" /etc/apache2/conf.d/ssl.conf \\\n    && printf \"\\n<Directory \\\"/srv/texmlbus/src/server/htdocs\\\">\\nAllowOverride All\\nAddDefaultCharset utf-8\\nIndexOptions Charset=utf8 FancyIndexing HTMLTable ScanHTMLTitles\\nOptions -ExecCGI -Includes\\nIndexIgnore .gitignore .ht* upload\\\\nAddType text/plain .log\\n<IfModule mod_expires.c>\\nExpiresActive On\\nExpiresDefault \\\"access plus 1 second\\\"\\n</IfModule>\\n</Directory>\\n\" >> /etc/apache2/httpd.conf \\\n    && printf \"\\n<Directory \\\"/srv/texmlbus/src/server/htdocs\\\">\\nAllowOverride All\\nAddDefaultCharset utf-8\\nIndexOptions Charset=utf-8 FancyIndexing HTMLTable ScanHTMLTitles\\nOptions +Indexes -ExecCGI -Includes\\nIndexIgnore .gitignore .ht* upload\\nAddType text/plain .log\\n<IfModule mod_expires.c>\\nExpiresActive On\\nExpiresDefault \\\"access plus 1 second\\\"\\n</IfModule>\\n</Directory>\\n\" >> /etc/apache2/conf.d/ssl.conf \\\n    && printf \"\\nAlias \\\"/files\\\" \\\"/srv/texmlbus/articles\\\"\\n\" >> /etc/apache2/httpd.conf \\\n    && printf \"\\nAlias \\\"/files\\\" \\\"/srv/texmlbus/articles\\\"\\n\" >> /etc/apache2/ssl.conf \\\n    && printf \"\\n<Directory \\\"/srv/texmlbus/articles\\\">\\nRequire all granted\\nAllowOverride All\\nAddDefaultCharset utf-8\\nIndexOptions Charset=utf-8 FancyIndexing HTMLTable ScanHTMLTitles\\nOptions +Indexes -ExecCGI -Includes\\nIndexIgnore .gitignore .ht* upload\\nAddType text/plain .log\\n<IfModule mod_expires.c>\\nExpiresActive On\\nExpiresDefault \\\"access plus 1 second\\\"\\n</IfModule>\\n</Directory>\\n\" >> /etc/apache2/httpd.conf \\\n    && printf \"\\n<Directory \\\"/srv/texmlbus/articles\\\">\\nRequire all granted\\nAllowOverride All\\nAddDefaultCharset utf-8\\nIndexOptions Charset=utf-8 FancyIndexing HTMLTable ScanHTMLTitles\\nOptions -ExecCGI -Includes\\nIndexIgnore .gitignore .ht* upload\\nAddType text/plain .log\\n<IfModule mod_expires.c>\\nExpiresActive On\\nExpiresDefault \\\"access plus 1 second\\\"\\n</IfModule>\\n</Directory>\\n\" >> /etc/apache2/conf.d/ssl.conf\n\nCOPY ssl/server.pem /etc/ssl/apache2/server.pem\nCOPY ssl/server.key /etc/ssl/apache2/server.key\n\nENV APACHE_SERVER_NAME=dmake\n\n# setup dmake user\nRUN addgroup dmake \\\n    && adduser -D -g \"\" -h \"/home/dmake\" -G dmake dmake \\\n    && passwd -u dmake\n\nRUN mkdir -p /srv/texmlbus/src \\\n    && chown -R dmake:dmake /srv \\\n    && chmod -R 755 /srv\n\nVOLUME [\"/srv/texmlbus/src\"]\n\n# installation finished\nRUN rm -f /var/cache/apk/*\n\n# workaround for message\n# sudo: setrlimit(RLIMIT_CORE): Operation not permitted\nRUN echo \"Set disable_coredump false\" >> /etc/sudo.conf\n\nRUN mkdir /bootstrap\nADD start.sh /bootstrap/\nRUN chmod +x /bootstrap/start.sh\n\nEXPOSE 80\nEXPOSE 443\n\nENTRYPOINT [\"/bootstrap/start.sh\"]\n"
}