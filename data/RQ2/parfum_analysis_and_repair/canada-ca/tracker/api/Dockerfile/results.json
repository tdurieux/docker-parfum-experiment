{
  "startTime": 1674220900222,
  "endTime": 1674220900960,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build image: docker build --tag tracker-api:1.0 .\n# To run image: docker run --network=host --env-file ./.env  tracker-api:1.0\n# Build image\nFROM node:alpine AS base\n\nWORKDIR /app\n\nFROM base AS builder\n\nCOPY package*.json .babelrc ./\n\nRUN npm install && npm cache clean --force;\n\nCOPY ./src ./src\nCOPY ./index.js .\nCOPY ./database.json .\nCOPY ./.env.example .\n\nRUN npm run build\n\nRUN npm prune --production\n\n# Prod image\nFROM base AS release\n\nENV NODE_ENV production\n\nCOPY --from=builder /app/package.json .\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/.env.example .\nCOPY --from=builder /app/index.js .\nCOPY --from=builder /app/database.json .\nCOPY --from=builder /app/dist ./dist\n\nUSER node\nEXPOSE 4000\n\nCMD [\"npm\", \"start\", \"--node-options=--dns-result-order=ipv4first\"]\n"
}