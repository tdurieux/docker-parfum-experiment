{
  "startTime": 1674251359599,
  "endTime": 1674251361001,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 47,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 76,
        "columnEnd": 94
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 17,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 7,
        "columnEnd": 179
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-fpm-alpine3.15\n\nRUN apk add --no-cache --update --virtual .php-deps make\n\nRUN apk add --no-cache --virtual build-deps \\\n    libzip-dev \\\n    zlib-dev \\\n    freetype-dev \\\n    libjpeg-turbo-dev \\\n    libpng-dev \\\n    $PHPIZE_DEPS \\\n    && apk add --no-cache \\\n    libzip \\\n    coreutils \\\n    imagemagick \\\n    nodejs \\\n    npm \\\n    ffmpeg \\\n    icu-dev \\\n    gmp-dev \\\n    && docker-php-ext-install -j$(nproc) bcmath \\\n    && docker-php-ext-install -j$(nproc) zip \\\n    && docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd \\\n    && docker-php-ext-install -j$(nproc) exif \\\n    && docker-php-ext-install -j$(nproc) sockets \\\n    && docker-php-ext-install -j$(nproc) intl \\\n    && docker-php-ext-install -j$(nproc) gmp \\\n    && apk del build-deps\n\n# PECL Extensions\nRUN apk add --no-cache --virtual build-deps \\\n    $PHPIZE_DEPS \\\n    imagemagick-dev \\\n    && pecl install redis \\\n    && pecl install apcu \\\n    && pecl install imagick \\\n    && docker-php-ext-enable redis \\\n    && docker-php-ext-enable apcu \\\n    && docker-php-ext-enable imagick \\\n    && apk del build-deps\n\n# Cassandra extension\nENV MAKEFLAGS -j4\nENV INSTALL_DIR /usr/src/datastax-php-driver\nENV BUILD_DEPS \\\n    bash \\\n    cmake \\\n    autoconf \\\n    g++ \\\n    gcc \\\n    make \\\n    pcre-dev \\\n    libuv-dev \\\n    git \\\n    gmp-dev \\\n    autoconf \\\n    libtool \\\n    openssl-dev \\\n    zlib-dev \\\n    $PHPIZE_DEPS\n\nRUN apk add --no-cache --virtual build-deps $BUILD_DEPS \\\n    && apk add --no-cache libuv gmp \\\n    && git clone --branch=v1.3.x https://github.com/nano-interactive/php-driver.git $INSTALL_DIR \\\n    && cd $INSTALL_DIR \\\n    && git submodule update --init \\\n    # Install CPP Driver\n    && cd $INSTALL_DIR/lib/cpp-driver \\\n    && mkdir build && cd build \\\n    && cmake -DCASS_BUILD_STATIC=ON -DCASS_BUILD_SHARED=ON .. \\\n    && make && make install \\\n    # Install PHP Driver\n    && cd $INSTALL_DIR/ext \\\n    && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n    && docker-php-ext-enable cassandra \\\n    && apk del build-deps \\\n    && rm -rf $INSTALL_DIR\n\n# blurhash extension\nRUN apk add --no-cache --virtual build-deps $BUILD_DEPS \\\n    && curl -fsSL 'https://gitlab.com/minds/php-ext-blurhash/-/archive/master/php_ext_blurhash-master.tar.gz' -o blurhash.tar.gz \\\n    && mkdir -p blurhash \\\n    && tar -xf blurhash.tar.gz -C blurhash --strip-components=1 \\\n    && rm blurhash.tar.gz \\\n    && ( cd blurhash \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make -j \"$(nproc)\" \\\n        && make install) \\\n\n    && rm -r blurhash \\\n    && docker-php-ext-enable blurhash \\\n    && apk del build-deps\n\n# ZMQ extension\nENV INSTALL_DIR /usr/src/php-zmq\nRUN apk add --no-cache --virtual build-deps \\\n    zeromq-dev \\\n    git \\\n    $PHPIZE_DEPS \\\n    && apk add --no-cache zeromq \\\n    && git clone https://github.com/zeromq/php-zmq.git $INSTALL_DIR \\\n    && cd $INSTALL_DIR \\\n    && phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(nproc) \\\n    && make install \\\n    && docker-php-ext-enable zmq \\\n    && apk del build-deps \\\n    && rm -rf $INSTALL_DIR\n\n# Install awscli (downstream containers require for the moment)\n\nRUN apk update && apk add --no-cache py-pip && pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir awscli\n\n# Build Pulsar\n\nENV BUILD_DEPS \\\n    bash \\\n    cmake \\\n    autoconf \\\n    g++ \\\n    gcc \\\n    make \\\n    pcre-dev \\\n    libuv-dev \\\n    git \\\n    gmp-dev \\\n    autoconf \\\n    libtool \\\n    openssl-dev \\\n    zlib-dev \\\n    boost-dev \\\n    py3-setuptools \\\n    python3-dev \\ \n    protobuf-dev \\\n    curl-dev \\\n    gtest-dev gmock \\\n    $PHPIZE_DEPS\n\nRUN apk add --no-cache --virtual build-deps $BUILD_DEPS \\\n    # PHP CPP\n    && git clone https://github.com/Minds/PHP-CPP.git \\\n    && cd PHP-CPP \\\n    && git checkout php80 \\\n    && make -j4 \\\n    && make install \\\n    && cd .. \\\n    # Pulsar CPP Client\n    && git clone --depth 1 https://github.com/apache/pulsar.git \\\n    && cd pulsar/pulsar-client-cpp \\\n    && cmake . -DBUILD_TESTS=OFF \\\n    && make -j2 \\\n    && make install \\\n    && cd ../.. \\\n    && git clone https://gitlab.com/minds/pulsar-php-client \\\n    && cd pulsar-php-client \\\n    && make -j4 \\\n    && cp output/pulsar.so $(php-config --extension-dir)/pulsar.so \\\n    && cd .. \\\n    && rm -rf PHP-CPP pulsar pulsar-php-client \\\n    && apk del build-deps\n\nRUN apk add --no-cache protobuf-dev automake\n\n\nRUN apk add --no-cache --virtual build-deps $BUILD_DEPS \\\n    # libsecp256kq\n    && git clone https://github.com/bitcoin-core/secp256k1.git \\\n    && cd secp256k1 \\\n        && git checkout efad3506a8937162e8010f5839fdf3771dfcf516 \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-tests=no --enable-benchmark=no --enable-experimental --enable-module-ecdh --enable-module-recovery --enable-module-schnorrsig --enable-module-extrakeys \\\n    && make \\\n    && make install \\\n    && cd .. \\\n    # secp256k1-php\n    && git clone https://github.com/Minds/secp256k1-php.git --branch fix-php8-schnorrsig \\\n    && cd secp256k1-php/secp256k1 \\\n    && phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-secp256k1-config --with-module-recovery --with-module-ecdh --with-module-schnorrsig --with-module-extrakeys \\\n    && make \\\n    && make install \\\n    && docker-php-ext-enable secp256k1 \\\n    && cd ../../ \\\n    && rm -rf secp256k1 secp256k1-php \\\n    && apk del build-deps\n\n# Install PDO\nRUN docker-php-ext-install pdo pdo_mysql\n\n# PHP INI\nCOPY php.ini /usr/local/etc/php/\nCOPY opcache.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY pulsar.ini /usr/local/etc/php/conf.d/pulsar.ini\n\nWORKDIR /var/www/Minds\n"
}