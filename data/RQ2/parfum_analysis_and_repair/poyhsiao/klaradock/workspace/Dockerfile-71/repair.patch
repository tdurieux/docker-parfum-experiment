diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/poyhsiao/klaradock/workspace/Dockerfile-71 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/poyhsiao/klaradock/workspace/Dockerfile-71/repaired.Dockerfile
index c632443..8509049 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/poyhsiao/klaradock/workspace/Dockerfile-71
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/poyhsiao/klaradock/workspace/Dockerfile-71/repaired.Dockerfile
@@ -63,11 +63,10 @@ ARG INSTALL_SOAP=false
 ENV INSTALL_SOAP ${INSTALL_SOAP}
 
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-  # Install the PHP SOAP extension
   add-apt-repository -y ppa:ondrej/php && \
   apt-get update -yqq && \
-  apt-get -y install libxml2-dev php7.1-soap \
-;fi
+  apt-get -y --no-install-recommends install libxml2-dev php7.1-soap \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # PHP GMP
@@ -77,9 +76,8 @@ ARG INSTALL_GMP=false
 ENV INSTALL_GMP ${INSTALL_GMP}
 
 RUN if [ ${INSTALL_GMP} = true ]; then \
-    # Install GMP extension
-    apt-get -y install php-gmp \
-;fi
+    apt-get -y --no-install-recommends install php-gmp \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Set Timezone
@@ -139,12 +137,11 @@ RUN echo "" >> ~/.bashrc && \
 
 ARG INSTALL_XDEBUG=false
 RUN if [ ${INSTALL_XDEBUG} = true ]; then \
-    # Load the xdebug extension only with phpunit commands
     apt-get update && \
-    apt-get install -y --force-yes php-xdebug && \
+    apt-get install --no-install-recommends -y --force-yes php-xdebug && \
     sed -i 's/^;//g' /etc/php/7.1/cli/conf.d/20-xdebug.ini && \
     echo "alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'" >> ~/.bashrc \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 # ADD for REMOTE debugging
 COPY ./xdebug.ini /etc/php/7.1/cli/conf.d/xdebug.ini
 
@@ -160,11 +157,11 @@ ENV BLACKFIRE_CLIENT_ID ${BLACKFIRE_CLIENT_ID}
 ENV BLACKFIRE_CLIENT_TOKEN ${BLACKFIRE_CLIENT_TOKEN}
 
 RUN if [ ${INSTALL_XDEBUG} = false -a ${INSTALL_BLACKFIRE} = true ]; then \
-    curl -L https://packagecloud.io/gpg.key | apt-key add - && \
+    curl -f -L https://packagecloud.io/gpg.key | apt-key add - && \
     echo "deb http://packages.blackfire.io/debian any main" | tee /etc/apt/sources.list.d/blackfire.list && \
     apt-get update -yqq && \
-    apt-get install blackfire-agent \
-;fi
+    apt-get install -y --no-install-recommends blackfire-agent \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # ssh:
@@ -225,14 +222,13 @@ ARG INSTALL_NODE=false
 ENV INSTALL_NODE ${INSTALL_NODE}
 ENV NVM_DIR /home/laradock/.nvm
 RUN if [ ${INSTALL_NODE} = true ]; then \
-    # Install nvm (A Node Version Manager)
-    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
+    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
         . $NVM_DIR/nvm.sh && \
         nvm install ${NODE_VERSION} && \
         nvm use ${NODE_VERSION} && \
         nvm alias ${NODE_VERSION} && \
         npm install -g gulp bower vue-cli \
-;fi
+; npm cache clean --force; fi
 
 # Wouldn't execute when added to the RUN statement in the above block
 # Source NVM when loading bash since ~/.profile isn't loaded on non-login shell
@@ -265,13 +261,18 @@ ENV YARN_VERSION ${YARN_VERSION}
 RUN if [ ${INSTALL_YARN} = true ]; then \
     [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && \
     if [ ${YARN_VERSION} = "latest" ]; then \
-        curl -o- -L https://yarnpkg.com/install.sh | bash; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \
     else \
-        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
     fi && \
     echo "" >> ~/.bashrc && \
     echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> ~/.bashrc \
-;fi
+; else \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+    fi \
+
+
+ fi
 
 # Add YARN binaries to root's .bashrc
 USER root
@@ -294,22 +295,20 @@ ENV INSTALL_AEROSPIKE ${INSTALL_AEROSPIKE}
 COPY ./aerospike.ini /etc/php/7.1/cli/conf.d/aerospike.ini
 
 RUN if [ ${INSTALL_AEROSPIKE} = true ]; then \
-    # Fix dependencies for PHPUnit within aerospike extension
     apt-get update -yqq && \
-    apt-get -y install sudo wget && \
+    apt-get -y --no-install-recommends install sudo wget && \
 
-    # Install the php aerospike extension
-    curl -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/aerospike/aerospike-client-php/archive/3.4.14.tar.gz" \
+    # In -f ta l he php aerospike extension \
+    cu l -L -o /tmp/aerospike-client \
     && mkdir -p aerospike-client-php \
     && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \
     && ( \
         cd aerospike-client-php/src/aerospike \
         && phpize \
         && ./build.sh \
-        && make install \
+    
     ) \
-    && rm /tmp/aerospike-client-php.tar.gz \
-;fi
+    ; rm -rf /var/lib/apt/lists/*; fi
 
 RUN if [ ${INSTALL_AEROSPIKE} = false ]; then \
     rm /etc/php/7.1/cli/conf.d/aerospike.ini \
@@ -324,13 +323,12 @@ ARG INSTALL_V8JS=false
 ENV INSTALL_V8JS ${INSTALL_V8JS}
 
 RUN if [ ${INSTALL_V8JS} = true ]; then \
-    # Install the php V8JS extension
     add-apt-repository -y ppa:pinepain/libv8-5.4 \
     && apt-get update -yqq \
-    && apt-get install -y php-xml php-dev php-pear libv8-5.4 \
+    && apt-get install --no-install-recommends -y php-xml php-dev php-pear libv8-5.4 \
     && pecl install v8js \
     && echo "extension=v8js.so" >> /etc/php/7.1/cli/php.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Non-root user : PHPUnit path
@@ -415,13 +413,10 @@ ARG INSTALL_MSSQL=true
 ENV INSTALL_MSSQL ${INSTALL_MSSQL}
 
 RUN if [ ${INSTALL_MSSQL} = true ]; then \
-    #####################################
-    # Install Depenencies:
-    #####################################
         cd / && \
         apt-get update -yqq && \
-        apt-get install -y --force-yes wget apt-transport-https curl freetds-common libsybdb5 freetds-bin unixodbc unixodbc-dev && \
-
+        apt-get install --no-install-recommends -y --force-yes wget apt-transport-https curl freetds-common libsybdb5 freetds-bin unixodbc unixodbc-dev && \
+        
     #####################################
     #  The following steps were taken from
     #  Microsoft's github account:
@@ -429,63 +424,53 @@ RUN if [ ${INSTALL_MSSQL} = true ]; then \
     #####################################
 
     # Add PHP 7 repository
-    # for Debian jessie
-    # And System upgrade
+    # for De ia \
+    d System upgrade
         cd / && \
-        echo "deb http://packages.dotdeb.org jessie all" \
-        | tee /etc/apt/sources.list.d/dotdeb.list \
-        && wget -qO- https://www.dotdeb.org/dotdeb.gpg \
-        | apt-key add - \
-        && apt-get update -yqq \
+        ec o "deb http://packages.dotdeb.org jessie all" \
+        | tee /etc/apt/ \
+        && wget -qO- https://w \
+        | pt-key add - \
+            && apt-get update -yqq \
         && apt-get upgrade -qq && \
 
-    # Install UnixODBC
-    # Compile odbc_config as it is not part of unixodbc package
+    stall UnixODBC \
+    mpile odbc_config as it is not part of unixodbc package
         cd / && \
-        apt-get update -yqq && \
-        apt-get install -y whiptail \
-        unixodbc libgss3 odbcinst devscripts debhelper dh-exec dh-autoreconf libreadline-dev libltdl-dev \
-        && dget -u -x http://http.debian.net/debian/pool/main/u/unixodbc/unixodbc_2.3.1-3.dsc \
-        && cd unixodbc-*/ \
+        ap -get update -yqq && \
+        ap -get install - \
+        un xodbc libgs --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" 3 dbci st devscripts d \
+        && dget -u -x http://http.debian.net/debia /p \
+            && cd unixodbc-*/ \
         && ./configure && make && make install \
-        && cp -v ./exe/odbc_config /usr/local/bin/ && \
-
+        && cp -v ./exe/odbc_config \
+       
     # Fake uname for install.sh
         printf '#!/bin/bash\nif [ "$*" == "-p" ]; then echo "x86_64"; else /bin/uname "$@"; fi' \
-        | tee /usr/local/bin/uname \
+        | te  / \
         && chmod +x /usr/local/bin/uname && \
 
-    # Microsoft ODBC Driver 13 for Linux
-    # Note: There's a copy of this tar on my hubiC
+    cr soft ODBC Driver 13 for Linux \
+    te  There's a copy \
         cd / && \
-        wget -nv -O msodbcsql-13.0.0.0.tar.gz \
-        "https://meetsstorenew.blob.core.windows.net/contianerhd/Ubuntu%2013.0%20Tar/msodbcsql-13.0.0.0.tar.gz?st=2016-10-18T17%3A29%3A00Z&se=2022-10-19T17%3A29%3A00Z&sp=rl&sv=2015-04-05&sr=b&sig=cDwPfrouVeIQf0vi%2BnKt%2BzX8Z8caIYvRCmicDL5oknY%3D" \
+        wg t -nv -O msodbcsql-13.0.0.0.tar.gz \
+        "h tps://meetsstorenew.blob.core.w \
         && tar -xf msodbcsql-13.0.0.0.tar.gz \
-        && cd msodbcsql-*/ \
+            && cd msodbcsql-*/ \
         && ldd lib64/libmsodbcsql-13.0.so.0.0 \
         && ./install.sh install --accept-license \
         && ls -l /opt/microsoft/msodbcsql/ \
-        && odbcinst -q -d -n "ODBC Driver 13 for SQL Server" && \
-
+        && odbcinst -q -d -n OD \
 
+        
     #####################################
     # Install sqlsrv y pdo_sqlsrv
-    # extensions:
-    #####################################
-
-    pecl install sqlsrv-4.0.8 && \
-    pecl install pdo_sqlsrv-4.0.8 && \
-
-    #####################################
-    # Set locales for the container
-    #####################################
+    # extensions: \
+    ## ################################## \
 
-    apt-get install -y locales \
-    && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
-    && locale-gen \
-    && echo "extension=sqlsrv.so" > /etc/php/7.1/cli/conf.d/20-sqlsrv.ini \
-    && echo "extension=pdo_sqlsrv.so" > /etc/php/7.1/cli/conf.d/20-pdo_sqlsrv.ini \
-;fi
+    pe l install sqlsrv-4.0.8 && \
+    pe l install pdo_sqlsrv-4.0.8 && \
+    ; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Minio:
@@ -509,19 +494,15 @@ ARG INSTALL_SYMFONY=false
 ENV INSTALL_SYMFONY ${INSTALL_SYMFONY}
 RUN if [ ${INSTALL_SYMFONY} = true ]; then \
 
-  mkdir -p /usr/local/bin \
-  && curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony \
-  && chmod a+x /usr/local/bin/symfony \
+  mk ir - -f  /us /local/bin \
+  && curl -LsS https://symfony.com/in \
+  && chmod a+x /usr/lo
+  \
+  # Symfony 3 alias \
 
-  #  Symfony 3 alias
-  && echo 'alias dev="php bin/console -e=dev"' >> ~/.bashrc \
-  && echo 'alias prod="php bin/console -e=prod"' >> ~/.bashrc \
 
-  #  Symfony 2 alias
-  #  && echo 'alias dev="php app/console -e=dev"' >> ~/.bashrc \
-  #  && echo 'alias prod="php app/console -e=prod"' >> ~/.bashrc \
 
-;fi
+  ; fi
 
 #####################################
 # MySQL client
@@ -533,8 +514,8 @@ ENV INSTALL_MYSQL_CLIENT ${INSTALL_MYSQL_CLIENT}
 
 RUN if [ ${INSTALL_MYSQL_CLIENT} = true ]; then \
     apt-get update && \
-    apt-get install -y mysql-client \
-;fi
+    apt-get install --no-install-recommends -y mysql-client \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # PostgreSQL client
@@ -546,8 +527,8 @@ ENV INSTALL_PGSQL_CLIENT ${INSTALL_PGSQL_CLIENT}
 
 RUN if [ ${INSTALL_PGSQL_CLIENT} = true ]; then \
     apt-get update && \
-    apt-get install -y postgresql-client \
-;fi
+    apt-get install --no-install-recommends -y postgresql-client \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #
 #--------------------------------------------------------------------------