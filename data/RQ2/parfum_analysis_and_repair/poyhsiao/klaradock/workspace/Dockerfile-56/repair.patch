diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/poyhsiao/klaradock/workspace/Dockerfile-56 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/poyhsiao/klaradock/workspace/Dockerfile-56/repaired.Dockerfile
index 369712d..496794a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/poyhsiao/klaradock/workspace/Dockerfile-56
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/poyhsiao/klaradock/workspace/Dockerfile-56/repaired.Dockerfile
@@ -63,11 +63,10 @@ ARG INSTALL_SOAP=false
 ENV INSTALL_SOAP ${INSTALL_SOAP}
 
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-  # Install the PHP SOAP extension
   add-apt-repository -y ppa:ondrej/php && \
   apt-get update -yqq && \
-  apt-get -y install libxml2-dev php5.6-soap \
-;fi
+  apt-get -y --no-install-recommends install libxml2-dev php5.6-soap \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # PHP GMP
@@ -77,9 +76,8 @@ ARG INSTALL_GMP=false
 ENV INSTALL_GMP ${INSTALL_GMP}
 
 RUN if [ ${INSTALL_GMP} = true ]; then \
-    # Install GMP extension
-    apt-get -y install php-gmp \
-;fi
+    apt-get -y --no-install-recommends install php-gmp \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Set Timezone
@@ -143,11 +141,10 @@ RUN echo "" >> ~/.bashrc && \
 
 ARG INSTALL_XDEBUG=false
 RUN if [ ${INSTALL_XDEBUG} = true ]; then \
-    # Load the xdebug extension only with phpunit commands
-    apt-get install -y --force-yes php5.6-xdebug && \
+    apt-get install --no-install-recommends -y --force-yes php5.6-xdebug && \
     sed -i 's/^;//g' /etc/php/5.6/cli/conf.d/20-xdebug.ini && \
     echo "alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'" >> ~/.bashrc \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 # ADD for REMOTE debugging
 COPY ./xdebug.ini /etc/php/5.6/cli/conf.d/xdebug.ini
 
@@ -163,11 +160,11 @@ ENV BLACKFIRE_CLIENT_ID ${BLACKFIRE_CLIENT_ID}
 ENV BLACKFIRE_CLIENT_TOKEN ${BLACKFIRE_CLIENT_TOKEN}
 
 RUN if [ ${INSTALL_XDEBUG} = false -a ${INSTALL_BLACKFIRE} = true ]; then \
-    curl -L https://packagecloud.io/gpg.key | apt-key add - && \
+    curl -f -L https://packagecloud.io/gpg.key | apt-key add - && \
     echo "deb http://packages.blackfire.io/debian any main" | tee /etc/apt/sources.list.d/blackfire.list && \
     apt-get update -yqq && \
-    apt-get install blackfire-agent \
-;fi
+    apt-get install -y --no-install-recommends blackfire-agent \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # ssh:
@@ -228,14 +225,13 @@ ARG INSTALL_NODE=false
 ENV INSTALL_NODE ${INSTALL_NODE}
 ENV NVM_DIR /home/laradock/.nvm
 RUN if [ ${INSTALL_NODE} = true ]; then \
-    # Install nvm (A Node Version Manager)
-    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
+    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
         . $NVM_DIR/nvm.sh && \
         nvm install ${NODE_VERSION} && \
         nvm use ${NODE_VERSION} && \
         nvm alias ${NODE_VERSION} && \
         npm install -g gulp bower vue-cli \
-;fi
+; npm cache clean --force; fi
 
 # Wouldn't execute when added to the RUN statement in the above block
 # Source NVM when loading bash since ~/.profile isn't loaded on non-login shell
@@ -268,13 +264,18 @@ ENV YARN_VERSION ${YARN_VERSION}
 RUN if [ ${INSTALL_YARN} = true ]; then \
     [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && \
     if [ ${YARN_VERSION} = "latest" ]; then \
-        curl -o- -L https://yarnpkg.com/install.sh | bash; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \
     else \
-        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
     fi && \
     echo "" >> ~/.bashrc && \
     echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> ~/.bashrc \
-;fi
+; else \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+    fi \
+
+
+ fi
 
 # Add YARN binaries to root's .bashrc
 USER root
@@ -297,8 +298,7 @@ ENV INSTALL_AEROSPIKE ${INSTALL_AEROSPIKE}
 COPY ./aerospike.ini /etc/php/5.6/cli/conf.d/aerospike.ini
 
 RUN if [ ${INSTALL_AEROSPIKE} = true ]; then \
-    # Install the php aerospike extension
-    curl -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/aerospike/aerospike-client-php/archive/3.4.14.tar.gz" \
+    curl -f -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/aerospike/aerospike-client-php/archive/3.4.14.tar.gz" \
     && mkdir -p aerospike-client-php \
     && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \
     && ( \
@@ -308,7 +308,7 @@ RUN if [ ${INSTALL_AEROSPIKE} = true ]; then \
         && make install \
     ) \
     && rm /tmp/aerospike-client-php.tar.gz \
-;fi
+; fi
 
 RUN if [ ${INSTALL_AEROSPIKE} = false ]; then \
     rm /etc/php/5.6/cli/conf.d/aerospike.ini \
@@ -416,8 +416,8 @@ ENV INSTALL_MYSQL_CLIENT ${INSTALL_MYSQL_CLIENT}
 
 RUN if [ ${INSTALL_MYSQL_CLIENT} = true ]; then \
     apt-get update && \
-    apt-get install -y mysql-client \
-;fi
+    apt-get install --no-install-recommends -y mysql-client \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # PostgreSQL client
@@ -429,8 +429,8 @@ ENV INSTALL_PGSQL_CLIENT ${INSTALL_PGSQL_CLIENT}
 
 RUN if [ ${INSTALL_PGSQL_CLIENT} = true ]; then \
     apt-get update && \
-    apt-get install -y postgresql-client \
-;fi
+    apt-get install --no-install-recommends -y postgresql-client \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #
 #--------------------------------------------------------------------------