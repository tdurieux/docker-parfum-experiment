{
  "startTime": 1674250397933,
  "endTime": 1674250398903,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 56,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 9,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# Build:\n# docker build -t rahul-libtest .\n#\n# Run:\n# docker run -it rahul-libtest\n#\n# Compose:\n# docker-compose up -d\n\nFROM ubuntu:14.04\nMAINTAINER Rahul Raviprasad,Manikantha Tadi\n\n# 80 = HTTP, 443 = HTTPS, 3000 = MEAN.JS server, 35729 = livereload, 8080 = node-inspector\nEXPOSE 80 443 3000 35730 8080 22\n\n# Set development environment as default\nENV NODE_ENV development\n\n#install supervisord\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server apache2 supervisor && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /var/lock/apache2 /var/run/apache2 /var/run/sshd /var/log/supervisor\n\n# Install Utilities\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y curl \\\n wget \\\n aptitude \\\n htop \\\n vim \\\n git \\\n traceroute \\\n dnsutils \\\n curl \\\n ssh \\\n sudo \\\n apt-utils \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -\nRUN sudo apt-get install --no-install-recommends -y nodejs \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Prerequisites\nRUN npm install -g gulp bower yo mocha karma-cli pm2 && npm cache clean --force\n\nRUN mkdir -p /opt/mean.js/public/lib\nWORKDIR /opt/mean.js\n\n#Install Monogod\nRUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\nRUN echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list\nRUN sudo apt-get update\nRUN sudo apt-get install --no-install-recommends -y mongodb-org && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /data/db\n\n# Copies the local package.json file to the container\n# and utilities docker container cache to not needing to rebuild\n# and install node_modules/ everytime we build the docker, but only\n# when the local package.json file changes.\n# Install npm packages\n# Install bower packages\n<<<<<<< HEAD\nRUN git clone https://github.com/Rahul-Raviprasad/Library\nWORKDIR /opt/mean.js/Library\nRUN npm install && npm cache clean --force;\nRUN bower install --allow-root\n\n# Run MEAN.JS server\n#CMD [\"npm\", \"start\"]\nENTRYPOINT [\"/usr/bin/mongod\"]\n\n=======\nCOPY bower.json /opt/mean.js/bower.json\nCOPY .bowerrc /opt/mean.js/.bowerrc\nRUN bower install --quiet --allow-root --config.interactive=false\n\n# Install mongodb\nRUN git clone https://github.com/Rahul-Raviprasad/Library\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\n\nRUN echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" > /etc/apt/sources.list.d/mongodb-org.list\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y mongodb-org && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /data/db /data/configdb \\\n\t&& chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\n\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# 80 = HTTP, 443 = HTTPS, 3000 = MEAN.JS server, 35729 = livereload, 8080 = node-inspector\nEXPOSE 80 443 3000 35730 8080 22\n\n# Run MEAN.JS server\nCMD [\"/usr/bin/supervisord\"]\n>>>>>>> 44a8a2e41e6c36a062d83e2cfa2ae4208d502697\n\n"
}