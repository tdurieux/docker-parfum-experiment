{"repository":"https://github.com/diygod/rsshub","dockerfilePath":"Dockerfile","startTime":1673074500486,"endTime":1673074650227,"clone":{"startTime":1673074500487,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/diygod/rsshub'...\n","error":null,"endTime":1673074504703,"commit":"cb761c377b87e845afb4c680bb4e6fe8707fdc81"},"originalBuild":{"startTime":1673074504795,"endTime":1673074649148,"error":null,"stdout":"Sending build context to Docker daemon  12.61MB\r\r\nStep 1/40 : FROM node:16-bullseye as dep-builder\n16-bullseye: Pulling from library/node\n32de3c850997: Already exists\nfa1d4c8d85a4: Already exists\nc796299bbbdd: Already exists\n81283a9569ad: Already exists\n60b38700e7fb: Already exists\n9537c7a3988e: Already exists\n1baa37c1a486: Pulling fs layer\na32c0cc32d74: Pulling fs layer\n5fd19098064a: Pulling fs layer\n5fd19098064a: Verifying Checksum\n5fd19098064a: Download complete\na32c0cc32d74: Verifying Checksum\na32c0cc32d74: Download complete\n1baa37c1a486: Verifying Checksum\n1baa37c1a486: Download complete\n1baa37c1a486: Pull complete\na32c0cc32d74: Pull complete\n5fd19098064a: Pull complete\nDigest: sha256:a20bfeb81a419dd3c0027c754f77746dfb8676b0d6b9f47a9ebdb0bc6543f2e2\nStatus: Downloaded newer image for node:16-bullseye\n ---> f0a59f79abde\nStep 2/40 : WORKDIR /app\n ---> Running in a6664141fde6\nRemoving intermediate container a6664141fde6\n ---> a0b0d3189d38\nStep 3/40 : ARG USE_CHINA_NPM_REGISTRY=0\n ---> Running in 97f3b90624a9\nRemoving intermediate container 97f3b90624a9\n ---> c6da3ae236cb\nStep 4/40 : RUN     set -ex &&     if [ \"$USE_CHINA_NPM_REGISTRY\" = 1 ]; then         echo 'use npm mirror' &&         npm config set registry https://registry.npmmirror.com &&         yarn config set registry https://registry.npmmirror.com ;     fi;\n ---> Running in 8a727e41a681\n\u001b[91m+ [ 0 = 1 ]\n\u001b[0mRemoving intermediate container 8a727e41a681\n ---> df9ed4eb7cc9\nStep 5/40 : COPY ./yarn.lock /app/\n ---> 69caa79cd5e3\nStep 6/40 : COPY ./package.json /app/\n ---> 2e1f5bc26d49\nStep 7/40 : RUN     set -ex &&     export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true &&     yarn install --production --frozen-lockfile --network-timeout 1000000 &&     yarn cache clean\n ---> Running in b5fd720b6bf8\n\u001b[91m+ export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\n+ yarn install --production --frozen-lockfile --network-timeout 1000000\n\u001b[0myarn install v1.22.19\n[1/5] Validating package.json...\n[2/5] Resolving packages...\n[3/5] Fetching packages...\n\u001b[91mwarning url-loader@1.1.2: Invalid bin field for \"url-loader\".\n\u001b[0m[4/5] Linking dependencies...\n\u001b[91mwarning \"request-promise-native > request-promise-core@1.1.4\" has unmet peer dependency \"request@^2.34\".\n\u001b[0m\u001b[91mwarning \"torrent-search-api > cloudscraper@4.6.0\" has unmet peer dependency \"brotli@^1.3.2\".\n\u001b[0m\u001b[91mwarning \" > request-promise-native@1.0.9\" has unmet peer dependency \"request@^2.34\".\n\u001b[0m\u001b[91mwarning \" > vuepress-plugin-sitemap@2.3.1\" has unmet peer dependency \"chalk@^2.0.0\".\nwarning \" > vuepress-plugin-sitemap@2.3.1\" has unmet peer dependency \"commander@^2.0.0\".\nwarning \" > vuepress-plugin-sitemap@2.3.1\" has unmet peer dependency \"esm@^3.0.0\".\n\u001b[0m[5/5] Building fresh packages...\nDone in 32.78s.\n\u001b[91m+ yarn cache clean\n\u001b[0myarn cache v1.22.19\nsuccess Cleared cache.\nDone in 2.09s.\nRemoving intermediate container b5fd720b6bf8\n ---> 69409d7579e9\nStep 8/40 : FROM debian:bullseye-slim as dep-version-parser\nbullseye-slim: Pulling from library/debian\n3f4ca61aafcd: Already exists\nDigest: sha256:171530d298096f0697da36b3324182e872db77c66452b85783ea893680cc1b62\nStatus: Downloaded newer image for debian:bullseye-slim\n ---> dd94cb611937\nStep 9/40 : WORKDIR /ver\n ---> Running in a451a2b4971d\nRemoving intermediate container a451a2b4971d\n ---> 5fed918aa19c\nStep 10/40 : COPY ./package.json /app/\n ---> c66434b12b36\nStep 11/40 : RUN     set -ex &&     grep -Po '(?<=\"puppeteer\": \")[^\\s\"]*(?=\")' /app/package.json | tee /ver/.puppeteer_version &&     grep -Po '(?<=\"@vercel/nft\": \")[^\\s\"]*(?=\")' /app/package.json | tee /ver/.nft_version &&     grep -Po '(?<=\"fs-extra\": \")[^\\s\"]*(?=\")' /app/package.json | tee /ver/.fs_extra_version\n ---> Running in f6edb7f4cdd6\n\u001b[91m+ grep -Po (?<=\"puppeteer\": \")[^\\s\"]*(?=\") /app/package.json\n+ tee /ver/.puppeteer_version\n\u001b[0m19.4.1\n\u001b[91m+ grep -Po (?<=\"@vercel/nft\": \")[^\\s\"]*(?=\") /app/package.json\n\u001b[0m\u001b[91m+ tee /ver/.nft_version\n\u001b[0m0.22.6\n\u001b[91m+ grep -Po (?<=\"fs-extra\": \")[^\\s\"]*(?=\") /app/package.json\n\u001b[0m\u001b[91m+ tee /ver/.fs_extra_version\n\u001b[0m11.1.0\nRemoving intermediate container f6edb7f4cdd6\n ---> 667b5a442cf1\nStep 12/40 : FROM node:16-bullseye-slim as docker-minifier\n16-bullseye-slim: Pulling from library/node\n3f4ca61aafcd: Already exists\n00fde01815c9: Already exists\n031949ce49ec: Pulling fs layer\n16cee6032317: Pulling fs layer\nfd35893cdbff: Pulling fs layer\nfd35893cdbff: Verifying Checksum\nfd35893cdbff: Download complete\n031949ce49ec: Verifying Checksum\n031949ce49ec: Download complete\n16cee6032317: Verifying Checksum\n16cee6032317: Download complete\n031949ce49ec: Pull complete\n16cee6032317: Pull complete\nfd35893cdbff: Pull complete\nDigest: sha256:30ec224b4c35a768e038674444d0718494a7d8847c96ee73a8d3db795135b4c9\nStatus: Downloaded newer image for node:16-bullseye-slim\n ---> b3b9a79a4762\nStep 13/40 : WORKDIR /minifier\n ---> Running in 0a81879e7d42\nRemoving intermediate container 0a81879e7d42\n ---> 840f7c80d5fc\nStep 14/40 : COPY --from=dep-version-parser /ver/* /minifier/\n ---> b93b29d763cf\nStep 15/40 : ARG USE_CHINA_NPM_REGISTRY=0\n ---> Running in d477c508f33c\nRemoving intermediate container d477c508f33c\n ---> 2628540157ad\nStep 16/40 : RUN     set -ex &&     if [ \"$USE_CHINA_NPM_REGISTRY\" = 1 ]; then         npm config set registry https://registry.npmmirror.com &&         yarn config set registry https://registry.npmmirror.com ;     fi;     yarn add @vercel/nft@$(cat .nft_version) fs-extra@$(cat .fs_extra_version) &&     yarn cache clean\n ---> Running in 3e2622464d2f\n\u001b[91m+ [ 0 = 1 ]\n\u001b[0m\u001b[91m+ cat .nft_version\n\u001b[0m\u001b[91m+ \u001b[0m\u001b[91mcat .fs_extra_version\n\u001b[0m\u001b[91m+ yarn add @vercel/nft@0.22.6 fs-extra@11.1.0\n\u001b[0myarn add v1.22.19\ninfo No lockfile found.\n[1/4] Resolving packages...\n[2/4] Fetching packages...\n[3/4] Linking dependencies...\n[4/4] Building fresh packages...\nsuccess Saved lockfile.\nsuccess Saved 66 new dependencies.\ninfo Direct dependencies\n├─ @vercel/nft@0.22.6\n└─ fs-extra@11.1.0\ninfo All dependencies\n├─ @mapbox/node-pre-gyp@1.0.10\n├─ @rollup/pluginutils@4.2.1\n├─ @vercel/nft@0.22.6\n├─ abbrev@1.1.1\n├─ acorn@8.8.1\n├─ agent-base@6.0.2\n├─ ansi-regex@5.0.1\n├─ aproba@2.0.0\n├─ are-we-there-yet@2.0.0\n├─ async-sema@3.1.1\n├─ balanced-match@1.0.2\n├─ bindings@1.5.0\n├─ brace-expansion@1.1.11\n├─ braces@3.0.2\n├─ chownr@2.0.0\n├─ color-support@1.1.3\n├─ concat-map@0.0.1\n├─ console-control-strings@1.1.0\n├─ delegates@1.0.0\n├─ detect-libc@2.0.1\n├─ emoji-regex@8.0.0\n├─ estree-walker@2.0.2\n├─ file-uri-to-path@1.0.0\n├─ fill-range@7.0.1\n├─ fs-extra@11.1.0\n├─ fs-minipass@2.1.0\n├─ fs.realpath@1.0.0\n├─ gauge@3.0.2\n├─ graceful-fs@4.2.10\n├─ has-unicode@2.0.1\n├─ https-proxy-agent@5.0.1\n├─ inflight@1.0.6\n├─ inherits@2.0.4\n├─ is-fullwidth-code-point@3.0.0\n├─ is-number@7.0.0\n├─ jsonfile@6.1.0\n├─ lru-cache@6.0.0\n├─ make-dir@3.1.0\n├─ micromatch@4.0.5\n├─ minimatch@3.1.2\n├─ minizlib@2.1.2\n├─ mkdirp@1.0.4\n├─ ms@2.1.2\n├─ node-fetch@2.6.7\n├─ node-gyp-build@4.6.0\n├─ nopt@5.0.0\n├─ npmlog@5.0.1\n├─ object-assign@4.1.1\n├─ path-is-absolute@1.0.1\n├─ picomatch@2.3.1\n├─ readable-stream@3.6.0\n├─ resolve-from@5.0.0\n├─ rimraf@3.0.2\n├─ safe-buffer@5.2.1\n├─ semver@7.3.8\n├─ set-blocking@2.0.0\n├─ signal-exit@3.0.7\n├─ string_decoder@1.3.0\n├─ string-width@4.2.3\n├─ tar@6.1.13\n├─ to-regex-range@5.0.1\n├─ tr46@0.0.3\n├─ util-deprecate@1.0.2\n├─ webidl-conversions@3.0.1\n├─ whatwg-url@5.0.0\n└─ wide-align@1.1.5\nDone in 2.56s.\n\u001b[91m+ yarn cache clean\n\u001b[0myarn cache v1.22.19\n\u001b[91mwarning package.json: No license field\n\u001b[0msuccess Cleared cache.\nDone in 0.11s.\nRemoving intermediate container 3e2622464d2f\n ---> 7552c519e139\nStep 17/40 : COPY . /app\n ---> 79b6f3b1908c\nStep 18/40 : COPY --from=dep-builder /app /app\n ---> 9f7a2a4c6659\nStep 19/40 : RUN     set -ex &&     cp /app/scripts/docker/minify-docker.js /minifier/ &&     export PROJECT_ROOT=/app &&     node /minifier/minify-docker.js &&     rm -rf /app/node_modules /app/scripts &&     mv /app/app-minimal/node_modules /app/ &&     rm -rf /app/app-minimal &&     ls -la /app &&     du -hd1 /app\n ---> Running in 8082e0d790c8\n\u001b[91m+ cp /app/scripts/docker/minify-docker.js /minifier/\n\u001b[0m\u001b[91m+ export PROJECT_ROOT=/app\n+ node /minifier/minify-docker.js\n\u001b[0mStart analyzing, project root: /app\nTotal touchable files: 10864\nTotal files need to be copied (touchable files in node_modules/): 5833\nStart copying files, destination: /app/app-minimal\n\u001b[91m+ rm -rf /app/node_modules /app/scripts\n\u001b[0m\u001b[91m+ mv /app/app-minimal/node_modules /app/\n\u001b[0m\u001b[91m+ rm -rf /app/app-minimal\n\u001b[0m\u001b[91m+ ls -la /app\n\u001b[0mtotal 728\ndrwxr-xr-x   1 root root   4096 Jan  7 06:57 .\ndrwxr-xr-x   1 root root   4096 Jan  7 06:56 ..\ndrwxrwxr-x   2 root root   4096 Jan  7 06:55 .devcontainer\ndrwxrwxr-x   4 root root   4096 Jan  7 06:55 .git\n-rw-rw-r--   1 root root   1258 Jan  7 06:55 .gitpod.yml\ndrwxrwxr-x   2 root root   4096 Jan  7 06:55 api\ndrwxrwxr-x   8 root root   4096 Jan  7 06:55 lib\ndrwxrwxr-x   2 root root   4096 Jan  7 06:55 logs\ndrwxr-xr-x 460 root root  20480 Jan  7 06:57 node_modules\n-rw-rw-r--   1 root root   5434 Jan  7 06:55 package.json\n-rw-rw-r--   1 root root 677367 Jan  7 06:55 yarn.lock\n\u001b[91m+ du -hd1 /app\n\u001b[0m4.0K\t/app/logs\n8.0K\t/app/.devcontainer\n56K\t/app/.git\n29M\t/app/lib\n8.0K\t/app/api\n81M\t/app/node_modules\n111M\t/app\nRemoving intermediate container 8082e0d790c8\n ---> a18494541b35\nStep 20/40 : FROM node:16-bullseye-slim as chromium-downloader\n ---> b3b9a79a4762\nStep 21/40 : WORKDIR /app\n ---> Running in a821a5a00fd2\nRemoving intermediate container a821a5a00fd2\n ---> ab0e285f0473\nStep 22/40 : COPY --from=dep-version-parser /ver/.puppeteer_version /app/.puppeteer_version\n ---> ceb4e18c869d\nStep 23/40 : ARG TARGETPLATFORM\n ---> Running in a80db32ac2e3\nRemoving intermediate container a80db32ac2e3\n ---> b8cf5ce18b6f\nStep 24/40 : ARG USE_CHINA_NPM_REGISTRY=0\n ---> Running in d5d7ab6b6834\nRemoving intermediate container d5d7ab6b6834\n ---> 712f2c99776e\nStep 25/40 : ARG PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1\n ---> Running in e70090469a33\nRemoving intermediate container e70090469a33\n ---> cc863073e907\nStep 26/40 : RUN     set -ex ;     if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ] && [ \"$TARGETPLATFORM\" = 'linux/amd64' ]; then         if [ \"$USE_CHINA_NPM_REGISTRY\" = 1 ]; then             npm config set registry https://registry.npmmirror.com &&             yarn config set registry https://registry.npmmirror.com ;         fi;         echo 'Downloading Chromium...' &&         unset PUPPETEER_SKIP_CHROMIUM_DOWNLOAD &&         yarn add puppeteer@$(cat /app/.puppeteer_version) &&         yarn cache clean ;     else         mkdir -p /root/.cache/puppeteer ;     fi;\n ---> Running in 7954a8cb6d24\n\u001b[91m+ [ 1 = 0 ]\n+ mkdir -p /root/.cache/puppeteer\n\u001b[0mRemoving intermediate container 7954a8cb6d24\n ---> c42d237e54d6\nStep 27/40 : FROM node:16-bullseye-slim as app\n ---> b3b9a79a4762\nStep 28/40 : LABEL org.opencontainers.image.authors=\"https://github.com/DIYgod/RSSHub\"\n ---> Running in 7ba11bb4105f\nRemoving intermediate container 7ba11bb4105f\n ---> 846b9fdf590d\nStep 29/40 : ENV NODE_ENV production\n ---> Running in ff3ab335b411\nRemoving intermediate container ff3ab335b411\n ---> 5a93b482404f\nStep 30/40 : ENV TZ Asia/Shanghai\n ---> Running in 259a153868bf\nRemoving intermediate container 259a153868bf\n ---> de3b70c0f194\nStep 31/40 : WORKDIR /app\n ---> Running in 89247d342bf6\nRemoving intermediate container 89247d342bf6\n ---> 2738b125cba3\nStep 32/40 : ARG TARGETPLATFORM\n ---> Running in a29aba2ec997\nRemoving intermediate container a29aba2ec997\n ---> ba03a4cb71dd\nStep 33/40 : ARG PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1\n ---> Running in c17beab21d36\nRemoving intermediate container c17beab21d36\n ---> ff8fac07e18f\nStep 34/40 : RUN     set -ex &&     apt-get update &&     apt-get install -yq --no-install-recommends         dumb-init     ;     if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ]; then         if [ \"$TARGETPLATFORM\" = 'linux/amd64' ]; then             apt-get install -yq --no-install-recommends                 ca-certificates fonts-liberation wget xdg-utils                 libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcairo2 libcups2 libdbus-1-3 libdrm2                 libexpat1 libgbm1 libglib2.0-0 libnspr4 libnss3 libpango-1.0-0 libx11-6 libxcb1 libxcomposite1                 libxdamage1 libxext6 libxfixes3 libxkbcommon0 libxrandr2             ;         else             apt-get install -yq --no-install-recommends                 chromium             &&             echo 'CHROMIUM_EXECUTABLE_PATH=chromium' | tee /app/.env ;         fi;     fi;     rm -rf /var/lib/apt/lists/*\n ---> Running in 4a2a0c657675\n\u001b[91m+ apt-get update\n\u001b[0mGet:1 http://deb.debian.org/debian bullseye InRelease [116 kB]\nGet:2 http://deb.debian.org/debian-security bullseye-security InRelease [48.4 kB]\nGet:3 http://deb.debian.org/debian bullseye-updates InRelease [44.1 kB]\nGet:4 http://deb.debian.org/debian bullseye/main amd64 Packages [8183 kB]\nGet:5 http://deb.debian.org/debian-security bullseye-security/main amd64 Packages [210 kB]\nGet:6 http://deb.debian.org/debian bullseye-updates/main amd64 Packages [14.6 kB]\nFetched 8616 kB in 1s (6840 kB/s)\nReading package lists...\n\u001b[91m+ apt-get install -yq --no-install-recommends dumb-init\n\u001b[0mReading package lists...\nBuilding dependency tree...\nReading state information...\nThe following NEW packages will be installed:\n  dumb-init\n0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 13.8 kB of archives.\nAfter this operation, 33.8 kB of additional disk space will be used.\nGet:1 http://deb.debian.org/debian bullseye/main amd64 dumb-init amd64 1.2.5-1 [13.8 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 13.8 kB in 0s (556 kB/s)\nSelecting previously unselected package dumb-init.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 6661 files and directories currently installed.)\r\nPreparing to unpack .../dumb-init_1.2.5-1_amd64.deb ...\r\nUnpacking dumb-init (1.2.5-1) ...\r\nSetting up dumb-init (1.2.5-1) ...\r\n\u001b[91m+ [ 1 = 0 ]\n\u001b[0m\u001b[91m+ rm -rf /var/lib/apt/lists/auxfiles /var/lib/apt/lists/deb.debian.org_debian-security_dists_bullseye-security_InRelease /var/lib/apt/lists/deb.debian.org_debian-security_dists_bullseye-security_main_binary-amd64_Packages.lz4 /var/lib/apt/lists/deb.debian.org_debian_dists_bullseye-updates_InRelease /var/lib/apt/lists/deb.debian.org_debian_dists_bullseye-updates_main_binary-amd64_Packages.lz4 /var/lib/apt/lists/deb.debian.org_debian_dists_bullseye_InRelease /var/lib/apt/lists/deb.debian.org_debian_dists_bullseye_main_binary-amd64_Packages.lz4 /var/lib/apt/lists/lock /var/lib/apt/lists/partial\n\u001b[0mRemoving intermediate container 4a2a0c657675\n ---> 6222bcdbed56\nStep 35/40 : COPY --from=chromium-downloader /root/.cache/puppeteer /root/.cache/puppeteer\n ---> 6773741279cb\nStep 36/40 : RUN     set -x &&     if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ] && [ \"$TARGETPLATFORM\" = 'linux/amd64' ]; then         echo 'Verifying Chromium installation...' &&         ldd $(find /root/.cache/puppeteer/ -name chrome) | grep \"not found\" ;         if [ \"$?\" = 0 ]; then             echo \"!!! Chromium has unmet shared libs !!!\" &&             exit 1 ;         else             echo \"Awesome! All shared libs are met!\" ;         fi;     fi;\n ---> Running in bf92b1f16237\n\u001b[91m+ [ 1 = 0 ]\n\u001b[0mRemoving intermediate container bf92b1f16237\n ---> a5a714307ca1\nStep 37/40 : COPY --from=docker-minifier /app /app\n ---> bd77c3d6e2f3\nStep 38/40 : EXPOSE 1200\n ---> Running in b69a4325a6e7\nRemoving intermediate container b69a4325a6e7\n ---> bab67b820cfb\nStep 39/40 : ENTRYPOINT [\"dumb-init\", \"--\"]\n ---> Running in a7b850b26880\nRemoving intermediate container a7b850b26880\n ---> 11ec05dc10f1\nStep 40/40 : CMD [\"npm\", \"run\", \"start\"]\n ---> Running in 5489122951de\nRemoving intermediate container 5489122951de\n ---> 86620a90b3c7\nSuccessfully built 86620a90b3c7\nSuccessfully tagged rsshub:latest\n","stderr":"","imageSize":262483722},"repair":{"startTime":1673074649222,"endTime":1673074649550,"violations":[],"repairedDockerfile":"FROM node:16-bullseye as dep-builder\n# Here we use the non-slim image to provide build-time deps (compilers and python), thus no need to install later.\n# This effectively speeds up qemu-based cross-build.\n\nWORKDIR /app\n\n# place ARG statement before RUN statement which need it to avoid cache miss\nARG USE_CHINA_NPM_REGISTRY=0\nRUN \\\n    set -ex && \\\n    if [ \"$USE_CHINA_NPM_REGISTRY\" = 1 ]; then \\\n        echo 'use npm mirror' && \\\n        npm config set registry https://registry.npmmirror.com && \\\n        yarn config set registry https://registry.npmmirror.com ; \\\n    fi;\n\nCOPY ./yarn.lock /app/\nCOPY ./package.json /app/\n\n# lazy install Chromium to avoid cache miss, only install production dependencies to minimize the image size\nRUN \\\n    set -ex && \\\n    export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true && \\\n    yarn install --production --frozen-lockfile --network-timeout 1000000 && \\\n    yarn cache clean\n\n# ---------------------------------------------------------------------------------------------------------------------\n\nFROM debian:bullseye-slim as dep-version-parser\n# This stage is necessary to limit the cache miss scope.\n# With this stage, any modification to package.json won't break the build cache of the next two stages as long as the\n# version unchanged.\n# node:16-bullseye-slim is based on debian:bullseye-slim so this stage would not cause any additional download.\n\nWORKDIR /ver\nCOPY ./package.json /app/\nRUN \\\n    set -ex && \\\n    grep -Po '(?<=\"puppeteer\": \")[^\\s\"]*(?=\")' /app/package.json | tee /ver/.puppeteer_version && \\\n    grep -Po '(?<=\"@vercel/nft\": \")[^\\s\"]*(?=\")' /app/package.json | tee /ver/.nft_version && \\\n    grep -Po '(?<=\"fs-extra\": \")[^\\s\"]*(?=\")' /app/package.json | tee /ver/.fs_extra_version\n\n# ---------------------------------------------------------------------------------------------------------------------\n\nFROM node:16-bullseye-slim as docker-minifier\n# The stage is used to further reduce the image size by removing unused files.\n\nWORKDIR /minifier\nCOPY --from=dep-version-parser /ver/* /minifier/\n\nARG USE_CHINA_NPM_REGISTRY=0\nRUN \\\n    set -ex && \\\n    if [ \"$USE_CHINA_NPM_REGISTRY\" = 1 ]; then \\\n        npm config set registry https://registry.npmmirror.com && \\\n        yarn config set registry https://registry.npmmirror.com ; \\\n    fi; \\\n    yarn add @vercel/nft@$(cat .nft_version) fs-extra@$(cat .fs_extra_version) && \\\n    yarn cache clean\n\nCOPY . /app\nCOPY --from=dep-builder /app /app\n\nRUN \\\n    set -ex && \\\n    cp /app/scripts/docker/minify-docker.js /minifier/ && \\\n    export PROJECT_ROOT=/app && \\\n    node /minifier/minify-docker.js && \\\n    rm -rf /app/node_modules /app/scripts && \\\n    mv /app/app-minimal/node_modules /app/ && \\\n    rm -rf /app/app-minimal && \\\n    ls -la /app && \\\n    du -hd1 /app\n\n# ---------------------------------------------------------------------------------------------------------------------\n\nFROM node:16-bullseye-slim as chromium-downloader\n# This stage is necessary to improve build concurrency and minimize the image size.\n# Yeah, downloading Chromium never needs those dependencies below.\n\nWORKDIR /app\nCOPY --from=dep-version-parser /ver/.puppeteer_version /app/.puppeteer_version\n\nARG TARGETPLATFORM\nARG USE_CHINA_NPM_REGISTRY=0\nARG PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1\n# The official recommended way to use Puppeteer on x86(_64) is to use the bundled Chromium from Puppeteer:\n# https://github.com/puppeteer/puppeteer#q-why-doesnt-puppeteer-vxxx-work-with-chromium-vyyy\nRUN \\\n    set -ex ; \\\n    if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ] && [ \"$TARGETPLATFORM\" = 'linux/amd64' ]; then \\\n        if [ \"$USE_CHINA_NPM_REGISTRY\" = 1 ]; then \\\n            npm config set registry https://registry.npmmirror.com && \\\n            yarn config set registry https://registry.npmmirror.com ; \\\n        fi; \\\n        echo 'Downloading Chromium...' && \\\n        unset PUPPETEER_SKIP_CHROMIUM_DOWNLOAD && \\\n        yarn add puppeteer@$(cat /app/.puppeteer_version) && \\\n        yarn cache clean ; \\\n    else \\\n        mkdir -p /root/.cache/puppeteer ; \\\n    fi;\n\n# ---------------------------------------------------------------------------------------------------------------------\n\nFROM node:16-bullseye-slim as app\n\nLABEL org.opencontainers.image.authors=\"https://github.com/DIYgod/RSSHub\"\n\nENV NODE_ENV production\nENV TZ Asia/Shanghai\n\nWORKDIR /app\n\n# install deps first to avoid cache miss or disturbing buildkit to build concurrently\nARG TARGETPLATFORM\nARG PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1\n# https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix\n# https://github.com/puppeteer/puppeteer/issues/7822\n# https://www.debian.org/releases/bullseye/amd64/release-notes/ch-information.en.html#noteworthy-obsolete-packages\n# The official recommended way to use Puppeteer on arm/arm64 is to install Chromium from the distribution repositories:\n# https://github.com/puppeteer/puppeteer/blob/94cb08c85955c0688d12b6ed10e61a4581a01280/src/node/BrowserFetcher.ts#L116-L119\nRUN \\\n    set -ex && \\\n    apt-get update && \\\n    apt-get install -yq --no-install-recommends \\\n        dumb-init \\\n    ; \\\n    if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ]; then \\\n        if [ \"$TARGETPLATFORM\" = 'linux/amd64' ]; then \\\n            apt-get install -yq --no-install-recommends \\\n                ca-certificates fonts-liberation wget xdg-utils \\\n                libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcairo2 libcups2 libdbus-1-3 libdrm2 \\\n                libexpat1 libgbm1 libglib2.0-0 libnspr4 libnss3 libpango-1.0-0 libx11-6 libxcb1 libxcomposite1 \\\n                libxdamage1 libxext6 libxfixes3 libxkbcommon0 libxrandr2 \\\n            ; \\\n        else \\\n            apt-get install -yq --no-install-recommends \\\n                chromium \\\n            && \\\n            echo 'CHROMIUM_EXECUTABLE_PATH=chromium' | tee /app/.env ; \\\n        fi; \\\n    fi; \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=chromium-downloader /root/.cache/puppeteer /root/.cache/puppeteer\n\n# if grep matches nothing then it will exit with 1, thus, we cannot `set -e` here\nRUN \\\n    set -x && \\\n    if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ] && [ \"$TARGETPLATFORM\" = 'linux/amd64' ]; then \\\n        echo 'Verifying Chromium installation...' && \\\n        ldd $(find /root/.cache/puppeteer/ -name chrome) | grep \"not found\" ; \\\n        if [ \"$?\" = 0 ]; then \\\n            echo \"!!! Chromium has unmet shared libs !!!\" && \\\n            exit 1 ; \\\n        else \\\n            echo \"Awesome! All shared libs are met!\" ; \\\n        fi; \\\n    fi;\n\nCOPY --from=docker-minifier /app /app\n\nEXPOSE 1200\nENTRYPOINT [\"dumb-init\", \"--\"]\n\nCMD [\"npm\", \"run\", \"start\"]\n\n# ---------------------------------------------------------------------------------------------------------------------\n\n# In case Chromium has unmet shared libs, here is some magic to find and install the packages they belong to:\n# In most case you can just stop at `grep ^lib` and add those packages to the above stage.\n#\n# set -ex && \\\n# apt-get update && \\\n# apt install -yq --no-install-recommends \\\n#     apt-file \\\n# && \\\n# apt-file update && \\\n# ldd $(find /app/node_modules/puppeteer/ -name chrome) | grep -Po \"\\S+(?= => not found)\" | \\\n# sed 's/\\./\\\\./g' | awk '{print $1\"$\"}' | apt-file search -xlf - | grep ^lib | \\\n# xargs -d '\\n' -- \\\n#     apt-get install -yq --no-install-recommends \\\n# && \\\n# apt purge -yq --auto-remove \\\n#     apt-file \\\n# rm -rf /tmp/.chromium_path /var/lib/apt/lists/*\n\n# !!! If you manually build Docker image but with buildx/BuildKit disabled, set TARGETPLATFORM yourself !!!\n"}}