{"repository":"https://github.com/nlnetlabs/routinator","dockerfilePath":"Dockerfile","startTime":1672520917555,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/nlnetlabs/routinator'...\n","error":null,"commit":"68b7dc72c28a011e42cfc678bc2184d5e4eae5ac"},"originalBuild":{"startTimestamp":1672520918835,"endTimestamp":1672521214095,"error":null,"stdout":"Sending build context to Docker daemon  7.307MB\r\r\nStep 1/28 : ARG MODE=build\nStep 2/28 : ARG BASE_IMG=alpine:3.16\nStep 3/28 : ARG CARGO_ARGS\nStep 4/28 : FROM ${BASE_IMG} AS build\n ---> bfe296a52501\nStep 5/28 : ARG CARGO_ARGS\n ---> Running in 7b5c6bcda634\nRemoving intermediate container 7b5c6bcda634\n ---> 495592b6f8a1\nStep 6/28 : RUN apk add --no-cache rust cargo\n ---> Running in c70325d23e31\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.16/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.16/community/x86_64/APKINDEX.tar.gz\n(1/23) Upgrading musl (1.2.3-r1 -> 1.2.3-r2)\n(2/23) Installing rust-stdlib (1.60.0-r2)\n(3/23) Installing libgcc (11.2.1_git20220219-r2)\n(4/23) Installing libstdc++ (11.2.1_git20220219-r2)\n(5/23) Installing binutils (2.38-r3)\n(6/23) Installing libgomp (11.2.1_git20220219-r2)\n(7/23) Installing libatomic (11.2.1_git20220219-r2)\n(8/23) Installing gmp (6.2.1-r2)\n(9/23) Installing isl22 (0.22-r0)\n(10/23) Installing mpfr4 (4.1.0-r0)\n(11/23) Installing mpc1 (1.2.1-r0)\n(12/23) Installing gcc (11.2.1_git20220219-r2)\n(13/23) Installing musl-dev (1.2.3-r2)\n(14/23) Installing libffi (3.4.2-r1)\n(15/23) Installing xz-libs (5.2.5-r1)\n(16/23) Installing libxml2 (2.9.14-r2)\n(17/23) Installing llvm13-libs (13.0.1-r2)\n(18/23) Installing rust (1.60.0-r2)\n(19/23) Installing ca-certificates (20220614-r0)\n(20/23) Installing brotli-libs (1.0.9-r6)\n(21/23) Installing nghttp2-libs (1.47.0-r0)\n(22/23) Installing libcurl (7.83.1-r5)\n(23/23) Installing cargo (1.60.0-r2)\nExecuting busybox-1.35.0-r17.trigger\nExecuting ca-certificates-20220614-r0.trigger\nOK: 883 MiB in 36 packages\nRemoving intermediate container c70325d23e31\n ---> 7b026709dd2d\nStep 7/28 : WORKDIR /tmp/build\n ---> Running in fb884ec26fd4\nRemoving intermediate container fb884ec26fd4\n ---> df19cf38dd8c\nStep 8/28 : COPY . .\n ---> 0b9603cedf97\nStep 9/28 : RUN CARGO_HTTP_MULTIPLEXING=false cargo install   --locked   --path .   --root /tmp/out/   ${CARGO_ARGS}\n ---> Running in 740e8b1c130d\n\u001b[91m  Installing routinator v0.12.1-dev (/tmp/build)\n\u001b[0m\u001b[91m    Updating crates.io index\n\u001b[0m\u001b[91m Downloading crates ...\n\u001b[0m\u001b[91m  Downloaded adler v1.0.2\n\u001b[0m\u001b[91m  Downloaded arc-swap v1.5.1\n\u001b[0m\u001b[91m  Downloaded bytes v1.3.0\n\u001b[0m\u001b[91m  Downloaded crossbeam-queue v0.3.8\n\u001b[0m\u001b[91m  Downloaded bcder v0.7.0\n\u001b[0m\u001b[91m  Downloaded encoding_rs v0.8.31\n\u001b[0m\u001b[91m  Downloaded fern v0.6.1\n\u001b[0m\u001b[91m  Downloaded futures-core v0.3.25\n\u001b[0m\u001b[91m  Downloaded futures-sink v0.3.25\n\u001b[0m\u001b[91m  Downloaded heck v0.4.0\n\u001b[0m\u001b[91m  Downloaded httpdate v1.0.2\n\u001b[0m\u001b[91m  Downloaded indexmap v1.9.2\n\u001b[0m\u001b[91m  Downloaded libc v0.2.138\n\u001b[0m\u001b[91m  Downloaded match_cfg v0.1.0\n\u001b[0m\u001b[91m  Downloaded mio v0.8.5\n\u001b[0m\u001b[91m  Downloaded num_threads v0.1.6\n\u001b[0m\u001b[91m  Downloaded pin-utils v0.1.0\n\u001b[0m\u001b[91m  Downloaded quick-xml v0.23.1\n\u001b[0m\u001b[91m  Downloaded remove_dir_all v0.5.3\n\u001b[0m\u001b[91m  Downloaded rpki v0.15.8\n\u001b[0m\u001b[91m  Downloaded sct v0.7.0\n\u001b[0m\u001b[91m  Downloaded serde_json v1.0.89\n\u001b[0m\u001b[91m  Downloaded tar v0.4.38\n\u001b[0m\u001b[91m  Downloaded strsim v0.10.0\n\u001b[0m\u001b[91m  Downloaded time v0.3.17\n\u001b[0m\u001b[91m  Downloaded tokio v1.22.0\n\u001b[0m\u001b[91m  Downloaded tokio-util v0.7.4\n\u001b[0m\u001b[91m  Downloaded try-lock v0.2.3\n\u001b[0m\u001b[91m  Downloaded url v2.3.1\n\u001b[0m\u001b[91m  Downloaded webpki-roots v0.22.5\n\u001b[0m\u001b[91m  Downloaded cc v1.0.77\n\u001b[0m\u001b[91m  Downloaded clap_lex v0.3.0\n\u001b[0m\u001b[91m  Downloaded either v1.8.0\n\u001b[0m\u001b[91m  Downloaded fnv v1.0.7\n\u001b[0m\u001b[91m  Downloaded futures-io v0.3.25\n\u001b[0m\u001b[91m  Downloaded http v0.2.8\n\u001b[0m\u001b[91m  Downloaded h2 v0.3.15\n\u001b[0m\u001b[91m  Downloaded io-lifetimes v1.0.3\n\u001b[0m\u001b[91m  Downloaded itoa v1.0.4\n\u001b[0m\u001b[91m  Downloaded num-integer v0.1.45\n\u001b[0m\u001b[91m  Downloaded mime v0.3.16\n\u001b[0m\u001b[91m  Downloaded proc-macro2 v1.0.47\n\u001b[0m\u001b[91m  Downloaded ppv-lite86 v0.2.17\n\u001b[0m\u001b[91m  Downloaded rustls v0.20.7\n\u001b[0m\u001b[91m  Downloaded routecore v0.2.0\n\u001b[0m\u001b[91m  Downloaded spin v0.5.2\n\u001b[0m\u001b[91m  Downloaded slab v0.4.7\n\u001b[0m\u001b[91m  Downloaded thiserror-impl v1.0.37\n\u001b[0m\u001b[91m  Downloaded tinyvec_macros v0.1.0\n\u001b[0m\u001b[91m  Downloaded toml v0.5.9\n\u001b[0m\u001b[91m  Downloaded unicode-ident v1.0.5\n\u001b[0m\u001b[91m  Downloaded want v0.3.0\n\u001b[0m\u001b[91m  Downloaded bitflags v1.3.2\n\u001b[0m\u001b[91m  Downloaded crc32fast v1.3.2\n\u001b[0m\u001b[91m  Downloaded dirs-sys v0.3.7\n\u001b[0m\u001b[91m  Downloaded futures-channel v0.3.25\n\u001b[0m\u001b[91m  Downloaded getrandom v0.2.8\n\u001b[0m\u001b[91m  Downloaded hyper v0.14.23\n\u001b[0m\u001b[91m  Downloaded is-terminal v0.4.1\n\u001b[0m\u001b[91m  Downloaded memchr v2.5.0\n\u001b[0m\u001b[91m  Downloaded nix v0.25.1\n\u001b[0m\u001b[91m  Downloaded proc-macro-error v1.0.4\n\u001b[0m\u001b[91m  Downloaded rand v0.8.5\n\u001b[0m\u001b[91m  Downloaded rustls-pemfile v1.0.1\n\u001b[0m\u001b[91m  Downloaded serde_derive v1.0.149\n\u001b[0m\u001b[91m  Downloaded tempfile v3.3.0\n\u001b[0m\u001b[91m  Downloaded thiserror v1.0.37\n\u001b[0m\u001b[91m  Downloaded tokio-socks v0.5.1\n\u001b[0m\u001b[91m  Downloaded unicode-bidi v0.3.8\n\u001b[0m\u001b[91m  Downloaded webpki v0.22.0\n\u001b[0m\u001b[91m  Downloaded chrono v0.4.23\n\u001b[0m\u001b[91m  Downloaded error-chain v0.12.4\n\u001b[0m\u001b[91m  Downloaded flate2 v1.0.25\n\u001b[0m\u001b[91m  Downloaded hashbrown v0.12.3\n\u001b[0m\u001b[91m  Downloaded hyper-rustls v0.23.1\n\u001b[0m\u001b[91m  Downloaded log v0.4.17\n\u001b[0m\u001b[91m  Downloaded num-traits v0.2.15\n\u001b[0m\u001b[91m  Downloaded proc-macro-error-attr v1.0.4\n\u001b[0m\u001b[91m  Downloaded reqwest v0.11.13\n\u001b[0m\u001b[91m  Downloaded serde_urlencoded v0.7.1\n\u001b[0m\u001b[91m  Downloaded syslog v6.0.1\n\u001b[0m\u001b[91m  Downloaded time-macros v0.2.6\n\u001b[0m\u001b[91m  Downloaded tower-service v0.3.2\n\u001b[0m\u001b[91m  Downloaded uuid v1.2.2\n\u001b[0m\u001b[91m  Downloaded cfg-if v1.0.0\n\u001b[0m\u001b[91m  Downloaded clap v4.0.29\n\u001b[0m\u001b[91m  Downloaded futures-macro v0.3.25\n\u001b[0m\u001b[91m  Downloaded hostname v0.3.1\n\u001b[0m\u001b[91m  Downloaded listenfd v1.0.0\n\u001b[0m\u001b[91m  Downloaded once_cell v1.16.0\n\u001b[0m\u001b[91m  Downloaded rand_chacha v0.3.1\n\u001b[0m\u001b[91m  Downloaded syn v1.0.105\n\u001b[0m\u001b[91m  Downloaded ryu v1.0.11\n\u001b[0m\u001b[91m  Downloaded tinyvec v1.6.0\n\u001b[0m\u001b[91m  Downloaded tracing v0.1.37\n\u001b[0m\u001b[91m  Downloaded autocfg v1.1.0\n\u001b[0m\u001b[91m  Downloaded fastrand v1.8.0\n\u001b[0m\u001b[91m  Downloaded httparse v1.8.0\n\u001b[0m\u001b[91m  Downloaded futures-task v0.3.25\n\u001b[0m\u001b[91m  Downloaded miniz_oxide v0.6.2\n\u001b[0m\u001b[91m  Downloaded percent-encoding v2.2.0\n\u001b[0m\u001b[91m  Downloaded serde v1.0.149\n\u001b[0m\u001b[91m  Downloaded socket2 v0.4.7\n\u001b[0m\u001b[91m  Downloaded tokio-stream v0.1.11\n\u001b[0m\u001b[91m  Downloaded untrusted v0.7.1\n\u001b[0m\u001b[91m  Downloaded http-body v0.4.5\n\u001b[0m\u001b[91m  Downloaded filetime v0.2.18\n\u001b[0m\u001b[91m  Downloaded pin-project-lite v0.2.9\n\u001b[0m\u001b[91m  Downloaded log-reroute v0.1.8\n\u001b[0m\u001b[91m  Downloaded signal-hook-registry v1.4.0\n\u001b[0m\u001b[91m  Downloaded terminal_size v0.2.3\n\u001b[0m\u001b[91m  Downloaded version_check v0.9.4\n\u001b[0m\u001b[91m  Downloaded dirs v4.0.0\n\u001b[0m\u001b[91m  Downloaded iana-time-zone v0.1.53\n\u001b[0m\u001b[91m  Downloaded num_cpus v1.14.0\n\u001b[0m\u001b[91m  Downloaded termcolor v1.1.3\n\u001b[0m\u001b[91m  Downloaded xattr v0.2.3\n\u001b[0m\u001b[91m  Downloaded memoffset v0.6.5\n\u001b[0m\u001b[91m  Downloaded idna v0.3.0\n\u001b[0m\u001b[91m  Downloaded ring v0.16.20\n\u001b[0m\u001b[91m  Downloaded clap_derive v4.0.21\n\u001b[0m\u001b[91m  Downloaded routinator-ui v0.3.4\n\u001b[0m\u001b[91m  Downloaded ipnet v2.5.1\n\u001b[0m\u001b[91m  Downloaded linux-raw-sys v0.1.3\n\u001b[0m\u001b[91m  Downloaded crossbeam-utils v0.8.14\n\u001b[0m\u001b[91m  Downloaded form_urlencoded v1.1.0\n\u001b[0m\u001b[91m  Downloaded tokio-macros v1.8.2\n\u001b[0m\u001b[91m  Downloaded tracing-core v0.1.30\n\u001b[0m\u001b[91m  Downloaded base64 v0.13.1\n\u001b[0m\u001b[91m  Downloaded futures-executor v0.3.25\n\u001b[0m\u001b[91m  Downloaded smallvec v1.10.0\n\u001b[0m\u001b[91m  Downloaded rustix v0.36.4\n\u001b[0m\u001b[91m  Downloaded tokio-rustls v0.23.4\n\u001b[0m\u001b[91m  Downloaded os_str_bytes v6.4.1\n\u001b[0m\u001b[91m  Downloaded unicode-normalization v0.1.22\n\u001b[0m\u001b[91m  Downloaded quote v1.0.21\n\u001b[0m\u001b[91m  Downloaded rand_core v0.6.4\n\u001b[0m\u001b[91m  Downloaded time-core v0.1.0\n\u001b[0m\u001b[91m  Downloaded time v0.1.45\n\u001b[0m\u001b[91m  Downloaded futures-util v0.3.25\n\u001b[0m\u001b[91m  Downloaded futures v0.3.25\n\u001b[0m\u001b[91m   Compiling autocfg v1.1.0\n   Compiling libc v0.2.138\n   Compiling proc-macro2 v1.0.47\n   Compiling quote v1.0.21\n\u001b[0m\u001b[91m   Compiling unicode-ident v1.0.5\n\u001b[0m\u001b[91m   Compiling syn v\u001b[0m\u001b[91m1.0.105\n\u001b[0m\u001b[91m   Compiling memchr v2.5.0\n\u001b[0m\u001b[91m   Compiling cfg-if v1.0.0\n\u001b[0m\u001b[91m   Compiling futures-core v0.3.25\n\u001b[0m\u001b[91m   Compiling cc v1.0.77\n\u001b[0m\u001b[91m   Compiling futures-task v0.3.25\n\u001b[0m\u001b[91m   Compiling log v0.4.17\n\u001b[0m\u001b[91m   Compiling once_cell v1.16.0\n\u001b[0m\u001b[91m   Compiling pin-project-lite v0.2.9\n\u001b[0m\u001b[91m   Compiling bytes v1.3.0\n\u001b[0m\u001b[91m   Compiling httparse v1.8.0\n\u001b[0m\u001b[91m   Compiling rustls v0.20.7\n\u001b[0m\u001b[91m   Compiling version_check v0.9.4\n\u001b[0m\u001b[91m   Compiling untrusted v0.7.1\n\u001b[0m\u001b[91m   Compiling spin v0.5.2\n\u001b[0m\u001b[91m   Compiling futures-channel v0.3.25\n\u001b[0m\u001b[91m   Compiling itoa v1.0.4\n\u001b[0m\u001b[91m   Compiling futures-sink v0.3.25\n\u001b[0m\u001b[91m   Compiling futures-util v0.3.25\n   Compiling pin-utils v0.1.0\n\u001b[0m\u001b[91m   Compiling serde_derive v1.0.149\n\u001b[0m\u001b[91m   Compiling encoding_rs v0.8.\u001b[0m\u001b[91m31\n\u001b[0m\u001b[91m   Compiling fnv v1.0.7\n\u001b[0m\u001b[91m   Compiling futures-io v0.3.25\n\u001b[0m\u001b[91m   Compiling serde v1.0.149\n\u001b[0m\u001b[91m   Compiling hashbrown v0.12.3\n\u001b[0m\u001b[91m   Compiling tinyvec_macros v0.1.0\n\u001b[0m\u001b[91m   Compiling try-lock v0.2.3\n\u001b[0m\u001b[91m   Compiling percent-encoding v2.2.0\n\u001b[0m\u001b[91m   \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m \u001b[0m\u001b[91mtower-service v0.3.2\n\u001b[0m\u001b[91m   Compiling io-lifetimes v1.0.3\n\u001b[0m\u001b[91m   Compiling crc32fast v1.3.2\n\u001b[0m\u001b[91m   Compiling unicode-bidi v0.3.8\n\u001b[0m\u001b[91m   Compiling httpdate v1.0.2\n\u001b[0m\u001b[91m   Compiling ryu\u001b[0m\u001b[91m v1\u001b[0m\u001b[91m.0.11\n\u001b[0m\u001b[91m   Compiling bitflags v1.3.2\n\u001b[0m\u001b[91m   Compiling base64 v0.13.1\n\u001b[0m\u001b[91m   Compiling adler v1.0.2\n\u001b[0m\u001b[91m   Compiling rustix v0.36.4\n\u001b[0m\u001b[91m   Compiling thiserror v1.0.37\n\u001b[0m\u001b[91m   Compiling mime v0.3.16\n\u001b[0m\u001b[91m   Compiling ipnet v2.5.1\n\u001b[0m\u001b[91m   Compiling linux-raw-sys v0.1.3\n\u001b[0m\u001b[91m   Compiling smallvec v1.10.0\n\u001b[0m\u001b[91m   Compiling serde_json v1.0.89\n\u001b[0m\u001b[91m   Compiling crossbeam-utils v0.8.14\n\u001b[0m\u001b[91m   Compiling num_threads v0.1.6\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m \u001b[0m\u001b[91miana-time-zone v\u001b[0m\u001b[91m0.\u001b[0m\u001b[91m1\u001b[0m\u001b[91m.\u001b[0m\u001b[91m53\n\u001b[0m\u001b[91m   Compiling ppv-lite86 v0.2.17\n\u001b[0m\u001b[91m   Compiling heck v0.4.0\n\u001b[0m\u001b[91m   Compiling time-core v0.1.0\n\u001b[0m\u001b[91m  \u001b[0m\u001b[91m Compiling \u001b[0m\u001b[91mos_str_bytes v6.4.1\n\u001b[0m\u001b[91m  \u001b[0m\u001b[91m Compiling\u001b[0m\u001b[91m \u001b[0m\u001b[91mcrossbeam-queue\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.\u001b[0m\u001b[91m3\u001b[0m\u001b[91m.\u001b[0m\u001b[91m8\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m   Compiling either v1.8.0\n\u001b[0m\u001b[91m   Compiling match_cfg v0.1.0\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling termcolor v1.1.3\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling fastrand v\u001b[0m\u001b[91m1.8.0\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m arc-swap v1.5.1\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91mCompiling \u001b[0m\u001b[91muuid\u001b[0m\u001b[91m v1.2.2\n\u001b[0m\u001b[91m   Compiling strsim v0.10.0\n\u001b[0m\u001b[91m   Compiling remove_dir_all v0.5.3\n\u001b[0m\u001b[91m   Compiling tracing-core v0.1.30\n\u001b[0m\u001b[91m   Compiling tinyvec v1.6.0\n\u001b[0m\u001b[91m   Compiling form_urlencoded v1.1.0\n\u001b[0m\u001b[91m   Compiling \u001b[0m\u001b[91mminiz_oxide\u001b[0m\u001b[91m v0.6.2\n\u001b[0m\u001b[91m   Compiling rustls-pemfile v1.0.1\n\u001b[0m\u001b[91m   Compiling http v0.2.8\n   Compiling bcder v0.7.0\n\u001b[0m\u001b[91m   Compiling slab v0.4.7\n\u001b[0m\u001b[91m   Compiling indexmap v1.9.2\n\u001b[0m\u001b[91m   Compiling tokio v1.22.0\n\u001b[0m\u001b[91m   Compiling num-traits v0.2.15\n\u001b[0m\u001b[91m   Compiling num-integer v0.1.45\n\u001b[0m\u001b[91m   Compiling memoffset v0.6\u001b[0m\u001b[91m.\u001b[0m\u001b[91m5\n\u001b[0m\u001b[91m  \u001b[0m\u001b[91m Compiling \u001b[0m\u001b[91mclap_lex\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.3.0\n\u001b[0m\u001b[91m   Compiling proc-macro-error-attr v1.0.4\n\u001b[0m\u001b[91m   Compiling proc-macro-error v1.0.4\n\u001b[0m\u001b[91m   \u001b[0m\u001b[91mCompiling error-chain v0.12.4\n\u001b[0m\u001b[91m   Compiling tracing v0.1.37\n\u001b[0m\u001b[91m   Compiling\u001b[0m\u001b[91m want v0.3.0\n\u001b[0m\u001b[91m   Compiling fern v0.6.1\n\u001b[0m\u001b[91m   Compiling log-reroute v0.1.8\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling flate2 v1.0.25\n\u001b[0m\u001b[91m   Compiling unicode-normalization v0.1.22\n\u001b[0m\u001b[91m   Compiling quick-xml v0.23.1\n\u001b[0m\u001b[91m   Compiling http-body v0.4\u001b[0m\u001b[91m.5\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m \u001b[0m\u001b[91mring\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.\u001b[0m\u001b[91m16\u001b[0m\u001b[91m.\u001b[0m\u001b[91m20\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m   Compiling num_cpus v1.14.0\n\u001b[0m\u001b[91m   Compiling mio v0.8.5\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling\u001b[0m\u001b[91m \u001b[0m\u001b[91msocket2\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0.\u001b[0m\u001b[91m4.\u001b[0m\u001b[91m7\n\u001b[0m\u001b[91m   \u001b[0m\u001b[91mCompiling xattr v0.2.3\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling filetime v0.2.\u001b[0m\u001b[91m18\n\u001b[0m\u001b[91m   Compiling tar v0.4.38\n\u001b[0m\u001b[91m  \u001b[0m\u001b[91m Compiling idna v0.3.0\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling signal-hook-registry\u001b[0m\u001b[91m v\u001b[0m\u001b[91m1\u001b[0m\u001b[91m.4\u001b[0m\u001b[91m.\u001b[0m\u001b[91m0\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m \u001b[0m\u001b[91mgetrandom\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.\u001b[0m\u001b[91m2\u001b[0m\u001b[91m.\u001b[0m\u001b[91m8\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m \u001b[0m\u001b[91mtime\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.\u001b[0m\u001b[91m1\u001b[0m\u001b[91m.\u001b[0m\u001b[91m45\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m   Compiling hostname v0.3.1\n\u001b[0m\u001b[91m   Compiling time v0.3.17\n\u001b[0m\u001b[91m   Compiling dirs-sys v0.3.7\n\u001b[0m\u001b[91m   Compiling listenfd v1.0.0\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m \u001b[0m\u001b[91mnix\u001b[0m\u001b[91m v\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.\u001b[0m\u001b[91m25\u001b[0m\u001b[91m.\u001b[0m\u001b[91m1\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m   \u001b[0m\u001b[91mCompiling \u001b[0m\u001b[91mtempfile\u001b[0m\u001b[91m v\u001b[0m\u001b[91m3.\u001b[0m\u001b[91m3.0\u001b[0m\u001b[91m\n\u001b[0m\u001b[91m   Compiling\u001b[0m\u001b[91m url\u001b[0m\u001b[91m v2\u001b[0m\u001b[91m.\u001b[0m\u001b[91m3\u001b[0m\u001b[91m.\u001b[0m\u001b[91m1\n\u001b[0m\u001b[91m   Compiling rand_core v0.6.4\n\u001b[0m\u001b[91m   Compiling dirs v4.0.0\n\u001b[0m\u001b[91m   Compiling rand_chacha v0.3.1\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m  Compiling \u001b[0m\u001b[91msyslog\u001b[0m\u001b[91m v\u001b[0m\u001b[91m6\u001b[0m\u001b[91m.\u001b[0m\u001b[91m0\u001b[0m\u001b[91m.1\n\u001b[0m\u001b[91m   Compiling rand v0.8.5\n\u001b[0m\u001b[91m   Compiling serde_urlencoded v0.7.1\n\u001b[0m\u001b[91m   Compiling is-terminal v0.4.1\n\u001b[0m\u001b[91m   Compiling terminal_size v0.2.3\n\u001b[0m\u001b[91m   Compiling webpki v0.22.0\n\u001b[0m\u001b[91m   Compiling sct v0.7.0\n\u001b[0m\u001b[91m   Compiling tokio-util v0.7.4\n\u001b[0m\u001b[91m   Compiling webpki-roots v0.22.5\n\u001b[0m\u001b[91m   Compiling h2 v0.3.15\n\u001b[0m\u001b[91m   Compiling tokio-macros v1.8.2\n\u001b[0m\u001b[91m   Compiling futures-macro v0.3.25\n\u001b[0m\u001b[91m   Compiling thiserror-impl v1.0.37\n\u001b[0m\u001b[91m   Compiling clap_derive v4.\u001b[0m\u001b[91m0.21\n\u001b[0m\u001b[91m   Compiling tokio-rustls v0.23.4\n\u001b[0m\u001b[91m   Compiling hyper v0.14.23\n\u001b[0m\u001b[91m   Compiling clap v4.0.29\n\u001b[0m\u001b[91m   Compiling futures-executor v0.3.25\n\u001b[0m\u001b[91m   Compiling futures v0.3.25\n\u001b[0m\u001b[91m   Compiling tokio-socks v0.5.1\n\u001b[0m\u001b[91m   \u001b[0m\u001b[91mCompiling\u001b[0m\u001b[91m tokio-stream\u001b[0m\u001b[91m v0.1.11\n\u001b[0m\u001b[91m   Compiling hyper-rustls v0.23.1\n\u001b[0m\u001b[91m   Compiling reqwest v0.11.13\n\u001b[0m\u001b[91m   Compiling routecore v0.2.0\n\u001b[0m\u001b[91m   Compiling chrono v0.4.23\n\u001b[0m\u001b[91m   \u001b[0m\u001b[91mCompiling toml\u001b[0m\u001b[91m v0\u001b[0m\u001b[91m.\u001b[0m\u001b[91m5\u001b[0m\u001b[91m.\u001b[0m\u001b[91m9\n\u001b[0m\u001b[91m   Compiling rpki v0.15.8\n\u001b[0m\u001b[91m   Compiling routinator-ui v0.3.4\n\u001b[0m\u001b[91m \u001b[0m\u001b[91m \u001b[0m\u001b[91m Compiling routinator v0.12.1-dev (/tmp/build)\n\u001b[0m\u001b[91m    Finished release [optimized] target(s) in 2m 13s\n\u001b[0m\u001b[91m  Installing /tmp/out/bin/routinator\n\u001b[0m\u001b[91m   Installed package `routinator v0.12.1-dev (/tmp/build)` (executable `routinator`)\n\u001b[0m\u001b[91mwarning: be sure to add `/tmp/out/bin` to your PATH to be able to run the installed binaries\n\u001b[0mRemoving intermediate container 740e8b1c130d\n ---> fcd544b39034\nStep 10/28 : FROM ${BASE_IMG} AS copy\n ---> bfe296a52501\nStep 11/28 : ARG TARGETPLATFORM\n ---> Running in 50ac3742628e\nRemoving intermediate container 50ac3742628e\n ---> 380fae7a9006\nStep 12/28 : ONBUILD COPY dockerbin/$TARGETPLATFORM /tmp/out/bin/\n ---> Running in 37dbebac2a22\nRemoving intermediate container 37dbebac2a22\n ---> 993b26eb0c9a\nStep 13/28 : FROM ${MODE} AS source\n ---> fcd544b39034\nStep 14/28 : RUN chmod a+x /tmp/out/bin/*\n ---> Running in e0c6adb7d8d7\nRemoving intermediate container e0c6adb7d8d7\n ---> ea70ff93ff1a\nStep 15/28 : FROM alpine:3.16 AS final\n ---> bfe296a52501\nStep 16/28 : COPY --from=source /tmp/out/bin/* /usr/local/bin/\n ---> 234854646785\nStep 17/28 : ARG RUN_USER=routinator\n ---> Running in ecf8515d6e9e\nRemoving intermediate container ecf8515d6e9e\n ---> 4f9d011c800e\nStep 18/28 : ARG RUN_USER_UID=1012\n ---> Running in 3234f2f16b43\nRemoving intermediate container 3234f2f16b43\n ---> e8bfdff166af\nStep 19/28 : ARG RUN_USER_GID=1012\n ---> Running in c90e377021bf\nRemoving intermediate container c90e377021bf\n ---> 03322648e88d\nStep 20/28 : RUN apk add --no-cache libgcc rsync tini\n ---> Running in 0c6a9e0c92a9\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.16/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.16/community/x86_64/APKINDEX.tar.gz\n(1/7) Installing libgcc (11.2.1_git20220219-r2)\n(2/7) Installing libacl (2.3.1-r0)\n(3/7) Installing lz4-libs (1.9.3-r1)\n(4/7) Installing popt (1.18-r0)\n(5/7) Installing zstd-libs (1.5.2-r1)\n(6/7) Installing rsync (3.2.7-r0)\n(7/7) Installing tini (0.19.0-r0)\nExecuting busybox-1.35.0-r17.trigger\nOK: 7 MiB in 21 packages\nRemoving intermediate container 0c6a9e0c92a9\n ---> 419dd7e4a923\nStep 21/28 : RUN addgroup -g ${RUN_USER_GID} ${RUN_USER} &&     adduser -D -u ${RUN_USER_UID} -G ${RUN_USER} ${RUN_USER}\n ---> Running in f3d4acdf32b0\nRemoving intermediate container f3d4acdf32b0\n ---> 4c706d4c7450\nStep 22/28 : RUN mkdir -p /home/${RUN_USER}/.rpki-cache/repository &&     chown -R ${RUN_USER_UID}:${RUN_USER_GID} /usr/local/bin/routinator /home/${RUN_USER}/.rpki-cache\n ---> Running in b8e7456b38da\nRemoving intermediate container b8e7456b38da\n ---> c4614c377528\nStep 23/28 : USER $RUN_USER_UID\n ---> Running in 3394f933ba0d\nRemoving intermediate container 3394f933ba0d\n ---> a4329678f6d5\nStep 24/28 : EXPOSE 3323/tcp\n ---> Running in 9858d5711923\nRemoving intermediate container 9858d5711923\n ---> e3cc61a97994\nStep 25/28 : EXPOSE 8323/tcp\n ---> Running in 69beffecdf21\nRemoving intermediate container 69beffecdf21\n ---> 074666c5c6c3\nStep 26/28 : EXPOSE 9556/tcp\n ---> Running in 7466148af2d9\nRemoving intermediate container 7466148af2d9\n ---> a3f0955188fd\nStep 27/28 : ENTRYPOINT [\"/sbin/tini\", \"--\", \"routinator\"]\n ---> Running in e8fcddae9e33\nRemoving intermediate container e8fcddae9e33\n ---> 3615f87a264d\nStep 28/28 : CMD [\"server\", \"--rtr\", \"0.0.0.0:3323\", \"--http\", \"0.0.0.0:8323\", \"--http\", \"0.0.0.0:9556\"]\n ---> Running in 1a4925fe5739\nRemoving intermediate container 1a4925fe5739\n ---> aaa015ef3c55\nSuccessfully built aaa015ef3c55\nSuccessfully tagged routinator:latest\n","stderr":"","imageSize":30958177},"repair":{"violations":[],"repairedDockerfile":"# This is a multi-stage Dockerfile, with a selectable first stage. With this\n# approach we get:\n#\n#   1. Separation of dependencies needed to build our app in the 'build' stage\n#      and those needed to run our app in the 'final' stage, as we don't want\n#      the build-time dependencies to be included in the final Docker image.\n#\n#   2. Support for either building our app for the architecture of the base\n#      image using MODE=build (the default) or for externally built app\n#      binaries (e.g. cross-compiled) using MODE=copy.\n#\n# In total there are four stages consisting of:\n#   - Two possible first stages: 'build' or 'copy'.\n#   - A special 'source' stage which selects either 'build' or 'copy' as the\n#     source of binaries to be used by ...\n#   - The 'final' stage.\n\n\n###\n### ARG DEFINITIONS ###########################################################\n###\n\n# This section defines arguments that can be overriden on the command line\n# when invoking `docker build` using the argument form:\n#\n#   `--build-arg <ARGNAME>=<ARGVALUE>`.\n\n# MODE\n# ====\n# Supported values: build (default), copy\n#\n# By default this Dockerfile will build our app from sources. If the sources\n# have already been (cross) compiled by some external process and you wish to\n# use the resulting binaries from that process, then:\n#\n#   1. Create a directory on the host called 'dockerbin/$TARGETPLATFORM'\n#      containing the already compiled app binaries (where $TARGETPLATFORM\n#      is a special variable set by Docker BuiltKit).\n#   2. Supply arguments `--build-arg MODE=copy` to `docker build`.\nARG MODE=build\n\n\n# BASE_IMG\n# ========\n#\n# Only used when MODE=build.\nARG BASE_IMG=alpine:3.16\n\n\n# CARGO_ARGS\n# ==========\n#\n# Only used when MODE=build.\n#\n# This ARG can be used to control the features enabled when compiling the app\n# or other compilation settings as necessary.\nARG CARGO_ARGS\n\n\n###\n### BUILD STAGES ##############################################################\n###\n\n\n# -----------------------------------------------------------------------------\n# Docker stage: build\n# -----------------------------------------------------------------------------\n#\n# Builds our app binaries from sources.\nFROM ${BASE_IMG} AS build\nARG CARGO_ARGS\n\nRUN apk add --no-cache rust cargo\n\nWORKDIR /tmp/build\nCOPY . .\n\n# `CARGO_HTTP_MULTIPLEXING` forces Cargo to use HTTP/1.1 without pipelining\n# instead of HTTP/2 with multiplexing. This seems to help with various\n# \"spurious network error\" warnings when Cargo attempts to fetch from crates.io\n# when building this image on Docker Hub and GitHub Actions build machines.\n#\n# `cargo install` is used instead of `cargo build` because it places just the\n# binaries we need into a predictable output directory. We can't control this\n# with arguments to cargo build as `--out-dir` is unstable and contentious and\n# `--target-dir` still requires us to know which profile and target the\n# binaries were built for. By using `cargo install` we can also avoid needing\n# to hard-code the set of binary names to copy so that if we add or remove\n# built binaries in future this will \"just work\". Note that `--root /tmp/out`\n# actually causes the binaries to be placed in `/tmp/out/bin/`. `cargo install`\n# will create the output directory for us.\nRUN CARGO_HTTP_MULTIPLEXING=false cargo install \\\n  --locked \\\n  --path . \\\n  --root /tmp/out/ \\\n  ${CARGO_ARGS}\n\n\n# -----------------------------------------------------------------------------\n# Docker stage: copy\n# -----------------------------------------------------------------------------\n# Only used when MODE=copy.\n#\n# Copy binaries from the host directory 'dockerbin/$TARGETPLATFORM' directory\n# into this build stage to the same predictable location that binaries would be\n# in if MODE were 'build'.\n#\n# Requires that `docker build` be invoked with variable `DOCKER_BUILDKIT=1` set\n# in the environment. This is necessary so that Docker will skip the unused\n# 'build' stage and so that the magic $TARGETPLATFORM ARG will be set for us.\nFROM ${BASE_IMG} AS copy\nARG TARGETPLATFORM\nONBUILD COPY dockerbin/$TARGETPLATFORM /tmp/out/bin/\n\n\n# -----------------------------------------------------------------------------\n# Docker stage: source\n# -----------------------------------------------------------------------------\n# This is a \"magic\" build stage that \"labels\" a chosen prior build stage as the\n# one that the build stage after this one should copy application binaries\n# from. It also causes the ONBUILD COPY command from the 'copy' stage to be run\n# if needed. Finally, we ensure binaries have the executable flag set because\n# when copied in from outside they may not have the flag set, especially if\n# they were uploaded as a GH actions artifact then downloaded again which\n# causes file permissions to be lost.\n# See: https://github.com/actions/upload-artifact#permission-loss\nFROM ${MODE} AS source\nRUN chmod a+x /tmp/out/bin/*\n\n\n# -----------------------------------------------------------------------------\n# Docker stage: final\n# -----------------------------------------------------------------------------\n# Create an image containing just the binaries, configs & scripts needed to run\n# our app, and not the things needed to build it.\n#\n# The previous build stage from which binaries are copied is controlled by the\n# MODE ARG (see above).\nFROM alpine:3.16 AS final\n\n# Copy binaries from the 'source' build stage into the image we are building\nCOPY --from=source /tmp/out/bin/* /usr/local/bin/\n\n# Build variables for uid and guid of user to run container\nARG RUN_USER=routinator\nARG RUN_USER_UID=1012\nARG RUN_USER_GID=1012\n\n# Install required runtime dependencies\nRUN apk add --no-cache libgcc rsync tini\n\nRUN addgroup -g ${RUN_USER_GID} ${RUN_USER} && \\\n    adduser -D -u ${RUN_USER_UID} -G ${RUN_USER} ${RUN_USER}\n\n# Create the repository directory\nRUN mkdir -p /home/${RUN_USER}/.rpki-cache/repository && \\\n    chown -R ${RUN_USER_UID}:${RUN_USER_GID} /usr/local/bin/routinator /home/${RUN_USER}/.rpki-cache\n\n# Switch to our applications user\nUSER $RUN_USER_UID\n\n# Hint to operators the TCP port that the application in this image listens on\n# (by default). Routinator documentation and DEB/RPM packages configure\n# Routinator to listen for HTTP requests on port 8323. For consistency we do\n# the same, but for backward compatibility with earlier versions of this file\n# we still also listen for HTTP requests on port 9556, the port number\n# allocated by the Prometheus project [1] for Routinator metric publication.\n#\n# [1]: https://github.com/prometheus/prometheus/wiki/Default-port-allocations\nEXPOSE 3323/tcp\nEXPOSE 8323/tcp\nEXPOSE 9556/tcp\n\n# Use Tini to ensure that our application responds to CTRL-C when run in the\n# foreground without the Docker argument \"--init\" (which is actually another\n# way of activating Tini, but cannot be enabled from inside the Docker image).\nENTRYPOINT [\"/sbin/tini\", \"--\", \"routinator\"]\nCMD [\"server\", \"--rtr\", \"0.0.0.0:3323\", \"--http\", \"0.0.0.0:8323\", \"--http\", \"0.0.0.0:9556\"]\n"},"endTime":1672521215390}