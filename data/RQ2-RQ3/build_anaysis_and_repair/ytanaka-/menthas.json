{"repository":"https://github.com/ytanaka-/menthas","dockerfilePath":"Dockerfile","startTime":1673248571433,"endTime":1673248606069,"clone":{"startTime":1673248571433,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/ytanaka-/menthas'...\n","error":null,"endTime":1673248572258,"commit":"652c922a8a9467dea72e81f06d7dea96c4edef2f"},"originalBuild":{"startTime":1673248572340,"endTime":1673248605989,"error":{"code":1,"killed":false,"signal":null,"cmd":"docker build --no-cache --force-rm -t menthas:latest -f /tmp/dinghy-analysis/ytanaka-/menthas/Dockerfile ."},"stdout":"Sending build context to Docker daemon  1.691MB\r\r\nStep 1/10 : FROM node:10.8-alpine\n10.8-alpine: Pulling from library/node\n8e3ba11ec2a2: Pulling fs layer\nfa1fb33fda79: Pulling fs layer\nc3fd48190d00: Pulling fs layer\n8e3ba11ec2a2: Download complete\n8e3ba11ec2a2: Pull complete\nc3fd48190d00: Verifying Checksum\nc3fd48190d00: Download complete\nfa1fb33fda79: Verifying Checksum\nfa1fb33fda79: Download complete\nfa1fb33fda79: Pull complete\nc3fd48190d00: Pull complete\nDigest: sha256:962dc023d8598778df81a1a52719bd4ed7f341661742330bfdc72ca8241e58d6\nStatus: Downloaded newer image for node:10.8-alpine\n ---> 5a519d1e3a24\nStep 2/10 : WORKDIR app\n ---> Running in 377561cb5a48\nRemoving intermediate container 377561cb5a48\n ---> 162186a5f29f\nStep 3/10 : COPY ./package.json package.json\n ---> 42dcce23ea5b\nStep 4/10 : COPY ./package-lock.json package-lock.json\n ---> ca4c7358feb3\nStep 5/10 : RUN npm install\n ---> Running in 7fe988868a23\n\u001b[91mnpm\u001b[0m\u001b[91m \u001b[0m\u001b[91mWARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!\n\u001b[0m\u001b[91mnpm WARN menthas@3.2.0 No repository field.\n\u001b[0m\u001b[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.3 (node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\u001b[0m\u001b[91m\n\u001b[0madded 1129 packages from 587 contributors and audited 1130 packages in 10.623s\nfound 12 high severity vulnerabilities\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container 7fe988868a23\n ---> ae39e39fa091\nStep 6/10 : COPY ./config/default.json config/default.json\n ---> 7ee594895b84\nStep 7/10 : COPY ./src src\n ---> b0f79de0ec22\nStep 8/10 : COPY ./public public\n ---> 3a1e23219b90\nStep 9/10 : COPY ./webpack.config.js webpack.config.js\n ---> 13a3fa44a116\nStep 10/10 : RUN npm run build\n ---> Running in 42d405c251fa\n\n> menthas@3.2.0 build /app\n> webpack --mode production\n\nassets by status 1.42 KiB [cached] 1 asset\n./src/frontend/app.js 39 bytes [built] [code generated] [1 error]\n\nERROR in ./src/frontend/app.js\nModule build failed (from ./node_modules/babel-loader/lib/index.js):\nSyntaxError: /app/src/frontend/app.js: Support for the experimental syntax 'jsx' isn't currently enabled (8:13):\n\n  6 | const container = document.getElementById('app');\n  7 | const root = createRoot(container);\n> 8 | root.render(<App />);\n    |             ^\n\nAdd @babel/preset-react (https://git.io/JfeDR) to the 'presets' section of your Babel config to enable transformation.\nIf you want to leave it as-is, add @babel/plugin-syntax-jsx (https://git.io/vb4yA) to the 'plugins' section to enable parsing.\n    at instantiate (/app/node_modules/@babel/parser/lib/index.js:72:32)\n    at constructor (/app/node_modules/@babel/parser/lib/index.js:358:12)\n    at Parser.raise (/app/node_modules/@babel/parser/lib/index.js:3335:19)\n    at Parser.expectOnePlugin (/app/node_modules/@babel/parser/lib/index.js:3392:18)\n    at Parser.parseExprAtom (/app/node_modules/@babel/parser/lib/index.js:12970:18)\n    at Parser.parseExprSubscripts (/app/node_modules/@babel/parser/lib/index.js:12540:23)\n    at Parser.parseUpdate (/app/node_modules/@babel/parser/lib/index.js:12519:21)\n    at Parser.parseMaybeUnary (/app/node_modules/@babel/parser/lib/index.js:12490:23)\n    at Parser.parseMaybeUnaryOrPrivate (/app/node_modules/@babel/parser/lib/index.js:12284:61)\n    at Parser.parseExprOps (/app/node_modules/@babel/parser/lib/index.js:12291:23)\n\nwebpack 5.60.0 compiled with 1 error in 398 ms\n\u001b[91mnpm ERR! \u001b[0m\u001b[91mcode ELIFECYCLE\n\u001b[0m\u001b[91mnpm \u001b[0m\u001b[91mERR!\u001b[0m\u001b[91m \u001b[0m\u001b[91merrno\u001b[0m\u001b[91m 1\n\u001b[0m\u001b[91mnpm\u001b[0m\u001b[91m \u001b[0m\u001b[91mERR!\u001b[0m\u001b[91m menthas@3.2.0 build: `webpack --mode production`\nnpm\u001b[0m\u001b[91m ERR!\u001b[0m\u001b[91m Exit status 1\n\u001b[0m\u001b[91mnpm \u001b[0m\u001b[91mERR!\u001b[0m\u001b[91m \nnpm\u001b[0m\u001b[91m ERR!\u001b[0m\u001b[91m Failed at the menthas@3.2.0 build script.\nnpm\u001b[0m\u001b[91m ERR!\u001b[0m\u001b[91m This is probably not a problem with npm. There is likely additional logging output above.\n\u001b[0m\u001b[91m\n\u001b[0m\u001b[91mnpm \u001b[0m\u001b[91mERR!\u001b[0m\u001b[91m A complete log of this run can be found in:\nnpm ERR!\u001b[0m\u001b[91m     /root/.npm/_logs/2023-01-09T07_16_45_002Z-debug.log\n\u001b[0mRemoving intermediate container 42d405c251fa\n","stderr":"The command '/bin/sh -c npm run build' returned a non-zero code: 1\n"}}