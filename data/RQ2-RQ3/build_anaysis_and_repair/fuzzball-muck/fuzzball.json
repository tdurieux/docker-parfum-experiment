{"repository":"https://github.com/fuzzball-muck/fuzzball","dockerfilePath":"Dockerfile","startTime":1672372731755,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/fuzzball-muck/fuzzball'...\n","error":null,"commit":"b4b71a7ce9eff960d27bfcc0c07c055e504dbc99"},"originalBuild":{"startTimestamp":1672372733159,"endTimestamp":1672372926041,"error":null,"stdout":"Sending build context to Docker daemon  8.504MB\r\r\nStep 1/14 : FROM ubuntu:20.04\n20.04: Pulling from library/ubuntu\nDigest: sha256:0e0402cd13f68137edb0266e1d2c682f217814420f2d43d300ed8f65479b14fb\nStatus: Downloaded newer image for ubuntu:20.04\n ---> d5447fc01ae6\nStep 2/14 : RUN apt update && apt dist-upgrade -y\n ---> Running in ef8f99c2404c\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mGet:1 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\nGet:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\nGet:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\nGet:5 http://archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [177 kB]\nGet:6 http://archive.ubuntu.com/ubuntu focal/restricted amd64 Packages [33.4 kB]\nGet:7 http://archive.ubuntu.com/ubuntu focal/universe amd64 Packages [11.3 MB]\nGet:8 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages [1275 kB]\nGet:9 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1779 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [30.4 kB]\nGet:11 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1894 kB]\nGet:12 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2828 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1275 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\nGet:16 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2358 kB]\nGet:17 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [27.7 kB]\nGet:18 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [972 kB]\nFetched 24.7 MB in 3s (9389 kB/s)\nReading package lists...\nBuilding dependency tree...\nReading state information...\nAll packages are up to date.\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mReading package lists...\nBuilding dependency tree...\nReading state information...\nCalculating upgrade...\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\nRemoving intermediate container ef8f99c2404c\n ---> 03a086a27e77\nStep 3/14 : RUN apt-get install -y build-essential       libpcre3-dev libssl-dev git autoconf       automake autoconf-archive\n ---> Running in 40ae9c4c6184\nReading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  autotools-dev binutils binutils-common binutils-x86-64-linux-gnu\n  ca-certificates cpp cpp-9 dirmngr dpkg-dev fakeroot g++ g++-9 gcc gcc-9\n  gcc-9-base git-man gnupg gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client\n  gpg-wks-server gpgconf gpgsm krb5-locales less libalgorithm-diff-perl\n  libalgorithm-diff-xs-perl libalgorithm-merge-perl libasan5 libasn1-8-heimdal\n  libassuan0 libatomic1 libbinutils libbrotli1 libbsd0 libc-dev-bin libc6-dev\n  libcbor0.6 libcc1-0 libcrypt-dev libctf-nobfd0 libctf0 libcurl3-gnutls\n  libdpkg-perl libedit2 liberror-perl libexpat1 libfakeroot libfido2-1\n  libfile-fcntllock-perl libgcc-9-dev libgdbm-compat4 libgdbm6 libgomp1\n  libgssapi-krb5-2 libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal\n  libheimntlm0-heimdal libhx509-5-heimdal libisl22 libitm1 libk5crypto3\n  libkeyutils1 libkrb5-26-heimdal libkrb5-3 libkrb5support0 libksba8\n  libldap-2.4-2 libldap-common liblocale-gettext-perl liblsan0 libmpc3\n  libmpfr6 libnghttp2-14 libnpth0 libpcre16-3 libpcre32-3 libpcrecpp0v5\n  libperl5.30 libpsl5 libquadmath0 libreadline8 libroken18-heimdal librtmp1\n  libsasl2-2 libsasl2-modules libsasl2-modules-db libsigsegv2 libsqlite3-0\n  libssh-4 libssl1.1 libstdc++-9-dev libtsan0 libubsan1 libwind0-heimdal\n  libx11-6 libx11-data libxau6 libxcb1 libxdmcp6 libxext6 libxmuu1\n  linux-libc-dev m4 make manpages manpages-dev netbase openssh-client openssl\n  patch perl perl-modules-5.30 pinentry-curses publicsuffix readline-common\n  xauth xz-utils\nSuggested packages:\n  gnu-standards autoconf-doc libtool gettext binutils-doc cpp-doc\n  gcc-9-locales dbus-user-session libpam-systemd pinentry-gnome3 tor\n  debian-keyring g++-multilib g++-9-multilib gcc-9-doc gcc-multilib flex bison\n  gdb gcc-doc gcc-9-multilib gettext-base git-daemon-run | git-daemon-sysvinit\n  git-doc git-el git-email git-gui gitk gitweb git-cvs git-mediawiki git-svn\n  parcimonie xloadimage scdaemon glibc-doc bzr gdbm-l10n krb5-doc krb5-user\n  libsasl2-modules-gssapi-mit | libsasl2-modules-gssapi-heimdal\n  libsasl2-modules-ldap libsasl2-modules-otp libsasl2-modules-sql libssl-doc\n  libstdc++-9-doc m4-doc make-doc man-browser keychain libpam-ssh monkeysphere\n  ssh-askpass ed diffutils-doc perl-doc libterm-readline-gnu-perl\n  | libterm-readline-perl-perl libb-debug-perl liblocale-codes-perl\n  pinentry-doc readline-doc\nThe following NEW packages will be installed:\n  autoconf autoconf-archive automake autotools-dev binutils binutils-common\n  binutils-x86-64-linux-gnu build-essential ca-certificates cpp cpp-9 dirmngr\n  dpkg-dev fakeroot g++ g++-9 gcc gcc-9 gcc-9-base git git-man gnupg\n  gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client gpg-wks-server gpgconf\n  gpgsm krb5-locales less libalgorithm-diff-perl libalgorithm-diff-xs-perl\n  libalgorithm-merge-perl libasan5 libasn1-8-heimdal libassuan0 libatomic1\n  libbinutils libbrotli1 libbsd0 libc-dev-bin libc6-dev libcbor0.6 libcc1-0\n  libcrypt-dev libctf-nobfd0 libctf0 libcurl3-gnutls libdpkg-perl libedit2\n  liberror-perl libexpat1 libfakeroot libfido2-1 libfile-fcntllock-perl\n  libgcc-9-dev libgdbm-compat4 libgdbm6 libgomp1 libgssapi-krb5-2\n  libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal\n  libheimntlm0-heimdal libhx509-5-heimdal libisl22 libitm1 libk5crypto3\n  libkeyutils1 libkrb5-26-heimdal libkrb5-3 libkrb5support0 libksba8\n  libldap-2.4-2 libldap-common liblocale-gettext-perl liblsan0 libmpc3\n  libmpfr6 libnghttp2-14 libnpth0 libpcre16-3 libpcre3-dev libpcre32-3\n  libpcrecpp0v5 libperl5.30 libpsl5 libquadmath0 libreadline8\n  libroken18-heimdal librtmp1 libsasl2-2 libsasl2-modules libsasl2-modules-db\n  libsigsegv2 libsqlite3-0 libssh-4 libssl-dev libssl1.1 libstdc++-9-dev\n  libtsan0 libubsan1 libwind0-heimdal libx11-6 libx11-data libxau6 libxcb1\n  libxdmcp6 libxext6 libxmuu1 linux-libc-dev m4 make manpages manpages-dev\n  netbase openssh-client openssl patch perl perl-modules-5.30 pinentry-curses\n  publicsuffix readline-common xauth xz-utils\n0 upgraded, 128 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 73.7 MB of archives.\nAfter this operation, 346 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu focal/main amd64 liblocale-gettext-perl amd64 1.07-4 [17.1 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 autoconf-archive all 20190106-2.1ubuntu1 [665 kB]\nGet:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 perl-modules-5.30 all 5.30.0-9ubuntu0.3 [2739 kB]\nGet:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libgdbm6 amd64 1.18.1-5 [27.4 kB]\nGet:5 http://archive.ubuntu.com/ubuntu focal/main amd64 libgdbm-compat4 amd64 1.18.1-5 [6244 B]\nGet:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libperl5.30 amd64 5.30.0-9ubuntu0.3 [3951 kB]\nGet:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 perl amd64 5.30.0-9ubuntu0.3 [224 kB]\nGet:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl1.1 amd64 1.1.1f-1ubuntu2.16 [1321 kB]\nGet:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openssl amd64 1.1.1f-1ubuntu2.16 [621 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 ca-certificates all 20211016ubuntu0.20.04.1 [141 kB]\nGet:11 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 less amd64 551-1ubuntu0.1 [123 kB]\nGet:12 http://archive.ubuntu.com/ubuntu focal/main amd64 libbsd0 amd64 0.10.0-1 [45.4 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libexpat1 amd64 2.2.9-1ubuntu0.6 [74.6 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal/main amd64 readline-common all 8.0-4 [53.5 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal/main amd64 libreadline8 amd64 8.0-4 [131 kB]\nGet:16 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsqlite3-0 amd64 3.31.1-4ubuntu0.5 [549 kB]\nGet:17 http://archive.ubuntu.com/ubuntu focal/main amd64 netbase all 6.1 [13.1 kB]\nGet:18 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 xz-utils amd64 5.2.4-1ubuntu1.1 [82.6 kB]\nGet:19 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 krb5-locales all 1.17-6ubuntu4.1 [11.4 kB]\nGet:20 http://archive.ubuntu.com/ubuntu focal/main amd64 libcbor0.6 amd64 0.6.0-0ubuntu1 [21.1 kB]\nGet:21 http://archive.ubuntu.com/ubuntu focal/main amd64 libedit2 amd64 3.1-20191231-1 [87.0 kB]\nGet:22 http://archive.ubuntu.com/ubuntu focal/main amd64 libfido2-1 amd64 1.3.1-1ubuntu2 [47.9 kB]\nGet:23 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkrb5support0 amd64 1.17-6ubuntu4.1 [30.9 kB]\nGet:24 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libk5crypto3 amd64 1.17-6ubuntu4.1 [79.9 kB]\nGet:25 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkeyutils1 amd64 1.6-6ubuntu1.1 [10.3 kB]\nGet:26 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkrb5-3 amd64 1.17-6ubuntu4.1 [330 kB]\nGet:27 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgssapi-krb5-2 amd64 1.17-6ubuntu4.1 [121 kB]\nGet:28 http://archive.ubuntu.com/ubuntu focal/main amd64 libpsl5 amd64 0.21.0-1ubuntu1 [51.5 kB]\nGet:29 http://archive.ubuntu.com/ubuntu focal/main amd64 libxau6 amd64 1:1.0.9-0ubuntu1 [7488 B]\nGet:30 http://archive.ubuntu.com/ubuntu focal/main amd64 libxdmcp6 amd64 1:1.1.3-0ubuntu1 [10.6 kB]\nGet:31 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb1 amd64 1.14-2 [44.7 kB]\nGet:32 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-data all 2:1.6.9-2ubuntu1.2 [113 kB]\nGet:33 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-6 amd64 2:1.6.9-2ubuntu1.2 [575 kB]\nGet:34 http://archive.ubuntu.com/ubuntu focal/main amd64 libxext6 amd64 2:1.3.4-0ubuntu1 [29.1 kB]\nGet:35 http://archive.ubuntu.com/ubuntu focal/main amd64 libxmuu1 amd64 2:1.1.3-0ubuntu1 [9728 B]\nGet:36 http://archive.ubuntu.com/ubuntu focal/main amd64 manpages all 5.05-1 [1314 kB]\nGet:37 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openssh-client amd64 1:8.2p1-4ubuntu0.5 [671 kB]\nGet:38 http://archive.ubuntu.com/ubuntu focal/main amd64 publicsuffix all 20200303.0012-1 [111 kB]\nGet:39 http://archive.ubuntu.com/ubuntu focal/main amd64 xauth amd64 1:1.1-0ubuntu1 [25.0 kB]\nGet:40 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]\nGet:41 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]\nGet:42 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]\nGet:43 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]\nGet:44 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]\nGet:45 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-common amd64 2.34-6ubuntu1.4 [207 kB]\nGet:46 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libbinutils amd64 2.34-6ubuntu1.4 [474 kB]\nGet:47 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf-nobfd0 amd64 2.34-6ubuntu1.4 [47.2 kB]\nGet:48 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf0 amd64 2.34-6ubuntu1.4 [46.6 kB]\nGet:49 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-x86-64-linux-gnu amd64 2.34-6ubuntu1.4 [1613 kB]\nGet:50 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils amd64 2.34-6ubuntu1.4 [3380 B]\nGet:51 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libc-dev-bin amd64 2.31-0ubuntu9.9 [71.8 kB]\nGet:52 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 linux-libc-dev amd64 5.4.0-135.152 [1121 kB]\nGet:53 http://archive.ubuntu.com/ubuntu focal/main amd64 libcrypt-dev amd64 1:4.4.10-10ubuntu4 [104 kB]\nGet:54 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libc6-dev amd64 2.31-0ubuntu9.9 [2519 kB]\nGet:55 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gcc-9-base amd64 9.4.0-1ubuntu1~20.04.1 [19.4 kB]\nGet:56 http://archive.ubuntu.com/ubuntu focal/main amd64 libisl22 amd64 0.22.1-1 [592 kB]\nGet:57 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpfr6 amd64 4.0.2-1 [240 kB]\nGet:58 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpc3 amd64 1.1.0-1 [40.8 kB]\nGet:59 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cpp-9 amd64 9.4.0-1ubuntu1~20.04.1 [7500 kB]\nGet:60 http://archive.ubuntu.com/ubuntu focal/main amd64 cpp amd64 4:9.3.0-1ubuntu2 [27.6 kB]\nGet:61 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcc1-0 amd64 10.3.0-1ubuntu1~20.04 [48.8 kB]\nGet:62 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgomp1 amd64 10.3.0-1ubuntu1~20.04 [102 kB]\nGet:63 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libitm1 amd64 10.3.0-1ubuntu1~20.04 [26.2 kB]\nGet:64 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libatomic1 amd64 10.3.0-1ubuntu1~20.04 [9284 B]\nGet:65 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasan5 amd64 9.4.0-1ubuntu1~20.04.1 [2751 kB]\nGet:66 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 liblsan0 amd64 10.3.0-1ubuntu1~20.04 [835 kB]\nGet:67 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libtsan0 amd64 10.3.0-1ubuntu1~20.04 [2009 kB]\nGet:68 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libubsan1 amd64 10.3.0-1ubuntu1~20.04 [784 kB]\nGet:69 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libquadmath0 amd64 10.3.0-1ubuntu1~20.04 [146 kB]\nGet:70 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgcc-9-dev amd64 9.4.0-1ubuntu1~20.04.1 [2359 kB]\nGet:71 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gcc-9 amd64 9.4.0-1ubuntu1~20.04.1 [8274 kB]\nGet:72 http://archive.ubuntu.com/ubuntu focal/main amd64 gcc amd64 4:9.3.0-1ubuntu2 [5208 B]\nGet:73 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libstdc++-9-dev amd64 9.4.0-1ubuntu1~20.04.1 [1722 kB]\nGet:74 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 g++-9 amd64 9.4.0-1ubuntu1~20.04.1 [8420 kB]\nGet:75 http://archive.ubuntu.com/ubuntu focal/main amd64 g++ amd64 4:9.3.0-1ubuntu2 [1604 B]\nGet:76 http://archive.ubuntu.com/ubuntu focal/main amd64 make amd64 4.2.1-1.2 [162 kB]\nGet:77 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdpkg-perl all 1.19.7ubuntu3.2 [231 kB]\nGet:78 http://archive.ubuntu.com/ubuntu focal/main amd64 patch amd64 2.7.6-6 [105 kB]\nGet:79 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dpkg-dev all 1.19.7ubuntu3.2 [679 kB]\nGet:80 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 build-essential amd64 12.8ubuntu1.1 [4664 B]\nGet:81 http://archive.ubuntu.com/ubuntu focal/main amd64 libassuan0 amd64 2.5.3-7ubuntu2 [35.7 kB]\nGet:82 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gpgconf amd64 2.2.19-3ubuntu2.2 [124 kB]\nGet:83 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libksba8 amd64 1.3.5-2ubuntu0.20.04.1 [95.1 kB]\nGet:84 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libroken18-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [42.3 kB]\nGet:85 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasn1-8-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [181 kB]\nGet:86 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libheimbase1-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [30.0 kB]\nGet:87 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libhcrypto4-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [87.9 kB]\nGet:88 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libwind0-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [48.0 kB]\nGet:89 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libhx509-5-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [107 kB]\nGet:90 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkrb5-26-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [207 kB]\nGet:91 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libheimntlm0-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [15.1 kB]\nGet:92 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgssapi3-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [96.2 kB]\nGet:93 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsasl2-modules-db amd64 2.1.27+dfsg-2ubuntu0.1 [14.7 kB]\nGet:94 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsasl2-2 amd64 2.1.27+dfsg-2ubuntu0.1 [49.3 kB]\nGet:95 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libldap-common all 2.4.49+dfsg-2ubuntu1.9 [16.6 kB]\nGet:96 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libldap-2.4-2 amd64 2.4.49+dfsg-2ubuntu1.9 [155 kB]\nGet:97 http://archive.ubuntu.com/ubuntu focal/main amd64 libnpth0 amd64 1.6-1 [7736 B]\nGet:98 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dirmngr amd64 2.2.19-3ubuntu2.2 [330 kB]\nGet:99 http://archive.ubuntu.com/ubuntu focal/main amd64 libfakeroot amd64 1.24-1 [25.7 kB]\nGet:100 http://archive.ubuntu.com/ubuntu focal/main amd64 fakeroot amd64 1.24-1 [62.6 kB]\nGet:101 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libbrotli1 amd64 1.0.7-6ubuntu0.1 [267 kB]\nGet:102 http://archive.ubuntu.com/ubuntu focal/main amd64 libnghttp2-14 amd64 1.40.0-1build1 [78.7 kB]\nGet:103 http://archive.ubuntu.com/ubuntu focal/main amd64 librtmp1 amd64 2.4+20151223.gitfa8646d.1-2build1 [54.9 kB]\nGet:104 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssh-4 amd64 0.9.3-2ubuntu2.2 [170 kB]\nGet:105 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcurl3-gnutls amd64 7.68.0-1ubuntu2.14 [233 kB]\nGet:106 http://archive.ubuntu.com/ubuntu focal/main amd64 liberror-perl all 0.17029-1 [26.5 kB]\nGet:107 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 git-man all 1:2.25.1-1ubuntu3.6 [887 kB]\nGet:108 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 git amd64 1:2.25.1-1ubuntu3.6 [4529 kB]\nGet:109 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gnupg-l10n all 2.2.19-3ubuntu2.2 [51.7 kB]\nGet:110 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gnupg-utils amd64 2.2.19-3ubuntu2.2 [481 kB]\nGet:111 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gpg amd64 2.2.19-3ubuntu2.2 [482 kB]\nGet:112 http://archive.ubuntu.com/ubuntu focal/main amd64 pinentry-curses amd64 1.1.0-3build1 [36.3 kB]\nGet:113 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gpg-agent amd64 2.2.19-3ubuntu2.2 [232 kB]\nGet:114 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gpg-wks-client amd64 2.2.19-3ubuntu2.2 [97.4 kB]\nGet:115 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gpg-wks-server amd64 2.2.19-3ubuntu2.2 [90.2 kB]\nGet:116 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gpgsm amd64 2.2.19-3ubuntu2.2 [217 kB]\nGet:117 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gnupg all 2.2.19-3ubuntu2.2 [259 kB]\nGet:118 http://archive.ubuntu.com/ubuntu focal/main amd64 libalgorithm-diff-perl all 1.19.03-2 [46.6 kB]\nGet:119 http://archive.ubuntu.com/ubuntu focal/main amd64 libalgorithm-diff-xs-perl amd64 0.04-6 [11.3 kB]\nGet:120 http://archive.ubuntu.com/ubuntu focal/main amd64 libalgorithm-merge-perl all 0.08-3 [12.0 kB]\nGet:121 http://archive.ubuntu.com/ubuntu focal/main amd64 libfile-fcntllock-perl amd64 0.22-3build4 [33.1 kB]\nGet:122 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcre16-3 amd64 2:8.39-12ubuntu0.1 [150 kB]\nGet:123 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcre32-3 amd64 2:8.39-12ubuntu0.1 [140 kB]\nGet:124 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcrecpp0v5 amd64 2:8.39-12ubuntu0.1 [15.5 kB]\nGet:125 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcre3-dev amd64 2:8.39-12ubuntu0.1 [540 kB]\nGet:126 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsasl2-modules amd64 2.1.27+dfsg-2ubuntu0.1 [48.8 kB]\nGet:127 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl-dev amd64 1.1.1f-1ubuntu2.16 [1584 kB]\nGet:128 http://archive.ubuntu.com/ubuntu focal/main amd64 manpages-dev all 5.05-1 [2266 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 73.7 MB in 8s (9036 kB/s)\nSelecting previously unselected package liblocale-gettext-perl.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 4126 files and directories currently installed.)\r\nPreparing to unpack .../000-liblocale-gettext-perl_1.07-4_amd64.deb ...\r\nUnpacking liblocale-gettext-perl (1.07-4) ...\r\nSelecting previously unselected package autoconf-archive.\r\nPreparing to unpack .../001-autoconf-archive_20190106-2.1ubuntu1_all.deb ...\r\nUnpacking autoconf-archive (20190106-2.1ubuntu1) ...\r\nSelecting previously unselected package perl-modules-5.30.\r\nPreparing to unpack .../002-perl-modules-5.30_5.30.0-9ubuntu0.3_all.deb ...\r\nUnpacking perl-modules-5.30 (5.30.0-9ubuntu0.3) ...\r\nSelecting previously unselected package libgdbm6:amd64.\r\nPreparing to unpack .../003-libgdbm6_1.18.1-5_amd64.deb ...\r\nUnpacking libgdbm6:amd64 (1.18.1-5) ...\r\nSelecting previously unselected package libgdbm-compat4:amd64.\r\nPreparing to unpack .../004-libgdbm-compat4_1.18.1-5_amd64.deb ...\r\nUnpacking libgdbm-compat4:amd64 (1.18.1-5) ...\r\nSelecting previously unselected package libperl5.30:amd64.\r\nPreparing to unpack .../005-libperl5.30_5.30.0-9ubuntu0.3_amd64.deb ...\r\nUnpacking libperl5.30:amd64 (5.30.0-9ubuntu0.3) ...\r\nSelecting previously unselected package perl.\r\nPreparing to unpack .../006-perl_5.30.0-9ubuntu0.3_amd64.deb ...\r\nUnpacking perl (5.30.0-9ubuntu0.3) ...\r\nSelecting previously unselected package libssl1.1:amd64.\r\nPreparing to unpack .../007-libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSelecting previously unselected package openssl.\r\nPreparing to unpack .../008-openssl_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking openssl (1.1.1f-1ubuntu2.16) ...\r\nSelecting previously unselected package ca-certificates.\r\nPreparing to unpack .../009-ca-certificates_20211016ubuntu0.20.04.1_all.deb ...\r\nUnpacking ca-certificates (20211016ubuntu0.20.04.1) ...\r\nSelecting previously unselected package less.\r\nPreparing to unpack .../010-less_551-1ubuntu0.1_amd64.deb ...\r\nUnpacking less (551-1ubuntu0.1) ...\r\nSelecting previously unselected package libbsd0:amd64.\r\nPreparing to unpack .../011-libbsd0_0.10.0-1_amd64.deb ...\r\nUnpacking libbsd0:amd64 (0.10.0-1) ...\r\nSelecting previously unselected package libexpat1:amd64.\r\nPreparing to unpack .../012-libexpat1_2.2.9-1ubuntu0.6_amd64.deb ...\r\nUnpacking libexpat1:amd64 (2.2.9-1ubuntu0.6) ...\r\nSelecting previously unselected package readline-common.\r\nPreparing to unpack .../013-readline-common_8.0-4_all.deb ...\r\nUnpacking readline-common (8.0-4) ...\r\nSelecting previously unselected package libreadline8:amd64.\r\nPreparing to unpack .../014-libreadline8_8.0-4_amd64.deb ...\r\nUnpacking libreadline8:amd64 (8.0-4) ...\r\nSelecting previously unselected package libsqlite3-0:amd64.\r\nPreparing to unpack .../015-libsqlite3-0_3.31.1-4ubuntu0.5_amd64.deb ...\r\nUnpacking libsqlite3-0:amd64 (3.31.1-4ubuntu0.5) ...\r\nSelecting previously unselected package netbase.\r\nPreparing to unpack .../016-netbase_6.1_all.deb ...\r\nUnpacking netbase (6.1) ...\r\nSelecting previously unselected package xz-utils.\r\nPreparing to unpack .../017-xz-utils_5.2.4-1ubuntu1.1_amd64.deb ...\r\nUnpacking xz-utils (5.2.4-1ubuntu1.1) ...\r\nSelecting previously unselected package krb5-locales.\r\nPreparing to unpack .../018-krb5-locales_1.17-6ubuntu4.1_all.deb ...\r\nUnpacking krb5-locales (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libcbor0.6:amd64.\r\nPreparing to unpack .../019-libcbor0.6_0.6.0-0ubuntu1_amd64.deb ...\r\nUnpacking libcbor0.6:amd64 (0.6.0-0ubuntu1) ...\r\nSelecting previously unselected package libedit2:amd64.\r\nPreparing to unpack .../020-libedit2_3.1-20191231-1_amd64.deb ...\r\nUnpacking libedit2:amd64 (3.1-20191231-1) ...\r\nSelecting previously unselected package libfido2-1:amd64.\r\nPreparing to unpack .../021-libfido2-1_1.3.1-1ubuntu2_amd64.deb ...\r\nUnpacking libfido2-1:amd64 (1.3.1-1ubuntu2) ...\r\nSelecting previously unselected package libkrb5support0:amd64.\r\nPreparing to unpack .../022-libkrb5support0_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libkrb5support0:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libk5crypto3:amd64.\r\nPreparing to unpack .../023-libk5crypto3_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libk5crypto3:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libkeyutils1:amd64.\r\nPreparing to unpack .../024-libkeyutils1_1.6-6ubuntu1.1_amd64.deb ...\r\nUnpacking libkeyutils1:amd64 (1.6-6ubuntu1.1) ...\r\nSelecting previously unselected package libkrb5-3:amd64.\r\nPreparing to unpack .../025-libkrb5-3_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libkrb5-3:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libgssapi-krb5-2:amd64.\r\nPreparing to unpack .../026-libgssapi-krb5-2_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libgssapi-krb5-2:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libpsl5:amd64.\r\nPreparing to unpack .../027-libpsl5_0.21.0-1ubuntu1_amd64.deb ...\r\nUnpacking libpsl5:amd64 (0.21.0-1ubuntu1) ...\r\nSelecting previously unselected package libxau6:amd64.\r\nPreparing to unpack .../028-libxau6_1%3a1.0.9-0ubuntu1_amd64.deb ...\r\nUnpacking libxau6:amd64 (1:1.0.9-0ubuntu1) ...\r\nSelecting previously unselected package libxdmcp6:amd64.\r\nPreparing to unpack .../029-libxdmcp6_1%3a1.1.3-0ubuntu1_amd64.deb ...\r\nUnpacking libxdmcp6:amd64 (1:1.1.3-0ubuntu1) ...\r\nSelecting previously unselected package libxcb1:amd64.\r\nPreparing to unpack .../030-libxcb1_1.14-2_amd64.deb ...\r\nUnpacking libxcb1:amd64 (1.14-2) ...\r\nSelecting previously unselected package libx11-data.\r\nPreparing to unpack .../031-libx11-data_2%3a1.6.9-2ubuntu1.2_all.deb ...\r\nUnpacking libx11-data (2:1.6.9-2ubuntu1.2) ...\r\nSelecting previously unselected package libx11-6:amd64.\r\nPreparing to unpack .../032-libx11-6_2%3a1.6.9-2ubuntu1.2_amd64.deb ...\r\nUnpacking libx11-6:amd64 (2:1.6.9-2ubuntu1.2) ...\r\nSelecting previously unselected package libxext6:amd64.\r\nPreparing to unpack .../033-libxext6_2%3a1.3.4-0ubuntu1_amd64.deb ...\r\nUnpacking libxext6:amd64 (2:1.3.4-0ubuntu1) ...\r\nSelecting previously unselected package libxmuu1:amd64.\r\nPreparing to unpack .../034-libxmuu1_2%3a1.1.3-0ubuntu1_amd64.deb ...\r\nUnpacking libxmuu1:amd64 (2:1.1.3-0ubuntu1) ...\r\nSelecting previously unselected package manpages.\r\nPreparing to unpack .../035-manpages_5.05-1_all.deb ...\r\nUnpacking manpages (5.05-1) ...\r\nSelecting previously unselected package openssh-client.\r\nPreparing to unpack .../036-openssh-client_1%3a8.2p1-4ubuntu0.5_amd64.deb ...\r\nUnpacking openssh-client (1:8.2p1-4ubuntu0.5) ...\r\nSelecting previously unselected package publicsuffix.\r\nPreparing to unpack .../037-publicsuffix_20200303.0012-1_all.deb ...\r\nUnpacking publicsuffix (20200303.0012-1) ...\r\nSelecting previously unselected package xauth.\r\nPreparing to unpack .../038-xauth_1%3a1.1-0ubuntu1_amd64.deb ...\r\nUnpacking xauth (1:1.1-0ubuntu1) ...\r\nSelecting previously unselected package libsigsegv2:amd64.\r\nPreparing to unpack .../039-libsigsegv2_2.12-2_amd64.deb ...\r\nUnpacking libsigsegv2:amd64 (2.12-2) ...\r\nSelecting previously unselected package m4.\r\nPreparing to unpack .../040-m4_1.4.18-4_amd64.deb ...\r\nUnpacking m4 (1.4.18-4) ...\r\nSelecting previously unselected package autoconf.\r\nPreparing to unpack .../041-autoconf_2.69-11.1_all.deb ...\r\nUnpacking autoconf (2.69-11.1) ...\r\nSelecting previously unselected package autotools-dev.\r\nPreparing to unpack .../042-autotools-dev_20180224.1_all.deb ...\r\nUnpacking autotools-dev (20180224.1) ...\r\nSelecting previously unselected package automake.\r\nPreparing to unpack .../043-automake_1%3a1.16.1-4ubuntu6_all.deb ...\r\nUnpacking automake (1:1.16.1-4ubuntu6) ...\r\nSelecting previously unselected package binutils-common:amd64.\r\nPreparing to unpack .../044-binutils-common_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking binutils-common:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libbinutils:amd64.\r\nPreparing to unpack .../045-libbinutils_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking libbinutils:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libctf-nobfd0:amd64.\r\nPreparing to unpack .../046-libctf-nobfd0_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking libctf-nobfd0:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libctf0:amd64.\r\nPreparing to unpack .../047-libctf0_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking libctf0:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package binutils-x86-64-linux-gnu.\r\nPreparing to unpack .../048-binutils-x86-64-linux-gnu_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking binutils-x86-64-linux-gnu (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package binutils.\r\nPreparing to unpack .../049-binutils_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking binutils (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libc-dev-bin.\r\nPreparing to unpack .../050-libc-dev-bin_2.31-0ubuntu9.9_amd64.deb ...\r\nUnpacking libc-dev-bin (2.31-0ubuntu9.9) ...\r\nSelecting previously unselected package linux-libc-dev:amd64.\r\nPreparing to unpack .../051-linux-libc-dev_5.4.0-135.152_amd64.deb ...\r\nUnpacking linux-libc-dev:amd64 (5.4.0-135.152) ...\r\nSelecting previously unselected package libcrypt-dev:amd64.\r\nPreparing to unpack .../052-libcrypt-dev_1%3a4.4.10-10ubuntu4_amd64.deb ...\r\nUnpacking libcrypt-dev:amd64 (1:4.4.10-10ubuntu4) ...\r\nSelecting previously unselected package libc6-dev:amd64.\r\nPreparing to unpack .../053-libc6-dev_2.31-0ubuntu9.9_amd64.deb ...\r\nUnpacking libc6-dev:amd64 (2.31-0ubuntu9.9) ...\r\nSelecting previously unselected package gcc-9-base:amd64.\r\nPreparing to unpack .../054-gcc-9-base_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking gcc-9-base:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package libisl22:amd64.\r\nPreparing to unpack .../055-libisl22_0.22.1-1_amd64.deb ...\r\nUnpacking libisl22:amd64 (0.22.1-1) ...\r\nSelecting previously unselected package libmpfr6:amd64.\r\nPreparing to unpack .../056-libmpfr6_4.0.2-1_amd64.deb ...\r\nUnpacking libmpfr6:amd64 (4.0.2-1) ...\r\nSelecting previously unselected package libmpc3:amd64.\r\nPreparing to unpack .../057-libmpc3_1.1.0-1_amd64.deb ...\r\nUnpacking libmpc3:amd64 (1.1.0-1) ...\r\nSelecting previously unselected package cpp-9.\r\nPreparing to unpack .../058-cpp-9_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking cpp-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package cpp.\r\nPreparing to unpack .../059-cpp_4%3a9.3.0-1ubuntu2_amd64.deb ...\r\nUnpacking cpp (4:9.3.0-1ubuntu2) ...\r\nSelecting previously unselected package libcc1-0:amd64.\r\nPreparing to unpack .../060-libcc1-0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libcc1-0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libgomp1:amd64.\r\nPreparing to unpack .../061-libgomp1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libgomp1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libitm1:amd64.\r\nPreparing to unpack .../062-libitm1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libitm1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libatomic1:amd64.\r\nPreparing to unpack .../063-libatomic1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libatomic1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libasan5:amd64.\r\nPreparing to unpack .../064-libasan5_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking libasan5:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package liblsan0:amd64.\r\nPreparing to unpack .../065-liblsan0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking liblsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libtsan0:amd64.\r\nPreparing to unpack .../066-libtsan0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libtsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libubsan1:amd64.\r\nPreparing to unpack .../067-libubsan1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libubsan1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libquadmath0:amd64.\r\nPreparing to unpack .../068-libquadmath0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libquadmath0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libgcc-9-dev:amd64.\r\nPreparing to unpack .../069-libgcc-9-dev_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking libgcc-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package gcc-9.\r\nPreparing to unpack .../070-gcc-9_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking gcc-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package gcc.\r\nPreparing to unpack .../071-gcc_4%3a9.3.0-1ubuntu2_amd64.deb ...\r\nUnpacking gcc (4:9.3.0-1ubuntu2) ...\r\nSelecting previously unselected package libstdc++-9-dev:amd64.\r\nPreparing to unpack .../072-libstdc++-9-dev_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking libstdc++-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package g++-9.\r\nPreparing to unpack .../073-g++-9_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking g++-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package g++.\r\nPreparing to unpack .../074-g++_4%3a9.3.0-1ubuntu2_amd64.deb ...\r\nUnpacking g++ (4:9.3.0-1ubuntu2) ...\r\nSelecting previously unselected package make.\r\nPreparing to unpack .../075-make_4.2.1-1.2_amd64.deb ...\r\nUnpacking make (4.2.1-1.2) ...\r\nSelecting previously unselected package libdpkg-perl.\r\nPreparing to unpack .../076-libdpkg-perl_1.19.7ubuntu3.2_all.deb ...\r\nUnpacking libdpkg-perl (1.19.7ubuntu3.2) ...\r\nSelecting previously unselected package patch.\r\nPreparing to unpack .../077-patch_2.7.6-6_amd64.deb ...\r\nUnpacking patch (2.7.6-6) ...\r\nSelecting previously unselected package dpkg-dev.\r\nPreparing to unpack .../078-dpkg-dev_1.19.7ubuntu3.2_all.deb ...\r\nUnpacking dpkg-dev (1.19.7ubuntu3.2) ...\r\nSelecting previously unselected package build-essential.\r\nPreparing to unpack .../079-build-essential_12.8ubuntu1.1_amd64.deb ...\r\nUnpacking build-essential (12.8ubuntu1.1) ...\r\nSelecting previously unselected package libassuan0:amd64.\r\nPreparing to unpack .../080-libassuan0_2.5.3-7ubuntu2_amd64.deb ...\r\nUnpacking libassuan0:amd64 (2.5.3-7ubuntu2) ...\r\nSelecting previously unselected package gpgconf.\r\nPreparing to unpack .../081-gpgconf_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gpgconf (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package libksba8:amd64.\r\nPreparing to unpack .../082-libksba8_1.3.5-2ubuntu0.20.04.1_amd64.deb ...\r\nUnpacking libksba8:amd64 (1.3.5-2ubuntu0.20.04.1) ...\r\nSelecting previously unselected package libroken18-heimdal:amd64.\r\nPreparing to unpack .../083-libroken18-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libroken18-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libasn1-8-heimdal:amd64.\r\nPreparing to unpack .../084-libasn1-8-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libasn1-8-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libheimbase1-heimdal:amd64.\r\nPreparing to unpack .../085-libheimbase1-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libheimbase1-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libhcrypto4-heimdal:amd64.\r\nPreparing to unpack .../086-libhcrypto4-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libhcrypto4-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libwind0-heimdal:amd64.\r\nPreparing to unpack .../087-libwind0-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libwind0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libhx509-5-heimdal:amd64.\r\nPreparing to unpack .../088-libhx509-5-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libhx509-5-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libkrb5-26-heimdal:amd64.\r\nPreparing to unpack .../089-libkrb5-26-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libkrb5-26-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libheimntlm0-heimdal:amd64.\r\nPreparing to unpack .../090-libheimntlm0-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libheimntlm0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libgssapi3-heimdal:amd64.\r\nPreparing to unpack .../091-libgssapi3-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libgssapi3-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libsasl2-modules-db:amd64.\r\nPreparing to unpack .../092-libsasl2-modules-db_2.1.27+dfsg-2ubuntu0.1_amd64.deb ...\r\nUnpacking libsasl2-modules-db:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSelecting previously unselected package libsasl2-2:amd64.\r\nPreparing to unpack .../093-libsasl2-2_2.1.27+dfsg-2ubuntu0.1_amd64.deb ...\r\nUnpacking libsasl2-2:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSelecting previously unselected package libldap-common.\r\nPreparing to unpack .../094-libldap-common_2.4.49+dfsg-2ubuntu1.9_all.deb ...\r\nUnpacking libldap-common (2.4.49+dfsg-2ubuntu1.9) ...\r\nSelecting previously unselected package libldap-2.4-2:amd64.\r\nPreparing to unpack .../095-libldap-2.4-2_2.4.49+dfsg-2ubuntu1.9_amd64.deb ...\r\nUnpacking libldap-2.4-2:amd64 (2.4.49+dfsg-2ubuntu1.9) ...\r\nSelecting previously unselected package libnpth0:amd64.\r\nPreparing to unpack .../096-libnpth0_1.6-1_amd64.deb ...\r\nUnpacking libnpth0:amd64 (1.6-1) ...\r\nSelecting previously unselected package dirmngr.\r\nPreparing to unpack .../097-dirmngr_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking dirmngr (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package libfakeroot:amd64.\r\nPreparing to unpack .../098-libfakeroot_1.24-1_amd64.deb ...\r\nUnpacking libfakeroot:amd64 (1.24-1) ...\r\nSelecting previously unselected package fakeroot.\r\nPreparing to unpack .../099-fakeroot_1.24-1_amd64.deb ...\r\nUnpacking fakeroot (1.24-1) ...\r\nSelecting previously unselected package libbrotli1:amd64.\r\nPreparing to unpack .../100-libbrotli1_1.0.7-6ubuntu0.1_amd64.deb ...\r\nUnpacking libbrotli1:amd64 (1.0.7-6ubuntu0.1) ...\r\nSelecting previously unselected package libnghttp2-14:amd64.\r\nPreparing to unpack .../101-libnghttp2-14_1.40.0-1build1_amd64.deb ...\r\nUnpacking libnghttp2-14:amd64 (1.40.0-1build1) ...\r\nSelecting previously unselected package librtmp1:amd64.\r\nPreparing to unpack .../102-librtmp1_2.4+20151223.gitfa8646d.1-2build1_amd64.deb ...\r\nUnpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2build1) ...\r\nSelecting previously unselected package libssh-4:amd64.\r\nPreparing to unpack .../103-libssh-4_0.9.3-2ubuntu2.2_amd64.deb ...\r\nUnpacking libssh-4:amd64 (0.9.3-2ubuntu2.2) ...\r\nSelecting previously unselected package libcurl3-gnutls:amd64.\r\nPreparing to unpack .../104-libcurl3-gnutls_7.68.0-1ubuntu2.14_amd64.deb ...\r\nUnpacking libcurl3-gnutls:amd64 (7.68.0-1ubuntu2.14) ...\r\nSelecting previously unselected package liberror-perl.\r\nPreparing to unpack .../105-liberror-perl_0.17029-1_all.deb ...\r\nUnpacking liberror-perl (0.17029-1) ...\r\nSelecting previously unselected package git-man.\r\nPreparing to unpack .../106-git-man_1%3a2.25.1-1ubuntu3.6_all.deb ...\r\nUnpacking git-man (1:2.25.1-1ubuntu3.6) ...\r\nSelecting previously unselected package git.\r\nPreparing to unpack .../107-git_1%3a2.25.1-1ubuntu3.6_amd64.deb ...\r\nUnpacking git (1:2.25.1-1ubuntu3.6) ...\r\nSelecting previously unselected package gnupg-l10n.\r\nPreparing to unpack .../108-gnupg-l10n_2.2.19-3ubuntu2.2_all.deb ...\r\nUnpacking gnupg-l10n (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package gnupg-utils.\r\nPreparing to unpack .../109-gnupg-utils_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gnupg-utils (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package gpg.\r\nPreparing to unpack .../110-gpg_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gpg (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package pinentry-curses.\r\nPreparing to unpack .../111-pinentry-curses_1.1.0-3build1_amd64.deb ...\r\nUnpacking pinentry-curses (1.1.0-3build1) ...\r\nSelecting previously unselected package gpg-agent.\r\nPreparing to unpack .../112-gpg-agent_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gpg-agent (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package gpg-wks-client.\r\nPreparing to unpack .../113-gpg-wks-client_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gpg-wks-client (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package gpg-wks-server.\r\nPreparing to unpack .../114-gpg-wks-server_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gpg-wks-server (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package gpgsm.\r\nPreparing to unpack .../115-gpgsm_2.2.19-3ubuntu2.2_amd64.deb ...\r\nUnpacking gpgsm (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package gnupg.\r\nPreparing to unpack .../116-gnupg_2.2.19-3ubuntu2.2_all.deb ...\r\nUnpacking gnupg (2.2.19-3ubuntu2.2) ...\r\nSelecting previously unselected package libalgorithm-diff-perl.\r\nPreparing to unpack .../117-libalgorithm-diff-perl_1.19.03-2_all.deb ...\r\nUnpacking libalgorithm-diff-perl (1.19.03-2) ...\r\nSelecting previously unselected package libalgorithm-diff-xs-perl.\r\nPreparing to unpack .../118-libalgorithm-diff-xs-perl_0.04-6_amd64.deb ...\r\nUnpacking libalgorithm-diff-xs-perl (0.04-6) ...\r\nSelecting previously unselected package libalgorithm-merge-perl.\r\nPreparing to unpack .../119-libalgorithm-merge-perl_0.08-3_all.deb ...\r\nUnpacking libalgorithm-merge-perl (0.08-3) ...\r\nSelecting previously unselected package libfile-fcntllock-perl.\r\nPreparing to unpack .../120-libfile-fcntllock-perl_0.22-3build4_amd64.deb ...\r\nUnpacking libfile-fcntllock-perl (0.22-3build4) ...\r\nSelecting previously unselected package libpcre16-3:amd64.\r\nPreparing to unpack .../121-libpcre16-3_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcre16-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libpcre32-3:amd64.\r\nPreparing to unpack .../122-libpcre32-3_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcre32-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libpcrecpp0v5:amd64.\r\nPreparing to unpack .../123-libpcrecpp0v5_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcrecpp0v5:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libpcre3-dev:amd64.\r\nPreparing to unpack .../124-libpcre3-dev_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcre3-dev:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libsasl2-modules:amd64.\r\nPreparing to unpack .../125-libsasl2-modules_2.1.27+dfsg-2ubuntu0.1_amd64.deb ...\r\nUnpacking libsasl2-modules:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSelecting previously unselected package libssl-dev:amd64.\r\nPreparing to unpack .../126-libssl-dev_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking libssl-dev:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSelecting previously unselected package manpages-dev.\r\nPreparing to unpack .../127-manpages-dev_5.05-1_all.deb ...\r\nUnpacking manpages-dev (5.05-1) ...\r\nSetting up libksba8:amd64 (1.3.5-2ubuntu0.20.04.1) ...\r\nSetting up libexpat1:amd64 (2.2.9-1ubuntu0.6) ...\r\nSetting up libpcrecpp0v5:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up libxau6:amd64 (1:1.0.9-0ubuntu1) ...\r\nSetting up libkeyutils1:amd64 (1.6-6ubuntu1.1) ...\r\nSetting up libpsl5:amd64 (0.21.0-1ubuntu1) ...\r\nSetting up perl-modules-5.30 (5.30.0-9ubuntu0.3) ...\r\nSetting up libpcre16-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up manpages (5.05-1) ...\r\nSetting up libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up libbrotli1:amd64 (1.0.7-6ubuntu0.1) ...\r\nSetting up libsqlite3-0:amd64 (3.31.1-4ubuntu0.5) ...\r\nSetting up libsasl2-modules:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSetting up binutils-common:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up libnghttp2-14:amd64 (1.40.0-1build1) ...\r\nSetting up less (551-1ubuntu0.1) ...\r\nSetting up linux-libc-dev:amd64 (5.4.0-135.152) ...\r\nSetting up libctf-nobfd0:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up libnpth0:amd64 (1.6-1) ...\r\nSetting up krb5-locales (1.17-6ubuntu4.1) ...\r\nSetting up autoconf-archive (20190106-2.1ubuntu1) ...\r\nSetting up libassuan0:amd64 (2.5.3-7ubuntu2) ...\r\nSetting up libgomp1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libcbor0.6:amd64 (0.6.0-0ubuntu1) ...\r\nSetting up libldap-common (2.4.49+dfsg-2ubuntu1.9) ...\r\nSetting up libfakeroot:amd64 (1.24-1) ...\r\nSetting up libkrb5support0:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libsasl2-modules-db:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSetting up fakeroot (1.24-1) ...\r\nupdate-alternatives: using /usr/bin/fakeroot-sysv to provide /usr/bin/fakeroot (fakeroot) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/fakeroot.1.gz because associated file /usr/share/man/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/faked.1.gz because associated file /usr/share/man/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/es/man1/fakeroot.1.gz because associated file /usr/share/man/es/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/es/man1/faked.1.gz because associated file /usr/share/man/es/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/fakeroot.1.gz because associated file /usr/share/man/fr/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/faked.1.gz because associated file /usr/share/man/fr/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/sv/man1/fakeroot.1.gz because associated file /usr/share/man/sv/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/sv/man1/faked.1.gz because associated file /usr/share/man/sv/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nSetting up autotools-dev (20180224.1) ...\r\nSetting up libx11-data (2:1.6.9-2ubuntu1.2) ...\r\nSetting up make (4.2.1-1.2) ...\r\nSetting up libmpfr6:amd64 (4.0.2-1) ...\r\nSetting up gnupg-l10n (2.2.19-3ubuntu2.2) ...\r\nSetting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2build1) ...\r\nSetting up libsigsegv2:amd64 (2.12-2) ...\r\nSetting up xz-utils (5.2.4-1ubuntu1.1) ...\r\nupdate-alternatives: using /usr/bin/xz to provide /usr/bin/lzma (lzma) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzma.1.gz because associated file /usr/share/man/man1/xz.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/unlzma.1.gz because associated file /usr/share/man/man1/unxz.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzcat.1.gz because associated file /usr/share/man/man1/xzcat.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzmore.1.gz because associated file /usr/share/man/man1/xzmore.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzless.1.gz because associated file /usr/share/man/man1/xzless.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzdiff.1.gz because associated file /usr/share/man/man1/xzdiff.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzcmp.1.gz because associated file /usr/share/man/man1/xzcmp.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzgrep.1.gz because associated file /usr/share/man/man1/xzgrep.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzegrep.1.gz because associated file /usr/share/man/man1/xzegrep.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzfgrep.1.gz because associated file /usr/share/man/man1/xzfgrep.1.gz (of link group lzma) doesn't exist\r\nSetting up libquadmath0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libssl-dev:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSetting up libpcre32-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up libmpc3:amd64 (1.1.0-1) ...\r\nSetting up libatomic1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up patch (2.7.6-6) ...\r\nSetting up libk5crypto3:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libsasl2-2:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSetting up libroken18-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libubsan1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libcrypt-dev:amd64 (1:4.4.10-10ubuntu4) ...\r\nSetting up git-man (1:2.25.1-1ubuntu3.6) ...\r\nSetting up libisl22:amd64 (0.22.1-1) ...\r\nSetting up netbase (6.1) ...\r\nSetting up libkrb5-3:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libbinutils:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up libfido2-1:amd64 (1.3.1-1ubuntu2) ...\r\nSetting up libc-dev-bin (2.31-0ubuntu9.9) ...\r\nSetting up openssl (1.1.1f-1ubuntu2.16) ...\r\nSetting up libbsd0:amd64 (0.10.0-1) ...\r\nSetting up readline-common (8.0-4) ...\r\nSetting up publicsuffix (20200303.0012-1) ...\r\nSetting up libcc1-0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up liblocale-gettext-perl (1.07-4) ...\r\nSetting up liblsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libitm1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libheimbase1-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libgdbm6:amd64 (1.18.1-5) ...\r\nSetting up gcc-9-base:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libtsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libctf0:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up pinentry-curses (1.1.0-3build1) ...\r\nSetting up manpages-dev (5.05-1) ...\r\nSetting up libxdmcp6:amd64 (1:1.1.3-0ubuntu1) ...\r\nSetting up libxcb1:amd64 (1.14-2) ...\r\nSetting up libasn1-8-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libedit2:amd64 (3.1-20191231-1) ...\r\nSetting up libreadline8:amd64 (8.0-4) ...\r\nSetting up m4 (1.4.18-4) ...\r\nSetting up libhcrypto4-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up ca-certificates (20211016ubuntu0.20.04.1) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nUpdating certificates in /etc/ssl/certs...\r\n124 added, 0 removed; done.\r\nSetting up libasan5:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libwind0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libgssapi-krb5-2:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libgdbm-compat4:amd64 (1.18.1-5) ...\r\nSetting up libssh-4:amd64 (0.9.3-2ubuntu2.2) ...\r\nSetting up gpgconf (2.2.19-3ubuntu2.2) ...\r\nSetting up cpp-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libperl5.30:amd64 (5.30.0-9ubuntu0.3) ...\r\nSetting up libc6-dev:amd64 (2.31-0ubuntu9.9) ...\r\nSetting up libx11-6:amd64 (2:1.6.9-2ubuntu1.2) ...\r\nSetting up libxmuu1:amd64 (2:1.1.3-0ubuntu1) ...\r\nSetting up gpg (2.2.19-3ubuntu2.2) ...\r\nSetting up gnupg-utils (2.2.19-3ubuntu2.2) ...\r\nSetting up binutils-x86-64-linux-gnu (2.34-6ubuntu1.4) ...\r\nSetting up gpg-agent (2.2.19-3ubuntu2.2) ...\r\nSetting up libpcre3-dev:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up openssh-client (1:8.2p1-4ubuntu0.5) ...\r\nSetting up libhx509-5-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up gpgsm (2.2.19-3ubuntu2.2) ...\r\nSetting up libxext6:amd64 (2:1.3.4-0ubuntu1) ...\r\nSetting up binutils (2.34-6ubuntu1.4) ...\r\nSetting up libgcc-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up perl (5.30.0-9ubuntu0.3) ...\r\nSetting up libdpkg-perl (1.19.7ubuntu3.2) ...\r\nSetting up autoconf (2.69-11.1) ...\r\nSetting up gpg-wks-server (2.2.19-3ubuntu2.2) ...\r\nSetting up xauth (1:1.1-0ubuntu1) ...\r\nSetting up cpp (4:9.3.0-1ubuntu2) ...\r\nSetting up libkrb5-26-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up automake (1:1.16.1-4ubuntu6) ...\r\nupdate-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist\r\nSetting up gcc-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libstdc++-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libfile-fcntllock-perl (0.22-3build4) ...\r\nSetting up libalgorithm-diff-perl (1.19.03-2) ...\r\nSetting up libheimntlm0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up gcc (4:9.3.0-1ubuntu2) ...\r\nSetting up dpkg-dev (1.19.7ubuntu3.2) ...\r\nSetting up liberror-perl (0.17029-1) ...\r\nSetting up libgssapi3-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up g++-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up g++ (4:9.3.0-1ubuntu2) ...\r\nupdate-alternatives: using /usr/bin/g++ to provide /usr/bin/c++ (c++) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/c++.1.gz because associated file /usr/share/man/man1/g++.1.gz (of link group c++) doesn't exist\r\nSetting up build-essential (12.8ubuntu1.1) ...\r\nSetting up libalgorithm-diff-xs-perl (0.04-6) ...\r\nSetting up libalgorithm-merge-perl (0.08-3) ...\r\nSetting up libldap-2.4-2:amd64 (2.4.49+dfsg-2ubuntu1.9) ...\r\nSetting up libcurl3-gnutls:amd64 (7.68.0-1ubuntu2.14) ...\r\nSetting up dirmngr (2.2.19-3ubuntu2.2) ...\r\nSetting up git (1:2.25.1-1ubuntu3.6) ...\r\nSetting up gpg-wks-client (2.2.19-3ubuntu2.2) ...\r\nSetting up gnupg (2.2.19-3ubuntu2.2) ...\r\nProcessing triggers for libc-bin (2.31-0ubuntu9.9) ...\r\nProcessing triggers for ca-certificates (20211016ubuntu0.20.04.1) ...\r\nUpdating certificates in /etc/ssl/certs...\r\n0 added, 0 removed; done.\r\nRunning hooks in /etc/ca-certificates/update.d...\r\ndone.\r\nRemoving intermediate container 40ae9c4c6184\n ---> fcd277853d9b\nStep 4/14 : COPY . fuzzball/\n ---> b408702e37c6\nStep 5/14 : RUN cd fuzzball &&     ./configure --with-ssl --prefix /root/scratch && make clean &&     make && make install && cd docs &&     ../src/prochelp ../src/mpihelp.raw mpihelp.txt mpihelp.html &&     ../src/prochelp ../src/mufman.raw mufman.txt mufman.html &&     ../src/prochelp ../src/muckhelp.raw muckhelp.txt muckhelp.html\n ---> Running in 512c2339eaba\n \nTinyMUCK fb7.x auto-configure script.\n \nThis script will try and determine things about your system so\nthat FB can compile correctly. This will create your Makefile\nand the header file autoconf.h in the include directory.\n \nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... none needed\nchecking whether C compiler accepts -std=gnu99... yes\nchecking whether C compiler accepts -fwrapv... yes\nchecking for PCRE directory... /usr\nchecking for pcre_free in -lpcre... yes\nchecking for SSL directory... /usr\nchecking for CRYPTO_free in -lcrypto... yes\nchecking for SSL_read in -lssl... yes\nchecking how to run the C preprocessor... gcc -E\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking malloc.h usability... yes\nchecking malloc.h presence... yes\nchecking for malloc.h... yes\nchecking for dirent.h that defines DIR... yes\nchecking for library containing opendir... none required\nchecking for pid_t... yes\nchecking for size_t... yes\nchecking for mallinfo... yes\nchecking for getrlimit... yes\nchecking for getrusage... yes\nchecking for arc4random_uniform... no\nchecking for pselect... yes\nchecking for struct mallinfo.hblks... no\nchecking for struct mallinfo.keepcost... no\nchecking for struct mallinfo.treeoverhead... no\nchecking for struct mallinfo.grain... no\nchecking for struct mallinfo.allocated... no\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating src/Makefile\nconfig.status: creating game/restart\nconfig.status: creating include/autoconf.h\n \nYou should review the options in include/config.h, and\nthen type make to build your system.\n \nfor d in src; do \\\n\tcd ${d} && make clean; \\\ndone\nmake[1]: Entering directory '/fuzzball/src'\nrm -f array.o boolexp.o compile.o create.o db.o debugger.o diskprop.o edit.o events.o fbmath.o fbsignal.o fbstrings.o fbtime.o game.o hashtab.o help.o interface.o interface_ssl.o interp.o log.o look.o match.o mcp.o mcpgui.o mcppkgs.o mfuns.o mfuns2.o move.o msgparse.o mufevent.o p_array.o p_connects.o p_db.o p_error.o p_float.o p_math.o p_mcp.o p_misc.o p_props.o p_regex.o p_stack.o p_strings.o pennies.o player.o predicates.o propdirs.o property.o props.o sanity.o set.o smtp.o speech.o timequeue.o tune.o wiz.o crt_malloc.o core resolver.o prochelp.o fbmuck fb-resolver prochelp\nrm -rf mkversion.dSYM\nmake[1]: Leaving directory '/fuzzball/src'\nfor d in src; do \\\n\tcd ${d} && make all; \\\ndone\nmake[1]: Entering directory '/fuzzball/src'\nCreating ../include/defines.h...\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c array.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c boolexp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c compile.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c create.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c db.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c debugger.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c diskprop.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c edit.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c events.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbmath.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbsignal.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbstrings.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbtime.c\n\u001b[91mfbtime.c: In function 'timestr_long':\nfbtime.c:329:47: warning: '%s' directive output may be truncated writing up to 2 bytes into a region of size between 1 and 100 [-Wformat-truncation=]\n  329 |             snprintf(value, sizeof(value), \"%s%s%ld %s%s\", buf, (*buf ? \", \" : \"\"), temp, str[i], temp != 1 ? \"s\" : \"\");\n      |                                               ^~\nfbtime.c:329:44: note: directive argument in the range [-9223372036854775807, 9223372036854775807]\n  329 |             snprintf(value, sizeof(value), \"%s%s%ld %s%s\", buf, (*buf ? \", \" : \"\"), temp, str[i], temp != 1 ? \"s\" : \"\");\n      |                                            ^~~~~~~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from fbtime.c:12:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 124) into a destination of size 100\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c game.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c hashtab.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c help.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c interface.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c interface_ssl.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c interp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c log.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c look.c\n\u001b[91mlook.c: In function 'listprops_wildcard':\nlook.c:649:47: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n  649 |             snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                               ^\nIn file included from /usr/include/stdio.h:867,\n                 from look.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 2 or more bytes (assuming 8193) into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c match.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mcp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mcpgui.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mcppkgs.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mfuns.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mfuns2.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c move.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c msgparse.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mufevent.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_array.c\n\u001b[91mp_array.c: In function 'prim_array_get_propdirs':\np_array.c:1695:41: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1695 |         snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                         ^~                           ~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 16384 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c: In function 'prim_array_get_propvals':\np_array.c:1796:41: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1796 |         snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                         ^~                           ~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 16384 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c: In function 'prim_array_get_proplist':\np_array.c:1953:46: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n 1953 |     snprintf(propname, sizeof(propname), \"%s#\", dir);\n      |                                              ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 8193 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:1966:55: warning: '#' directive output may be truncated writing 1 byte into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1966 |             snprintf(propname, sizeof(propname), \"%s%c#\", dir,\n      |                                                       ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8194 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c:2014:50: warning: '%c' directive output may be truncated writing 1 byte into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2014 |         snprintf(propname, sizeof(propname), \"%s#%c%d\", dir, PROPDIR_DELIMITER, count);\n      |                                                  ^~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 8205 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2018:55: warning: '%d' directive output may be truncated writing between 1 and 11 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2018 |             snprintf(propname, sizeof(propname), \"%s%c%d\", dir, PROPDIR_DELIMITER, count);\n      |                                                       ^~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8204 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c:2022:59: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n 2022 |                 snprintf(propname, sizeof(propname), \"%s%d\", dir, count);\n      |                                                           ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 8203 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c: In function 'prim_array_put_propvals':\np_array.c:2168:63: warning: '%.15g' directive output may be truncated writing between 1 and 22 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2168 |                     snprintf(propname, sizeof(propname), \"%s%c%.15g\", dir,\n      |                                                               ^~~~~\np_array.c:2168:58: note: assuming directive output of 21 bytes\n 2168 |                     snprintf(propname, sizeof(propname), \"%s%c%.15g\", dir,\n      |                                                          ^~~~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8215 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2158:65: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n 2158 |                     snprintf(propname, sizeof(propname), \"%s%c%s\", dir,\n      |                                                                 ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 8193 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2163:63: warning: '%d' directive output may be truncated writing between 1 and 11 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2163 |                     snprintf(propname, sizeof(propname), \"%s%c%d\", dir,\n      |                                                               ^~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8204 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_connects.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_db.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_error.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_float.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_math.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_mcp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_misc.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_props.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_regex.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_stack.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_strings.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c pennies.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c player.c\n\u001b[91mplayer.c: In function 'delete_player':\nplayer.c:394:54: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size 8172 [-Wformat-truncation=]\n  394 |                              \"## Renaming %s(#%d) to %s to prevent name \"\n      |                                                      ^~\n  395 |                              \"collision.\",\n  396 |                              NAME(ren), ren, namebuf);\n      |                                              ~~~~~~~  \n\u001b[0m\u001b[91mIn file included from /usr/include/stdio.h:867,\n                 from player.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 48 or more bytes (assuming 8239) into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c predicates.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c propdirs.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c property.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c props.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c sanity.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c set.c\n\u001b[91mset.c: In function 'do_register':\nset.c:1238:45: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1238 |             snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                             ^~                           ~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from set.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 16384 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nset.c:1270:57: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size 8190 [-Wformat-truncation=]\n 1270 |                     snprintf(detail, sizeof(detail), \": %s\", unparse_buf);\n      |                                                         ^~   ~~~~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from set.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8194 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c smtp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c speech.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c timequeue.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c tune.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c wiz.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c crt_malloc.c\nif [ -f fbmuck ]; then mv -f fbmuck fbmuck~ ; fi\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -o fbmuck array.o boolexp.o compile.o create.o db.o debugger.o diskprop.o edit.o events.o fbmath.o fbsignal.o fbstrings.o fbtime.o game.o hashtab.o help.o interface.o interface_ssl.o interp.o log.o look.o match.o mcp.o mcpgui.o mcppkgs.o mfuns.o mfuns2.o move.o msgparse.o mufevent.o p_array.o p_connects.o p_db.o p_error.o p_float.o p_math.o p_mcp.o p_misc.o p_props.o p_regex.o p_stack.o p_strings.o pennies.o player.o predicates.o propdirs.o property.o props.o sanity.o set.o smtp.o speech.o timequeue.o tune.o wiz.o crt_malloc.o -lm -lssl -lcrypto -lpcre  -L/usr/lib -lpcre -L/usr/lib -lssl\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c resolver.c\n\u001b[91mresolver.c: In function 'do_resolve':\nresolver.c:812:36: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  812 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nresolver.c:812:40: note: format string is defined here\n  812 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:812:36: note: directive argument in the range [0, 65535]\n  812 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:810:42: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  810 |         snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                          ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:796:40: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  796 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nresolver.c:796:44: note: format string is defined here\n  796 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:796:40: note: directive argument in the range [0, 65535]\n  796 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:794:46: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  794 |             snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                              ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:484:36: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  484 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nresolver.c:484:40: note: format string is defined here\n  484 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:484:36: note: directive argument in the range [0, 65535]\n  484 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:482:42: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  482 |         snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                          ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:471:40: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  471 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nresolver.c:471:44: note: format string is defined here\n  471 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:471:40: note: directive argument in the range [0, 65535]\n  471 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:469:46: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  469 |             snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                              ^\n\u001b[0m\u001b[91mIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:951:46: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 1023 [-Wformat-truncation=]\n  951 |             snprintf(outbuf, sizeof(outbuf), \"%s(%\" PRIu16 \")|%s\", buf, prt,\n      |                                              ^~~~~~\nresolver.c:951:50: note: format string is defined here\n  951 |             snprintf(outbuf, sizeof(outbuf), \"%s(%\" PRIu16 \")|%s\", buf, prt,\nresolver.c:951:46: note: directive argument in the range [0, 65535]\n  951 |             snprintf(outbuf, sizeof(outbuf), \"%s(%\" PRIu16 \")|%s\", buf, prt,\n      |                                              ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 5 and 1166 bytes into a destination of size 1024\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -o fb-resolver resolver.o crt_malloc.o -lm -lpthread -lssl -lcrypto -lpcre  -L/usr/lib -lpcre -L/usr/lib -lssl\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c prochelp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -o prochelp prochelp.o\nmake[1]: Leaving directory '/fuzzball/src'\nfor d in src; do \\\n\tcd ${d} && make install; \\\ndone\nmake[1]: Entering directory '/fuzzball/src'\n/usr/bin/install -c -d /root/scratch/bin\n/usr/bin/install -c -d /root/scratch/sbin\n/usr/bin/install -c fbmuck fb-resolver prochelp /root/scratch/bin\n/usr/bin/install -c -d /root/scratch/share/doc/fbmuck\nmake help\nmake[2]: Entering directory '/fuzzball/src'\ncd ../docs && ../src/prochelp ../src/mpihelp.raw mpihelp.txt mpihelp.html > /dev/null\ncd ../docs && ../src/prochelp ../src/mufman.raw man.txt mufman.html > /dev/null\ncd ../docs && ../src/prochelp ../src/muckhelp.raw help.txt muckhelp.html > /dev/null\ncd ../docs && /usr/bin/install -c -m 644 help.txt man.txt mpihelp.txt ../game/data\n/usr/bin/install -c -d ../game/data/info\ncd ../docs && /usr/bin/install -c -m 644 mpi-intro mpi-intro2 muf-tutorial changesfb7 ../game/data/info\ncd ../docs && /usr/bin/install -c -m 644 man.txt help.txt mpihelp.txt mpihelp.html mufman.html muckhelp.html /root/scratch/share/doc/fbmuck\nmake[2]: Leaving directory '/fuzzball/src'\n/usr/bin/install -c ../game/restart /root/scratch/sbin/fb-restart\n \nYou may run 'make install-sysv-inits' to install SysV style init scripts.\n \nmake[1]: Leaving directory '/fuzzball/src'\nYou can use letsencrypt (with certbot, acme-client, acme.sh, or other clients) to get a free TLS certificate for use in enabling secure, encrypted connections to your MUCK.\n\n\n----------------------------------------------------------------------------\n                          Definitions and Details\n----------------------------------------------------------------------------\n\n\n\nComments:\n  Only 26 levels of recursion are allowed, so funcs that deep return literally.\nIn loops, a max of 256 iterations are allowed before they exit automatically.\nLists have a maximum size of 256 lines, or 4096 characters, whichever is less.\n  \n  All matching will be done relative to the trigger object first, then relative\nto the triggering player, if nothing was matched in the first pass.\n  \n  The 'me' and 'here' keywords always are relative to the triggering player.\nThe trigger object is referred to by 'this'.\n\n\n\nDefinitions:\n    A Trigger object is the object that the MPI script is evaluated from.\n  \n    A List is a string containing several individual substring items,\nseparated by carriage return characters.\n  \n    A property based list is a set of consecutively numbered properties that\neach contain one string in a list of strings.  Property based lists\nare often numbered like: listname1, listname2, listname3, listname4, &c.\nAnother popular format is listname#/1, listname#/2, listname#/3, etc.\nMPI can read in either of those formats, and several more, for that\nmatter.\n  \n    For logical constructs, a string value of \"0\", or a null string (\"\") are\nboth considered false.  Any other value is considered true.\n\n\n\n----------------------------------------------------------------------------\n                               Time Functions\n----------------------------------------------------------------------------\n\n\n{tzoffset}\n    Returns the server's offset from UTC in seconds.\nResult is negative for time zones west of the prime meridian.\nResult is positive for time zones east of the prime meridian.\n\n\n{time}\n{time:timezone}\n    Returns a time string in the 24hr form hh:mm:ss.  If the timezone\nargument is given, then it offsets the time returned by that number\nof hours.\n\n\n{date}\n{date:timezone}\n    Returns a date string in the form mm/dd/yy.  If the timezone\nargument is given, then it offsets the date returned by that number\nof seconds.\n\n\n{ftime:format}\n{ftime:format,tz}\n{ftime:format,tz,secs}\n    Returns a time string in the format you specify.  See 'man timefmt' for\nthe %subs that you can use in the format string.  If specified, tz is the\nnumber of seconds offset from UTC.  If specified, secs is the systime to\nuse, instead of the current time.  {ftime:%x %X,{tzoffset},0} will return\nthe date and time for systime 0, for the local time zone of the server.\nftime processes format strings with the C function strftime().\n\n\n{timestr:secs}\n    Given a time period in seconds, this will return a concise abbreviated\nstring representation of how long that time was.  This might return a value\nlike \"9d 12:56\" for 9 days, 12 hours, and 56 minutes.\n\n\n{ltimestr:secs}\n    Given a time period, in seconds, this will return a string, including a\nbreakdown of all the time units of that period.  For example, given a number\nof seconds, it might return:\n        3 years, 10 months, 4 weeks, 1 day, 18 hours, 40 mins, 21 secs\n\n\n{stimestr:secs}\n    Given a time period, in seconds, this will return the most significant\ntime unit of that time period.  For example, a number of seconds, that is\nequivalent to 9 days, 23 hours, 10 minutes, and 52 seconds, will be have\nthe value \"9d\" returned, as the abbreviated most significant time unit.\n\n\n{secs}\n    Returns system time: the number of second since midnight 1/1/70 GMT\n\n\n{convtime:string}\n    Converts time string from \"HH:MM:SS MO/DY/YR\" format to systime seconds.\n\n\n{convsecs:systime}\n    Converts systime seconds into a readable time string.\n\n\n{delay:secs,expr}\n    Evaluates the given expression, then puts the result of that on the\ntimequeue, to execute after the given number of seconds.  At that time,\nthe string is evaluated again, and displayed to the user, or to the room,\ndepending on whether it was run from a regular message such as @succ, or\nfrom an omessage such as @osucc.  Since the expression is evaluated both\nbefore and after being delayed, you need to put MPI code that is to run\nafter the delay within a {lit:expr} command.  If a {delay} evaluation is\na null string, then the notify or notify_except will not be done.  {delay}\nwill return the process ID of the event it puts on the timequeue.\n\n\n{kill:0}\n{kill:processID}\n    Kills a process on the timequeue, that was possibly created by {DELAY}.\nIf the process ID it is given is 0, then it will kill all processes done by\nthat trigger object.  If the process to be killed was not set off by that\ntrigger, and was not set off by any object that the owner of the trigger\nowns, then this will error out with Permission denied.  If no process is\nfound, this returns 0.  If a process was found, and the permissions were\nokay, then the process is killed, and {kill} returns the number of processes\nkilled.  Usually 1.\n\n\n\n----------------------------------------------------------------------------\n                             Logical Functions\n----------------------------------------------------------------------------\n\n\n{if:check,true}\n{if:check,true,false}\n    This is a simple conditional command.  It evaluates the 'check'\nargument and if it is true, then it evaluates the 'true' argument and\nreturns its result.  If 'check' does not evaluate as true, then it will\nevaluate the 'false' argument, if there is one, and returns its result.\nIf there is no false argument, and 'check' evaluated false, then it\nreturns a null string.  Example:\n    Your computer is {if:{eq:2,3},broken!,all right.}\n\n\n{default:value1,value2}\n    Returns value2 if value1 is null or 0, otherwise returns value1.  Example:\n    You entered {default:{&arg},nothing}.\n\n\n{eq:expr1,expr2}\n    If expr1 and expr2 evaluate out to the same value, then this returns\ntrue.  Otherwise, this returns false.  If both expressions evaluate out\nto numbers, then this compares them numerically.\n\n\n{ne:expr1,expr2}\n    If expr1 and expr2 evaluate out to the same value, then this returns\nfalse.  Otherwise, this returns true.  If both expressions evaluate out\nto numbers, then this compares them numerically.\n\n\n{gt:expr1,expr2}\n    Evaluates expr1 and expr2, then returns true if expr1 was larger.\n\n\n{ge:expr1,expr2}\n    Evals expr1 and expr2, then returns true if expr1 was larger or equal.\n\n\n{lt:expr1,expr2}\n    Evaluates expr1 and expr2, then returns true if expr1 was smaller.\n\n\n{le:expr1,expr2}\n    Evals expr1 and expr2, then returns true if expr1 was smaller or equal.\n\n\n{not:expr}\n    Returns the logical NOT of expr.  If expr was true, this returns false.\nIf expr was false, this returns true.\n\n\n{or:expr1,expr2...}\n    Returns true if expr1 or expr2 evaluate as true.  Otherwise, this\nreturns false.  If expr1 was true, this doesn't bother to exaluate expr2,\nas it does C-style shortcutting.  If there are more than two arguments,\nthen this will evaluate them until either one returns true, or until it\nhas evaluated all the expressions.  This returns false only if all of the\nexpressions return false.\n\n\n{and:expr1,expr2...}\n    Returns true if expr1 and expr2 evaluate as true.  Otherwise, this\nreturns false.  If expr1 was false, this doesn't bother to evaluate\nexpr2, as it does C-style shortcutting.  If there are more than two\narguments, then this will evaluate all of them until either one returns\nfalse, in which case this function returns false, or until it has evaluated\nall of the arguments.  This function returns true only if all the arguments\nevaluate as true.\n\n\n{xor:expr1,expr2}\n    Returns true if expr1 or expr2 evaluate as true, but false if both do.\nOtherwise, this returns false.\n\n\n\n----------------------------------------------------------------------------\n                             Property Handling\n----------------------------------------------------------------------------\n\n\n{prop:propname}\n{prop:propname,obj}\n    Returns the literal string value of the given property.  If no object\nparameter is passed to it, it looks for the property somewhere down the\nenvironment from the trigger object.  Otherwise, it looks down the\nenvironment from the object specified.  If the property is not found,\nthis returns an empty string.  If the property that it tries to access is\nread restricted and the owner of the trigger object does not own the\nobject that the property is found on, then the MPI script stops with a\nPermission denied error.\n\n\n{prop!:propname}\n{prop!:propname,obj}\n    Returns the literal string value of the given property.  If no object\nparameter is passed to it, it looks for the property on the trigger.\nOtherwise, it looks for the property on the object specified.  If the\nproperty is not found, this returns an empty string.  If the property that\nit tries to access is read restricted and the owner of the trigger object\ndoes not own the object that the property is found on, then the MPI\nscript stops with a Permission denied error.\n\n\n{exec:propname}\n{exec:propname,obj}\n    Returns the string value of the given property, after having\nevaluated any embedded MPI commands that it contained.  If no object\nparameter is passed to it, it looks for the property somewhere down the\nenvironment from the trigger object.  Otherwise, it looks down the\nenvironment from the object specified.  If the property is not found,\nthis returns an empty string.  If the property that it tries to access is\nread restricted and the owner of the trigger object does not own the\nobject that the property is found on, then the MPI script stops with a\nPermission denied error.\n\n\n{exec!:propname}\n{exec!:propname,obj}\n    Returns the string value of the given property, after having\nevaluated any embedded MPI commands that it contained.  If no object\nparameter is passed to it, it looks for the property on the trigger.\nOtherwise, it looks for the property on the object specified.  If the\nproperty is not found, this returns an empty string.  If the property\nthat it tries to access is read restricted and the owner of the trigger\nobject does not own the object that the property is found on, then\nthe MPI script stops with a Permission denied error.\n\n\n{index:propname}\n{index:propname,obj}\n    Returns the string value of the property whose name is stored in the\ngiven property.  This sounds confusing, but it's basically just the same\nas {exec:{prop:propname}}.  If no object parameter is passed to it, it\nlooks for both the index property and the referenced property somewhere\ndown the environment from the trigger object.  Otherwise, it looks down\nthe environment from the object specified for both of them.  If either\nproperty is not found, this returns an empty string.  If the property\nthat it tries to access is read restricted, and the owner of the trigger\nobject does not own the object that the properties are found on, then\nthe MPI script stops with a Permission denied error.  Any MPI code in\nthe target property is evaluated and the result is returned.\n\n\n{index!:propname}\n{index!:propname,obj}\n    Returns the string value of the property whose name is stored in the\ngiven property.  This sounds confusing, but it's basically just the same\nas {exec!:{prop!:propname}}.  If no object parameter is passed to it, it\nlooks for both the index property and the referenced property on the trigger\nobject.  Otherwise, it looks on the specified object for both of them.\nIf either property is not found, this returns an empty string.  If the\nproperty that it tries to access is read restricted, and the owner of the\ntrigger object does not own the object that the properties are found on,\nthen the MPI script stops with a Permission denied error.  Any MPI code in\nthe target property is evaluated and the result is returned.\n\n\n{store:val,prop}\n{store:val,prop,obj}\n    Stores a string value in a given property.  If no obj parameter is\ngiven, then it stores the property on the trigger object.  Otherwise, it\nwill store it on the given object.  If you specify a propname that is\nprotected, you will get a Permission Denied error.  You are only allowed\nto store properties on objects controlled by the owner of the trigger\nobject.  The trigger object is the object that triggered the evaluation of\nthe MPI commands.  This function returns the string that is stored as the\nprop value.  If you store a null value in the property, then it will remove\nthe property if it is not a propdir.  It will clear the value of the prop\nif it IS a propdir.\n\n\n{delprop:propname}\n{delprop:propname,object}\n    This function will remove a property and all of its subsidiary properties\nin the case that it is a propdir.  This will delete the property on the\ntrigger object, unless an object argument is specified.  If one is, then it\nwill delete the property on that given object.  This function returns a null\nstring.  If you specify a propname that is protected, you will get an error\nof Permission Denied.  You are only allowed to delete properties from objects\nthat are owned by the owner of the trigger object.\n\n\n{bless:propname}\n{bless:propname,object}\n    Blesses a property so that MPI executed from it will run with blessed\npermissions.  This command itself requires blessed permissions to run.\n\n\n{unbless:propname}\n{unbless:propname,object}\n    Removes the blessing of a property so that MPI executed from it will no\nlonger run with blessed permissions.  This command itself requires blessed\npermissions to run.\n\n\n{list:listname}\n{list:listname,obj}\n    Returns a string, containing a carriage-return delimited list of\nindividual lines from a property based list.  A property based list is a\nseries of properties that are consecutively numbered.  The server\nunderstands several different formats, and can also read in property\nlists in either the propnameX format, or the propname#/X format.  It does\nNOT evaluate the contents of the list for embedded MPI commands.  If no\nobj argument is supplied, then it looks for the list somewhere down the\nenvironment from the trigger object.  Otherwise, it looks for the list\ndown the environment from the given object.\n\n\n{concat:listname}\n{concat:listname,obj}\n    Returns a string, containing the concatenated lines of a property\nbased list.  It concatenates the list semi-intelligently, putting a\nsingle space between lines normally, and two spaces between lines when\nthe previous one ended with a period, exclamation mark, or question mark.\nA property based list is a series of properties that are consecutively\nnumbered.  The server understands several different formats, and can also\nread in property lists in either the propnameX format, or the propname#/X\nformat.  It does NOT evaluate the contents of the list for embedded MPI\ncommands.  If no obj argument is supplied, then it looks for the list\nsomewhere down the environment from the trigger object.  Otherwise, it\nlooks for the list down the environment from the given object.\n\n\n{lexec:listname}\n{lexec:listname,obj}\n    This takes a property based list, and concatenates all its lines\ntogether, stripping spaces from the beginning and end of each one.  It\nthen evaluates the result for MPI commands, and returns the resulting\nstring.  A property based list is a series of properties that are\nconsecutively numbered.  The server understands several different\nformats, and can also read in property lists in either the propnameX\nformat, or the propname#/X format.  If no obj argument is supplied, then\nit looks for the list somewhere down the environment from the trigger\nobject.  Otherwise, it looks for the list down the environment from the\ngiven object.\n\n\n{rand:listname}\n{rand:listname,obj}\n    Returns the value of a randomly picked list item from a property\nbased list.  If no obj parameter is given, then it looks down the\nenvironment from the trigger object for the list.  Otherwise, it looks\ndown the environment from the given object.  Any MPI code in the target\nproperty is evaluated and the result is returned.\n\n\n{select:value,listname}\n{select:value,listname,object}\n    Returns the value of a single list item from a sparse property list.\nThe item chosen is the one who's line number is the largest one that is\nless than or equal to the given value.  If the list is missing any items,\nthen {select} will return the item in the list with the highest line number\nthat is less than or equal to the given value.  ie:  If the list has the\nfollowing entries:\n    _junk#/1:one\n    _junk#/5:two\n    _junk#/16:three\n    _junk#/20:four\nThen {select:9,_junk} will return \"two\", {select:16,_junk} will return\n\"three\", and {select:25,_junk} will return \"four\".\n\n\n{timesub:period,offset,listname}\n{timesub:period,offset,listname,object}\n    This is sort of like {list}, except that it will only return one line\nof the given named property list.  The line it chooses depends on the\ntime.  Any MPI code in the target line is evaluated and the result is\nreturned.  The period is the length of time, in seconds, that it takes for\n{timesub} to cycle through the entire list.  The offset is the number of\nseconds to offset into the time period, if you actually need to synchronize\nthe {timesub} with something.  The offset usually is just left at zero.\nIf the object argument is not passed, it looks for the list on the trigger.\nWhat this all means, is that if you have, for example, a period of 3600\n(one hour), an offset of zero, and a property list that has six items in\nit, then {timesub} will return the first line of the property list during\nthe first ten minutes of the hour, the second line during the next ten\nminutes, and so on, until it returns the last line during the last ten\nminutes of the hour.  Then it returns the first line for the beginning\nof the next hour.  Here's an example:\n    {timesub:86400,0,_sunmoon}\nThis example will show different property list lines, depending on the\ntime of day.  The period is 86400 seconds, which is one day.  If the\nproperty list has 24 items in it, then a different line will be returned\nfor each hour of the day.\n\n\n{propdir:propname}\n{propdir:propname,object}\n    Returns true if the given property is a propdir, containing sub-props.\nOtherwise, this returns false.  If no object parameter is passed to it, it\nlooks for the property on the trigger object.  Otherwise, it looks on the\nobject specified.  If the property is not found, this returns false.\n\n\n{listprops:propdir}\n{listprops:propdir,object}\n{listprops:propdir,object,pattern}\n    This function will return a list that contains the full names of all the\nsub-properties contained by the given propdir.  If not given, object defaults\nto the trigger object.  If a pattern is given, the sub-properties in the\npropdir are each compared against the smatch wildcard pattern, and only those\nthat match are returned in the list.  This comparison is only done on the last\npart of the property name after the last /.\n\n\n\n\n----------------------------------------------------------------------------\n                              String Functions\n----------------------------------------------------------------------------\n\n\nString functions generally don't strip spaces in their arguments.\n\n\n{nl}  or  \\r\n    Returns a carriage return character.  This can be used to separate\nitems in a list, or can split the string at that point, starting a new line.\nExample:  the string:\n    This is\\ran example{nl}of using newlines.\nwould print out like:\n    This is\n    an example\n    of using newlines.\n\n\n{tab}\n    Returns a tab character.\n\n\n{subst:str,old,new}\n    Returns a copy of 'str' with all substring instances of 'old' replaced\nby the text specified by 'new'.  Basically just substitutes the new text\nfor the old text in str.  example: {subst:Hello World!,l,r} would return\n\"Herro Worrd!\"\n\n\n{strlen:string}\n    Returns an integer that is the number of character in string.\n\n\n{smatch:str,pattern}\n    Matches 'str' against the wildcard pattern.  If there is a match,\nthis returns true, or \"1\".  If it doesn't match, this returns a value\nof \"0\", or false.  In wildcard patterns, the following characters have\nthe following meanings:\n    *               matches any number of any character.\n    ?               matches one character, of any type.\n    [abcde]         matches one char, if it is a, b, c, d, or e.\n    [a-z]           matches one char, if it is between a and z, inclusive.\n    [^abd-z]        matches one char is it is NOT a, b, or between d and z.\n    {word1|word2}   matches one word, if it is word1, or word2.\n    {^word1|word2}  matches one word, if it is NOT word1 or word2.\n    \\               escapes any of the prev chars, making it not special.\n\n\n{strip:string}\n    Returns a copy of string with all the spaces stripped from the beginning\nand the end.\n\n\n{tolower:string}\n    Returns a copy of string, with all uppercase chars converted to lowercase.\n\n\n{toupper:string}\n    Returns a copy of string, with all lowercase chars converted to uppercase.\n\n\n{right:string}\n{right:string,fieldwidth}\n{right:string,fieldwidth,padstring}\n    Takes a string and pads it to fit the given fieldwidth, with the string\nright justified.  If no padstring is given, it assumes that it will pad the\nstring with spaces.  If no fieldwidth is given, it assumes that the field\nwidth is 78 characters.  Example:\n    {right:Hello,10,_.}\nwould return the string \"_._._Hello\"\n\n\n{left:string}\n{left:string,fieldwidth}\n{left:string,fieldwidth,padstring}\n    Takes a string and pads it to fit the given fieldwidth, with the string\nleft justified.  If no padstring is given, it assumes that it will pad the\nstring with spaces.  If no fieldwidth is given, it assumes that the field\nwidth is 78 characters.  Example:\n    {left:Hello,10,_.}\nwould return the string \"Hello_._._\"\n\n\n{center:string}\n{center:string,fieldwidth}\n{center:string,fieldwidth,padstring}\n    Takes a string and pads it to fit the given fieldwidth, with the string\ncenter justified.  If no padstring is given, it assumes that it will pad the\nstring with spaces.  If no fieldwidth is given, it assumes that the field\nwidth is 78 characters.  Example:\n    {center:Hello,10,1234567890}\nwould return the string \"123Hello12\"\n\n\n{instr:str1,str2}\n    Lists the position of the first substring within str1 that matches str2.\nIf no such substring exists, then this returns a 0.\n\n\n{midstr:str,pos}\n{midstr:str,pos1,pos2}\n    Returns the substring that starts at pos1 within str.  If no pos2 is\ngiven, then the returned string is only the character at the given pos1\nposition.  if a pos2 position is given, then it returns the substring\nbeginning at pos1 and ending at pos2, inclusive.  If pos1 or pos2 are\nnegative, then they represent the position that is that absolute number\nof characters from the end of the string.  The first character in str is\n1, and the last one can always be referenced by -1.  If a position would\nbe before the beginning of the string, it is assumed to be at the\nbeginning of the string.  If it would be beyond the end of the string, it\nis assumed to be at the last character. If the starting position is later\nin the string than the ending position, then the returned string has the\ncharacters in reverse order.  If either pos1 or pos2 are 0, then this\nreturns a null string.  (\"\")\n\n\n{lit:string}\n    Returns the literal string given as its parameter.  This means you can\nhave things that look like MPI commands within it, and it will not evaluate\nthem, but will rather just treat them as a string.\n\n\n{eval:string}\n    Sort of the exact opposite of {lit:}.  This takes a string, and\nevaluates it for MPI commands embedded within it.  This can be used on\nthe output of {list:}, for example.  The evaluated mpi commands will\nbe run unblessed.\n\n\n\n{eval!:string}\n    Sort of the exact opposite of {lit:}.  This takes a string, and\nevaluates it for MPI commands embedded within it.  This can be used on\nthe output of {list:}, for example.  Unlike the {eval} command, the\nevaluated mpi commands will be run with the same blessings as the code\nthat executed the {eval!}.\n\n\n{revoke:commands}\n    Executes the enclosed commands with all blessing permissions revoked.\nThis is good to wrap around {eval} statements that may execute user\nsupplied code, to prevent security holes.\n\n\n{null:expr...}\n    Returns a null string, no matter what the expressions within it return.\nThis can take up to nine arguments, though you could pass the output of\nseveral commands as one argument.\n\n\n{pronouns:string}\n{pronouns:string,object}\n    If passed one argument, evaluates the string and does pronoun substitution\nwith regards to the using player.  If given two args, it does the pronoun\nsubstitution with regards to the given object.\n\n\n{tell:string}\n{tell:string,player}\n    If passed only a string, tells the user that string.  If passed both\na string, and a player dbref, it will tell the given player the message.\nThis returns the message that was sent.  If the trigger isn't a room, or\nan exit on a room, and if the message doesn't already begin with the\nuser's name, then the user's name will be prepended to the message.  The\ntwo exceptions to this are that if the messages is being sent to the\nowner of the trigger, or to the user, then the user's name will not be\nprepended.\n\n\n{otell:string}\n{otell:string,room}\n{otell:string,room,player}\n    This will tell the given string to all the players in the room, except\nfor the given player.  If no room argument is given, it is assumed to be\nthe room that the triggering player is in.  If no player is given, then it\nassumes that you want to skip sending the message to the triggering player.\nIf you pass it a player of #-1, it will send the message to all the players\nin the room.  This returns the message that was sent.  If the trigger isn't\na room, or an exit on a room, and if the message doesn't already begin with\nthe user's name, then the user's name will be prepended to the message.\n\n\n{attr:attribute,string}\n{attr:attribute,attribute,string}\n{attr:attribute,...,attribute,string}\n    This will surround the given string with the neccesary ANSI escape codes\nto cause the text to display with the given attributes.  You may specify up\nto eight attributes, though this shouldn't ever be neccesary.  The supported\nattributes are:\nnull, reset, bold, dim, italic, underline, flash, reverse, overstrike,\nblack, red, green, yellow, blue, magenta, cyan, white,\nbg_black, bg_red, bg_green, bg_yellow, bg_blue, bg_magenta, bg_cyan, and bg_white.\n    Not all clients will display all these attributes, and those that do \nwon't always show them the same way.  Players who do not have their Color \nflag set will not see the ANSI codes or colors at all.  Nesting {attr}\ncommands probably just won't work.\n\n\n\n----------------------------------------------------------------------------\n                               Math Functions\n----------------------------------------------------------------------------\n\n\nAll math functions deal with integer numbers.\n\n{inc:var}\n{inc:var,val}\n    Increments the value of the given variable by one, returning the result.\nIf a value argument is given, then it will add that value to the variable,\ninstead of the value 1.\n\n\n{dec:var}\n{dec:var,val}\n    Decrements the value of the given variable by one, returning the result.\nIf a value argument is given, then it will subtract that from the variable,\ninstead of the value 1.\n\n\n{add:expr1,expr2}\n{add:expr1,expr2,expr3...}\n    Returns the sum of the values of expr1 and expr2.  If more than two args\nare given, then this will add all the args together and return the result.\n\n\n{subt:expr1,expr2}\n{subt:expr1,expr2,expr3...}\n    Returns the difference of the values expr1 and expr2.  If more than two\nargs are given, all values are subtracted from the first value in sequence.\nFor example: {subt:10,3,2,4} would be read as 10 - 3 - 2 - 4, and it would\nreturn a result of 1.\n\n\n{mult:expr1,expr2}\n{mult:expr1,expr2,expr3...}\n    Returns the product of the values expr1 and expr2.  If more than two args\nare given, then they are all multiplied together to get the result.\n\n\n{div:expr1,expr2}\n{div:expr1,expr2,expr3...}\n    Returns the value of expr1 divided by expr2.  Division by zero will\nreturn zero.  If more than two arguments are given, then the first argument\nis divided by the second, and the result is divided by the third, etc, for\nall of the arguments.  For example:  {div:180,6,3,5} would be read like\n180 / 6 / 3 / 5, and a result of 2 would be returned.\n\n\n{mod:expr1,expr2}\n    Returns the leftover remainder of expr1 divided by expr2.  If more than\ntwo arguments are given, then the first arguments is modded by the second,\nthen the result of that would be modded by the third, and so on and so forth.\nFor example: {mod:91,20,3} would be read as 91 % 20 % 3, and a result of 2\nwould be returned.\n\n\n{dice:X}\n{dice:X,Y}\n{dice:X,Y,Z}\n    Given one parameter, picks a random number between 1 and X. (1dX)\nGiven two parameters, it randomly generates Y numbers between 1 and X,\nand adds them together. (YdX) A third parameter, if given, is just added\nto this sum as a modifier. (YdX+Z)\n\n\n{min:expr1,expr2}\n    Returns the lesser of the values of expr1 and expr2.\n\n\n{max:expr1,expr2}\n    Returns the greater of the values of expr1 and expr2.\n\n\n{abs:expr}\n    Returns the absolute value of expr.\n\n\n{sign:expr}\n    Returns -1 if expr is negative.  Returns 1 if expr is positive.\nIf expr is 0, then it returns 0.\n\n\n{dist:x,y}              Returns distance from 0,0 that x,y is.\n{dist:x,y,z}            Returns distance from 0,0,0 that x,y,z is.\n{dist:x,y,x2,y2}        Returns distance between x,y and x2,y2.\n{dist:x,y,z,x2,y2,z2}   Returns distance between x,y,z and x2,y2,z2.\n    Given two arguments, this calculates the distance of a 2D point from\nthe origin.  Given three arguments, this calculates the distance of a 3D\npoint from the origin.  Given four arguments, this calculates the distance\nbetween a pair of 2D points.  Given six arguments, this calculates the\ndistance between a pair of 3D points.\n\n\n\n----------------------------------------------------------------------------\n                             Looping Functions\n----------------------------------------------------------------------------\n\n\n{for:varname,start,end,increment,command}\n    Acts as a counting loop, like BASIC's for loops.  The varname is the name\nof the variable that it will create and use to store the count value.  The\nstart value will be the initial value of the variable, and the end value will\nbe the value that the variable is working towards.  The increment is how much\nthe variable will be incremented by in each loop.  The command will be eval-\nuated for each value of the variable between the beginning and ending values.\nFor example:\n    {null:{for:i,10,1,-1,{tell:{&i}}}}\nwill echo a countdown from ten to one, inclusive, to the user.\n\n\n{while:check,expr}\n    This is a looping structure.  It evaluates the 'check' argument, and\nif it evaluates true, then it evaluates the expr argument, and repeats\nthe process.  If 'check' evaluates false, then the loop is exited.\nThis returns the result of the last evaluation of expr.\n\n\n{foreach:var,list,expr}\n{foreach:var,list,expr,sep}\n    This evaluates expr for each and every item in the given list.  On\neach evaluation, the temporary variable var will contain the value of the\nitem under scrutiny.  var will only be defined for the duration of expr,\nand will be undefined after the {foreach} construct finishes.  If sep is\ngiven, then it uses that string as the item separator in list, instead of\nthe usual carriage return character.  sep can be multiple characters\nlong.  This structure returns the result of the last evaluation of expr.\nExample:\n    {foreach:thing,{contents:here},{tell:{name:{&thing}}}}\nThis will display the name of every object in the room, then it will return\nthe name of the last object it displayed.\n\n\n{filter:var,list,expr}\n{filter:var,list,expr,sep}\n{filter:var,list,expr,sep,s2}\n    This evaluates expr for each and every item in the given list.  On\neach evaluation, the temporary variable var will contain the value of the\nitem under scrutiny.  This function returns a list containing all of the\nitems from the input list, for which expr evaluated true.  var will only\nbe defined for the duration of expr, and will be undefined after the\n{filter} construct finishes.  If sep is given, then it uses that string\nas the item separator in the input list, instead of the usual carriage\nreturn character.  If s2 is defined, then it will use that string to\nseparate the items in the list it returns, instead of the normal carriage\nreturn.  sep and s2 can be multiple characters long.\n\n\n{parse:var,list,expr}\n{parse:var,list,expr,sep}\n{parse:var,list,expr,sep,s2}\n    This evaluates expr for each and every item in the given list.  On\neach evaluation, the temporary variable var will contain the value of the\nitem under scrutiny.  This function returns a list containing the output\nof expr for each item within the list.  This lets you do direct translat-\nion of a list of dbrefs, for example, into a list of names.  var will\nonly be defined for the duration of expr, and will be undefined after the\n{filter} construct finishes.  If sep is given, then it uses that string\nas the item separator in the input list, instead of the usual carriage\nreturn character.  If s2 is defined, then it will use that string to\nseparate the items in the list it returns, instead of the normal carriage\nreturn.  sep and s2 can be multiple characters long.\n\n\n{fold:var1,var2,list,expr}\n{fold:var1,var2,list,expr,sep}\n    This takes a list and stores the first two items in var1 and var2, then\nevaluates expr.  The value returned by expr is then put in var1, and the next\nlist item is put in var2.  Expr keeps being evaluated in this way until there\nare no more list items left.  This returns the last value returned by expr.\nIf a sep argument is given, the input list is assumed to have its individual\nitems delimited by that string, otherwise it assumes a carriage return.\n\n\n\n----------------------------------------------------------------------------\n                         Database Related Functions\n----------------------------------------------------------------------------\n\n\n{ref:obj}\n    Returns the dbref of the given object in the form #xxxx.  The object\nmust be in the vicinity, or controlled by the owner of the trigger object.\n\n\n{name:obj}\n    Returns the name of the given object.  If the object is an exit, the\nname returned is the first exit name it has before the first ';'.  The object\nmust be in the vicinity, or controlled by the owner of the trigger object.\n\n\n{fullname:obj}\n    Returns the name of the given object.  In the case where the object\nis an exit, then the full name of the exit is given, including all the ;\naliases.  The object must be in the immediate vicinity, or be controlled\nby the owner of the trigger object.\n\n\n{owner:obj}\n    Returns the owner of the given object.  The object must be in the\nvicinity, or be controlled by the trigger object's owner.\n\n\n{loc:obj}\n    Returns the location of the given object.  The object must either be in\nthe vicinity, or it must be controlled by the owner of the trigger object.\n\n\n{flags:obj}\n    Returns a flaglist string from obj. ie: PM2J.  The object must either\nbe in the vicinity, or it must be controlled by the owner of the trigger\nobject.\n\n\n{created:obj}\n    Returns the time and date that obj was created.  The number returned is\nsuitable for use with {convsecs}.\n\n\n{modified:obj}\n    Returns the time and date that obj was last modified.  The number returned\nis suitable for use with {convsecs}.\n\n\n{lastused:obj}\n    Returns the time and date that obj was last used.  The number returned is\nsuitable for use with {convsecs}.\n\n\n{usecount:obj}\n    Returns the usage count that obj has incurred since it was created.\n\n\n{controls:obj}\n{controls:obj,player}\n    If one argument is given, then this returns true (\"1\") if the trigger\nobject's owner controls the given object.  If two arguments are given, then\nit returns true if the given player controls the given object.  Otherwise,\nthis returns false.  (\"0\")  Wizards control everything.\n\n\n{nearby:obj}\n{nearby:obj,obj2}\n    If one argument is given, then this returns true (\"1\") if the given\nobject is nearby to the trigger object.  If two arguments are given, then\nit returns true if the two objects are nearby one another.  Otherwise,\nthis returns false. (\"0\")  Nearby is defined as: 1) The two objects are\nin the same location, or 2) One object contains the other, or 3) the two\nobjects are in fact the same object.\n\n\n{money:obj}\n    This returns the value of an object of TYPE_THING, or returns how many\npennies a player has.\n\n\n{type:obj}\n    Returns the type of an object.  The possible values are:  Bad, Room,\nExit, Thing, Player, and Program.\n\n\n{istype:obj,typ}\n    Returns true if the given object if of the given type.  Valid types are:\nBad, Room, Exit, Thing, Player, and Program.\n\n\n{contents:obj}\n{contents:obj,type}\n    Returns a list of the contents of the given object.  If a second\nargument is passed to it, it restricts the listing to only those objects\nthat are of the given type.  Either the object must be nearby the trigger\nobject, or else the owner of the trigger object must control the object.\nOtherwise this will error out with a Permission Denied error.  The valid\nobject type values are Room, Thing, Exit, Player, Program, and Bad.\nHINT:  If you need to get a list of two types of objects from the room,\njust concatenate the lists from two calls to this function, with each\nobject type you want.  ie:\n    {mklist:{contents:here,player},{contents:here,thing}}    or\n    {contents:here,player}{nl}{contents:here,thing}\n\n\n{exits:obj}\n    Returns a list of all the exits on the given object.  The owner of\nthe trigger object has to control obj, or else this errors out with\nPermission Denied.  Programs and exits never have exits attached to them.\n\n\n{links:obj}\n    Returns the object reference of what the given object if linked to.\nSince exits can be meta-links, linked to multiple exits, if there is more\nthan one link, then this function returns a list of all the destinations,\nseparated by carriage return characters.  (\\r)\n\n\n{force:object,command}\n    Forces the given player or thing to do the given command.  The thing\nforced must be @flock'ed to the trigger object, or the trigger object's\nowner, and it must be set XFORCIBLE, or else this function will get a\nPermission Denied error.  This function returns a null string.  {Force}\ncannot force a thing-object to do something, if it is set Dark, is in a\nroom set Zombie, or is owned by a player set Zombie.\n\n\n{dbeq:obj1,obj2}\n    Returns true if obj1 and obj2 refer to the same object.  This does\nname matching, so {dbeq:*Wizard,#1} will return true if #1 is named Wizard.\n\n\n{locked:player,obj}\n    Tests the _/lok (@lock) standard lock property on obj against the given\nplayer.  Returns true if the lock is locked against the player.\n\n\n{testlock:obj,prop}\n{testlock:obj,prop,who}\n{testlock:obj,prop,who,def}\n    Tests the lock property 'prop', on 'obj' against the given player 'who'.\nIf no 'who' argument is given, then it checks the lock against the using\nplayer.  If a def argument is given, then the lock will default to that\nvalue, if there is no lock property of the given name on the given object.\nReturns true if the lock is locked against the player.\n\n\n{holds:obj1}\n{holds:obj1,obj2}\n    Returns true if the location of obj1 is obj2.  If no obj2 argument is\ngiven, then this will return true if the location of obj1 is the player.\n\n\n{contains:obj1}\n{contains:obj1,obj2}\n    Returns true if obj1 is within obj2, or within anything it contains, or\nwithin anything they contain.  If obj2 is not given, then it checks to see\nis obj1 is held by the player, or by anything they hold, etc.  Basically,\nthis just sees if obj1 is within the locational environment of obj2.\n\n\n\n----------------------------------------------------------------------------\n                        Connection Related Functions\n----------------------------------------------------------------------------\n\n\n{online}\n    Returns a list of players who are online.  This function can only be\nexecuted with blessed permissions.\n\n\n{awake:player}\n    Returns how many times player is connected.  This means that it will\nreturns 0 if the player is not connected.  If the given object is NOT a\nplayer, it will return 0.  If the given player is NOT local to the trigger,\nand is not the owner of the trigger, and this is not run with blessed perms,\nthen this will return 0.  In all other cases, it will return a positive\nnumber, being how many times the given player is connected to the server.\n\n\n{ontime:player}\n    Returns player online time in seconds.  If the given player is not\nconnected, or is not a player object at all, then this will return -1.\nThis returns the online time for the most recently connected connection,\nif there are multiple connects.\n\n\n{idle:player}\n    Returns player idle time in seconds.  If the given player is not\nconnected, or is not a player object at all, then this will return -1.\nThis returns the idle time for the most recently connected connection,\nif there are multiple connects.\n\n\n{descr}\n    Returns the descriptor number that invoked the MPI.\n\n\n\n----------------------------------------------------------------------------\n                        Variable Handling Functions\n----------------------------------------------------------------------------\n\n\n{&VAR}\n{v:VAR}\n    These are two ways of trying to do the same thing.  They return the\nvalue of the named variable VAR.  If there is no variable with the given\nname currently defined, then this gives an error stating as much.  Variables\ncan be defined either with the {with:} function or within a looping command.\n\n\nThere are three standard variables that every MPI program can read:\n\n{&how}  \n    The {&how} variable is a short string telling what ran the MPI command.\nIt can have the values \"(@desc)\", \"(@succ)\", \"(@osucc)\", etc. for when it\nis run from an @desc, an @succ, an @osucc, or whatever.  It can also have\nthe value \"(@lock)\" for when it is run from a lock test.\n\n\n{&cmd}\n    The {&cmd} variable contains the command name the user used, that\ncaused the MPI to run.  This is generally the exit name that the player\ntriggered.  For example, if the player typed 'east', and triggered the exit\nnamed 'east;e;out', which ran some MPI commands, the {&cmd} variable would\nhave a value of \"east\".\n\n\n{&arg}\n    The {&arg} variable contains a string with the value of the command\nline arguments the user entered.  This is so that you can have stuff like\nMPI in the fail of an exit, and when the user triggers the exit, and has\nsome extra text on the line they entered, other than the exitname, the\nMPI can take that extra stuff as arguments for use.  Note that you need\nto set an action HAVEN to get it to accept command line arguments.\n\n\nOther MPI functions used to work with variables are:\n\n{set:var,value}\n    This sets the value of the given named variable to the given value.\nIf no variable with that given name is currently defined, then this gives\nan error message complaining about that.\n\n\n{with:var,val,expr..}\n    This defines a new variable with the given name, and sets its value\nto the given val.  Up to 7 expr's are allowed, but the only value\nreturned to {with}'s caller, is the value returned by the evaluation of\nthe last expr.  If there is already a variable of the same name, then\nthis command will override that variable, for the duration of the {with:}\ncommand.  The new variable is only valid to use within the confines of\nthe {with:} command, and it will go away after the command completes.\nThis provides scoped variables quite effectively.  NOTE:  There can be no\nmore than 32 variables defined at any one time, total.  This includes\nvariables that are defined within macros, or properties or lists that are\nexecuted with {exec:} or {lexec:}.   Here's an example to illustrate the\nscope of variables inside of {with:} commands:\n\n    {prop:_mydesc}                           <- {&people} not defined.\n    {with:people,{contents:here,players},    <- Defining.  Not available yet.\n        {if:{count:{&people}},               <- It's usable now.\n            The players awake here are\n            {lit: }                          <- just puts in a space.\n            {commas:{&people},{lit: and },\n                who,{name:{&who}}            <- uses {&who} as temp var.\n            }                                <- {&who} no longer defined.\n        }\n    }                                        <- {&people} no longer defined.\n\n\n\n----------------------------------------------------------------------------\n                          List Handling Functions\n----------------------------------------------------------------------------\n\n\n{count:list}\n{count:list,sep}\n    This counts the number of \\r delimited items that are in the given list.\nThis is effectively a list item count.  If the sep argument if given, then\nit counts the number of sep delimited substrings in list.  ie: The default\nsep is \\r. (A carriage return.)\n\n\n{mklist:value...}       Returns a list with all given values.\n    This returns a list with all the given values as list items, separated\nby carriage returns.  ('\\r's) Example:\n    {mklist:Tom,Dick,Harry}\nreturns \"Tom\\rDick\\rHarry\".  Note:  A maximum of nine items can be passed to\nthe {mklist} function.  If you need more, you can chain {mklist}s together.\nExample:\n    {mklist:{mklist:a,b,c,d,e,f,g,h,i},j,k,l,m,n,o,p}\n\n\n{sublist:list,pos1}\n{sublist:list,pos1,pos2}\n{sublist:list,pos1,pos2,sep}\n    Takes a list, and returns a subset of the list items within it.  The\nsubset is all the list items between list item pos1, and list item pos2,\ninclusive.  If the pos2 argument is omitted, it assumes that pos2 is the\nsame as pos1.  If pos2 is less than pos1, then all the list items between\npos2 and pos1 are returned, in reversed order.  If pos1 or pos2 are negative,\nit counts that many list items back from the end of the list, so -1 is the\nlast list item, and -5 would be the fifth from last list item.  The input\nlist is assumed to be delimited by carriage returns (\\r) unless the sep\nargument is given.\n\n\n{lrand:list}\n{lrand:list,separator}\n    Returns a randomly picked stringlist item from the given list.  If the\nseparator argument is given, then it will assume that the stringlist has its\nitems delimited by the given separator string, instead of by carriage returns.\n\n\n{lunique:list}\n    Returns list with all duplicate items removed.\n\n\n{lunion:list1,list2}\n    Combines the contents of list1 and list2, removing any duplicates.\n\n\n{lcommon:list1,list2}\n    Creates a list containing every item that appears in BOTH list1 and\nlist2.  Any duplicate items in the resulting list are removed.\n\n\n{lremove:list1,list2}\n    Returns the contents of list1, with any items that match an item in\nlist2 removed.  The resulting list has all duplicate items removed.\n\n\n{lmember:list,item}\n{lmember:list,item,delimiter}\n    Returns 0 if the given item is NOT in the given list, otherwise, it\nreturns the item's position in the list.  The first list item in the list\nwould return 1, and the third would return 3, for example.  If the delimiter\nargument is given, then it treats the list as if it were delimited by that\nstring, instead of by carriage returns. (\\r's)\nExample:\n    {lmember:{mklist:a,b,c,d,e,f},d}\nwould return 4.\n\n\n{lsort:list}\n{lsort:list,var1,var2,expr}\n    Returns the sorted contents of list.  If 4 arguments are given, then\nit evaluates expr with a pair of values, in var1 and var2.  If expr\nreturns true, then it will swap the positions of the two values in the\nlist.  It runs this comparison on every pair of items in the list, so it\nwill be evaluated N*(N-1)/2 times, where N is the number of items in the\nlist.  This method can also be used to randomize a list.  Example:\n    {lsort:{&list},v1,v2,{gt:{dice:100},50}}\n\n\n{commas:list}\n{commas:list,lastsep}\n{commas:list,lastsep,var,expr}\n    Takes a list and returns a plain english comma delimited string with\nthe items in it.  For example, {commas:{mklist:Tom,Dick,Harry}} will return\n\"Tom, Dick and Harry\".  If you specify the lastsep argument, you can replace\nthe \"and\" with something else, such as \"or\" to get a result like \"a, b or c\".\nNote:  You need to be careful to include spaces around the \"or\" or else you\nmight get a result like \"a, borc\".  Example:\n    {commas:{mklist:a,b,c}, or }\nIf the var and expr arguments are passed, then for every item in the list,\nit will set the value of the given variable name (which it will declare)\nto the item, then evaluate expr, and use the result in the string it outputs.\nExample:\n    {commas:{contents:here},\\, or ,v,{name:{&v}}}\nwill return the name of every object in the room in a comma separated list,\nusing \", or \" as the final conjunction.  ie:  \"Tom, Can of SPAM, Dick, or\nHarry.\"\n\n\n\n----------------------------------------------------------------------------\n                          Miscellaneous Functions\n----------------------------------------------------------------------------\n\n\n{isnum:number}\n    Returns true if the string passed to it is a valid number.\n\n\n{isdbref:dbref}\n    Returns true if the string passed to it is a valid dbref.\n\n\n{sysparm:<system parameter>}\n    Returns the value of the given system parameter for authorized players.\n\n\n{version}\n    Returns the version string for the server.\n\n\n{muckname}\n    Returns the muck name string.  For example, it might return: \"FurryMUCK\"\n\n\n{muf:prog,arg}\n    Runs the given MUF prog with the string arg on the stack.  This returns\nthe top stack value when the prog exits.  If the MPI code was run from a\npropqueue like _listen, or _connect, then {muf} cannot run a MUF program\nwith a mucker level of less than 3 \n\n\n{debug:expr}\n    This will show MPI debugging information for all the commands within the\ngiven expression.  This is useful for seeing why something isn't working.\nThis returns the result of the evaluation of expr.\n\n\n\n{debugif:cond,expr}\n    This will evaluate the conditional cond, and, if the result is true,\n(not an empty string, and not 0), then this will show MPI debugging info\nfor all the commands within the given expression.  If cond evaluated as\nfalse, then expr is evaluated without the debugging info being displayed.\nThis is useful for Debugging code selectively.  This returns the result\nof the evaluation of expr.\n\nExample:\n    {parse:v,{contents:here},{debugif:{dbeq:{&v},me},{dostuff:{&v}}}}\nto only debug the running of the command {dostuff} when the argument will\nbe the player who is running the MPI.\n\n\n\n\n----------------------------------------------------------------------------\n                            Macros and Functions\n----------------------------------------------------------------------------\n\n\nMacros:\n    If the MPI interpreter comes across a function name that it does not\nrecognize, it will look in the _msgmacs/ propdirs down the environment from\nthe trigger object, for a property with the name of the function.  If it does\nfind it there, then it takes the value of that property, and substitutes it\nin for the function as a macro.  The arguments to the function replace the\n{:1} through {:9} markers in the macro definition.  For example, if there were\na property set on #0, defined as:\n    _msgmacs/div_rand:{add:{div:{:2},10},{dice:{:1}}}\nAnd you had some MPI code that looked like:\n    {div_rand:22,160}\nThen the macro would expand out to:\n    {add:{div:160,10},{dice:22}}\nAfter the macro argment substitution is complete, it is then evaluated.\n\n\n{func:name,vars...,def}\n    This effectively defines a function in MPI, with the given name, that\ntakes the given named variables.  The function is not immediately evaluated,\nso it needs to be invoked later, to do anything.  Here's an example:\n  \n    {func:sqr,val,{mult:{&val},{&val}}}\n  \nThis defines the function 'sqr', that takes a single argument.  That\nargument is stored in the 'val' variable.  The function will multiply\nthe value of the number passed to it, by itself, returning the result.\nIt's invoked like:\n    {sqr:10}\n  \nEffectively, the above {func} declaration is the same as the following\nmacro, and in fact, it's internally handled the same way:\n  \n    _msgmacs/sqr:{with:val,{:1},{mult:{&val},{&val}}}\n  \nYou can define a function that takes more than one argument, but the maximum\nnumber of args you can pass to the function is seven.  Example of multiple\narguments:\n  \n    {func:names,list,numsp,flagsp,\n        {parse:v,{&list},\n            {name:{&v}}\n            {if:{or:{&numsp},{&flagsp}},\n                {lit:(}\n                {if:{&numsp},{ref:{&v}}}\n                {if:{&flagsp},{flags:{&v}}}\n                {lit:)}\n            }\n        }\n    }\n    {names:{contents:here},1,1}\n\n\n\n----------------------------------------------------------------------------\n                          Details and Definitions\n----------------------------------------------------------------------------\n\n\n\n\nMucker Levels:\n  \n  There are now four levels of MUCKERs in fb4.0.  Level zero is a\nnon-mucker. They cannot use the editor, and MUF programs owned by them\ncannot be run.\n  \n  Level one MUCKER's are apprentices.  Their powers are restricted as they\ncannot get information about any object that is not in the same room they\nare.  ie:  OWNER, NAME, LOCATION, etc all fail if the object isn't in the\nsame room as the player.  Level one MUCKER programs always run as if they\nare set SETUID.  NOTIFY, NOTIFY_EXCEPT, and NOTIFY_EXCLUDE will refuse to\nsend messages to rooms the user is not in.  Level one programs cannot use\nADDPENNIES.  Level one programs don't list DARK objects or rooms in the\ncontents of a room, unless they are controlled by the program owner.\nAdditionally, level one programs have an absolute instruction limit that\nis the same size as the PREEMPT instruction limit.  This is usually\naround 20,000 instructions.\n  \n  Level two MUCKERs are also called Journeymen.  Their permissions are\nequivalent to the permissions for a normal MUCKER under older versions\nof the server.  Level two programs can run as many as four times the\nnumber of instructions that a preempt program could.  This is usually\naround 80,000 instructions.\n  \n  Level three MUCKERs are referred to as Masters.  They can use the con-\nnection info primitives (ie: DESCRBREF, ONLINE, etc.), read the EXITS list\nof any room, use NEXTPROP on objects, can use NEWROOM, NEWOBJECT, NEWEXIT,\nand COPYOBJ without limitations, can use QUEUE and KILL, and can override\nthe permissions restrictions of MOVETO.  You only give a player MUCKER\nlevel 3 if they are very trusted.  There is no absolute instruction count\nlimit for level three or above, except for programs running in PREEMPT mode.\n  \n  A player who is wizbitted is effectively Mucker Level 4.  MUCKER level\nfour is required for the RECYCLE primitive, the DESCRHOST primitive, the\nFORCE primitive, and the SETOWN primitive.  ML4 also allows overriding\nof permissions of the SET* primitives, and property permissions.  Props\nnot listed by NEXTPROP with ML3 are listed with ML4.  Programs running\nML4 do not even have instruction limits on PREEMPT mode programs.\n  \n  The MUCKER level permissions that a program runs at is the lesser of\nits own MUCKER level and the MUCKER level of its owner.  If it is\nowned by a player who is MUCKER level 2, and it is MUCKER level 3,\nthen it runs at Mucker level 2.  The one exception to this is programs\nowned by a Wizard player.  They run at Mucker level 2 if the program\nitself is not wizbit, and at Mucker level 4 if the program IS set wizbit.\n  \n  Mucker level is referred to in flags lists by M# where the # is the\nMucker level.  Level zero objects don't show a flag for it.  Example:\n    Revar(#37PM3)\n  In verbose flags lists, Mucker levels greater than zero are shown\nby MUCKER# where # is the mucker level.\n  \n  To set a level on a player or program, use the level number as the\nflag name.  MUCKER is the same as 2, and !MUCKER is the same as 0.\nExample:\n    @set Revar=2\n  A player may set the MUCKER level on a program they own to any level\nlower than or equal to their own level, and a wizard may set a program\nor player to any MUCKER level.  When a program is created, it is\nautomatically set to the same MUCKER level as the creating player.\nWhen a program is loaded from an old db, if it is Mucker Level 0,\nit is upgraded to Mucker Level 2.\n\n\nMultitasking:\n\n  There are 3 modes that a program can be in when running:  foreground,\nbackground, and preempt.  A program running in the foreground lets other\nusers and programs have timeslices (ie multitasking), but blocks input\nfrom the program user.  Background mode allows the user to also go on and\ndo other things and issue other commands, but will not allow the program\nto do READs.  Preempt mode means that the program runs to completion\nwithout multitasking, taking full control of the interpreter and not\nletting other users or progs have timeslices, but imposes an instruction\ncount limit unless the program is a wizard program.\n\n  Programs run by @locks, @descs, @succs, @fails, and @drops default to the\npreempt mode when they run.  Programs run by actions linked to them\ndefault to running in foreground mode.  QUEUEd program events, such as\nthose set up by _listen, _connect, _disconnect, etc, and those QUEUEd by\nother programs default to running in background mode. (NOTE: these\nprograms cannot be changed out of background mode)\n\n\nLibraries:\n\nHow to use a library:\n    1) Use \"@register lib\" to list what libraries exist.\n    2) Use \"@view $lib/<libraryname>\" to list the docs on that library.\n    3) When you've found the library and the function you want, then all\n        you have to do in your program is, at the beginning of it,\n        $include $lib/<libraryname>\n        then just use the function name to invoke it later in your program\n        and it will run as if it were a function in your program.\n\nHow to make a library:\n    1) Create a program with several useful generic subroutines.\n    2) DOCUMENT those subroutines in a commented out header in the prog.\n    3) @set <program>=_docs:<command to list those DOCS you made>\n    4) Set the version number of the code in the library with $version 1.000\n        This lets you keep track of the code revision installed, separately\n        from the version of the library calling API.\n    5) Set the library API version number with $lib-version 1.000\n        This is the version of the calling interface for this library.\n        Remember to up this version when you change this library's calls.\n        Remember that 1.19 is less than 1.2, so use numbers like 1.002.\n    6) For each function you want to be externally callable, do the following:\n        a) Declare it PUBLIC\n        b) Create the caller macro with either:\n            $libdef FUNCNAME     or\n            $pubdef EXPORTEDNAME \"$lib/THISLIB\" match \"FUNCNAME\" call\n    7) Make sure the program is set LINK_OK and VIEWABLE.\n    8) Globally register the program with the @register command with a\n        prefix of \"lib/\".  ie: @reg lib-strings.muf=lib/strings\n    9) You're done!\n\nCurrently standard libraries:\n    $lib/strings      Functions for manipulating strings.\n    $lib/props        Routines for searching for properties, or setting them.\n    $lib/lmgr         Standard list manager routines.\n    $lib/stackrng     Routines to handle variable sized ranges on the stack.\n    $lib/edit         String range editing and manipulation routines.\n    $lib/editor       Standard user text editor.\n    $lib/mesg         Standard message manager routines.\n    $lib/mesgbox      Routines for handling lists of messages.\n    $lib/match        Object or string matching routines.\n    $lib/reflist      Dbref-list management routines.\n    $lib/index        Hashed linked list manager with partial key matching.\n    $lib/gui          Routines to make MCP's GUI package easier to use.\n    $lib/optionsgui   Given datums, auto-generates a GUI to edit them.\n\n\nFlags that have importance to MUF:\n\n  If a program is set DARK (DEBUG), then when it is run, it will print out\na stack trace for each instruction executed, to the player running the\nprogram.  This is useful for debugging programs.\n\nIf a program is set ZOMBIE, then when the owner runs it, they will enter an\ninteractive debugger, useful for following a program as it runs and\nchanging it to see what different situations do.\n\nOn dbload, if a program is set ABODE (AUTOSTART), *AND* it is owned by\na wizard, then it will be placed in the timequeue with a delay of 0 and\na string parm of \"Startup\".  Autostart programs run with the location\nNOTHING (#-1) rather than the location of the owner of the program.\n\nIf a program has the HAVEN flag set on it (HARDUID) then it runs with\nthe uid and permissions of the owner of the trigger of the program.\nIf the program is a timequeue event with trigger of #-1, then it\nwill run with the permissions and uid of the program owner as in SETUID.\n\nIf a program is set both SETUID and HARDUID, and it is owned by a wizard,\nthen it inherits the uid and mucker level of the program that called it.\nIf it was not called by a program, then it runs SETUID.  This is useful\nfor writing libraries.\n\nPrograms set BUILDER (BOUND) run in preempt mode, regardless of the mode\nof the program.  ie: a foreground program, while running in a program set\nBOUND, will run pre-empt, with the multitasking effectively shut off.\n\nA program that is set WIZARD ignores almost all permissions checking.\n\nThe Mucker Level of the program also has a great deal of influence on what\na program can and cannot do.  See MUCKER LEVELS for more information.\n\n\nCompilation:\n\n  Programs are compiled when they are run or called, or when explicitly\ncompiled in the editor.  They are compiled with the uid of the owner of\nthe program.  After being unused for a number of minutes, programs will\nbe removed from memory until needed again.\n\n\nListeners:\n\n  When a message is notify_except'ed or notify_exclude'ed to a room, and\nLISTENERS and LISTENERS_ENV are defined, then it will run ALL the programs\nreferred to in all the _listen properties down the environment tree,  And\nin all of the objects in the room with LISTENERS_OBJ defined.  Also, the\nmuf NOTIFY primitive was changed to run the _listen program on an object\nor player if a message is sent to them that way.\n\n\nConnect and Disconnect Propqueues:\n\n  A room or player may have a \"_connect\" property set that contains the\ndbref of a program to run when a player connects.  The program must be\neither link_ok or must be owned by the player connecting.  When the\nprogram is run, the string on the stack will be \"Connect\", the \"loc @\"\nwill be the location of the connecting player, the \"me @\" will be the\nconnecting player, and the \"trigger @\" (and \"trig\") will be the object\nthat had the _connect property on it.  All programs referred to by\n_connect properties on the player, and on rooms down the environment tree\nfrom the player, will be run.  When a player disconnects, programs referred\nto by _disconnect properties will be run in a similar manner.\n(connect and disconnect _actions_ are also triggered.)\n\n\nArrive and Depart Propqueues:\n\n  Programs referred to by props in _depart/_arrive propdirs will all be\nrun when a player leaves or enters a room, respectively. An example would\nbe _arrive/announce:1234  That would queue up program #1234 when a player\nenters a room.  The name (\"announce\") is not important, and can be anything\nyou want, but they are run in alphabetic order.\n\n\n\n\n\n----------------------------------------------------------------------------\n                       Macros and Compiler Directives\n----------------------------------------------------------------------------\n\n\n\n\n__FUZZBALL__\n\n  A pre$defined macro that contains the value 1 on a FuzzBall Muck server.\nThis is useful for server-type specific $ifdefs, when code needs to be\ndifferent on, say, FuzzBall Mucks and ProtoMucks.  For example:\n    $ifdef __fuzzball__\n        me @ \"This is a FuzzBall Muck server.!\" notify\n    $endif\n\n\n__MUCKNAME\n\n  A pre$defined macro that contains the name of the server's muckname @tune\nparameter value.  This is useful for muck specific $ifdefs.  For example:\n    $ifdef __muckname=FurryMUCK\n        me @ \"Helloooooo Furry!\" notify\n    $endif\n\n\n__VERSION\n\n  A pre$defined macro that contains the current server version.  Contains\nthe same string that the VERSION primitive returns.  This is mainly useful\nin $ifdef/$ifndef comparisons.  The value of this will always start with\n'Muck2.2fb' for historical reasons, followed by the current fbmuck server\nversion.  Ie: Muck2.2fb6.00 for the 6.00 fbmuck server.\n\n\n__PROG__\n\n  A compile-time token replaced with the dbref of the current program.\nCurrently recognized within $doccmd and $pubdef directives.\n\n\nMAX_VARIABLE_COUNT\n\n  A pre$defined macro that expands to the maximum number of variables of\neach type allowed in a program.  For function-scoped variables, this is the\nmax number of scoped vars that each function may have.\n\n\n$AUTHOR <rest_of_line>\n\n  Sets the _author string property on the program to <rest_of_line>.\nThe preferred format is an email address with name comment. ie:\n    $author Revar Desmera <revar@belfry.com>\nTo denote multiple authors, separate them with commas.  ie:\n    $author Revar Desmera <revar@belfry.com>, Foxen <foxen@belfry.com>\nIf you don't want to include your email address, just omit it.  ie:\n    $author Revar, Foxen\n\n\n$VERSION <float>\n\n  Sets the _version string property on the program to <float>.  Version\nnumbers should be like 1.009 and 1.010, so that they can be compared using\nfloating point comparisons.  (Remember, 1.9 is greater than 1.10.)\n\n\n$LIB-VERSION <float>\n\n  Sets the _lib-version string property on the program to <float>.  Version\nnumbers should be like 1.009 and 1.010, so that they can be compared using\nfloating point comparisons.  (Remember, 1.9 is greater than 1.10.)\n\n\n$NOTE <rest_of_line>\n\n  Sets the _note string property on the program to <rest_of_line>.\n\n\n$DOCCMD <rest_of_line>\n\n  Sets the _docs string property on the program to <rest_of_line>.\nThis property holds the command used to view documentation for the program.\n\n\n$DEFINE <defname> <definition> $enddef\n\n  Basically the same as C's #define <defname> <definition>\n\n\n$DEF <defname> <definition>\n\n  This is the same as $define, except that the definition stops at the end\nof the program line, without using an ending $enddef.\n\n\n$UNDEF <defname>\n\n  About the same as C's #undef <defname>\n\n\n$INCLUDE $<libname>\n$INCLUDE <dbref>\n\n  Sets a bunch of $defines from the properties in the /_defs/ propdir of the\ngiven program.  For example, if object #345 had the following properties:\n    /_defs/desc: \"_/de\" getpropstr\n    /_defs/setpropstr: dup if 0 addprop else pop remove_prop then\n    /_defs/setpropval: dup if \"\" swap addprop else pop remove_prop then\n    /_defs/setprop: dup int? if setpropval else setpropstr then\nthen if a program contained '$include #345' in it, then all subsequent\nreferences to 'desc', 'setpropstr', 'setpropval', and 'setprop' would\nbe expanded to the string values of their respective programs.  For example,\n'desc' would be replaced throughout the program with '\"_/de\" getpropstr'\nNOTE:  You cannot have a slash in a definition name.  ie: The property\n    _defs/a/b:foo\nwill NOT make a definition named a/b.\n\n\n$PUBDEF :\n$PUBDEF <defname>\n$PUBDEF <defname> <rest_of_line>\n$PUBDEF \\<defname> <rest_of_line>\n\n  By using this directive, the _defs/ directory on a MUF program can\nbe set at compile time.\n\n$pubdef :                          Clears the _defs/ propdir on the program.\n$pubdef <defname>                  Clears the _defs/<defname> prop on the prog.\n$pubdef <defname> <rest_of_line>   Sets _defs/<defname> prop to <rest_of_line>.\n$pubdef \\<defname> <rest_of_line>  Sets _defs/<defname> if not already set.\n\nFor example:\n    $pubdef tell me @ swap notify\nwould put a property named '_defs/tell' on the program object, with the\nvalue 'me @ swap notify'.  Def names cannot have ':' nor '/' in them.\n\n\n$LIBDEF <function>\n$LIBDEF \\<function>\n\n  Sets up an _defs/ prop on the program to call the specified function.\nFor example:\n    $libdef myfunc\nwould put a prop named '_defs/myfunc' on the program object, with the\nvalue '<this_programs_dbref> \"myfunc\" call'\n\n\n$CLEARDEFS [ALL]\n\n  Ignores program _defs/ when compiling the program. Wizards programs can\nuse '$cleardefs ALL' to also ignore #0 _defs/ when compiling. This does\nnot affect macros, and internal _defs/ are always loaded no matter what.\n\n\n$IFDEF <condition> <compile if true> $endif\n$IFDEF <condition> <compile if true> $else <compile if false> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the existence of or value of certain $defined names.\nThe four accepted forms of the <condition> argument are:\n    DEFNAME        Is true if DEFNAME was $defined earlier, whatever the value.\n    DEFNAME=VALUE  Is true if DEFNAME exists and its value equals VALUE.\n    DEFNAME>VALUE  Is true if DEFNAME exists and is greater than VALUE.\n    DEFNAME<VALUE  Is true if DEFNAME exists and is less than VALUE.\n\n  The semantics of greater than and less than is the same as that used by\nthe strcmp string comparison command.  There must be no spaces between the\nDEFNAME, comparator, and VALUE.  They must be run together as one word.\n\n  There is no >= or <= comparator available, so to make such a comparison\nyou need to use $ifndef with the opposite comparator.  Ie, to check if\nFOO is greater than or equal to 3, use:\n    $ifndef FOO<3\n        BAR\n    $endif\n\nCompiler directives are nestable also.  For examples:\n    $ifdef __version>Muck2.2fb3.5\n        $def envprop .envprop\n    $endif\n    $define ploc\n        $ifdef proplocs\n            .proploc\n        $else\n            owner\n        $endif\n    $enddef\n\n\n$IFNDEF <condition> <compile if false> $endif\n$IFNDEF <condition> <compile if false> $else <compile if true> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the non-existence of or value of $defined names.  $ifndef is\nshort for 'If NOT Defined' or 'If Not', so it compiles the first code\nbranch (before the optional $else), only if the <condition> is false.\nThe four accepted forms of the <condition> argument are:\n    DEFNAME        Is true if DEFNAME was $defined earlier, whatever the value.\n    DEFNAME=VALUE  Is true if DEFNAME exists and its value equals VALUE.\n    DEFNAME>VALUE  Is true if DEFNAME exists and is greater than VALUE.\n    DEFNAME<VALUE  Is true if DEFNAME exists and is less than VALUE.\n\nThe semantics of greater than and less than is the same as that used by the\nstrcmp string comparison command.  There must be no spaces between the\nDEFNAME, comparator, and VALUE.  They must be run together as one word.\n\n\n$IFVER this <float> <truebranch> $endif\n$IFVER this <float> <truebranch> $else <falsebranch> $endif\n$IFVER $<libname> <float> <truebranch> $endif\n$IFVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFVER <dbref> <float> <truebranch> $endif\n$IFVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $version of the given program, which is stored in its\n'_version' property.  In the form '$ifver this' then this checks this\ncompiling program's $version.  Otherwise, this checks the $version of\nthe program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $version\nis greater than or equal to the given <float>, using a floating point\nnumber comparison.  Otherwise, the <falsebranch>, if given, will be\ncompiled.\n\n\n$IFNVER this <float> <truebranch> $endif\n$IFNVER this <float> <truebranch> $else <falsebranch> $endif\n$IFNVER $<libname> <float> <truebranch> $endif\n$IFNVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFNVER <dbref> <float> <truebranch> $endif\n$IFNVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $version of the given program, which is stored in its\n'_version' property.  In the form '$ifnver this' then this checks this\ncompiling program's $version.  Otherwise, this checks the $version of\nthe program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $version\nis less than the given <float>, using a floating point number comparison.\nOtherwise, the <falsebranch>, if given, will be compiled.\n\n\n$IFLIBVER this <float> <truebranch> $endif\n$IFLIBVER this <float> <truebranch> $else <falsebranch> $endif\n$IFLIBVER $<libname> <float> <truebranch> $endif\n$IFLIBVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFLIBVER <dbref> <float> <truebranch> $endif\n$IFLIBVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $lib-version of the given program, which is stored in its\n'_lib-version' property.  In the form '$iflibver this' then this checks this\ncompiling program's $lib-version.  Otherwise, this checks the $lib-version\nof the program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $lib-version\nis greater than or equal to the given <float>, using a floating point\nnumber comparison.  Otherwise, the <falsebranch>, if given, will be\ncompiled.\n\n\n$IFNLIBVER this <float> <truebranch> $endif\n$IFNLIBVER this <float> <truebranch> $else <falsebranch> $endif\n$IFNLIBVER $<libname> <float> <truebranch> $endif\n$IFNLIBVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFNLIBVER <dbref> <float> <truebranch> $endif\n$IFNLIBVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $lib-version of the given program, which is stored in its\n'_lib-version' property.  In the form '$ifnlibver this' then this checks this\ncompiling program's $lib-version.  Otherwise, this checks the $lib-version\nof the program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $lib-version\nis less than the given <float>, using a floating point number comparison.\nOtherwise, the <falsebranch>, if given, will be compiled.\n\n\n$IFLIB $<libname> <truebranch> $endif\n$IFLIB $<libname> <truebranch> $else <falsebranch> $endif\n$IFLIB <dbref> <truebranch> $endif\n$IFLIB <dbref> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the existence of a given program.\n  The <truebranch> will be compiled if the given object exists and is a\nprogram.  Otherwise, the <falsebranch>, if given, will be compiled.\n\n\n$IFNLIB $<libname> <truebranch> $endif\n$IFNLIB $<libname> <truebranch> $else <falsebranch> $endif\n$IFNLIB <dbref> <truebranch> $endif\n$IFNLIB <dbref> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the existence of a given program.\n  The <truebranch> will be compiled if the given object does not exist, or\nif it is not a program.  Otherwise, the <falsebranch>, if given, will be\ncompiled.\n\n\n$IFCANCALL $<libname> <publicname> <truebranch> $endif\n$IFCANCALL $<libname> <publicname> <truebranch> $else <falsebranch> $endif\n$IFCANCALL <dbref> <publicname> <truebranch> $endif\n$IFCANCALL <dbref> <publicname> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the ability for the compiling program to call a given public\nfunction on a given program.\n  The <truebranch> will be compiled if the given program exists, is a\nprogram, and has a given callable function (declared with PUBLIC or WIZCALL)\nthat this compiling program has permission to call.  Otherwise, the\n<falsebranch>, if given, will be compiled.\n\n\n$IFNCANCALL $<libname> <publicname> <truebranch> $endif\n$IFNCANCALL $<libname> <publicname> <truebranch> $else <falsebranch> $endif\n$IFNCANCALL <dbref> <publicname> <truebranch> $endif\n$IFNCANCALL <dbref> <publicname> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the ability for the compiling program to call a given public\nfunction on a given program.\n  The <truebranch> will be compiled if the given program does not exist,\nis not a program, or does not have a given callable function (declared with\nPUBLIC or WIZCALL) that this compiling program has permission to call.\nOtherwise, the <falsebranch>, if given, will be compiled.\n\n\n$ECHO <string>\n  Echos the given string to the screen of the person compiling the program.\nRuns at compile-time.\n\n\n$ABORT <message>\n  Aborts compiling and prints out the error message.\n\n\n$PRAGMA <pragmatype> [<args>]\n  Sets a compiler option in a backwards compatible manner.  If the pragmatype\nisn't recognized, the compiler will just ignore this line and continue its\ncompile attempt.  The $pragma directive must be all on one line, and the\nentire rest of the line after the pragmatype is assumed to be arguments for\nthat pragmatype.  The currently supported pragmatypes are:\n\nCOMMENT_STRICT\n  This specifies that comments are in the old style that is terminated by the\nfirst end-paren ')' in the comment.\n\nCOMMENT_RECURSE\n  This specifies that comments are in the new recursive style where any parens\n'(' in a comment must be matched by end-parens ')'.\n\nCOMMENT_LOOSE\n  This is the default comment style, where the compiler tries to compile\ncomments as if in comment_recurse mode, but will fall back to comment_strict\nmode if a comment fails to have balancing parens.\n\n\n$ENTRYPOINT <function name>\n\n  Sets the function used to start the program. Defaults to the last one.\n\n\n$LANGUAGE \"<language name>\"\n\n  Sets the language used to compile the program. \"MUF\" is currently supported.\n\n\nEscaping Literal Tokens:\n\n  You can escape a token in MUF so that it will be interpreted literally.\nie:  \\.pmatch will try to compile '.pmatch' without expanding it as a\nmacro.  This lets you make special things with $defines such as:\n    $define addprop over over or if \\addprop else pop pop remove_prop $enddef\nso that all the 'addprop's in the program will be expanded to the\ndefinition, but the 'addprop' in the definition will not try to expand\nrecursively.  It will call the actual addprop.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Stack Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nPOP ( x -- )\n\n  Pops the top of the stack into oblivion.\n\n\nPOPN ( ?n..?1 i -- )\n\n  Pops the top i stack items.\n\n\nDUP ( x -- x x )\n\n  Duplicates the item at the top of the stack.\n\n\nDUPN ( ?n..?1 i -- ?n..?1 ?n..?1 )\n\n  Duplicates the top i stack items.\n\n\n?DUP ( x -- x x | x )\n\n  Duplicates the item at the top of the stack if it does not resolve to false.\n\n\nNIP ( x y -- y )\n\n  Pops the second item off the stack.\n\n\nTUCK ( x y -- y x y )\n\n  Duplicates y and places it under x.\n\n\nLDUP ( {?} -- {?} {?} )\n\n  Duplicates a stackrange on top of the stack.\n\n\nSHALLOW_COPY ( x -- x x )\n\n  Duplicates the item at the top of the stack.  If it is an array, it makes\na shallow copy of it that is decoupled from the original array.\n\n\nDEEP_COPY ( x -- x x )\n\n  Duplicates the item at the top of the stack.  If it is an array, it makes\na deep copy of it that is decoupled from the original array.\n\n\nSWAP ( x y -- y x )\n\n  Takes objects x and y on the stack and reverses their order.\n\n\nOVER ( x y -- x y x )\n\n  Duplicates the second-to-top thing on the stack.  This is the same as 2 pick.\n\n\nROT ( x y z -- y z x )\n\n  Rotates the top three things on the stack.  This is equivalent to 3 rotate.\n\n\n-ROT ( x y z -- z x y )\n\n  Rotates the top three things on the stack, in reverse.  Equivalent to -3 rotate.\n\n\nROTATE ( ni ... n1 i -- n(i-1) ... n1 ni )\n\n  Rotates the top i things on the stack.  Using a negative rotational\nvalue rotates backwards.\nExamples:\n    \"a\"  \"b\"  \"c\"  \"d\"  4  rotate\nwould leave\n    \"b\"  \"c\"  \"d\"  \"a\"\non the stack.\n    \"a\"  \"b\"  \"c\"  \"d\"  -4  rotate\nwould leave\n    \"d\"  \"a\"  \"b\"  \"c\"\non the stack.\n\n\nPICK ( ni ... n1 i -- ni ... n1 ni )\n\n  Takes the i'th thing from the top of the stack and pushes it on the top.\n1 pick is equivalent to dup, and 2 pick is equivalent to over.\n\n\nPUT ( nx...n1 ni i -- nx...ni...n1 )\n\n  Replaces the i'th item from the top of the stack with the value of ni.\nThe command sequence '1 put' is equivalent to 'swap pop'.\nExample:\n    \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  3  put\nwould return on the stack:\n    \"a\"  \"e\"  \"c\"  \"d\"\n\n\nREVERSE ( ?n..?1 i -- ?1..?n )\n\n  Reverses the order of the top i items on the stack.\nExample:\n    \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  4  reverse\nwould return on the stack:\n    \"a\"  \"e\"  \"d\"  \"c\"  \"b\"\n\n\nLREVERSE ( ?n..?1 i -- ?1..?n i )\n\n  Reverses the order of the top i stack items, leaving i.\nExample:\n    \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  4  lreverse\nwould return on the stack:\n    \"a\"  \"e\"  \"d\"  \"c\"  \"b\"  4\n\n\nDEPTH ( -- i )\n\n  Returns the number of unlocked items currently on the stack.\n\n\nFULLDEPTH ( -- i )\n  Returns the number of items currently on the stack.\n\n\n{  ( -- marker)\n\n  Pushes a marker onto the stack, to be used with } or }list or }dict.\n\n\n}  ( marker ?n ... ?1 -- ?n ... ?1 i )\n\n  Finds the topmost marker in the stack, and counts how many stack items\nare between it and the top of the stack.  The marker is removed from the\nstack, and the count is pushed onto the stack.\n\n\n\n\n\n----------------------------------------------------------------------------\n                       Variables and Handling Thereof\n----------------------------------------------------------------------------\n\n\n\n\nME @\n\n  There is a global variable named ME that contains the dbref of the\nplayer who invoked the program.  The value of this variable is not\nguaranteed to be secure, as another program could change the value of\nME then call your program.  If you must be certain that the value of\nthe ME variable is correct, use the commands:\n    \"me\" match me !\nThe ME global variable is the same variable as '0 variable'\n\n\nLOC @\n\n  There is a global variable named LOC that contains the dbref of the\nlocation of the player who invoked the program.  The value of this\nvariable is not guaranteed to be secure, as another program could change\nthe value of LOC then call your program.  If you must be certain that\nthe value of the LOC variable is correct, use the commands:\n    \"me\" match location loc !\nThe LOC global variable is the same variable as '1 variable'\n\n\nTRIGGER @\n\n  There is a global variable named TRIGGER that contains the dbref of the\ntrigger object that invoked the process.  The value of this variable is\nnot guaranteed to be secure, as another program could change the value of\nTRIGGER then call your program.  If you must be certain that the value of\nthe TRIGGER variable is correct, use the commands:\n    trig trigger !\nThe TRIGGER global variable is the same variable as '2 variable'\nThe value of TRIGGER will be #-1 for AUTOSTART programs,\n\n\nCMD ( -- s )\n\n  Returns the command the user invoked the program with, without its\ncommand line arguments.\n\n\nCOMMAND @\n\n  There is a COMMAND variable, similar to ME, LOC, and TRIGGER, except that\nit contains a string.  The string contains the command the user typed\nthat triggered the the program, without the command line arguments.  ie:\nif there was an exit named \"abracadabra;foo bar;frozzboz\" that was linked\nto the program, and the user typed in \"foo bar baz\", then the program\nwould run with \"baz\" on the stack, and \"foo bar\" in the global COMMAND\nvariable.  The COMMAND global variable is the same variable as '3 variable'\n\n\nVAR <name>\n\n  When used inside a function, a function-scoped variable is created.\nThis variable is local to each invocation of a given function; recursive\ncalls each get their own scoped variable dataspace.  This variable type\nis analogous to C's function-scoped variables.  The use of function-scoped\nvariables is highly recomended to make functions more readable.\n\n  When used outside of a function, the compiler allows the use of <name>\nas a global variable in all functions defined after the var declaration.\nThis variable dataspace is shared between ALL muf programs called in\nthis process.  This means that if program A declares a global variable,\nthen calls program B, and program B also declares a global variable,\nthen changes its value, then the global variable declared in program A\nwill also have been changed.  For this reason, this usage of VAR is\ndeprecated and shoud NOT be used.  Use LVAR instead.  This usage is only\nkept around for backwards compatability with some old icky programs that\nused this feature to pass data between some programs.\n\n\nVAR! <name>\n\n  This must be used within a function.  It declares a function-scoped\nvariable named <name> that then has its value set to the topmost stack\nitem.  For example, the following program prints out \"Hello World!\":\n    : myfunction\n        \"Hello World!\" var! foo\n        me @ foo @ notify\n    ;\n\n\nLVAR <varname>\n\n  This declares a variable as a program-local variable.  If another program\ncalls this program, the values of the program-local variables will not be\nchanged in the calling program, even if the called program changes them.\nThis variable will be available to all functions defined later in the\nprogram, after the lvar declaration.  This variable's data is persistent\nwithin this process.  Ie: if program A calls program B, and program B sets\nthe value of this program-local variable, then returns to A, which then\ncalls B again, the value of this variable will still have the value it was\nset to in the first call.  The value is NOT persistent between different\nprocesses.  This variable type is analogous to C's global variables.\n\n\n@ ( v -- x )\n\n  Retrieves variable v's value x.\n\n\n! ( x v -- )\n\n  Sets variable v's value to x.\n\n\nVARIABLE ( i -- v )\n\n  Converts integer i to global variable reference v. Of the pre-defined\nvariables, `me' corresponds to integer 0, `loc' to 1, `trigger' to 2,\nand 'command' to 3.\nThus:\n    me @\nand\n    0 variable @\nwill do the same thing (returning the user's dbref). User-defined variables\nare numbered sequentially starting at 4 by the compiler. Note that these\nvariable numbers can be used even if variables have not been formally\ndeclared.  This command has been deprecated, and is not recommended to use.\nIts original purpose was to allow MUF to do small arrays.  Since MUF now\nhas an intrinsic array stack item type, this should no longer be used.\n\n\nLOCALVAR (i -- l)\n\n  Takes an integer and returns the respective program-local variable.\nSimilar to the 'variable' primitive.  Use of this command is deprecated\nand is not recommended.  Use the array stack item type instead.\n\n\nSECURE_SYSVARS ( -- )\n\n  Sets the value of variables \"me\", \"loc\", \"trigger\" and \"command\" to their\ncorrect values in one instruction.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Logical Operators\n----------------------------------------------------------------------------\n\n\n\n\n<  ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is less than n2, and 0 otherwise.\n\n\n>  ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is greater than n2, and 0 otherwise.\n\n\n=  ( ?1 ?2 -- i )\n\n  Compares two numbers, dbrefs, or strings and returns 1 if ?1 is equal to ?2,\nand 0 otherwise.\n\n\n!=  ( ?1 ?2 -- i )\n\n  Compares two numbers, dbrefs, or strings and returns 0 if ?1 is equal to ?2,\nand 1 otherwise.\n\n\n<= ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is less than or equal to n2,\nand 0 otherwise.\n\n\n>= ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is greater than or equal to n2,\nand 0 otherwise.\n\n\nNOT ( x -- i )\n\n  Returns true (1) if the top stack item is considered false.  Returns\nfalse (0) otherwise.  The stack item can be of any type.  For the various\ntypes, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nAND ( x1 x2 -- i )\n\n  Returns true (1) if both of the top two stack items are considered true.\nReturns false (0) otherwise.  The stack items can be of any type.  For the\nvarious types, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nOR ( x1 x2 -- i )\n\n  Returns true (1) if either of the top two stack items are considered true.\nReturns false (0) otherwise.  The stack items can be of any type.  For the\nvarious types, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nXOR ( x1 x2 -- i )\n\n  Returns true (1) if either of the top two stack items are considered true,\nbut NOT both of them.  Returns false (0) otherwise.  The stack items can be\nof any type.  For the various types, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nSTRING? ( x -- i )\n\n  Returns true if x is a string.\n\n\nINT? ( x -- i )\n\n  Returns true if x is a int.\n\n\nFLOAT? ( ? -- i )\n\n  Returns true if the item on the stack is a floating point value.\n\n\nDBREF? ( x -- i )\n\n  Returns true if x is a dbref.\n\n\nARRAY? ( ? -- i )\n\n  Tests if stack item is an array.  Returns i as 1 if so, 0 if\notherwise.\n\n\nDICTIONARY? ( ? -- i )\n\n  Tests if stack item is an array of dictionary type.  Returns i as 1\nif so, 0 if otherwise.\n\n\nADDRESS? (? -- i)\n\n  Returns true if the top stack item is a function address.\n\n\nLOCK? (? -- i)\n\n  Returns true if the top stack item is a lock.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Execution Control Structures\n----------------------------------------------------------------------------\n\n\n\n\nIF (x -- ) ... THEN\nIF (x -- ) ... ELSE ... THEN\n\n  Examines boolean value x.  If x is TRUE, the sequence of statements\nafter the 'if' up until the `then' (or until the `else' if it is\npresent) performed. If it is FALSE, then these statements are skipped,\nand if an `else' is present, the statements between the `else' and the\n`then' are performed.  Control continues as usual at the statement\nafter the `then'.  Note that checking the top of the stack actually\npops it, so if you want to re-use it, you should dup (see DUP) it\nbefore the if. For every IF in a word, there MUST be a THEN, and\nvice-versa.  ELSE is optional.\n\n\nIF (x -- ) ... ELSE ... THEN\n\n  Begins an ELSE block in an IF-ELSE-THEN code block.  If the value\ntested by the IF is false, then this code block will be executed.\n\n\nIF (x -- ) ... THEN\nIF (x -- ) ... ELSE ... THEN\n\n  Denotes the end of an IF-THEN or IF-ELSE-THEN code block.\n\n\n'FUNCNAME ( -- a )\n\n  Pushed the address of the start of the previously defined function\nFUNCNAME onto the stack.  This can be useful for use with EXECUTE and\narrays to make a list of functions you can call by index, or for making\nfunction callbacks.\n\n\nEXECUTE ( a -- ?? )\n\n  Executes the function pointed to by the address a on the stack.\nThis function does NOT need to be in the same program as the function\nthat did the EXECUTE.\n\n\nJMP (a -- )\n\n  The JMP primitive takes an address like those supplied by 'funcname and\nmoves execution to that point.  It's one early way that was used to do\ntail-recursion loops without as much overhead, and without failing due to\nsystem stack overflows.  It's mostly obsolete now, except that it's one\nof the three or four internal primitives used to implement IF-ELSE-THEN and\nBEGIN-WHILE-REPEAT loops and such.  You shouldn't use JMP explicitly in\nin modern MUF code, as it is deprecated.  NOTE: Using JMP to jump into a\ndifferent function can have problems, and is not recommended.\n\nExample of JMP as a tail-recursion optimization:\n    : countforever ( i -- )\n        1 +\n        dup intostr .tell\n        'countforever jmp\n    ;\n\nA better ways to do the same thing with looping primitives would be:\n    : countforever ( i -- )\n        begin\n            1 +\n            dup intostr .tell\n        repeat\n    ;\n\n\nCALL ( d -- ?? )\nCALL ( d s -- ?? )\n\n  Calls another program d.  Program d will inherit the values of ME, LOC,\nTRIGGER, and all other global variables.  If used in the second form,\nthis will call the named PUBLIC function s in the given program d.\nThe called program will NOT share the same localvars as the caller,\nunless the caller is calling itself.\n\n\nINTERP ( d1 d2 s -- ? )\n\n  Takes a program dbref to run d1, the trigger to use d2, and the top stack\nitem string and calls the program with the given string on the stack.\nReturns when interpretation halts, which could be the result of an exit, an\nerror, or a primitive that suspends execution such as sleep or read.\nReturn value is the top item off the stack if successful exit, or a null\nstring for anything else.\n\n\nEXIT ( -- )\n\n  Exits from the function currently being executed, returning control to\nthe calling function, at the statement immediately after the location of\nthe call (exiting the program if applicable).\n\n\nBEGIN ( -- )\n\n  Marks the beginning of BEGIN-UNTIL or BEGIN-REPEAT loops.\n\n\nFOR (i1 i2 i3 -- i)\n\n  Marks the beginning of a iterative FOR loop, and initializes it with i1\nas the start index, i2 as the end index, and i3 as the step.  If i2 is less\nthen i1, or if i3 is negative and i2 is greater then i1, the entire loop is\nskipped without executing.  If i3 is 0 the loop will run infinitely until\nsome other condition causes an exit.\n\n\nFOREACH (a -- @ ? )\n\n  Marks the beginning of an iterative FOREACH loop, stepping through every\nindex/value pair in the array.\n\n\nWHILE (i -- )\n\n  If the value on top of the stack is false, then this causes execution\nto jump to the instruction after the UNTIL or REPEAT for the current\nloop.  If the value is true, however, execution falls through to the\ninstruction after the WHILE.\n\n\nBREAK ( -- )\n\n  Breaks out of the innermost loop.  Jumps execution to the instruction\nafter the UNTIL or REPEAT for the current loop.\n\n\nCONTINUE ( -- )\n\n  Jumps execution to the beginning of the current loop.\n\n\nREPEAT ( -- )\n\n  This marks the end of the current loop.  Execution jumps to the instruction\nafter the matching BEGIN, FOREACH or FOR in a loop.\n\n\nUNTIL (i -- )\n\n  This marks the end of the current loop.  If the value on top of the\nstack is false, then execution jumps back to the instruction after\nthe matching BEGIN or FOR statement.  If the value is true, it exits\nthe loop, and continues execution at the next instruction following\nthe UNTIL.\n  Loops, TRY-CATCH-ENDCATCH's, and IF-ELSE-THEN's can all be nested in\neach other as much as you want.\n\n\nCase statements\n\n  Inserver defines to achieve case statements. Allows:\n\n<data> case\n  <test> when <effect> end\n  <test> when <effect> end\n  <test> when <effect> end\n  <test> when <effect> end\n  default <otherwise>  end\nendcase\n \nThis compiles to the following MUF code:\n\n<data> begin\n  dup <test> if pop <effect> break then\n  dup <test> if pop <effect> break then\n  dup <test> if pop <effect> break then\n  dup <test> if pop <effect> break then\n  dup pop 1  if <otherwise>  break then\n  dup pop pop\n1 until\n\n\nLoops:\n\n  The BEGIN, FOR, or FOREACH statement marks the beginning of a loop.\nEither the UNTIL or the REPEAT statement marks the end of the loop.\nREPEAT will do an unconditional jump back to the BEGIN or FOR statement.\nUNTIL checks to see if the value on the stack is false.  If it is, it\njumps back to the BEGIN or FOR statement, otherwise, it falls through\non execution to the statement after the UNTIL.\n  Within a loop, even within IF-ELSE-THEN structures within the loop\nstructure, you can place WHILE, CONTINUE, or BREAK statements.  There\nis no limit as to how many, or in what combinations these instructions\nare used.\n  A WHILE statement checks to see if the top value on the stack is false.\nIf it is, then execution breaks out of the innermost loop and resumes\nafter the matching REPEAT or UNTIL statement.\n  The CONTINUE statement causes the loop to jump back to the beginning\nof its next iteration, after the BEGIN, FOR, or FOREACH.\n  The BREAK statement forces execution to break out of the innermost loop,\nresuming after the matching REPEAT or UNTIL.\n  Note: You can nest loops complexly, but WHILE, BREAK, and CONTINUE\nstatements only refer to the innermost loop structure.\n\n\nLoop Examples 1:\n\nHow to count from 1 to 10 using a BEGIN-REPEAT loop:\n    0 begin\n        dup 10 < while\n        1 +\n        me @ over intostr notify\n    repeat\n\nHow to count from 1 to 10 using a BEGIN-UNTIL loop:\n    0 begin\n        1 +\n        me @ over intostr notify\n        dup 10 =\n    until\n\nHow to count from 1 to 10 using a FOR-REPEAT loop:\n    1 10 1 for\n        intostr me @ swap notify\n    repeat\n\n\nLoop Examples 2:\n\nExample of a FOR loop:\n    1 10 1 for\n        me @ swap intostr notify\n    repeat\n\nExample of nested FOR loops:\n    1 5 1 for\n        \"\" swap 1 -1 for\n            intostr strcat\n        repeat\n        me @ swap notify\n    repeat\n\nExample of a complex (if pointless) FOR loop:\n    10 -10 -2 for\n        me @ over intostr notify\n        dup -5 > while\n        dup 0 = if pop continue then\n        dup -3 = if pop break then\n        not\n    until\n\nExample of a FOREACH loop:\n    {\n        \"index1\" \"value1\"\n        \"index2\" \"value2\"\n        \"index3\" \"value3\"\n    }dict\n    foreach\n        \" = \" swap strcat strcat me @ swap notify\n    repeat\n\n\nLoop Examples 3:\n\nExample of a complex loop structure:\n    101 begin                       (BEGIN the outer loop)\n        dup while 1 -                 (This WHILE, ...)\n        dup not if break then         (this BREAK, and..)\n        dup 2 % not if continue then  (this CONTINUE refer to the outer loop)\n        dup 10 % not if\n        15 begin                      (BEGIN inner loop)\n            dup while 1 -               (This WHILE, and.. )\n            dup 5 % not if break then   (... this BREAK, refer to inner loop)\n        repeat                        (This REPEAT statement ends inner loop.)\n        then\n        dup 7 % not if continue then  (This CONTINUE, and...)\n        dup 3 % not if\n            dup 9 % while             (...this WHILE refer to the outer loop)\n        then\n        dup intostr\n        me @ swap notify\n    dup 1 = until pop               (This UNTIL ends the outer loop)\n\n\nPUBLIC <functionname>\n\n  Declares a previously defined function to be public for execution by other\nprograms.  This is a compile-time directive, not a run-time primitive.  To\ncall a public function, put the dbref of the program on the stack, then put\na string, containing the function name, on the stack, then use CALL.\nFor example:\n    #888 \"functionname\" CALL\n\n\nWIZCALL <functionname>\n\n  Declares a previously defined function to be callable from other programs,\nas long as the calling program has wizbit permissions.  This is a compile-\ntime directive, not a run-time primitive.  To call a public function, put\nthe dbref of the program on the stack, then put a string, containing the\nfunction name, on the stack, then use CALL.  For example:\n    #888 \"functionname\" CALL\n\n\nCANCALL?  (d s -- i)\n\n  Returns true if the given program has a public or wizcall function that the\ncurrent program has permissions to call.  Returns false, otherwise.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               I/O Operators\n----------------------------------------------------------------------------\n\n\n\n\nNOTIFY ( d s -- )\n\n  d must be a player object. s must be a string. Tells player d message\ns.  If s is null it will print nothing.  This primitive will trigger\nthe _listen'er property on the object the message is sent to, unless\nthe program that would be run is the same as one one currently running.\n\n\nNOTIFY_NOLISTEN ( d s -- )\n\n  d must be a player object. s must be a string. Tells player d message\ns.  If s is null it will print nothing.  This primitive will not trigger\nany _listen'er properties on the object the message is sent to.\n\n\nNOTIFY_EXCEPT ( d1 d2 s -- )\n\n  d1 must be a room object, s must be a string.  Tells everyone at\nlocation d1 except object d2 message s.  If object d2 is not a player\nor NOTHING (#-1) all players are notified.  If s is null it prints\nnothing.  NOTE: notify_except is now only an inserver $define.  It is\ntranslated to '1 swap notify_exclude'.  Please see the man sections on\nNOTIFY_EXCLUDE and DIRECTIVES for more information.\n\n\nNOTIFY_EXCLUDE ( d dn ... d1 n s -- )\n\n  Displays the message s to all the players (or _listening objects),\nexcluding the n given players, in the given room.  For example:\n  #0 #1 #23 #7 3 \"Hi!\" notify_exclude\nwould send \"Hi!\" to everyone in room #0 except for players (or objects)\n#1, #7, and #23.  _listener's will not be triggered by a notify_exclude\nif the program they would run is the same as the current program running.\n\n\nNOTIFY_SECURE ( d s1 s2 -- )\n  Notifies player d with s1 over their secure descriptors and s2 over their\ninsecure descriptors. Triggers listener prop queues only with s2.\n\n\nREAD_WANTS_BLANKS ( -- )\n\n  Tells the interpreter that this process wants to be able to receive blank\nlines from the READ primitive. This can be reversed with the READ_WANTS_NO_BLANKS\nprimitive.\n\n\nREAD_WANTS_NO_BLANKS ( -- )\n\n  Tells the interpreter that this process should ignore blank lines from\nthe READ primitive. This is only necessary after a call to READ_WANTS_BLANKS has\nbeen made.\n\n\nREAD ( -- s )\n\n  Reads a string s from the user. This command should not be used in a\nprogram that is locked (as opposed to linked) to an object, as the\nlock will always fail and print the fail messages at read time.  It\ncannot be used in a program associated with a room object.\n\n\nTREAD ( i -- s i )\n\n  Acts like a timed READ call.  If the user does not provide input within\nthe given number of seconds, the READ call will time-out and return a\nfalse boolean, otherwise it returns a true boolean and the string value\nentered.  This is implemented as an in-server macro as follows:\n    \"__tread\" timer_start { \"TIMER.__tread\" \"READ\" }list event_waitfor\n    swap pop \"READ\" strcmp if \"\" 0 else read 1 \"__tread\" timer_stop then\n\n\nUSERLOG ( str:mesg -- )\n\n  Logs an arbitrary message to the user log file.  (#defined in config.h\nas USER_LOG, defaults to the \"logs/user\" file.)  The log entry will be\nformatted like:\nWinged(#4023) [newaction.muf(#666)] 2002-06-11T03:09:31: <string>\nThe program must be running at a mucker level at least equal to the @tune\nvalue 'userlog_mlev' (defaults to 3) to write this log entry.\n\n\nTELL ( s -- )\n\n  Displays the message s to the player, triggering applicable listeners.\n\n\nOTELL ( s -- )\n\n  Displays the message s to all occupants of the player's location, except\nthe player.  This primitive triggers applicable listeners.\n\n\n\n\n\n----------------------------------------------------------------------------\n                           Mathematical Operators\n----------------------------------------------------------------------------\n\n\n\n\nINT ( x -- i )\n\n  Converts variable, float, or dbref x to integer i.\n\n\n+ ( n1 n2 -- i )\n  This adds two numbers, n1 + n2.  If both numbers are integers, an integer\nwill be returned.  If one of them is a floating point number, then a float\nwill be returned.  You can also use this on a dbref or a variable number,\nso long as the second argument is an integer.  In those cases, this will\nreturn a dbref or variable number, respectively.\n\n  Also concatenates two strings.\n\n\n- ( n1 n2 -- i )\n\n  This subtracts two numbers, n1 - n2.  If both numbers are integers, an\ninteger will be returned.  If one of them is a floating point number,\nthen a float will be returned.  You can also use this on a dbref or a\nvariable number, so long as the second argument is an integer.  In those\ncases, this will return a dbref or variable number, respectively.\n\n\n* ( n1 n2 -- n )\n\n  This multiplies two numbers, n1 * n2.  If both numbers are integers, an\ninteger will be returned.  If one of them is a floating point number,\nthen a float will be returned.  You can also use this on a dbref or a\nvariable number, so long as the second argument is an integer.  In those\ncases, this will return a dbref or variable number, respectively.\n\n  Also repeats a string given an integer argument.\n\n\n/ ( n1 n2 -- n )\n\n  This divides two numbers, n1 / n2.  If both numbers are integers, an\ninteger will be returned.  If one of them is a floating point number,\nthen a float will be returned.  You can also use this on a dbref or a\nvariable number, so long as the second argument is an integer.  In those\ncases, this will return a dbref or variable number, respectively.\n\n\n% ( n1 n2 -- i )\n\n  This returns the integer modulo (remainder) of the division of two\nnumbers, n1 % n2.  Floats cannot use the % modulo function.  For them,\nuse either the FMOD or MODF primitives.\n\n\n++ ( v -- )\n++ ( n -- n' )\n\n  If given an integer, float, or dbref, adds 1 to it, and returns the result.\nIf given a variable containing an integer, float, or dbref, adds 1 to the\nvalue stored in the variable, and returns nothing.\n\n\n-- ( v -- )\n-- ( n -- n' )\n\n  If given an integer, float, or dbref, this subtracts 1 from it, and\nreturns the result.  If given a variable containing an integer, float,\nor dbref, this subtracts 1 from the value stored in the variable, and\nreturns nothing.\n\n\nABS ( i -- i )\n\n  Given an integer, returns its absolute value.\n\n\nSIGN ( i -- i )\n\n  Given an integer, returns 1 if positive, -1 if negative, and 0 if 0.\n\n\nGETSEED ( -- s )\n\n  Returns the the current SRAND seed string.\n\n\nSETSEED ( s -- )\n\n  Sets the seed for SRAND.  Only the first thirty-two characters are\nsignificant.  If SRAND is called before SETSEED is called, then SRAND\nis seeded with a semi-random value.\n\n\nSRAND ( -- i )\n\n  Generates a seeded random number.\n\n\nRANDOM ( -- i )\n\n  Returns a random integer from 0 to (2^31)-1, which is 2,147,483,647.\nThis is based on the C random() function, so it's not very secure.\n\n\nBITOR (i i -- i)\n\n  Does a mathematical bitwise or.\n\n\nBITXOR (i i -- i)\n\n  Does a mathematical bitwise exclusive or.\n\n\nBITAND (i i -- i)\n\n  Does a mathematical bitwise and.\n\n\nBITSHIFT (i i -- i)\n\n  Shifts the first integer by the second integer's number of bit positions.\nSame as the C << operator.  If the second integer is negative, its like >>.\n\n\n\n\n\n----------------------------------------------------------------------------\n                          Floating Point Operators\n----------------------------------------------------------------------------\n\n\n\n\nFLOAT ( i -- f )\n\n  Converts integer to floating point type.\n\n\nPI ( -- f )\n\n  Returns the value of Pi.\n\n\nINF ( -- f )\n\n  Returns the value of an Infinite result.  Most functions will not\naccept this value as a legal input.\n\n\nEPSILON ( -- flt:epsilon )\n\n  Returns the smallest number such that 1.0 + Epsilon is distinct from 1.0\nin the internal representation for floating point numbers.  This is the\nprecision error.  This is useful when comparing that two numbers are equal\nto within the precision of the system.  ie:\n    float1 @ float2 @ - fabs epsilon < if \"Equivalent\" then\n\n  When you are working with numbers that have exponent parts that may not be\nnear e+00, you should do a relative comparison instead:\n    float1 @ float2 @ - float1 @ / fabs epsilon < if \"Equivalent\" then\n\n\nFTOSTR ( f -- s )\n\n  Converts a floating point number into a string.  Trailing zeros are not\nremoved from the end of the number, when no mantissa is shown.  FTOSTR can\nreturn either the xxx.yyy form or the x.yyyEzz form of a float, depending\non which would give the shortest string length.\n\n\nFTOSTRC ( f -- s )\n\n  Converts a floating point number into a string.  Trailing zeros are removed\nfrom the initial decimal, if no mantissa is shown.  FTOSTRC can return either\nthe xxx.yyy form or the x.yyyEzz form of a float, depending on which would\ngive the shortest string length.\n\n\nSTRTOF ( s - f )\n\n  Converts a string into a floating point type.\nSTRTOF recognizes most standard forms of floating point representation,\nincluding the xxx.yyy and x.yyyEzz forms.\n\n\nFABS ( f -- f )\n\n  Returns the absolute value of the float f.\n\n\nCEIL ( f - f )\n\n  Returns the next highest integer, as a floating point type.\n\n\nFLOOR ( f -- f )\n\n  Returns the next lowest integer number, as a floating point type.\n\n\nROUND ( f i -- f )\n\n  Rounds the floating point number to the precision requested, given as the\nnumber of places to the right of the decimal point.  ie: '1.111 1 round'\nwould leave '1.1' on the stack, while '1.111 0 round' would leave '1.0'.\nNegative i values denote places to the left of the decimal place.  ie:\n'1234.56 -2 round' would return '1200.0' on the stack.\n\n\nFMOD ( f1 f2 -- f )\n\n  Returns the floating point remainder of f1 divided by f2.  (f1/f2)\n\n\nMODF ( f -- fi ff )\n\n  The modf primitive breaks f into an integral part and a fractional part,\neach of which has the same sign as f.  Both returned values are floats.\nfi is the integral part, while ff is the fractional part.\n\n\nSQRT ( f -- f )\n\n  Returns a float's square root.  Expects a value greater than or equal\nto zero.\n\n\nCOS ( f -- f )\n\n  Returns the cosine of a float.  Only operates in the range of -Pi/4 to Pi/4.\n\n\nACOS ( f -- f )\n\n  Returns the inverse cosine of a float.  Only operates within the range\nfrom 0 to Pi.\n\n\nSIN ( f -- f )\n\n  Returns the sine of a float.  Only operates within the range of -Pi/4\nto Pi/4.\n\n\nASIN ( f -- f )\n\n  Returns the inverse sine of a float.  Only operates within the range\nfrom -Pi/2 to Pi/2.\n\n\nTAN ( f -- f )\n\n  Returns the tangent of a float.  Only operates within the range of\nK*pi + pi/2 (for some K).\n\n\nATAN ( f -- f )\n\n  Returns the inverse tangent of a float.  Only operates within the range\nfrom -Pi/2 to Pi/2.\n\n\nATAN2 ( fy fx -- f )\n\n  Returns the inverse tangent of (fy / fx), taking into account the signs\nof both values, and avoiding problems with DIVBY0.  This is useful to\nget an angle from X-Y coordinates.\n\n\nLOG ( f -- f )\n\n  Returns the natural log of float f.  Requires a value greater than zero.\nVery small values will return INF.\n\n\nEXP ( f -- f )\n\n  Returns the value of e raised to the power of the passed float.\n\n\nLOG10 ( f -- f )\n\n  Returns the log base 10 of float f.  Requires a value greater than zero.\nVery small values will return INF.\n\n\nPOW ( f1 f2 -- f )\n^ ( f1 f2 -- f )\n\n  Returns f1 to the power of f2.  If f1 is zero, f2 must be greater than\nzero.  If f1 is less than zero, f2 must be an integer value.\n\n\nDIFF3 ( fx1 fy1 fz1 fx2 fy2 fz2 -- fx' fy' fz' )\n\n  Returns three floats, being the differences of fx1 - fx2, fy1 - fy2, and\nfz1 - fz2, respectively.\n\n\nDIST3D ( fx fy fz -- f )\n\n  Returns the distance of the XYZ coordinate (fx,fy,fz) from the origin.\nTo do a 2D distance calculation, simply use a Z value (fz) of 0.\n\n\nXYZ_TO_POLAR ( fx fy fz -- fr ft fp )\n\n  Converts the XYZ coordinate (fx, fy, fz) to the spherical polar coordinate\n(fr, ft, fp).  fr is the radius, ft is theta (the plane angle), and fp is phi\n(the elevation angle)  To do 2D X-Y to radius and angle conversion, simply use\na Z coordinate (fz) of 0, and discard phi (fp).\n\n\nPOLAR_TO_XYZ ( fr ft fp -- fx fy fz )\n\n  Converts the spherical polar coordinate (fr, ft, fp) to the XYZ coordinate\n(fx, fy, fz).  fr is the radius, ft is theta (the plane angle), and fp is phi\n(the elevation angle)  To do 2D radius and angle to X-Y conversion, simply use\na phi angle (fp) of 0, and discard Z (fz).\n\n\nFRAND ( -- f )\n\n  Returns a random floating point number between 0 and 1.\n\n\nGAUSSIAN ( fs fm -- f )\n\n  Given the standard deviation, and the mean, return a floating point random\nnumber with the given normalization.  Note that this may be any value between\n-INF and INF.\n\n\nCLEAR ( -- )\n\n  Clears all error flags for floating point math operations.\n\n\nCLEAR_ERROR ( s|i -- i )\n\n  Clears a specific error flag for floating point math operations.\n\n\nERROR? ( -- i )\n\n  Returns true if any of the floating point error flags have been set.  In\nmost cases, an error condition in a math operation will return a zero value\n(except in the case of integer math, which will wrap around on an overflow\nor underflow condition).  It is possible to poll for error conditions after\nevery math operation, or when a '0' result is found.\nThe following is a list of the current Error Flags:\n    DIV_ZERO  - (0) Division by zero attempted.\n    NAN       - (1) Result was not a number.\n    IMAGINARY - (2) Result would be imaginary. \n    FBOUNDS   - (3) Floating-point inputs were out of range.\n    IBOUNDS   - (4) Calculation resulted in an integer overflow or underflow.\n\n\nERROR_BIT ( s -- i )\n\n  Returns the bit identifier for a given floating point error flag string name.\n\n\nERROR_NAME ( i -- s )\n\n  Returns the string name for the error flag, given a floating point error\nidentifier.\n\n\nERROR_NUM ( -- i )\n\n  Returns the total number of floating point error flag types.\n\n\nERROR_STR ( s|i -- s )\n\n  Returns a user-readable error string, given a floating point error identifier.\n\n\nIS_SET? ( s|i - i )\n\n  Checks if a specific floating point error flag is set.\n\n\nSET_ERROR ( s|i -- i )\n\n  Sets the specified error flag for floating point operations.\n\n\n\n\n\n----------------------------------------------------------------------------\n                       String Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nATOI ( s -- i )\n\n  Turns string s into integer i.  If s is not a string, then 0 is pushed\nonto the stack.\n\n\nCTOI ( s -- i )\n\n  Converts the first character in s into its ASCII equivilent.\n\n\nSTRLEN ( s -- i )\n\n  Returns the length of string s.\n\n\nSTRCAT ( s1 s2 -- s )\n\n  Concatenates two strings s1 and s2 and pushes the result s = s1s2\nonto the stack.\n\n\nSTRCMP ( s1 s2 -- i )\n\n  Compares strings s1 and s2. Returns i as 0 if they are equal,\notherwise returns i as the difference between the first non-matching\ncharacter in the strings.  For example, \"z\" \"a\" strcmp returns 25.\nThe reason it returns a 0 for a match, and the difference on a non-match,\nis to allow for nice things like string sorting functions.\nThis primitive is case sensitive, unlike stringcmp.\n\n\nSTRNCMP ( s1 s2 i -- i' )\n\n  Compares the first i characters in strings s1 and s2.\nReturn value is like strcmp.\n\n\nSTRINGCMP ( s1 s2 -- i )\n\n  Compares strings s1 and s2. Returns i as 0 if they are equal,\notherwise returns i as the difference between the first non-matching\ncharacter in the strings.  For example, \"z\" \"a\" stringcmp returns 25.\nThis function is not case sensitive, unlike strcmp.\n\n\nSTRINGPFX (s s2 -- i)\n\n  Returns 1 if string s2 is a prefix of string s.  If s2 is NOT a prefix\nof s, then it returns 0.  Case insensitive.\n\n\nINSTR ( s s1 -- i )\n\n  Returns the first occurrence of string s1 in string s, or 0 if s1 is\nnot found.\n\n\nRINSTR ( s s1 -- i )\n\n  Returns the last occurrence of string s1 in string s, or 0 if s1 is\nnot found.  '\"abcbcba\" \"bc\" rinstr' returns 4.\n\n\nSTRCUT ( s i -- s1 s2 )\n\n  Cuts string s after its i'th character.  For example,\n  \"Foobar\" 3 strcut\nreturns\n  \"Foo\" \"bar\"\n  If i is zero or greater than the length of s, returns a null string in\nthe first or second position, respectively.\n\n\nMIDSTR ( s i1 i2 -- s )\n\n  Returns the substring of i2 characters, starting with character i1.\ni1 and i2 must both be positive.  The first character of the string\nis considered position 1.  ie:\n    \"testing\" 2 3 midstr\nwill return the value \"est\".\n\n\nSPLIT ( s1 s2 -- s1' s2' )\n\n  Splits string s1 at the first found instance of s2.  If there are no\nmatches of s2 in s1, will return s1 and a null string.\n\n\nRSPLIT ( s1 s2 -- s1' s2' )\n\n  Splits a string, as SPLIT, but splits on the last occurence of s2.\n\n\nEXPLODE ( s1 s2 -- ... i )\n\n  s2 is the delimiter string, and s1 is the target string, which will be\nfragmented, with i pushed on top of the stack as the number of strings\ns1 was broken into.  For instance:\n    \"Hello world\" \" \" explode\nwill result in\n    \"world\" \"Hello\" 2\non the stack.  (Note that if you read these items off in order, they\nwill come out \"Hello\" first, then \"world\".)  For TinyMUCK 2.2, s2 may\nbe any length.  But \"\" (null string) is not an acceptable string for\nparameter s2.\n\n\nEXPLODE_ARRAY ( s1 s2 -- a )\n\n  s2 is the delimiter string, and s1 is the target string.  s1 will be split\nup at each place where s2 is found in s1, and all the parts will be returned\nin a list array.  For instance:\n    \"alpha, beta, gamma\"  \", \"  explode_array\nwill result in a list array that is identical to:\n    { \"alpha\" \"beta\" \"gamma\" }list\ns2 cannot be a null string, but it can be of any non-zero length.  When s2\nis more than one character long, the delimiter is considered to be the\nentire s2 string.  The delimiters are removed from the results.\n\n\nSUBST ( s1 s2 s3 -- s )\n\n  s1 is the string to operate on, s2 is the string to change all occurrences\nof s3 into, and s is resultant string.  For example:\n    \"HEY_YOU_THIS_IS\" \" \" \"_\" subst\nresults in\n    \"HEY YOU THIS IS\"\ns2 and s3 may be of any length.\n\n\nFMTSTRING ( ?n..?1 s -- s )\n\n  Allows for string formatting with format substitutions, as per C's printf.\nFMTSTRING can be used to format complicated and long strings, as well as\nmulti-lined (with embedded new-lines) strings.  These strings can consist\nentirely of user-specified text, formatted variable entries (as values taken\nfrom the stack) or a combination of both.\n\n  The first format substitution in the format string will use the topmost\nstack value.  The next format substitution will use the next item down\nthe stack, and so on.\n\n  The start of a format substitution in the string is noted by a '%'.  If a\nliteral '%' is needed in the string, a '%%' may be used.  The format of a\nsubstitution is as follows: '%[-,|][+, ][0][number][.number]type'\nWhere 'number' is an integer value, and 'type' is one of the following\nidentifiers:\n    i - integer argument\n    s - string argument\n    d - dbref number, in the form of #123\n    D - dbref name reference; given a dbref, will print the associated\n        name for that object - terminates on bad reference\n    l - pretty-lock, given a lock, will print the description\n    f - float in xxx.yyy form\n    e - float in x.yyEzz form\n    g - shorter of forms e or f\n    ~ - default representation of any stack type\n    ? - unknown type argument, will print a string stating what the\n        variable type is\n\n  A '-' at the start of a format substitution indicates the field will be left\njustified.  A '|' at the start indicated the field will be centered.  A '+'\nforces the + sign to appear for positive numbers.  A space forces a blank\nin front of positive numbers.  (This is the default.)  A leading 0 will\nforce the field to be padded on the left with 0's instead of spaces.  If you\nuse a '*' in place of either the width or precision format fields, then\nthat integer number will be obtained from the stack.  You may specify a\nnegative fieldwidth to obtain left justification of that field.  You may\nnot specify a negative precision.\n\n\nARRAY_FMTSTRINGS ( list:dicts str:format -- list:results )\n\n  Lets you apply a format string, a la FMTSTRING, to each of a list of\ndictionaries of input data, returning a list of strings, one for each\ninput dictionary.\n\n  Unlike FMTSTRING, the format string needs to have key markers to\nspecify which key of each input dictionary to use to get the data for\neach format field.  You specify the key markers in each format\nsubsititution by adding a '[KEY]' before the substitution type letter.\nFor example, the code:\n\n    {\n        {\n            \"username\" \"Johnny\"\n            \"count\" 4\n            \"object\" #18\n            4  pi\n        }dict\n        {\n            \"username\" \"Ghaladahsk_Fadja\"\n            \"count\" 123\n            \"object\" #97\n        }dict\n    }list\n    \"%-16.15[username]s %3[count]i %5[object]d %4.2[4]g\"\n    array_fmtstrings\n    { me @ }list array_notify\n\n... would show the following output to the user:\n\n    Johnny             4   #18 3.14\n    Ghaladahsk_Fadj  123   #97 0.00\n\n  Note that if a key does not exist in an input dictionary, then that\nformat field will be assumed to either be the appropriate false value for\nfor the format type.\n\n  Numeric keys can be referred to as well as string keys.  This also\nmeans that you may use a list of list arrays as input, instead of a\nlist of dictionaries.\n\n  See FMTSTRING for a full description of normal substitution format codes.\nNote that unlike FMTSTRING, the format strings cannot use calculated\nfield widths or precisions via '*'.\n\n  Hint: If you want to use this format method on a single dictionary, you\ncan do something like:\n\n    pid getpidinfo   (to give us a dictionary of data.)\n    1 array_make     (to make a list with that as its single entry)\n    \"%-40[player]D %6[pid]i %[called_prog]D\" \n    array_fmtstrings\n    0 []             (to get the formatted result string.)\n\n\nPRONOUN_SUB ( d s -- s' )\n\n  Takes database object d and substitutes string s according to o-message\nrules.  For example:\n  me @ \"%N has lost %p marbles.\" pronoun_sub\nwould return:\n  \"Igor has lost his marbles.\"\nif the player's name was Igor and his sex were male.\nd does not have to be a player for the substitutions to work.\n  \nThe substitutions are:\n    %a/%A for absolute possessive (his/hers/its, His/Hers/Its)\n    %s/%S for subjective pronouns (he/she/it, He/She/It)\n    %o/%O for objective pronouns (him/her/it, Him/Her/It)\n    %p/%P for possessive pronouns (his/her/its, His/Her/Its)\n    %r/%R for reflexive pronouns (himself/herself/itself,\n                                  Himself/Herself/Itself)\n    %n/%N for the player's name.\n  \n  if it comes across a %X substitution, where X is any character not listed\nin the above substitutions table, it will search down the environment tree\nfrom d to try to find the appropriate %X property for use in substitution.\n\n\nTEXTATTR ( s1 s2 -- s )\n\n  Takes a plain text string s1 and adds the neccesary codes to make the\noutput s display with the given attributes s2, when shown with an\nappropriate client.  The attributes are passed to TEXTATTR in s2 as a\nseries of comma separated attribute names.\n\nThese are the attributes currently recognized:\n    reset bold dim italic uline flash reverse overstrike\n    black red green yellow blue magenta cyan white\n    bg_black bg_red bg_green bg_yellow bg_blue bg_magenta bg_cyan bg_white\n\n\nSTOD ( s -- d )\n\n  Attempts to extract a dbref from s, recognizing both plain numerical\nstrings, and those prepended with a '#' sign.\n\n\nANSI_STRIP ( s -- s' )\n\n  Takes a string and removes ansi escapes from with in the string, returning\nthe de-ansified string.\n\n\nANSI_STRLEN ( s -- i )\n\n  Returns the length of string s ignoring ansi escape within the string.\n\n\nANSI_STRCUT ( s i -- s1 s2 )\n\n  Like STRCUT, but ignores ansi escapes when finding the location to divide\nthe string at.\n\n\nANSI_MIDSTR ( s i i -- s' )\n\n  Does exactly what MIDSTR does, except it ignores ansi escapes when\ndetermining what section of the string to extract.\n\n\nNUMBER? ( s -- i )\n\n  Returns 1 if string on top of the stack contains a number. Otherwise\nreturns 0.\n\n\nPOSE-SEPARATOR? ( s -- i )\n\n  Returns 1 if the argument could be used as a pose without requiring a space.\nOtherwise returns 0.\n\n\nINTOSTR ( x -- s )\n\n  x must be an integer or a dbref. Converts x into string s.\n\n\nITOC ( i -- s )\n\n  Converts an integer i to its ASCII equivilent character, or a null\nif i is not a valid display character.\n\n\nSTRENCRYPT ( s1 s2 -- s3 )\n\n  Takes the plaintext string s1, and encrypts it, using the key s2,\nreturning the encrypted string s3.  Note: s3 will be 2 characters longer\nthan s1.  Also Note: The longer your key string is, the more secure\nthe data will be, up to the length of the data itself.  The encryption\ntechnique used here is pretty simple, so I highly doubt it breaks\nany laws to take it outside the USA.  By the same token, it probably\nshouldn't be trusted with any really important data.  I'm not an expert\nat cryptography, so this ain't DES.\n\n\nSTRDECRYPT ( s1 s2 -- s3 )\n\n  Takes the encrypted string s1, and decrypts it, using the key s2, returning\nthe plaintext string s3.\n\n\nMD5HASH ( s -- s' )\n\n  Calculates the MD5 hash of the given string.\n\n\nTOUPPER (s -- s)\n\n  Takes a string and returns it with all the letters in uppercase.\n\n\nTOLOWER (s -- s)\n\n  Takes a string and returns it with all the letters in lowercase.\n\n\nSTRIPLEAD (s -- s)\n\n  Strips leading spaces from the given string.\n\n\nSTRIPTAIL (s -- s)\n\n  Strips trailing spaces from the given string.\n\n\nSTRIP (s -- s)\n\n  This is a built in $define.  It is interpreted as \"striplead striptail\"\nIt strips the spaces from both ends of a string.\n\n\nSMATCH ( s s2 -- i )\n\n  Takes a string s, and a string pattern, s2, to check against.  Returns true\nif the string fits the pattern.  This is case insensitive.  In the pattern\nstring, the following special characters will do as follows:\n\n  *  A '?' matches any single character.\n  \n  *  A '*' matches any number of any characters.\n  \n  *  '{word1|word2|etc}' will match a single word, if it is one of those\n        given, separated by | characters, between the {}s.  A word ends with\n        a space or at the end of the string.  The given example would match\n        either the words \"word1\", \"word2\", or \"etc\".\n        {} word patterns will only match complete words: \"{foo}*\" and \"{foo}p\"\n        do not match \"foop\" and \"*{foo}\" and \"p{foo}\" do not match \"pfoo\".\n        {} word patterns can be easily meaningless; they will match nothing\n        if they:\n          (a) contains spaces,\n          (b) do not follow a wildcard, space or beginning of string,\n          (c) are not followed by a wildcard, space or end of string.\n  \n  *  If the first char of a {} word set is a '^', then it will match a single\n        word if it is NOT one of those contained within the {}s.  Example:\n        '{^Foxen|Fiera}' will match any single word EXCEPT for Foxen or Fiera.\n  \n  *  '[aeiou]' will match a single character as long as it is one of those\n        contained between the []s.  In this case, it matches any vowel.\n  \n  *  If the first char of a [] char set is a '^', then it will match a single\n        character if it is NOT one of those contained within the []s.  Example:\n        '[^aeiou]' will match any single character EXCEPT for a vowel.\n  \n  *  If a [] char set contains two characters separated by a '-', then it will\n        match any single character that is between those two given characters.\n        Example:  '[a-z0-9_]' would match any single character between 'a' and\n        'z', inclusive, any character between '0' and '9', inclusive, or a '_'.\n  \n  *  The '\\' character will disable the special meaning of the character that\n        follows it, matching it literally.\n  \nExample patterns:\n    \"d*g\" matches \"dg\", \"dog\", \"doog\", \"dorfg\", etc.\n    \"d?g\" matches \"dog\", \"dig\" and \"dug\" but not \"dg\" or \"drug\".\n    \"M[rs].\" matches \"Mr.\" and \"Ms.\"\n    \"M[a-z]\" matches \"Ma\", \"Mb\", etc.\n    \"[^a-z]\" matches anything but an alphabetical character.\n    \"{Moira|Chupchup}*\" matches \"Moira snores\" and \"Chupchup arghs.\"\n    \"{Moira|Chupchup}*\" does NOT match \"Moira' snores\".\n    \"{Foxen|Lynx|Fier[ao]} *t[iy]ckle*\\?\"  Will match any string starting\n      with 'Foxen', 'Lynx', 'Fiera', or 'Fiero', that contains either 'tickle'\n      or 'tyckle' and ends with a '?'.\n\n\nINSTRING ( s s1 -- i )\n\n  Returns the first occurrence of string s1 in string s, or 0 if s1 is\nnot found. Non-case sensitive.\n\n\nRINSTRING ( s s1 -- i )\n\n  Returns the last occurrence of string s1 in string s, or 0 if s1 is\nnot found. Non-case sensitive.\n\n\nNAME-OK? (s -- i)\n\n  Returns true if the given string would be okay as a general object name.\n\n  This is deprecated, and internally defined as: \"exit\" ext-name-ok?\n\n\nPNAME-OK? (s -- i)\n\n  Returns true if the given string would be okay as a player name.\n\n  This is deprecated, and internally defined as: \"player\" ext-name-ok?\n\n\nEXT-NAME-OK? ( str:Name ref:Obj -- int:Ok? )\nEXT-NAME-OK? ( str:Name str:Type -- int:Ok? )\n\n  Returns true if Name would be a legal name for an object depending on\nthe object type. If Obj is the object you are going to SETNAME, then\nEXT-NAME-OK? will use the naming rules for that type of object.\nIf the object does not exist yet, you may specify a string Type:\n        \"exit\" or \"e\"              \"muf\" or \"program\" or \"f\"\n        \"player\" or \"p\"            \"thing\" or \"t\"\n        \"room\" or \"r\"\nType's case is ignored.\n\n\nREGEXP ( str:text str:pattern int:flags -- list:SubMatchVals list:SubMatchIdx )\n\n  Tests text to see if it matches the given PCRE style regular expression\npattern.  If the test fails, two empty lists are returned.  If the test\nsucceeded, the first list returned contains, as element 0, the substring\nthat matched the entire pattern, followed by the captured substrings that\nmatched the various parenthesized subexpressions of the pattern.  The second\ncontains, as element 0, a sublist containing the starting position and length\nof the substring that matched the entire pattern, followed by similar sublists\nfor each captured parenthesized subexpression.  These indices are appropriate\nfor use with the MIDSTR primitive, and consider the first character of the\nstring to be position 1.\n\nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n\nREGSUB ( str:text str:pattern str:substr int:flags -- str:result )\n\n  Performs a regular expression substitution using pattern against text,\nreplacing the match with substr.  substr may contain \\digit to specify\na submatch.  Uses PCRE style regular expression syntax.\n\nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_ALL      2   (Substitute all matches, rather than just the first)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n  Ie: to replace all words in a string with 'yadda', ignoring case, you would\nuse the following code:\n\n    \"[a-z]+\" \"yadda\" REG_ICASE REG_ALL + REGSUB\n\n\nREGSPLIT ( str:text str:pattern int:flags -- list:result )\n\n  Splits the text by the given regular expression pattern. Empty pieces will\nbe returned for consecutive matches.\n \nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n\n\nREGSPLIT_NOEMPTY ( str:text str:pattern int:flags -- list:result )\n\n  Splits the text by the given regular expression pattern, into non-empty\npieces.\n \nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n\n\nTOKENSPLIT (strString strDelim strEscape -- strPre strPost strChar)\n\n  Searches strString for the first character that matches any character in\nstrDelim, so long as it is not escaped by the character given in strEscape.  \nReturns the unescaped string before the found character, the raw string after\nthat character, and the character that was found.  For example:\n    \"ab//cd/'efg'hi//jk'lm\"   \"'\"   \"/\"   TOKENSPLIT\nreturns the values:\n    \"ab/cd'efg\"   \"hi//jk'lm\"   \"'\"\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Lock Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nLOCKED? (d d -- i)\n\n  Takes, in order, the dbref of the player to test the lock against, and\nthe dbref of object the lock is on.  It tests the lock, running programs\nas necessary, and returns a integer of 0 if it is not locked against\nthem, or 1 if it is.\n\n\nPARSELOCK (s -- l)\n\n  Parses a lock string into a lock.  If the parsing failed, then the lock\nreturned will be a TRUE_BOOLEXP, which is logically false to an 'if' test.\n\n\nUNPARSELOCK (l -- s)\n\n  Unparses a lock into a string fit for program editing.\n\n\nPRETTYLOCK (l -- s)\n\n  Unparses a lock into a string fit for players to see.\n\n\nTESTLOCK (d l -- i)\n\n  Tests the player dbref against the given lock.  If the test was successful,\nthen this returns a 1.  If the test failed, then this returns a 0.\n\n\nSETLOCKSTR (d s -- i)\n\n  Tries to set the lock on the given object to the lock expression given in\nthe string.  If it was a success, then it will return a 1, otherwise, if\nthe lock expression was bad, it returns a 0.  To unlock an object, set its\nlock to a null string.\n\n\nGETLOCKSTR ( d -- s )\n\n  Returns the lock expression for the given object in the form of a string.\nReturns \"*UNLOCKED*\" if the object doesn't have a lock set.\n\n\nSUPPLICANT ( -- d )\n  If the current program is being executed due to lock evaluation, returns\nthe object the lock is being tested against. Otherwise, returns #-1.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Array Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nARRAY_MAKE ( {?} -- a )\n\n  Creates a list type array from a stackrange.\n\n\n}LIST  ( marker ?n ... ?1 -- array )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and creates a list array from them.  This is actually an inserver\nmacro, defined to '} array_make'.\n\n\nARRAY_MAKE_DICT ( {@ ?} -- a )\n\n  Creates a dictionary type array from a stackrange of index/value\npairs.\n\n\n}DICT  ( marker @n ?n ... @1 ?1 -- dictionary )\n\n  Takes pairs of stack items from the top of the stack to the topmost stack\nmarker and creates a dictionary array from them.  Each @ item is used as an\nindex value for the corresponding ? value.  This is actually an inserver\nmacro, defined to '} 2 / array_make_dict'.  Be careful to make sure that\nthere are an even number of stack items between the { and the }dict.\n\n\nARRAY_NOTIFY ( a1 a2 -- )\n\n  Notifies all strings in array a1 to all dbrefs in array a2.  Arrays\nmust be homogenous of their respective types.\n\n\nARRAY_NOTIFY_SECURE ( a1 a2 a3 -- )\n  For every dbref in a3, notify a2 over their secure descriptors and a1 over\ntheir insecure descriptors. Triggers listener prop queues only with a1.\n\n\n}TELL  ( marker strn ... str1 -- )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and notifies them to the 'me @' user.  This will throw an error\nif you try to send a non-string.  Each separate string will be send as a\nseparate line to the user.  This is actually an inserver macro, defined to\n'} array_make me @ 1 array_make array_notify'.\n\n\nARRAY_JOIN ([s] s -- s)\n\n  Takes a list array and a delimiter string, and returns a single string\nthat is the concatenation of all the items in the list array, with the\ndelimiter string in between.  For example:\n    { \"one\" 2 \"three\" 3.14159 }list \"... \" array_join\nwill result in a single string: \"one... 2... three... 3.14159\"\n\n\nARRAY_INTERPRET ([s] -- s)\n\n  Takes a list array and and returns a single string that is the concatenation\nof all the items in the list array, with dbrefs translated to the name of\ntheir respective objects.  For example:\n    { #1 \" \" 2 \" three \" 3.14159 }list array_join\nwill result in a single string like: \"Wizard 2 three 3.14159\"\n\n\n}JOIN  ( marker ?n ... ?1 -- string )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and concatenates them into a string based on the default reresentat-\nion of each stack item type.  Dbrefs will be shown as #REF numbers.  This\nactually is an inserver macro, defined to '} array_make \"\" array_join'.\n\n\n}CAT  ( marker ?n ... ?1 -- string )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and concatenates them into a string based on the default reresentat-\nion of each stack item type.  Dbrefs will be translated to the name of the\nobject that they reference.  This primitive is actually an inserver macro,\ndefined to '} array_make array_interpret'.\n\n\nARRAY_COUNT ( a -- i )\n\n  Returns the count of number of items in the array.\n\n\nARRAY_GETITEM ( a @ -- ? )\n\n  Returns item with index @ from an array.\n\n\nARRAY_SETITEM ( ? a @ -- a')\n\n  Overwrites a given array item at index @ with new value ?.\n\n\nARRAY_INSERTITEM ( ? a @ -- a' )\n\n  Inserts a given value into an array.\n\n\nARRAY_APPENDITEM ( ? a -- a')\n\n  Appends the given item to the given list array.\n\n\nARRAY_DELITEM ( a @ -- a' )\n\n  Removes an item with index @ from an array.\n\n\nARRAY_GETRANGE ( a @ @ -- a' )\n\n  Returns as an array the range between two indexes (inclusive)\nfrom an array.\n\n\nARRAY_SETRANGE ( a1 @ a2 -- a' )\n\n  Sets items in list a1 to vals from list a2, starting at the given\nindex.  Returns the resulting array.\n\n\nARRAY_INSERTRANGE ( a1 @ a2 -- a' )\n\n  Inserts items from array a2 into a1, starting at the given index.\nReturns the resulting array.\n\n\nARRAY_DELRANGE ( a @ @ -- a' )\n\n  Deletes a range of items between two indexes (inclusive) from\nan array.\n\n\nARRAY_NESTED_GET ( a1 a2 -- ? )\n\n  Takes a nested array a1, and a list of array indexes a2, and recursively\nfetches nested sub-array values.  Returns 0 if the item doesn't exist.\nExample:\n    arr1 @ { \"foo\" 2 \"bar\" }list array_nested_get\nis roughly equivalent to\n    arr1 @ \"foo\" [] dup if\n        2 [] dup if\n            \"bar\" []\n        then\n    then\n\n\nARRAY_NESTED_SET ( ? a a2 -- a' )\n\n  Sets the nested array entry in a, specified by the list of array indexes\nin a2, to the given value, creating new sub-arrays if needed.\nExample:\n    { }dict\n    \"qux\" swap { \"foo\" \"bar\" \"baz\" }list array_nested_set\n    4 swap { \"foo\" 2 \"clam\" }list array_nested_set\nwould return the same array as\n    {\n        \"foo\" {\n            \"bar\" {\n                \"baz\" \"qux\"\n            }dict\n            2 {\n                \"clam\" 4\n            }dict\n        }dict\n    }dict\n\n\nARRAY_NESTED_DEL ( a a2 -- a' )\n\n  Deletes the nested array entry in a, specified by the list of array\nindexes in a2.  Example:\n    {\n        \"foo\" {\n            \"bar\" {\n                \"baz\" \"qux\"\n            }dict\n            2 {\n                \"clam\" 4\n            }dict\n        }dict\n    }dict\n    { \"foo\" 2 }list array_nested_del\nwould return the same array as\n    {\n        \"foo\" {\n            \"bar\" {\n                \"baz\" \"qux\"\n            }dict\n        }dict\n    }dict\n\n\nARRAY_EXTRACT (array arrIndexes -- array')\n\n  Takes an array, and returns a dictionary containing every element of the\noriginal array who's key was in the list indexes given.\n\n\nARRAY_REVERSE (a -- a')\n\n  Takes a list array and reverses the order of its elements.\n\n\nARRAY_COMPARE ( a1 a2 -- i )\n\n  Compares two arrays using the same ordering assumptions as ARRAY_SORT in\ncase sensitive ascending order mode.  If the two arrays are identical,\nthis returns 0.  If the first array is considered greater than the second,\nthis returns a positive value.  If the second array is considered greater,\nthis returns a negative value.  I'm not sure if the greater/lesser-than\ncomparison results are really useful, though.\n\n\nARRAY_EXPLODE ( a -- {@ ?} )\n\n  Explodes an array into a stackrange of its index/value pairs.  Example:\n    \"index0\" \"value0\" \"index1\" \"value1\" 2\n\n\nARRAY_KEYS ( a -- {@} )\n\n  Returns the keys of an array in a stackrange.  Example:\n    \"index0\" \"index1\" 2 \n\n\nARRAY_VALS ( a -- {?} )\n\n  Returns the values of an array in a stackrange.  Example:\n    \"value0\" \"value1\" 2\n\n\nARRAY_FIRST ( a -- @ i )\n\n  Returns the first index in array, and a boolean which is false\nif there are no items are in the array.\n\n\nARRAY_PREV ( a @ -- @ i )\n\n  Returns the previous index in the array, and a boolean which\nis false if there are no items left.\n\n\nARRAY_NEXT ( a @ -- @ i )\n\n  Returns the next index in the array, and a boolean which\nis false if there are no items left.\n\n\nARRAY_LAST ( a -- @ i )\n\n  Returns the last index in array, and a boolean which is false\nif there are no items are in the array.\n\n\nARRAY_CUT ( a1 @ -- a2 a3 )\n\n  Given an array, and an index into the array, cuts the array into two\narrays at that position.  The first array output will contain all array\nitems before the given index.  The second array will contain the given\nposition and all items after it.  When used on a list array, both output\narrays will be list arrays.  When used on dictionaries, both arrays will\nbe dictionaries.\n\n\nARRAY_PIN ( arr -- arr' )\n\n  Given an array or dictionary, pins it such that changes to any dup'ed\ncopy of that array on the stack will make changes to ALL copies.\n\n\nARRAY_UNPIN ( arr -- arr' )\n\n  Given an array or dictionary, unpins it such that changes to any dup'ed\ncopy of that array on the stack will NOT change any other copy of that array.\n\n\nARRAY_DEFAULT_PINNING ( int -- )\n\n  Sets whether future arrays/dictionaries created in this process will be\npinned by default.\n\n\nARRAY_SORT (arrData intSortType -- arrSorted)\n\n  This sorts all the items in the list array given, based on the given\nsort type.  This can sort strings, integers, floats, dbrefs, or mixes\nof types.  Integers are sorted in with floats, but strings sort after\nall numbers.  Dbrefs sort after the other number types, but before\nstring types.  Other stack item types will sort separately, but in\nan undefined consistent order.\n\n  The SortType argument is an integer, and its default value of 0 means\nthat the sorting should be case sensitive and in ascending order.  You\ncan change either of those by using one or more of the following inserver\n$defines BITORed or added together:\n  $def SORTTYPE_CASEINSENS 1   (Sort is to be case insensitive.)\n  $def SORTTYPE_DESCENDING 2   (Sort is to be in reversed order.)\n  $def SORTTYPE_SHUFFLE    4   (Randomize list completely.)\n\n  The above sort types can be added or bitor'ed together to get the\nfollowing inserver $defines as listed below.\n  $def SORTTYPE_CASE_ASCEND    0 (Case sensitive and ascending order.)\n  $def SORTTYPE_NOCASE_ASCEND  SORTTYPE_CASEINSENS\n  $def SORTTYPE_CASE_DESCEND   SORTTYPE_DESCENDING\n  $def SORTTYPE_NOCASE_DESCEND SORTTYPE_CASEINSENS SORTTYPE_DESCENDING +\n\n\nARRAY_SORT_INDEXED (arrData intSortType idxIndex -- arrSorted)\n\n  This takes a list array of arrays, and will sort them, based on the\nvalue of an indexed value in each subarray, based on the given sort\ntype.  For example:\n    {\n        { \"name\" \"One\"     \"num\" 1 }dict\n        { \"name\" \"Two\"     \"num\" 2 }dict\n        { \"name\" \"Three\"   \"num\" 3 }dict\n    }list\n    SORTTYPE_DESCENDING \"num\" ARRAY_SORT_INDEXED\n...would return an array of dictionaries, sorted in descending order by the\nvalue of their \"num\" entries.  ie, the same as:\n    {\n        { \"name\" \"Three\"   \"num\" 3 }dict\n        { \"name\" \"Two\"     \"num\" 2 }dict\n        { \"name\" \"One\"     \"num\" 1 }dict\n    }list\n  This can be used with an array of list arrays, just like with an array of\ndictionaries.  For list arrays, you just use an integer for the index.\nNOTE: arrays that don't have an item matching the given index, will be\nsorted as lesser than arrays that do.\n\nSee ARRAY_SORT for more information on sort ordering.\n\n\nARRAY_UNION ( a1 a2 -- a )\n\n  Returns a list array containing the union of values of both the given\narrays.  ie: If a value is found in either of the given arrays, then it\nwill be returned in the result list.  Duplicate values will appear only\nonce in the returned list.  Keys are discarded.  Ordering is not preserved.\n\n\nARRAY_NUNION ( {a} -- a )\n\n  Returns a list array containing the union of values of all the given\narrays in the stackrange.  ie: if a value is found in any of the given\narrays, then it will be returned in the resultant list.  Duplicate values\nwill appear only once in the returned list.  Keys are discarded.  Ordering\nis not preserved.\n\n\nARRAY_DIFF ( a1 a2 -- a )\n\n  Return an array containing the difference of the two given arrays.\nie: This returns all values of a2 that weren't found in a1.  Duplicate\nvalues will appear only once in the returned list.  Keys will be discarded.\nOrdering is not preserved.\n\n\nARRAY_NDIFF ( {a} -- a )\n\n  Return an array containing the difference of all the given arrays\nin the stackrange.  ie: This returns all values from the topmost array\nthat weren't found in any of the remaining arrays.  Multiple arrays are\nconsecutively processed against the results of the previous difference,\nfrom the top of the stack down.  Duplicate values will appear only once\nin the returned list.  Keys will be discarded.  Ordering is not preserved.\n\n\narray_intersect ( a1 a2 -- a )\n\n  Returns an array containing the intersection of the two arrays.\nie: Only values contained in BOTH the given arrays will be returned.\nDuplicate values will appear only once in the returned list.  Keys will\nbe discarded.  Ordering is not preserved.  This is actually an inserver\nmacro to '2 array_nintersect'\n\n\narray_nintersect ( {a} -- a )\n\n  Returns an array containing the intersection of all the given arrays\nin the stackrange.  ie: Only values contained in ALL the given arrays\nwill be returned.  Multiple arrays are consecutively processed against\nthe results of the previous intersection, from the top of the stack down.\nDuplicate values will appear only once in the returned list.  Keys will\nbe discarded.  Ordering is not preserved.\n\n\nARRAY_FINDVAL (a1 ? -- a2)\n\n  Returns a list array containing the keys of every element in the array\na1 whose values match the given value.  For example:\n\n    { #5 #10 #15 #10 #20 }list #10 array_findval\n\nwill return a list containing 1 and 3, being the keys (indexes) of the\nmatching items.\n\n\nARRAY_EXCLUDEVAL (a1 ? -- a2)\n\n  Returns a list array containing the keys of every element in the array\na1 whose values did NOT match the given value.  For example:\n    { #5 #10 #15 #10 #20 }list #10 array_excludeval\nwill return a list containing 0, 2 and 4, being the keys (indexes) of the\nitems that didn't match.  If you want the values, use ARRAY_DIFF or\nARRAY_EXTRACT.  Ie:\n    { #10 }list { #5 #10 #15 #10 #20 }list array_diff\nor\n    { #5 #10 #15 #10 #20 }list dup #10 array_excludeval array_extract\nwhich will both return a list containing #5, #15, and #20.  The main\ndifference between these two methods is that ARRAY_DIFF will remove any\nduplicate values in the remaining items, and the ordering of the resulting\nitems will have been sorted.  Using ARRAY_EXTRACT, ordering and duplicate\nvalues are preserved.\n\n\nARRAY_MATCHKEY (arrStrings strPattern - arrStrings)\n\n  Given an array and an smatch wildcard pattern string, returns a dictionary\ncontaining all the key-value pairs where the key was a string that matched\nthe given smatch pattern.\n\n\nARRAY_MATCHVAL (arrStrings strPattern - arrStrings)\n\n  Given an array and an smatch pattern string, returns a dictionary containing\nall the key-value pairs where the value was a string that matched the given\nsmatch wildcard pattern.\n\n\n\n\n\n----------------------------------------------------------------------------\n                      Property Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nGETPROP (d s -- ?)\n\n  Gets the value of a given property, and puts it on the stack.\nThis can return a lock, a string, a dbref, or an integer, depending\non the type of the property.  Permissions are the same as those for\nGETPROPSTR.  This primitive returns 0 if no such property exists, or\nif it is a valueless propdir.\n\n\nGETPROPSTR ( d s -- s )\n\n  s must be a string. Retrieves string associated with property s in\nobject d.  If the property is cleared, \"\" (null string) is returned.\n\n\nGETPROPVAL ( d s -- i )\n\n  s must be a string. Retrieves the integer value i associated with\nproperty s in object d. If the property is cleared, 0 is returned.\n\n\nGETPROPFVAL ( d s -- f )\n\n  Returns the float value stored in the property\n\n\nENVPROP ( d s -- d ? )\n\n  Takes a starting object dbref and a property name and searches down the\nenvironment tree from that object for a property with the given name.  If\nthe property isn't found, it returns #-1 and 0.  If the property is found,\nit will return the dbref of the object it was found on, and the value it\ncontained.\n\n\nENVPROPSTR (d s -- d s )\n\n  Takes a starting object dbref and a property name and searches down the\nenvironment tree from that object for a property with the given name.  If\nthe property isn't found, it returns #-1 and a null string.  If the\nproperty is found, it will return the dbref of the object it was found on,\nand the string value it contained.\n\n\nADDPROP ( d s1 s2 i -- )\n\n  Sets property associated with s1 in object d.  Note that if s2 is\nnull \"\", then i will be used.  Otherwise, s2 is always used.  All four\nparameters must be on the stack; none may be omitted.  If the effective\nuser of the program does not control the object in question and the\nproperty begins with an underscore `_', the property cannot be changed.\nThe same goes for properties beginning with a dot `.' which cannot be\nread without permission. \n\n\nSETPROP (d s ? -- )\n\n  Stores a lock, dbref, integer, or string into the named property on the\ngiven object.  Permissions are the same as for ADDPROP.\n\n\nREMOVE_PROP ( d s -- )\n\n  Removes property s from object d.  If the property begins with an\nunderscore, `_' or a dot `.', and the effective user does not have\npermission on that object, the call fails.\n\n\nPROPDIR? (d s -- i)\n\n  Takes a dbref and a property name, and returns a boolean integer that\ntells if that property is a propdir that contains other props.\n(Requires Mucker Level 2)\n\n\nNEXTPROP (d s -- s)\n\n  This takes a dbref and a string that is the full propdir pathname of a\nproperty and returns the full pathname of the next property in the given\nobject's given propdir, or returns a null string if that was the last\nproperty in the propdir.  To *start* the search, give it a propdir name\nending in a '/', or a blank string.  For example, '#10 \"/\" NEXTPROP'\nreturns the name of the first property in the root propdir of object #10,\nand '#28 \"/letters/\" NEXTPROP' would return the name of the first\nproperty in the 'letters/' propdir on object #28.  A blank string is the\nsame as \"/\".  If you try to do a Nextprop on a non-existant property, you\nwill have a null string returned to you. Nextprop will skip properties if\nthey would not be readable by the program with the given permissions and\neffective user id. (Requires Mucker Level 3)\n\n\nARRAY_GET_REFLIST ( d s -- a )\n\n  Reads in list of space delimited dbrefs from a string property, and\nreturns them as a list array of dbrefs.  See ARRAY_PUT_REFLIST for\nproperty syntax.\n\n\nARRAY_PUT_REFLIST ( d s a -- )\n\n  Takes a list array of dbrefs, and stores them in a property as a space\ndelimited string of dbrefs.  ie:  \"#1234 #6646 #1026 #7104\"\n\n\nREFLIST_FIND ( d1 s1 d2 -- i )\n\n  Finds dbref d2 in the reflist in property s1 on object d1.  If d2 is\nnot in the list, then 0 is returned.  Otherwise the position of the\ndbref in the list is returned, with the first dbref being in position 1,\nthe second dbref in 2, etc.\n\n\nREFLIST_ADD ( d1 s1 d2 -- )\n\n  Adds dbref d2 to the reflist in property s1 on object d1.  If d2 is already\nin the list, it is moved to the end of the reflist.\n\n\nREFLIST_DEL ( d1 s1 d2 -- )\n\n  Removes dbref d2 from the reflist in property s1 on object d1.  If d2 is\nnot in the list, nothing happens.\n\n\nUNBLESSPROP (dbrefObject strPropname -- )\n\n  Unblesses the given property for MPI.  Requires Wizbit perms.\n\n\nBLESSPROP (dbrefObject strPropname -- )\n\n  Blesses the given property for MPI.  Requires Wizbit perms.\n\n\nBLESSED? (d s -- i)\n\n  Takes a dbref and a property name, and returns a boolean integer that\ntells if that property has been blessed.\n(Requires Mucker Level 2)\n\n\nARRAY_FILTER_PROP ([d] s1 s2 -- [d'])\n\n  Takes a homogenous list array of dbrefs, and returns a list array with only\nthose dbrefs who have a property specified by s1, set to a value that smatch\nmatches s2.\n\n\nARRAY_FILTER_LOCK ([d] l -- [d'])\n\n  Takes a homogenous list array of dbrefs, and returns a list array with only\nthose players and things who pass the given lock.\n\n\nARRAY_FILTER_FLAGS ( list:dbrefs str:flags -- list:matchingdbrefs )\n\n  Takes a homogenous list array of dbrefs and a flags test string, and\nreturns a list array with only those dbrefs whose flags matched the flag\ntest string.  A flags test string is a list of flag letters or object type\nletters to require, and a list of flags to specifically reject preceeded\nby exclamation marks (!).  ie: \"TD!C!V\" would match Things set Dark, which\ndid not have their Chown_ok or Vehicle flags set.  See 'help @find' for\nmore info on flag test strings.\n\n\nARRAY_GET_PROPDIRS( d s -- a )\n\n  Returns a list array containing the names of all the sub-propdirs\ncontained within the given propdir.  Any propdirs the program wouldn't\nbe able to read, are left out.  (ML3 required.)\n\n\nARRAY_GET_PROPVALS ( d s -- a )\n\n  Reads in properties from a propdir, and returns them in a dictionary,\nkeyed by propname.  Sub- propdirs in the given propdir that do not\nhave any value of their own, are left out of the returned dictionary.\nProperties that the program doesn't have perms to read are also\nleft out.  Reads up to max_propfetch props maximum. (ML3 required.)\n\n\nARRAY_PUT_PROPVALS ( d s a -- )\n\n  Takes the values in the given dictionary, and stores them in the given\npropdir on the given object.  Each dictionary entry will be saved into a\nproperty with the key as the name, and the value as the property value.\nBe aware that dictionary entries with keys starting with one of @ ~ _\nor . may require special permissions to save.\n\n\nARRAY_GET_PROPLIST ( d s -- a )\n\n  Reads in properties from a sequential proplist, and returns them in a list\narray.  Proplists can be in any of these proplist styles: \"propname#/1\",\n\"propname/1\", or \"propname1\".  If the program doesn't have permission to read\nthe list, it returns an empty array.  Reads up to max_propfetch props maximum.\n\n\nARRAY_PUT_PROPLIST ( d s a -- )\n\n  Takes the values in the given list array, and stores them in the given\npropdir on the given object as a sequential proplist.\n\n\nPARSEPROP (d s s i -- s)\n\n  Returns the string output of the MPI Parser, given an object, a\nproperty name to parse, an input string for the {&how} variable, and an\ninteger that should either be 1, for when you want {delay} messages to be\nsent to the player only, or 0, when you want the rest of the players in\nthe room to get the omessages. NOTE: for security reasons, you cannot use\nPARSEPROP with a mucker level of less than 3.\n\n\nPARSEMPI (d s s i -- s)\n\n  Returns the string output of the MPI Parser, given an object, an\nMPI string to parse, an input string for the {&how} variable, and an\ninteger that should either be 1, for when you want {delay} messages to be\nsent to the player only, or 0, when you want the rest of the players in\nthe room to get the omessages. NOTE: for security reasons, you cannot use\nPARSEMPI with a mucker level of less than 3.\n\n\nPARSEMPIBLESSED (d s s i -- s)\n\n  Returns the string output of blessed execution of the MPI Parser, given\nan object, an MPI string to parse, an input string for the {&how} variable,\nand an integer that should either be 1, for when you want {delay} messages\nto be sent to the player only, or 0, when you want the rest of the players\nin the room to get the omessages. Requires Wizard permissions.\n\n\nPARSEPROPEX ( ref:Obj str:Prop dict:Vars int:Private -- dict:Vars str:Result )\n\n  MPI parses \"Prop\" on \"Obj\".  The dictionary \"var\" will be used to setup mpi\nvariables, the key as the variable name, the value as the content of the\nvariable.  The content of the variables after the parse will be returned in\nthe resulting dictionary.  If \"Private\" is set to 1 the result of any {delay}\nwill be sent to the player only, otherwise if it is set to 0 the result will\nbe sent to the rest of the players in the room.  This prim is most useful for\npassing values between MPI and MUF, rather than having to resort to formatting\nthe data into the {&how} variable, or the return value.\nThis primitives requires at least mucker level 3.\n\n\nPROP-NAME-OK? (s -- i)\n  Returns true if the given string is an acceptable property name that will\nnot cause an error for SETPROP or any other property related primitive.\n\n\n\n\n\n----------------------------------------------------------------------------\n                         Database Related Operators\n----------------------------------------------------------------------------\n\n\n\n\nDBREF ( i -- d )\n\n  Converts integer i to object reference d.\n\n\nPROG ( -- d)\n\n  Returns the dbref of the currently running program.\n\n\nTRIG ( -- d)\n\n  Returns the dbref of the original trigger.\n\n\nCALLER ( -- d)\n\n  Returns the dbref of the program that called this one, or the dbref of the\ntrigger, if this wasn't called by a program.\n\n\nDBTOP ( -- d)\n\n  Returns the dbref of the first object beyond the top object of the database.\n'dbtop ok?' would return a false value.\n\n\nDBCMP ( d1 d2 -- i )\n\n  Performs comparison of database objects d1 and d2. If they are the\nsame object, then i is 1, otherwise i is 0.\n\n  This is deprecated, and internally defined as: =\n\n\nUNPARSEOBJ (d -- s)\n\n  Returns the name-and-flag string for an object.  It always has the dbref and\nflag string after the name, even if the player doesn't control the object.\nFor example: \"One(#1PW)\"\n\n\nOWNER ( d -- d' )\n\n  d is any database object. Returns d', the player object that owns d.\nIf d is a player, d' will be the same as d.\n\n\nSETOWN (d d -- )\n\n  Sets the ownership of the first object to the player given in the second\ndbref. (wizbit only)\n\n\nLOCATION ( d -- d' )\n\n  Returns location of object d as object d'.\n\n\nMOVETO ( d1 d2 -- )\n\n  Moves object d1 to object d2.\n  MOVETO is affected by the following rules:\n    a) If the object being moved is !JUMP_OK and is it being moved by someone\n      other than the object's owner, then the moveto fails.\n    b) If the object being moved is a person and either the source or\n      destination rooms (if not owned by the person being moved) are\n      !JUMP_OK, the moveto fails.\n    c) If the object being moved is not a player, is owned by the owner of\n      either the source or destination rooms, and either room where the\n      ownership matches is !JUMP_OK, the moveto fails.\n  The moveto succeeds under any other circumstances.  MOVETO rules follow the\npermissions of the current effective userid.  MOVETO will run programs in\nthe @desc and @succ/@fail of a room when moving a player.\n\n\nCONTENTS ( d -- d' )\n\n  Pushes the dbref of the first thing contained by d.  This dbref can\nthen be referenced by `next' to cycle through all of the contents of\nd.  d may be a room or a player.\n\n\nCONTENTS_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every object contained\nwithin the given object.  If a #-1 is returned as the last list item,\nthen there were too many objects to return all of them.\n\n\nEXITS ( d -- d' )\n\n  Returns the first exit in the linked exit list of room/player/object d.\nThis list can be transversed with `next'.\n\n\nEXITS_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every exit attached to the\ngiven object.  If a #-1 is returned as the last list item, then there were\ntoo many exits to return all of them.\n\n\nNEXT ( d -- d' )\n\n  Takes object d and returns the next thing in the linked contents/exits\nlist of d's location.\n\n\nNEXTOWNED ( d -- d' )\n\n  When called with a player dbref, returns the dbref of the first object they\nown.  Subsequent calls to those object dbrefs returns the next object owned\nby that same player.  When no more objects are left owned by that player,\n#-1 is returned.  The order of the objects is not guarenteed, but when used\ncorrectly, each object owned by that player will be returned exactly once.\nThe player object itself will NOT be returned.\n\n\nFINDNEXT ( d1 d2 s1 s2 -- d' )\n\n  Searches for the next object in the database _after_ d1 that is owned by\nd2, whose name matches the wildcard pattern s1, and whose flags match\nthose specified by s2.\n\n  You can start a search with d1 set to #-1.  If d2 is #-1 then ownership\nchecks will not be performed.  However, only programs with a mucker level\nof 3 or better will be allowed to perform non-owner-specific searches, or\nsearches with an owner different from the effective UID of the program.\nIf s1 is an empty string, name checks will not be performed.  If s2 is a\nnull string, then flags will not be checked.\n\n  The s1 name pattern differs from that used by @find, @owned, etc. in\nthat those commands implicitly treat any patterns as if it has a *\nbefore and after it.  This primitive does NOT.  So for this primitive,\n\"*.muf\" would match only objects whose name ends in \".muf\".\n\n  The s2 string is a flagslist that is in the same format as that used by\nthe @find, @owned, etc. commands.  ie:  \"F3!D\" will match all muf program\nobjects in the database that are mucker level 3, and not set debug.\n\n  If there are no more objects in the database that might match all the\nsearch criteria, then #-1 is returned.  Otherwise, the next matching\nobject is returned.\n\nThis primitive is used like this:\n    #-1 begin\n        me @ \"*.muf\" \"F\" FINDNEXT\n        dup while\n        dup unparseobj .tell\n    repeat\n\n\nNEXTENTRANCE ( d1 d2 -- d3 )\n\n  Searches the database for the next object after d2 that is linked to d1.\nYou can begin a search by passing #-1 as d2.  The search currently scans\nupwards through the database, but this ordering is not guaranteed.  If an\nobject is found that links to d1, then the dbref of that object is returned.\nIf no more such objects are found in the db, then #-1 is returned.\n\n\nCONTROLS ( d1 d2 -- i )\n\n  Takes a player dbref d1 and an object dbref d2, and returns true if the\nplayer has control over the given object.\n\n\nMATCH ( s -- d )\n\n  Takes string s, first checks all objects in the user's inventory, then\nchecks all objects in the current room, as well as all exits that the\nplayer may use, and returns object d which contains string s.  If\nnothing is found, d = #-1. If ambiguous, d = #-2. If HOME, d = #-3.\n\n\nRMATCH ( d s -- d' )\n\n  Takes string s, checks all objects and actions associated with object\nd, and returns object d' which matches that string.  For example,\nmatches actions and inventory objects for a player object, actions on\na thing object, etc.  If nothing is found, d' = #-1.  if ambiguous, d'\n= #-2. If HOME, d' = #-3.\n\n\nPMATCH (s -- d)\n\n  Takes a name and returns the dbref of the player.  If the name does not\nmatch that of a player, #-1 is returned.\n\n\nPART_PMATCH (s -- d)\n\n  Takes a player name, or the first part of the name, and matches it\nagainst the names of the players who are currently online.  If the\ngiven string is a prefix of the name of a player who is online, then\ntheir dbref is returned.  If two players could be matched by the\ngiven string, it returns a #-2.  If None of the players online match,\nthen it returns a #-1.\n\n\nPENNIES ( d -- i )\n\n  Gets the amount of pennies player object d has, or the penny value\nof thing d.\n\n\nADDPENNIES ( d i -- )\n\n  d must be a player or thing object.  Adds i pennies to object d.\nWithout Wizard permissions, addpennies may only give players pennies,\nlimited to between zero and MAX_PENNIES.\n\n\nMOVEPENNIES (d1 d2 i -- )\n\n  Moves i pennies from player/thing d1 to player/thing d2.  This is the\nfirst step towards making ADDPENNIES require at least ML3 (or wizbit),\nfor enabling economies.\n\n\nCHECKPASSWORD ( d s -- i )\n\n  Checks if password string s is valid for player dbref d.  returns 1 on\nsuccess, otherwise returns 0.\nWizbit only.\n\n\nNEWPASSWORD ( d s -- )\n\n  Changed the password of the given player d to s.\n\n\nSET ( d s -- )\n\n  Sets flag s to object d.  Recognizes negation (e.g. `!abode').\n\n\nFLAG? ( d s -- i )\n\n  Reads the flag of object d, specified by s, and returns its state: 1 =\non; 0 = off.  The ! token may be used before the name of a flag to negate\nthe check and check for the absence of the flag.  Different flags may be\nsupported in different installations.  flag? returns 0 for unsupported or\nunrecognized flags.\n  You can check the \"interactive\" flag to see if a player is currently in\na program's READ, or if they are in the MUF editor.\nThe \"Truewizard\" flag will check for a W flag with or without the QUELL set.\nThe \"Mucker\" flag returns the most significant bit of the mucker level and\nthe \"Nucker\" flag returns the least significant bit. (Use MLEVEL instead.)\n\n\nMLEVEL (d -- i)\n\n  returns the mucker (or priority) level of the given object. If #-1 is\npassed, this returns the effective mucker level of the current program.\n\n\nOK? ( x -- i )\n\n  Takes x and returns 1 if x is a type dbref, as well as 0 or above,\nbelow the top of the database, and is not an object of type garbage.\n\n\nPLAYER? ( d -- i )\n\n  Returns 1 if object d is a player object, otherwise returns 0.\nIf the dbref is that of an invalid object, it will return 0.\n\n\nROOM? ( d -- i )\n\n  Returns 1 if object d is a room, otherwise returns 0.  If the dbref is that\nof an invalid object, it will return 0.  A dbref of #-3 (HOME) returns 1.\n\n\nTHING? ( d -- i )\n\n  Returns i as 1 if object d is a thing, otherwise returns i as 0.\n\n\nEXIT? ( d -- i )\n\n  Returns 1 if object d is an exit object, 0 if otherwise.\n\n\nPROGRAM? ( d -- i )\n\n  Returns 1 if object d is a program, otherwise returns 0.\nIf the dbref is that of an invalid object, it will return 0.\n\n\nSYSPARM ( s -- s )\n\n  Takes a tuneable system parameter and returns its value as a string.  For\nan integer it returns it as a string, a time is returned as a string\ncontaining the number of seconds, a dbref is returned in standard dbref\nformat, and boolean is returned as 'yes' or 'no'\nChecking an invalid parameter or a parameter requiring higher permissions\nthan the program has will return an empty string.\n\nParameters available:\n (bool) 7bit_other_names          - Limit exit/room/muf names to 7-bit characters\n (bool) 7bit_thing_names          - Limit thing names to 7-bit characters\n (int)  addpennies_muf_mlev       - Mucker Level required to create/destroy pennies\n (time) aging_time                - When to considered an object old and unused\n (bool) allow_listeners           - Allow programs to listen to player output\n (bool) allow_listeners_env       - Allow listeners down environment\n (bool) allow_listeners_obj       - Allow objects to be listeners\n (bool) allow_zombies             - Enable Zombie things to relay what they hear\n (bool) autolink_actions          - Automatically link @actions to NIL\n (str)  autolook_cmd              - Room entry look command\n (time) clean_interval            - Interval between memory/object cleanups\n (int)  cmd_log_threshold_msec    - Log commands that take longer than X millisecs\n (bool) cmd_only_overrides        - Disable all built-in commands except wizard !overrides\n (int)  command_burst_size        - Max. commands per burst before limiter engages\n (int)  command_time_msec         - Millisecs per spam limiter time period\n (int)  commands_per_time         - Commands allowed per time period during limit\n (bool) compatible_priorities     - Use legacy exit priority levels on things\n (str)  connect_fail_mesg         - Failed player connect message\n (bool) consistent_lock_source    - Maintain trigger as lock source in TESTLOCK\n (str)  cpennies                  - Currency name, capitalized, plural\n (str)  cpenny                    - Currency name, capitalized\n (str)  create_fail_mesg          - Failed player create message\n (bool) dark_sleepers             - Make sleeping players dark\n (bool) dbdump_warning            - Enable warnings for upcoming database dumps\n (ref)  default_room_parent       - Place to parent new rooms to\n (str)  description_default       - Default description\n (bool) diskbase_propvals         - Enable property value diskbasing (req. restart)\n (bool) do_mpi_parsing            - Parse MPI strings in messages\n (bool) do_welcome_parsing        - Parse MPI in welcome file or proplist\n (time) dump_interval             - Interval between dumps\n (time) dump_warntime             - Interval between warning and dump\n (str)  dumpdone_mesg             - Database dump finished message\n (bool) dumpdone_warning          - Notify when database dump complete\n (str)  dumping_mesg              - Database dump started message\n (str)  dumpwarn_mesg             - Database dump finished message\n (bool) enable_home               - Enable 'home' command\n (bool) enable_prefix             - Enable prefix actions\n (int)  exit_cost                 - Cost to create an exit\n (bool) exit_darking              - Allow players to set exits dark\n (bool) expanded_debug_trace      - MUF debug trace shows array contents\n (str)  file_connection_help      - 'help' before login\n (str)  file_credits              - Acknowledgements\n (str)  file_editor_help          - Editor help\n (str)  file_help                 - 'help' main content\n (str)  file_help_dir             - 'help' topic directory\n (str)  file_info_dir             - 'info' topic directory\n (str)  file_log_cmd_times        - Command times\n (str)  file_log_commands         - Player commands\n (str)  file_log_gripes           - Player gripes\n (str)  file_log_malloc           - Memory allocations\n (str)  file_log_muf_errors       - MUF compile errors and warnings\n (str)  file_log_programs         - Text of changed programs\n (str)  file_log_sanfix           - Database fixes\n (str)  file_log_sanity           - Database corruption and errors\n (str)  file_log_status           - System errors and stats\n (str)  file_log_stderr           - Server error redirect\n (str)  file_log_stdout           - Server output redirect\n (str)  file_log_user             - MUF-writable messages\n (str)  file_man                  - 'man' main content\n (str)  file_man_dir              - 'man' topic directory\n (str)  file_motd                 - Message of the day\n (str)  file_mpihelp              - 'mpi' main content\n (str)  file_mpihelp_dir          - 'mpi' topic directory\n (str)  file_news                 - 'news' main content\n (str)  file_news_dir             - 'news' topic directory\n (str)  file_welcome_screen       - Opening screen\n (bool) force_mlev1_name_notify   - MUF notify prepends username for ML1 programs\n (int)  free_frames_pool          - Size of allocated MUF process frame pool\n (str)  gender_prop               - Property name used for pronoun substitutions\n (str)  huh_mesg                  - Unrecognized command warning\n (str)  idle_boot_mesg            - Boot message given to users idling out\n (bool) idle_ping_enable          - Enable server side keepalive pings\n (time) idle_ping_time            - Server side keepalive time in seconds\n (bool) idleboot                  - Enable booting of idle players\n (bool) ieee_bounds_handling      - Use IEEE standard for operations with INF and NAN\n (bool) ignore_bidirectional      - Enable bidirectional ignore\n (bool) ignore_support            - Enable support for @ignoring players\n (int)  instr_slice               - Max. uninterrupted instructions per timeslice\n (str)  leave_mesg                - Logoff message for QUIT\n (int)  link_cost                 - Cost to link an exit\n (int)  listen_mlev               - Mucker Level required for Listener programs\n (bool) lock_envcheck             - Locks check environment for properties\n (bool) log_commands              - Log player commands\n (bool) log_failed_commands       - Log unrecognized commands\n (bool) log_interactive           - Log text sent to MUF\n (bool) log_programs              - Log programs every time they are saved\n (int)  lookup_cost               - Cost to lookup a player name\n (ref)  lost_and_found            - Place for things without a home\n (bool) m3_huh                    - Enable huh? to call an exit named \"huh?\" and set M3, with full command string\n (int)  max_force_level           - Max. number of forces processed within a command\n (int)  max_instr_count           - Max. MUF instruction run length for ML1\n (int)  max_interp_recursion      - Max. MUF interpreter recursion\n (int)  max_loaded_objs           - Max. percent of proploaded database objects\n (int)  max_ml4_nested_interp_loop_count - Max. MUF preempt interp loop nesting level for ML4 (0 = no limit)\n (int)  max_ml4_preempt_count     - Max. MUF preempt instruction run length for ML4, (0 = no limit)\n (int)  max_nested_interp_loop_count - Max. MUF preempt interp loop nesting level\n (int)  max_object_endowment      - Max. value of an object\n (int)  max_output                - Max. output buffer size\n (int)  max_pennies               - Max. pennies a player can own\n (int)  max_plyr_processes        - Concurrent processes allowed per player\n (int)  max_process_limit         - Total concurrent processes allowed on system\n (int)  max_propfetch             - Max. size of returned property array\n (time) maxidle                   - Maximum idle time before booting\n (int)  mcp_muf_mlev              - Mucker Level required to use MCP\n (int)  movepennies_muf_mlev      - Mucker Level required to move pennies non-destructively\n (bool) mpi_continue_after_logout - Continue executing MPI after logout\n (int)  mpi_max_commands          - Max. number of uninterruptable MPI commands\n (str)  muckname                  - Name of the MUCK\n (bool) muf_comments_strict       - MUF comments are strict and not recursive\n (str)  new_program_flags         - Initial flags for newly created programs\n (int)  object_cost               - Cost to create an object\n (bool) optimize_muf              - Enable MUF bytecode optimizer\n (int)  pause_min                 - Min. millisecs between MUF input/output timeslices\n (str)  pcreate_flags             - Initial flags for newly created players\n (str)  pennies                   - Currency name, plural\n (int)  pennies_muf_mlev          - Mucker Level required to read the value of pennies, settings above 1 disable {money}\n (str)  penny                     - Currency name\n (int)  penny_rate                - Avg. moves between finding currency\n (bool) periodic_program_purge    - Periodically free unused MUF programs\n (int)  player_name_limit         - Limit on player name length\n (ref)  player_start              - Home where new players start\n (bool) playermax                 - Limit number of concurrent players allowed\n (str)  playermax_bootmesg        - Max. players connection error message\n (int)  playermax_limit           - Max. player connections allowed\n (str)  playermax_warnmesg        - Max. players connection login warning\n (bool) pname_history_reporting   - Report player name change history\n (time) pname_history_threshold   - Length of player name change history\n (int)  process_timer_limit       - Max. timers per process\n (bool) quiet_moves               - Suppress basic arrive and depart notifications\n (bool) realms_control            - Enable support for realm wizzes\n (bool) recognize_null_command    - Recognize null command\n (str)  register_mesg             - Login registration denied message\n (bool) registration              - Require new players to register manually\n (str)  reserved_names            - String-match list of reserved names\n (str)  reserved_player_names     - String-match list of reserved player names\n (int)  room_cost                 - Cost to create an room\n (bool) secure_teleport           - Restrict actions to Jump_OK or controlled rooms\n (bool) secure_thing_movement     - Moving things act like player\n (bool) secure_who                - Disallow WHO command from login screen and programs\n (bool) server_cipher_preference  - Honor server cipher preference order over client's\n (str)  smtp_server               - SMTP Server Host Name.  If blank, SMTP will not work.\n (str)  smtp_port                 - SMTP Port.  If blank, SMTP will not work.\n (int)  smtp_ssl_type             - SMTP SSL type - 0 for StartTLS, 1 for TLS, 2 for no SSL\n (bool) smtp_no_verify_cert       - SMTP if true, don't verify server certs\n (int)  smtp_auth_type            - SMTP SSL type - 0 for CRAM_MD5, 1 for none, 2 for plain, 3 for login\n (str)  smtp_user                 - SMTP Username\n (str)  smtp_password             - SMTP Password\n (str)  smtp_from_name            - SMTP From user name for the email header\n (str)  smtp_from_email           - SMTP From user email for the email header\n (bool) ssl_auto_reload_certs     - Automatically reload certs if the cert file changes\n (str)  ssl_cert_file             - Path to SSL certificate .pem\n (str)  ssl_cipher_preference_list - Allowed OpenSSL cipher list\n (str)  ssl_key_file              - Path to SSL private key .pem\n (str)  ssl_keyfile_passwd        - Password for SSL private key file\n (str)  ssl_min_protocol_version  - Min. allowed SSL protocol version for clients\n (int)  start_pennies             - Player starting currency count\n (bool) starttls_allow            - Enable TELNET STARTTLS encryption on plaintext port\n (bool) strict_god_priv           - Only God can touch God's objects\n (bool) tab_input_replaced_with_space - Change tab to space when processing input\n (bool) teleport_to_player        - Allow using exits linked to players\n (bool) thing_darking             - Allow players to set things dark\n (ref)  toad_default_recipient    - Default owner for @toaded player's things\n (bool) toad_recycle              - Recycle newly-created toads\n (bool) use_hostnames             - Resolve IP addresses into hostnames\n (int)  userlog_mlev              - Mucker Level required to write to userlog\n (ref)  welcome_mpi_what          - Effective 'this' for welcome.txt MPI\n (ref)  welcome_mpi_who           - Effective 'me' for welcome.txt MPI\n (bool) who_hides_dark            - Hide dark players from WHO list\n (bool) wiz_vehicles              - Only let Wizards set vehicle bits\n\n\nSYSPARM_ARRAY ( str:pattern -- list:sysparminfo )\n\n  Given an smatch wildcard string pattern, returns a list of dictionaries,\none per each matched @tune parameter (sysparm), containing the information\nabout each sysparm.  This will only return items for which your program has\npermission to read the data.\n\nEach dictionary contains the following data, keyed with these strings:\n    \"type\"      One of \"string\", \"integer\", \"timespan\", \"dbref\", or \"boolean\".\n    \"group\"     The logical group that this parameter belongs to.\n    \"name\"      The name of the @tune setting.\n    \"value\"     The value of the sysparm.  May be an int, string, or dbref.\n    \"mlev\"      The mucker level required to read the value of this sysparm.\n    \"readmlev\"  The mucker level required to read the value of this sysparm.\n    \"writemlev\" The mucker level required to write the value of this sysparm.\n    \"label\"\tA description of the parameter.\n    \"nullable\"  Whether the parameter can have no value.\n    \"active\"\tWhether the parameter currently affects the system.\n    \"default\"\tWhether the parameter has been changed from defaults.\n\nIf a given entry is of the \"dbref\" type, it will also have the extra field:\n    \"objtype\"   The type of object the dbref is restricted to.  Can be one of\n                the strings \"player\", \"thing\", \"room\", \"exit\", \"program\",\n                \"garbage\", or \"any\".\n\n\nSETSYSPARM ( s1 s2 -- )\n\n  Assigns the @tunable parameter s1 a value given by s2.  s2 must contain a\nlegal value for s1.  If s1 is prefixed with '%', reset s1 to default\ninstead, ignoring the value of s2.  (wizbit only)\n\n\nNAME ( d -- s )\n\n  Takes object d and returns its name (@name) string field.\n\n\nSETNAME  ( d s -- )\n\n  Takes object d, and sets the name to s. A program may only set the\nnames of objects that are owned by the effective user of the program,\nor any object if the program is Wizard.  The name of a player can never\nbe set, since that would normally require a password.\n\n\nTRUENAME ( d -- s )\n\n  Takes object d and returns its name string field.\n\n  This is deprecated, and internally defined as: name\n\nPNAME_HISTORY ( d -- a )\n\n  Returns a dictionary representing the times in which the given player had a name\nchange. If determinable, the \"created_as\" key holds the name at creation. \n\nThe result of this wizbit-only primitive is affected by the following sysparms:\n  pname_history_reporting    - if no, the result is an empty dictionary.\n  pname_history_threshold    - amount of history to keep (0s = unlimited)\n\n\nDESC ( d -- s )\n\n  Takes object d and returns its description (@desc) string field.\n\n\nSETDESC (d s -- )\n\n  Takes object d, and sets the @description string property _/de to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setdesc  \"_/de\"  swap 0 addprop $enddef\n\n\nSUCC ( d -- s )\n\n  Takes object d and returns its success (@succ) string field s.\n\n\nSETSUCC (d s -- )\n\n  Takes object d, and sets the @success string property _/sc to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setsucc  \"_/sc\" swap 0 addprop $enddef\n\n\nFAIL ( d -- s )\n\n  Takes object d and returns its fail (@fail) string field.\n\n\nSETFAIL (d s -- )\n\n  Takes object d, and sets the @fail string property _/fl to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setfail  \"_/fl\" swap 0 addprop $enddef\n\n\nDROP ( d -- s )\n\n  Takes object d and returns its drop (@drop) string field.\n\n\nSETDROP (d s -- )\n\n  Takes object d, and sets the @drop string property _/dr to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setdrop  \"_/dr\" swap 0 addprop $enddef\n\n\nOSUCC ( d -- s )\n\n  Takes object d and returns its osuccess (@osucc) string field.\n\n\nSETOSUCC (d s -- )\n\n  Takes object d, and sets the @osuccess string property _/osc to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setosucc  \"_/osc\" swap 0 addprop $enddef\n\n\nOFAIL ( d -- s )\n\n  Takes object d and returns its ofail (@ofail) string field.\n\n\nSETOFAIL (d s -- )\n\n  Takes object d, and sets the @ofail string property _/ofl to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setofail  \"_/ofl\" swap 0 addprop $enddef\n\n\nODROP ( d -- s )\n\n  Takes object d and returns its odrop (@odrop) string field.\n\n\nSETODROP (d s -- )\n\n  Takes object d, and sets the @odrop string property _/odr to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setodrop  \"_/odr\" swap 0 addprop $enddef\n\n\nGETLINK ( d -- d' )\n\n  Returns what object d is linked to, or #-1 if d is unlinked.  The\ninterpretation of link depends on the type of d: for an exit, returns\nthe room, player, action, or thing that the exit is linked\nto.  For a player or thing, it returns its `home', and for\nrooms returns the drop-to.\n\n\nGETLINKS ( d -- dn..d1 n )\n\n  Returns what objects d is metalinked to.  If d is an unlinked exit\nor a room with no dropto, getlinks returns 0.  A count of\n1 and #-3 is returned if the dropto is linked to HOME.\n\n\nGETLINKS_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every object that the\ngiven object is linked to.\n\n\nENTRANCES_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every object linked to the\ngiven object.\n\n\nSETLINK     ( d1 d2 -- )\n\n  Takes an exit dbref d1, and sets its destination to d2.  You must have\ncontrol of the exit, and if the exit is already linked, it must be unlinked\nfirst by doing setlink with #-1 as the destination.\n\n\nSETLINKS_ARRAY ( ref:Obj arr:Destinations -- )\n\n  Sets the destinations/dropto/home of \"Obj\" to \"Destinations\".  Objects may be\nunlinked by passing in an empty array.\n\n\nTIMESTAMPS ( d -- i i2 i3 i4 )\n\n  Returns the following for a program, the time created (i), the time last\nmodified (i2), the time last used (i3), and the number of uses(i4) for\nany object.\n\n\nSTATS ( d -- total rooms exits things programs players garbage )\n\n  Returns the number of objects owned by 'd', or the total objects in\nthe system if d is #-1. This is broken up into a total, rooms, exits,\nthings, programs, players, and garbage. This functions much as the\n@STATS command.\n(Needs Mucker Level 3)\n\n\nSTATS_ARRAY ( d -- a )\n\n  Returns, as an array, the number of objects owned by 'd', or the total\nobjects in the system if d is #-1. This is broken up into a total, rooms, exits,\nthings, programs, players, and garbage. This functions much as the\n@STATS command.\n(Needs Mucker Level 3)\n\n\nOBJMEM ( d -- i )\n\n  Returns the current number of bytes in use by the given object.\n\n\nCOPYOBJ ( d -- d' )\n\n  Creates a new object (returning d' on top of the stack), that is a\ncopy of object d, in the inventory of the current player.\nCan only create one object per program run, if under Mucker Level 3.\n\n\nCOPYPLAYER ( d1 s1 s2 -- d2 )\n\n  Creates a new player object with the name s1, and the password s2, and the\nproperties, flags, links, etc. of the template object d1.  This returns\nthe dbref of the newly created player object.\n\n\nTOADPLAYER ( d1 d2 -- )\n\n  @toads player d2, and chowns all their posessions to player d1.\nYou can't toad wizard players.\n\n\nNEWPLAYER ( s1 s2 -- d )\n\n  Creates a new player object, with the name s1, and the password s2.\nThis returns the dbref of the new player object.\n\n\nNEWROOM (d s -- d)\n\n  Takes the dbref of the parent and the name of the room. It returns the\ndbref of the created room. Owner is the person running the program.\nCan only create one object per program run, if under Mucker Level 3.\n\n\nNEWOBJECT (d s -- d)\n\n  Takes location and name and returns new thing's dbref.\nOwner is the person running the program.\nCan only create one object per program run, if under Mucker Level 3.\n\n\nNEWEXIT (d s -- d)\n\n  Takes location and name and returns new exit's dbref.\nOwner is the person running the program. Mucker level 3 and higher.\n\n\nNEWPROGRAM ( s -- d )\n\n  Creates a new program object with the given name, and returns its dbref.\nRequires wizbit.\n\n\nRECYCLE (d -- )\n\n  Recycles the given object d.  Will not recycle players, the global\nenvironment, the player starting room, or any currently running program.\n(Can recycle objects owned by uid if running with Mucker Level 3\npermissions.  Can recycle other people's items with wizbit)\n\n\nIGNORING? ( ref:Player1 ref:Player2 -- int:Result )\n\n  Returns true if either player has an ignore set for the other.  If one of\nthe players is an unquelled wizard this will always return false.\nThis primitive requires at least Mucker Level 3.\n\n\nIGNORE_ADD ( ref:Player ref:Who -- )\n\n  Adds the player \"Who\" to \"Player\"'s ignore list.\nThis primitive requires at least Mucker Level 3.\n\n\nIGNORE_DEL ( ref:Player ref:Who -- )\n\n  Removes the player \"Who\" from \"Player\"'s ignore list.\nThis primitive requires at least Mucker Level 3.\n\n\nARRAY_GET_IGNORELIST ( ref:Player -- list:Players )\n\n  Returns a list array of players \"Player\" is ignoring.\nThis primitive requires at least Mucker Level 3.\n\n\nDUMP ( -- b )\n\n  Triggers a database dump.  Returns boolean true if it was triggered, false\nif not.  The only reason a dump would fail to trigger is if there is already\na dump happening at the time you run this.\n\n  Fuzzball dumps are asynchronous, so if you want to know when the dump\nfinishes, you can wait for an event with eventId \"DUMP\".  This event is sent\nto all running processes.\n\n  This primitive requires a Wizard bit.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Time Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nTIME ( -- s m h )\n\n  Returns the time of day as integers on the stack, seconds, then minutes,\nthen hours.\n\n\nDATE ( -- i i i)\n\n  Returns the monthday, month, and year.  ie:  if it were February 6, 1992,\ndate would return 6 2 1992 as three integers on the stack.\n\n\nSYSTIME ( -- i )\n\n  Returns the number of seconds from Jan 1, 1970 GMT. This is compatible with\nthe system timestamps and may be broken down into useful values through\n'timesplit'.\n\n\nSYSTIME_PRECISE ( -- f )\n\n  Returns the number of seconds from Jan 1, 1970 GMT as a floating point\nnumber, with microsecond accuracy.\n\n\nGMTOFFSET ( -- i)\n\n  Returns the server's offset from UTC in seconds.\nResult is negative for time zones west of the prime meridian.\nResult is positive for time zones east of the prime meridian.\n\n\nTIMESPLIT ( i -- is im ih id im iy iw iyd )\n\n  Splits a systime value into 8 values in the following order: seconds,\nminutes, hours, monthday, month, year, weekday, yearday.  Weekday starts\nwith sunday as 1, and yearday is the day of the year (1-366).\n\n\nTIMEFMT (s i -- s)\n\n  Takes a format string and a SYSTIME integer and returns a string formatted\nwith the time.  The format string is ASCII text with formatting commands:\n\n  %a -- abbreviated weekday name\n  %A -- full weekday name\n  %b -- abbreviated month name\n  %B -- full month name\n  %c -- date and time (default: %a %b %e %T %Y)\n  %C -- year divided by 100 and truncated to an integer,\n        as a decimal number (00-99)\n  %d -- day of the month as a decimal number (01-31)\n  %D -- %m/%d/%y\n  %e -- day of the month as a decimal number (1-31);\n        a single digit is preceded by a space\n  %F -- %Y-%m-%d (ISO 8601 date)\n  %g -- last 2 digits of the ISO 8601 week-based year\n        as a decimal number (00-99)\n  %G -- ISO 8601 week-based year as a decimal number\n  %h -- %b\n  %H -- hour (24-hour clock) as a decimal number (00-23)\n  %I -- hour (12-hour clock) as a decimal number (01-12)\n  %j -- day of the year as a decimal number (001-366)\n  %m -- month as a decimal number (01-12)\n  %M -- minute as a decimal number (00-59)\n  %n -- new-line character\n  %p -- AM or PM\n  %r -- 12-hour clock time (default: %I:%M:%S %p)\n  %R -- %H:%M\n  %S -- second as a decimal number (00-60)\n  %t -- horizontal-tab character\n  %T -- %H:%M:%S (ISO 8601 time)\n  %u -- ISO 8601 weekday as a decimal number (1-7), where Monday is 1\n  %U -- week number of the year (the first Sunday as the first day of week 1)\n        as a decimal number (00-53)\n  %V -- ISO 8601 week number as a decimal number (01-53)\n  %w -- weekday as a decimal number (0-6), where Sunday is 0\n  %W -- week number of the year (the first Monday as the first day of week 1)\n        as a decimal number (00-53)\n  %x -- date (default: %m/%d/%y)\n  %X -- time (default: %T)\n  %y -- last 2 digits of the year as a decimal number (00-99)\n  %Y -- year as a decimal number\n  %z -- offset from UTC in the ISO 8601 format, or by no characters\n        if no time zone is determinable (example: -0500 for EST)\n  %Z -- time zone name or abbreviation, or by no characters if no time zone\n        is determinable (examples: UTC, EDT, PST)\n  %% -- % (percent sign)\n  TIMEFMT processes format strings with the C function strftime().  The above\nlist of conversion specifiers (formatting commands) is from the C (draft\nC17/C18) standard: some MUCKs may have more conversion specifiers available.\n\n\nCONVTIME (s -- i) \n\n  Converts time string from \"HH:MM:SS MO/DY/YR\" format to systime seconds.\n\n\nFMTTIME (s1 s2 -- i) \n\n  Converts time string s1 from the format given by s2 to systime seconds.\n\n\n\nSLEEP (i -- )\n\n  Makes the program pause here for 'i' seconds.  the value of i cannot\nbe negative.  If the sleep is for more than 0 seconds, then the program\nmay not thereafter use the READ primitive.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Process Management Operators\n----------------------------------------------------------------------------\n\n\n\n\nMODE ( -- i)\n\n  Returns an integer denoting the current multitasking mode.  This ignores\nBOUND bits on programs.  The integer this returns will be the same as\none of those defined by the standard $defines bg_mode, fg_mode, and\npr_mode, being background, foreground, and preempt mode, respectively.\n\n\nSETMODE (i -- )\n\n  Sets the current multitasking mode to the given mode.  The integer this\nuses will be the same as one of those defined by the standard $defines\nbg_mode, fg_mode, and pr_mode, being background, foreground, and preempt\nmode, respectively.  Programs set BOUND will run PREEMPT, ignoring this\nmode.\n\n\nPR_MODE ( -- i)\n\n  This is a standard built in $define.  This is used with MODE and\nSETMODE to show what mode the program is running in, or to set what mode\nit will run in.  For example, MODE returns an integer on the stack, that\nyou can compare against PR_MODE, FG_MODE, or BG_MODE, to determine what\nmode the program is in.  PR_MODE is preempt mode, and is defined as 0.\n\n\nFG_MODE ( -- i)\n\n  This is a standard built in $define.  This is used with MODE and\nSETMODE to show what mode the program is running in, or to set what mode\nit will run in.  For example, MODE returns an integer on the stack, that\nyou can compare against PR_MODE, FG_MODE, or BG_MODE, to determine what\nmode the program is in.  FG_MODE is foreground mode, and is defined as 1.\n\n\nBG_MODE ( -- i)\n\n  This is a standard built in $define.  This is used with MODE and\nSETMODE to show what mode the program is running in, or to set what mode\nit will run in.  For example, MODE returns an integer on the stack, that\nyou can compare against PR_MODE, FG_MODE, or BG_MODE, to determine what\nmode the program is in.  BG_MODE is background mode, and is defined as 2.\n\n\nPREEMPT ( -- )\n\n  Prevents a program from being swapped out to do multitasking.  Needed in\nsome cases to protect crucial data from being changed while it is being\nworked on.  A program will remain in preempt mode until its execution is\ncompleted.  Basically what this command does is to turn off multitasking,\nbut then you have a limit on how many instructions you can run without\nneeding either to pause with a SLEEP, or have a wizbit on the program.\n\n\nFOREGROUND ( -- )\n\n  To turn on multitasking, you can issue a foreground command.  While a\nprogram is in foreground mode, the server will be multitasking and\nhandling multiple programs at once, and input from other users, but it\nwill be blocking any input from the user of the program until the program\nfinishes.  You cannot foreground a program once it is running in the\nbackground. A program will stay in foreground mode until it finishes\nrunning or until you change the mode.\n\n\nBACKGROUND ( -- )\n\n  Another way to turn on multitasking is to use the background command.\nPrograms in the background let the program user go on and be able to do\nother things while waiting for the program to finish.  You cannot use\nthe READ command in a background program.  Once a program is put into\nbackground mode, you cannot set it into foreground or preempt mode.\nA program will remain in the background until it finishes execution.\n\n\nQUEUE (i d s -- i)\n\n  Takes a time in seconds, a program's dbref, and a parameter string.  It\nwill execute the given program with the given string as the only string on\nthe stack, after a delay of the given number of second.  Returns  the pid\nof the queued process, or 0 if the timequeue was full.\n(Requires Mucker Level 3)\n\n\nFORK ( -- i)\n\n  This primitive forks off a BACKGROUND (muf) process from the currently\nrunning program.  It returns the pid of the child process to the parent\nprocess, and returns a 0 to the child.  If the timequeue was full, then\nit returns a -1 to the parent process, and there is no child process.\n(Requires Mucker Level 3)\n\n\nKILL (i -- i)\n\n  Attempts to kill the process referred to by the given process ID.\nReturns 1 if the process existed, and 0 if it didn't.\nMust own the process if under Mucker Level 3.\n\n\nPID ( -- i)\n\n  Returns the process ID of the program that is currently running.\n\n\nISPID? (i -- i)\n\n  Takes a process id and checks to see if an event with that pid is in the\ntimequeue.  It returns 1 if it is, and 0 if it is not.  ispid? will also\nreturn 1 if the given process id is that of the currently running program.\nThis primitive requires at least mucker level 3.\n\n\nGETPIDS ( ref:obj -- list:pids )\n\n  If obj is a program dbref, this will return a list of the process IDs\nof every active process that has the given program in their call stack.\nIf obj is a player dbref, this will return a list of all the PIDs assigned to\nthat player.  If obj is a trigger dbref, it will return all the active PIDs\nassociated with that trigger.   And finally, if obj is #-1, then all active\nPIDs will be included in the array that gets returned.\n\n\nGETPIDINFO ( int:pid -- dict:info )\n\n  Given a valid active PID, returns a dictionary with information about\nthat process. The information returned is:\n    CALLED_DATA - The string the program was queued with, if any\n    CALLED_PROG - The program dbref# of the process' current call level.\n    CPU         - The amount of CPU time used up by the process.\n    DESCR       - The descriptor that called the program.\n    FILTERS     - Array of event strings being watched for.\n    INSTCNT     - The number of instructions run so far.\n    MLEVEL\t- The current MUCKER level.\n    NEXTRUN     - When the process is due to run again.\n    PID         - That process ID.\n    PLAYER      - The player dbref that PID belongs to.\n    STARTED     - Systime in seconds when the process started.\n    SUBTYPE     - Additional information about the process.\n    TRIG        - The trigger that called that process.\n    TYPE        - What type of process it is. MUF/MPI.\n\nRequires Mucker level 3 to check a pid other than current.\n\n\nINSTANCES ( d -- i )\n\n  Returns the number of active instances of the given program.  Ie: the\nnumber of active processes that are running, using the given program.\n\n\nCOMPILE ( d i1 -- i2 )\n\n  Compiles the given program.  If i1 is true, errors and warnings are printed\nout to the user.  If the program fails to compile, this returns 0.  If the\ncompile is successful, this returns the number of compiled instructions.\nThis will throw an error if the program has any current instances running.\n\n\nUNCOMPILE ( d -- )\n\n  Uncompiles the given muf program.  This will throw an error if the program\nhas any current instances running.\n\n\nCOMPILED? ( d -- i )\n\n  Returns 0 if the given program is not compiled.  Otherwise returns the\nnumber of compiled instructions.\n\n\nPROGRAM_GETLINES ( d i1 i2 -- a )\n\n  Returns a list array of strings containing the muf program lines in\nprogram d, from line i1 to line i2, inclusive.  If both i1 and i2 are\nzero, then the entire program is returned.  If i1 is zero, it is assumed\nto mean the first line.  If i2 is zero, it is assumed to mean the very\nlast line.  If i1 and i2 are the same, and non-zero, then only that line\nwill be returned, as a list array with a single string element.  The target\nprogram must be controlled by the current program's UID, be set VIEWABLE,\nor the current program must be running with wizard permissions.\n\n\nPROGRAM_SETLINES ( ref:Program list:Lines -- )\n\n  Sets all the lines of the given program to the lines in the array.\nThis primitive requires at least mucker level 4.\n\n\n\n\n\n----------------------------------------------------------------------------\n                      Connection Management Operators\n----------------------------------------------------------------------------\n\n\n\n\nDESCR ( -- i)\n\n  Returns the descriptor number that invoked this program.  The value\nreturned may be -1 in the case of listener or autostart programs.\n\n\nAWAKE? ( d -- i )\n\n  Passed a players dbref, returns the number of connections they have to\nthe game. This will be 0 if they are not connected.\n\n\nONLINE ( -- d ... i )\n\n  Returns a dbref for every player connected to the server, and lastly the\nnumber of connections.\n\n\nONLINE_ARRAY ( -- a )\n\n  Returns a single stack item, which is a list array, containing a dbref for\nevery player connected to the server.\n\n\nDESCRCOUNT ( -- i)\n\n  Returns how many connections to the server there are.\n(Requires Mucker Level 3)\n\n\nDESCRDBREF (i -- d)\n\n  Returns the dbref of the player connected to this descriptor number.\nThis may return #-1 if there is no player connected to the given descriptor.\n(Requires Mucker Level 3)\n\n\nDESCRTIME (i -- i)\n\n  Returns how many seconds the given descriptor connection has been connected\nto the server.  (Requires Mucker Level 3)\n\n\nDESCRIDLE (i -- i)\n\n  Returns how many seconds the descriptor connection has been idle.\n(Requires Mucker Level 3)\n\n\nDESCRLEASTIDLE (d -- i)\n\n  Returns the descriptor number for the least idle connection of the given\nplayer dbref, or -1 if the player is disconnected.  (Requires Mucker Level 3)\n\n\nDESCRMOSTIDLE (d -- i)\n\n  Returns the descriptor number for the most idle connection of the given\nplayer dbref, or -1 if the player is disconnected.  (Requires Mucker Level 3)\n\n\nDESCRSECURE? (d -- i)\n\n  Returns 1 if the descriptor number corresponds to a secure connection, and\n0 otherwise. (Requires Mucker Level 3)\n\n\nDESCRHOST (i -- s)\n\n  Returns the hostname of the descriptor connection. (wizbit only)\n\n\nDESCRUSER (i -- s)\n\n  Returns the username of the descriptor connection. (wizbit only)\n\n\nDESCRBOOT (i -- )\n\n  Takes a descriptor number and disconnects that connection from\nthe server.  Basically @boot for a specific descriptor connection.\n(wizbit only)\n\n\nDESCRNOTIFY (i s -- )\n\n  Sends a string to a specific descriptor connection, similar to NOTIFY.\n(Requires Mucker Level 3)\n\n\nFIRSTDESCR (d -- i)\n\n  Returns the first descriptor number associated with the given player.\nIf the player object is given as #-1, then this returns the first descriptor\nin the list of all connections.  Descriptors have no promised ordering as\nthey are basically operating system file handles; thus, this is probably\nonly useful when #-1 is given as a parameter but it maintains support for\nother dbrefs as well for compatibility reasons.\n\n\nNEXTDESCR (i -- i)\n\n  Takes a descriptor number, and returns the next connected descriptor\nnumber.  To get the first descriptor number, use '#-1 firstdescr'.  Between\nthese, you can step through the descriptors list.  If you try to use\nnextdescr on an invalid descriptor, it will return 0.  If you have\nreached the end of the descriptor list, it returns 0.\n(Requires Mucker Level 3)\n\n\nLASTDESCR (d -- i)\n\n  Returns the last descriptor number associated with the given player.\nIf the player object is given as #-1, then this returns the last descriptor\nin the list of all connections.  Descriptors have no promised ordering as\nthey are basically operating system file handles; thus, this is probably\nonly useful when #-1 is given as a parameter but it maintains support for\nother dbrefs as well for compatibility reasons.\n\n\nDESCRFLUSH (i -- )\n\n  Flushes the output text on the given descriptor.  If i is -1, flushes\noutput on all descriptors.\n(Requires Mucker Level 3)\n\n\nDESCRIPTORS (d -- ix...i1 i)\n\n  Takes a player dbref, or #-1, and returns the range of descriptor numbers\nassociated with that dbref (or all for #-1) with their count on top.\n\n\nDESCR_ARRAY (d -- a)\n\n  Takes a player dbref, or #-1, and returns a list array that contains the\ncurrent descriptor numbers associated with that dbref.  (Or all connected\ndescriptors, if the dbref is #-1)  This can return an empty list if there\nare no connections for that player.  This is effectively the same as the\nsequence 'descriptors array_make', but doesn't overflow the stack if too\nmany descriptors are available.  Descriptors are numbers that always stay\nthe same for a connection, while a connection# is the relative position\nin the WHO list of a connection.\n\n\nDESCR_SETUSER ( i d s -- i )\n\n  Reconnects descriptor i to the player with dbref d and password s.  It first\ndisconnects from the old dbref, then connects the new one, as if QUIT was\ntyped then the new character was logged in.  If the password doesn't match\nthe player's password, then it gives a permission denied error.  This\nreturns a 1 if successful or a 0 if the given descriptor wasn't found.\nWizbit only.\n\n\nDESCRBUFSIZE ( int:dscr -- int:bytes )\n\n  Returns the number of bytes of free space in the given descriptor's output\nbuffer.  If more data is written to the buffer than it has space for, the\ndata at the beginning of the buffer gets erased with an <output flushed>.\nRemember that each NOTIFY adds a CR LF byte pair at the end of each line.\nAlso note that \\r in lines gets translated to CR LF byte pairs.\n\n\n\n\n\n----------------------------------------------------------------------------\n                          Event Handling Operators\n----------------------------------------------------------------------------\n\n\n\n\nEVENT_COUNT ( -- i )\n\n  Returns the number of pending events waiting to be processed with EVENT_WAIT.\n\n\nEVENT_EXISTS ( s -- i )\n\n  Returns the number of pending events that have the given eventid type.\nThe given eventid type can be an smatch wildcard pattern.\n\n\nEVENT_WAIT ( -- ? s )\n\n  This is an inserver muf macro, that expands to '0 array_make event_waitfor'\nSee: EVENT_WAITFOR\n\n\nEVENT_WAITFOR (a -- ? s )\n\n  Waits for an event to occur that matches one of the eventIDs given in the\nstring list array.  The comparison is NOT case sensitive, and you may use\nsmatch wildcard patterns.  If a matching event isn't in the event queue\nalready, this will pause the MUF process until a matching event is added\nto the queue.  The first matching event to become available will be removed\nfrom the event queue.  This returns an event-specific context data item,\nand the matching eventID string.  If an empty list array is passed to this\nprimitive, then it will match any and all events, and return the first one\npending.\n\n  Timer events have eventID strings that are created by prepending \"TIMER.\"\nto the timerID passed to the TIMER_START primitive.  The context for Timer\nevents is an integer, representing the systime that the timer event was\nscheduled to occur at.  This might not be the time that the event is actually\nprocessed at, due to system delays.\n\n  GUI events have eventID strings that are created by prepending \"GUI.\" to\nthe dlogID of the dialog that generated the event.  The context for GUI\nevents is a dictionary contains the following keys:\n\ndescr      Holds the descriptor that generated the event.\ndlogid     Holds the DlogID of the dialog that generated the event.\nid         Holds the ID of the control that generated the event.\ndismissed  Holds 1 if the dialog was dismissed, 0 otherwise.\nevent      Holds the type of gui event.  ie: buttonpress, menuselect.\nvalues     Holds the dictionary of control values, keyed by control name.\ndata       Holds array of extra gui-event specific data.\n\n  User events have eventID strings that are created by prepending \"USER.\" to\nthe eventID given to the EVENT_SEND muf primitive.  The context for User\nevents is a dictionary containing the following keys:\n\ncaller_pid   Holds the integer Process ID of the sending program.\ncaller_prog  Holds the dbref of the sending program.\ndata         Holds the stack item sent by the EVENT_SEND primitive.\ndescr        Holds the descr that initiated the calling program.\ntrigger      Holds the trigger dbref that initiated the calling program.\nplayer       Holds the player dbref that ran the calling program.\nprog_uid     Holds the dbref of the player whose permissions the caller\n               program is running as.\n\n  MCP events have eventID strings formatted like \"MCP.packagename-mesgname\"\nwhere 'packagename' is the name of the MCP package being invoked, and\n'mesgname' is the specific message in the package being invoked.  If the\n'mesgname' is a null string, then the trailing '-' is removed.\n\n  Some example MCP eventIDs are:\n\n    MCP.com-belfry-image       Where pkg is 'com-belfry-image' & mesg is ''\n    MCP.com-belfry-image-view  Where pkg is 'com-belfry-image' & mesg is 'view'\n\nThe context for MCP events is a dictionary containing the following keys:\n\n    descr     Holds the integer descriptor of the sending connection.\n    package   Holds the string package name the MCP mesg is sent for.\n    message   Holds the string message name within that package.\n    args      Holds a dictionary, containing the message arguments.\n                Each mesg arg has an array list of strings as a value.\n\n  Read events have eventID strings of just \"READ\".  The context of Read events\nis the integer descriptor of the first waiting line to be READ.  To get the\nactual line sent by the user you need to use the READ primitive.\n\n  Process exit events have eventID strings that are created by prepending\n\"PROC.EXIT.\" to the pid of the watched process that exited.  The context\nis the pid of the process that exited.\n\n\nEVENT_SEND ( i s ? -- )\n\n  Sends a \"USER.\" event to the process referred to by the given pid.\nThe target process will receive an event that can be read with EVENT_WAIT.\nThe event type will be \"USER.\" with the given event id string appended\nto it.  The given event id string will be truncated at 32 characters.\nThe receiving process will be passed a dictionary with items \"data\" for\nthe given arbitrary stack element, \"caller_pid\" with the pid of the\nprocess calling EVENT_SEND, and \"caller_prog\" with the dbref of the\nprogram calling EVENT_SEND.\n\n  Ie: '23 \"foobar\" 3.1416 event_send' will send an event to process 23, with\nan eventid of \"USER.foobar\", and a floating point data value of 3.1416.\nThis primitive requires at least Mucker Level 3.\n\n\nTIMER_START ( i s -- )\n\n  Requests that a timer event be sent to this program in i seconds,\nwith an event name of \"TIMER.\"  with the given string appended.  ie:\n'5 \"one\" timer_start' will cause a \"TIMER.one\" event to be sent to\nthe program in 5 seconds.  This is used with EVENT_WAIT.  If a timer\nwith the given timerid already exists, it will be rescheduled to occur\nafter the new delay.  Timer ids will be truncated to 32 characters.\nEach MUF process can only have a limited number of timers, specified\nby the @tune setting 'process_timer_limit'.  Timers are listed on\nthe @ps timequeue with the PID of the timer's process in parentheses.\nTimers are one-shot events.  To get a repeating timer, you'll need to\nrestart it when you process a new timer event.\n\n\nTIMER_STOP ( s -- )\n\n  Stops the timer with the given timerid, if it exists.  If there is\nalready a timer event on the event queue, it will STAY on the queue\nuntil processed.  As with the timer_start primitive, the \"TIMER.\" part\nof the event name is assumed.  '\"first\" timer_stop' will stop the timer\ncreated by '5 \"first\" timer_start'.  Timer ids ARE case sensitive.\n\n\nWATCHPID (d -- )\n\n  Sends a \"PROC.EXIT.\" event to the current process when the process referred\nto by the given pid exits.  If the process process does not exist, the event\nwill be sent immediately.  The exit event can be retrieved by a call to\nEVENT_WAIT.  The event type will be \"PROC.EXIT.\" with the pid of the process\nappended to it.  The pid will also be returned as the data value from the\nevent.  This primitive requires at least Mucker Level 3.\n\n\n\n\n\n----------------------------------------------------------------------------\n                           MCP Support Operators\n----------------------------------------------------------------------------\n\n\n\n\nMCP_REGISTER ( strPkgName fltMinVers fltMaxVers -- )\n\n  Registers an MCP package so that clients can know what is supported.\nThe minimum and maximum versions supported are represented as floating\npoint numbers, with the minor version number being divided by 1000.\nFor example, an MCP package of version 1.1 is represented as 1.001,\nand a version of 1.23 is represented as 1.023.  This lets you use\nmathematical compares to check version numbers.\n\n\nMCP_REGISTER_EVENT ( strPkgName fltMinVers fltMaxVers -- )\n\n  Registers an MCP package so that clients can know what is supported,\nand marks this process as wanting to receive MCP messages as Muf Events.\nThese events can be read with EVENT_WAIT, and will have event ids starting\nwith \"MCP.\", followed by the package and message names.  The event data\nwill be a dictionary, containing \"descr\", \"package\", \"message\", and \"args\"\nelements.  The args element will have a dictionary of message arguments\nas its value.  The minimum and maximum package versions supported are\nrepresented as floating point numbers, with the minor version number being\ndivided by 1000.  For example, an MCP package of version 1.1 is represented\nas 1.001, and a version of 1.23 is represented as 1.023.  This lets you\nuse arithmetic compares to check version numbers.  Since this primitive\narranges for MCP messages to be received as muf events, there is no need\nto use the MCP_BIND primitive with this.  A side benefit is that _any_ MCP\nmessage sent for this package can be caught, not just the ones you bound.\nAlso, the process that will handle the events is kept alive, so your data\nstored in variables, or on the stack, is kept.\n\n\nMCP_BIND ( strPkgName strMesgName addrCallback -- )\n\n  Binds a specific message, so if it is received, the given function is\ncalled.  The callback function is assumed to accept the args:\n( intDescr dictArgs -- ) where dictArgs is a dictionary array contain-\ning key-value pairs that represent the arguments of the message.  Each\nargument can either have a string value, or a list array of strings,\nwhere the list array is used for multi-line values.\n\n\nMCP_SUPPORTS ( intDescr strPkgName -- fltVersion )\n\n  Returns the version number of this package that is supported by this\nconnection descriptor.  If this package isn't supported, returns 0.0\nThe version number is represented as a floating point number, with the\nminor version number being divided by 1000.  For example, an MCP\npackage of version 1.1 is represented as 1.001, and a version of 1.23\nis represented as 1.023.  This lets you use mathematical compares to\ncheck version numbers.\n\n\nMCP_SEND ( intDescr strPkgName strMsgName dictArgs -- )\n\n  Sends an MCP message for the given package to the given connection\ndescriptor.  dictArgs contains key-value pairs, where each key is\nan argument name, and the value is the argument value.  Values can\nbe strings, floats, dbrefs, integers, or array lists of strings.\nThey all get translated into an appropriate string format before\ngetting sent.\n\n\n\n\n\n----------------------------------------------------------------------------\n                           GUI Support Operators\n----------------------------------------------------------------------------\n\n\n\n\nGUI_AVAILABLE (intDescr -- fltVersion)\n\n  Returns the floating point version number of the MCP GUI protocol\nsupported by the given descriptor's connection.  The version is\nencoded in the number such that major version 8, minor version 12\nis represented as 8.012.  If the MCP protocol is not available on\nthat descriptor, then 0.0 is returned.\n\n\nGUI_DLOG_CREATE (intDescr strType strTitle dictArgs -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then this\nprimitive can be used to generate a dialog on their screen.  The intDescr\nis the integer descriptor of the connection to show the dialog on. The\nstrType is the type of the dialog to create.  Currently, the only options\nfor strType are D_SIMPLE, D_TABBED, or D_HELPER.  The strTitle argument\nis the title to show in the titlebar of the dialog.  dictArgs is a\ndictionary array that contains extra optional arguments for creating\nthe dialog.\n\n  This primitive returns a string containing the dialogid, used by other\nprims to add controls or make various changes.  This dialog will be\nhidden and not shown to the user until it has been displayed with the\nGUI_DLOG_SHOW command.\n\n  Supported optional args are:\n    names      list of user-viewable pane names for D_TABBED & D_HELPER dlogs.\n    panes      list of pane ids for D_TABBED and D_HELPER dialogs.\n    width      requested width of dialog in pixels.\n    height     requested height of dialog in pixels.\n    resizable  allows resizing in \"x\", \"y\", or \"both\" dimensions.\n    minwidth   minimum width of window in pixels.\n    minheight  minimum height of window in pixels.\n    maxwidth   maximum width of window in pixels.\n    maxheight  maximum height of window in pixels.\n\n\nGUI_DLOG_SIMPLE (intDescr strTitle -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then\nthis primitive can be used to generate a simple dialog on their\nscreen.  By \"simple\" I mean just an empty window with no controls.\nThe intDescr argument specifies what connection descriptor to\ncreate the dialog for (ie: what user's screen to show it on), and\nthe strTitle arg specifies what the title of the dialog will be.\nThis returns a string containing the dialogid, used by other prims\nto add controls or make various changes.  This dialog will be hidden\nand not shown to the user until it has been displayed with the\nGUI_DLOG_SHOW command.  GUI_DLOG_SIMPLE is actually an inserver\nconvenience macro that uses GUI_DLOG_CREATE.\n\n\nGUI_DLOG_TABBED (intDescr strTitle dictPages -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then\nthis primitive can be used to generate a tabbed dialog on their\nscreen.  By \"tabbed\" I mean a window with a tabbed notebook, similar\nto Win95 \"property sheets\", with three standard buttons at the bottom.\nThe standard buttons return values of \"_ok\", \"_cancel\", and \"_apply\".\nThe intDescr argument specifies what connection descriptor to create\nthe dialog for (ie: what user's screen to show it on).  The strTitle\narg specifies what the title of the dialog will be.  The dictPages\nargument is a dictionary array of page ids and display names to be\ncreated.  (ids as dictionary keys, display names as vals) This prim\nreturns a string containing the dialogid, used by other prims to add\ncontrols or make various changes.  When you create a new control, you\ncan specify which page to put it in by passing a pageid in as the\nvalue of the \"pane\" argument.  This dialog will be hidden and not\nshown to the user until it has been displayed with the GUI_DLOG_SHOW\ncommand.  GUI_DLOG_SIMPLE is actually an inserver convenience macro\nthat uses GUI_DLOG_CREATE.\n\n\nGUI_DLOG_HELPER (intDescr strTitle dictPages -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then\nthis primitive can be used to generate a helper dialog on their\nscreen.  By \"helper\" I mean a dialog similar to a Win95 wizard dialog.\nThe standard buttons return values of \"_cancel\", and \"_finish\".\nThe intDescr argument specifies what connection descriptor to\ncreate the dialog for (ie: what user's screen to show it on), and\nthe strTitle arg specifies what the title of the dialog will be.\nThe dictPages argument is a dictionary array of page ids and display\nnames to be created.  (ids as dictionary keys, display names as vals)\nThis returns a string containing the dialogid, used by other prims\nto add controls or make various changes.  When you create a new\ncontrol, you can specify which page to put it in by passing a pageid\nin as the value of the \"pane\" argument.  This dialog will be hidden\nand not shown to the user until it has been displayed with the\nGUI_DLOG_SHOW command.  GUI_DLOG_SIMPLE is actually an inserver\nconvenience macro that uses GUI_DLOG_CREATE.\n\n\nGUI_DLOG_SHOW (strDlogID -- )\n\n  Forces a given dialog to be shown to the user.  The strDlogId is what\nwas returned by the GUI_DLOG_CREATE (or similar) command.\n\n\nGUI_DLOG_CLOSE (strDlogID -- )\n\n  Forces a given dialog to be closed and destroyed.  The strDlogId is\nwhat was returned by the GUI_DLOG_CREATE (or similar) command.\n\n\nGUI_CTRL_CREATE (strDlogID strType strCtrlID dictArgs -- )\n\n  Creates a new control in a given dialog.  strDlogID contains the dlogid\nreturned from a GUI_DLOG_SIMPLE (or similar) command.  strType contains\nthe control type.  To make debugging easier and faster, MUF $defs have\nbeen provided for each control type.  They are:\nC_DATUM, C_LABEL, C_IMAGE, C_HRULE, C_VRULE, C_BUTTON, C_CHECKBOX,\nC_RADIOBTN, C_EDIT, C_MULTIEDIT, C_COMBOBOX, C_SPINNER, C_SCALE,\nC_LISTBOX, C_MENU, C_FRAME, C_NOTEBOOK.\nIf you use these instead of the actual type name strings, then if you\nmistype one, it will throw an error when trying to compile, instead of\nwhen you try to run it.  The strCtrlID arg is the id to give the control,\nfor use in reading the values back later, or modifying the control.\ndictArgs is used to pass any other arguments needed to create the control.\nThis will be used by almost all controls.  It is a dictionary array that\ncontains argnames as keys, each with an argument value.\n\n\nGUI_VALUES_GET (strDlogID -- dictValues)\n\n  Returns a dictionary containing all the control values for the given\ndialog.  The keys are the control ids.\n\n\nGUI_VALUE_GET (strDlogID strCtrlID -- arrValue)\n\n  This gets the current value of the given GUI control, and returns it as a\nstring list array.\n\n\nGUI_VALUE_SET (strDlogID strCtrlID strValue -- )\n\n  Sets the value of a given control in a given dialog.\n\n\nGUI_CTRL_COMMAND (strDlogID strCtrlID strCommand dictArgs -- )\n\n  This is the generic primitive for executing a GUI control specific command.\nThe dictionary contains the arguments for the given command.\n\nAt the time of this writing, the following commands are supported:\n\n\"insert\" Inserts text or list items into the given control.\n        Takes the following arguments:\n        \"values\" list of values or text to insert.\n        \"before\" position in widget to insert before.  Defaults to \"end\".\n\n\"delete\" Deletes text or list items from the given control.\n        Takes the following arguments if the widget is a listbox:\n        \"items\" The list of listbox items to delete, given by index.\n        Takes the following arguments if the widget is not a listbox:\n        \"first\" gives the first item to delete.\n        \"last\"  gives the last item of the range to delete.  If not given,\n                this defaults to the same value as \"first\".\n\n\"select\" Selects text or list items in the given control.\n        Takes the following arguments if the widget is a listbox:\n        \"items\" The list of listbox items to select, given by index.\n                All other items will be deselected.\n        Takes the following arguments if the widget is not a listbox:\n        \"first\" gives the first character to select.\n        \"last\"  gives the last character of the range to select.  If not\n                given, this defaults to the same value as \"first\".\n\n\"show\"   Scrolls the given item or character into view.\n        Takes the following arguments:\n        \"position\" The item or character position to make visible.\n\n\"cursor\" Moves the cursor of the given control.\n        Takes the following arguments:\n        \"position\" The item or character to move the cursor to or before.\n\n\nMCP GUI Options:\n\n  The MCP GUI package has several common options used when creating controls\nin dialog.  These options are common to almost all control types.  They\nare as follows:\n\n    value     Holds the value of the control.\n    valname   Specifies the name used with GUI_VALUE_GET/SET, to refer to the\n            value for this control.  Multiple controls can share the same\n            valname, in the case of radio buttons and the like.\n    report    If set to 1, image, checkbox, and radiobutton controls will send\n            a 'buttonpress' event when the user clicks on them.  All other\n            control types send a 'valchanged' gui event when their value\n            is changed If the value is changed several times within a few\n            seconds, only the final value is guaranteed to have a valchanged\n            event.  It is possible to receive valchanged events even though\n            the value appears to have not changed.\n    pane      The pane in which to place this control.  Some controls, like\n            the notebook or frame controls, create new panes in which you\n            can place controls.\n    newline   If 1, next control will be at the beginning of the next row.\n            If 0, next control will be in the next column to the right,\n            taking into account colspan and colskip.  Defaults to 1.\n    sticky    Which sides of the cell this control sticks to.  This is a\n            string with any or all of the letters 'n', 's', 'e', or 'w',\n            corresponding to north, south, east, and west.\n    row       If given, forces the control to be placed in the given row.\n    column    If given, forces the control to be placed in the given column.\n    rowspan   Number of rows this control spans across.  Defaults to 1.\n    colspan   Number of columns this control spans across.  Defaults to 1.\n    colskip   Number of columns to skip before placing this control.\n            Defaults to 0.\n    minwidth  Minimum width of control in pixels.\n    minheight Minimum width of control in pixels.\n    hweight   How much the starting column of this control should expand.\n            When filling unused space, if there are two columns, one with\n            hweight 2 and the other with hweight 1, then the column with\n            hweight 2 will be expanded twice as much as the other column.\n            The default hweight is 0.  Note that the last control in the\n            given column sets the hweight for the column.  If no hweights\n            are given in a pane, then if the pane is forced to be wider\n            than the contained controls, the empty space will be placed\n            in the right side of the pane.\n    vweight   How much the starting row of this control should expand.\n            When filling unused space, if there are two rows, one with\n            vweight 2 and the other with vweight 1, then the row with\n            vweight 2 will be expanded twice as much as the other row.\n            The default hweight is 0.  Note that the last control in the\n            given row sets the vweight for the row.  If no vweights\n            are given in a pane, then if the pane is forced to be taller\n            than the contained controls, the empty space will be placed\n            in the bottom of the pane.\n    toppad    Number of pixels padding to add above this control.\n    leftpad   Number of pixels padding to add to the left of this control.\n\n\nC_DATUM ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Datum control in a GUI dialog.  The Datum control is a non-\nvisible control that just holds a value.  It's useful for keeping program\nstate information.\nThe control has no control-specific options.\n\n\nC_MENU ( -- s)\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a menu control in a GUI dialog.  The menu control is a pull-down\nmenu that a user can select commands from.  It can contain labels, hrules,\nbuttons, checkboxes, radiobuttons, and other menus.\nThe control options specific to this type of control are:\n    text    The text to display as the user-visible name of this menu. For\n            example: \"Settings\", \"Help\", etc.\n    pane    The id of the menu in which to place this menu as a cascading\n            menu.  If specified as \"\", then this is a toplevel menu.\n\n\nC_LABEL ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a text label control in a GUI dialog.  The label control is just\na text label, nothing more.\nThe control options specific to this type of control are:\n    value    Contains the text to be displayed.\n    justify  Which way to justify the text, if word wrapped.  Can be one of\n            left, right, or center.\n    maxwidth The max width in pixels for the label, before it word wraps.\n\n\nC_IMAGE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create an image control in a GUI dialog.  The image control is a picture\nwhose image is loaded from a URL.\nThe control options specific to this type of control are:\n    value    Holds the url of the image to be displayed.\n    width    The width of the image in pixels.  This is required.\n    height   The height of the image in pixels.  This is required.\n\n\nC_HRULE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Horizontal Rule control in a GUI dialog.\nThe hrule control is just a horizontal line, nothing more.\nThe control options specific to this type of control are:\n    height   Number of pixels of vertical thickness of the horizontal line.\n\n\nC_VRULE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Vertical Rule control in a GUI dialog.\nThe vrule control is just a vertical line, nothing more.\nThe control options specific to this type of control are:\n    width    Number of pixels of horizontal thickness of the vertical line.\n\n\nC_BUTTON ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Button control in a GUI dialog.\nThe Button control is a simple button the user can press.\nThe control options specific to this type of control are:\n    text     The text label that will show on the button face.\n    width    Number of characters text the button should be able to hold.\n    dismiss  If 1, the dialog will be dismissed when this button is pressed.\n            Defaults to 1.\n\n\nC_CHECKBOX ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a CheckBox control in a GUI dialog.\nThe CheckBox control is used for indicating simple \"on/off\" boolean settings.\nThe control options specific to this type of control are:\n    text     The text label that will show to the right of the checkbox.\n    onvalue  The value this control should have when checked.\n    offvalue The value this control should have when not checked.\n    value    The current state/value of the control.  This should match either\n            the value of the \"onvalue\" or \"offvalue\" argument.\n\n\nC_RADIOBTN ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a radio button control in a GUI dialog.\nThe radio button control is used for selecting one of a number of options.\nThe control options specific to this type of control are:\n    text     The text label that will show to the right of the radio button.\n    valname  The name used to refer to the value of this radio button group.\n            A radio button group is defined as radio buttons that share the\n            same valname.\n    selvalue The value of this radio button group, when this is selected.\n    value    The current state/value of the radio button group.  This should\n            match one of the selvalues of a radio button in this group.\n\n\nC_EDIT ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a single-line text Edit control in a GUI dialog.\nThe Edit control is used for single-line text string editing.\nThe control options specific to this type of control are:\n    text     The text label that will show to the left of the control.\n            Defaults to \"\" (no label).  If there is a label, then this\n            control will be split across two columns, with the label in\n            the first one, the edit control in the second.\n    value    The current contents/value of the control.\n    maxlen   The maximum string length allowed.  Defaults to 1024 chars.\n    width    Number of average character widths wide this control should be.\n            Defaults to 40 characters wide.\n    height   Number of lines high this control will be.  Defaults to 1.\n            If this is greater than 1, then text will wrap as you type it,\n            but you still won't be able to insert carriage returns.\n\n\nC_MULTIEDIT ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Multi-line text Edit control in a GUI dialog.\nThe MultiEdit control is used for multi-line text string editing.\nThe control options specific to this type of control are:\n    value    The current contents/value of the control.\n    width    Number of average character widths wide this control should be.\n            Defaults to 40 characters wide.\n    height   Number of lines high this control will be.  Defaults to 1.\n    font     Specifies whether the font used is \"fixed\" or \"proportional\".\n\n\nC_COMBOBOX ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Win95 style combobox with a pulldown menu of options.\nThe ComboBox control is used for selecting from multiple standard options\nin a compact form factor.  Optionally the user can enter arbitrary data.\nThe control options specific to this type of control are:\n    text     The text label that will show to the left of the control.\n            Defaults to \"\" (no label).  If there is a label, then this\n            control will be split across two columns, with the label in\n            the first one, the combobox control in the second.\n    value    The current contents/value of the control.\n    width    Number of average character widths wide this control should be.\n            Defaults to 20 characters wide.\n    options  Contains a list of entries for the combobox pulldown menu, one\n            per line.\n    editable If 1, the user can edit the value arbitrarily.  If 0, then the\n            user can only pick a value from the combobox pulldown menu.\n            Defaults to 0\n    sorted   Causes the contents of the pulldown menu to be auto-sorted.\n\n\nC_LISTBOX ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a ListBox control in a GUI dialog.  The ListBox control is used\nfor selecting one or more entries from a list of options.\nThe control options specific to this type of control are:\n    value    The list of the currently selected list items, given as a list\n            of integers that refer to list positions.  0 is the first item.\n    font     Specifies whether the font used is \"fixed\" or \"proportional\".\n    width    Number of average character widths wide this control should be.\n            Defaults to 40 characters wide.\n    height   Number of lines high this control will be.  Defaults to 10.\n    options  The list of entries for the listbox contents, one per line.\n    selectmode  One of \"single\", \"multiple\", or \"extended\".  Specifies how\n            list item selection is performed, and whether more than one item\n            can be selected at a time.\n\n\nC_SPINNER ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Spinner control in a GUI dialog.  The Spinner control is used\nfor setting an integer value, that can be incremented and decremented via\nup and down buttons.\nThe control options specific to this type of control are:\n    value    The current integer value of the control.\n    text     If given, makes a label with the given text next to the spinner.\n    minval   The minimum integer value that this control can be set to.\n    maxval   The maximum integer value that this control can be set to.\n    width    Number of digits that this control should be able to hold.\n            Defaults to 12 digits.\n\n\nC_SCALE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Scale control in a GUI dialog.  The Scale control is used for\nsetting a floating point value, that can be changed by moving a slider.\nThe control options specific to this type of control are:\n    value      The current floating point value of the control.\n    text       If given, makes a label with the given text next to the scale.\n    minval     The minimum value that this control can be set to.\n    maxval     The maximum value that this control can be set to.\n    resolution This is the smallest change available via the slider.\n                Defaults to 1.\n    bigincrement  How much to change the value when the user clicks in the\n                bar on either side of the slider.  Defaults to 10.\n    digits     The number of significant digits of resolution for the value.\n    orient     The orientation, \"horiz\" or \"vert\".  (Defaults to horiz.)\n    length     The length of the long axis of the scale, in pixels.\n            Defaults to 100 pixels.\n    width      The length of the short axis of the scale, in pixels.\n            Defaults to 15 pixels.\n\n\nC_FRAME ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a frame control in a GUI dialog.  Frame controls are used to\ncontain and organize other controls.  Frames can be either invisible\ncontainers that just organize the positions of other controls, or they\ncan be visible groupboxes with borders and labels.\nThe control options specific to this type of control are:\n    text        If set, the frame, as a groupbox, will have the given label.\n    visible     If set to 1, causes a border to be drawn around the frame.\n    collapsible This, is set to 1, allows the group box to be collapsed.\n    collapsed   If the frame is collapsible, this sets the state to collapsed.\n\n\nC_NOTEBOOK ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE to\ncreate a tabbed notebook control in a GUI dialog.  Tabbed notebook controls\nare used to contain and organize other controls in multiple pages that the\nuser can select between.\nThe control options specific to this type of control are:\n    panes       The list of pane ids to create.  Those are used by other\n                controls, when you wish to specify which pane the control\n                is in.\n    names       The list of names that should be displayed on the pane's tabs.\n                The first name should be for the first pane, the second name\n                should be for the second name, etc.\n    width       The minimum width of the notebook's client area, in pixels.\n    height      The minimum height of the notebook's client area, in pixels.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Exception Handling\n----------------------------------------------------------------------------\n\n\n\n\nTRY ( i -- )\nCATCH ( -- s ) or CATCH_DETAILED ( -- a )\nENDCATCH ( -- )\n\n  The TRY statement marks the start of the TRY-CATCH block, and locks all\nbut the top i stack items against removal or alteration.  If code inside\nof a TRY-CATCH block gets an error, or attempts to remove or alter locked\nstack items, then execution immediately jumps to the CATCH statement.\nIf, instead, execution reaches the end of the TRY-CATCH block without\nerror, then the stack is unlocked, and execution is resumed after the\nENDCATCH statement.\n\n  On an error, the CATCH statement will pop off all stack items that were\nnot locked, to return the stack to a known state.  The stack will then\nbe unlocked, and the thrown error string will be pushed onto the stack.\nFinally, the code inside the CATCH-ENDCATCH block will then be executed.\nIf you have nested TRY-CATCH blocks, then the most recent TRY-CATCH\nblock will catch the error thrown.  If the error is thrown in another\ncalled function or program, then those calls are unwound back to the\nmost recent TRY-CATCH block.\n\n  The CATCH_DETAILED statement can be used in place of the CATCH statement.\nIt behaves identically to CATCH, except it pushes a dictionary onto the\nstack, instead of a string.  This dictionary holds much more detailed\ninformation about the thrown exception.  The following dictionary entries\nare currently supported:\n\n    \"error\"    The error message string, like what CATCH returns.\n    \"instr\"    The name string of the instruction which threw the error.\n    \"line\"     The integer program line number where the error was thrown.\n    \"program\"  The dbref of the program in which the error was thrown.\n\n  The ABORT primitive may be used to throw an arbitrary error anywhere.\nIf you need to re-propagate an error, you can use ABORT.\n\nExample code:\n    : get_a_prop ( d s -- s )\n        2 TRY\n            getpropstr\n        CATCH\n            pop (We got an error trying to read the prop.  Ignore it.)\n            \"\"\n        ENDCATCH\n    ;\n\n\nABORT ( s -- )\n\n  Aborts the MUF program with an error.  ie:  '\"Bad vibes.\" abort' would\nStop the MUF program and tell the user a message like:\nProgrammer error.  Please tell Revar the following message:\n#1234 (line 23) ABORT: Bad vibes.\n\n\nCHECKARGS (??? s -- )\n\n  Takes a string argument that contains an expression that is used\nto test the arguments on the stack below the given string.  If they\ndo not match what the expression says should be there, then it aborts\nthe running program with an appropriate Program Error Message.  The\nexpression is formed from single character argument tests that refer\nto different argument types.  The tests are:\n\n  a - function address.\n  d - dbref.  (#-1, #-2, #-3 are okay)\n  D - valid, non-garbage dbref.  (#-1, #-2 NOT allowed.  #-3 is okay)\n  e - exit dbref.  (#-1, #-2 allowed)\n  E - exit dbref.  (#-1, #-2 NOT allowed)\n  f - program dbref.  (#-1, #-2 allowed)\n  F - program dbref.  (#-1, #-2 NOT allowed)\n  i - integer.\n  l - lock boolean expression.\n  n - floating point number.\n  p - player dbref.  (#-1, #-2 allowed)\n  P - player dbref.  (#-1, #-2 NOT allowed)\n  r - room dbref.  (#-1, #-2 allowed)  (#-3 is a room)\n  R - room dbref.  (#-1, #-2 NOT allowed)  (#-3 is a room)\n  s - string.\n  S - non-null string.\n  t - thing dbref.  (#-1, #-2 allowed)\n  T - thing dbref.  (#-1, #-2 NOT allowed)\n  v - variable.\n  x - dictionary.\n  y - array.  (dictionary allowed)\n  Y - array.  (dictionary NOT allowed)\n  ? - any stack item type.\n\n  Tests can be repeated multiple times by following the test with a number.\nie: '\"i12\" checkargs' would test the stack for 12 integers.\n\n  The last test in the string expression will be done on the top stack item.\nTests are done from the top of the stack down, in order, so the last test\nthat fails in a string expression will be the one that the Program Error\nwill be given for.  ie: '\"sdSi\" checkargs' will test that the top stack\nitem is an integer, then it tests that the next item down is a non-null\nstring, then it tests the third item from the top to see if it is a dbref,\nand lastly it tests to make sure that the 4th item from the top is a string.\n\n  Spaces are ignored, so \"s d i\" is the same as \"sdi\".  However, multipliers\nare ignored if they follow a space, so \"s 4d i\" is also the same as \"sdi\".\nThis is because you are basically telling it to repeat the space 4 times,\nand since spaces are ignored, it has no effect.\n\n  If you have a function that takes a stack item of any type, you can use\nthe \"?\" test.  \"?\" will match a string, integer, dbref, or any other type.\n\n  Since sometimes arguments are passed in ranges, such as the way that the\nexplode primitive returns multiple strings with an integer count on top,\nthere is a way to group arguments, to show that you expect to receive a\nrange of that type.  ie: '\"{s}\" checkargs' would test the stack for a set\nof strings like '\"first\" \"second\" \"third\" \"fourth\" 4' where the top stack\nitem tells how many strings to expect within the range.\n\n  Sometimes a function takes a range of paired arguments, such as:\n'\"one\" 1 \"two\" 2 \"three\" 3 \"four\" 4 4' where the count on the top of the\nrange refers to the number of pairs.  To test for the range given above,\nyou would use '\"{si}\" checkargs' to tell it that you want to check for\na range of paired strings and integers.  You can group as many argument\ntests together in a range as you would like.  ie: you could use \"{sida}\"\nas an expression to test for a range of related strings, integers, dbrefs,\nand function addresses.\n\n  Since the argument multipliers refer to the previous test OR range, you\ncan test for two string ranges with the test '\"{s}2\" checkargs'.  ie:\nIt would succeed on a stack of: '\"one\" \"two\" \"three\" 3 \"four\" \"five\" 2'.\n'\"{s2}\" checkargs', however, would test for one range of paired strings.\nie: It would succeed with a stack of: '\"one\" \"1\" \"two\" \"2\" \"three\" \"3\" 3'.\n\n  If, for some reason, you need to pass a range of ranges to a function,\nyou can test for it by nesting the braces.  ie: '\"{{s}}\" checkargs'\n\n  Now, as one last example, the primitive notify_exclude, if we were to test\nthe arguments passed to it manually, would use the test '\"R{p}s\" checkargs'\nto test for a valid room dbref, a range of player dbrefs or #-1s, and a\nstring.\n\n\n\n\n\n----------------------------------------------------------------------------\n                                 Debugging\n----------------------------------------------------------------------------\n\n\n\n\nDEBUG_ON ( -- )\n\n  Turns the programs debug stack trace on.\n\n\nDEBUG_OFF ( -- )\n\n  Turns the programs debug stack trace off.\n\n\nDEBUG_LINE ( -- )\n\n  Displays a single line of debug stack trace if the player running the program\ncontrols it.\n\n\nDEBUGGER_BREAK ( -- )\n\n  If the user controls the currently running program, and the program hasn't\never backgrounded, this will force the program into the interactive MUF\ndebugger at the current location.  If the user was already in the MUF\ndebugger, this will force a breakpoint stop at the current location.\n\n\nThe MUF Debugger:\n\n  To use the interactive debugger, set the ZOMBIE (Z) flag on a program.  When\nyou run a programm you own which is set ZOMBIE, you will be placed in the\ninteractive MUF debugger.\n  When you enter the debugger, the program counter will be placed at the entry\npoint of the MUF.  This should always be the start of a function.  From\nthere, you may set breakpoints, examine or change the stack or variables,\nlist lines of code, step through, or continue execution.\n  Every time execution halts and returns you to the debugger, the argument\nstack is displayed, as well as a dump of the current line.  If execution\nis at the beginning of the line, the actual line of source will be\ndisplayed, otherwise the compiled instructions will be displayed with the\ncurrent instruction marked by surrounding braces.\n\n\nDebugger commands:\n\n  cont            continues execution until a breakpoint is hit.\n  finish          completes execution of current function.\n  step [NUM]      executes one (or NUM, 1) lines of muf.\n  stepi [NUM]     executes one (or NUM, 1) muf instructions.\n  next [NUM]      like step, except skips CALL and EXECUTE.\n  nexti [NUM]     like stepi, except skips CALL and EXECUTE.\n  break LINE#     sets breakpoint at given LINE number.\n  break FUNCNAME  sets breakpoint at start of given function.\n  breaks          lists all currently set breakpoints.\n  delete NUM      deletes breakpoint by NUM, as listed by 'breaks'\n  where [LEVS]    displays function call backtrace of up to num levels deep.\n  stack [NUM]     shows the top num items on the stack.\n  print v#        displays the value of given global variable #.\n  print lv#       displays the value of given local variable #.\n  trace [on|off]  turns on/off debug stack tracing.\n  list [L1,[L2]]  lists source code of given line range.\n  list FUNCNAME   lists source code of given function.\n  listi [L1,[L2]] lists instructions in given line range.\n  listi FUNCNAME  lists instructions in given function.\n  words           lists all function word names in program.\n  words PATTERN   lists all function word names that match PATTERN.\n  exec FUNCNAME   calls given function with the current stack data.\n  prim PRIMITIVE  executes given primitive with current stack data.\n  push DATA       pushes an int, dbref, var, or string onto the stack.\n  pop             pops top data item off the stack.\n  help            displays this help screen.\n  quit            stop execution here.\n\n\nBreakpoints:\n\n  Breakpoints can be set on a specefic line number, or on execution of a\nspecific word.  To set a breakpoint, simply enter 'break LINE', as in\n'break 123', or 'break WORD', as in 'break do-something'.  To list current\nbreakpoints, simply enter the command 'breaks'.  To delete a breakpoint,\n'delete NUM', where NUM is the number 'breaks' listed for that breakpoint.\nAn implied breakpoint is always triggered on return of words after an\nexecute, or an EXEC, when the line they were called from was stepped with\nnext.\n  A breakpoint is triggered after execution of the program has continued with\neither 'continue', 'finish', or while in a word called when 'next' or\n'nexti' is used.\n\n\nInstruction notation as given by DEBUG dumps and the MUF debugger:\n\n    PRIMITIVE:      A call to that primitive. (As in POP or ROTATE)\n    NUM:            An integer. (As in 5 or -154)\n    #dbref:         An object dbref. (As in #1 or #63516)\n    \"Text\":         A string.  (As in \"Wizard\" or \"Hello world!\") If it is\n                    followed by _, there is more in the string than shown.\n    [Lock]:         A lock in its native structure. (As in [#0|!#0])\n    VNUM:           Variable number NUM. (As in V0 or V10)\n    LVNUM:          Local variable number NUM. (As in LV2 or LV5)\n    SVNUM:          Scoped function variable number NUM. (As in SV2 or SV5)\n    (word):         The start of a word. (As in (do-something))\n    'word:          The address of word. (As in 'do-something)\n    '#dbref'word:   The address of word in another program.\n                    (As in '#2345'do-something)\n    EXEC->word:     A subroutine call to word. (As in EXEC->do-something)\n    JMP->word:      A jump to word. (As in JMP->do-something)\n    JMP->lineNUM:   An internal jump used by IF-ELSE-THEN and loops.\n                    (As in JMP->line9)\n    IF->lineNUM:    An internal IF jump.  If the top stack item is 0, the jump\n                    occurs, otherwise this is just a no-op. (As in IF->line9)\n    ???:            An unknown instruction type. (As in ???)\n    ???<file:line>: An instruction that has been freed.  If you see this please\n                    report it to the current server code maintainer.\n                    (As in ???<p_db.c:1042>)\n\nSome tokens are just used as placeholders, and disappear as soon as the MUF\nis compiled.  These are BEGIN, and THEN.  In addition, FOR loops will\nproduce at least two extra instruction, and an IF->lineNUM.  FORITER, the\niteration counter, and FORPOP, which cleans up from the for loop.  If you\nJMP or EXIT out of a word from nested FOR loops, you will see a FORPOP\nbefore the JMP or EXIT for each nexted FOR loop.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               Miscellaneous\n----------------------------------------------------------------------------\n\n\n\n\nVERSION ( -- s)\n\n  Returns the version of this code in a string.\n\n\nSMTP_SEND ( s:to s:to_name s:subject a:body -- i)\n\n  Sends an email to email address 'to'.  'to_name' can be an empty string or\n  it may be the name of the recipient.  'subject' will be the email subject,\n  and 'body' will be an array that will be joined together with carriage\n  return and newline to form the message body.\n\n  The rules for how 'body' is joined together and what can be in 'body' are\n  the same as ARRAY_JOIN.\n\n  The return value will be an integer.  0 if the send was successful, -1\n  if SMTP is not configured for this server and thus not available, or -2 if\n  there was an error sending.  The error message will be in the MUCK's\n  status log instead of output to the user for security reasons.\n\n  The following @tune parameters are used by this program.  They are only\n  visible / settable by One:\n\n    smtp_server          The host to connect to\n    smtp_port            The port to connect to\n    smtp_ssl_type        0 for StartTLS, 1 for TLS, 2 for no SSL\n    smtp_no_verify_cert  If true, do not verify server's SSL cert.\n    smtp_auth_type       0 for CRAM_MD5, 1 for none, 2 for plain, 3 for login\n    smtp_user            User for authentication\n    smtp_password        Password for authentication\n    smtp_from_name       The name to use in the From message header\n    smtp_from_email      The email to use in the From message header\n\n  Note that, unfortunately, the password is not encrypted on disk and is in\n  plain text in @tune if logged in as the One user.\n\n  WARNING: This primitive will (currently) block the MUCK server when sending\n  mail.  The timeouts used are pretty aggressive so we won't allow extended\n  blocking, but it is easily possible for the MUCK to pause for a few seconds\n  while a mail is sent.  We have future plans to remedy this, but it is\n  something you should be aware of as a \"side effect\".\n\n  This primitive is Wizbit only.\n\n\nFORCE (d s -- )\n\n  Forces player d to do action s as if they were @forced.  (wizbit only)\n\n\nFORCE_LEVEL ( -- i)\n\n  Returns non-zero if the code we are running was triggered by an @force.\n\n\nFORCEDBY ( -- d)\n\n  Returns the dbref of the most recent object forcing the code to run, or\n  #-1 if none. (Wizbit only)\n\n\nFORCEDBY_ARRAY ( -- a)\n\n  Returns an array containg the dbrefs of all objects forcing the code to run,\n  most recent first. (Wizbit only)\n\n\n\n\n\n----------------------------------------------------------------------------\n                                   Basics\n----------------------------------------------------------------------------\n\n\n\n\nThe word 'me' refers to yourself. Some things to do when starting out:\n1) give yourself a description with \"@describe me=<description>\", then\n    look at yourself with \"look me\".\n2) prevent anyone else from robbing you with \"@lock me=me\".\n3) set your gender, if you wish it known, with \"@set me=sex:male\" or\n    \"@set me=sex:female\" (or \"@set me=sex:neuter\" to be an 'it').\n\n\nSAY <message>\n\"<message>\n\n  Says <message> out loud to everyone in the room.  If your name is Igor,\nand you typed 'say Hello everyone!', you will see 'You say, \"Hello everyone!\"'\nand everyone else in the room will see 'Igor says, \"Hello everyone!\"'\nThere's also an abbreviated form of the 'say' command: '\"Hello everyone!'\n\n\nPOSE <message>\n:<message>\n\n  Poses a message to everyone in the room.  This is used for actions.  i.e.:\nif your name was Igor, and you typed 'pose falls down.', everyone would see\n    Igor falls down.\nThere's also an abbreviated form of the 'pose' command: ':falls down.'\n\n\nPAGE <player>\nPAGE <player>=<message>\n\n  In the first form, this tells a player your location, like\n'You sense that <pager> is paging you from <location>.'\n\n  In the second form, with the <message>, the user receives a message like:\n'<pager> pages from <location>: \"<message>\"'\n\n  If a player is set HAVEN, you cannot page them.  You will instead be told,\n'That player does not wish to be disturbed.'\n\n  Note: Most systems use a MUF program with a global 'page' action, which\ntakes the place of the built-in 'page' command, and has more features.\nUsually, you can see the extra features of this MUF page program by using\nthe command 'page #help'.\n\n\nWHISPER <player>=<message>\n\n  Whispers the message to the named person, if they are in the same room\nas you.  No one else can see the message.  Wizards can use the form\n'whisper *<player>=<message>' to whisper to players in other rooms.\n  Note: Most systems use a MUF program with a global 'whisper' action, which\ntakes the place of the built-in 'whisper' command, and has more features.\n\n\nLOOK <object>\n\n  Looks around at the current room, or at <object> if specified.\nFor players, displays their description and inventory, for things,\ntheir description, and for rooms, their name, description, succ/fail\nmessage, and contents.  Also triggers osucc/ofail messages on rooms.\nPrograms are triggered accordingly on desc/succ/fail fields.\n\n\nINVENTORY\n\n  Lists what you are carrying. This can usually be abbreviated to inv or i.\n\n\nGET <object>\nGET <container>=<object>\n\n  Attempts to pick up <object> in the first form.  The lock on <object> is\nchecked for a success (true), and the normal path of success/fail is then\ntaken.  On success the object is placed in your inventory.\n  \n  In the second form, attempts to get <object> from the given <container>.\nThe _/clk lock property on <container> is tested, and if it is true, then\nit checks to see if the standard _/lok lock property on <object> tests true.\nIf both locks pass, then <object> is moved into the player's inventory.\nIf there is no _/clk property on <container> it defaults to failing.\nThe _/lok property, on <object>, on the other hand, defaults to passing.\n@succ/@fail messages are not displayed, when fetching something from a\ncontainer.\n\n  TAKE can also be used instead of GET.\n\n\nPUT <thing>=<container>\n\n  Attempts to put <thing> into the given <container>.  The _/clk lock\nproperty on <container> is tested, and if it is true, then it checks\nto see if the standard _/lok lock property on <thing> tests true.\nIf both locks pass, then <thing> is moved from the player's inventory\ninto the given container.  If there is no _/clk property on <container>\nit defaults to failing.  The _/lok property, on <thing>, on the other\nhand, defaults to passing.  @succ/@fail messages are not displayed,\nwhen putting something into a container.\n\n  You can also put programs in containers, much the same as you can with\nthings.  Throw, put, and hand can be used instead of drop.\n\n\nDROP <thing>\n\n  Drops the <thing> if you are holding it.  It moves the thing to the room\nyou are in, unless the thing's STICKY flag is set, or the room has a\ndrop-to.\n\n  If the thing's STICKY flag is set, it will go home when dropped.\n\n  If the room's drop-to is set, and the room has its STICKY flag set,\nthen the thing will stick around in the room until all players have left.\nIf the room is not set sticky, then the thing will be sent to the location\ngiven by the room's drop-to.\n\n  You can also drop programs, much like things, but they are not affected\nby room droptos or STICKY flags.\n\n  An '@drop' message can be set which will be shown to the player dropping\nthe object, and an '@odrop' message can be set, which will be shown to the\nother players in the room.  Throw, put, and hand can be used instead of drop.\n\n\nGO <direction>\nGO home\nMOVE <direction>\nMOVE home\n\n  Move the player in a specific direction.  'go home' is a special\ncommand that returns to you to your starting location.  'go' may be\nomitted by simply specifying a direction, and 'goto', 'move' are the\nsame as 'go'.\n\n  Examples:\n    go home            teleport home, *leaving behind all possessions*\n                       (See 'help home')\n    goto kitchen       go to the exit called 'kitchen'\n    move up            move in the direction 'up', if it exists\n    north              move to the exit 'north', if it exists\n\n\nHOME\n\n  Sends you home, no matter where you are. You retain your pennies, but\nany objects you are carrying leave your inventory and return to their own\nhomes. See HOMES.\n\n\nGoal:\n\n  There is no ultimate goal to this game, except to have fun.  There are\npuzzles to solve, scenery to visit, and people to meet. There are no\nwinners or losers, only fellow players. Enjoy.\n\n\nSCORE\n\n  Displays how many pennies you are carrying.  Pretty meaningless.\n\n\nBuilding and some other actions cost money.  How to get money:\n    1) Get pennies from the local bank.\n    2) Find pennies.\n    3) Get killed.\n    4) Be given money by another player.\n    5) Rob someone.\nOnce you reach 10000 pennies, it becomes difficult to acquire\nmore.  Wizards don't need money to do anything.\n\n\nGIVE <player|object>=<amount>\n\n  Gives <amount> pennies from your supply to <player>.  Mortals may only\ngive positive amounts and may not cause a player to have more than 10000\npennies.  Wizards do not affect their penny supplies by giving to others,\nand may also give pennies to objects, changing that object's value.\n\n\nEXAMINE <object>[=proppattern]\n  \n  If you do not control <object>, it prints the owner of the object.\n  \n  If you control <object>, examine will give you a complete breakdown of\nall standard fields, flags, etc that are associated with the object.\nMPI in the the displayed fields will be shown raw, without executing it.\n  \n  If the optional proppattern field is supplied, then it instead lists\nout all the properties that matches the given wildcard pattern.  If the\npattern ends with '/' then all the sub-properties in the matching propdirs\nwill be listed.  If the pattern ends with **, then all sub-propdirs of\nthe matching properties will be shown recursively.\n  \n  ex obj=/        list all root properties on obj.\n  ex obj=/**      list ALL properties on obj.\n  ex obj=foo/     list all properties in the foo propdir on obj.\n  ex obj=foo/**   list all props in the foo/ propdir, and all contained dirs.\n  ex obj=foo*bar  list root props whose name start with foo and end with bar.\n\n\nHELP\nHELP alpha\nHELP category\nHELP <subject>\n\n  With no arguments, this command shows a brief summary of basic\ncommands for playing the game.  With <subject> specified, it shows\ndetailed information on that topic.  Use 'help alpha' or\n'help category' to see an alphabetical or categorized list of topics,\nrespectively.  Seeing as you are reading this, you probably already\nunderstand how this works.\n\n  Examples:\n    help               see the introductory information\n    help alpha         show an alphabetical list of topics\n    help category      show a categorized list of topics\n    help basics        read commands in the category 'Basics'\n\n\nINFO\nINFO <topic>\nINFO <topic>=<range>\n\n  See what information files are available or read information on a\nparticular topic, optionally limiting to a specific set of lines.\n\n  Examples:\n    info                 list available information files\n    info muf-cheat       read the information file 'muf-cheat'\n    info muf-cheat=180   read line 180 from 'muf-cheat'\n    info muf-cheat=5-10  read lines 5-10 from 'muf-cheat'\n\n\nMPI\nMPI alpha\nMPI category\nMPI <subject>\n\n  With no arguments, this command shows a brief summary of MPI\nreference info.  With <subject> specified, it shows detailed\ninformation on that topic.  Use 'mpi alpha' or 'mpi category' to see an\nalphabetical or categorized list of topics, respectively.\n\n  Examples:\n    mpi                see the introductory information\n    mpi alpha          show an alphabetical list of topics\n    mpi category       show a categorized list of topics\n    mpi Looping        read commands in the category 'Looping'\n\n\nMOTD\nMOTD clear\nMOTD <text>\n\n  See the current message of the day.\n  Wizards may clear the message with 'clear', or set a new message by\ntyping it after the command.  If longer than 68 characters, the rest of\nthe message is split at the nearest word into a new line.\n\n  Examples:\n    motd               print the message of the day\n    motd clear         clear the current message of the day\n    motd Fresh start!  set the message of the day to 'Fresh start!'\n\n\nNEWS [<topic>]\n\n  Displays the current news file for the game. Must be typed in full.  If a\ntopic is given, then it displays the information on that specific topic.\n\n\n@PASSWORD <old password>=<new password>\n\n  This changes your password.\n\n\nGRIPE <message>\n\n  Sends <message> to the system maintainer.  Gripes are logged for\nlater reference; also, if the system maintainer is connected he will\nreceive the gripe real-time when the gripe is made.\n\n\nWHO [<player>]\n\n  Must be in all capitals, and typed in full. Lists the name of every\nplayer currently logged in, and how long they have been inactive. If\ngiven a player name, it displays only the matching names and idle times.\nWizards also get a display of the host the player is connected from.\n\n  Examples:\n    WHO                show all players online\n    WHO Az             show online players that start with 'Az'\n\n\n@DOING [me][=[<text>]]\n\n  Shows your doing message, or sets it to <text>.  If <text> is not specified,\nthe field is cleared.  This uses the property '_/do'.\n\nA doing message is shown when typing WHO.\n\n\nQUIT\n\n  Must be in all capitals, and typed in full. Logs out of your character\nand leaves the game. Your character remains at the location you are in when\nyou log out, although it might be moved elsewhere while you are 'asleep.'\n\n\nDISEMBARK\nLEAVE\n\n  Exit a vehicle, arriving at the destination.  If you can't leave, it\nshows an error message instead.\n\n\nUPTIME\n\n  Displays the amount of time the server has been running.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               Building Help\n----------------------------------------------------------------------------\n\n\n\n\nObject Types:\n\n  There are 5 types of objects:\nPlayers are the objects users log in as; their avatars.\nThings are objects that can be carried, or that can sit about a room.\nRooms are locations that contain players and things and linked exits.\nExits are the means by which players move between rooms.\nPrograms are player-written extensions to the game.\n\n  The first letter following an object's ID number indicates the type:\nP(layer), E(xit), F(orth program), or R(oom).  Otherwise it's a Thing.\n\n\nReferring to Objects:\n\n  You can specify objects (things, players, exits, and rooms) by name if\nthey're in your inventory or in the same room as you. You need only type\nenough letters of the name to be unambiguous. You can also specify objects\nanywhere by their DBRef, in the form #<dbrefnumber>. Players in other rooms\nmay be specified in the form *<player name>. The keywords 'me' can be used\nfor yourself, and 'here' for the room you're in.\n\n  Each object has an ID number (the 'dbref'), which appears after the\nname of the object, and is followed by any flags on the object; Ie:\nFoo(#3672PB) is a Player, named Foo, set BUILDER.  The number is a\ndatabase reference, and is used to specify objects at a distance;\nIe. 'examine #3672'. You will only see the ID number of objects you\nown, or which are set LINK_OK, ABODE, or CHOWN_OK. Wizards can see the\nnumbers and flags on all objects.\n\n\nControl:\n\nThere are 3 rules to controlling objects:\n  1) You control anything you own.\n  2) A wizard or God controls everything.\n  3) If Realms_Control is @tuned on in the server, then if a player owns an\n     environmental room, and that room has its Wizard bit set, then the owner\n     of that environment room has control over anything contained in that env-\n     ironment room.  This includes things inside of rooms that are inside of\n     that environment room, and so forth.  Everything in that Wizbit environ-\n     ment can be controlled by the environment's owner. \n  \nThere are a few things to keep in mind, in relation to the above:\n  a) Anybody can @chown an unlinked exit to themselves, even if it is locked.\n     Builders should beware of this, lest their exits be linked or stolen.\n     Once the object has been chowned, then it will be controlled by the\n     owner, as per rule 1.\n  b) Players can @chown to themselves any exits which are linked to an object\n     they own.  Note Rule #1.\n  c) Players can @chown to themselves any exits which are attached to an object\n     that they own.  Note Rule #1.\n  d) If an object is set CHOWN_OK, anyone may \"@chown <object>=me\" and gain\n     ownership and control of the object. (see chown_ok)\n\n\n@CREATE <object> [=<cost>[=<regname>]]\n\n  Creates a new object and places it in your inventory.  This costs at\nleast ten pennies.  If <cost> is specified, you are charged that many\npennies, and in return, the object is endowed with a value according\nto the formula: ((cost / 5) - 1).  Usually the maximum value of an\nobject is 100 pennies, which would cost 505 pennies to create. If a\n<regname> is specified, then the _reg/<regname> property on the player\nis set to the dbref of the new object.  This lets players refer to\nthe object as $<regname> (ie: $mybutton) in @locks, @sets, et cetera.\nOnly a builder may use this command.\n\n\n@CLONE <object> [=<regname>]\n\n  Clones the given object, including name, location, flags, and\nproperties.  You must have control of the object, you may not clone\nrooms, exits, etc, and cloning may cost pennies.  If successful, the\ncommand prints the identifier of the new object.  Only a Builder may\nuse this command.\n\n  Example:\n    @clone some_object\n\n\n@DIG <room> [=<parent> [=<regname>]]\n\n  Creates a new room, sets its parent, and gives it a personal registered\nname.  If no parent is given, it defaults to the first ABODE room down the\nenvironment tree from the current room.  If it fails to find one, it sets\nthe parent to the global environment, which is typically room #0.  If no\n<regname> is given, then it doesn't register the object.  If one is given,\nthen the object's dbref is recorded in the player's _reg/<regname> property,\nso that they can refer to the object later as $<regname>.  Digging a room\ncosts 10 pennies, and you must be able to link to the parent room if\nspecified.  Only a builder may use this command.\n\n\n@OPEN <exit> [=<object> [; <object2>; ... <objectn> ] [=<regname>]]\n\n  Opens an exit in the current room, optionally attempting to link it\nsimultaneously.  If a <regname> is specified, then the _reg/<regname>\nproperty on the player is set to the dbref of the new object.  This lets\nplayers refer to the object as $<regname> (ie: $mybutton) in @locks,\n@sets, etc.  Opening an exit costs a penny, and an extra penny to link\nit, and you must control the room where it is being opened.\n\n\n@ACTION <name>=<source> [=<regname>]\n\n  Creates a new action and attaches it to the thing, room, or player\nspecified.  If a <regname> is specified, then the _reg/<regname> property\non the player is set to the dbref of the new object.  This lets players\nrefer to the object as $<regname> (ie: $mybutton) in @locks, @sets, etc.\nYou may only attach actions you control to things you control.  Creating\nan action costs 1 penny.  The action can then be linked with the command\n@LINK.\n\n\nBogus Exits and Pseudo Commands:\n\n  Bogus commands can be made using exits.  For example, to make a 'sit'\ncommand, one could give the following commands:\n    @open sit\n\t@link sit=here                   (because unlinked exits can be stolen)\n\t@lock sit=me&!me                 (therefore always fails)\n\t@fail sit=You sit on the chair.\n    @ofail sit=sits on the chair.\nSince nobody can go through it, it always fails. The @fail message is\ndisplayed to the player, and the @ofail message (preceded by the player's\nname) to everyone else.\n\n\n@RECYCLE <object>\n\n  Destroy an object and remove all references to it within the database.\nThe object is then added to a free list, and newly created objects are\nassigned from the pool of recycled objects first.  You *must* own the\nobject being recycled, even wizards must use the @chown command to\nrecycle someone else's belongings.\n\n\n@NAME  <object>=<name> [<password>]\n\n  Sets the name field of <object> to <name>.  A null <name> is illegal.\nYou must supply <password> if renaming a player.  Wizards can rename\nany player but still must include the password.\n\n\n@DESCRIBE [<object>][=[<text>]]\n\n  Shows <object>'s description, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/de'.\n\nA description is shown to a player looking at <object>.\n\n\n@IDESCRIBE [<object>][=[<text>]]\n\n  Shows <object>'s inside description, or sets it to <text>.  If <object> is\nnot specified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/ide'.\n\nAn inside description is shown to a player looking inside a vehicle <object>.\n\n\n@SUCCESS [<object>][=[<text>]]\n\n  Shows <object>'s success message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/sc'.\n\nA success message is shown to a player who successfully uses <object>.\n\n\n@FAIL [<object>][=[<text>]]\n\n  Shows <object>'s failure message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/fl'.\n\nA failure message is shown to a player who fails to use <object>.\n\n\n@DROP [<object>][=[<text>]]\n\n  Shows <object>'s drop message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/dr'.\n\nA drop message works differently depending on <object>'s type:\n\n On a room, it is shown to a player who drops an object there.\n On a thing, it is shown to a player who drops it.\n On an exit, it is shown to a player arriving at its destination.\n On a player, it is shown to a player who kills them.\n\n\n@OSUCCESS [<object>][=[<text>]]\n\n  Shows <object>'s osuccess message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/osc'.\n\nAn osuccess message, prefixed by the player's name, is shown to others in the\nroom when a player successfully uses <object>.\n\n\n@OFAIL [<object>][=[<text>]]\n\n  Shows <object>'s ofailure message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/ofl'.\n\nAn ofailure message, prefixed by the player's name, is shown to others in the\nroom when a player fails to use <object>.\n\n\n@ODROP [<object>][=[<text>]]\n\n  Shows <object>'s odrop, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/odr'.\n\nAn odrop message, prefixed by the activating player's name, is shown to others\nin the room. It works differently depending on <object>'s type:\n\n  On a room, it is shown when an object is dropped there.\n  On a thing, it is shown when a player drops it.\n  On an exit, it is shown when a player arrives at its destination.\n  On a player, it is shown when another player kills them.\n\n\nPronoun Substitutions:\n\n  @osuccess, @ofail, and @odrop messages may contain %-substitutions,\nwhich evaluate to gender-specific pronouns if the player's 'sex' property\nis set. These substitutions are:\n    %a (absolute)       = Name's, his, hers, its.\n    %s (subjective)     = Name, he, she, it.\n    %o (objective)      = Name, him, her, it.\n    %p (possessive)     = Name's, his, her, its.\n    %r (reflexive)      = Name, himself, herself, itself.\n    %n (player's name)  = Name.\nCapitalized pronouns are also available with %A, %S, %O, %P, and %R.\nIf you need a '%', use %%.\n  \n  The naturally supported genders are 'male', 'female', 'neuter', 'herm',\nand 'hermaphrodite', with the last two being equivalent, both using the\nsie/hir/hirself/hirs pronoun set.\n \nThis set of supported genders can be extended either on an individual\nplayer, or globally by adding _pronouns/GENDER/%X properties on the\nplayer, or on #0 respectively.  For example, to add support on yourself\nfor a 'stallion' gender, you would add five properties, one for each\nof the %a, %s, %o, %p, and %r pronouns, in the _pronouns/stallion/\npropdir.  Ie:\n    @set me=_pronouns/stallion/%a:his\n    @set me=_pronouns/stallion/%s:he\n    @set me=_pronouns/stallion/%o:him\n    @set me=_pronouns/stallion/%p:his\n    @set me=_pronouns/stallion/%r:himself\n\nIf a shapeshifting player decided that they prefer a different subjective\npronoun for themselve while they were in herm form, they could override it\nwith something like:\n    @set me=_pronouns/herm/%s:shi\nThis would only override the %s pronoun while their gender was 'herm',\nthough, meaning that if they shapeshift to male, they only have to change\ntheir 'sex' property, and not tweak their pronouns as well.\n  \nIf a player sets a %a, %s, %o, %p, or %r property on themselve, that value\nWILL be used, instead of any matching _pronouns/GENDER/%X property.  This\nlets players make quick temporary pronoun fixes, and is also available\nfor legacy reasons.\n  \nEx. '@ofail teapot=burns %p hand on the hot teapot.'\n\n\n@ATTACH <action>=<new source>\n\n  Removes the action from where it was and attaches it to the new source.\nYou must control the action in question.\n\n\nLinking:\n\n  You can link to a room if you control it, or if it is set LINK_OK or ABODE.\nBeing able to link means you can set the homes of objects or yourself to that\nroom if it is set ABODE, and can set the destination of exits to that room if \nit is LINK_OK. See LINK_OK, ABODE, and @LINK.\n\n\n@LINK <object1>=<object2> [; <object3>; ...  <objectn> ]\n\n  Links <object1> to <object2>, provided you control <object1>, and\n<object2> is either controlled by you or linkable.  Actions may be\nlinked to more than one thing, specified in a list separated by\nsemi-colons.\n\n\n@RELINK <object1>=<object2> [; <object3>; ...  <objectn> ]\n\n  Unlinks <object1>, then links it to <object2>, provided you control\n<object1>, and <object2> is either controlled by you or linkable.\nActions may be linked to more than one thing, specified in a list\nseparated by semi-colons.\n\n\n@UNLINK <exit>\n@UNLINK here\n\n  Removes the link on the exit in the specified direction, or removes the\ndrop-to on the room. Unlinked exits may be picked up and dropped elsewhere.\nBe careful, anyone can relink an unlinked exit, becoming its new owner\n(but you will be reimbursed your 1 penny).\n\n\nHomes:\n\n  Every thing or player has a home. This is where things go when they\nare sent home, or things with the STICKY flag set go when dropped.\nHomes are set with the @link command.  A thing's home defaults to the\nroom where it was created, if you control that room, or your home.\nYou can link an exit to send players home (with their inventory) with\n    @link <exit>=home\nDrop-tos can also be set to 'home'. @teleport accepts home as an argument,\nso you can @teleport things (and players if you are a wizard) to their home.\n\n\nDrop-to:\n\n  When the @link command is used on a room, it sets a drop-to location.  Any\nobject dropped in the room (if it isn't STICKY) will go to that location. If\nthe room is STICKY, the drop-to will be delayed until the last person in the\nroom has left.\n\n\n@LOCK [<object>][=[<key>]]\n\n  Shows <object>'s lock, or sets it to <key>.  If <object> is not specified,\nit defaults to 'me'. If <key> is not specified, the field is cleared.  This\nuses the property '_/lk'.\n\nA lock that is not passed prevents players from using <object>.\n\n  Examples:\n    @lock thingy=*Igor\n    @lock thingy=me|#1234\n    @lock here=me|Other Thingy\n    @lock west=sex:female\n    @lock east=((*Igor|*JohnDoe)&sex:male)\n\n\n@UNLOCK <object>\n\n  Removes the lock on <object>.\n\n\nSuccess:\n\n  You successfully use an object when you take it. You use an exit\nsuccessfully when you go through it. You use a person successfully\nwhen you successfully rob them. You successfully use a room when you\nlook around.\n\n\nFailure:\n\nYou fail to use a thing when you cannot take it (because its lock fails).\nYou fail to use an exit when you cannot go through it (because it's locked).\nYou fail to use a person when you fail to rob them.\nYou fail to use a room when you fail to look around (because it's locked).\n\n\n@SET <object> = [!]<flag>\n@SET <object> = <property>:<string>\n@SET <object> = <property>:\n@SET <object> = :clear\n  \n  @set does one of three things on TinyMUCK, it can modify flags, add\nproperties to an object, or remove properties from an object.\n  \n  Using the first format, you may set flags, which are:\n\tABODE (AUTOSTART)\n\tBUILDER (BOUND)\n\tCHOWN_OK (COLOR)\n\tDARK (DEBUG)\n\tHAVEN (HARDUID)\n\tJUMP_OK\n\tKILL_OK\n\tLINK_OK\n\tMUCKER\n\tQUELL\n\tSTICKY (SETUID)\n\tVEHICLE (VIEWABLE)\n\tWIZARD\n\tXFORCIBLE\n\tZOMBIE\n  You can also set the MUCKER (or Priority) Level of an object by using\n0, 1, 2, or 3 as the flag name.\n  \n  The second format sets <property> on <object> to <string>\n\n  The third format will remove <property> and any sub-properties under it.\n  \n  The fourth format removes all properties from an object.\n\n\n@PROPSET <object>=<type>:<property>:<value> -or-\n@PROPSET <object>=erase:<property>\n  \n  @propset can set and clear properties from an object.\n  \n  If the first format above is specified, the @propset command sets\n<property> on <object> to <value>, where <value> is of type <type>.\n<type> can be one of 'string', 'integer', 'float, 'dbref', or 'lock'.\nA string can be any set of characters the MUCK recognizes.  An integer\nmust be composed solely of numerals with the possible exception of\na leading sign indicator (+ or -).  A float must be a valid floating\npoint number.  A dbref must be of the form # followed by a positive\ninteger, and it must be a valid dbref (i.e., the object must exist).\nA lock value must be a key that would be accepted by @lock or a similar\ncommand (see the help for @lock for more details).\n  \n  The second format removes <property> on object.  Note that if <property>\nis a propdir, it removes all properties below <property> as well.\nIf you wish to clear the value of a propdir without removing the\nproperties below it, use '@propset <object> = integer:<property>:0'.\n\n\n\n  Lists registered objects, or manages existing object registrations, on\nthe target object and propdir.\n\nThe default target is \"_reg\" on #0, but can be changed with these prefixes:\n\n  #me\n\tSets target object to you.\n  #prop [<target>]:<propdir>\n\tSets target object to <target>, and target propdir to <propdir>.\n\t<target> may be omitted to keep the default.\n\nSyntax:\n  @register [<prefix>]\n    Lists registrations in the target propdir on the target object.\n  @register [<prefix>] <subpropdir>\n    Lists registrations in <subpropdir> in the target propdir.\n  @register [<prefix>] <object> = <regname>\n    Registers <regname> to <object> in the target propdir.\n  @register [<prefix>] = <regname>\n    Removes registration of <regname> in the target propdir.\n\n\n@CHOWN <object> [=<player>]\n\n  Changes the ownership of <object> to <player>, or if no player is given,\nto yourself.  Any player is allowed to take possession of objects, rooms, and\nactions, provided the CHOWN_OK flag is set.  Mortals cannot take ownership of\na room unless they are standing in it, and may not take ownership of an object unless\nthey are holding it.  Wizards have absolute power over all ownership.\n\n\n@CHLOCK [<object>][=[<key>]]\n@CHOWN_LOCK [<object>][=[<key>]]\n\n  Shows <object>'s chown lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '_/chlk'.\n\nA chown lock that is not passed prevents players from taking ownership of\n<object>.\n\n\n@FLOCK [<object>][=[<key>]]\n@FORCE_LOCK [<object>][=[<key>]]\n\n  Shows <object>'s force lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '@/flk'.\n\nA force lock that is passed allows players to force <object>.\n\n\n@CONLOCK [<object>][=[<key>]]\n\n  Shows <object>'s container lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '_/clk'.\n\nA container lock that is passed allows players to put things in <object>.\n\n\n@READLOCK [<object>][=[<key>]]\n\n  Shows <object>'s read lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '@/rlk'.\n\nA read lock that is passed allows players to bypass non-MUF read permissions\nfor <object>.\n\n\n@OWNLOCK [<object>][=[<key>]]\n\n  Shows <object>'s ownership lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '@/olk'.\n\nAn ownership lock that is passed allows players to bypass controller\npermissions for <object>.\n\n\n@LINKLOCK [<object>][=[<key>]]\n\n  Shows <object>'s link lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '_/lklk'.\n\nA link lock that is not passed prevents players from linking to <object>.\n\n\n@TELEPORT <arg1> [=<destination>]\n\n  Moves <arg1> to <destination>, if <destination> is not given, moves you\nto <arg1>.  Wizards may teleport anything to anywhere, provided it makes\nsense, and mortals are allowed to do two things: teleport rooms to change\ntheir parent fields, and they may teleport things to a room they can link\nto, provided they control either the thing or its location.\n\n\n@STATS [<player>]\n\n  For mortal players, returns the highest number in\nthe database, which includes garbage that has been generated with\n@recycle.  For Wizards, gives this number as well as a breakdown of\neach type of object: rooms, exits, things, programs, players, and\ngarbage.  Wizards may also specify <player> which returns a similar\ndisplay limited to the possessions of <player>.\n\n\nTimestamps:\n\n  Every object has a timestamp, which includes the time last used, the\ntime last modified, the time the object was created, and the number\nof times that that object has been used by a player. They are shown by\nusing EXAMINE. 'Usage' is defined as follows: Players-when they are\nconnected, Rooms-when entered or 'look'd at, Exits-when invoked (by a\n'go' command) or 'look'd at, Things-when 'look'd at or 'take'n/'drop'd,\nPrograms-when run by a player. Examining an object does not count as\nlooking at them.\n\n\n@FIND [<name>] [= <flags/types> = [<output type>]]\n\n  Searches through the database for items that you control matching <name>.\nPlayers control only objects they own; wizards control all objects, so @find\nsearches the entire database when they use it.  Because the command is\ncomputationally expensive, this costs 100 pennies.\n  \n  Flags or types can be specified, to specify that you only want to list\nobjects that have that flag set, or that are of that type.  You can also\nspecify to list objects that are NOT of that specific type, or that do\nNOT have that flag.  (A \"!\" before the modifier indicates that it is to\nbe inverted.)\n  \nThe flags that you can specify are:  (use the initial capitalized letter only)\n  Abode, Builder/Block, Chown_ok, Dark/Debug, Haven, Interactive, Jump_ok,\n  Kill_ok, Link_ok, Mucker, Quell, Sticky/Silent, Vehicle, Wizard, Xforcible,\n  and Zombie.\n  \nYou can also specify Mucker Levels by the level number: 1, 2, 3, or 4.\n  \nThe types that you can specify are: (use the capitalized letter only)\n  Exit, muF program, Player, Room, and Thing.\n  \nThere are a few other modifiers you can specify: (use only initial character)\n  Unlinked   will specify that you want to list only unlinked objects.\n  @          specifies to list objects longer than about 90 days old.\n  ~size      will match all objs whose current memory usage is greater than\n               or equal to size bytes.  This must be the last modifier in the\n               list of modifiers.\n  ^size      will match all objs whose total memory usage, when fully loaded,\n               is greater than size bytes.  To do this, it loads the entire\n               object into memory from disk.  This modifier is only available\n               to wizards.  For regular players, this acts like ~size.  This\n               must be the last modifier in the list of modifiers.\n  \nThe output types that can be given are owners, links, size, count, & location.\n  (You use the whole name for output type, and you can use only one at a time.)\n  owners    lists who owns each object.\n  links     shows what each object is linked to, or *UNLINKED*, or, for exits\n              linked to multiple things, *METALINK*\n  size      displays how much memory is currently being used by an object.  If\n              this option is used with the ^ modifier, (see above) then this\n              will display the true full size of the object, and not just how\n              much is currently being used.\n  count     causes nothing to be shown but how many objects the @find/etc would\n              match.  ie:  it doesn't display any of the matched objects.\n  location  shows where the object is located at.\n  \nThe matching on names is as follows:\n        Individual words can be matched as {word1|word2|...}\n        Individual characters can be matched as [abc...]\n        A ? matches any character.\n        A * matches any number of characters, including none.\n        Any of these special charcters can be matched by putting a \\ before it.\n  \nExamples of use:\n    \"@find north = EU = location\" will find all of your unlinked exits named\n        \"north\" and print them along with their locations.\n    \"@find {big|little} = R!L\" finds all your rooms whose names contain \"big\"\n        or \"little\" and are not LINK_OK.\n    \"@find w[ei]ll\" will find everything you control whose name contains \"will\"\n        or \"well.\"\n    \"@find =E=links\" will list all exits that you control, and display where\n        they are linked to.\n    \"@find button==locations\" will list all objects you control with 'button'\n        in the name, and it will display where thay are located at.\n    \"@find =~2000=size\" will list all your objects whose current memory usage\n        is 2000 bytes or more, and it will display their size.\n    \"@find =^2000=size\" will, for a wizard, find all objects in the db that are\n        2000 or more bytes in total size, when fully loaded, and it will show\n        their sizes.  Note that this will load all of each object into memory\n        to make the size determination.  On some systems this can take a while,\n        and on all systems this is an abuse to the diskbasing cache.  Only\n        Wizards may use this search feature.\n\n\n@OWNED <name> [= <flags/types> = [<output type>]]\n\n  Searches through the database for items that <name> controls.\n  \n  For an explanation of the flags/types modifiers and the output types,\nsee the help entry for @FIND.\n  \nExample:  @owned Revar=F!L3=location\n  Will list all Mucker Level 3 (3) programs (F) owned by revar, that are\nNOT set Link_OK (!L), and it will show the location of each one.\n  \nNote that only wizards can do an @owned on other people.\n\n\n@CONTENTS [<object>] [= <flags/types> = [<output type>]]\n\n  Searches the given object for items & exits that match the given flag string.\n  \n  For an explanation of the flags/types modifiers and the output types, see\nthe help entry for @FIND.\n  \nExample:  @contents here=DE=owner\n  Will list all Dark Exits who's source is your current location, giving the\nowner of each one.\n\n\n@ENTRANCES [<object>] [= <flags/types> = [<output type>]]\n\n  Searches through the database for items that you control linked to <object>.\n  \n  For an explanation of the flags/types modifiers and the output types, see\nthe help entry for @FIND.\n  \nExample:  @entrances here=ED=location\n  Will list all Dark Exits that are linked to your current location,\ngiving the location of each one.\n\n\n@TRACE <object> [=<depth>]\n\n  Starts with <object> and traces all location fields, until the global-\nenvironment room is reached or the optional <depth> is specified.  This\nis generally useful for finding which rooms are parents in your heirarchy.\nIf you cannot link to a particular location its name is replaced by stars\n(***).\n\n\n@OECHO <vehicle object> = <echo prepend string>\n\nSets a string to prepend to messages relayed to the interior of a vehicle\nin the vehicle's _/oecho property. Without a value, \"Outside>\" is prepended.\n\n\n@PECHO <puppet object> = <echo prepend string>\n\nSets a string to prepend to messages relayed from a puppet in the puppet's\n_/pecho property. By default, the puppet's name followed by \">\" is prepended.\n\n\n@SWEEP\n@SWEEP <object>\n\n  Perform a security sweep of some object, showing all listeners,\nboth players and things.  You must own the object to sweep it.\n\n  Examples:\n    @sweep                 check the current room\n    @sweep me              check yourself\n    @sweep janitor_closet  check the object 'janitor_closet'\n\n\n\n\n\n----------------------------------------------------------------------------\n                                Object Flags\n----------------------------------------------------------------------------\n\n\n\n\n@SET here=A\n\n  If a room is set ABODE, players can set their homes there,\nand can set the homes of objects there. (LINK_OK is now used only for exits,\nand ABODE is for players and objects.)\n  When set on a program, it means AUTOSTART.  This means that when the game\nis first started up, the program will automatically be run with a trigger\nof #-1 and a 'me @' of the owner of the program.  This is useful to restart\nprocesses that run in the background periodically.\n\n\n@SET <thing>=B\n\n  Some mud restrict building commands to players whose builder flag is\nset.  The builder flag, BUILDER, is only meaningful for players. On such\nsystems, only builders can @create, @dig, @link, @open, or take control of\nunlinked exits. Only a wizard can set this flag.\n\n  When BUILDER is set on a program, it is called \"BOUND\" and it causes any\nfunctions within the program to run in preempt mode, regardless of the\nmultitasking mode that the process had before calling this program.  When\nthe execution exits this program, the multitasking mode returns to what\nit was before the function was called.  This lets libraries of atomic\nfunctions be written.\n\n  This flag is also called BOUND when it is set on rooms. An exit attached to\na thing or player and linked to a player or room will not work when the object\nto which it is attached is in a room set BOUND.\n\n\n@SET here=C\n\n  When set on rooms, exit and things, the C flag indicates that any player\nmay use the @chown command to claim ownership of the item. (see @chown)\nWhen the C flag is set on a player, this indicates that the player wishes\nto receive ANSI Color codes from the server.\n\n\n@SET here=D\n\n  If a room is DARK, then when people besides the owner 'look' there, they only\nsee things they own. If a thing or player is DARK, then \"look\" does not list\nthat object in the room's Contents:. Players can set rooms they own dark, and\nmay also set objects they own dark, but they cannot drop dark objects in rooms\nthey don't control. Wizards can set players dark.\nWhen a program is set DARK, it is called DEBUG, and a running stack trace is\nprinted out to any users of the program for each instruction executes.\n\n\n@set here=O\n\n  If you set a room to 'Yield', exit matching will NOT continue up the\nenvironment chain.  The only exception to this are any exits on an area\nup the environment chain that has been set to be 'Overt'.  By setting a\nroom both Yield and Bound, you can limit players to -only- those exits\nset on the room itself (assuming there are no Overt rooms further up the\nenv chain).\n\n\n@set here=Y\n\n  If you set a room to 'Yield', exit matching will NOT continue up the\nenvironment chain.  The only exception to this are any exits on an area\nup the environment chain that has been set to be 'Overt'.  By setting a\nroom both Yield and Bound, you can limit players to -only- those exits\nset on the room itself (assuming there are no Overt rooms further up the\nenv chain).\n\n\nThe flags are displayed as letters following an object's ID number.\nFlags are set with the @set command. The flags are: W(izard), S(ticky),\nL(ink_OK), D(ark), J(ump_OK), K(ill_OK), C(hown_OK), H(aven), A(bode),\nB(uilder), V(ehicle), Z(ombie), and The flags R(oom), E(xit), and\nP(layer) are also used.  Debug is the same flag as Dark, Silent as Sticky,\nColor as Chown_OK, and Bound as Builder.  F refers to a Muck Forth program.\nAn M followed by a 1, 2, or 3 gives the Mucker Level.  (Priority Level for\nexits.) See TYPES, GENDER, and individual flag names.\n\n\n@SET here=H\n\n  If a room is HAVEN, you cannot kill in that room. If a player is set\nHAVEN, he cannot be paged. (see page) HAVEN, when set on a program is\ncalled HARDUID, and causes that program to run with the permissions of\nthe owner of the trigger, rather than with the permissions of the user\nof the program.  When this is set in conjunction with the STICKY (SETUID)\nflag on a program, and the program is owned by a wizard, then it will run\nwith the effective mucker level and permissions of the calling program.\nIf the caller was not a program, or the current program is NOT owned by\na wizard, then it runs with SETUID permissions.\n\n\n@SET here=J\n\n  The Jump_OK flag is used in several ways.  Unprivileged programs cannot\nuse MOVETO on an object unless the player either controls the object, the\nroom it's being moved from, and the room it's being moved to, or else they\nare set Jump_OK.  A player cannot use an action that is linked to another\nplayer unless the other player is set Jump_OK.  On some systems, where\nSECURE_TELEPORTing is set up, you cannot use an action to leave a room,\nunless the action is either attached to that room, or the room is JUMP_OK.\n\n\n@SET here=K\n\n  On systems where the KILL_OK flag is used, it may restrict combat.\n\n\n@SET here=L\n\n  If a room is LINK_OK, anyone can link exits to it (but still not from it).\nIt has no meaning for people, things, or exits. See @LINK in the dictionary.\nA program that is link_ok can be called by any other program, and can be run\nfrom actions and propqueues not owned by the owner of the program.\n\n\nMucker Levels:\n\n  The mucker level of a player or program specifies whether or not a player\ncan make MUF programs, and what permissions they will have when the programs\nare run.  (See 'man mucker levels')  Only a wizard may set the mucker level\nof a player, and a normal player may only set the mucker level of programs\nthey own to less than their current mucker level.  A program cannot be set\nto mucker level 0, since it doesn't mean anything.\n  \n  When the mucker level of an exit is set, is it called the exit's priority\nlevel.  The priority levels let you specify that certain exits are not\noveridable by local actions.  When an exit is searched for, in the\nmatching routines, it will match like it used to, except that if it finds\nan exit, later in the search order, that has a higher priority level, it\nwill choose that exit instead.\n  \n  You can set the priority level of an exit by setting its Mucker Level.\n(ie: @set exit=2)  A level of 0 is the lowest priority, and a level of 3\nis the highest priority.  Only a Wizard can set the priority level of an\naction or exit.\n  \n  When the server looks for the standard \"connect\", \"disconnect\", or \"look\"\nactions, it will ignore any actions with a priority Level of 0.  When an\naction is @attached to another object, @named to something else, or\n@unlinked, its Priority Level is reset to 0.\n  \n  If COMPATIBLE_PRIORITIES is #defined on your system, then exits that are\non room or player objects will never act as if they have an effective\npriority level of less than 1.\n\n\n@SET here=Q\n\n  A wizard set QUELL is effectively a normal player with no wizardly powers.\nPrograms that test to see if a player is wizard will get a false response\nfrom '\"wizard\" flag?' when the player is QUELLed.  Wiz-bitted programs\nwill still act wizbitted whether or not the owner is QUELLED.\n\n\n@SET here=S\n\n  If a thing is STICKY, it goes home when dropped (See HOMES). If a room is\nSTICKY, its drop-to is delayed until the last person leaves (See DROP-TO).\nIf a player is STICKY (SILENT), they don't see the dbrefs on things they\nown, and they do not see dark objects.  If an exit is linked to a Thing,\nand it is located on another Thing, then if the exit is not STICKY, the\nThing the exit is located on will go home when the exit is triggered.  If\na program is STICKY (SETUID) it runs with the permissions of the owner of\nthe program, not the perms of the user.\n\n  A player can set themselves \"SILENT\" and not see all the dbrefs and dark\nobjects that they own.  They won't see objects in a dark room either.\nThey still control the objects though.  Silent is the same flag as STICKY.\n\n\n@SET <thing>=V\n\n  Objects of TYPE_THING, that have the VEHICLE flag set, can contain\nplayers.  To enter a vehicle, you can either use a MUF program to\nteleport you to it via MOVETO, you can get a wizard to @teleport you\ninto it, or else you an use an action that is both attached and linked\nto the vehicle to enter it.  This means that you can only enter a vehicle\nfrom the same room that it is in, and you cannot use far links to enter\nit.  This prevents the use of vehicles to get around locks.  Inside the\nvehicle, you will see its @idesc, instead of its @desc, and you will\nnot be shown its @succ or @fail.  Objects dropped in a vehicle will not\ngo away to the their homes, as a vehicle cannot have a dropto set in it.  \nThings with the VEHICLE flag set cannot enter rooms or use exits that\nhave the VEHICLE flag set.  This allows a way to prevent vehicles from\nentering areas where it would be illogical for them to be.\nWhen VEHICLE is set on a program, it is called VIEWABLE, and enables the\nprogram to be @listed.\n\n\n@SET <thing>=W\n\n  If a person is WIZARD, they are a wizard, unkillable, subject to fewer\nrestrictions, and able to use wizard commands. It is only meaningful for\nplayers and programs. In general, WIZARDs can do anything using #<number>\nor *<player>.  Only player #1 can set and unset the WIZARD flag of other\nplayers if GOD_PRIV is used.\n\n\n@SET <thing>=X\n\n  A thing or player set XFORCIBLE can be forced by anything passing its\nforce-lock. When the @tune enable_prefix is on, wizards may set this flag\non any wizard-owned action to allow matching on the beginning of the user's\ncommand string, much like the builtin '\"' and ':'. The flag is named XPRESS\nwhen used in this way.\n\n\n@SET <thing>=Z\n\n  @force and the FORCE muf primitive can be used on objects of type\nTHING, if they have the ZOMBIE flag set.  Objects act as if they\nhave the permissions of their owner.  If an object is locked against\na player, it will also be locked against anything that that player\nowns, that tries to test the lock.\n  \n Things with the ZOMBIE flag set cannot enter rooms or use exits that\nhave the ZOMBIE flag set.  This allows a way to prevent zombies from\nentering areas where they are not wanted.\n  \n If you try to run a program that you control, that has its ZOMBIE flag\nset, it will drop you into the MUF debugger.  This lets you step line\nby line, or instruction by instruction through a muf program, setting\nbreakpoints to stop at, and other nice things.  There is help available\nwithin the debugger, via the 'help' command.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Object Properties\n----------------------------------------------------------------------------\n\n\n\n\nProperties are stored in AVL trees, and organized into directories of\n  properties.  This speeds things up, and keeps you from being spammed on\n  examines.  To examine the properties on an object, use 'ex <obj>=<propdir>'.\n  where to examine the base properties in an object, <propdir> would be '/'.\n  You can see the value of a single property with 'ex <object>=<propname>'.\n      Propdirs are a method of storing and organizing properties to speed\n    access and to provide a sort of built-in organization.  The basic idea\n    is to make something similar to a 'filesystem' for properties.  In this\n    analogy, each person would be a filesystem, with a root directory and\n    (theoretically) an infinite number of properties beneath that.\n      A property has been expanded with the idea that each property may now\n    contain a new property list -- the 'propdir'.  properties can both have\n    a value (either integer or string as before) _and_ contain other\n    properties.\n      The actual directory entries may ALSO contain data.  Propdirs' only\n    real 'visible' changes are in the names of properties -- '/' is used as\n    the property directory separator, and so will not appear in the names\n    of the properties when listed through 'examine' or MUF programs.\n      Property protections have also been expanded -- the . and _ may appear\n    either at the beginning of the property name or immediately following a\n    '/', and that property will have the appropriate protections.  For\n    example, the property '/mail/.inbox/mesg/#' would have the same\n    protections as '.mesg#' would now.\n    There are two ways to remove a property list:\n      * First, and most straight forward, is to remove the property that\n        contains it.  so, in the previous example, removing the property\n        '/mail/.inbox' would (recursively) remove all properties under\n        .inbox before removing .inbox itself.\n      * The second way is to remove all properties within the property list\n        yourself.  When the last property is removed, the parent property\n        (the one that contained the property list) is examined to see if\n        contains data.  If it does, then the property list only is\n        removed.  If the property doesn't contain data then it is removed\n        also.\n      Because of the first method of removing propdirs, the ability to have a\n    property list and value in the same property should be used sparingly.\n      If you try to access a property ending in '/', in MUF, it will give a\n    programmer error, except in NEXTPROP, in which it will give the name of\n    the first property in that propdir.\n      The last visible, non-MUF change that propdirs bring is that 'examine'\n    will no longer show properties _directly_.  Instead, where the properties\n    would normally be shown, it will say:\n        \"[ Use 'examine <object>=/' to list root properties. ]\"\n      Examine now can take an argument which is the property or propdir to\n    view.  If the property name given ends with a '/', all properties in\n    property directory will be listed, otherwise the single property named\n    will be shown.\n      Internally, a few things changed.  property lists are now stored as AVL\n    trees instead of straight lists, so there is a speed increase even if\n    propdirs are not directly used.  This also means properties are kept in\n    sorted order and will be displayed that way.\n      'addprop' will no longer allow a \":\" in the property name.\n      To clear a propdir's value without deleting the proptree below it,\n    from MUF do a '\"\" 0 addprop' to it.\n      A property can *not* have both a string and integer stored at the same\n    time anymore.  The old property.c was lax and allowed this, even though\n    the integer value would be lost on dbload.\n    See also PROPDIRS-EXAMPLE.\n\n\nProperty and Propdir Usage Examples:\n  Lines indented only 2 spaces are what the user is typing.\n  Lines indented 6 spaces are what the MUCK is returning to the user.\n  Lines in []'s are comments on what's going on.\n  \n  [first, lets set up a bunch of properties]\n  @set me=first:a property.\n  @set me=second:another property.\n  @set me=first/one:A property in a propdir\n  @set me=first/two:Another property in a propdir\n  @set me=third/prime:three\n  \n  [Okay, now lets see what properties we have.  We use the examine command\n   to do that, with a second argument, to tell it what we want to list in\n   the way of properties.  In this case, since we want to list the base level\n   properties, we use '/'.]\n  \n  ex me=/\n      first/: (string) a property.\n      second: (string) another property.\n      third/: (no value)\n  \n  [Okay, it has a few properties with the first part of the names of the\n   properties that we set.  The /'s at the end of some of the property\n   names means that there are sub-properties that we can list.  When we\n   set a property like 'first/one', it's actually creating a sub-property\n   named 'one' beneath a property named 'first'.  If 'first' doesn't\n   already exist, then it will create that property.  Let's list what\n   sub-properties we created under 'first'.]\n  \n  ex me=first/\n      first/one: (string) A property in a propdir.\n      first/two: (string) Another property in a propdir.\n  \n  [Here we see the properties that we set as sub-properties under 'first'.\n   We examined for 'first/' to list the sub-properties.  The / at the end\n   of the name tells the game that we want it to list the sub-properties\n   of that property, and not that property's value itself.  Lets see what\n   value the property 'first' has, itself.  To do this we leave off the '/']\n  \n  ex me=first\n      first/: (string) a property.\n  \n  [Okay, lets say that we just want to see the value of the sub-property\n   named 'one', under the property 'first'.  We can list it as follows:]\n  \n  ex me=first/one\n      first/one: (string) A property in a propdir.\n  \n  [If the property or sub-property that you specify does not exist, it\n   will complain about it.]\n  \n  ex me=first/three\n      No property found.\n  \n  [if a property was created to contain a sub-property, but was never given\n   a value itself, it is listed as having no value.  It has sub-properties,\n   however.]\n  \n  ex me=third\n      third/: (no value)\n  \n  [Let's list those sub-properties.]\n  \n  ex me=third/\n      third/prime: (string) three\n  \n  [Okay, let's delete the sub-property 'prime', from under the property\n   'third'.  To do this, we act like we are setting the variable again,\n   except that we are giving it no value this time.]\n  \n  @set me=third/prime:\n  ex me=third/\n      No properties listed.\n  \n  [There.  It's gone.  Now let's list the bottom level properties again.]\n  \n  ex me=/\n      first/: (string) a property.\n      second: (string) another property.\n  \n  [Whoops!  The property 'third' is gone too!  This is because properties\n   with no values are automatically deleted when their last sub-property\n   is deleted.  Let's delete a subproperty from 'first', now.]\n  \n  @set me=first/one:\n  ex me=/\n      first/: (string) a property.\n      second: (string) another property.\n  \n  [The property 'first' still exists, with its string value, and it still\n   has sub-properties.  Lets list those.]\n  \n  ex me=first/\n      first/two: (string) Another property in a propdir.\n  \n  [Here we see that the sub-property 'one' is gone, as we expected.  Let's\n   see what happens when you erase a property that has sub-properties.]\n  \n  @set me=first:\n  ex me=/\n      second: (string) another property.\n  \n  [The property 'first' is gone.]\n  \n  ex me=first/\n      No properties listed.\n  \n  [And the subproperty it had is gone too!  Let's remake the 'first' prop.]\n  \n  @set me=first:again, a property.\n  ex me=/\n      first: (string) again, a property.\n      second: (string) another property.\n  \n  [We have two properties again, and no sub-properties.  It should be\n   noted that sub-properties can have sub-sub-properties, and they can\n   contain even subbier properties, and so on and so forth.]\n  @set me=first/one:uno\n  @set me=first/one/example:dos\n  @set me=first/two/example:tres\n  @set me=first/one/example/cat:meow\n  ex me=first/\n      first/one/: (string) uno\n      first/two/: (no value)\n  ex me=first/one/\n      first/one/example/: (string) dos\n  ex me=first/one/example/\n      first/one/example/cat: (string) meow\n  \n  [There is a special case in examine to let us list ALL the properties and\n   sub-properties of a prop.  To use it, we just specify '**' as a propdir.\n   For example, to list all sub-properties and sub-sub-properties, etc.,\n   under 'first', you would do the following:]\n  \n  ex me=first/**\n      first/one/: (string) uno\n      first/one/example/: (string) dos\n      first/one/example/cat: (string) meow\n      first/two/: (no value)\n      first/two/example/: (string) tres\n      \n  [Let's delete all the properties on the object, now.  To do that, we\n   specify no property name or value when we use @set.  Nothing but a\n   colon.]\n  \n  @set me=:\n  ex me=/\n      No properties listed.\n  \n  [All gone!]\n  \n\n\n@SET me=sex:unassigned|male|female|neuter\n\n  Default unassigned. If a player's sex is set, %-substitutions will use\nthe appropriate pronoun for that player. Only meaningful for players and\nmaybe Zombie things.\n\n\n@SET me=sex:unassigned|male|female|neuter|herm|hermaphrodite\n\n  Default is unassigned. If a player's sex is set, %X substitutions\nwill use the appropriate pronoun for that player in @osucc/@ofail/etc.\nOnly meaningful for players.\n\n\nObjects have several standard strings:\n  1) a name.\n  2) a description.                             (stored in _/de property)\n  2) an inside description (for vehicles).      (stored in _/ide property)\n  3) a success message (seen by the player).    (stored in _/sc property)\n  4) a fail message (seen by the player).       (stored in _/fl property)\n  5) an osuccess message (seen by others).      (stored in _/osc property)\n  6) an ofail message (seen by others).         (stored in _/ofl property)\n  7) a drop message (seen by the player).       (stored in _/dr property)\n  8) an odrop message (seen by others).         (stored in _/ofl property)\n(see properties)\n\n\n\n\n\n----------------------------------------------------------------------------\n                              MUF Programming\n----------------------------------------------------------------------------\n\n\n\n\nMAN [<subject>]\n\n  Displays the programmer's manual or a quick reference.\n\n\n@PS\n\n  Lists the status of the currently running MUF program processes.\nThis lists all processes for a Wizard.  Non-Wizards only see the muf\nprocesses that they can @kill.\n\n\n@KILL <processid>\n@KILL <playername>\n@KILL <programdbref>\n@KILL all\n\n  If passed a processid (a number without a '#' preceeding it), it will kill\nthe given process, if the player controls it.  If passed a player name, it\nwill kill all the processes controlled by that player.  If passed a program\ndbref, it will kill all processes that that program is running in.  If the\nargument passed is \"all\", and the player is a wizard, it will kill all\nprocesses on the timequeue.\n\n\n@LIST <program>  [=[!#@]*[line1][-line2]]\n\n  Lists lines in a program, provided you control it or it is VIEWABLE.\nZero, one, or two line numbers may be specified, denoting the range of\nlines to list.  If no lines are given, the entire program is listed.\n\n  Additionally, a set of prefixes can be given to control the output:\n\n  !\tOutputs system messages as MUF comments.\n  #\tLists program with line numbers, overriding current setting.\n  @\tLists program without line numbers, overriding current setting.\n\n\n@EDIT <program>\n\n  Searches for a program and if a match is found, puts the player into\nedit mode.  Programs must be created with @PROGRAM or @MCPPROGRAM.\n\n\n@PROGRAM <program> [=<regname>]\n\n  Create a new program, or enter edit mode on an existing one. If a <regname>\nis specified, a new program is always created.\n\n\n@MCPEDIT <program>\n\n  Searches for a program and if a match is found, pops up an editor window\nif the client supports the MCP edit package, otherwise puts the player into\ntext edit mode.  Programs must be created with @PROGRAM or @MCPPROGRAM.\n\n\n@MCPPROGRAM <program> [=<regname>]\n\n  Create a new program, or enter edit mode on an existing one.  If a <regname>\nis specified, a new program is always created.  If the client supports the MCP\nedit package, an editor window will appear instead of using the text edit mode.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Wizardly Commands\n----------------------------------------------------------------------------\n\n\n\n\n@PCREATE <player>=<password>\n\n  Only wizards can use this command. This command creates a new player.\nIt may only be used if REGISTRATION is enabled.\n\n\n@NEWPASSWORD <player> [=<password>]\n\n  Only wizards may use this command.  Changes <player>'s password,\ninforming <player> that you changed it. Must be typed in full. If\nGOD_PRIV was defined, nobody can change god's password.\n\n\n@FORCE <player|thing>=<command>\n\n  Causes the game to process <command> as if it were typed by <player|thing>.\nIf the player or thing being forced is set Xforcible, and its @flock force\nlock is set, then anyone (or any zombie) that passed that lock can use @force\non them.  Otherwise only a wizard can use @flock on them.\n\n  With the compile option GOD_PRIV, God cannot be forced by anything except\nGod owned, wizbit programs.\n\n\n@BOOT <player>\n\n  Disconnects a player from the game.  If a player is connected more than\nonce it affects the most recent connection. Only a wizard may use this\ncommand.\n\n\n@TOAD <player1> = <player2>\n\n  Only wizards may use this command.  Turns <player1> into a slimy toad,\ndestroying their character.  All possessions of <player1> are @chowned to\n<player2>.  Must be typed in full.\n\n\n@BLESS <obj>=<proppattern>\n  \n  This is a wizard-only command.\n  \n  Blesses all properties on <obj> that match the given <proppattern> wildcard\npattern.  The wildcard pattern works similarly to how the examine patterns\nwork.  ie:\n\n  @bless obj=/**      blesses ALL properties on obj.\n  @bless obj=foo/**   blesses all props in the foo/ propdir, and all propdirs\n                       under the foo/ propdir, recursively.\n  @bless obj=foo*bar  blesses all root props whose name start with foo and end\n                       with bar.\n\n The @bless command will list all properties that it blesses.\n\n  Blessed properties can execute MPI code with elevated permissions, allowing\nscripts that can alter remote objects, and those objects not controlled by\nthe trigger owner.  Blessed MPI can also use {force} on anyone.\n\n  Blessed _msgmacs properties don't execute with blessed permissions when they\nare referenced from other MPI code.  Instead, the bless bit on _msgmacs props\nindicates only that that macro is available to scripts up the environment,\neven if the script's trigger is not the same as the owner of the environment\nroom the _msgmacs prop is on.\n\n\n@UNBLESS <obj>=<proppattern>\n  \n  This is a wizard-only command.\n  \n  Unblesses all properties on <obj> that match the given <proppattern>\nwildcard pattern.  The wildcard pattern works similarly to how the examine\npatterns work.  Ie:\n\n  @unbless obj=/**      unblesses ALL properties on obj.\n  @unbless obj=foo/**   unblesses all props in the foo/ propdir, and all\n                         propdirs under the foo/ propdir, recursively.\n  @unbless obj=foo*bar  unblesses all root props whose name start with foo\n                         and end with bar.\n\n  The @unbless command will list all properties that it unblesses.\n\n  Blessed properties can execute MPI code with elevated permissions, allowing\nscripts that can alter remote objects, and those objects not controlled by\nthe trigger owner.  Blessed MPI can also use {force} on anyone.\n\n  Blessed _msgmacs properties don't execute with blessed permissions when they\nare referenced from other MPI code.  Instead, the bless bit on _msgmacs props\nindicates only that that macro is available to scripts up the environment,\neven if the script's trigger is not the same as the owner of the environment\nroom the _msgmacs prop is on.\n\n\n@WALL <message>\n\n  Only wizards may use this command. Shouts something to every\nplayer connected. Must be typed in full.\n\n\n@DUMP [filename]\n\n  Only wizards may use this command. Saves the database from memory to disk.\nAutomatically occurs every three hours, and when @shutdown is used. It does\nslow down the server, so only use if you fear a server crash is iminent.\nIf a filename is given, it will save the db to that file, and save any\nsubsequent dumps to it as well.\n\n\n@SHUTDOWN\n\n  Shuts down the game.  Only wizards may use this command, and it\nmust be typed in full.\n\n\n@RESTART\n\n  Initiate a full shutdown and restart of the Muck server.  Only\nwizards may use this command.\n\n\n@ARMAGEDDON [<reason>]\n\n  Initiates an immediate emergency shutdown of the Muck server, and does\nNOT save the database out to disk.  Use this ONLY when you suspect the\ndatabase has been corrupted, and it would be a BAD thing to save the\ndatabase out to disk.  This is a wizard-only command.\n\n  Examples:\n    @armageddon                  force shutdown server\n    @armageddon World ending!    force shutdown with given reason\n\n\n@RESTRICT [on|off]\n\n  Manages restriction of logins, turning on or off maintenance wiz-only login\nmode.  With no args, @restrict will print out the current login restriction\nstate.  With an argument of 'on', maintenance mode is turned on, and only\nwizards can log in.  With an argument of 'off', restricted login mode is turned\noff, and all players can log in.  NOTE: when the muck starts up in sanfix mode,\nwith a corrupted database, it will be with @restricted logins.\n\n\n@UNCOMPILE\n\n  Uncompiles all programs, removing them from memory.\n\n\n@RECONFIGURESSL\n\n  Only wizards may use this command.  Attempt to reread SSL certificate files\nand reset SSL options from @tune settings.  If it fails (for example,\nthe new certificate file is not usable), old settings will persist. Must be\ntyped in full.\n\n\n@TUNE\n@TUNE info\n@TUNE <param> [=<value>]\n@TUNE %<param>\n@TUNE info <param>\n\n  View and modify tunable parameters that configure how the server operates,\nor provide help on a specific parameter.\n\n  This is a wizard-only command.\n\n  Examples:\n    @tune              shows all parameters and their values\n    @tune info         shows all parameters, values, and brief descriptions\n    @tune foo          shows the value of foo\n    @tune foo=bar      sets the value of foo to bar\n    @tune %foo         resets foo to the default system value\n    @tune info foo     briefly describes foo\n\n  Some parameters may require a @RESTART or reload to apply.\n\n\n@CREDITS\n\n  Show a bit about those who contributed to the development of the\nmuck server software, giving credit where credit is due.\n\n\n@VERSION\n\n  Show the version information, build time, and compile options used.\n\n\n@DEBUG\n\n  Wizard only command that gives database usage stats for\n'diskbase'-style databases.  Only available if compiled with DISKBASE.\nMore options will be added in the future.\n\n  Examples:\n    @debug display propcache    display database property cache\n\n\n@TOPS\n@TOPS [muf|mpi] <count>\n@TOPS [muf|mpi] reset\n\n  Show process usage and runtime statistics for both MUF and MPI\nprograms.  Count controls the maximum rows of results shown.  If left\nblank, it uses the default of '10'.\n\n  This is a wizard-only command.\n\n  Examples:\n    @tops              show default amount of profiling statistics\n    @tops 3            show 3 rows of all profiling statistics\n    @tops muf 5        show 5 rows of MUF profiling statistics\n    @tops mpi reset    reset MPI collected profiling statistics\n\n\n@MEMORY\n\n  Wizard only command that gives detailed memory stats for the muck\nserver process.  If HAVE_MALLINFO is used, this command shows more\ninformation.\n\n\n@USAGE\n\n  Wizard only command that gives system resource usage stats for the\nmuck server process.\n\n\n@EXAMINE <object>\n\n  Print detailed information on the given object, including owner,\nlocation, home, referring objects, and more.  The information printed\ndepends on what type the object is, e.g. thing, room, player, exit.\n  Only player #1 can examine if GOD_PRIV is used, otherwise, only\nWizards may use this command.\n\n  Examples:\n    @examine           examine the current room\n    @examine #1        examine database object #1\n\n\n@SANITY\n\n  Scan the entire database, verifying that all objects have valid data,\nsuch as names, exits, ownerships, and check for orphan objects.  Shows\nall problems, but does not make any changes.  Only player #1 can manage\nsanity if GOD_PRIV is used, otherwise, only Wizards may do so.\n\n\n@SANCHANGE <dbref> <field> <object>\n\n  Manually change the field of an entry in the database, primarily to\nhelp with repairing a broken database.  Use with caution.  Only player\n#1 can manage sanity if GOD_PRIV is used, otherwise, only Wizards may\ndo so.\n\n  Fields are:\n    exits              start of Exits list\n\tcontents           start of Contents list\n\tnext               next object in list\n\tlocation           object's Location\n\thome               object's Home\n\towner              object's Owner\n\n\n@SANFIX\n\n  As with @sanity, scan the entire database and verify all is sane,\nbut also attempt to fix any problems found.  If sanity can not be\nrestored, you may need to manually repair the database with other\ncommands.  Only player #1 can manage sanity if GOD_PRIV is used,\notherwise, only Wizards may do so.\n\n\n@TELEDUMP\n\n  Wizard-only command that dumps the database, MUF programs, and macros\non disk to the current descriptor.  Output is base64-encoded.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               Miscellaneous\n----------------------------------------------------------------------------\n\n\n\n\nMuck Basics Cheatsheet:\n\nThis is Fuzzball Muck, a user-extensible, multi-user chat system.\n\nBasic commands:\n  move/go <direction>\n  get/take <thing>; drop/throw <thing>\n  look; look <thing>; look <direction>\n  say <message>; \"<message>\n  pose <message>; :<message> --- shows your name, with the message after it.  Used for actions.\n  whisper <player> = <message>\n  inventory\n  news\n  @describe me = <description>\n  @password <oldpassword>=<newpassword>\n  page <player> --- tell player that you are looking for them (cost no pennies)\n  page <player> = <message> --- gives the player the message long-distance\n  gripe <message> --- Complain to the management.\n  home --- go home\n\nFor help on a specific command, type 'help <subject>'.\nFor a list of subjects, try 'help category', or 'help alpha'.\nRemember, no matter how bad it gets, you can always go 'home' or QUIT.\n\n\nCosts:\n\n  Kill: 10p (or more, up to 100p).\n  @dig: 10p\n  @create: 10p (or more, up to 505p)\n    sacrifice value=(cost-5)/5\n  @find, @owned: 100p.\n  @link: 1p (if you didn't already own it, +1p to the previous owner).\n  @open: 1p (2p if linked at the same time).\n  \nWizards don't need money to do anything.\n\n\nRemoving intermediate container 512c2339eaba\n ---> a243e962d602\nStep 6/14 : FROM ubuntu:20.04\n ---> d5447fc01ae6\nStep 7/14 : RUN apt update && apt dist-upgrade -y     && apt-get install -y libssl1.1 openssl     && mkdir -p /opt/fbmuck-base     && mkdir -p /opt/fbmuck-ssl\n ---> Running in 8dfc8ec457a1\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mGet:1 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]\nGet:3 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1779 kB]\nGet:4 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2358 kB]\nGet:5 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [27.7 kB]\nGet:6 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [972 kB]\nGet:7 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\nGet:8 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\nGet:9 http://archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [177 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal/universe amd64 Packages [11.3 MB]\nGet:11 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages [1275 kB]\nGet:12 http://archive.ubuntu.com/ubuntu focal/restricted amd64 Packages [33.4 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1894 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [30.4 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2828 kB]\nGet:16 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1275 kB]\nGet:17 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\nGet:18 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\nFetched 24.7 MB in 4s (6940 kB/s)\nReading package lists...\nBuilding dependency tree...\nReading state information...\nAll packages are up to date.\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mReading package lists...\nBuilding dependency tree...\nReading state information...\nCalculating upgrade...\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\nReading package lists...\nBuilding dependency tree...\nReading state information...\nSuggested packages:\n  ca-certificates\nThe following NEW packages will be installed:\n  libssl1.1 openssl\n0 upgraded, 2 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 1942 kB of archives.\nAfter this operation, 5412 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl1.1 amd64 1.1.1f-1ubuntu2.16 [1321 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openssl amd64 1.1.1f-1ubuntu2.16 [621 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 1942 kB in 0s (5306 kB/s)\nSelecting previously unselected package libssl1.1:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 4126 files and directories currently installed.)\r\nPreparing to unpack .../libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSelecting previously unselected package openssl.\r\nPreparing to unpack .../openssl_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking openssl (1.1.1f-1ubuntu2.16) ...\r\nSetting up libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\ndebconf: unable to initialize frontend: Readline\r\ndebconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.30.0 /usr/local/share/perl/5.30.0 /usr/lib/x86_64-linux-gnu/perl5/5.30 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.30 /usr/share/perl/5.30 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 7.)\r\ndebconf: falling back to frontend: Teletype\r\nSetting up openssl (1.1.1f-1ubuntu2.16) ...\r\nProcessing triggers for libc-bin (2.31-0ubuntu9.9) ...\r\nRemoving intermediate container 8dfc8ec457a1\n ---> a51273245e1b\nStep 8/14 : COPY --from=0 /root/scratch /usr\n ---> 467a760ddbc5\nStep 9/14 : COPY scripts/docker-entrypoint.sh /usr/bin/\n ---> 6f81abcd7172\nStep 10/14 : RUN chmod a+rx /usr/bin/docker-entrypoint.sh\n ---> Running in 5049d8e94f44\nRemoving intermediate container 5049d8e94f44\n ---> 0c9c187cde11\nStep 11/14 : COPY game/ dbs/starterdb/ /opt/fbmuck-base/\n ---> 86e5d54b0888\nStep 12/14 : COPY docs/ /opt/fbmuck-base/data\n ---> 9d3800d2c87e\nStep 13/14 : RUN mv /opt/fbmuck-base/data/starterdb.db /opt/fbmuck-base/data/std-db.db\n ---> Running in c290e6573bed\nRemoving intermediate container c290e6573bed\n ---> 29940cd63a0d\nStep 14/14 : ENTRYPOINT [\"bash\", \"/usr/bin/docker-entrypoint.sh\"]\n ---> Running in cd2e1503b1ed\nRemoving intermediate container cd2e1503b1ed\n ---> ee0470db98c0\nSuccessfully built ee0470db98c0\nSuccessfully tagged fuzzball:latest\n","stderr":"","imageSize":126357355},"repair":{"violations":[{"name":"configureShouldUseBuildFlag","position":{"start":7,"end":7,"columnStart":4,"columnEnd":49}},{"name":"ruleAptGetInstallUseNoRec","position":{"start":2,"end":4,"columnStart":4,"columnEnd":31}},{"name":"ruleAptGetInstallUseNoRec","position":{"start":15,"end":15,"columnStart":7,"columnEnd":43}},{"name":"ruleAptGetUpdatePrecedesInstall","position":{"start":2,"end":4,"columnStart":4,"columnEnd":31}},{"name":"ruleAptGetInstallThenRemoveAptLists","position":{"start":2,"end":4,"columnStart":4,"columnEnd":31}},{"name":"ruleAptGetInstallThenRemoveAptLists","position":{"start":15,"end":15,"columnStart":7,"columnEnd":43}}],"repairedDockerfile":"FROM ubuntu:20.04\nRUN apt update && apt dist-upgrade -y\nRUN apt-get install --no-install-recommends -y build-essential \\\n      libpcre3-dev libssl-dev git autoconf \\\n      automake autoconf-archive\nCOPY . fuzzball/\nRUN cd fuzzball && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl --prefix /root/scratch && make clean && \\\n    make && make install && cd docs && \\\n    ../src/prochelp ../src/mpihelp.raw mpihelp.txt mpihelp.html && \\\n    ../src/prochelp ../src/mufman.raw mufman.txt mufman.html && \\\n    ../src/prochelp ../src/muckhelp.raw muckhelp.txt muckhelp.html\n\nFROM ubuntu:20.04\nRUN apt update && apt dist-upgrade -y \\\n    && apt-get install --no-install-recommends -y libssl1.1 openssl \\\n    && mkdir -p /opt/fbmuck-base \\\n    && mkdir -p /opt/fbmuck-ssl\nCOPY --from=0 /root/scratch /usr\n\n# Copy docker-entrypoint.sh into /usr/bin\nCOPY scripts/docker-entrypoint.sh /usr/bin/\n\nRUN chmod a+rx /usr/bin/docker-entrypoint.sh\n\n# Copy FB base into /opt/fbmuck-base in case we need to start a blank DB\nCOPY game/ dbs/starterdb/ /opt/fbmuck-base/\n# Additionally, copy files in docs into the fbmuck-base/data directory\n# so users have helpful things like help.txt\nCOPY docs/ /opt/fbmuck-base/data\n\n# Rename the base db to the right db file name\nRUN mv /opt/fbmuck-base/data/starterdb.db /opt/fbmuck-base/data/std-db.db\n\n# Uncomment this before building if you want the database saved upon\n# process termination\n#STOPSIGNAL SIGUSR2\n\nENTRYPOINT [\"bash\", \"/usr/bin/docker-entrypoint.sh\"]\n"},"repairedBuild":{"startTimestamp":1672372926446,"endTimestamp":1672373049544,"error":null,"stdout":"Sending build context to Docker daemon  8.504MB\r\r\nStep 1/14 : FROM ubuntu:20.04\n ---> d5447fc01ae6\nStep 2/14 : RUN apt update && apt dist-upgrade -y\n ---> Running in f4ff081cd417\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mGet:1 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]\nGet:2 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\nGet:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\nGet:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\nGet:5 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [972 kB]\nGet:6 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1779 kB]\nGet:7 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2358 kB]\nGet:8 http://archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [177 kB]\nGet:9 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [27.7 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal/restricted amd64 Packages [33.4 kB]\nGet:11 http://archive.ubuntu.com/ubuntu focal/universe amd64 Packages [11.3 MB]\nGet:12 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages [1275 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1275 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2828 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1894 kB]\nGet:16 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [30.4 kB]\nGet:17 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\nGet:18 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\nFetched 24.7 MB in 2s (14.1 MB/s)\nReading package lists...\nBuilding dependency tree...\nReading state information...\nAll packages are up to date.\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mReading package lists...\nBuilding dependency tree...\nReading state information...\nCalculating upgrade...\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\nRemoving intermediate container f4ff081cd417\n ---> 98ba39a5a0e5\nStep 3/14 : RUN apt-get install --no-install-recommends -y build-essential       libpcre3-dev libssl-dev git autoconf       automake autoconf-archive\n ---> Running in 8351068c3277\nReading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  autotools-dev binutils binutils-common binutils-x86-64-linux-gnu cpp cpp-9\n  dpkg-dev g++ g++-9 gcc gcc-9 gcc-9-base git-man libasan5 libasn1-8-heimdal\n  libatomic1 libbinutils libbrotli1 libc-dev-bin libc6-dev libcc1-0\n  libcrypt-dev libctf-nobfd0 libctf0 libcurl3-gnutls libdpkg-perl\n  liberror-perl libexpat1 libgcc-9-dev libgdbm-compat4 libgdbm6 libgomp1\n  libgssapi-krb5-2 libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal\n  libheimntlm0-heimdal libhx509-5-heimdal libisl22 libitm1 libk5crypto3\n  libkeyutils1 libkrb5-26-heimdal libkrb5-3 libkrb5support0 libldap-2.4-2\n  libldap-common liblsan0 libmpc3 libmpfr6 libnghttp2-14 libpcre16-3\n  libpcre32-3 libpcrecpp0v5 libperl5.30 libpsl5 libquadmath0\n  libroken18-heimdal librtmp1 libsasl2-2 libsasl2-modules-db libsigsegv2\n  libsqlite3-0 libssh-4 libssl1.1 libstdc++-9-dev libtsan0 libubsan1\n  libwind0-heimdal linux-libc-dev m4 make patch perl perl-modules-5.30\n  xz-utils\nSuggested packages:\n  gnu-standards autoconf-doc libtool gettext binutils-doc cpp-doc\n  gcc-9-locales debian-keyring g++-multilib g++-9-multilib gcc-9-doc\n  gcc-multilib manpages-dev flex bison gdb gcc-doc gcc-9-multilib gettext-base\n  git-daemon-run | git-daemon-sysvinit git-doc git-el git-email git-gui gitk\n  gitweb git-cvs git-mediawiki git-svn glibc-doc gnupg | gnupg2 bzr gdbm-l10n\n  krb5-doc krb5-user libssl-doc libstdc++-9-doc m4-doc make-doc ed\n  diffutils-doc perl-doc libterm-readline-gnu-perl\n  | libterm-readline-perl-perl libb-debug-perl liblocale-codes-perl\nRecommended packages:\n  fakeroot gnupg | gnupg2 libalgorithm-merge-perl ca-certificates less\n  ssh-client manpages manpages-dev libfile-fcntllock-perl\n  liblocale-gettext-perl krb5-locales publicsuffix libsasl2-modules netbase\nThe following NEW packages will be installed:\n  autoconf autoconf-archive automake autotools-dev binutils binutils-common\n  binutils-x86-64-linux-gnu build-essential cpp cpp-9 dpkg-dev g++ g++-9 gcc\n  gcc-9 gcc-9-base git git-man libasan5 libasn1-8-heimdal libatomic1\n  libbinutils libbrotli1 libc-dev-bin libc6-dev libcc1-0 libcrypt-dev\n  libctf-nobfd0 libctf0 libcurl3-gnutls libdpkg-perl liberror-perl libexpat1\n  libgcc-9-dev libgdbm-compat4 libgdbm6 libgomp1 libgssapi-krb5-2\n  libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal\n  libheimntlm0-heimdal libhx509-5-heimdal libisl22 libitm1 libk5crypto3\n  libkeyutils1 libkrb5-26-heimdal libkrb5-3 libkrb5support0 libldap-2.4-2\n  libldap-common liblsan0 libmpc3 libmpfr6 libnghttp2-14 libpcre16-3\n  libpcre3-dev libpcre32-3 libpcrecpp0v5 libperl5.30 libpsl5 libquadmath0\n  libroken18-heimdal librtmp1 libsasl2-2 libsasl2-modules-db libsigsegv2\n  libsqlite3-0 libssh-4 libssl-dev libssl1.1 libstdc++-9-dev libtsan0\n  libubsan1 libwind0-heimdal linux-libc-dev m4 make patch perl\n  perl-modules-5.30 xz-utils\n0 upgraded, 83 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 64.4 MB of archives.\nAfter this operation, 320 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 autoconf-archive all 20190106-2.1ubuntu1 [665 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 perl-modules-5.30 all 5.30.0-9ubuntu0.3 [2739 kB]\nGet:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libgdbm6 amd64 1.18.1-5 [27.4 kB]\nGet:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libgdbm-compat4 amd64 1.18.1-5 [6244 B]\nGet:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libperl5.30 amd64 5.30.0-9ubuntu0.3 [3951 kB]\nGet:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 perl amd64 5.30.0-9ubuntu0.3 [224 kB]\nGet:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libexpat1 amd64 2.2.9-1ubuntu0.6 [74.6 kB]\nGet:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsqlite3-0 amd64 3.31.1-4ubuntu0.5 [549 kB]\nGet:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl1.1 amd64 1.1.1f-1ubuntu2.16 [1321 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 xz-utils amd64 5.2.4-1ubuntu1.1 [82.6 kB]\nGet:11 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkrb5support0 amd64 1.17-6ubuntu4.1 [30.9 kB]\nGet:12 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libk5crypto3 amd64 1.17-6ubuntu4.1 [79.9 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkeyutils1 amd64 1.6-6ubuntu1.1 [10.3 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkrb5-3 amd64 1.17-6ubuntu4.1 [330 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgssapi-krb5-2 amd64 1.17-6ubuntu4.1 [121 kB]\nGet:16 http://archive.ubuntu.com/ubuntu focal/main amd64 libpsl5 amd64 0.21.0-1ubuntu1 [51.5 kB]\nGet:17 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]\nGet:18 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]\nGet:19 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]\nGet:20 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]\nGet:21 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]\nGet:22 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-common amd64 2.34-6ubuntu1.4 [207 kB]\nGet:23 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libbinutils amd64 2.34-6ubuntu1.4 [474 kB]\nGet:24 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf-nobfd0 amd64 2.34-6ubuntu1.4 [47.2 kB]\nGet:25 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf0 amd64 2.34-6ubuntu1.4 [46.6 kB]\nGet:26 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-x86-64-linux-gnu amd64 2.34-6ubuntu1.4 [1613 kB]\nGet:27 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils amd64 2.34-6ubuntu1.4 [3380 B]\nGet:28 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libc-dev-bin amd64 2.31-0ubuntu9.9 [71.8 kB]\nGet:29 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 linux-libc-dev amd64 5.4.0-135.152 [1121 kB]\nGet:30 http://archive.ubuntu.com/ubuntu focal/main amd64 libcrypt-dev amd64 1:4.4.10-10ubuntu4 [104 kB]\nGet:31 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libc6-dev amd64 2.31-0ubuntu9.9 [2519 kB]\nGet:32 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gcc-9-base amd64 9.4.0-1ubuntu1~20.04.1 [19.4 kB]\nGet:33 http://archive.ubuntu.com/ubuntu focal/main amd64 libisl22 amd64 0.22.1-1 [592 kB]\nGet:34 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpfr6 amd64 4.0.2-1 [240 kB]\nGet:35 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpc3 amd64 1.1.0-1 [40.8 kB]\nGet:36 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cpp-9 amd64 9.4.0-1ubuntu1~20.04.1 [7500 kB]\nGet:37 http://archive.ubuntu.com/ubuntu focal/main amd64 cpp amd64 4:9.3.0-1ubuntu2 [27.6 kB]\nGet:38 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcc1-0 amd64 10.3.0-1ubuntu1~20.04 [48.8 kB]\nGet:39 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgomp1 amd64 10.3.0-1ubuntu1~20.04 [102 kB]\nGet:40 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libitm1 amd64 10.3.0-1ubuntu1~20.04 [26.2 kB]\nGet:41 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libatomic1 amd64 10.3.0-1ubuntu1~20.04 [9284 B]\nGet:42 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasan5 amd64 9.4.0-1ubuntu1~20.04.1 [2751 kB]\nGet:43 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 liblsan0 amd64 10.3.0-1ubuntu1~20.04 [835 kB]\nGet:44 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libtsan0 amd64 10.3.0-1ubuntu1~20.04 [2009 kB]\nGet:45 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libubsan1 amd64 10.3.0-1ubuntu1~20.04 [784 kB]\nGet:46 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libquadmath0 amd64 10.3.0-1ubuntu1~20.04 [146 kB]\nGet:47 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgcc-9-dev amd64 9.4.0-1ubuntu1~20.04.1 [2359 kB]\nGet:48 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gcc-9 amd64 9.4.0-1ubuntu1~20.04.1 [8274 kB]\nGet:49 http://archive.ubuntu.com/ubuntu focal/main amd64 gcc amd64 4:9.3.0-1ubuntu2 [5208 B]\nGet:50 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libstdc++-9-dev amd64 9.4.0-1ubuntu1~20.04.1 [1722 kB]\nGet:51 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 g++-9 amd64 9.4.0-1ubuntu1~20.04.1 [8420 kB]\nGet:52 http://archive.ubuntu.com/ubuntu focal/main amd64 g++ amd64 4:9.3.0-1ubuntu2 [1604 B]\nGet:53 http://archive.ubuntu.com/ubuntu focal/main amd64 make amd64 4.2.1-1.2 [162 kB]\nGet:54 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdpkg-perl all 1.19.7ubuntu3.2 [231 kB]\nGet:55 http://archive.ubuntu.com/ubuntu focal/main amd64 patch amd64 2.7.6-6 [105 kB]\nGet:56 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dpkg-dev all 1.19.7ubuntu3.2 [679 kB]\nGet:57 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 build-essential amd64 12.8ubuntu1.1 [4664 B]\nGet:58 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libbrotli1 amd64 1.0.7-6ubuntu0.1 [267 kB]\nGet:59 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libroken18-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [42.3 kB]\nGet:60 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasn1-8-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [181 kB]\nGet:61 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libheimbase1-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [30.0 kB]\nGet:62 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libhcrypto4-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [87.9 kB]\nGet:63 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libwind0-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [48.0 kB]\nGet:64 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libhx509-5-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [107 kB]\nGet:65 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libkrb5-26-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [207 kB]\nGet:66 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libheimntlm0-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [15.1 kB]\nGet:67 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgssapi3-heimdal amd64 7.7.0+dfsg-1ubuntu1.2 [96.2 kB]\nGet:68 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsasl2-modules-db amd64 2.1.27+dfsg-2ubuntu0.1 [14.7 kB]\nGet:69 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsasl2-2 amd64 2.1.27+dfsg-2ubuntu0.1 [49.3 kB]\nGet:70 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libldap-common all 2.4.49+dfsg-2ubuntu1.9 [16.6 kB]\nGet:71 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libldap-2.4-2 amd64 2.4.49+dfsg-2ubuntu1.9 [155 kB]\nGet:72 http://archive.ubuntu.com/ubuntu focal/main amd64 libnghttp2-14 amd64 1.40.0-1build1 [78.7 kB]\nGet:73 http://archive.ubuntu.com/ubuntu focal/main amd64 librtmp1 amd64 2.4+20151223.gitfa8646d.1-2build1 [54.9 kB]\nGet:74 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssh-4 amd64 0.9.3-2ubuntu2.2 [170 kB]\nGet:75 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcurl3-gnutls amd64 7.68.0-1ubuntu2.14 [233 kB]\nGet:76 http://archive.ubuntu.com/ubuntu focal/main amd64 liberror-perl all 0.17029-1 [26.5 kB]\nGet:77 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 git-man all 1:2.25.1-1ubuntu3.6 [887 kB]\nGet:78 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 git amd64 1:2.25.1-1ubuntu3.6 [4529 kB]\nGet:79 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcre16-3 amd64 2:8.39-12ubuntu0.1 [150 kB]\nGet:80 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcre32-3 amd64 2:8.39-12ubuntu0.1 [140 kB]\nGet:81 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcrecpp0v5 amd64 2:8.39-12ubuntu0.1 [15.5 kB]\nGet:82 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcre3-dev amd64 2:8.39-12ubuntu0.1 [540 kB]\nGet:83 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl-dev amd64 1.1.1f-1ubuntu2.16 [1584 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 64.4 MB in 5s (12.7 MB/s)\nSelecting previously unselected package autoconf-archive.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 4126 files and directories currently installed.)\r\nPreparing to unpack .../00-autoconf-archive_20190106-2.1ubuntu1_all.deb ...\r\nUnpacking autoconf-archive (20190106-2.1ubuntu1) ...\r\nSelecting previously unselected package perl-modules-5.30.\r\nPreparing to unpack .../01-perl-modules-5.30_5.30.0-9ubuntu0.3_all.deb ...\r\nUnpacking perl-modules-5.30 (5.30.0-9ubuntu0.3) ...\r\nSelecting previously unselected package libgdbm6:amd64.\r\nPreparing to unpack .../02-libgdbm6_1.18.1-5_amd64.deb ...\r\nUnpacking libgdbm6:amd64 (1.18.1-5) ...\r\nSelecting previously unselected package libgdbm-compat4:amd64.\r\nPreparing to unpack .../03-libgdbm-compat4_1.18.1-5_amd64.deb ...\r\nUnpacking libgdbm-compat4:amd64 (1.18.1-5) ...\r\nSelecting previously unselected package libperl5.30:amd64.\r\nPreparing to unpack .../04-libperl5.30_5.30.0-9ubuntu0.3_amd64.deb ...\r\nUnpacking libperl5.30:amd64 (5.30.0-9ubuntu0.3) ...\r\nSelecting previously unselected package perl.\r\nPreparing to unpack .../05-perl_5.30.0-9ubuntu0.3_amd64.deb ...\r\nUnpacking perl (5.30.0-9ubuntu0.3) ...\r\nSelecting previously unselected package libexpat1:amd64.\r\nPreparing to unpack .../06-libexpat1_2.2.9-1ubuntu0.6_amd64.deb ...\r\nUnpacking libexpat1:amd64 (2.2.9-1ubuntu0.6) ...\r\nSelecting previously unselected package libsqlite3-0:amd64.\r\nPreparing to unpack .../07-libsqlite3-0_3.31.1-4ubuntu0.5_amd64.deb ...\r\nUnpacking libsqlite3-0:amd64 (3.31.1-4ubuntu0.5) ...\r\nSelecting previously unselected package libssl1.1:amd64.\r\nPreparing to unpack .../08-libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSelecting previously unselected package xz-utils.\r\nPreparing to unpack .../09-xz-utils_5.2.4-1ubuntu1.1_amd64.deb ...\r\nUnpacking xz-utils (5.2.4-1ubuntu1.1) ...\r\nSelecting previously unselected package libkrb5support0:amd64.\r\nPreparing to unpack .../10-libkrb5support0_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libkrb5support0:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libk5crypto3:amd64.\r\nPreparing to unpack .../11-libk5crypto3_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libk5crypto3:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libkeyutils1:amd64.\r\nPreparing to unpack .../12-libkeyutils1_1.6-6ubuntu1.1_amd64.deb ...\r\nUnpacking libkeyutils1:amd64 (1.6-6ubuntu1.1) ...\r\nSelecting previously unselected package libkrb5-3:amd64.\r\nPreparing to unpack .../13-libkrb5-3_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libkrb5-3:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libgssapi-krb5-2:amd64.\r\nPreparing to unpack .../14-libgssapi-krb5-2_1.17-6ubuntu4.1_amd64.deb ...\r\nUnpacking libgssapi-krb5-2:amd64 (1.17-6ubuntu4.1) ...\r\nSelecting previously unselected package libpsl5:amd64.\r\nPreparing to unpack .../15-libpsl5_0.21.0-1ubuntu1_amd64.deb ...\r\nUnpacking libpsl5:amd64 (0.21.0-1ubuntu1) ...\r\nSelecting previously unselected package libsigsegv2:amd64.\r\nPreparing to unpack .../16-libsigsegv2_2.12-2_amd64.deb ...\r\nUnpacking libsigsegv2:amd64 (2.12-2) ...\r\nSelecting previously unselected package m4.\r\nPreparing to unpack .../17-m4_1.4.18-4_amd64.deb ...\r\nUnpacking m4 (1.4.18-4) ...\r\nSelecting previously unselected package autoconf.\r\nPreparing to unpack .../18-autoconf_2.69-11.1_all.deb ...\r\nUnpacking autoconf (2.69-11.1) ...\r\nSelecting previously unselected package autotools-dev.\r\nPreparing to unpack .../19-autotools-dev_20180224.1_all.deb ...\r\nUnpacking autotools-dev (20180224.1) ...\r\nSelecting previously unselected package automake.\r\nPreparing to unpack .../20-automake_1%3a1.16.1-4ubuntu6_all.deb ...\r\nUnpacking automake (1:1.16.1-4ubuntu6) ...\r\nSelecting previously unselected package binutils-common:amd64.\r\nPreparing to unpack .../21-binutils-common_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking binutils-common:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libbinutils:amd64.\r\nPreparing to unpack .../22-libbinutils_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking libbinutils:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libctf-nobfd0:amd64.\r\nPreparing to unpack .../23-libctf-nobfd0_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking libctf-nobfd0:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libctf0:amd64.\r\nPreparing to unpack .../24-libctf0_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking libctf0:amd64 (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package binutils-x86-64-linux-gnu.\r\nPreparing to unpack .../25-binutils-x86-64-linux-gnu_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking binutils-x86-64-linux-gnu (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package binutils.\r\nPreparing to unpack .../26-binutils_2.34-6ubuntu1.4_amd64.deb ...\r\nUnpacking binutils (2.34-6ubuntu1.4) ...\r\nSelecting previously unselected package libc-dev-bin.\r\nPreparing to unpack .../27-libc-dev-bin_2.31-0ubuntu9.9_amd64.deb ...\r\nUnpacking libc-dev-bin (2.31-0ubuntu9.9) ...\r\nSelecting previously unselected package linux-libc-dev:amd64.\r\nPreparing to unpack .../28-linux-libc-dev_5.4.0-135.152_amd64.deb ...\r\nUnpacking linux-libc-dev:amd64 (5.4.0-135.152) ...\r\nSelecting previously unselected package libcrypt-dev:amd64.\r\nPreparing to unpack .../29-libcrypt-dev_1%3a4.4.10-10ubuntu4_amd64.deb ...\r\nUnpacking libcrypt-dev:amd64 (1:4.4.10-10ubuntu4) ...\r\nSelecting previously unselected package libc6-dev:amd64.\r\nPreparing to unpack .../30-libc6-dev_2.31-0ubuntu9.9_amd64.deb ...\r\nUnpacking libc6-dev:amd64 (2.31-0ubuntu9.9) ...\r\nSelecting previously unselected package gcc-9-base:amd64.\r\nPreparing to unpack .../31-gcc-9-base_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking gcc-9-base:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package libisl22:amd64.\r\nPreparing to unpack .../32-libisl22_0.22.1-1_amd64.deb ...\r\nUnpacking libisl22:amd64 (0.22.1-1) ...\r\nSelecting previously unselected package libmpfr6:amd64.\r\nPreparing to unpack .../33-libmpfr6_4.0.2-1_amd64.deb ...\r\nUnpacking libmpfr6:amd64 (4.0.2-1) ...\r\nSelecting previously unselected package libmpc3:amd64.\r\nPreparing to unpack .../34-libmpc3_1.1.0-1_amd64.deb ...\r\nUnpacking libmpc3:amd64 (1.1.0-1) ...\r\nSelecting previously unselected package cpp-9.\r\nPreparing to unpack .../35-cpp-9_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking cpp-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package cpp.\r\nPreparing to unpack .../36-cpp_4%3a9.3.0-1ubuntu2_amd64.deb ...\r\nUnpacking cpp (4:9.3.0-1ubuntu2) ...\r\nSelecting previously unselected package libcc1-0:amd64.\r\nPreparing to unpack .../37-libcc1-0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libcc1-0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libgomp1:amd64.\r\nPreparing to unpack .../38-libgomp1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libgomp1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libitm1:amd64.\r\nPreparing to unpack .../39-libitm1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libitm1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libatomic1:amd64.\r\nPreparing to unpack .../40-libatomic1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libatomic1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libasan5:amd64.\r\nPreparing to unpack .../41-libasan5_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking libasan5:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package liblsan0:amd64.\r\nPreparing to unpack .../42-liblsan0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking liblsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libtsan0:amd64.\r\nPreparing to unpack .../43-libtsan0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libtsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libubsan1:amd64.\r\nPreparing to unpack .../44-libubsan1_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libubsan1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libquadmath0:amd64.\r\nPreparing to unpack .../45-libquadmath0_10.3.0-1ubuntu1~20.04_amd64.deb ...\r\nUnpacking libquadmath0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSelecting previously unselected package libgcc-9-dev:amd64.\r\nPreparing to unpack .../46-libgcc-9-dev_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking libgcc-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package gcc-9.\r\nPreparing to unpack .../47-gcc-9_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking gcc-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package gcc.\r\nPreparing to unpack .../48-gcc_4%3a9.3.0-1ubuntu2_amd64.deb ...\r\nUnpacking gcc (4:9.3.0-1ubuntu2) ...\r\nSelecting previously unselected package libstdc++-9-dev:amd64.\r\nPreparing to unpack .../49-libstdc++-9-dev_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking libstdc++-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package g++-9.\r\nPreparing to unpack .../50-g++-9_9.4.0-1ubuntu1~20.04.1_amd64.deb ...\r\nUnpacking g++-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSelecting previously unselected package g++.\r\nPreparing to unpack .../51-g++_4%3a9.3.0-1ubuntu2_amd64.deb ...\r\nUnpacking g++ (4:9.3.0-1ubuntu2) ...\r\nSelecting previously unselected package make.\r\nPreparing to unpack .../52-make_4.2.1-1.2_amd64.deb ...\r\nUnpacking make (4.2.1-1.2) ...\r\nSelecting previously unselected package libdpkg-perl.\r\nPreparing to unpack .../53-libdpkg-perl_1.19.7ubuntu3.2_all.deb ...\r\nUnpacking libdpkg-perl (1.19.7ubuntu3.2) ...\r\nSelecting previously unselected package patch.\r\nPreparing to unpack .../54-patch_2.7.6-6_amd64.deb ...\r\nUnpacking patch (2.7.6-6) ...\r\nSelecting previously unselected package dpkg-dev.\r\nPreparing to unpack .../55-dpkg-dev_1.19.7ubuntu3.2_all.deb ...\r\nUnpacking dpkg-dev (1.19.7ubuntu3.2) ...\r\nSelecting previously unselected package build-essential.\r\nPreparing to unpack .../56-build-essential_12.8ubuntu1.1_amd64.deb ...\r\nUnpacking build-essential (12.8ubuntu1.1) ...\r\nSelecting previously unselected package libbrotli1:amd64.\r\nPreparing to unpack .../57-libbrotli1_1.0.7-6ubuntu0.1_amd64.deb ...\r\nUnpacking libbrotli1:amd64 (1.0.7-6ubuntu0.1) ...\r\nSelecting previously unselected package libroken18-heimdal:amd64.\r\nPreparing to unpack .../58-libroken18-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libroken18-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libasn1-8-heimdal:amd64.\r\nPreparing to unpack .../59-libasn1-8-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libasn1-8-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libheimbase1-heimdal:amd64.\r\nPreparing to unpack .../60-libheimbase1-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libheimbase1-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libhcrypto4-heimdal:amd64.\r\nPreparing to unpack .../61-libhcrypto4-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libhcrypto4-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libwind0-heimdal:amd64.\r\nPreparing to unpack .../62-libwind0-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libwind0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libhx509-5-heimdal:amd64.\r\nPreparing to unpack .../63-libhx509-5-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libhx509-5-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libkrb5-26-heimdal:amd64.\r\nPreparing to unpack .../64-libkrb5-26-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libkrb5-26-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libheimntlm0-heimdal:amd64.\r\nPreparing to unpack .../65-libheimntlm0-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libheimntlm0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libgssapi3-heimdal:amd64.\r\nPreparing to unpack .../66-libgssapi3-heimdal_7.7.0+dfsg-1ubuntu1.2_amd64.deb ...\r\nUnpacking libgssapi3-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSelecting previously unselected package libsasl2-modules-db:amd64.\r\nPreparing to unpack .../67-libsasl2-modules-db_2.1.27+dfsg-2ubuntu0.1_amd64.deb ...\r\nUnpacking libsasl2-modules-db:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSelecting previously unselected package libsasl2-2:amd64.\r\nPreparing to unpack .../68-libsasl2-2_2.1.27+dfsg-2ubuntu0.1_amd64.deb ...\r\nUnpacking libsasl2-2:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSelecting previously unselected package libldap-common.\r\nPreparing to unpack .../69-libldap-common_2.4.49+dfsg-2ubuntu1.9_all.deb ...\r\nUnpacking libldap-common (2.4.49+dfsg-2ubuntu1.9) ...\r\nSelecting previously unselected package libldap-2.4-2:amd64.\r\nPreparing to unpack .../70-libldap-2.4-2_2.4.49+dfsg-2ubuntu1.9_amd64.deb ...\r\nUnpacking libldap-2.4-2:amd64 (2.4.49+dfsg-2ubuntu1.9) ...\r\nSelecting previously unselected package libnghttp2-14:amd64.\r\nPreparing to unpack .../71-libnghttp2-14_1.40.0-1build1_amd64.deb ...\r\nUnpacking libnghttp2-14:amd64 (1.40.0-1build1) ...\r\nSelecting previously unselected package librtmp1:amd64.\r\nPreparing to unpack .../72-librtmp1_2.4+20151223.gitfa8646d.1-2build1_amd64.deb ...\r\nUnpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2build1) ...\r\nSelecting previously unselected package libssh-4:amd64.\r\nPreparing to unpack .../73-libssh-4_0.9.3-2ubuntu2.2_amd64.deb ...\r\nUnpacking libssh-4:amd64 (0.9.3-2ubuntu2.2) ...\r\nSelecting previously unselected package libcurl3-gnutls:amd64.\r\nPreparing to unpack .../74-libcurl3-gnutls_7.68.0-1ubuntu2.14_amd64.deb ...\r\nUnpacking libcurl3-gnutls:amd64 (7.68.0-1ubuntu2.14) ...\r\nSelecting previously unselected package liberror-perl.\r\nPreparing to unpack .../75-liberror-perl_0.17029-1_all.deb ...\r\nUnpacking liberror-perl (0.17029-1) ...\r\nSelecting previously unselected package git-man.\r\nPreparing to unpack .../76-git-man_1%3a2.25.1-1ubuntu3.6_all.deb ...\r\nUnpacking git-man (1:2.25.1-1ubuntu3.6) ...\r\nSelecting previously unselected package git.\r\nPreparing to unpack .../77-git_1%3a2.25.1-1ubuntu3.6_amd64.deb ...\r\nUnpacking git (1:2.25.1-1ubuntu3.6) ...\r\nSelecting previously unselected package libpcre16-3:amd64.\r\nPreparing to unpack .../78-libpcre16-3_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcre16-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libpcre32-3:amd64.\r\nPreparing to unpack .../79-libpcre32-3_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcre32-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libpcrecpp0v5:amd64.\r\nPreparing to unpack .../80-libpcrecpp0v5_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcrecpp0v5:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libpcre3-dev:amd64.\r\nPreparing to unpack .../81-libpcre3-dev_2%3a8.39-12ubuntu0.1_amd64.deb ...\r\nUnpacking libpcre3-dev:amd64 (2:8.39-12ubuntu0.1) ...\r\nSelecting previously unselected package libssl-dev:amd64.\r\nPreparing to unpack .../82-libssl-dev_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking libssl-dev:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSetting up libexpat1:amd64 (2.2.9-1ubuntu0.6) ...\r\nSetting up libpcrecpp0v5:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up libkeyutils1:amd64 (1.6-6ubuntu1.1) ...\r\nSetting up libpsl5:amd64 (0.21.0-1ubuntu1) ...\r\nSetting up perl-modules-5.30 (5.30.0-9ubuntu0.3) ...\r\nSetting up libpcre16-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up libbrotli1:amd64 (1.0.7-6ubuntu0.1) ...\r\nSetting up libsqlite3-0:amd64 (3.31.1-4ubuntu0.5) ...\r\nSetting up binutils-common:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up libnghttp2-14:amd64 (1.40.0-1build1) ...\r\nSetting up linux-libc-dev:amd64 (5.4.0-135.152) ...\r\nSetting up libctf-nobfd0:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up autoconf-archive (20190106-2.1ubuntu1) ...\r\nSetting up libgomp1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libldap-common (2.4.49+dfsg-2ubuntu1.9) ...\r\nSetting up libkrb5support0:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libsasl2-modules-db:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSetting up autotools-dev (20180224.1) ...\r\nSetting up make (4.2.1-1.2) ...\r\nSetting up libmpfr6:amd64 (4.0.2-1) ...\r\nSetting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2build1) ...\r\nSetting up libsigsegv2:amd64 (2.12-2) ...\r\nSetting up xz-utils (5.2.4-1ubuntu1.1) ...\r\nupdate-alternatives: using /usr/bin/xz to provide /usr/bin/lzma (lzma) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzma.1.gz because associated file /usr/share/man/man1/xz.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/unlzma.1.gz because associated file /usr/share/man/man1/unxz.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzcat.1.gz because associated file /usr/share/man/man1/xzcat.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzmore.1.gz because associated file /usr/share/man/man1/xzmore.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzless.1.gz because associated file /usr/share/man/man1/xzless.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzdiff.1.gz because associated file /usr/share/man/man1/xzdiff.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzcmp.1.gz because associated file /usr/share/man/man1/xzcmp.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzgrep.1.gz because associated file /usr/share/man/man1/xzgrep.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzegrep.1.gz because associated file /usr/share/man/man1/xzegrep.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzfgrep.1.gz because associated file /usr/share/man/man1/xzfgrep.1.gz (of link group lzma) doesn't exist\r\nSetting up libquadmath0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libssl-dev:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSetting up libpcre32-3:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up libmpc3:amd64 (1.1.0-1) ...\r\nSetting up libatomic1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up patch (2.7.6-6) ...\r\nSetting up libk5crypto3:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libsasl2-2:amd64 (2.1.27+dfsg-2ubuntu0.1) ...\r\nSetting up libroken18-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libubsan1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libcrypt-dev:amd64 (1:4.4.10-10ubuntu4) ...\r\nSetting up git-man (1:2.25.1-1ubuntu3.6) ...\r\nSetting up libisl22:amd64 (0.22.1-1) ...\r\nSetting up libkrb5-3:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libbinutils:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up libc-dev-bin (2.31-0ubuntu9.9) ...\r\nSetting up libcc1-0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up liblsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libitm1:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libheimbase1-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libgdbm6:amd64 (1.18.1-5) ...\r\nSetting up gcc-9-base:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libtsan0:amd64 (10.3.0-1ubuntu1~20.04) ...\r\nSetting up libctf0:amd64 (2.34-6ubuntu1.4) ...\r\nSetting up libasn1-8-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up m4 (1.4.18-4) ...\r\nSetting up libhcrypto4-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libasan5:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libwind0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up libgssapi-krb5-2:amd64 (1.17-6ubuntu4.1) ...\r\nSetting up libgdbm-compat4:amd64 (1.18.1-5) ...\r\nSetting up libssh-4:amd64 (0.9.3-2ubuntu2.2) ...\r\nSetting up cpp-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libperl5.30:amd64 (5.30.0-9ubuntu0.3) ...\r\nSetting up libc6-dev:amd64 (2.31-0ubuntu9.9) ...\r\nSetting up binutils-x86-64-linux-gnu (2.34-6ubuntu1.4) ...\r\nSetting up libpcre3-dev:amd64 (2:8.39-12ubuntu0.1) ...\r\nSetting up libhx509-5-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up binutils (2.34-6ubuntu1.4) ...\r\nSetting up libgcc-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up perl (5.30.0-9ubuntu0.3) ...\r\nSetting up libdpkg-perl (1.19.7ubuntu3.2) ...\r\nSetting up autoconf (2.69-11.1) ...\r\nSetting up cpp (4:9.3.0-1ubuntu2) ...\r\nSetting up libkrb5-26-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up automake (1:1.16.1-4ubuntu6) ...\r\nupdate-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist\r\nSetting up gcc-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libstdc++-9-dev:amd64 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up libheimntlm0-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up gcc (4:9.3.0-1ubuntu2) ...\r\nSetting up dpkg-dev (1.19.7ubuntu3.2) ...\r\nSetting up liberror-perl (0.17029-1) ...\r\nSetting up libgssapi3-heimdal:amd64 (7.7.0+dfsg-1ubuntu1.2) ...\r\nSetting up g++-9 (9.4.0-1ubuntu1~20.04.1) ...\r\nSetting up g++ (4:9.3.0-1ubuntu2) ...\r\nupdate-alternatives: using /usr/bin/g++ to provide /usr/bin/c++ (c++) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/c++.1.gz because associated file /usr/share/man/man1/g++.1.gz (of link group c++) doesn't exist\r\nSetting up build-essential (12.8ubuntu1.1) ...\r\nSetting up libldap-2.4-2:amd64 (2.4.49+dfsg-2ubuntu1.9) ...\r\nSetting up libcurl3-gnutls:amd64 (7.68.0-1ubuntu2.14) ...\r\nSetting up git (1:2.25.1-1ubuntu3.6) ...\r\nProcessing triggers for libc-bin (2.31-0ubuntu9.9) ...\r\nRemoving intermediate container 8351068c3277\n ---> fa30eb0a7222\nStep 4/14 : COPY . fuzzball/\n ---> 09be60b59adf\nStep 5/14 : RUN cd fuzzball &&     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl --prefix /root/scratch && make clean &&     make && make install && cd docs &&     ../src/prochelp ../src/mpihelp.raw mpihelp.txt mpihelp.html &&     ../src/prochelp ../src/mufman.raw mufman.txt mufman.html &&     ../src/prochelp ../src/muckhelp.raw muckhelp.txt muckhelp.html\n ---> Running in 7e7680bfc2c5\n \nTinyMUCK fb7.x auto-configure script.\n \nThis script will try and determine things about your system so\nthat FB can compile correctly. This will create your Makefile\nand the header file autoconf.h in the include directory.\n \nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... none needed\nchecking whether C compiler accepts -std=gnu99... yes\nchecking whether C compiler accepts -fwrapv... yes\nchecking for PCRE directory... /usr\nchecking for pcre_free in -lpcre... yes\nchecking for SSL directory... /usr\nchecking for CRYPTO_free in -lcrypto... yes\nchecking for SSL_read in -lssl... yes\nchecking how to run the C preprocessor... gcc -E\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking malloc.h usability... yes\nchecking malloc.h presence... yes\nchecking for malloc.h... yes\nchecking for dirent.h that defines DIR... yes\nchecking for library containing opendir... none required\nchecking for pid_t... yes\nchecking for size_t... yes\nchecking for mallinfo... yes\nchecking for getrlimit... yes\nchecking for getrusage... yes\nchecking for arc4random_uniform... no\nchecking for pselect... yes\nchecking for struct mallinfo.hblks... no\nchecking for struct mallinfo.keepcost... no\nchecking for struct mallinfo.treeoverhead... no\nchecking for struct mallinfo.grain... no\nchecking for struct mallinfo.allocated... no\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating src/Makefile\nconfig.status: creating game/restart\nconfig.status: creating include/autoconf.h\n \nYou should review the options in include/config.h, and\nthen type make to build your system.\n \nfor d in src; do \\\n\tcd ${d} && make clean; \\\ndone\nmake[1]: Entering directory '/fuzzball/src'\nrm -f array.o boolexp.o compile.o create.o db.o debugger.o diskprop.o edit.o events.o fbmath.o fbsignal.o fbstrings.o fbtime.o game.o hashtab.o help.o interface.o interface_ssl.o interp.o log.o look.o match.o mcp.o mcpgui.o mcppkgs.o mfuns.o mfuns2.o move.o msgparse.o mufevent.o p_array.o p_connects.o p_db.o p_error.o p_float.o p_math.o p_mcp.o p_misc.o p_props.o p_regex.o p_stack.o p_strings.o pennies.o player.o predicates.o propdirs.o property.o props.o sanity.o set.o smtp.o speech.o timequeue.o tune.o wiz.o crt_malloc.o core resolver.o prochelp.o fbmuck fb-resolver prochelp\nrm -rf mkversion.dSYM\nmake[1]: Leaving directory '/fuzzball/src'\nfor d in src; do \\\n\tcd ${d} && make all; \\\ndone\nmake[1]: Entering directory '/fuzzball/src'\nCreating ../include/defines.h...\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c array.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c boolexp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c compile.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c create.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c db.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c debugger.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c diskprop.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c edit.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c events.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbmath.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbsignal.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbstrings.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c fbtime.c\n\u001b[91mfbtime.c: In function 'timestr_long':\nfbtime.c:329:47: warning: '%s' directive output may be truncated writing up to 2 bytes into a region of size between 1 and 100 [-Wformat-truncation=]\n  329 |             snprintf(value, sizeof(value), \"%s%s%ld %s%s\", buf, (*buf ? \", \" : \"\"), temp, str[i], temp != 1 ? \"s\" : \"\");\n      |                                               ^~\nfbtime.c:329:44: note: directive argument in the range [-9223372036854775807, 9223372036854775807]\n  329 |             snprintf(value, sizeof(value), \"%s%s%ld %s%s\", buf, (*buf ? \", \" : \"\"), temp, str[i], temp != 1 ? \"s\" : \"\");\n      |                                            ^~~~~~~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from fbtime.c:12:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 124) into a destination of size 100\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c game.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c hashtab.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c help.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c interface.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c interface_ssl.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c interp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c log.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c look.c\n\u001b[91mlook.c: In function 'listprops_wildcard':\nlook.c:649:47: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n  649 |             snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                               ^\nIn file included from /usr/include/stdio.h:867,\n                 from look.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 2 or more bytes (assuming 8193) into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c match.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mcp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mcpgui.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mcppkgs.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mfuns.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mfuns2.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c move.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c msgparse.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c mufevent.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_array.c\n\u001b[91mp_array.c: In function 'prim_array_get_propdirs':\np_array.c:1695:41: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1695 |         snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                         ^~                           ~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 16384 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c: In function 'prim_array_get_propvals':\np_array.c:1796:41: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1796 |         snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                         ^~                           ~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 16384 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c: In function 'prim_array_get_proplist':\np_array.c:1953:46: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n 1953 |     snprintf(propname, sizeof(propname), \"%s#\", dir);\n      |                                              ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 8193 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:1966:55: warning: '#' directive output may be truncated writing 1 byte into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1966 |             snprintf(propname, sizeof(propname), \"%s%c#\", dir,\n      |                                                       ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8194 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2014:50: warning: '%c' directive output may be truncated writing 1 byte into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2014 |         snprintf(propname, sizeof(propname), \"%s#%c%d\", dir, PROPDIR_DELIMITER, count);\n      |                                                  ^~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 8205 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2018:55: warning: '%d' directive output may be truncated writing between 1 and 11 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2018 |             snprintf(propname, sizeof(propname), \"%s%c%d\", dir, PROPDIR_DELIMITER, count);\n      |                                                       ^~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8204 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c:2022:59: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n 2022 |                 snprintf(propname, sizeof(propname), \"%s%d\", dir, count);\n      |                                                           ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 8203 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mp_array.c: In function 'prim_array_put_propvals':\np_array.c:2168:63: warning: '%.15g' directive output may be truncated writing between 1 and 22 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2168 |                     snprintf(propname, sizeof(propname), \"%s%c%.15g\", dir,\n      |                                                               ^~~~~\np_array.c:2168:58: note: assuming directive output of 21 bytes\n 2168 |                     snprintf(propname, sizeof(propname), \"%s%c%.15g\", dir,\n      |                                                          ^~~~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8215 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2158:65: warning: '__builtin___snprintf_chk' output may be truncated before the last format character [-Wformat-truncation=]\n 2158 |                     snprintf(propname, sizeof(propname), \"%s%c%s\", dir,\n      |                                                                 ^\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 8193 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\np_array.c:2163:63: warning: '%d' directive output may be truncated writing between 1 and 11 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 2163 |                     snprintf(propname, sizeof(propname), \"%s%c%d\", dir,\n      |                                                               ^~\nIn file included from /usr/include/stdio.h:867,\n                 from p_array.c:9:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8204 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_connects.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_db.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_error.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_float.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_math.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_mcp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_misc.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_props.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_regex.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_stack.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c p_strings.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c pennies.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c player.c\n\u001b[91mplayer.c: In function 'delete_player':\nplayer.c:394:54: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size 8172 [-Wformat-truncation=]\n  394 |                              \"## Renaming %s(#%d) to %s to prevent name \"\n      |                                                      ^~\n  395 |                              \"collision.\",\n  396 |                              NAME(ren), ren, namebuf);\n      |                                              ~~~~~~~  \nIn file included from /usr/include/stdio.h:867,\n                 from player.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 48 or more bytes (assuming 8239) into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c predicates.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c propdirs.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c property.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c props.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c sanity.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c set.c\n\u001b[91mset.c: In function 'do_register':\nset.c:1238:45: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size between 0 and 8191 [-Wformat-truncation=]\n 1238 |             snprintf(buf, sizeof(buf), \"%s%c%s\", dir, PROPDIR_DELIMITER, propname);\n      |                                             ^~                           ~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /usr/include/stdio.h:867,\n                 from set.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 2 and 16384 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mset.c:1270:57: warning: '%s' directive output may be truncated writing up to 8191 bytes into a region of size 8190 [-Wformat-truncation=]\n 1270 |                     snprintf(detail, sizeof(detail), \": %s\", unparse_buf);\n      |                                                         ^~   ~~~~~~~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from set.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 3 and 8194 bytes into a destination of size 8192\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c smtp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c speech.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c timequeue.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c tune.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c wiz.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c crt_malloc.c\nif [ -f fbmuck ]; then mv -f fbmuck fbmuck~ ; fi\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -o fbmuck array.o boolexp.o compile.o create.o db.o debugger.o diskprop.o edit.o events.o fbmath.o fbsignal.o fbstrings.o fbtime.o game.o hashtab.o help.o interface.o interface_ssl.o interp.o log.o look.o match.o mcp.o mcpgui.o mcppkgs.o mfuns.o mfuns2.o move.o msgparse.o mufevent.o p_array.o p_connects.o p_db.o p_error.o p_float.o p_math.o p_mcp.o p_misc.o p_props.o p_regex.o p_stack.o p_strings.o pennies.o player.o predicates.o propdirs.o property.o props.o sanity.o set.o smtp.o speech.o timequeue.o tune.o wiz.o crt_malloc.o -lm -lssl -lcrypto -lpcre  -L/usr/lib -lpcre -L/usr/lib -lssl\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c resolver.c\n\u001b[91mresolver.c: In function 'do_resolve':\nresolver.c:812:36: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  812 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nresolver.c:812:40: note: format string is defined here\n  812 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:812:36: note: directive argument in the range [0, 65535]\n  812 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:810:42: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  810 |         snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                          ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:796:40: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  796 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nresolver.c:796:44: note: format string is defined here\n  796 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:796:40: note: directive argument in the range [0, 65535]\n  796 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:794:46: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  794 |             snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                              ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:484:36: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  484 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nresolver.c:484:40: note: format string is defined here\n  484 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:484:36: note: directive argument in the range [0, 65535]\n  484 |         snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                    ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:482:42: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  482 |         snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                          ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:471:40: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 134 [-Wformat-truncation=]\n  471 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nresolver.c:471:44: note: format string is defined here\n  471 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\nresolver.c:471:40: note: directive argument in the range [0, 65535]\n  471 |             snprintf(buf, sizeof(buf), \"%s(%\" PRIu16 \")\", tmpbuf, prt);\n      |                                        ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 4 and 142 bytes into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresolver.c:469:46: warning: ')' directive output may be truncated writing 1 byte into a region of size between 0 and 134 [-Wformat-truncation=]\n  469 |             snprintf(buf, sizeof(buf), \"%s(%s)\", tmpbuf, ptr);\n      |                                              ^\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 3 or more bytes (assuming 137) into a destination of size 135\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mresolver.c:951:46: warning: '%u' directive output may be truncated writing between 1 and 5 bytes into a region of size between 0 and 1023 [-Wformat-truncation=]\n  951 |             snprintf(outbuf, sizeof(outbuf), \"%s(%\" PRIu16 \")|%s\", buf, prt,\n      |                                              ^~~~~~\nresolver.c:951:50: note: format string is defined here\n  951 |             snprintf(outbuf, sizeof(outbuf), \"%s(%\" PRIu16 \")|%s\", buf, prt,\nresolver.c:951:46: note: directive argument in the range [0, 65535]\n  951 |             snprintf(outbuf, sizeof(outbuf), \"%s(%\" PRIu16 \")|%s\", buf, prt,\n      |                                              ^~~~~~\nIn file included from /usr/include/stdio.h:867,\n                 from /usr/include/malloc.h:24,\n                 from ../include/config.h:262,\n                 from resolver.c:10:\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output between 5 and 1166 bytes into a destination of size 1024\n   67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |        __bos (__s), __fmt, __va_arg_pack ());\n      |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mgcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -o fb-resolver resolver.o crt_malloc.o -lm -lpthread -lssl -lcrypto -lpcre  -L/usr/lib -lpcre -L/usr/lib -lssl\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -c prochelp.c\ngcc -g -O2 -std=gnu99 -fwrapv -I../include  -I/usr/include -I/usr/include  -o prochelp prochelp.o\nmake[1]: Leaving directory '/fuzzball/src'\nfor d in src; do \\\n\tcd ${d} && make install; \\\ndone\nmake[1]: Entering directory '/fuzzball/src'\n/usr/bin/install -c -d /root/scratch/bin\n/usr/bin/install -c -d /root/scratch/sbin\n/usr/bin/install -c fbmuck fb-resolver prochelp /root/scratch/bin\n/usr/bin/install -c -d /root/scratch/share/doc/fbmuck\nmake help\nmake[2]: Entering directory '/fuzzball/src'\ncd ../docs && ../src/prochelp ../src/mpihelp.raw mpihelp.txt mpihelp.html > /dev/null\ncd ../docs && ../src/prochelp ../src/mufman.raw man.txt mufman.html > /dev/null\ncd ../docs && ../src/prochelp ../src/muckhelp.raw help.txt muckhelp.html > /dev/null\ncd ../docs && /usr/bin/install -c -m 644 help.txt man.txt mpihelp.txt ../game/data\n/usr/bin/install -c -d ../game/data/info\ncd ../docs && /usr/bin/install -c -m 644 mpi-intro mpi-intro2 muf-tutorial changesfb7 ../game/data/info\ncd ../docs && /usr/bin/install -c -m 644 man.txt help.txt mpihelp.txt mpihelp.html mufman.html muckhelp.html /root/scratch/share/doc/fbmuck\nmake[2]: Leaving directory '/fuzzball/src'\n/usr/bin/install -c ../game/restart /root/scratch/sbin/fb-restart\n \nYou may run 'make install-sysv-inits' to install SysV style init scripts.\n \nmake[1]: Leaving directory '/fuzzball/src'\nYou can use letsencrypt (with certbot, acme-client, acme.sh, or other clients) to get a free TLS certificate for use in enabling secure, encrypted connections to your MUCK.\n\n\n----------------------------------------------------------------------------\n                          Definitions and Details\n----------------------------------------------------------------------------\n\n\n\nComments:\n  Only 26 levels of recursion are allowed, so funcs that deep return literally.\nIn loops, a max of 256 iterations are allowed before they exit automatically.\nLists have a maximum size of 256 lines, or 4096 characters, whichever is less.\n  \n  All matching will be done relative to the trigger object first, then relative\nto the triggering player, if nothing was matched in the first pass.\n  \n  The 'me' and 'here' keywords always are relative to the triggering player.\nThe trigger object is referred to by 'this'.\n\n\n\nDefinitions:\n    A Trigger object is the object that the MPI script is evaluated from.\n  \n    A List is a string containing several individual substring items,\nseparated by carriage return characters.\n  \n    A property based list is a set of consecutively numbered properties that\neach contain one string in a list of strings.  Property based lists\nare often numbered like: listname1, listname2, listname3, listname4, &c.\nAnother popular format is listname#/1, listname#/2, listname#/3, etc.\nMPI can read in either of those formats, and several more, for that\nmatter.\n  \n    For logical constructs, a string value of \"0\", or a null string (\"\") are\nboth considered false.  Any other value is considered true.\n\n\n\n----------------------------------------------------------------------------\n                               Time Functions\n----------------------------------------------------------------------------\n\n\n{tzoffset}\n    Returns the server's offset from UTC in seconds.\nResult is negative for time zones west of the prime meridian.\nResult is positive for time zones east of the prime meridian.\n\n\n{time}\n{time:timezone}\n    Returns a time string in the 24hr form hh:mm:ss.  If the timezone\nargument is given, then it offsets the time returned by that number\nof hours.\n\n\n{date}\n{date:timezone}\n    Returns a date string in the form mm/dd/yy.  If the timezone\nargument is given, then it offsets the date returned by that number\nof seconds.\n\n\n{ftime:format}\n{ftime:format,tz}\n{ftime:format,tz,secs}\n    Returns a time string in the format you specify.  See 'man timefmt' for\nthe %subs that you can use in the format string.  If specified, tz is the\nnumber of seconds offset from UTC.  If specified, secs is the systime to\nuse, instead of the current time.  {ftime:%x %X,{tzoffset},0} will return\nthe date and time for systime 0, for the local time zone of the server.\nftime processes format strings with the C function strftime().\n\n\n{timestr:secs}\n    Given a time period in seconds, this will return a concise abbreviated\nstring representation of how long that time was.  This might return a value\nlike \"9d 12:56\" for 9 days, 12 hours, and 56 minutes.\n\n\n{ltimestr:secs}\n    Given a time period, in seconds, this will return a string, including a\nbreakdown of all the time units of that period.  For example, given a number\nof seconds, it might return:\n        3 years, 10 months, 4 weeks, 1 day, 18 hours, 40 mins, 21 secs\n\n\n{stimestr:secs}\n    Given a time period, in seconds, this will return the most significant\ntime unit of that time period.  For example, a number of seconds, that is\nequivalent to 9 days, 23 hours, 10 minutes, and 52 seconds, will be have\nthe value \"9d\" returned, as the abbreviated most significant time unit.\n\n\n{secs}\n    Returns system time: the number of second since midnight 1/1/70 GMT\n\n\n{convtime:string}\n    Converts time string from \"HH:MM:SS MO/DY/YR\" format to systime seconds.\n\n\n{convsecs:systime}\n    Converts systime seconds into a readable time string.\n\n\n{delay:secs,expr}\n    Evaluates the given expression, then puts the result of that on the\ntimequeue, to execute after the given number of seconds.  At that time,\nthe string is evaluated again, and displayed to the user, or to the room,\ndepending on whether it was run from a regular message such as @succ, or\nfrom an omessage such as @osucc.  Since the expression is evaluated both\nbefore and after being delayed, you need to put MPI code that is to run\nafter the delay within a {lit:expr} command.  If a {delay} evaluation is\na null string, then the notify or notify_except will not be done.  {delay}\nwill return the process ID of the event it puts on the timequeue.\n\n\n{kill:0}\n{kill:processID}\n    Kills a process on the timequeue, that was possibly created by {DELAY}.\nIf the process ID it is given is 0, then it will kill all processes done by\nthat trigger object.  If the process to be killed was not set off by that\ntrigger, and was not set off by any object that the owner of the trigger\nowns, then this will error out with Permission denied.  If no process is\nfound, this returns 0.  If a process was found, and the permissions were\nokay, then the process is killed, and {kill} returns the number of processes\nkilled.  Usually 1.\n\n\n\n----------------------------------------------------------------------------\n                             Logical Functions\n----------------------------------------------------------------------------\n\n\n{if:check,true}\n{if:check,true,false}\n    This is a simple conditional command.  It evaluates the 'check'\nargument and if it is true, then it evaluates the 'true' argument and\nreturns its result.  If 'check' does not evaluate as true, then it will\nevaluate the 'false' argument, if there is one, and returns its result.\nIf there is no false argument, and 'check' evaluated false, then it\nreturns a null string.  Example:\n    Your computer is {if:{eq:2,3},broken!,all right.}\n\n\n{default:value1,value2}\n    Returns value2 if value1 is null or 0, otherwise returns value1.  Example:\n    You entered {default:{&arg},nothing}.\n\n\n{eq:expr1,expr2}\n    If expr1 and expr2 evaluate out to the same value, then this returns\ntrue.  Otherwise, this returns false.  If both expressions evaluate out\nto numbers, then this compares them numerically.\n\n\n{ne:expr1,expr2}\n    If expr1 and expr2 evaluate out to the same value, then this returns\nfalse.  Otherwise, this returns true.  If both expressions evaluate out\nto numbers, then this compares them numerically.\n\n\n{gt:expr1,expr2}\n    Evaluates expr1 and expr2, then returns true if expr1 was larger.\n\n\n{ge:expr1,expr2}\n    Evals expr1 and expr2, then returns true if expr1 was larger or equal.\n\n\n{lt:expr1,expr2}\n    Evaluates expr1 and expr2, then returns true if expr1 was smaller.\n\n\n{le:expr1,expr2}\n    Evals expr1 and expr2, then returns true if expr1 was smaller or equal.\n\n\n{not:expr}\n    Returns the logical NOT of expr.  If expr was true, this returns false.\nIf expr was false, this returns true.\n\n\n{or:expr1,expr2...}\n    Returns true if expr1 or expr2 evaluate as true.  Otherwise, this\nreturns false.  If expr1 was true, this doesn't bother to exaluate expr2,\nas it does C-style shortcutting.  If there are more than two arguments,\nthen this will evaluate them until either one returns true, or until it\nhas evaluated all the expressions.  This returns false only if all of the\nexpressions return false.\n\n\n{and:expr1,expr2...}\n    Returns true if expr1 and expr2 evaluate as true.  Otherwise, this\nreturns false.  If expr1 was false, this doesn't bother to evaluate\nexpr2, as it does C-style shortcutting.  If there are more than two\narguments, then this will evaluate all of them until either one returns\nfalse, in which case this function returns false, or until it has evaluated\nall of the arguments.  This function returns true only if all the arguments\nevaluate as true.\n\n\n{xor:expr1,expr2}\n    Returns true if expr1 or expr2 evaluate as true, but false if both do.\nOtherwise, this returns false.\n\n\n\n----------------------------------------------------------------------------\n                             Property Handling\n----------------------------------------------------------------------------\n\n\n{prop:propname}\n{prop:propname,obj}\n    Returns the literal string value of the given property.  If no object\nparameter is passed to it, it looks for the property somewhere down the\nenvironment from the trigger object.  Otherwise, it looks down the\nenvironment from the object specified.  If the property is not found,\nthis returns an empty string.  If the property that it tries to access is\nread restricted and the owner of the trigger object does not own the\nobject that the property is found on, then the MPI script stops with a\nPermission denied error.\n\n\n{prop!:propname}\n{prop!:propname,obj}\n    Returns the literal string value of the given property.  If no object\nparameter is passed to it, it looks for the property on the trigger.\nOtherwise, it looks for the property on the object specified.  If the\nproperty is not found, this returns an empty string.  If the property that\nit tries to access is read restricted and the owner of the trigger object\ndoes not own the object that the property is found on, then the MPI\nscript stops with a Permission denied error.\n\n\n{exec:propname}\n{exec:propname,obj}\n    Returns the string value of the given property, after having\nevaluated any embedded MPI commands that it contained.  If no object\nparameter is passed to it, it looks for the property somewhere down the\nenvironment from the trigger object.  Otherwise, it looks down the\nenvironment from the object specified.  If the property is not found,\nthis returns an empty string.  If the property that it tries to access is\nread restricted and the owner of the trigger object does not own the\nobject that the property is found on, then the MPI script stops with a\nPermission denied error.\n\n\n{exec!:propname}\n{exec!:propname,obj}\n    Returns the string value of the given property, after having\nevaluated any embedded MPI commands that it contained.  If no object\nparameter is passed to it, it looks for the property on the trigger.\nOtherwise, it looks for the property on the object specified.  If the\nproperty is not found, this returns an empty string.  If the property\nthat it tries to access is read restricted and the owner of the trigger\nobject does not own the object that the property is found on, then\nthe MPI script stops with a Permission denied error.\n\n\n{index:propname}\n{index:propname,obj}\n    Returns the string value of the property whose name is stored in the\ngiven property.  This sounds confusing, but it's basically just the same\nas {exec:{prop:propname}}.  If no object parameter is passed to it, it\nlooks for both the index property and the referenced property somewhere\ndown the environment from the trigger object.  Otherwise, it looks down\nthe environment from the object specified for both of them.  If either\nproperty is not found, this returns an empty string.  If the property\nthat it tries to access is read restricted, and the owner of the trigger\nobject does not own the object that the properties are found on, then\nthe MPI script stops with a Permission denied error.  Any MPI code in\nthe target property is evaluated and the result is returned.\n\n\n{index!:propname}\n{index!:propname,obj}\n    Returns the string value of the property whose name is stored in the\ngiven property.  This sounds confusing, but it's basically just the same\nas {exec!:{prop!:propname}}.  If no object parameter is passed to it, it\nlooks for both the index property and the referenced property on the trigger\nobject.  Otherwise, it looks on the specified object for both of them.\nIf either property is not found, this returns an empty string.  If the\nproperty that it tries to access is read restricted, and the owner of the\ntrigger object does not own the object that the properties are found on,\nthen the MPI script stops with a Permission denied error.  Any MPI code in\nthe target property is evaluated and the result is returned.\n\n\n{store:val,prop}\n{store:val,prop,obj}\n    Stores a string value in a given property.  If no obj parameter is\ngiven, then it stores the property on the trigger object.  Otherwise, it\nwill store it on the given object.  If you specify a propname that is\nprotected, you will get a Permission Denied error.  You are only allowed\nto store properties on objects controlled by the owner of the trigger\nobject.  The trigger object is the object that triggered the evaluation of\nthe MPI commands.  This function returns the string that is stored as the\nprop value.  If you store a null value in the property, then it will remove\nthe property if it is not a propdir.  It will clear the value of the prop\nif it IS a propdir.\n\n\n{delprop:propname}\n{delprop:propname,object}\n    This function will remove a property and all of its subsidiary properties\nin the case that it is a propdir.  This will delete the property on the\ntrigger object, unless an object argument is specified.  If one is, then it\nwill delete the property on that given object.  This function returns a null\nstring.  If you specify a propname that is protected, you will get an error\nof Permission Denied.  You are only allowed to delete properties from objects\nthat are owned by the owner of the trigger object.\n\n\n{bless:propname}\n{bless:propname,object}\n    Blesses a property so that MPI executed from it will run with blessed\npermissions.  This command itself requires blessed permissions to run.\n\n\n{unbless:propname}\n{unbless:propname,object}\n    Removes the blessing of a property so that MPI executed from it will no\nlonger run with blessed permissions.  This command itself requires blessed\npermissions to run.\n\n\n{list:listname}\n{list:listname,obj}\n    Returns a string, containing a carriage-return delimited list of\nindividual lines from a property based list.  A property based list is a\nseries of properties that are consecutively numbered.  The server\nunderstands several different formats, and can also read in property\nlists in either the propnameX format, or the propname#/X format.  It does\nNOT evaluate the contents of the list for embedded MPI commands.  If no\nobj argument is supplied, then it looks for the list somewhere down the\nenvironment from the trigger object.  Otherwise, it looks for the list\ndown the environment from the given object.\n\n\n{concat:listname}\n{concat:listname,obj}\n    Returns a string, containing the concatenated lines of a property\nbased list.  It concatenates the list semi-intelligently, putting a\nsingle space between lines normally, and two spaces between lines when\nthe previous one ended with a period, exclamation mark, or question mark.\nA property based list is a series of properties that are consecutively\nnumbered.  The server understands several different formats, and can also\nread in property lists in either the propnameX format, or the propname#/X\nformat.  It does NOT evaluate the contents of the list for embedded MPI\ncommands.  If no obj argument is supplied, then it looks for the list\nsomewhere down the environment from the trigger object.  Otherwise, it\nlooks for the list down the environment from the given object.\n\n\n{lexec:listname}\n{lexec:listname,obj}\n    This takes a property based list, and concatenates all its lines\ntogether, stripping spaces from the beginning and end of each one.  It\nthen evaluates the result for MPI commands, and returns the resulting\nstring.  A property based list is a series of properties that are\nconsecutively numbered.  The server understands several different\nformats, and can also read in property lists in either the propnameX\nformat, or the propname#/X format.  If no obj argument is supplied, then\nit looks for the list somewhere down the environment from the trigger\nobject.  Otherwise, it looks for the list down the environment from the\ngiven object.\n\n\n{rand:listname}\n{rand:listname,obj}\n    Returns the value of a randomly picked list item from a property\nbased list.  If no obj parameter is given, then it looks down the\nenvironment from the trigger object for the list.  Otherwise, it looks\ndown the environment from the given object.  Any MPI code in the target\nproperty is evaluated and the result is returned.\n\n\n{select:value,listname}\n{select:value,listname,object}\n    Returns the value of a single list item from a sparse property list.\nThe item chosen is the one who's line number is the largest one that is\nless than or equal to the given value.  If the list is missing any items,\nthen {select} will return the item in the list with the highest line number\nthat is less than or equal to the given value.  ie:  If the list has the\nfollowing entries:\n    _junk#/1:one\n    _junk#/5:two\n    _junk#/16:three\n    _junk#/20:four\nThen {select:9,_junk} will return \"two\", {select:16,_junk} will return\n\"three\", and {select:25,_junk} will return \"four\".\n\n\n{timesub:period,offset,listname}\n{timesub:period,offset,listname,object}\n    This is sort of like {list}, except that it will only return one line\nof the given named property list.  The line it chooses depends on the\ntime.  Any MPI code in the target line is evaluated and the result is\nreturned.  The period is the length of time, in seconds, that it takes for\n{timesub} to cycle through the entire list.  The offset is the number of\nseconds to offset into the time period, if you actually need to synchronize\nthe {timesub} with something.  The offset usually is just left at zero.\nIf the object argument is not passed, it looks for the list on the trigger.\nWhat this all means, is that if you have, for example, a period of 3600\n(one hour), an offset of zero, and a property list that has six items in\nit, then {timesub} will return the first line of the property list during\nthe first ten minutes of the hour, the second line during the next ten\nminutes, and so on, until it returns the last line during the last ten\nminutes of the hour.  Then it returns the first line for the beginning\nof the next hour.  Here's an example:\n    {timesub:86400,0,_sunmoon}\nThis example will show different property list lines, depending on the\ntime of day.  The period is 86400 seconds, which is one day.  If the\nproperty list has 24 items in it, then a different line will be returned\nfor each hour of the day.\n\n\n{propdir:propname}\n{propdir:propname,object}\n    Returns true if the given property is a propdir, containing sub-props.\nOtherwise, this returns false.  If no object parameter is passed to it, it\nlooks for the property on the trigger object.  Otherwise, it looks on the\nobject specified.  If the property is not found, this returns false.\n\n\n{listprops:propdir}\n{listprops:propdir,object}\n{listprops:propdir,object,pattern}\n    This function will return a list that contains the full names of all the\nsub-properties contained by the given propdir.  If not given, object defaults\nto the trigger object.  If a pattern is given, the sub-properties in the\npropdir are each compared against the smatch wildcard pattern, and only those\nthat match are returned in the list.  This comparison is only done on the last\npart of the property name after the last /.\n\n\n\n\n----------------------------------------------------------------------------\n                              String Functions\n----------------------------------------------------------------------------\n\n\nString functions generally don't strip spaces in their arguments.\n\n\n{nl}  or  \\r\n    Returns a carriage return character.  This can be used to separate\nitems in a list, or can split the string at that point, starting a new line.\nExample:  the string:\n    This is\\ran example{nl}of using newlines.\nwould print out like:\n    This is\n    an example\n    of using newlines.\n\n\n{tab}\n    Returns a tab character.\n\n\n{subst:str,old,new}\n    Returns a copy of 'str' with all substring instances of 'old' replaced\nby the text specified by 'new'.  Basically just substitutes the new text\nfor the old text in str.  example: {subst:Hello World!,l,r} would return\n\"Herro Worrd!\"\n\n\n{strlen:string}\n    Returns an integer that is the number of character in string.\n\n\n{smatch:str,pattern}\n    Matches 'str' against the wildcard pattern.  If there is a match,\nthis returns true, or \"1\".  If it doesn't match, this returns a value\nof \"0\", or false.  In wildcard patterns, the following characters have\nthe following meanings:\n    *               matches any number of any character.\n    ?               matches one character, of any type.\n    [abcde]         matches one char, if it is a, b, c, d, or e.\n    [a-z]           matches one char, if it is between a and z, inclusive.\n    [^abd-z]        matches one char is it is NOT a, b, or between d and z.\n    {word1|word2}   matches one word, if it is word1, or word2.\n    {^word1|word2}  matches one word, if it is NOT word1 or word2.\n    \\               escapes any of the prev chars, making it not special.\n\n\n{strip:string}\n    Returns a copy of string with all the spaces stripped from the beginning\nand the end.\n\n\n{tolower:string}\n    Returns a copy of string, with all uppercase chars converted to lowercase.\n\n\n{toupper:string}\n    Returns a copy of string, with all lowercase chars converted to uppercase.\n\n\n{right:string}\n{right:string,fieldwidth}\n{right:string,fieldwidth,padstring}\n    Takes a string and pads it to fit the given fieldwidth, with the string\nright justified.  If no padstring is given, it assumes that it will pad the\nstring with spaces.  If no fieldwidth is given, it assumes that the field\nwidth is 78 characters.  Example:\n    {right:Hello,10,_.}\nwould return the string \"_._._Hello\"\n\n\n{left:string}\n{left:string,fieldwidth}\n{left:string,fieldwidth,padstring}\n    Takes a string and pads it to fit the given fieldwidth, with the string\nleft justified.  If no padstring is given, it assumes that it will pad the\nstring with spaces.  If no fieldwidth is given, it assumes that the field\nwidth is 78 characters.  Example:\n    {left:Hello,10,_.}\nwould return the string \"Hello_._._\"\n\n\n{center:string}\n{center:string,fieldwidth}\n{center:string,fieldwidth,padstring}\n    Takes a string and pads it to fit the given fieldwidth, with the string\ncenter justified.  If no padstring is given, it assumes that it will pad the\nstring with spaces.  If no fieldwidth is given, it assumes that the field\nwidth is 78 characters.  Example:\n    {center:Hello,10,1234567890}\nwould return the string \"123Hello12\"\n\n\n{instr:str1,str2}\n    Lists the position of the first substring within str1 that matches str2.\nIf no such substring exists, then this returns a 0.\n\n\n{midstr:str,pos}\n{midstr:str,pos1,pos2}\n    Returns the substring that starts at pos1 within str.  If no pos2 is\ngiven, then the returned string is only the character at the given pos1\nposition.  if a pos2 position is given, then it returns the substring\nbeginning at pos1 and ending at pos2, inclusive.  If pos1 or pos2 are\nnegative, then they represent the position that is that absolute number\nof characters from the end of the string.  The first character in str is\n1, and the last one can always be referenced by -1.  If a position would\nbe before the beginning of the string, it is assumed to be at the\nbeginning of the string.  If it would be beyond the end of the string, it\nis assumed to be at the last character. If the starting position is later\nin the string than the ending position, then the returned string has the\ncharacters in reverse order.  If either pos1 or pos2 are 0, then this\nreturns a null string.  (\"\")\n\n\n{lit:string}\n    Returns the literal string given as its parameter.  This means you can\nhave things that look like MPI commands within it, and it will not evaluate\nthem, but will rather just treat them as a string.\n\n\n{eval:string}\n    Sort of the exact opposite of {lit:}.  This takes a string, and\nevaluates it for MPI commands embedded within it.  This can be used on\nthe output of {list:}, for example.  The evaluated mpi commands will\nbe run unblessed.\n\n\n\n{eval!:string}\n    Sort of the exact opposite of {lit:}.  This takes a string, and\nevaluates it for MPI commands embedded within it.  This can be used on\nthe output of {list:}, for example.  Unlike the {eval} command, the\nevaluated mpi commands will be run with the same blessings as the code\nthat executed the {eval!}.\n\n\n{revoke:commands}\n    Executes the enclosed commands with all blessing permissions revoked.\nThis is good to wrap around {eval} statements that may execute user\nsupplied code, to prevent security holes.\n\n\n{null:expr...}\n    Returns a null string, no matter what the expressions within it return.\nThis can take up to nine arguments, though you could pass the output of\nseveral commands as one argument.\n\n\n{pronouns:string}\n{pronouns:string,object}\n    If passed one argument, evaluates the string and does pronoun substitution\nwith regards to the using player.  If given two args, it does the pronoun\nsubstitution with regards to the given object.\n\n\n{tell:string}\n{tell:string,player}\n    If passed only a string, tells the user that string.  If passed both\na string, and a player dbref, it will tell the given player the message.\nThis returns the message that was sent.  If the trigger isn't a room, or\nan exit on a room, and if the message doesn't already begin with the\nuser's name, then the user's name will be prepended to the message.  The\ntwo exceptions to this are that if the messages is being sent to the\nowner of the trigger, or to the user, then the user's name will not be\nprepended.\n\n\n{otell:string}\n{otell:string,room}\n{otell:string,room,player}\n    This will tell the given string to all the players in the room, except\nfor the given player.  If no room argument is given, it is assumed to be\nthe room that the triggering player is in.  If no player is given, then it\nassumes that you want to skip sending the message to the triggering player.\nIf you pass it a player of #-1, it will send the message to all the players\nin the room.  This returns the message that was sent.  If the trigger isn't\na room, or an exit on a room, and if the message doesn't already begin with\nthe user's name, then the user's name will be prepended to the message.\n\n\n{attr:attribute,string}\n{attr:attribute,attribute,string}\n{attr:attribute,...,attribute,string}\n    This will surround the given string with the neccesary ANSI escape codes\nto cause the text to display with the given attributes.  You may specify up\nto eight attributes, though this shouldn't ever be neccesary.  The supported\nattributes are:\nnull, reset, bold, dim, italic, underline, flash, reverse, overstrike,\nblack, red, green, yellow, blue, magenta, cyan, white,\nbg_black, bg_red, bg_green, bg_yellow, bg_blue, bg_magenta, bg_cyan, and bg_white.\n    Not all clients will display all these attributes, and those that do \nwon't always show them the same way.  Players who do not have their Color \nflag set will not see the ANSI codes or colors at all.  Nesting {attr}\ncommands probably just won't work.\n\n\n\n----------------------------------------------------------------------------\n                               Math Functions\n----------------------------------------------------------------------------\n\n\nAll math functions deal with integer numbers.\n\n{inc:var}\n{inc:var,val}\n    Increments the value of the given variable by one, returning the result.\nIf a value argument is given, then it will add that value to the variable,\ninstead of the value 1.\n\n\n{dec:var}\n{dec:var,val}\n    Decrements the value of the given variable by one, returning the result.\nIf a value argument is given, then it will subtract that from the variable,\ninstead of the value 1.\n\n\n{add:expr1,expr2}\n{add:expr1,expr2,expr3...}\n    Returns the sum of the values of expr1 and expr2.  If more than two args\nare given, then this will add all the args together and return the result.\n\n\n{subt:expr1,expr2}\n{subt:expr1,expr2,expr3...}\n    Returns the difference of the values expr1 and expr2.  If more than two\nargs are given, all values are subtracted from the first value in sequence.\nFor example: {subt:10,3,2,4} would be read as 10 - 3 - 2 - 4, and it would\nreturn a result of 1.\n\n\n{mult:expr1,expr2}\n{mult:expr1,expr2,expr3...}\n    Returns the product of the values expr1 and expr2.  If more than two args\nare given, then they are all multiplied together to get the result.\n\n\n{div:expr1,expr2}\n{div:expr1,expr2,expr3...}\n    Returns the value of expr1 divided by expr2.  Division by zero will\nreturn zero.  If more than two arguments are given, then the first argument\nis divided by the second, and the result is divided by the third, etc, for\nall of the arguments.  For example:  {div:180,6,3,5} would be read like\n180 / 6 / 3 / 5, and a result of 2 would be returned.\n\n\n{mod:expr1,expr2}\n    Returns the leftover remainder of expr1 divided by expr2.  If more than\ntwo arguments are given, then the first arguments is modded by the second,\nthen the result of that would be modded by the third, and so on and so forth.\nFor example: {mod:91,20,3} would be read as 91 % 20 % 3, and a result of 2\nwould be returned.\n\n\n{dice:X}\n{dice:X,Y}\n{dice:X,Y,Z}\n    Given one parameter, picks a random number between 1 and X. (1dX)\nGiven two parameters, it randomly generates Y numbers between 1 and X,\nand adds them together. (YdX) A third parameter, if given, is just added\nto this sum as a modifier. (YdX+Z)\n\n\n{min:expr1,expr2}\n    Returns the lesser of the values of expr1 and expr2.\n\n\n{max:expr1,expr2}\n    Returns the greater of the values of expr1 and expr2.\n\n\n{abs:expr}\n    Returns the absolute value of expr.\n\n\n{sign:expr}\n    Returns -1 if expr is negative.  Returns 1 if expr is positive.\nIf expr is 0, then it returns 0.\n\n\n{dist:x,y}              Returns distance from 0,0 that x,y is.\n{dist:x,y,z}            Returns distance from 0,0,0 that x,y,z is.\n{dist:x,y,x2,y2}        Returns distance between x,y and x2,y2.\n{dist:x,y,z,x2,y2,z2}   Returns distance between x,y,z and x2,y2,z2.\n    Given two arguments, this calculates the distance of a 2D point from\nthe origin.  Given three arguments, this calculates the distance of a 3D\npoint from the origin.  Given four arguments, this calculates the distance\nbetween a pair of 2D points.  Given six arguments, this calculates the\ndistance between a pair of 3D points.\n\n\n\n----------------------------------------------------------------------------\n                             Looping Functions\n----------------------------------------------------------------------------\n\n\n{for:varname,start,end,increment,command}\n    Acts as a counting loop, like BASIC's for loops.  The varname is the name\nof the variable that it will create and use to store the count value.  The\nstart value will be the initial value of the variable, and the end value will\nbe the value that the variable is working towards.  The increment is how much\nthe variable will be incremented by in each loop.  The command will be eval-\nuated for each value of the variable between the beginning and ending values.\nFor example:\n    {null:{for:i,10,1,-1,{tell:{&i}}}}\nwill echo a countdown from ten to one, inclusive, to the user.\n\n\n{while:check,expr}\n    This is a looping structure.  It evaluates the 'check' argument, and\nif it evaluates true, then it evaluates the expr argument, and repeats\nthe process.  If 'check' evaluates false, then the loop is exited.\nThis returns the result of the last evaluation of expr.\n\n\n{foreach:var,list,expr}\n{foreach:var,list,expr,sep}\n    This evaluates expr for each and every item in the given list.  On\neach evaluation, the temporary variable var will contain the value of the\nitem under scrutiny.  var will only be defined for the duration of expr,\nand will be undefined after the {foreach} construct finishes.  If sep is\ngiven, then it uses that string as the item separator in list, instead of\nthe usual carriage return character.  sep can be multiple characters\nlong.  This structure returns the result of the last evaluation of expr.\nExample:\n    {foreach:thing,{contents:here},{tell:{name:{&thing}}}}\nThis will display the name of every object in the room, then it will return\nthe name of the last object it displayed.\n\n\n{filter:var,list,expr}\n{filter:var,list,expr,sep}\n{filter:var,list,expr,sep,s2}\n    This evaluates expr for each and every item in the given list.  On\neach evaluation, the temporary variable var will contain the value of the\nitem under scrutiny.  This function returns a list containing all of the\nitems from the input list, for which expr evaluated true.  var will only\nbe defined for the duration of expr, and will be undefined after the\n{filter} construct finishes.  If sep is given, then it uses that string\nas the item separator in the input list, instead of the usual carriage\nreturn character.  If s2 is defined, then it will use that string to\nseparate the items in the list it returns, instead of the normal carriage\nreturn.  sep and s2 can be multiple characters long.\n\n\n{parse:var,list,expr}\n{parse:var,list,expr,sep}\n{parse:var,list,expr,sep,s2}\n    This evaluates expr for each and every item in the given list.  On\neach evaluation, the temporary variable var will contain the value of the\nitem under scrutiny.  This function returns a list containing the output\nof expr for each item within the list.  This lets you do direct translat-\nion of a list of dbrefs, for example, into a list of names.  var will\nonly be defined for the duration of expr, and will be undefined after the\n{filter} construct finishes.  If sep is given, then it uses that string\nas the item separator in the input list, instead of the usual carriage\nreturn character.  If s2 is defined, then it will use that string to\nseparate the items in the list it returns, instead of the normal carriage\nreturn.  sep and s2 can be multiple characters long.\n\n\n{fold:var1,var2,list,expr}\n{fold:var1,var2,list,expr,sep}\n    This takes a list and stores the first two items in var1 and var2, then\nevaluates expr.  The value returned by expr is then put in var1, and the next\nlist item is put in var2.  Expr keeps being evaluated in this way until there\nare no more list items left.  This returns the last value returned by expr.\nIf a sep argument is given, the input list is assumed to have its individual\nitems delimited by that string, otherwise it assumes a carriage return.\n\n\n\n----------------------------------------------------------------------------\n                         Database Related Functions\n----------------------------------------------------------------------------\n\n\n{ref:obj}\n    Returns the dbref of the given object in the form #xxxx.  The object\nmust be in the vicinity, or controlled by the owner of the trigger object.\n\n\n{name:obj}\n    Returns the name of the given object.  If the object is an exit, the\nname returned is the first exit name it has before the first ';'.  The object\nmust be in the vicinity, or controlled by the owner of the trigger object.\n\n\n{fullname:obj}\n    Returns the name of the given object.  In the case where the object\nis an exit, then the full name of the exit is given, including all the ;\naliases.  The object must be in the immediate vicinity, or be controlled\nby the owner of the trigger object.\n\n\n{owner:obj}\n    Returns the owner of the given object.  The object must be in the\nvicinity, or be controlled by the trigger object's owner.\n\n\n{loc:obj}\n    Returns the location of the given object.  The object must either be in\nthe vicinity, or it must be controlled by the owner of the trigger object.\n\n\n{flags:obj}\n    Returns a flaglist string from obj. ie: PM2J.  The object must either\nbe in the vicinity, or it must be controlled by the owner of the trigger\nobject.\n\n\n{created:obj}\n    Returns the time and date that obj was created.  The number returned is\nsuitable for use with {convsecs}.\n\n\n{modified:obj}\n    Returns the time and date that obj was last modified.  The number returned\nis suitable for use with {convsecs}.\n\n\n{lastused:obj}\n    Returns the time and date that obj was last used.  The number returned is\nsuitable for use with {convsecs}.\n\n\n{usecount:obj}\n    Returns the usage count that obj has incurred since it was created.\n\n\n{controls:obj}\n{controls:obj,player}\n    If one argument is given, then this returns true (\"1\") if the trigger\nobject's owner controls the given object.  If two arguments are given, then\nit returns true if the given player controls the given object.  Otherwise,\nthis returns false.  (\"0\")  Wizards control everything.\n\n\n{nearby:obj}\n{nearby:obj,obj2}\n    If one argument is given, then this returns true (\"1\") if the given\nobject is nearby to the trigger object.  If two arguments are given, then\nit returns true if the two objects are nearby one another.  Otherwise,\nthis returns false. (\"0\")  Nearby is defined as: 1) The two objects are\nin the same location, or 2) One object contains the other, or 3) the two\nobjects are in fact the same object.\n\n\n{money:obj}\n    This returns the value of an object of TYPE_THING, or returns how many\npennies a player has.\n\n\n{type:obj}\n    Returns the type of an object.  The possible values are:  Bad, Room,\nExit, Thing, Player, and Program.\n\n\n{istype:obj,typ}\n    Returns true if the given object if of the given type.  Valid types are:\nBad, Room, Exit, Thing, Player, and Program.\n\n\n{contents:obj}\n{contents:obj,type}\n    Returns a list of the contents of the given object.  If a second\nargument is passed to it, it restricts the listing to only those objects\nthat are of the given type.  Either the object must be nearby the trigger\nobject, or else the owner of the trigger object must control the object.\nOtherwise this will error out with a Permission Denied error.  The valid\nobject type values are Room, Thing, Exit, Player, Program, and Bad.\nHINT:  If you need to get a list of two types of objects from the room,\njust concatenate the lists from two calls to this function, with each\nobject type you want.  ie:\n    {mklist:{contents:here,player},{contents:here,thing}}    or\n    {contents:here,player}{nl}{contents:here,thing}\n\n\n{exits:obj}\n    Returns a list of all the exits on the given object.  The owner of\nthe trigger object has to control obj, or else this errors out with\nPermission Denied.  Programs and exits never have exits attached to them.\n\n\n{links:obj}\n    Returns the object reference of what the given object if linked to.\nSince exits can be meta-links, linked to multiple exits, if there is more\nthan one link, then this function returns a list of all the destinations,\nseparated by carriage return characters.  (\\r)\n\n\n{force:object,command}\n    Forces the given player or thing to do the given command.  The thing\nforced must be @flock'ed to the trigger object, or the trigger object's\nowner, and it must be set XFORCIBLE, or else this function will get a\nPermission Denied error.  This function returns a null string.  {Force}\ncannot force a thing-object to do something, if it is set Dark, is in a\nroom set Zombie, or is owned by a player set Zombie.\n\n\n{dbeq:obj1,obj2}\n    Returns true if obj1 and obj2 refer to the same object.  This does\nname matching, so {dbeq:*Wizard,#1} will return true if #1 is named Wizard.\n\n\n{locked:player,obj}\n    Tests the _/lok (@lock) standard lock property on obj against the given\nplayer.  Returns true if the lock is locked against the player.\n\n\n{testlock:obj,prop}\n{testlock:obj,prop,who}\n{testlock:obj,prop,who,def}\n    Tests the lock property 'prop', on 'obj' against the given player 'who'.\nIf no 'who' argument is given, then it checks the lock against the using\nplayer.  If a def argument is given, then the lock will default to that\nvalue, if there is no lock property of the given name on the given object.\nReturns true if the lock is locked against the player.\n\n\n{holds:obj1}\n{holds:obj1,obj2}\n    Returns true if the location of obj1 is obj2.  If no obj2 argument is\ngiven, then this will return true if the location of obj1 is the player.\n\n\n{contains:obj1}\n{contains:obj1,obj2}\n    Returns true if obj1 is within obj2, or within anything it contains, or\nwithin anything they contain.  If obj2 is not given, then it checks to see\nis obj1 is held by the player, or by anything they hold, etc.  Basically,\nthis just sees if obj1 is within the locational environment of obj2.\n\n\n\n----------------------------------------------------------------------------\n                        Connection Related Functions\n----------------------------------------------------------------------------\n\n\n{online}\n    Returns a list of players who are online.  This function can only be\nexecuted with blessed permissions.\n\n\n{awake:player}\n    Returns how many times player is connected.  This means that it will\nreturns 0 if the player is not connected.  If the given object is NOT a\nplayer, it will return 0.  If the given player is NOT local to the trigger,\nand is not the owner of the trigger, and this is not run with blessed perms,\nthen this will return 0.  In all other cases, it will return a positive\nnumber, being how many times the given player is connected to the server.\n\n\n{ontime:player}\n    Returns player online time in seconds.  If the given player is not\nconnected, or is not a player object at all, then this will return -1.\nThis returns the online time for the most recently connected connection,\nif there are multiple connects.\n\n\n{idle:player}\n    Returns player idle time in seconds.  If the given player is not\nconnected, or is not a player object at all, then this will return -1.\nThis returns the idle time for the most recently connected connection,\nif there are multiple connects.\n\n\n{descr}\n    Returns the descriptor number that invoked the MPI.\n\n\n\n----------------------------------------------------------------------------\n                        Variable Handling Functions\n----------------------------------------------------------------------------\n\n\n{&VAR}\n{v:VAR}\n    These are two ways of trying to do the same thing.  They return the\nvalue of the named variable VAR.  If there is no variable with the given\nname currently defined, then this gives an error stating as much.  Variables\ncan be defined either with the {with:} function or within a looping command.\n\n\nThere are three standard variables that every MPI program can read:\n\n{&how}  \n    The {&how} variable is a short string telling what ran the MPI command.\nIt can have the values \"(@desc)\", \"(@succ)\", \"(@osucc)\", etc. for when it\nis run from an @desc, an @succ, an @osucc, or whatever.  It can also have\nthe value \"(@lock)\" for when it is run from a lock test.\n\n\n{&cmd}\n    The {&cmd} variable contains the command name the user used, that\ncaused the MPI to run.  This is generally the exit name that the player\ntriggered.  For example, if the player typed 'east', and triggered the exit\nnamed 'east;e;out', which ran some MPI commands, the {&cmd} variable would\nhave a value of \"east\".\n\n\n{&arg}\n    The {&arg} variable contains a string with the value of the command\nline arguments the user entered.  This is so that you can have stuff like\nMPI in the fail of an exit, and when the user triggers the exit, and has\nsome extra text on the line they entered, other than the exitname, the\nMPI can take that extra stuff as arguments for use.  Note that you need\nto set an action HAVEN to get it to accept command line arguments.\n\n\nOther MPI functions used to work with variables are:\n\n{set:var,value}\n    This sets the value of the given named variable to the given value.\nIf no variable with that given name is currently defined, then this gives\nan error message complaining about that.\n\n\n{with:var,val,expr..}\n    This defines a new variable with the given name, and sets its value\nto the given val.  Up to 7 expr's are allowed, but the only value\nreturned to {with}'s caller, is the value returned by the evaluation of\nthe last expr.  If there is already a variable of the same name, then\nthis command will override that variable, for the duration of the {with:}\ncommand.  The new variable is only valid to use within the confines of\nthe {with:} command, and it will go away after the command completes.\nThis provides scoped variables quite effectively.  NOTE:  There can be no\nmore than 32 variables defined at any one time, total.  This includes\nvariables that are defined within macros, or properties or lists that are\nexecuted with {exec:} or {lexec:}.   Here's an example to illustrate the\nscope of variables inside of {with:} commands:\n\n    {prop:_mydesc}                           <- {&people} not defined.\n    {with:people,{contents:here,players},    <- Defining.  Not available yet.\n        {if:{count:{&people}},               <- It's usable now.\n            The players awake here are\n            {lit: }                          <- just puts in a space.\n            {commas:{&people},{lit: and },\n                who,{name:{&who}}            <- uses {&who} as temp var.\n            }                                <- {&who} no longer defined.\n        }\n    }                                        <- {&people} no longer defined.\n\n\n\n----------------------------------------------------------------------------\n                          List Handling Functions\n----------------------------------------------------------------------------\n\n\n{count:list}\n{count:list,sep}\n    This counts the number of \\r delimited items that are in the given list.\nThis is effectively a list item count.  If the sep argument if given, then\nit counts the number of sep delimited substrings in list.  ie: The default\nsep is \\r. (A carriage return.)\n\n\n{mklist:value...}       Returns a list with all given values.\n    This returns a list with all the given values as list items, separated\nby carriage returns.  ('\\r's) Example:\n    {mklist:Tom,Dick,Harry}\nreturns \"Tom\\rDick\\rHarry\".  Note:  A maximum of nine items can be passed to\nthe {mklist} function.  If you need more, you can chain {mklist}s together.\nExample:\n    {mklist:{mklist:a,b,c,d,e,f,g,h,i},j,k,l,m,n,o,p}\n\n\n{sublist:list,pos1}\n{sublist:list,pos1,pos2}\n{sublist:list,pos1,pos2,sep}\n    Takes a list, and returns a subset of the list items within it.  The\nsubset is all the list items between list item pos1, and list item pos2,\ninclusive.  If the pos2 argument is omitted, it assumes that pos2 is the\nsame as pos1.  If pos2 is less than pos1, then all the list items between\npos2 and pos1 are returned, in reversed order.  If pos1 or pos2 are negative,\nit counts that many list items back from the end of the list, so -1 is the\nlast list item, and -5 would be the fifth from last list item.  The input\nlist is assumed to be delimited by carriage returns (\\r) unless the sep\nargument is given.\n\n\n{lrand:list}\n{lrand:list,separator}\n    Returns a randomly picked stringlist item from the given list.  If the\nseparator argument is given, then it will assume that the stringlist has its\nitems delimited by the given separator string, instead of by carriage returns.\n\n\n{lunique:list}\n    Returns list with all duplicate items removed.\n\n\n{lunion:list1,list2}\n    Combines the contents of list1 and list2, removing any duplicates.\n\n\n{lcommon:list1,list2}\n    Creates a list containing every item that appears in BOTH list1 and\nlist2.  Any duplicate items in the resulting list are removed.\n\n\n{lremove:list1,list2}\n    Returns the contents of list1, with any items that match an item in\nlist2 removed.  The resulting list has all duplicate items removed.\n\n\n{lmember:list,item}\n{lmember:list,item,delimiter}\n    Returns 0 if the given item is NOT in the given list, otherwise, it\nreturns the item's position in the list.  The first list item in the list\nwould return 1, and the third would return 3, for example.  If the delimiter\nargument is given, then it treats the list as if it were delimited by that\nstring, instead of by carriage returns. (\\r's)\nExample:\n    {lmember:{mklist:a,b,c,d,e,f},d}\nwould return 4.\n\n\n{lsort:list}\n{lsort:list,var1,var2,expr}\n    Returns the sorted contents of list.  If 4 arguments are given, then\nit evaluates expr with a pair of values, in var1 and var2.  If expr\nreturns true, then it will swap the positions of the two values in the\nlist.  It runs this comparison on every pair of items in the list, so it\nwill be evaluated N*(N-1)/2 times, where N is the number of items in the\nlist.  This method can also be used to randomize a list.  Example:\n    {lsort:{&list},v1,v2,{gt:{dice:100},50}}\n\n\n{commas:list}\n{commas:list,lastsep}\n{commas:list,lastsep,var,expr}\n    Takes a list and returns a plain english comma delimited string with\nthe items in it.  For example, {commas:{mklist:Tom,Dick,Harry}} will return\n\"Tom, Dick and Harry\".  If you specify the lastsep argument, you can replace\nthe \"and\" with something else, such as \"or\" to get a result like \"a, b or c\".\nNote:  You need to be careful to include spaces around the \"or\" or else you\nmight get a result like \"a, borc\".  Example:\n    {commas:{mklist:a,b,c}, or }\nIf the var and expr arguments are passed, then for every item in the list,\nit will set the value of the given variable name (which it will declare)\nto the item, then evaluate expr, and use the result in the string it outputs.\nExample:\n    {commas:{contents:here},\\, or ,v,{name:{&v}}}\nwill return the name of every object in the room in a comma separated list,\nusing \", or \" as the final conjunction.  ie:  \"Tom, Can of SPAM, Dick, or\nHarry.\"\n\n\n\n----------------------------------------------------------------------------\n                          Miscellaneous Functions\n----------------------------------------------------------------------------\n\n\n{isnum:number}\n    Returns true if the string passed to it is a valid number.\n\n\n{isdbref:dbref}\n    Returns true if the string passed to it is a valid dbref.\n\n\n{sysparm:<system parameter>}\n    Returns the value of the given system parameter for authorized players.\n\n\n{version}\n    Returns the version string for the server.\n\n\n{muckname}\n    Returns the muck name string.  For example, it might return: \"FurryMUCK\"\n\n\n{muf:prog,arg}\n    Runs the given MUF prog with the string arg on the stack.  This returns\nthe top stack value when the prog exits.  If the MPI code was run from a\npropqueue like _listen, or _connect, then {muf} cannot run a MUF program\nwith a mucker level of less than 3 \n\n\n{debug:expr}\n    This will show MPI debugging information for all the commands within the\ngiven expression.  This is useful for seeing why something isn't working.\nThis returns the result of the evaluation of expr.\n\n\n\n{debugif:cond,expr}\n    This will evaluate the conditional cond, and, if the result is true,\n(not an empty string, and not 0), then this will show MPI debugging info\nfor all the commands within the given expression.  If cond evaluated as\nfalse, then expr is evaluated without the debugging info being displayed.\nThis is useful for Debugging code selectively.  This returns the result\nof the evaluation of expr.\n\nExample:\n    {parse:v,{contents:here},{debugif:{dbeq:{&v},me},{dostuff:{&v}}}}\nto only debug the running of the command {dostuff} when the argument will\nbe the player who is running the MPI.\n\n\n\n\n----------------------------------------------------------------------------\n                            Macros and Functions\n----------------------------------------------------------------------------\n\n\nMacros:\n    If the MPI interpreter comes across a function name that it does not\nrecognize, it will look in the _msgmacs/ propdirs down the environment from\nthe trigger object, for a property with the name of the function.  If it does\nfind it there, then it takes the value of that property, and substitutes it\nin for the function as a macro.  The arguments to the function replace the\n{:1} through {:9} markers in the macro definition.  For example, if there were\na property set on #0, defined as:\n    _msgmacs/div_rand:{add:{div:{:2},10},{dice:{:1}}}\nAnd you had some MPI code that looked like:\n    {div_rand:22,160}\nThen the macro would expand out to:\n    {add:{div:160,10},{dice:22}}\nAfter the macro argment substitution is complete, it is then evaluated.\n\n\n{func:name,vars...,def}\n    This effectively defines a function in MPI, with the given name, that\ntakes the given named variables.  The function is not immediately evaluated,\nso it needs to be invoked later, to do anything.  Here's an example:\n  \n    {func:sqr,val,{mult:{&val},{&val}}}\n  \nThis defines the function 'sqr', that takes a single argument.  That\nargument is stored in the 'val' variable.  The function will multiply\nthe value of the number passed to it, by itself, returning the result.\nIt's invoked like:\n    {sqr:10}\n  \nEffectively, the above {func} declaration is the same as the following\nmacro, and in fact, it's internally handled the same way:\n  \n    _msgmacs/sqr:{with:val,{:1},{mult:{&val},{&val}}}\n  \nYou can define a function that takes more than one argument, but the maximum\nnumber of args you can pass to the function is seven.  Example of multiple\narguments:\n  \n    {func:names,list,numsp,flagsp,\n        {parse:v,{&list},\n            {name:{&v}}\n            {if:{or:{&numsp},{&flagsp}},\n                {lit:(}\n                {if:{&numsp},{ref:{&v}}}\n                {if:{&flagsp},{flags:{&v}}}\n                {lit:)}\n            }\n        }\n    }\n    {names:{contents:here},1,1}\n\n\n\n----------------------------------------------------------------------------\n                          Details and Definitions\n----------------------------------------------------------------------------\n\n\n\n\nMucker Levels:\n  \n  There are now four levels of MUCKERs in fb4.0.  Level zero is a\nnon-mucker. They cannot use the editor, and MUF programs owned by them\ncannot be run.\n  \n  Level one MUCKER's are apprentices.  Their powers are restricted as they\ncannot get information about any object that is not in the same room they\nare.  ie:  OWNER, NAME, LOCATION, etc all fail if the object isn't in the\nsame room as the player.  Level one MUCKER programs always run as if they\nare set SETUID.  NOTIFY, NOTIFY_EXCEPT, and NOTIFY_EXCLUDE will refuse to\nsend messages to rooms the user is not in.  Level one programs cannot use\nADDPENNIES.  Level one programs don't list DARK objects or rooms in the\ncontents of a room, unless they are controlled by the program owner.\nAdditionally, level one programs have an absolute instruction limit that\nis the same size as the PREEMPT instruction limit.  This is usually\naround 20,000 instructions.\n  \n  Level two MUCKERs are also called Journeymen.  Their permissions are\nequivalent to the permissions for a normal MUCKER under older versions\nof the server.  Level two programs can run as many as four times the\nnumber of instructions that a preempt program could.  This is usually\naround 80,000 instructions.\n  \n  Level three MUCKERs are referred to as Masters.  They can use the con-\nnection info primitives (ie: DESCRBREF, ONLINE, etc.), read the EXITS list\nof any room, use NEXTPROP on objects, can use NEWROOM, NEWOBJECT, NEWEXIT,\nand COPYOBJ without limitations, can use QUEUE and KILL, and can override\nthe permissions restrictions of MOVETO.  You only give a player MUCKER\nlevel 3 if they are very trusted.  There is no absolute instruction count\nlimit for level three or above, except for programs running in PREEMPT mode.\n  \n  A player who is wizbitted is effectively Mucker Level 4.  MUCKER level\nfour is required for the RECYCLE primitive, the DESCRHOST primitive, the\nFORCE primitive, and the SETOWN primitive.  ML4 also allows overriding\nof permissions of the SET* primitives, and property permissions.  Props\nnot listed by NEXTPROP with ML3 are listed with ML4.  Programs running\nML4 do not even have instruction limits on PREEMPT mode programs.\n  \n  The MUCKER level permissions that a program runs at is the lesser of\nits own MUCKER level and the MUCKER level of its owner.  If it is\nowned by a player who is MUCKER level 2, and it is MUCKER level 3,\nthen it runs at Mucker level 2.  The one exception to this is programs\nowned by a Wizard player.  They run at Mucker level 2 if the program\nitself is not wizbit, and at Mucker level 4 if the program IS set wizbit.\n  \n  Mucker level is referred to in flags lists by M# where the # is the\nMucker level.  Level zero objects don't show a flag for it.  Example:\n    Revar(#37PM3)\n  In verbose flags lists, Mucker levels greater than zero are shown\nby MUCKER# where # is the mucker level.\n  \n  To set a level on a player or program, use the level number as the\nflag name.  MUCKER is the same as 2, and !MUCKER is the same as 0.\nExample:\n    @set Revar=2\n  A player may set the MUCKER level on a program they own to any level\nlower than or equal to their own level, and a wizard may set a program\nor player to any MUCKER level.  When a program is created, it is\nautomatically set to the same MUCKER level as the creating player.\nWhen a program is loaded from an old db, if it is Mucker Level 0,\nit is upgraded to Mucker Level 2.\n\n\nMultitasking:\n\n  There are 3 modes that a program can be in when running:  foreground,\nbackground, and preempt.  A program running in the foreground lets other\nusers and programs have timeslices (ie multitasking), but blocks input\nfrom the program user.  Background mode allows the user to also go on and\ndo other things and issue other commands, but will not allow the program\nto do READs.  Preempt mode means that the program runs to completion\nwithout multitasking, taking full control of the interpreter and not\nletting other users or progs have timeslices, but imposes an instruction\ncount limit unless the program is a wizard program.\n\n  Programs run by @locks, @descs, @succs, @fails, and @drops default to the\npreempt mode when they run.  Programs run by actions linked to them\ndefault to running in foreground mode.  QUEUEd program events, such as\nthose set up by _listen, _connect, _disconnect, etc, and those QUEUEd by\nother programs default to running in background mode. (NOTE: these\nprograms cannot be changed out of background mode)\n\n\nLibraries:\n\nHow to use a library:\n    1) Use \"@register lib\" to list what libraries exist.\n    2) Use \"@view $lib/<libraryname>\" to list the docs on that library.\n    3) When you've found the library and the function you want, then all\n        you have to do in your program is, at the beginning of it,\n        $include $lib/<libraryname>\n        then just use the function name to invoke it later in your program\n        and it will run as if it were a function in your program.\n\nHow to make a library:\n    1) Create a program with several useful generic subroutines.\n    2) DOCUMENT those subroutines in a commented out header in the prog.\n    3) @set <program>=_docs:<command to list those DOCS you made>\n    4) Set the version number of the code in the library with $version 1.000\n        This lets you keep track of the code revision installed, separately\n        from the version of the library calling API.\n    5) Set the library API version number with $lib-version 1.000\n        This is the version of the calling interface for this library.\n        Remember to up this version when you change this library's calls.\n        Remember that 1.19 is less than 1.2, so use numbers like 1.002.\n    6) For each function you want to be externally callable, do the following:\n        a) Declare it PUBLIC\n        b) Create the caller macro with either:\n            $libdef FUNCNAME     or\n            $pubdef EXPORTEDNAME \"$lib/THISLIB\" match \"FUNCNAME\" call\n    7) Make sure the program is set LINK_OK and VIEWABLE.\n    8) Globally register the program with the @register command with a\n        prefix of \"lib/\".  ie: @reg lib-strings.muf=lib/strings\n    9) You're done!\n\nCurrently standard libraries:\n    $lib/strings      Functions for manipulating strings.\n    $lib/props        Routines for searching for properties, or setting them.\n    $lib/lmgr         Standard list manager routines.\n    $lib/stackrng     Routines to handle variable sized ranges on the stack.\n    $lib/edit         String range editing and manipulation routines.\n    $lib/editor       Standard user text editor.\n    $lib/mesg         Standard message manager routines.\n    $lib/mesgbox      Routines for handling lists of messages.\n    $lib/match        Object or string matching routines.\n    $lib/reflist      Dbref-list management routines.\n    $lib/index        Hashed linked list manager with partial key matching.\n    $lib/gui          Routines to make MCP's GUI package easier to use.\n    $lib/optionsgui   Given datums, auto-generates a GUI to edit them.\n\n\nFlags that have importance to MUF:\n\n  If a program is set DARK (DEBUG), then when it is run, it will print out\na stack trace for each instruction executed, to the player running the\nprogram.  This is useful for debugging programs.\n\nIf a program is set ZOMBIE, then when the owner runs it, they will enter an\ninteractive debugger, useful for following a program as it runs and\nchanging it to see what different situations do.\n\nOn dbload, if a program is set ABODE (AUTOSTART), *AND* it is owned by\na wizard, then it will be placed in the timequeue with a delay of 0 and\na string parm of \"Startup\".  Autostart programs run with the location\nNOTHING (#-1) rather than the location of the owner of the program.\n\nIf a program has the HAVEN flag set on it (HARDUID) then it runs with\nthe uid and permissions of the owner of the trigger of the program.\nIf the program is a timequeue event with trigger of #-1, then it\nwill run with the permissions and uid of the program owner as in SETUID.\n\nIf a program is set both SETUID and HARDUID, and it is owned by a wizard,\nthen it inherits the uid and mucker level of the program that called it.\nIf it was not called by a program, then it runs SETUID.  This is useful\nfor writing libraries.\n\nPrograms set BUILDER (BOUND) run in preempt mode, regardless of the mode\nof the program.  ie: a foreground program, while running in a program set\nBOUND, will run pre-empt, with the multitasking effectively shut off.\n\nA program that is set WIZARD ignores almost all permissions checking.\n\nThe Mucker Level of the program also has a great deal of influence on what\na program can and cannot do.  See MUCKER LEVELS for more information.\n\n\nCompilation:\n\n  Programs are compiled when they are run or called, or when explicitly\ncompiled in the editor.  They are compiled with the uid of the owner of\nthe program.  After being unused for a number of minutes, programs will\nbe removed from memory until needed again.\n\n\nListeners:\n\n  When a message is notify_except'ed or notify_exclude'ed to a room, and\nLISTENERS and LISTENERS_ENV are defined, then it will run ALL the programs\nreferred to in all the _listen properties down the environment tree,  And\nin all of the objects in the room with LISTENERS_OBJ defined.  Also, the\nmuf NOTIFY primitive was changed to run the _listen program on an object\nor player if a message is sent to them that way.\n\n\nConnect and Disconnect Propqueues:\n\n  A room or player may have a \"_connect\" property set that contains the\ndbref of a program to run when a player connects.  The program must be\neither link_ok or must be owned by the player connecting.  When the\nprogram is run, the string on the stack will be \"Connect\", the \"loc @\"\nwill be the location of the connecting player, the \"me @\" will be the\nconnecting player, and the \"trigger @\" (and \"trig\") will be the object\nthat had the _connect property on it.  All programs referred to by\n_connect properties on the player, and on rooms down the environment tree\nfrom the player, will be run.  When a player disconnects, programs referred\nto by _disconnect properties will be run in a similar manner.\n(connect and disconnect _actions_ are also triggered.)\n\n\nArrive and Depart Propqueues:\n\n  Programs referred to by props in _depart/_arrive propdirs will all be\nrun when a player leaves or enters a room, respectively. An example would\nbe _arrive/announce:1234  That would queue up program #1234 when a player\nenters a room.  The name (\"announce\") is not important, and can be anything\nyou want, but they are run in alphabetic order.\n\n\n\n\n\n----------------------------------------------------------------------------\n                       Macros and Compiler Directives\n----------------------------------------------------------------------------\n\n\n\n\n__FUZZBALL__\n\n  A pre$defined macro that contains the value 1 on a FuzzBall Muck server.\nThis is useful for server-type specific $ifdefs, when code needs to be\ndifferent on, say, FuzzBall Mucks and ProtoMucks.  For example:\n    $ifdef __fuzzball__\n        me @ \"This is a FuzzBall Muck server.!\" notify\n    $endif\n\n\n__MUCKNAME\n\n  A pre$defined macro that contains the name of the server's muckname @tune\nparameter value.  This is useful for muck specific $ifdefs.  For example:\n    $ifdef __muckname=FurryMUCK\n        me @ \"Helloooooo Furry!\" notify\n    $endif\n\n\n__VERSION\n\n  A pre$defined macro that contains the current server version.  Contains\nthe same string that the VERSION primitive returns.  This is mainly useful\nin $ifdef/$ifndef comparisons.  The value of this will always start with\n'Muck2.2fb' for historical reasons, followed by the current fbmuck server\nversion.  Ie: Muck2.2fb6.00 for the 6.00 fbmuck server.\n\n\n__PROG__\n\n  A compile-time token replaced with the dbref of the current program.\nCurrently recognized within $doccmd and $pubdef directives.\n\n\nMAX_VARIABLE_COUNT\n\n  A pre$defined macro that expands to the maximum number of variables of\neach type allowed in a program.  For function-scoped variables, this is the\nmax number of scoped vars that each function may have.\n\n\n$AUTHOR <rest_of_line>\n\n  Sets the _author string property on the program to <rest_of_line>.\nThe preferred format is an email address with name comment. ie:\n    $author Revar Desmera <revar@belfry.com>\nTo denote multiple authors, separate them with commas.  ie:\n    $author Revar Desmera <revar@belfry.com>, Foxen <foxen@belfry.com>\nIf you don't want to include your email address, just omit it.  ie:\n    $author Revar, Foxen\n\n\n$VERSION <float>\n\n  Sets the _version string property on the program to <float>.  Version\nnumbers should be like 1.009 and 1.010, so that they can be compared using\nfloating point comparisons.  (Remember, 1.9 is greater than 1.10.)\n\n\n$LIB-VERSION <float>\n\n  Sets the _lib-version string property on the program to <float>.  Version\nnumbers should be like 1.009 and 1.010, so that they can be compared using\nfloating point comparisons.  (Remember, 1.9 is greater than 1.10.)\n\n\n$NOTE <rest_of_line>\n\n  Sets the _note string property on the program to <rest_of_line>.\n\n\n$DOCCMD <rest_of_line>\n\n  Sets the _docs string property on the program to <rest_of_line>.\nThis property holds the command used to view documentation for the program.\n\n\n$DEFINE <defname> <definition> $enddef\n\n  Basically the same as C's #define <defname> <definition>\n\n\n$DEF <defname> <definition>\n\n  This is the same as $define, except that the definition stops at the end\nof the program line, without using an ending $enddef.\n\n\n$UNDEF <defname>\n\n  About the same as C's #undef <defname>\n\n\n$INCLUDE $<libname>\n$INCLUDE <dbref>\n\n  Sets a bunch of $defines from the properties in the /_defs/ propdir of the\ngiven program.  For example, if object #345 had the following properties:\n    /_defs/desc: \"_/de\" getpropstr\n    /_defs/setpropstr: dup if 0 addprop else pop remove_prop then\n    /_defs/setpropval: dup if \"\" swap addprop else pop remove_prop then\n    /_defs/setprop: dup int? if setpropval else setpropstr then\nthen if a program contained '$include #345' in it, then all subsequent\nreferences to 'desc', 'setpropstr', 'setpropval', and 'setprop' would\nbe expanded to the string values of their respective programs.  For example,\n'desc' would be replaced throughout the program with '\"_/de\" getpropstr'\nNOTE:  You cannot have a slash in a definition name.  ie: The property\n    _defs/a/b:foo\nwill NOT make a definition named a/b.\n\n\n$PUBDEF :\n$PUBDEF <defname>\n$PUBDEF <defname> <rest_of_line>\n$PUBDEF \\<defname> <rest_of_line>\n\n  By using this directive, the _defs/ directory on a MUF program can\nbe set at compile time.\n\n$pubdef :                          Clears the _defs/ propdir on the program.\n$pubdef <defname>                  Clears the _defs/<defname> prop on the prog.\n$pubdef <defname> <rest_of_line>   Sets _defs/<defname> prop to <rest_of_line>.\n$pubdef \\<defname> <rest_of_line>  Sets _defs/<defname> if not already set.\n\nFor example:\n    $pubdef tell me @ swap notify\nwould put a property named '_defs/tell' on the program object, with the\nvalue 'me @ swap notify'.  Def names cannot have ':' nor '/' in them.\n\n\n$LIBDEF <function>\n$LIBDEF \\<function>\n\n  Sets up an _defs/ prop on the program to call the specified function.\nFor example:\n    $libdef myfunc\nwould put a prop named '_defs/myfunc' on the program object, with the\nvalue '<this_programs_dbref> \"myfunc\" call'\n\n\n$CLEARDEFS [ALL]\n\n  Ignores program _defs/ when compiling the program. Wizards programs can\nuse '$cleardefs ALL' to also ignore #0 _defs/ when compiling. This does\nnot affect macros, and internal _defs/ are always loaded no matter what.\n\n\n$IFDEF <condition> <compile if true> $endif\n$IFDEF <condition> <compile if true> $else <compile if false> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the existence of or value of certain $defined names.\nThe four accepted forms of the <condition> argument are:\n    DEFNAME        Is true if DEFNAME was $defined earlier, whatever the value.\n    DEFNAME=VALUE  Is true if DEFNAME exists and its value equals VALUE.\n    DEFNAME>VALUE  Is true if DEFNAME exists and is greater than VALUE.\n    DEFNAME<VALUE  Is true if DEFNAME exists and is less than VALUE.\n\n  The semantics of greater than and less than is the same as that used by\nthe strcmp string comparison command.  There must be no spaces between the\nDEFNAME, comparator, and VALUE.  They must be run together as one word.\n\n  There is no >= or <= comparator available, so to make such a comparison\nyou need to use $ifndef with the opposite comparator.  Ie, to check if\nFOO is greater than or equal to 3, use:\n    $ifndef FOO<3\n        BAR\n    $endif\n\nCompiler directives are nestable also.  For examples:\n    $ifdef __version>Muck2.2fb3.5\n        $def envprop .envprop\n    $endif\n    $define ploc\n        $ifdef proplocs\n            .proploc\n        $else\n            owner\n        $endif\n    $enddef\n\n\n$IFNDEF <condition> <compile if false> $endif\n$IFNDEF <condition> <compile if false> $else <compile if true> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the non-existence of or value of $defined names.  $ifndef is\nshort for 'If NOT Defined' or 'If Not', so it compiles the first code\nbranch (before the optional $else), only if the <condition> is false.\nThe four accepted forms of the <condition> argument are:\n    DEFNAME        Is true if DEFNAME was $defined earlier, whatever the value.\n    DEFNAME=VALUE  Is true if DEFNAME exists and its value equals VALUE.\n    DEFNAME>VALUE  Is true if DEFNAME exists and is greater than VALUE.\n    DEFNAME<VALUE  Is true if DEFNAME exists and is less than VALUE.\n\nThe semantics of greater than and less than is the same as that used by the\nstrcmp string comparison command.  There must be no spaces between the\nDEFNAME, comparator, and VALUE.  They must be run together as one word.\n\n\n$IFVER this <float> <truebranch> $endif\n$IFVER this <float> <truebranch> $else <falsebranch> $endif\n$IFVER $<libname> <float> <truebranch> $endif\n$IFVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFVER <dbref> <float> <truebranch> $endif\n$IFVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $version of the given program, which is stored in its\n'_version' property.  In the form '$ifver this' then this checks this\ncompiling program's $version.  Otherwise, this checks the $version of\nthe program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $version\nis greater than or equal to the given <float>, using a floating point\nnumber comparison.  Otherwise, the <falsebranch>, if given, will be\ncompiled.\n\n\n$IFNVER this <float> <truebranch> $endif\n$IFNVER this <float> <truebranch> $else <falsebranch> $endif\n$IFNVER $<libname> <float> <truebranch> $endif\n$IFNVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFNVER <dbref> <float> <truebranch> $endif\n$IFNVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $version of the given program, which is stored in its\n'_version' property.  In the form '$ifnver this' then this checks this\ncompiling program's $version.  Otherwise, this checks the $version of\nthe program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $version\nis less than the given <float>, using a floating point number comparison.\nOtherwise, the <falsebranch>, if given, will be compiled.\n\n\n$IFLIBVER this <float> <truebranch> $endif\n$IFLIBVER this <float> <truebranch> $else <falsebranch> $endif\n$IFLIBVER $<libname> <float> <truebranch> $endif\n$IFLIBVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFLIBVER <dbref> <float> <truebranch> $endif\n$IFLIBVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $lib-version of the given program, which is stored in its\n'_lib-version' property.  In the form '$iflibver this' then this checks this\ncompiling program's $lib-version.  Otherwise, this checks the $lib-version\nof the program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $lib-version\nis greater than or equal to the given <float>, using a floating point\nnumber comparison.  Otherwise, the <falsebranch>, if given, will be\ncompiled.\n\n\n$IFNLIBVER this <float> <truebranch> $endif\n$IFNLIBVER this <float> <truebranch> $else <falsebranch> $endif\n$IFNLIBVER $<libname> <float> <truebranch> $endif\n$IFNLIBVER $<libname> <float> <truebranch> $else <falsebranch> $endif\n$IFNLIBVER <dbref> <float> <truebranch> $endif\n$IFNLIBVER <dbref> <float> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the $lib-version of the given program, which is stored in its\n'_lib-version' property.  In the form '$ifnlibver this' then this checks this\ncompiling program's $lib-version.  Otherwise, this checks the $lib-version\nof the program referenced by $regname or #dbref.\n  The <truebranch> will be compiled if the given program's $lib-version\nis less than the given <float>, using a floating point number comparison.\nOtherwise, the <falsebranch>, if given, will be compiled.\n\n\n$IFLIB $<libname> <truebranch> $endif\n$IFLIB $<libname> <truebranch> $else <falsebranch> $endif\n$IFLIB <dbref> <truebranch> $endif\n$IFLIB <dbref> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the existence of a given program.\n  The <truebranch> will be compiled if the given object exists and is a\nprogram.  Otherwise, the <falsebranch>, if given, will be compiled.\n\n\n$IFNLIB $<libname> <truebranch> $endif\n$IFNLIB $<libname> <truebranch> $else <falsebranch> $endif\n$IFNLIB <dbref> <truebranch> $endif\n$IFNLIB <dbref> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the existence of a given program.\n  The <truebranch> will be compiled if the given object does not exist, or\nif it is not a program.  Otherwise, the <falsebranch>, if given, will be\ncompiled.\n\n\n$IFCANCALL $<libname> <publicname> <truebranch> $endif\n$IFCANCALL $<libname> <publicname> <truebranch> $else <falsebranch> $endif\n$IFCANCALL <dbref> <publicname> <truebranch> $endif\n$IFCANCALL <dbref> <publicname> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the ability for the compiling program to call a given public\nfunction on a given program.\n  The <truebranch> will be compiled if the given program exists, is a\nprogram, and has a given callable function (declared with PUBLIC or WIZCALL)\nthat this compiling program has permission to call.  Otherwise, the\n<falsebranch>, if given, will be compiled.\n\n\n$IFNCANCALL $<libname> <publicname> <truebranch> $endif\n$IFNCANCALL $<libname> <publicname> <truebranch> $else <falsebranch> $endif\n$IFNCANCALL <dbref> <publicname> <truebranch> $endif\n$IFNCANCALL <dbref> <publicname> <truebranch> $else <falsebranch> $endif\n\n  This determines whether or not to compile optional sections of code,\ndepending on the ability for the compiling program to call a given public\nfunction on a given program.\n  The <truebranch> will be compiled if the given program does not exist,\nis not a program, or does not have a given callable function (declared with\nPUBLIC or WIZCALL) that this compiling program has permission to call.\nOtherwise, the <falsebranch>, if given, will be compiled.\n\n\n$ECHO <string>\n  Echos the given string to the screen of the person compiling the program.\nRuns at compile-time.\n\n\n$ABORT <message>\n  Aborts compiling and prints out the error message.\n\n\n$PRAGMA <pragmatype> [<args>]\n  Sets a compiler option in a backwards compatible manner.  If the pragmatype\nisn't recognized, the compiler will just ignore this line and continue its\ncompile attempt.  The $pragma directive must be all on one line, and the\nentire rest of the line after the pragmatype is assumed to be arguments for\nthat pragmatype.  The currently supported pragmatypes are:\n\nCOMMENT_STRICT\n  This specifies that comments are in the old style that is terminated by the\nfirst end-paren ')' in the comment.\n\nCOMMENT_RECURSE\n  This specifies that comments are in the new recursive style where any parens\n'(' in a comment must be matched by end-parens ')'.\n\nCOMMENT_LOOSE\n  This is the default comment style, where the compiler tries to compile\ncomments as if in comment_recurse mode, but will fall back to comment_strict\nmode if a comment fails to have balancing parens.\n\n\n$ENTRYPOINT <function name>\n\n  Sets the function used to start the program. Defaults to the last one.\n\n\n$LANGUAGE \"<language name>\"\n\n  Sets the language used to compile the program. \"MUF\" is currently supported.\n\n\nEscaping Literal Tokens:\n\n  You can escape a token in MUF so that it will be interpreted literally.\nie:  \\.pmatch will try to compile '.pmatch' without expanding it as a\nmacro.  This lets you make special things with $defines such as:\n    $define addprop over over or if \\addprop else pop pop remove_prop $enddef\nso that all the 'addprop's in the program will be expanded to the\ndefinition, but the 'addprop' in the definition will not try to expand\nrecursively.  It will call the actual addprop.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Stack Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nPOP ( x -- )\n\n  Pops the top of the stack into oblivion.\n\n\nPOPN ( ?n..?1 i -- )\n\n  Pops the top i stack items.\n\n\nDUP ( x -- x x )\n\n  Duplicates the item at the top of the stack.\n\n\nDUPN ( ?n..?1 i -- ?n..?1 ?n..?1 )\n\n  Duplicates the top i stack items.\n\n\n?DUP ( x -- x x | x )\n\n  Duplicates the item at the top of the stack if it does not resolve to false.\n\n\nNIP ( x y -- y )\n\n  Pops the second item off the stack.\n\n\nTUCK ( x y -- y x y )\n\n  Duplicates y and places it under x.\n\n\nLDUP ( {?} -- {?} {?} )\n\n  Duplicates a stackrange on top of the stack.\n\n\nSHALLOW_COPY ( x -- x x )\n\n  Duplicates the item at the top of the stack.  If it is an array, it makes\na shallow copy of it that is decoupled from the original array.\n\n\nDEEP_COPY ( x -- x x )\n\n  Duplicates the item at the top of the stack.  If it is an array, it makes\na deep copy of it that is decoupled from the original array.\n\n\nSWAP ( x y -- y x )\n\n  Takes objects x and y on the stack and reverses their order.\n\n\nOVER ( x y -- x y x )\n\n  Duplicates the second-to-top thing on the stack.  This is the same as 2 pick.\n\n\nROT ( x y z -- y z x )\n\n  Rotates the top three things on the stack.  This is equivalent to 3 rotate.\n\n\n-ROT ( x y z -- z x y )\n\n  Rotates the top three things on the stack, in reverse.  Equivalent to -3 rotate.\n\n\nROTATE ( ni ... n1 i -- n(i-1) ... n1 ni )\n\n  Rotates the top i things on the stack.  Using a negative rotational\nvalue rotates backwards.\nExamples:\n    \"a\"  \"b\"  \"c\"  \"d\"  4  rotate\nwould leave\n    \"b\"  \"c\"  \"d\"  \"a\"\non the stack.\n    \"a\"  \"b\"  \"c\"  \"d\"  -4  rotate\nwould leave\n    \"d\"  \"a\"  \"b\"  \"c\"\non the stack.\n\n\nPICK ( ni ... n1 i -- ni ... n1 ni )\n\n  Takes the i'th thing from the top of the stack and pushes it on the top.\n1 pick is equivalent to dup, and 2 pick is equivalent to over.\n\n\nPUT ( nx...n1 ni i -- nx...ni...n1 )\n\n  Replaces the i'th item from the top of the stack with the value of ni.\nThe command sequence '1 put' is equivalent to 'swap pop'.\nExample:\n    \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  3  put\nwould return on the stack:\n    \"a\"  \"e\"  \"c\"  \"d\"\n\n\nREVERSE ( ?n..?1 i -- ?1..?n )\n\n  Reverses the order of the top i items on the stack.\nExample:\n    \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  4  reverse\nwould return on the stack:\n    \"a\"  \"e\"  \"d\"  \"c\"  \"b\"\n\n\nLREVERSE ( ?n..?1 i -- ?1..?n i )\n\n  Reverses the order of the top i stack items, leaving i.\nExample:\n    \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  4  lreverse\nwould return on the stack:\n    \"a\"  \"e\"  \"d\"  \"c\"  \"b\"  4\n\n\nDEPTH ( -- i )\n\n  Returns the number of unlocked items currently on the stack.\n\n\nFULLDEPTH ( -- i )\n  Returns the number of items currently on the stack.\n\n\n{  ( -- marker)\n\n  Pushes a marker onto the stack, to be used with } or }list or }dict.\n\n\n}  ( marker ?n ... ?1 -- ?n ... ?1 i )\n\n  Finds the topmost marker in the stack, and counts how many stack items\nare between it and the top of the stack.  The marker is removed from the\nstack, and the count is pushed onto the stack.\n\n\n\n\n\n----------------------------------------------------------------------------\n                       Variables and Handling Thereof\n----------------------------------------------------------------------------\n\n\n\n\nME @\n\n  There is a global variable named ME that contains the dbref of the\nplayer who invoked the program.  The value of this variable is not\nguaranteed to be secure, as another program could change the value of\nME then call your program.  If you must be certain that the value of\nthe ME variable is correct, use the commands:\n    \"me\" match me !\nThe ME global variable is the same variable as '0 variable'\n\n\nLOC @\n\n  There is a global variable named LOC that contains the dbref of the\nlocation of the player who invoked the program.  The value of this\nvariable is not guaranteed to be secure, as another program could change\nthe value of LOC then call your program.  If you must be certain that\nthe value of the LOC variable is correct, use the commands:\n    \"me\" match location loc !\nThe LOC global variable is the same variable as '1 variable'\n\n\nTRIGGER @\n\n  There is a global variable named TRIGGER that contains the dbref of the\ntrigger object that invoked the process.  The value of this variable is\nnot guaranteed to be secure, as another program could change the value of\nTRIGGER then call your program.  If you must be certain that the value of\nthe TRIGGER variable is correct, use the commands:\n    trig trigger !\nThe TRIGGER global variable is the same variable as '2 variable'\nThe value of TRIGGER will be #-1 for AUTOSTART programs,\n\n\nCMD ( -- s )\n\n  Returns the command the user invoked the program with, without its\ncommand line arguments.\n\n\nCOMMAND @\n\n  There is a COMMAND variable, similar to ME, LOC, and TRIGGER, except that\nit contains a string.  The string contains the command the user typed\nthat triggered the the program, without the command line arguments.  ie:\nif there was an exit named \"abracadabra;foo bar;frozzboz\" that was linked\nto the program, and the user typed in \"foo bar baz\", then the program\nwould run with \"baz\" on the stack, and \"foo bar\" in the global COMMAND\nvariable.  The COMMAND global variable is the same variable as '3 variable'\n\n\nVAR <name>\n\n  When used inside a function, a function-scoped variable is created.\nThis variable is local to each invocation of a given function; recursive\ncalls each get their own scoped variable dataspace.  This variable type\nis analogous to C's function-scoped variables.  The use of function-scoped\nvariables is highly recomended to make functions more readable.\n\n  When used outside of a function, the compiler allows the use of <name>\nas a global variable in all functions defined after the var declaration.\nThis variable dataspace is shared between ALL muf programs called in\nthis process.  This means that if program A declares a global variable,\nthen calls program B, and program B also declares a global variable,\nthen changes its value, then the global variable declared in program A\nwill also have been changed.  For this reason, this usage of VAR is\ndeprecated and shoud NOT be used.  Use LVAR instead.  This usage is only\nkept around for backwards compatability with some old icky programs that\nused this feature to pass data between some programs.\n\n\nVAR! <name>\n\n  This must be used within a function.  It declares a function-scoped\nvariable named <name> that then has its value set to the topmost stack\nitem.  For example, the following program prints out \"Hello World!\":\n    : myfunction\n        \"Hello World!\" var! foo\n        me @ foo @ notify\n    ;\n\n\nLVAR <varname>\n\n  This declares a variable as a program-local variable.  If another program\ncalls this program, the values of the program-local variables will not be\nchanged in the calling program, even if the called program changes them.\nThis variable will be available to all functions defined later in the\nprogram, after the lvar declaration.  This variable's data is persistent\nwithin this process.  Ie: if program A calls program B, and program B sets\nthe value of this program-local variable, then returns to A, which then\ncalls B again, the value of this variable will still have the value it was\nset to in the first call.  The value is NOT persistent between different\nprocesses.  This variable type is analogous to C's global variables.\n\n\n@ ( v -- x )\n\n  Retrieves variable v's value x.\n\n\n! ( x v -- )\n\n  Sets variable v's value to x.\n\n\nVARIABLE ( i -- v )\n\n  Converts integer i to global variable reference v. Of the pre-defined\nvariables, `me' corresponds to integer 0, `loc' to 1, `trigger' to 2,\nand 'command' to 3.\nThus:\n    me @\nand\n    0 variable @\nwill do the same thing (returning the user's dbref). User-defined variables\nare numbered sequentially starting at 4 by the compiler. Note that these\nvariable numbers can be used even if variables have not been formally\ndeclared.  This command has been deprecated, and is not recommended to use.\nIts original purpose was to allow MUF to do small arrays.  Since MUF now\nhas an intrinsic array stack item type, this should no longer be used.\n\n\nLOCALVAR (i -- l)\n\n  Takes an integer and returns the respective program-local variable.\nSimilar to the 'variable' primitive.  Use of this command is deprecated\nand is not recommended.  Use the array stack item type instead.\n\n\nSECURE_SYSVARS ( -- )\n\n  Sets the value of variables \"me\", \"loc\", \"trigger\" and \"command\" to their\ncorrect values in one instruction.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Logical Operators\n----------------------------------------------------------------------------\n\n\n\n\n<  ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is less than n2, and 0 otherwise.\n\n\n>  ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is greater than n2, and 0 otherwise.\n\n\n=  ( ?1 ?2 -- i )\n\n  Compares two numbers, dbrefs, or strings and returns 1 if ?1 is equal to ?2,\nand 0 otherwise.\n\n\n!=  ( ?1 ?2 -- i )\n\n  Compares two numbers, dbrefs, or strings and returns 0 if ?1 is equal to ?2,\nand 1 otherwise.\n\n\n<= ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is less than or equal to n2,\nand 0 otherwise.\n\n\n>= ( n1 n2 -- i )\n\n  Compares two numbers and returns 1 if n1 is greater than or equal to n2,\nand 0 otherwise.\n\n\nNOT ( x -- i )\n\n  Returns true (1) if the top stack item is considered false.  Returns\nfalse (0) otherwise.  The stack item can be of any type.  For the various\ntypes, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nAND ( x1 x2 -- i )\n\n  Returns true (1) if both of the top two stack items are considered true.\nReturns false (0) otherwise.  The stack items can be of any type.  For the\nvarious types, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nOR ( x1 x2 -- i )\n\n  Returns true (1) if either of the top two stack items are considered true.\nReturns false (0) otherwise.  The stack items can be of any type.  For the\nvarious types, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nXOR ( x1 x2 -- i )\n\n  Returns true (1) if either of the top two stack items are considered true,\nbut NOT both of them.  Returns false (0) otherwise.  The stack items can be\nof any type.  For the various types, here are their false values:\n    Integer      0\n    Float        0.0\n    DBRef        #-1\n    String       \"\"\n\n\nSTRING? ( x -- i )\n\n  Returns true if x is a string.\n\n\nINT? ( x -- i )\n\n  Returns true if x is a int.\n\n\nFLOAT? ( ? -- i )\n\n  Returns true if the item on the stack is a floating point value.\n\n\nDBREF? ( x -- i )\n\n  Returns true if x is a dbref.\n\n\nARRAY? ( ? -- i )\n\n  Tests if stack item is an array.  Returns i as 1 if so, 0 if\notherwise.\n\n\nDICTIONARY? ( ? -- i )\n\n  Tests if stack item is an array of dictionary type.  Returns i as 1\nif so, 0 if otherwise.\n\n\nADDRESS? (? -- i)\n\n  Returns true if the top stack item is a function address.\n\n\nLOCK? (? -- i)\n\n  Returns true if the top stack item is a lock.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Execution Control Structures\n----------------------------------------------------------------------------\n\n\n\n\nIF (x -- ) ... THEN\nIF (x -- ) ... ELSE ... THEN\n\n  Examines boolean value x.  If x is TRUE, the sequence of statements\nafter the 'if' up until the `then' (or until the `else' if it is\npresent) performed. If it is FALSE, then these statements are skipped,\nand if an `else' is present, the statements between the `else' and the\n`then' are performed.  Control continues as usual at the statement\nafter the `then'.  Note that checking the top of the stack actually\npops it, so if you want to re-use it, you should dup (see DUP) it\nbefore the if. For every IF in a word, there MUST be a THEN, and\nvice-versa.  ELSE is optional.\n\n\nIF (x -- ) ... ELSE ... THEN\n\n  Begins an ELSE block in an IF-ELSE-THEN code block.  If the value\ntested by the IF is false, then this code block will be executed.\n\n\nIF (x -- ) ... THEN\nIF (x -- ) ... ELSE ... THEN\n\n  Denotes the end of an IF-THEN or IF-ELSE-THEN code block.\n\n\n'FUNCNAME ( -- a )\n\n  Pushed the address of the start of the previously defined function\nFUNCNAME onto the stack.  This can be useful for use with EXECUTE and\narrays to make a list of functions you can call by index, or for making\nfunction callbacks.\n\n\nEXECUTE ( a -- ?? )\n\n  Executes the function pointed to by the address a on the stack.\nThis function does NOT need to be in the same program as the function\nthat did the EXECUTE.\n\n\nJMP (a -- )\n\n  The JMP primitive takes an address like those supplied by 'funcname and\nmoves execution to that point.  It's one early way that was used to do\ntail-recursion loops without as much overhead, and without failing due to\nsystem stack overflows.  It's mostly obsolete now, except that it's one\nof the three or four internal primitives used to implement IF-ELSE-THEN and\nBEGIN-WHILE-REPEAT loops and such.  You shouldn't use JMP explicitly in\nin modern MUF code, as it is deprecated.  NOTE: Using JMP to jump into a\ndifferent function can have problems, and is not recommended.\n\nExample of JMP as a tail-recursion optimization:\n    : countforever ( i -- )\n        1 +\n        dup intostr .tell\n        'countforever jmp\n    ;\n\nA better ways to do the same thing with looping primitives would be:\n    : countforever ( i -- )\n        begin\n            1 +\n            dup intostr .tell\n        repeat\n    ;\n\n\nCALL ( d -- ?? )\nCALL ( d s -- ?? )\n\n  Calls another program d.  Program d will inherit the values of ME, LOC,\nTRIGGER, and all other global variables.  If used in the second form,\nthis will call the named PUBLIC function s in the given program d.\nThe called program will NOT share the same localvars as the caller,\nunless the caller is calling itself.\n\n\nINTERP ( d1 d2 s -- ? )\n\n  Takes a program dbref to run d1, the trigger to use d2, and the top stack\nitem string and calls the program with the given string on the stack.\nReturns when interpretation halts, which could be the result of an exit, an\nerror, or a primitive that suspends execution such as sleep or read.\nReturn value is the top item off the stack if successful exit, or a null\nstring for anything else.\n\n\nEXIT ( -- )\n\n  Exits from the function currently being executed, returning control to\nthe calling function, at the statement immediately after the location of\nthe call (exiting the program if applicable).\n\n\nBEGIN ( -- )\n\n  Marks the beginning of BEGIN-UNTIL or BEGIN-REPEAT loops.\n\n\nFOR (i1 i2 i3 -- i)\n\n  Marks the beginning of a iterative FOR loop, and initializes it with i1\nas the start index, i2 as the end index, and i3 as the step.  If i2 is less\nthen i1, or if i3 is negative and i2 is greater then i1, the entire loop is\nskipped without executing.  If i3 is 0 the loop will run infinitely until\nsome other condition causes an exit.\n\n\nFOREACH (a -- @ ? )\n\n  Marks the beginning of an iterative FOREACH loop, stepping through every\nindex/value pair in the array.\n\n\nWHILE (i -- )\n\n  If the value on top of the stack is false, then this causes execution\nto jump to the instruction after the UNTIL or REPEAT for the current\nloop.  If the value is true, however, execution falls through to the\ninstruction after the WHILE.\n\n\nBREAK ( -- )\n\n  Breaks out of the innermost loop.  Jumps execution to the instruction\nafter the UNTIL or REPEAT for the current loop.\n\n\nCONTINUE ( -- )\n\n  Jumps execution to the beginning of the current loop.\n\n\nREPEAT ( -- )\n\n  This marks the end of the current loop.  Execution jumps to the instruction\nafter the matching BEGIN, FOREACH or FOR in a loop.\n\n\nUNTIL (i -- )\n\n  This marks the end of the current loop.  If the value on top of the\nstack is false, then execution jumps back to the instruction after\nthe matching BEGIN or FOR statement.  If the value is true, it exits\nthe loop, and continues execution at the next instruction following\nthe UNTIL.\n  Loops, TRY-CATCH-ENDCATCH's, and IF-ELSE-THEN's can all be nested in\neach other as much as you want.\n\n\nCase statements\n\n  Inserver defines to achieve case statements. Allows:\n\n<data> case\n  <test> when <effect> end\n  <test> when <effect> end\n  <test> when <effect> end\n  <test> when <effect> end\n  default <otherwise>  end\nendcase\n \nThis compiles to the following MUF code:\n\n<data> begin\n  dup <test> if pop <effect> break then\n  dup <test> if pop <effect> break then\n  dup <test> if pop <effect> break then\n  dup <test> if pop <effect> break then\n  dup pop 1  if <otherwise>  break then\n  dup pop pop\n1 until\n\n\nLoops:\n\n  The BEGIN, FOR, or FOREACH statement marks the beginning of a loop.\nEither the UNTIL or the REPEAT statement marks the end of the loop.\nREPEAT will do an unconditional jump back to the BEGIN or FOR statement.\nUNTIL checks to see if the value on the stack is false.  If it is, it\njumps back to the BEGIN or FOR statement, otherwise, it falls through\non execution to the statement after the UNTIL.\n  Within a loop, even within IF-ELSE-THEN structures within the loop\nstructure, you can place WHILE, CONTINUE, or BREAK statements.  There\nis no limit as to how many, or in what combinations these instructions\nare used.\n  A WHILE statement checks to see if the top value on the stack is false.\nIf it is, then execution breaks out of the innermost loop and resumes\nafter the matching REPEAT or UNTIL statement.\n  The CONTINUE statement causes the loop to jump back to the beginning\nof its next iteration, after the BEGIN, FOR, or FOREACH.\n  The BREAK statement forces execution to break out of the innermost loop,\nresuming after the matching REPEAT or UNTIL.\n  Note: You can nest loops complexly, but WHILE, BREAK, and CONTINUE\nstatements only refer to the innermost loop structure.\n\n\nLoop Examples 1:\n\nHow to count from 1 to 10 using a BEGIN-REPEAT loop:\n    0 begin\n        dup 10 < while\n        1 +\n        me @ over intostr notify\n    repeat\n\nHow to count from 1 to 10 using a BEGIN-UNTIL loop:\n    0 begin\n        1 +\n        me @ over intostr notify\n        dup 10 =\n    until\n\nHow to count from 1 to 10 using a FOR-REPEAT loop:\n    1 10 1 for\n        intostr me @ swap notify\n    repeat\n\n\nLoop Examples 2:\n\nExample of a FOR loop:\n    1 10 1 for\n        me @ swap intostr notify\n    repeat\n\nExample of nested FOR loops:\n    1 5 1 for\n        \"\" swap 1 -1 for\n            intostr strcat\n        repeat\n        me @ swap notify\n    repeat\n\nExample of a complex (if pointless) FOR loop:\n    10 -10 -2 for\n        me @ over intostr notify\n        dup -5 > while\n        dup 0 = if pop continue then\n        dup -3 = if pop break then\n        not\n    until\n\nExample of a FOREACH loop:\n    {\n        \"index1\" \"value1\"\n        \"index2\" \"value2\"\n        \"index3\" \"value3\"\n    }dict\n    foreach\n        \" = \" swap strcat strcat me @ swap notify\n    repeat\n\n\nLoop Examples 3:\n\nExample of a complex loop structure:\n    101 begin                       (BEGIN the outer loop)\n        dup while 1 -                 (This WHILE, ...)\n        dup not if break then         (this BREAK, and..)\n        dup 2 % not if continue then  (this CONTINUE refer to the outer loop)\n        dup 10 % not if\n        15 begin                      (BEGIN inner loop)\n            dup while 1 -               (This WHILE, and.. )\n            dup 5 % not if break then   (... this BREAK, refer to inner loop)\n        repeat                        (This REPEAT statement ends inner loop.)\n        then\n        dup 7 % not if continue then  (This CONTINUE, and...)\n        dup 3 % not if\n            dup 9 % while             (...this WHILE refer to the outer loop)\n        then\n        dup intostr\n        me @ swap notify\n    dup 1 = until pop               (This UNTIL ends the outer loop)\n\n\nPUBLIC <functionname>\n\n  Declares a previously defined function to be public for execution by other\nprograms.  This is a compile-time directive, not a run-time primitive.  To\ncall a public function, put the dbref of the program on the stack, then put\na string, containing the function name, on the stack, then use CALL.\nFor example:\n    #888 \"functionname\" CALL\n\n\nWIZCALL <functionname>\n\n  Declares a previously defined function to be callable from other programs,\nas long as the calling program has wizbit permissions.  This is a compile-\ntime directive, not a run-time primitive.  To call a public function, put\nthe dbref of the program on the stack, then put a string, containing the\nfunction name, on the stack, then use CALL.  For example:\n    #888 \"functionname\" CALL\n\n\nCANCALL?  (d s -- i)\n\n  Returns true if the given program has a public or wizcall function that the\ncurrent program has permissions to call.  Returns false, otherwise.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               I/O Operators\n----------------------------------------------------------------------------\n\n\n\n\nNOTIFY ( d s -- )\n\n  d must be a player object. s must be a string. Tells player d message\ns.  If s is null it will print nothing.  This primitive will trigger\nthe _listen'er property on the object the message is sent to, unless\nthe program that would be run is the same as one one currently running.\n\n\nNOTIFY_NOLISTEN ( d s -- )\n\n  d must be a player object. s must be a string. Tells player d message\ns.  If s is null it will print nothing.  This primitive will not trigger\nany _listen'er properties on the object the message is sent to.\n\n\nNOTIFY_EXCEPT ( d1 d2 s -- )\n\n  d1 must be a room object, s must be a string.  Tells everyone at\nlocation d1 except object d2 message s.  If object d2 is not a player\nor NOTHING (#-1) all players are notified.  If s is null it prints\nnothing.  NOTE: notify_except is now only an inserver $define.  It is\ntranslated to '1 swap notify_exclude'.  Please see the man sections on\nNOTIFY_EXCLUDE and DIRECTIVES for more information.\n\n\nNOTIFY_EXCLUDE ( d dn ... d1 n s -- )\n\n  Displays the message s to all the players (or _listening objects),\nexcluding the n given players, in the given room.  For example:\n  #0 #1 #23 #7 3 \"Hi!\" notify_exclude\nwould send \"Hi!\" to everyone in room #0 except for players (or objects)\n#1, #7, and #23.  _listener's will not be triggered by a notify_exclude\nif the program they would run is the same as the current program running.\n\n\nNOTIFY_SECURE ( d s1 s2 -- )\n  Notifies player d with s1 over their secure descriptors and s2 over their\ninsecure descriptors. Triggers listener prop queues only with s2.\n\n\nREAD_WANTS_BLANKS ( -- )\n\n  Tells the interpreter that this process wants to be able to receive blank\nlines from the READ primitive. This can be reversed with the READ_WANTS_NO_BLANKS\nprimitive.\n\n\nREAD_WANTS_NO_BLANKS ( -- )\n\n  Tells the interpreter that this process should ignore blank lines from\nthe READ primitive. This is only necessary after a call to READ_WANTS_BLANKS has\nbeen made.\n\n\nREAD ( -- s )\n\n  Reads a string s from the user. This command should not be used in a\nprogram that is locked (as opposed to linked) to an object, as the\nlock will always fail and print the fail messages at read time.  It\ncannot be used in a program associated with a room object.\n\n\nTREAD ( i -- s i )\n\n  Acts like a timed READ call.  If the user does not provide input within\nthe given number of seconds, the READ call will time-out and return a\nfalse boolean, otherwise it returns a true boolean and the string value\nentered.  This is implemented as an in-server macro as follows:\n    \"__tread\" timer_start { \"TIMER.__tread\" \"READ\" }list event_waitfor\n    swap pop \"READ\" strcmp if \"\" 0 else read 1 \"__tread\" timer_stop then\n\n\nUSERLOG ( str:mesg -- )\n\n  Logs an arbitrary message to the user log file.  (#defined in config.h\nas USER_LOG, defaults to the \"logs/user\" file.)  The log entry will be\nformatted like:\nWinged(#4023) [newaction.muf(#666)] 2002-06-11T03:09:31: <string>\nThe program must be running at a mucker level at least equal to the @tune\nvalue 'userlog_mlev' (defaults to 3) to write this log entry.\n\n\nTELL ( s -- )\n\n  Displays the message s to the player, triggering applicable listeners.\n\n\nOTELL ( s -- )\n\n  Displays the message s to all occupants of the player's location, except\nthe player.  This primitive triggers applicable listeners.\n\n\n\n\n\n----------------------------------------------------------------------------\n                           Mathematical Operators\n----------------------------------------------------------------------------\n\n\n\n\nINT ( x -- i )\n\n  Converts variable, float, or dbref x to integer i.\n\n\n+ ( n1 n2 -- i )\n  This adds two numbers, n1 + n2.  If both numbers are integers, an integer\nwill be returned.  If one of them is a floating point number, then a float\nwill be returned.  You can also use this on a dbref or a variable number,\nso long as the second argument is an integer.  In those cases, this will\nreturn a dbref or variable number, respectively.\n\n  Also concatenates two strings.\n\n\n- ( n1 n2 -- i )\n\n  This subtracts two numbers, n1 - n2.  If both numbers are integers, an\ninteger will be returned.  If one of them is a floating point number,\nthen a float will be returned.  You can also use this on a dbref or a\nvariable number, so long as the second argument is an integer.  In those\ncases, this will return a dbref or variable number, respectively.\n\n\n* ( n1 n2 -- n )\n\n  This multiplies two numbers, n1 * n2.  If both numbers are integers, an\ninteger will be returned.  If one of them is a floating point number,\nthen a float will be returned.  You can also use this on a dbref or a\nvariable number, so long as the second argument is an integer.  In those\ncases, this will return a dbref or variable number, respectively.\n\n  Also repeats a string given an integer argument.\n\n\n/ ( n1 n2 -- n )\n\n  This divides two numbers, n1 / n2.  If both numbers are integers, an\ninteger will be returned.  If one of them is a floating point number,\nthen a float will be returned.  You can also use this on a dbref or a\nvariable number, so long as the second argument is an integer.  In those\ncases, this will return a dbref or variable number, respectively.\n\n\n% ( n1 n2 -- i )\n\n  This returns the integer modulo (remainder) of the division of two\nnumbers, n1 % n2.  Floats cannot use the % modulo function.  For them,\nuse either the FMOD or MODF primitives.\n\n\n++ ( v -- )\n++ ( n -- n' )\n\n  If given an integer, float, or dbref, adds 1 to it, and returns the result.\nIf given a variable containing an integer, float, or dbref, adds 1 to the\nvalue stored in the variable, and returns nothing.\n\n\n-- ( v -- )\n-- ( n -- n' )\n\n  If given an integer, float, or dbref, this subtracts 1 from it, and\nreturns the result.  If given a variable containing an integer, float,\nor dbref, this subtracts 1 from the value stored in the variable, and\nreturns nothing.\n\n\nABS ( i -- i )\n\n  Given an integer, returns its absolute value.\n\n\nSIGN ( i -- i )\n\n  Given an integer, returns 1 if positive, -1 if negative, and 0 if 0.\n\n\nGETSEED ( -- s )\n\n  Returns the the current SRAND seed string.\n\n\nSETSEED ( s -- )\n\n  Sets the seed for SRAND.  Only the first thirty-two characters are\nsignificant.  If SRAND is called before SETSEED is called, then SRAND\nis seeded with a semi-random value.\n\n\nSRAND ( -- i )\n\n  Generates a seeded random number.\n\n\nRANDOM ( -- i )\n\n  Returns a random integer from 0 to (2^31)-1, which is 2,147,483,647.\nThis is based on the C random() function, so it's not very secure.\n\n\nBITOR (i i -- i)\n\n  Does a mathematical bitwise or.\n\n\nBITXOR (i i -- i)\n\n  Does a mathematical bitwise exclusive or.\n\n\nBITAND (i i -- i)\n\n  Does a mathematical bitwise and.\n\n\nBITSHIFT (i i -- i)\n\n  Shifts the first integer by the second integer's number of bit positions.\nSame as the C << operator.  If the second integer is negative, its like >>.\n\n\n\n\n\n----------------------------------------------------------------------------\n                          Floating Point Operators\n----------------------------------------------------------------------------\n\n\n\n\nFLOAT ( i -- f )\n\n  Converts integer to floating point type.\n\n\nPI ( -- f )\n\n  Returns the value of Pi.\n\n\nINF ( -- f )\n\n  Returns the value of an Infinite result.  Most functions will not\naccept this value as a legal input.\n\n\nEPSILON ( -- flt:epsilon )\n\n  Returns the smallest number such that 1.0 + Epsilon is distinct from 1.0\nin the internal representation for floating point numbers.  This is the\nprecision error.  This is useful when comparing that two numbers are equal\nto within the precision of the system.  ie:\n    float1 @ float2 @ - fabs epsilon < if \"Equivalent\" then\n\n  When you are working with numbers that have exponent parts that may not be\nnear e+00, you should do a relative comparison instead:\n    float1 @ float2 @ - float1 @ / fabs epsilon < if \"Equivalent\" then\n\n\nFTOSTR ( f -- s )\n\n  Converts a floating point number into a string.  Trailing zeros are not\nremoved from the end of the number, when no mantissa is shown.  FTOSTR can\nreturn either the xxx.yyy form or the x.yyyEzz form of a float, depending\non which would give the shortest string length.\n\n\nFTOSTRC ( f -- s )\n\n  Converts a floating point number into a string.  Trailing zeros are removed\nfrom the initial decimal, if no mantissa is shown.  FTOSTRC can return either\nthe xxx.yyy form or the x.yyyEzz form of a float, depending on which would\ngive the shortest string length.\n\n\nSTRTOF ( s - f )\n\n  Converts a string into a floating point type.\nSTRTOF recognizes most standard forms of floating point representation,\nincluding the xxx.yyy and x.yyyEzz forms.\n\n\nFABS ( f -- f )\n\n  Returns the absolute value of the float f.\n\n\nCEIL ( f - f )\n\n  Returns the next highest integer, as a floating point type.\n\n\nFLOOR ( f -- f )\n\n  Returns the next lowest integer number, as a floating point type.\n\n\nROUND ( f i -- f )\n\n  Rounds the floating point number to the precision requested, given as the\nnumber of places to the right of the decimal point.  ie: '1.111 1 round'\nwould leave '1.1' on the stack, while '1.111 0 round' would leave '1.0'.\nNegative i values denote places to the left of the decimal place.  ie:\n'1234.56 -2 round' would return '1200.0' on the stack.\n\n\nFMOD ( f1 f2 -- f )\n\n  Returns the floating point remainder of f1 divided by f2.  (f1/f2)\n\n\nMODF ( f -- fi ff )\n\n  The modf primitive breaks f into an integral part and a fractional part,\neach of which has the same sign as f.  Both returned values are floats.\nfi is the integral part, while ff is the fractional part.\n\n\nSQRT ( f -- f )\n\n  Returns a float's square root.  Expects a value greater than or equal\nto zero.\n\n\nCOS ( f -- f )\n\n  Returns the cosine of a float.  Only operates in the range of -Pi/4 to Pi/4.\n\n\nACOS ( f -- f )\n\n  Returns the inverse cosine of a float.  Only operates within the range\nfrom 0 to Pi.\n\n\nSIN ( f -- f )\n\n  Returns the sine of a float.  Only operates within the range of -Pi/4\nto Pi/4.\n\n\nASIN ( f -- f )\n\n  Returns the inverse sine of a float.  Only operates within the range\nfrom -Pi/2 to Pi/2.\n\n\nTAN ( f -- f )\n\n  Returns the tangent of a float.  Only operates within the range of\nK*pi + pi/2 (for some K).\n\n\nATAN ( f -- f )\n\n  Returns the inverse tangent of a float.  Only operates within the range\nfrom -Pi/2 to Pi/2.\n\n\nATAN2 ( fy fx -- f )\n\n  Returns the inverse tangent of (fy / fx), taking into account the signs\nof both values, and avoiding problems with DIVBY0.  This is useful to\nget an angle from X-Y coordinates.\n\n\nLOG ( f -- f )\n\n  Returns the natural log of float f.  Requires a value greater than zero.\nVery small values will return INF.\n\n\nEXP ( f -- f )\n\n  Returns the value of e raised to the power of the passed float.\n\n\nLOG10 ( f -- f )\n\n  Returns the log base 10 of float f.  Requires a value greater than zero.\nVery small values will return INF.\n\n\nPOW ( f1 f2 -- f )\n^ ( f1 f2 -- f )\n\n  Returns f1 to the power of f2.  If f1 is zero, f2 must be greater than\nzero.  If f1 is less than zero, f2 must be an integer value.\n\n\nDIFF3 ( fx1 fy1 fz1 fx2 fy2 fz2 -- fx' fy' fz' )\n\n  Returns three floats, being the differences of fx1 - fx2, fy1 - fy2, and\nfz1 - fz2, respectively.\n\n\nDIST3D ( fx fy fz -- f )\n\n  Returns the distance of the XYZ coordinate (fx,fy,fz) from the origin.\nTo do a 2D distance calculation, simply use a Z value (fz) of 0.\n\n\nXYZ_TO_POLAR ( fx fy fz -- fr ft fp )\n\n  Converts the XYZ coordinate (fx, fy, fz) to the spherical polar coordinate\n(fr, ft, fp).  fr is the radius, ft is theta (the plane angle), and fp is phi\n(the elevation angle)  To do 2D X-Y to radius and angle conversion, simply use\na Z coordinate (fz) of 0, and discard phi (fp).\n\n\nPOLAR_TO_XYZ ( fr ft fp -- fx fy fz )\n\n  Converts the spherical polar coordinate (fr, ft, fp) to the XYZ coordinate\n(fx, fy, fz).  fr is the radius, ft is theta (the plane angle), and fp is phi\n(the elevation angle)  To do 2D radius and angle to X-Y conversion, simply use\na phi angle (fp) of 0, and discard Z (fz).\n\n\nFRAND ( -- f )\n\n  Returns a random floating point number between 0 and 1.\n\n\nGAUSSIAN ( fs fm -- f )\n\n  Given the standard deviation, and the mean, return a floating point random\nnumber with the given normalization.  Note that this may be any value between\n-INF and INF.\n\n\nCLEAR ( -- )\n\n  Clears all error flags for floating point math operations.\n\n\nCLEAR_ERROR ( s|i -- i )\n\n  Clears a specific error flag for floating point math operations.\n\n\nERROR? ( -- i )\n\n  Returns true if any of the floating point error flags have been set.  In\nmost cases, an error condition in a math operation will return a zero value\n(except in the case of integer math, which will wrap around on an overflow\nor underflow condition).  It is possible to poll for error conditions after\nevery math operation, or when a '0' result is found.\nThe following is a list of the current Error Flags:\n    DIV_ZERO  - (0) Division by zero attempted.\n    NAN       - (1) Result was not a number.\n    IMAGINARY - (2) Result would be imaginary. \n    FBOUNDS   - (3) Floating-point inputs were out of range.\n    IBOUNDS   - (4) Calculation resulted in an integer overflow or underflow.\n\n\nERROR_BIT ( s -- i )\n\n  Returns the bit identifier for a given floating point error flag string name.\n\n\nERROR_NAME ( i -- s )\n\n  Returns the string name for the error flag, given a floating point error\nidentifier.\n\n\nERROR_NUM ( -- i )\n\n  Returns the total number of floating point error flag types.\n\n\nERROR_STR ( s|i -- s )\n\n  Returns a user-readable error string, given a floating point error identifier.\n\n\nIS_SET? ( s|i - i )\n\n  Checks if a specific floating point error flag is set.\n\n\nSET_ERROR ( s|i -- i )\n\n  Sets the specified error flag for floating point operations.\n\n\n\n\n\n----------------------------------------------------------------------------\n                       String Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nATOI ( s -- i )\n\n  Turns string s into integer i.  If s is not a string, then 0 is pushed\nonto the stack.\n\n\nCTOI ( s -- i )\n\n  Converts the first character in s into its ASCII equivilent.\n\n\nSTRLEN ( s -- i )\n\n  Returns the length of string s.\n\n\nSTRCAT ( s1 s2 -- s )\n\n  Concatenates two strings s1 and s2 and pushes the result s = s1s2\nonto the stack.\n\n\nSTRCMP ( s1 s2 -- i )\n\n  Compares strings s1 and s2. Returns i as 0 if they are equal,\notherwise returns i as the difference between the first non-matching\ncharacter in the strings.  For example, \"z\" \"a\" strcmp returns 25.\nThe reason it returns a 0 for a match, and the difference on a non-match,\nis to allow for nice things like string sorting functions.\nThis primitive is case sensitive, unlike stringcmp.\n\n\nSTRNCMP ( s1 s2 i -- i' )\n\n  Compares the first i characters in strings s1 and s2.\nReturn value is like strcmp.\n\n\nSTRINGCMP ( s1 s2 -- i )\n\n  Compares strings s1 and s2. Returns i as 0 if they are equal,\notherwise returns i as the difference between the first non-matching\ncharacter in the strings.  For example, \"z\" \"a\" stringcmp returns 25.\nThis function is not case sensitive, unlike strcmp.\n\n\nSTRINGPFX (s s2 -- i)\n\n  Returns 1 if string s2 is a prefix of string s.  If s2 is NOT a prefix\nof s, then it returns 0.  Case insensitive.\n\n\nINSTR ( s s1 -- i )\n\n  Returns the first occurrence of string s1 in string s, or 0 if s1 is\nnot found.\n\n\nRINSTR ( s s1 -- i )\n\n  Returns the last occurrence of string s1 in string s, or 0 if s1 is\nnot found.  '\"abcbcba\" \"bc\" rinstr' returns 4.\n\n\nSTRCUT ( s i -- s1 s2 )\n\n  Cuts string s after its i'th character.  For example,\n  \"Foobar\" 3 strcut\nreturns\n  \"Foo\" \"bar\"\n  If i is zero or greater than the length of s, returns a null string in\nthe first or second position, respectively.\n\n\nMIDSTR ( s i1 i2 -- s )\n\n  Returns the substring of i2 characters, starting with character i1.\ni1 and i2 must both be positive.  The first character of the string\nis considered position 1.  ie:\n    \"testing\" 2 3 midstr\nwill return the value \"est\".\n\n\nSPLIT ( s1 s2 -- s1' s2' )\n\n  Splits string s1 at the first found instance of s2.  If there are no\nmatches of s2 in s1, will return s1 and a null string.\n\n\nRSPLIT ( s1 s2 -- s1' s2' )\n\n  Splits a string, as SPLIT, but splits on the last occurence of s2.\n\n\nEXPLODE ( s1 s2 -- ... i )\n\n  s2 is the delimiter string, and s1 is the target string, which will be\nfragmented, with i pushed on top of the stack as the number of strings\ns1 was broken into.  For instance:\n    \"Hello world\" \" \" explode\nwill result in\n    \"world\" \"Hello\" 2\non the stack.  (Note that if you read these items off in order, they\nwill come out \"Hello\" first, then \"world\".)  For TinyMUCK 2.2, s2 may\nbe any length.  But \"\" (null string) is not an acceptable string for\nparameter s2.\n\n\nEXPLODE_ARRAY ( s1 s2 -- a )\n\n  s2 is the delimiter string, and s1 is the target string.  s1 will be split\nup at each place where s2 is found in s1, and all the parts will be returned\nin a list array.  For instance:\n    \"alpha, beta, gamma\"  \", \"  explode_array\nwill result in a list array that is identical to:\n    { \"alpha\" \"beta\" \"gamma\" }list\ns2 cannot be a null string, but it can be of any non-zero length.  When s2\nis more than one character long, the delimiter is considered to be the\nentire s2 string.  The delimiters are removed from the results.\n\n\nSUBST ( s1 s2 s3 -- s )\n\n  s1 is the string to operate on, s2 is the string to change all occurrences\nof s3 into, and s is resultant string.  For example:\n    \"HEY_YOU_THIS_IS\" \" \" \"_\" subst\nresults in\n    \"HEY YOU THIS IS\"\ns2 and s3 may be of any length.\n\n\nFMTSTRING ( ?n..?1 s -- s )\n\n  Allows for string formatting with format substitutions, as per C's printf.\nFMTSTRING can be used to format complicated and long strings, as well as\nmulti-lined (with embedded new-lines) strings.  These strings can consist\nentirely of user-specified text, formatted variable entries (as values taken\nfrom the stack) or a combination of both.\n\n  The first format substitution in the format string will use the topmost\nstack value.  The next format substitution will use the next item down\nthe stack, and so on.\n\n  The start of a format substitution in the string is noted by a '%'.  If a\nliteral '%' is needed in the string, a '%%' may be used.  The format of a\nsubstitution is as follows: '%[-,|][+, ][0][number][.number]type'\nWhere 'number' is an integer value, and 'type' is one of the following\nidentifiers:\n    i - integer argument\n    s - string argument\n    d - dbref number, in the form of #123\n    D - dbref name reference; given a dbref, will print the associated\n        name for that object - terminates on bad reference\n    l - pretty-lock, given a lock, will print the description\n    f - float in xxx.yyy form\n    e - float in x.yyEzz form\n    g - shorter of forms e or f\n    ~ - default representation of any stack type\n    ? - unknown type argument, will print a string stating what the\n        variable type is\n\n  A '-' at the start of a format substitution indicates the field will be left\njustified.  A '|' at the start indicated the field will be centered.  A '+'\nforces the + sign to appear for positive numbers.  A space forces a blank\nin front of positive numbers.  (This is the default.)  A leading 0 will\nforce the field to be padded on the left with 0's instead of spaces.  If you\nuse a '*' in place of either the width or precision format fields, then\nthat integer number will be obtained from the stack.  You may specify a\nnegative fieldwidth to obtain left justification of that field.  You may\nnot specify a negative precision.\n\n\nARRAY_FMTSTRINGS ( list:dicts str:format -- list:results )\n\n  Lets you apply a format string, a la FMTSTRING, to each of a list of\ndictionaries of input data, returning a list of strings, one for each\ninput dictionary.\n\n  Unlike FMTSTRING, the format string needs to have key markers to\nspecify which key of each input dictionary to use to get the data for\neach format field.  You specify the key markers in each format\nsubsititution by adding a '[KEY]' before the substitution type letter.\nFor example, the code:\n\n    {\n        {\n            \"username\" \"Johnny\"\n            \"count\" 4\n            \"object\" #18\n            4  pi\n        }dict\n        {\n            \"username\" \"Ghaladahsk_Fadja\"\n            \"count\" 123\n            \"object\" #97\n        }dict\n    }list\n    \"%-16.15[username]s %3[count]i %5[object]d %4.2[4]g\"\n    array_fmtstrings\n    { me @ }list array_notify\n\n... would show the following output to the user:\n\n    Johnny             4   #18 3.14\n    Ghaladahsk_Fadj  123   #97 0.00\n\n  Note that if a key does not exist in an input dictionary, then that\nformat field will be assumed to either be the appropriate false value for\nfor the format type.\n\n  Numeric keys can be referred to as well as string keys.  This also\nmeans that you may use a list of list arrays as input, instead of a\nlist of dictionaries.\n\n  See FMTSTRING for a full description of normal substitution format codes.\nNote that unlike FMTSTRING, the format strings cannot use calculated\nfield widths or precisions via '*'.\n\n  Hint: If you want to use this format method on a single dictionary, you\ncan do something like:\n\n    pid getpidinfo   (to give us a dictionary of data.)\n    1 array_make     (to make a list with that as its single entry)\n    \"%-40[player]D %6[pid]i %[called_prog]D\" \n    array_fmtstrings\n    0 []             (to get the formatted result string.)\n\n\nPRONOUN_SUB ( d s -- s' )\n\n  Takes database object d and substitutes string s according to o-message\nrules.  For example:\n  me @ \"%N has lost %p marbles.\" pronoun_sub\nwould return:\n  \"Igor has lost his marbles.\"\nif the player's name was Igor and his sex were male.\nd does not have to be a player for the substitutions to work.\n  \nThe substitutions are:\n    %a/%A for absolute possessive (his/hers/its, His/Hers/Its)\n    %s/%S for subjective pronouns (he/she/it, He/She/It)\n    %o/%O for objective pronouns (him/her/it, Him/Her/It)\n    %p/%P for possessive pronouns (his/her/its, His/Her/Its)\n    %r/%R for reflexive pronouns (himself/herself/itself,\n                                  Himself/Herself/Itself)\n    %n/%N for the player's name.\n  \n  if it comes across a %X substitution, where X is any character not listed\nin the above substitutions table, it will search down the environment tree\nfrom d to try to find the appropriate %X property for use in substitution.\n\n\nTEXTATTR ( s1 s2 -- s )\n\n  Takes a plain text string s1 and adds the neccesary codes to make the\noutput s display with the given attributes s2, when shown with an\nappropriate client.  The attributes are passed to TEXTATTR in s2 as a\nseries of comma separated attribute names.\n\nThese are the attributes currently recognized:\n    reset bold dim italic uline flash reverse overstrike\n    black red green yellow blue magenta cyan white\n    bg_black bg_red bg_green bg_yellow bg_blue bg_magenta bg_cyan bg_white\n\n\nSTOD ( s -- d )\n\n  Attempts to extract a dbref from s, recognizing both plain numerical\nstrings, and those prepended with a '#' sign.\n\n\nANSI_STRIP ( s -- s' )\n\n  Takes a string and removes ansi escapes from with in the string, returning\nthe de-ansified string.\n\n\nANSI_STRLEN ( s -- i )\n\n  Returns the length of string s ignoring ansi escape within the string.\n\n\nANSI_STRCUT ( s i -- s1 s2 )\n\n  Like STRCUT, but ignores ansi escapes when finding the location to divide\nthe string at.\n\n\nANSI_MIDSTR ( s i i -- s' )\n\n  Does exactly what MIDSTR does, except it ignores ansi escapes when\ndetermining what section of the string to extract.\n\n\nNUMBER? ( s -- i )\n\n  Returns 1 if string on top of the stack contains a number. Otherwise\nreturns 0.\n\n\nPOSE-SEPARATOR? ( s -- i )\n\n  Returns 1 if the argument could be used as a pose without requiring a space.\nOtherwise returns 0.\n\n\nINTOSTR ( x -- s )\n\n  x must be an integer or a dbref. Converts x into string s.\n\n\nITOC ( i -- s )\n\n  Converts an integer i to its ASCII equivilent character, or a null\nif i is not a valid display character.\n\n\nSTRENCRYPT ( s1 s2 -- s3 )\n\n  Takes the plaintext string s1, and encrypts it, using the key s2,\nreturning the encrypted string s3.  Note: s3 will be 2 characters longer\nthan s1.  Also Note: The longer your key string is, the more secure\nthe data will be, up to the length of the data itself.  The encryption\ntechnique used here is pretty simple, so I highly doubt it breaks\nany laws to take it outside the USA.  By the same token, it probably\nshouldn't be trusted with any really important data.  I'm not an expert\nat cryptography, so this ain't DES.\n\n\nSTRDECRYPT ( s1 s2 -- s3 )\n\n  Takes the encrypted string s1, and decrypts it, using the key s2, returning\nthe plaintext string s3.\n\n\nMD5HASH ( s -- s' )\n\n  Calculates the MD5 hash of the given string.\n\n\nTOUPPER (s -- s)\n\n  Takes a string and returns it with all the letters in uppercase.\n\n\nTOLOWER (s -- s)\n\n  Takes a string and returns it with all the letters in lowercase.\n\n\nSTRIPLEAD (s -- s)\n\n  Strips leading spaces from the given string.\n\n\nSTRIPTAIL (s -- s)\n\n  Strips trailing spaces from the given string.\n\n\nSTRIP (s -- s)\n\n  This is a built in $define.  It is interpreted as \"striplead striptail\"\nIt strips the spaces from both ends of a string.\n\n\nSMATCH ( s s2 -- i )\n\n  Takes a string s, and a string pattern, s2, to check against.  Returns true\nif the string fits the pattern.  This is case insensitive.  In the pattern\nstring, the following special characters will do as follows:\n\n  *  A '?' matches any single character.\n  \n  *  A '*' matches any number of any characters.\n  \n  *  '{word1|word2|etc}' will match a single word, if it is one of those\n        given, separated by | characters, between the {}s.  A word ends with\n        a space or at the end of the string.  The given example would match\n        either the words \"word1\", \"word2\", or \"etc\".\n        {} word patterns will only match complete words: \"{foo}*\" and \"{foo}p\"\n        do not match \"foop\" and \"*{foo}\" and \"p{foo}\" do not match \"pfoo\".\n        {} word patterns can be easily meaningless; they will match nothing\n        if they:\n          (a) contains spaces,\n          (b) do not follow a wildcard, space or beginning of string,\n          (c) are not followed by a wildcard, space or end of string.\n  \n  *  If the first char of a {} word set is a '^', then it will match a single\n        word if it is NOT one of those contained within the {}s.  Example:\n        '{^Foxen|Fiera}' will match any single word EXCEPT for Foxen or Fiera.\n  \n  *  '[aeiou]' will match a single character as long as it is one of those\n        contained between the []s.  In this case, it matches any vowel.\n  \n  *  If the first char of a [] char set is a '^', then it will match a single\n        character if it is NOT one of those contained within the []s.  Example:\n        '[^aeiou]' will match any single character EXCEPT for a vowel.\n  \n  *  If a [] char set contains two characters separated by a '-', then it will\n        match any single character that is between those two given characters.\n        Example:  '[a-z0-9_]' would match any single character between 'a' and\n        'z', inclusive, any character between '0' and '9', inclusive, or a '_'.\n  \n  *  The '\\' character will disable the special meaning of the character that\n        follows it, matching it literally.\n  \nExample patterns:\n    \"d*g\" matches \"dg\", \"dog\", \"doog\", \"dorfg\", etc.\n    \"d?g\" matches \"dog\", \"dig\" and \"dug\" but not \"dg\" or \"drug\".\n    \"M[rs].\" matches \"Mr.\" and \"Ms.\"\n    \"M[a-z]\" matches \"Ma\", \"Mb\", etc.\n    \"[^a-z]\" matches anything but an alphabetical character.\n    \"{Moira|Chupchup}*\" matches \"Moira snores\" and \"Chupchup arghs.\"\n    \"{Moira|Chupchup}*\" does NOT match \"Moira' snores\".\n    \"{Foxen|Lynx|Fier[ao]} *t[iy]ckle*\\?\"  Will match any string starting\n      with 'Foxen', 'Lynx', 'Fiera', or 'Fiero', that contains either 'tickle'\n      or 'tyckle' and ends with a '?'.\n\n\nINSTRING ( s s1 -- i )\n\n  Returns the first occurrence of string s1 in string s, or 0 if s1 is\nnot found. Non-case sensitive.\n\n\nRINSTRING ( s s1 -- i )\n\n  Returns the last occurrence of string s1 in string s, or 0 if s1 is\nnot found. Non-case sensitive.\n\n\nNAME-OK? (s -- i)\n\n  Returns true if the given string would be okay as a general object name.\n\n  This is deprecated, and internally defined as: \"exit\" ext-name-ok?\n\n\nPNAME-OK? (s -- i)\n\n  Returns true if the given string would be okay as a player name.\n\n  This is deprecated, and internally defined as: \"player\" ext-name-ok?\n\n\nEXT-NAME-OK? ( str:Name ref:Obj -- int:Ok? )\nEXT-NAME-OK? ( str:Name str:Type -- int:Ok? )\n\n  Returns true if Name would be a legal name for an object depending on\nthe object type. If Obj is the object you are going to SETNAME, then\nEXT-NAME-OK? will use the naming rules for that type of object.\nIf the object does not exist yet, you may specify a string Type:\n        \"exit\" or \"e\"              \"muf\" or \"program\" or \"f\"\n        \"player\" or \"p\"            \"thing\" or \"t\"\n        \"room\" or \"r\"\nType's case is ignored.\n\n\nREGEXP ( str:text str:pattern int:flags -- list:SubMatchVals list:SubMatchIdx )\n\n  Tests text to see if it matches the given PCRE style regular expression\npattern.  If the test fails, two empty lists are returned.  If the test\nsucceeded, the first list returned contains, as element 0, the substring\nthat matched the entire pattern, followed by the captured substrings that\nmatched the various parenthesized subexpressions of the pattern.  The second\ncontains, as element 0, a sublist containing the starting position and length\nof the substring that matched the entire pattern, followed by similar sublists\nfor each captured parenthesized subexpression.  These indices are appropriate\nfor use with the MIDSTR primitive, and consider the first character of the\nstring to be position 1.\n\nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n\nREGSUB ( str:text str:pattern str:substr int:flags -- str:result )\n\n  Performs a regular expression substitution using pattern against text,\nreplacing the match with substr.  substr may contain \\digit to specify\na submatch.  Uses PCRE style regular expression syntax.\n\nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_ALL      2   (Substitute all matches, rather than just the first)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n  Ie: to replace all words in a string with 'yadda', ignoring case, you would\nuse the following code:\n\n    \"[a-z]+\" \"yadda\" REG_ICASE REG_ALL + REGSUB\n\n\nREGSPLIT ( str:text str:pattern int:flags -- list:result )\n\n  Splits the text by the given regular expression pattern. Empty pieces will\nbe returned for consecutive matches.\n \nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n\n\nREGSPLIT_NOEMPTY ( str:text str:pattern int:flags -- list:result )\n\n  Splits the text by the given regular expression pattern, into non-empty\npieces.\n \nThe \"flags\" argument may be 0, or a combination of the following:\n\n    $def REG_ICASE    1   (Case insensitive match)\n    $def REG_EXTENDED 4   (Allows PCRE comments, etc.  See PCRE docs.)\n\n\n\nTOKENSPLIT (strString strDelim strEscape -- strPre strPost strChar)\n\n  Searches strString for the first character that matches any character in\nstrDelim, so long as it is not escaped by the character given in strEscape.  \nReturns the unescaped string before the found character, the raw string after\nthat character, and the character that was found.  For example:\n    \"ab//cd/'efg'hi//jk'lm\"   \"'\"   \"/\"   TOKENSPLIT\nreturns the values:\n    \"ab/cd'efg\"   \"hi//jk'lm\"   \"'\"\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Lock Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nLOCKED? (d d -- i)\n\n  Takes, in order, the dbref of the player to test the lock against, and\nthe dbref of object the lock is on.  It tests the lock, running programs\nas necessary, and returns a integer of 0 if it is not locked against\nthem, or 1 if it is.\n\n\nPARSELOCK (s -- l)\n\n  Parses a lock string into a lock.  If the parsing failed, then the lock\nreturned will be a TRUE_BOOLEXP, which is logically false to an 'if' test.\n\n\nUNPARSELOCK (l -- s)\n\n  Unparses a lock into a string fit for program editing.\n\n\nPRETTYLOCK (l -- s)\n\n  Unparses a lock into a string fit for players to see.\n\n\nTESTLOCK (d l -- i)\n\n  Tests the player dbref against the given lock.  If the test was successful,\nthen this returns a 1.  If the test failed, then this returns a 0.\n\n\nSETLOCKSTR (d s -- i)\n\n  Tries to set the lock on the given object to the lock expression given in\nthe string.  If it was a success, then it will return a 1, otherwise, if\nthe lock expression was bad, it returns a 0.  To unlock an object, set its\nlock to a null string.\n\n\nGETLOCKSTR ( d -- s )\n\n  Returns the lock expression for the given object in the form of a string.\nReturns \"*UNLOCKED*\" if the object doesn't have a lock set.\n\n\nSUPPLICANT ( -- d )\n  If the current program is being executed due to lock evaluation, returns\nthe object the lock is being tested against. Otherwise, returns #-1.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Array Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nARRAY_MAKE ( {?} -- a )\n\n  Creates a list type array from a stackrange.\n\n\n}LIST  ( marker ?n ... ?1 -- array )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and creates a list array from them.  This is actually an inserver\nmacro, defined to '} array_make'.\n\n\nARRAY_MAKE_DICT ( {@ ?} -- a )\n\n  Creates a dictionary type array from a stackrange of index/value\npairs.\n\n\n}DICT  ( marker @n ?n ... @1 ?1 -- dictionary )\n\n  Takes pairs of stack items from the top of the stack to the topmost stack\nmarker and creates a dictionary array from them.  Each @ item is used as an\nindex value for the corresponding ? value.  This is actually an inserver\nmacro, defined to '} 2 / array_make_dict'.  Be careful to make sure that\nthere are an even number of stack items between the { and the }dict.\n\n\nARRAY_NOTIFY ( a1 a2 -- )\n\n  Notifies all strings in array a1 to all dbrefs in array a2.  Arrays\nmust be homogenous of their respective types.\n\n\nARRAY_NOTIFY_SECURE ( a1 a2 a3 -- )\n  For every dbref in a3, notify a2 over their secure descriptors and a1 over\ntheir insecure descriptors. Triggers listener prop queues only with a1.\n\n\n}TELL  ( marker strn ... str1 -- )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and notifies them to the 'me @' user.  This will throw an error\nif you try to send a non-string.  Each separate string will be send as a\nseparate line to the user.  This is actually an inserver macro, defined to\n'} array_make me @ 1 array_make array_notify'.\n\n\nARRAY_JOIN ([s] s -- s)\n\n  Takes a list array and a delimiter string, and returns a single string\nthat is the concatenation of all the items in the list array, with the\ndelimiter string in between.  For example:\n    { \"one\" 2 \"three\" 3.14159 }list \"... \" array_join\nwill result in a single string: \"one... 2... three... 3.14159\"\n\n\nARRAY_INTERPRET ([s] -- s)\n\n  Takes a list array and and returns a single string that is the concatenation\nof all the items in the list array, with dbrefs translated to the name of\ntheir respective objects.  For example:\n    { #1 \" \" 2 \" three \" 3.14159 }list array_join\nwill result in a single string like: \"Wizard 2 three 3.14159\"\n\n\n}JOIN  ( marker ?n ... ?1 -- string )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and concatenates them into a string based on the default reresentat-\nion of each stack item type.  Dbrefs will be shown as #REF numbers.  This\nactually is an inserver macro, defined to '} array_make \"\" array_join'.\n\n\n}CAT  ( marker ?n ... ?1 -- string )\n\n  Takes all stack items from the top of the stack to the topmost stack\nmarker and concatenates them into a string based on the default reresentat-\nion of each stack item type.  Dbrefs will be translated to the name of the\nobject that they reference.  This primitive is actually an inserver macro,\ndefined to '} array_make array_interpret'.\n\n\nARRAY_COUNT ( a -- i )\n\n  Returns the count of number of items in the array.\n\n\nARRAY_GETITEM ( a @ -- ? )\n\n  Returns item with index @ from an array.\n\n\nARRAY_SETITEM ( ? a @ -- a')\n\n  Overwrites a given array item at index @ with new value ?.\n\n\nARRAY_INSERTITEM ( ? a @ -- a' )\n\n  Inserts a given value into an array.\n\n\nARRAY_APPENDITEM ( ? a -- a')\n\n  Appends the given item to the given list array.\n\n\nARRAY_DELITEM ( a @ -- a' )\n\n  Removes an item with index @ from an array.\n\n\nARRAY_GETRANGE ( a @ @ -- a' )\n\n  Returns as an array the range between two indexes (inclusive)\nfrom an array.\n\n\nARRAY_SETRANGE ( a1 @ a2 -- a' )\n\n  Sets items in list a1 to vals from list a2, starting at the given\nindex.  Returns the resulting array.\n\n\nARRAY_INSERTRANGE ( a1 @ a2 -- a' )\n\n  Inserts items from array a2 into a1, starting at the given index.\nReturns the resulting array.\n\n\nARRAY_DELRANGE ( a @ @ -- a' )\n\n  Deletes a range of items between two indexes (inclusive) from\nan array.\n\n\nARRAY_NESTED_GET ( a1 a2 -- ? )\n\n  Takes a nested array a1, and a list of array indexes a2, and recursively\nfetches nested sub-array values.  Returns 0 if the item doesn't exist.\nExample:\n    arr1 @ { \"foo\" 2 \"bar\" }list array_nested_get\nis roughly equivalent to\n    arr1 @ \"foo\" [] dup if\n        2 [] dup if\n            \"bar\" []\n        then\n    then\n\n\nARRAY_NESTED_SET ( ? a a2 -- a' )\n\n  Sets the nested array entry in a, specified by the list of array indexes\nin a2, to the given value, creating new sub-arrays if needed.\nExample:\n    { }dict\n    \"qux\" swap { \"foo\" \"bar\" \"baz\" }list array_nested_set\n    4 swap { \"foo\" 2 \"clam\" }list array_nested_set\nwould return the same array as\n    {\n        \"foo\" {\n            \"bar\" {\n                \"baz\" \"qux\"\n            }dict\n            2 {\n                \"clam\" 4\n            }dict\n        }dict\n    }dict\n\n\nARRAY_NESTED_DEL ( a a2 -- a' )\n\n  Deletes the nested array entry in a, specified by the list of array\nindexes in a2.  Example:\n    {\n        \"foo\" {\n            \"bar\" {\n                \"baz\" \"qux\"\n            }dict\n            2 {\n                \"clam\" 4\n            }dict\n        }dict\n    }dict\n    { \"foo\" 2 }list array_nested_del\nwould return the same array as\n    {\n        \"foo\" {\n            \"bar\" {\n                \"baz\" \"qux\"\n            }dict\n        }dict\n    }dict\n\n\nARRAY_EXTRACT (array arrIndexes -- array')\n\n  Takes an array, and returns a dictionary containing every element of the\noriginal array who's key was in the list indexes given.\n\n\nARRAY_REVERSE (a -- a')\n\n  Takes a list array and reverses the order of its elements.\n\n\nARRAY_COMPARE ( a1 a2 -- i )\n\n  Compares two arrays using the same ordering assumptions as ARRAY_SORT in\ncase sensitive ascending order mode.  If the two arrays are identical,\nthis returns 0.  If the first array is considered greater than the second,\nthis returns a positive value.  If the second array is considered greater,\nthis returns a negative value.  I'm not sure if the greater/lesser-than\ncomparison results are really useful, though.\n\n\nARRAY_EXPLODE ( a -- {@ ?} )\n\n  Explodes an array into a stackrange of its index/value pairs.  Example:\n    \"index0\" \"value0\" \"index1\" \"value1\" 2\n\n\nARRAY_KEYS ( a -- {@} )\n\n  Returns the keys of an array in a stackrange.  Example:\n    \"index0\" \"index1\" 2 \n\n\nARRAY_VALS ( a -- {?} )\n\n  Returns the values of an array in a stackrange.  Example:\n    \"value0\" \"value1\" 2\n\n\nARRAY_FIRST ( a -- @ i )\n\n  Returns the first index in array, and a boolean which is false\nif there are no items are in the array.\n\n\nARRAY_PREV ( a @ -- @ i )\n\n  Returns the previous index in the array, and a boolean which\nis false if there are no items left.\n\n\nARRAY_NEXT ( a @ -- @ i )\n\n  Returns the next index in the array, and a boolean which\nis false if there are no items left.\n\n\nARRAY_LAST ( a -- @ i )\n\n  Returns the last index in array, and a boolean which is false\nif there are no items are in the array.\n\n\nARRAY_CUT ( a1 @ -- a2 a3 )\n\n  Given an array, and an index into the array, cuts the array into two\narrays at that position.  The first array output will contain all array\nitems before the given index.  The second array will contain the given\nposition and all items after it.  When used on a list array, both output\narrays will be list arrays.  When used on dictionaries, both arrays will\nbe dictionaries.\n\n\nARRAY_PIN ( arr -- arr' )\n\n  Given an array or dictionary, pins it such that changes to any dup'ed\ncopy of that array on the stack will make changes to ALL copies.\n\n\nARRAY_UNPIN ( arr -- arr' )\n\n  Given an array or dictionary, unpins it such that changes to any dup'ed\ncopy of that array on the stack will NOT change any other copy of that array.\n\n\nARRAY_DEFAULT_PINNING ( int -- )\n\n  Sets whether future arrays/dictionaries created in this process will be\npinned by default.\n\n\nARRAY_SORT (arrData intSortType -- arrSorted)\n\n  This sorts all the items in the list array given, based on the given\nsort type.  This can sort strings, integers, floats, dbrefs, or mixes\nof types.  Integers are sorted in with floats, but strings sort after\nall numbers.  Dbrefs sort after the other number types, but before\nstring types.  Other stack item types will sort separately, but in\nan undefined consistent order.\n\n  The SortType argument is an integer, and its default value of 0 means\nthat the sorting should be case sensitive and in ascending order.  You\ncan change either of those by using one or more of the following inserver\n$defines BITORed or added together:\n  $def SORTTYPE_CASEINSENS 1   (Sort is to be case insensitive.)\n  $def SORTTYPE_DESCENDING 2   (Sort is to be in reversed order.)\n  $def SORTTYPE_SHUFFLE    4   (Randomize list completely.)\n\n  The above sort types can be added or bitor'ed together to get the\nfollowing inserver $defines as listed below.\n  $def SORTTYPE_CASE_ASCEND    0 (Case sensitive and ascending order.)\n  $def SORTTYPE_NOCASE_ASCEND  SORTTYPE_CASEINSENS\n  $def SORTTYPE_CASE_DESCEND   SORTTYPE_DESCENDING\n  $def SORTTYPE_NOCASE_DESCEND SORTTYPE_CASEINSENS SORTTYPE_DESCENDING +\n\n\nARRAY_SORT_INDEXED (arrData intSortType idxIndex -- arrSorted)\n\n  This takes a list array of arrays, and will sort them, based on the\nvalue of an indexed value in each subarray, based on the given sort\ntype.  For example:\n    {\n        { \"name\" \"One\"     \"num\" 1 }dict\n        { \"name\" \"Two\"     \"num\" 2 }dict\n        { \"name\" \"Three\"   \"num\" 3 }dict\n    }list\n    SORTTYPE_DESCENDING \"num\" ARRAY_SORT_INDEXED\n...would return an array of dictionaries, sorted in descending order by the\nvalue of their \"num\" entries.  ie, the same as:\n    {\n        { \"name\" \"Three\"   \"num\" 3 }dict\n        { \"name\" \"Two\"     \"num\" 2 }dict\n        { \"name\" \"One\"     \"num\" 1 }dict\n    }list\n  This can be used with an array of list arrays, just like with an array of\ndictionaries.  For list arrays, you just use an integer for the index.\nNOTE: arrays that don't have an item matching the given index, will be\nsorted as lesser than arrays that do.\n\nSee ARRAY_SORT for more information on sort ordering.\n\n\nARRAY_UNION ( a1 a2 -- a )\n\n  Returns a list array containing the union of values of both the given\narrays.  ie: If a value is found in either of the given arrays, then it\nwill be returned in the result list.  Duplicate values will appear only\nonce in the returned list.  Keys are discarded.  Ordering is not preserved.\n\n\nARRAY_NUNION ( {a} -- a )\n\n  Returns a list array containing the union of values of all the given\narrays in the stackrange.  ie: if a value is found in any of the given\narrays, then it will be returned in the resultant list.  Duplicate values\nwill appear only once in the returned list.  Keys are discarded.  Ordering\nis not preserved.\n\n\nARRAY_DIFF ( a1 a2 -- a )\n\n  Return an array containing the difference of the two given arrays.\nie: This returns all values of a2 that weren't found in a1.  Duplicate\nvalues will appear only once in the returned list.  Keys will be discarded.\nOrdering is not preserved.\n\n\nARRAY_NDIFF ( {a} -- a )\n\n  Return an array containing the difference of all the given arrays\nin the stackrange.  ie: This returns all values from the topmost array\nthat weren't found in any of the remaining arrays.  Multiple arrays are\nconsecutively processed against the results of the previous difference,\nfrom the top of the stack down.  Duplicate values will appear only once\nin the returned list.  Keys will be discarded.  Ordering is not preserved.\n\n\narray_intersect ( a1 a2 -- a )\n\n  Returns an array containing the intersection of the two arrays.\nie: Only values contained in BOTH the given arrays will be returned.\nDuplicate values will appear only once in the returned list.  Keys will\nbe discarded.  Ordering is not preserved.  This is actually an inserver\nmacro to '2 array_nintersect'\n\n\narray_nintersect ( {a} -- a )\n\n  Returns an array containing the intersection of all the given arrays\nin the stackrange.  ie: Only values contained in ALL the given arrays\nwill be returned.  Multiple arrays are consecutively processed against\nthe results of the previous intersection, from the top of the stack down.\nDuplicate values will appear only once in the returned list.  Keys will\nbe discarded.  Ordering is not preserved.\n\n\nARRAY_FINDVAL (a1 ? -- a2)\n\n  Returns a list array containing the keys of every element in the array\na1 whose values match the given value.  For example:\n\n    { #5 #10 #15 #10 #20 }list #10 array_findval\n\nwill return a list containing 1 and 3, being the keys (indexes) of the\nmatching items.\n\n\nARRAY_EXCLUDEVAL (a1 ? -- a2)\n\n  Returns a list array containing the keys of every element in the array\na1 whose values did NOT match the given value.  For example:\n    { #5 #10 #15 #10 #20 }list #10 array_excludeval\nwill return a list containing 0, 2 and 4, being the keys (indexes) of the\nitems that didn't match.  If you want the values, use ARRAY_DIFF or\nARRAY_EXTRACT.  Ie:\n    { #10 }list { #5 #10 #15 #10 #20 }list array_diff\nor\n    { #5 #10 #15 #10 #20 }list dup #10 array_excludeval array_extract\nwhich will both return a list containing #5, #15, and #20.  The main\ndifference between these two methods is that ARRAY_DIFF will remove any\nduplicate values in the remaining items, and the ordering of the resulting\nitems will have been sorted.  Using ARRAY_EXTRACT, ordering and duplicate\nvalues are preserved.\n\n\nARRAY_MATCHKEY (arrStrings strPattern - arrStrings)\n\n  Given an array and an smatch wildcard pattern string, returns a dictionary\ncontaining all the key-value pairs where the key was a string that matched\nthe given smatch pattern.\n\n\nARRAY_MATCHVAL (arrStrings strPattern - arrStrings)\n\n  Given an array and an smatch pattern string, returns a dictionary containing\nall the key-value pairs where the value was a string that matched the given\nsmatch wildcard pattern.\n\n\n\n\n\n----------------------------------------------------------------------------\n                      Property Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nGETPROP (d s -- ?)\n\n  Gets the value of a given property, and puts it on the stack.\nThis can return a lock, a string, a dbref, or an integer, depending\non the type of the property.  Permissions are the same as those for\nGETPROPSTR.  This primitive returns 0 if no such property exists, or\nif it is a valueless propdir.\n\n\nGETPROPSTR ( d s -- s )\n\n  s must be a string. Retrieves string associated with property s in\nobject d.  If the property is cleared, \"\" (null string) is returned.\n\n\nGETPROPVAL ( d s -- i )\n\n  s must be a string. Retrieves the integer value i associated with\nproperty s in object d. If the property is cleared, 0 is returned.\n\n\nGETPROPFVAL ( d s -- f )\n\n  Returns the float value stored in the property\n\n\nENVPROP ( d s -- d ? )\n\n  Takes a starting object dbref and a property name and searches down the\nenvironment tree from that object for a property with the given name.  If\nthe property isn't found, it returns #-1 and 0.  If the property is found,\nit will return the dbref of the object it was found on, and the value it\ncontained.\n\n\nENVPROPSTR (d s -- d s )\n\n  Takes a starting object dbref and a property name and searches down the\nenvironment tree from that object for a property with the given name.  If\nthe property isn't found, it returns #-1 and a null string.  If the\nproperty is found, it will return the dbref of the object it was found on,\nand the string value it contained.\n\n\nADDPROP ( d s1 s2 i -- )\n\n  Sets property associated with s1 in object d.  Note that if s2 is\nnull \"\", then i will be used.  Otherwise, s2 is always used.  All four\nparameters must be on the stack; none may be omitted.  If the effective\nuser of the program does not control the object in question and the\nproperty begins with an underscore `_', the property cannot be changed.\nThe same goes for properties beginning with a dot `.' which cannot be\nread without permission. \n\n\nSETPROP (d s ? -- )\n\n  Stores a lock, dbref, integer, or string into the named property on the\ngiven object.  Permissions are the same as for ADDPROP.\n\n\nREMOVE_PROP ( d s -- )\n\n  Removes property s from object d.  If the property begins with an\nunderscore, `_' or a dot `.', and the effective user does not have\npermission on that object, the call fails.\n\n\nPROPDIR? (d s -- i)\n\n  Takes a dbref and a property name, and returns a boolean integer that\ntells if that property is a propdir that contains other props.\n(Requires Mucker Level 2)\n\n\nNEXTPROP (d s -- s)\n\n  This takes a dbref and a string that is the full propdir pathname of a\nproperty and returns the full pathname of the next property in the given\nobject's given propdir, or returns a null string if that was the last\nproperty in the propdir.  To *start* the search, give it a propdir name\nending in a '/', or a blank string.  For example, '#10 \"/\" NEXTPROP'\nreturns the name of the first property in the root propdir of object #10,\nand '#28 \"/letters/\" NEXTPROP' would return the name of the first\nproperty in the 'letters/' propdir on object #28.  A blank string is the\nsame as \"/\".  If you try to do a Nextprop on a non-existant property, you\nwill have a null string returned to you. Nextprop will skip properties if\nthey would not be readable by the program with the given permissions and\neffective user id. (Requires Mucker Level 3)\n\n\nARRAY_GET_REFLIST ( d s -- a )\n\n  Reads in list of space delimited dbrefs from a string property, and\nreturns them as a list array of dbrefs.  See ARRAY_PUT_REFLIST for\nproperty syntax.\n\n\nARRAY_PUT_REFLIST ( d s a -- )\n\n  Takes a list array of dbrefs, and stores them in a property as a space\ndelimited string of dbrefs.  ie:  \"#1234 #6646 #1026 #7104\"\n\n\nREFLIST_FIND ( d1 s1 d2 -- i )\n\n  Finds dbref d2 in the reflist in property s1 on object d1.  If d2 is\nnot in the list, then 0 is returned.  Otherwise the position of the\ndbref in the list is returned, with the first dbref being in position 1,\nthe second dbref in 2, etc.\n\n\nREFLIST_ADD ( d1 s1 d2 -- )\n\n  Adds dbref d2 to the reflist in property s1 on object d1.  If d2 is already\nin the list, it is moved to the end of the reflist.\n\n\nREFLIST_DEL ( d1 s1 d2 -- )\n\n  Removes dbref d2 from the reflist in property s1 on object d1.  If d2 is\nnot in the list, nothing happens.\n\n\nUNBLESSPROP (dbrefObject strPropname -- )\n\n  Unblesses the given property for MPI.  Requires Wizbit perms.\n\n\nBLESSPROP (dbrefObject strPropname -- )\n\n  Blesses the given property for MPI.  Requires Wizbit perms.\n\n\nBLESSED? (d s -- i)\n\n  Takes a dbref and a property name, and returns a boolean integer that\ntells if that property has been blessed.\n(Requires Mucker Level 2)\n\n\nARRAY_FILTER_PROP ([d] s1 s2 -- [d'])\n\n  Takes a homogenous list array of dbrefs, and returns a list array with only\nthose dbrefs who have a property specified by s1, set to a value that smatch\nmatches s2.\n\n\nARRAY_FILTER_LOCK ([d] l -- [d'])\n\n  Takes a homogenous list array of dbrefs, and returns a list array with only\nthose players and things who pass the given lock.\n\n\nARRAY_FILTER_FLAGS ( list:dbrefs str:flags -- list:matchingdbrefs )\n\n  Takes a homogenous list array of dbrefs and a flags test string, and\nreturns a list array with only those dbrefs whose flags matched the flag\ntest string.  A flags test string is a list of flag letters or object type\nletters to require, and a list of flags to specifically reject preceeded\nby exclamation marks (!).  ie: \"TD!C!V\" would match Things set Dark, which\ndid not have their Chown_ok or Vehicle flags set.  See 'help @find' for\nmore info on flag test strings.\n\n\nARRAY_GET_PROPDIRS( d s -- a )\n\n  Returns a list array containing the names of all the sub-propdirs\ncontained within the given propdir.  Any propdirs the program wouldn't\nbe able to read, are left out.  (ML3 required.)\n\n\nARRAY_GET_PROPVALS ( d s -- a )\n\n  Reads in properties from a propdir, and returns them in a dictionary,\nkeyed by propname.  Sub- propdirs in the given propdir that do not\nhave any value of their own, are left out of the returned dictionary.\nProperties that the program doesn't have perms to read are also\nleft out.  Reads up to max_propfetch props maximum. (ML3 required.)\n\n\nARRAY_PUT_PROPVALS ( d s a -- )\n\n  Takes the values in the given dictionary, and stores them in the given\npropdir on the given object.  Each dictionary entry will be saved into a\nproperty with the key as the name, and the value as the property value.\nBe aware that dictionary entries with keys starting with one of @ ~ _\nor . may require special permissions to save.\n\n\nARRAY_GET_PROPLIST ( d s -- a )\n\n  Reads in properties from a sequential proplist, and returns them in a list\narray.  Proplists can be in any of these proplist styles: \"propname#/1\",\n\"propname/1\", or \"propname1\".  If the program doesn't have permission to read\nthe list, it returns an empty array.  Reads up to max_propfetch props maximum.\n\n\nARRAY_PUT_PROPLIST ( d s a -- )\n\n  Takes the values in the given list array, and stores them in the given\npropdir on the given object as a sequential proplist.\n\n\nPARSEPROP (d s s i -- s)\n\n  Returns the string output of the MPI Parser, given an object, a\nproperty name to parse, an input string for the {&how} variable, and an\ninteger that should either be 1, for when you want {delay} messages to be\nsent to the player only, or 0, when you want the rest of the players in\nthe room to get the omessages. NOTE: for security reasons, you cannot use\nPARSEPROP with a mucker level of less than 3.\n\n\nPARSEMPI (d s s i -- s)\n\n  Returns the string output of the MPI Parser, given an object, an\nMPI string to parse, an input string for the {&how} variable, and an\ninteger that should either be 1, for when you want {delay} messages to be\nsent to the player only, or 0, when you want the rest of the players in\nthe room to get the omessages. NOTE: for security reasons, you cannot use\nPARSEMPI with a mucker level of less than 3.\n\n\nPARSEMPIBLESSED (d s s i -- s)\n\n  Returns the string output of blessed execution of the MPI Parser, given\nan object, an MPI string to parse, an input string for the {&how} variable,\nand an integer that should either be 1, for when you want {delay} messages\nto be sent to the player only, or 0, when you want the rest of the players\nin the room to get the omessages. Requires Wizard permissions.\n\n\nPARSEPROPEX ( ref:Obj str:Prop dict:Vars int:Private -- dict:Vars str:Result )\n\n  MPI parses \"Prop\" on \"Obj\".  The dictionary \"var\" will be used to setup mpi\nvariables, the key as the variable name, the value as the content of the\nvariable.  The content of the variables after the parse will be returned in\nthe resulting dictionary.  If \"Private\" is set to 1 the result of any {delay}\nwill be sent to the player only, otherwise if it is set to 0 the result will\nbe sent to the rest of the players in the room.  This prim is most useful for\npassing values between MPI and MUF, rather than having to resort to formatting\nthe data into the {&how} variable, or the return value.\nThis primitives requires at least mucker level 3.\n\n\nPROP-NAME-OK? (s -- i)\n  Returns true if the given string is an acceptable property name that will\nnot cause an error for SETPROP or any other property related primitive.\n\n\n\n\n\n----------------------------------------------------------------------------\n                         Database Related Operators\n----------------------------------------------------------------------------\n\n\n\n\nDBREF ( i -- d )\n\n  Converts integer i to object reference d.\n\n\nPROG ( -- d)\n\n  Returns the dbref of the currently running program.\n\n\nTRIG ( -- d)\n\n  Returns the dbref of the original trigger.\n\n\nCALLER ( -- d)\n\n  Returns the dbref of the program that called this one, or the dbref of the\ntrigger, if this wasn't called by a program.\n\n\nDBTOP ( -- d)\n\n  Returns the dbref of the first object beyond the top object of the database.\n'dbtop ok?' would return a false value.\n\n\nDBCMP ( d1 d2 -- i )\n\n  Performs comparison of database objects d1 and d2. If they are the\nsame object, then i is 1, otherwise i is 0.\n\n  This is deprecated, and internally defined as: =\n\n\nUNPARSEOBJ (d -- s)\n\n  Returns the name-and-flag string for an object.  It always has the dbref and\nflag string after the name, even if the player doesn't control the object.\nFor example: \"One(#1PW)\"\n\n\nOWNER ( d -- d' )\n\n  d is any database object. Returns d', the player object that owns d.\nIf d is a player, d' will be the same as d.\n\n\nSETOWN (d d -- )\n\n  Sets the ownership of the first object to the player given in the second\ndbref. (wizbit only)\n\n\nLOCATION ( d -- d' )\n\n  Returns location of object d as object d'.\n\n\nMOVETO ( d1 d2 -- )\n\n  Moves object d1 to object d2.\n  MOVETO is affected by the following rules:\n    a) If the object being moved is !JUMP_OK and is it being moved by someone\n      other than the object's owner, then the moveto fails.\n    b) If the object being moved is a person and either the source or\n      destination rooms (if not owned by the person being moved) are\n      !JUMP_OK, the moveto fails.\n    c) If the object being moved is not a player, is owned by the owner of\n      either the source or destination rooms, and either room where the\n      ownership matches is !JUMP_OK, the moveto fails.\n  The moveto succeeds under any other circumstances.  MOVETO rules follow the\npermissions of the current effective userid.  MOVETO will run programs in\nthe @desc and @succ/@fail of a room when moving a player.\n\n\nCONTENTS ( d -- d' )\n\n  Pushes the dbref of the first thing contained by d.  This dbref can\nthen be referenced by `next' to cycle through all of the contents of\nd.  d may be a room or a player.\n\n\nCONTENTS_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every object contained\nwithin the given object.  If a #-1 is returned as the last list item,\nthen there were too many objects to return all of them.\n\n\nEXITS ( d -- d' )\n\n  Returns the first exit in the linked exit list of room/player/object d.\nThis list can be transversed with `next'.\n\n\nEXITS_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every exit attached to the\ngiven object.  If a #-1 is returned as the last list item, then there were\ntoo many exits to return all of them.\n\n\nNEXT ( d -- d' )\n\n  Takes object d and returns the next thing in the linked contents/exits\nlist of d's location.\n\n\nNEXTOWNED ( d -- d' )\n\n  When called with a player dbref, returns the dbref of the first object they\nown.  Subsequent calls to those object dbrefs returns the next object owned\nby that same player.  When no more objects are left owned by that player,\n#-1 is returned.  The order of the objects is not guarenteed, but when used\ncorrectly, each object owned by that player will be returned exactly once.\nThe player object itself will NOT be returned.\n\n\nFINDNEXT ( d1 d2 s1 s2 -- d' )\n\n  Searches for the next object in the database _after_ d1 that is owned by\nd2, whose name matches the wildcard pattern s1, and whose flags match\nthose specified by s2.\n\n  You can start a search with d1 set to #-1.  If d2 is #-1 then ownership\nchecks will not be performed.  However, only programs with a mucker level\nof 3 or better will be allowed to perform non-owner-specific searches, or\nsearches with an owner different from the effective UID of the program.\nIf s1 is an empty string, name checks will not be performed.  If s2 is a\nnull string, then flags will not be checked.\n\n  The s1 name pattern differs from that used by @find, @owned, etc. in\nthat those commands implicitly treat any patterns as if it has a *\nbefore and after it.  This primitive does NOT.  So for this primitive,\n\"*.muf\" would match only objects whose name ends in \".muf\".\n\n  The s2 string is a flagslist that is in the same format as that used by\nthe @find, @owned, etc. commands.  ie:  \"F3!D\" will match all muf program\nobjects in the database that are mucker level 3, and not set debug.\n\n  If there are no more objects in the database that might match all the\nsearch criteria, then #-1 is returned.  Otherwise, the next matching\nobject is returned.\n\nThis primitive is used like this:\n    #-1 begin\n        me @ \"*.muf\" \"F\" FINDNEXT\n        dup while\n        dup unparseobj .tell\n    repeat\n\n\nNEXTENTRANCE ( d1 d2 -- d3 )\n\n  Searches the database for the next object after d2 that is linked to d1.\nYou can begin a search by passing #-1 as d2.  The search currently scans\nupwards through the database, but this ordering is not guaranteed.  If an\nobject is found that links to d1, then the dbref of that object is returned.\nIf no more such objects are found in the db, then #-1 is returned.\n\n\nCONTROLS ( d1 d2 -- i )\n\n  Takes a player dbref d1 and an object dbref d2, and returns true if the\nplayer has control over the given object.\n\n\nMATCH ( s -- d )\n\n  Takes string s, first checks all objects in the user's inventory, then\nchecks all objects in the current room, as well as all exits that the\nplayer may use, and returns object d which contains string s.  If\nnothing is found, d = #-1. If ambiguous, d = #-2. If HOME, d = #-3.\n\n\nRMATCH ( d s -- d' )\n\n  Takes string s, checks all objects and actions associated with object\nd, and returns object d' which matches that string.  For example,\nmatches actions and inventory objects for a player object, actions on\na thing object, etc.  If nothing is found, d' = #-1.  if ambiguous, d'\n= #-2. If HOME, d' = #-3.\n\n\nPMATCH (s -- d)\n\n  Takes a name and returns the dbref of the player.  If the name does not\nmatch that of a player, #-1 is returned.\n\n\nPART_PMATCH (s -- d)\n\n  Takes a player name, or the first part of the name, and matches it\nagainst the names of the players who are currently online.  If the\ngiven string is a prefix of the name of a player who is online, then\ntheir dbref is returned.  If two players could be matched by the\ngiven string, it returns a #-2.  If None of the players online match,\nthen it returns a #-1.\n\n\nPENNIES ( d -- i )\n\n  Gets the amount of pennies player object d has, or the penny value\nof thing d.\n\n\nADDPENNIES ( d i -- )\n\n  d must be a player or thing object.  Adds i pennies to object d.\nWithout Wizard permissions, addpennies may only give players pennies,\nlimited to between zero and MAX_PENNIES.\n\n\nMOVEPENNIES (d1 d2 i -- )\n\n  Moves i pennies from player/thing d1 to player/thing d2.  This is the\nfirst step towards making ADDPENNIES require at least ML3 (or wizbit),\nfor enabling economies.\n\n\nCHECKPASSWORD ( d s -- i )\n\n  Checks if password string s is valid for player dbref d.  returns 1 on\nsuccess, otherwise returns 0.\nWizbit only.\n\n\nNEWPASSWORD ( d s -- )\n\n  Changed the password of the given player d to s.\n\n\nSET ( d s -- )\n\n  Sets flag s to object d.  Recognizes negation (e.g. `!abode').\n\n\nFLAG? ( d s -- i )\n\n  Reads the flag of object d, specified by s, and returns its state: 1 =\non; 0 = off.  The ! token may be used before the name of a flag to negate\nthe check and check for the absence of the flag.  Different flags may be\nsupported in different installations.  flag? returns 0 for unsupported or\nunrecognized flags.\n  You can check the \"interactive\" flag to see if a player is currently in\na program's READ, or if they are in the MUF editor.\nThe \"Truewizard\" flag will check for a W flag with or without the QUELL set.\nThe \"Mucker\" flag returns the most significant bit of the mucker level and\nthe \"Nucker\" flag returns the least significant bit. (Use MLEVEL instead.)\n\n\nMLEVEL (d -- i)\n\n  returns the mucker (or priority) level of the given object. If #-1 is\npassed, this returns the effective mucker level of the current program.\n\n\nOK? ( x -- i )\n\n  Takes x and returns 1 if x is a type dbref, as well as 0 or above,\nbelow the top of the database, and is not an object of type garbage.\n\n\nPLAYER? ( d -- i )\n\n  Returns 1 if object d is a player object, otherwise returns 0.\nIf the dbref is that of an invalid object, it will return 0.\n\n\nROOM? ( d -- i )\n\n  Returns 1 if object d is a room, otherwise returns 0.  If the dbref is that\nof an invalid object, it will return 0.  A dbref of #-3 (HOME) returns 1.\n\n\nTHING? ( d -- i )\n\n  Returns i as 1 if object d is a thing, otherwise returns i as 0.\n\n\nEXIT? ( d -- i )\n\n  Returns 1 if object d is an exit object, 0 if otherwise.\n\n\nPROGRAM? ( d -- i )\n\n  Returns 1 if object d is a program, otherwise returns 0.\nIf the dbref is that of an invalid object, it will return 0.\n\n\nSYSPARM ( s -- s )\n\n  Takes a tuneable system parameter and returns its value as a string.  For\nan integer it returns it as a string, a time is returned as a string\ncontaining the number of seconds, a dbref is returned in standard dbref\nformat, and boolean is returned as 'yes' or 'no'\nChecking an invalid parameter or a parameter requiring higher permissions\nthan the program has will return an empty string.\n\nParameters available:\n (bool) 7bit_other_names          - Limit exit/room/muf names to 7-bit characters\n (bool) 7bit_thing_names          - Limit thing names to 7-bit characters\n (int)  addpennies_muf_mlev       - Mucker Level required to create/destroy pennies\n (time) aging_time                - When to considered an object old and unused\n (bool) allow_listeners           - Allow programs to listen to player output\n (bool) allow_listeners_env       - Allow listeners down environment\n (bool) allow_listeners_obj       - Allow objects to be listeners\n (bool) allow_zombies             - Enable Zombie things to relay what they hear\n (bool) autolink_actions          - Automatically link @actions to NIL\n (str)  autolook_cmd              - Room entry look command\n (time) clean_interval            - Interval between memory/object cleanups\n (int)  cmd_log_threshold_msec    - Log commands that take longer than X millisecs\n (bool) cmd_only_overrides        - Disable all built-in commands except wizard !overrides\n (int)  command_burst_size        - Max. commands per burst before limiter engages\n (int)  command_time_msec         - Millisecs per spam limiter time period\n (int)  commands_per_time         - Commands allowed per time period during limit\n (bool) compatible_priorities     - Use legacy exit priority levels on things\n (str)  connect_fail_mesg         - Failed player connect message\n (bool) consistent_lock_source    - Maintain trigger as lock source in TESTLOCK\n (str)  cpennies                  - Currency name, capitalized, plural\n (str)  cpenny                    - Currency name, capitalized\n (str)  create_fail_mesg          - Failed player create message\n (bool) dark_sleepers             - Make sleeping players dark\n (bool) dbdump_warning            - Enable warnings for upcoming database dumps\n (ref)  default_room_parent       - Place to parent new rooms to\n (str)  description_default       - Default description\n (bool) diskbase_propvals         - Enable property value diskbasing (req. restart)\n (bool) do_mpi_parsing            - Parse MPI strings in messages\n (bool) do_welcome_parsing        - Parse MPI in welcome file or proplist\n (time) dump_interval             - Interval between dumps\n (time) dump_warntime             - Interval between warning and dump\n (str)  dumpdone_mesg             - Database dump finished message\n (bool) dumpdone_warning          - Notify when database dump complete\n (str)  dumping_mesg              - Database dump started message\n (str)  dumpwarn_mesg             - Database dump finished message\n (bool) enable_home               - Enable 'home' command\n (bool) enable_prefix             - Enable prefix actions\n (int)  exit_cost                 - Cost to create an exit\n (bool) exit_darking              - Allow players to set exits dark\n (bool) expanded_debug_trace      - MUF debug trace shows array contents\n (str)  file_connection_help      - 'help' before login\n (str)  file_credits              - Acknowledgements\n (str)  file_editor_help          - Editor help\n (str)  file_help                 - 'help' main content\n (str)  file_help_dir             - 'help' topic directory\n (str)  file_info_dir             - 'info' topic directory\n (str)  file_log_cmd_times        - Command times\n (str)  file_log_commands         - Player commands\n (str)  file_log_gripes           - Player gripes\n (str)  file_log_malloc           - Memory allocations\n (str)  file_log_muf_errors       - MUF compile errors and warnings\n (str)  file_log_programs         - Text of changed programs\n (str)  file_log_sanfix           - Database fixes\n (str)  file_log_sanity           - Database corruption and errors\n (str)  file_log_status           - System errors and stats\n (str)  file_log_stderr           - Server error redirect\n (str)  file_log_stdout           - Server output redirect\n (str)  file_log_user             - MUF-writable messages\n (str)  file_man                  - 'man' main content\n (str)  file_man_dir              - 'man' topic directory\n (str)  file_motd                 - Message of the day\n (str)  file_mpihelp              - 'mpi' main content\n (str)  file_mpihelp_dir          - 'mpi' topic directory\n (str)  file_news                 - 'news' main content\n (str)  file_news_dir             - 'news' topic directory\n (str)  file_welcome_screen       - Opening screen\n (bool) force_mlev1_name_notify   - MUF notify prepends username for ML1 programs\n (int)  free_frames_pool          - Size of allocated MUF process frame pool\n (str)  gender_prop               - Property name used for pronoun substitutions\n (str)  huh_mesg                  - Unrecognized command warning\n (str)  idle_boot_mesg            - Boot message given to users idling out\n (bool) idle_ping_enable          - Enable server side keepalive pings\n (time) idle_ping_time            - Server side keepalive time in seconds\n (bool) idleboot                  - Enable booting of idle players\n (bool) ieee_bounds_handling      - Use IEEE standard for operations with INF and NAN\n (bool) ignore_bidirectional      - Enable bidirectional ignore\n (bool) ignore_support            - Enable support for @ignoring players\n (int)  instr_slice               - Max. uninterrupted instructions per timeslice\n (str)  leave_mesg                - Logoff message for QUIT\n (int)  link_cost                 - Cost to link an exit\n (int)  listen_mlev               - Mucker Level required for Listener programs\n (bool) lock_envcheck             - Locks check environment for properties\n (bool) log_commands              - Log player commands\n (bool) log_failed_commands       - Log unrecognized commands\n (bool) log_interactive           - Log text sent to MUF\n (bool) log_programs              - Log programs every time they are saved\n (int)  lookup_cost               - Cost to lookup a player name\n (ref)  lost_and_found            - Place for things without a home\n (bool) m3_huh                    - Enable huh? to call an exit named \"huh?\" and set M3, with full command string\n (int)  max_force_level           - Max. number of forces processed within a command\n (int)  max_instr_count           - Max. MUF instruction run length for ML1\n (int)  max_interp_recursion      - Max. MUF interpreter recursion\n (int)  max_loaded_objs           - Max. percent of proploaded database objects\n (int)  max_ml4_nested_interp_loop_count - Max. MUF preempt interp loop nesting level for ML4 (0 = no limit)\n (int)  max_ml4_preempt_count     - Max. MUF preempt instruction run length for ML4, (0 = no limit)\n (int)  max_nested_interp_loop_count - Max. MUF preempt interp loop nesting level\n (int)  max_object_endowment      - Max. value of an object\n (int)  max_output                - Max. output buffer size\n (int)  max_pennies               - Max. pennies a player can own\n (int)  max_plyr_processes        - Concurrent processes allowed per player\n (int)  max_process_limit         - Total concurrent processes allowed on system\n (int)  max_propfetch             - Max. size of returned property array\n (time) maxidle                   - Maximum idle time before booting\n (int)  mcp_muf_mlev              - Mucker Level required to use MCP\n (int)  movepennies_muf_mlev      - Mucker Level required to move pennies non-destructively\n (bool) mpi_continue_after_logout - Continue executing MPI after logout\n (int)  mpi_max_commands          - Max. number of uninterruptable MPI commands\n (str)  muckname                  - Name of the MUCK\n (bool) muf_comments_strict       - MUF comments are strict and not recursive\n (str)  new_program_flags         - Initial flags for newly created programs\n (int)  object_cost               - Cost to create an object\n (bool) optimize_muf              - Enable MUF bytecode optimizer\n (int)  pause_min                 - Min. millisecs between MUF input/output timeslices\n (str)  pcreate_flags             - Initial flags for newly created players\n (str)  pennies                   - Currency name, plural\n (int)  pennies_muf_mlev          - Mucker Level required to read the value of pennies, settings above 1 disable {money}\n (str)  penny                     - Currency name\n (int)  penny_rate                - Avg. moves between finding currency\n (bool) periodic_program_purge    - Periodically free unused MUF programs\n (int)  player_name_limit         - Limit on player name length\n (ref)  player_start              - Home where new players start\n (bool) playermax                 - Limit number of concurrent players allowed\n (str)  playermax_bootmesg        - Max. players connection error message\n (int)  playermax_limit           - Max. player connections allowed\n (str)  playermax_warnmesg        - Max. players connection login warning\n (bool) pname_history_reporting   - Report player name change history\n (time) pname_history_threshold   - Length of player name change history\n (int)  process_timer_limit       - Max. timers per process\n (bool) quiet_moves               - Suppress basic arrive and depart notifications\n (bool) realms_control            - Enable support for realm wizzes\n (bool) recognize_null_command    - Recognize null command\n (str)  register_mesg             - Login registration denied message\n (bool) registration              - Require new players to register manually\n (str)  reserved_names            - String-match list of reserved names\n (str)  reserved_player_names     - String-match list of reserved player names\n (int)  room_cost                 - Cost to create an room\n (bool) secure_teleport           - Restrict actions to Jump_OK or controlled rooms\n (bool) secure_thing_movement     - Moving things act like player\n (bool) secure_who                - Disallow WHO command from login screen and programs\n (bool) server_cipher_preference  - Honor server cipher preference order over client's\n (str)  smtp_server               - SMTP Server Host Name.  If blank, SMTP will not work.\n (str)  smtp_port                 - SMTP Port.  If blank, SMTP will not work.\n (int)  smtp_ssl_type             - SMTP SSL type - 0 for StartTLS, 1 for TLS, 2 for no SSL\n (bool) smtp_no_verify_cert       - SMTP if true, don't verify server certs\n (int)  smtp_auth_type            - SMTP SSL type - 0 for CRAM_MD5, 1 for none, 2 for plain, 3 for login\n (str)  smtp_user                 - SMTP Username\n (str)  smtp_password             - SMTP Password\n (str)  smtp_from_name            - SMTP From user name for the email header\n (str)  smtp_from_email           - SMTP From user email for the email header\n (bool) ssl_auto_reload_certs     - Automatically reload certs if the cert file changes\n (str)  ssl_cert_file             - Path to SSL certificate .pem\n (str)  ssl_cipher_preference_list - Allowed OpenSSL cipher list\n (str)  ssl_key_file              - Path to SSL private key .pem\n (str)  ssl_keyfile_passwd        - Password for SSL private key file\n (str)  ssl_min_protocol_version  - Min. allowed SSL protocol version for clients\n (int)  start_pennies             - Player starting currency count\n (bool) starttls_allow            - Enable TELNET STARTTLS encryption on plaintext port\n (bool) strict_god_priv           - Only God can touch God's objects\n (bool) tab_input_replaced_with_space - Change tab to space when processing input\n (bool) teleport_to_player        - Allow using exits linked to players\n (bool) thing_darking             - Allow players to set things dark\n (ref)  toad_default_recipient    - Default owner for @toaded player's things\n (bool) toad_recycle              - Recycle newly-created toads\n (bool) use_hostnames             - Resolve IP addresses into hostnames\n (int)  userlog_mlev              - Mucker Level required to write to userlog\n (ref)  welcome_mpi_what          - Effective 'this' for welcome.txt MPI\n (ref)  welcome_mpi_who           - Effective 'me' for welcome.txt MPI\n (bool) who_hides_dark            - Hide dark players from WHO list\n (bool) wiz_vehicles              - Only let Wizards set vehicle bits\n\n\nSYSPARM_ARRAY ( str:pattern -- list:sysparminfo )\n\n  Given an smatch wildcard string pattern, returns a list of dictionaries,\none per each matched @tune parameter (sysparm), containing the information\nabout each sysparm.  This will only return items for which your program has\npermission to read the data.\n\nEach dictionary contains the following data, keyed with these strings:\n    \"type\"      One of \"string\", \"integer\", \"timespan\", \"dbref\", or \"boolean\".\n    \"group\"     The logical group that this parameter belongs to.\n    \"name\"      The name of the @tune setting.\n    \"value\"     The value of the sysparm.  May be an int, string, or dbref.\n    \"mlev\"      The mucker level required to read the value of this sysparm.\n    \"readmlev\"  The mucker level required to read the value of this sysparm.\n    \"writemlev\" The mucker level required to write the value of this sysparm.\n    \"label\"\tA description of the parameter.\n    \"nullable\"  Whether the parameter can have no value.\n    \"active\"\tWhether the parameter currently affects the system.\n    \"default\"\tWhether the parameter has been changed from defaults.\n\nIf a given entry is of the \"dbref\" type, it will also have the extra field:\n    \"objtype\"   The type of object the dbref is restricted to.  Can be one of\n                the strings \"player\", \"thing\", \"room\", \"exit\", \"program\",\n                \"garbage\", or \"any\".\n\n\nSETSYSPARM ( s1 s2 -- )\n\n  Assigns the @tunable parameter s1 a value given by s2.  s2 must contain a\nlegal value for s1.  If s1 is prefixed with '%', reset s1 to default\ninstead, ignoring the value of s2.  (wizbit only)\n\n\nNAME ( d -- s )\n\n  Takes object d and returns its name (@name) string field.\n\n\nSETNAME  ( d s -- )\n\n  Takes object d, and sets the name to s. A program may only set the\nnames of objects that are owned by the effective user of the program,\nor any object if the program is Wizard.  The name of a player can never\nbe set, since that would normally require a password.\n\n\nTRUENAME ( d -- s )\n\n  Takes object d and returns its name string field.\n\n  This is deprecated, and internally defined as: name\n\nPNAME_HISTORY ( d -- a )\n\n  Returns a dictionary representing the times in which the given player had a name\nchange. If determinable, the \"created_as\" key holds the name at creation. \n\nThe result of this wizbit-only primitive is affected by the following sysparms:\n  pname_history_reporting    - if no, the result is an empty dictionary.\n  pname_history_threshold    - amount of history to keep (0s = unlimited)\n\n\nDESC ( d -- s )\n\n  Takes object d and returns its description (@desc) string field.\n\n\nSETDESC (d s -- )\n\n  Takes object d, and sets the @description string property _/de to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setdesc  \"_/de\"  swap 0 addprop $enddef\n\n\nSUCC ( d -- s )\n\n  Takes object d and returns its success (@succ) string field s.\n\n\nSETSUCC (d s -- )\n\n  Takes object d, and sets the @success string property _/sc to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setsucc  \"_/sc\" swap 0 addprop $enddef\n\n\nFAIL ( d -- s )\n\n  Takes object d and returns its fail (@fail) string field.\n\n\nSETFAIL (d s -- )\n\n  Takes object d, and sets the @fail string property _/fl to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setfail  \"_/fl\" swap 0 addprop $enddef\n\n\nDROP ( d -- s )\n\n  Takes object d and returns its drop (@drop) string field.\n\n\nSETDROP (d s -- )\n\n  Takes object d, and sets the @drop string property _/dr to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setdrop  \"_/dr\" swap 0 addprop $enddef\n\n\nOSUCC ( d -- s )\n\n  Takes object d and returns its osuccess (@osucc) string field.\n\n\nSETOSUCC (d s -- )\n\n  Takes object d, and sets the @osuccess string property _/osc to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setosucc  \"_/osc\" swap 0 addprop $enddef\n\n\nOFAIL ( d -- s )\n\n  Takes object d and returns its ofail (@ofail) string field.\n\n\nSETOFAIL (d s -- )\n\n  Takes object d, and sets the @ofail string property _/ofl to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setofail  \"_/ofl\" swap 0 addprop $enddef\n\n\nODROP ( d -- s )\n\n  Takes object d and returns its odrop (@odrop) string field.\n\n\nSETODROP (d s -- )\n\n  Takes object d, and sets the @odrop string property _/odr to s.\nIf the program is Mucker Level 1 or 2, then it may only set this property\non objects that are owned by the player that the program is running with\nthe permissions of.  This is actually a $define that uses addprop.  This\nis identical to:\n    $define setodrop  \"_/odr\" swap 0 addprop $enddef\n\n\nGETLINK ( d -- d' )\n\n  Returns what object d is linked to, or #-1 if d is unlinked.  The\ninterpretation of link depends on the type of d: for an exit, returns\nthe room, player, action, or thing that the exit is linked\nto.  For a player or thing, it returns its `home', and for\nrooms returns the drop-to.\n\n\nGETLINKS ( d -- dn..d1 n )\n\n  Returns what objects d is metalinked to.  If d is an unlinked exit\nor a room with no dropto, getlinks returns 0.  A count of\n1 and #-3 is returned if the dropto is linked to HOME.\n\n\nGETLINKS_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every object that the\ngiven object is linked to.\n\n\nENTRANCES_ARRAY ( d -- a )\n\n  Returns a list array that contains the dbref of every object linked to the\ngiven object.\n\n\nSETLINK     ( d1 d2 -- )\n\n  Takes an exit dbref d1, and sets its destination to d2.  You must have\ncontrol of the exit, and if the exit is already linked, it must be unlinked\nfirst by doing setlink with #-1 as the destination.\n\n\nSETLINKS_ARRAY ( ref:Obj arr:Destinations -- )\n\n  Sets the destinations/dropto/home of \"Obj\" to \"Destinations\".  Objects may be\nunlinked by passing in an empty array.\n\n\nTIMESTAMPS ( d -- i i2 i3 i4 )\n\n  Returns the following for a program, the time created (i), the time last\nmodified (i2), the time last used (i3), and the number of uses(i4) for\nany object.\n\n\nSTATS ( d -- total rooms exits things programs players garbage )\n\n  Returns the number of objects owned by 'd', or the total objects in\nthe system if d is #-1. This is broken up into a total, rooms, exits,\nthings, programs, players, and garbage. This functions much as the\n@STATS command.\n(Needs Mucker Level 3)\n\n\nSTATS_ARRAY ( d -- a )\n\n  Returns, as an array, the number of objects owned by 'd', or the total\nobjects in the system if d is #-1. This is broken up into a total, rooms, exits,\nthings, programs, players, and garbage. This functions much as the\n@STATS command.\n(Needs Mucker Level 3)\n\n\nOBJMEM ( d -- i )\n\n  Returns the current number of bytes in use by the given object.\n\n\nCOPYOBJ ( d -- d' )\n\n  Creates a new object (returning d' on top of the stack), that is a\ncopy of object d, in the inventory of the current player.\nCan only create one object per program run, if under Mucker Level 3.\n\n\nCOPYPLAYER ( d1 s1 s2 -- d2 )\n\n  Creates a new player object with the name s1, and the password s2, and the\nproperties, flags, links, etc. of the template object d1.  This returns\nthe dbref of the newly created player object.\n\n\nTOADPLAYER ( d1 d2 -- )\n\n  @toads player d2, and chowns all their posessions to player d1.\nYou can't toad wizard players.\n\n\nNEWPLAYER ( s1 s2 -- d )\n\n  Creates a new player object, with the name s1, and the password s2.\nThis returns the dbref of the new player object.\n\n\nNEWROOM (d s -- d)\n\n  Takes the dbref of the parent and the name of the room. It returns the\ndbref of the created room. Owner is the person running the program.\nCan only create one object per program run, if under Mucker Level 3.\n\n\nNEWOBJECT (d s -- d)\n\n  Takes location and name and returns new thing's dbref.\nOwner is the person running the program.\nCan only create one object per program run, if under Mucker Level 3.\n\n\nNEWEXIT (d s -- d)\n\n  Takes location and name and returns new exit's dbref.\nOwner is the person running the program. Mucker level 3 and higher.\n\n\nNEWPROGRAM ( s -- d )\n\n  Creates a new program object with the given name, and returns its dbref.\nRequires wizbit.\n\n\nRECYCLE (d -- )\n\n  Recycles the given object d.  Will not recycle players, the global\nenvironment, the player starting room, or any currently running program.\n(Can recycle objects owned by uid if running with Mucker Level 3\npermissions.  Can recycle other people's items with wizbit)\n\n\nIGNORING? ( ref:Player1 ref:Player2 -- int:Result )\n\n  Returns true if either player has an ignore set for the other.  If one of\nthe players is an unquelled wizard this will always return false.\nThis primitive requires at least Mucker Level 3.\n\n\nIGNORE_ADD ( ref:Player ref:Who -- )\n\n  Adds the player \"Who\" to \"Player\"'s ignore list.\nThis primitive requires at least Mucker Level 3.\n\n\nIGNORE_DEL ( ref:Player ref:Who -- )\n\n  Removes the player \"Who\" from \"Player\"'s ignore list.\nThis primitive requires at least Mucker Level 3.\n\n\nARRAY_GET_IGNORELIST ( ref:Player -- list:Players )\n\n  Returns a list array of players \"Player\" is ignoring.\nThis primitive requires at least Mucker Level 3.\n\n\nDUMP ( -- b )\n\n  Triggers a database dump.  Returns boolean true if it was triggered, false\nif not.  The only reason a dump would fail to trigger is if there is already\na dump happening at the time you run this.\n\n  Fuzzball dumps are asynchronous, so if you want to know when the dump\nfinishes, you can wait for an event with eventId \"DUMP\".  This event is sent\nto all running processes.\n\n  This primitive requires a Wizard bit.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Time Manipulation Operators\n----------------------------------------------------------------------------\n\n\n\n\nTIME ( -- s m h )\n\n  Returns the time of day as integers on the stack, seconds, then minutes,\nthen hours.\n\n\nDATE ( -- i i i)\n\n  Returns the monthday, month, and year.  ie:  if it were February 6, 1992,\ndate would return 6 2 1992 as three integers on the stack.\n\n\nSYSTIME ( -- i )\n\n  Returns the number of seconds from Jan 1, 1970 GMT. This is compatible with\nthe system timestamps and may be broken down into useful values through\n'timesplit'.\n\n\nSYSTIME_PRECISE ( -- f )\n\n  Returns the number of seconds from Jan 1, 1970 GMT as a floating point\nnumber, with microsecond accuracy.\n\n\nGMTOFFSET ( -- i)\n\n  Returns the server's offset from UTC in seconds.\nResult is negative for time zones west of the prime meridian.\nResult is positive for time zones east of the prime meridian.\n\n\nTIMESPLIT ( i -- is im ih id im iy iw iyd )\n\n  Splits a systime value into 8 values in the following order: seconds,\nminutes, hours, monthday, month, year, weekday, yearday.  Weekday starts\nwith sunday as 1, and yearday is the day of the year (1-366).\n\n\nTIMEFMT (s i -- s)\n\n  Takes a format string and a SYSTIME integer and returns a string formatted\nwith the time.  The format string is ASCII text with formatting commands:\n\n  %a -- abbreviated weekday name\n  %A -- full weekday name\n  %b -- abbreviated month name\n  %B -- full month name\n  %c -- date and time (default: %a %b %e %T %Y)\n  %C -- year divided by 100 and truncated to an integer,\n        as a decimal number (00-99)\n  %d -- day of the month as a decimal number (01-31)\n  %D -- %m/%d/%y\n  %e -- day of the month as a decimal number (1-31);\n        a single digit is preceded by a space\n  %F -- %Y-%m-%d (ISO 8601 date)\n  %g -- last 2 digits of the ISO 8601 week-based year\n        as a decimal number (00-99)\n  %G -- ISO 8601 week-based year as a decimal number\n  %h -- %b\n  %H -- hour (24-hour clock) as a decimal number (00-23)\n  %I -- hour (12-hour clock) as a decimal number (01-12)\n  %j -- day of the year as a decimal number (001-366)\n  %m -- month as a decimal number (01-12)\n  %M -- minute as a decimal number (00-59)\n  %n -- new-line character\n  %p -- AM or PM\n  %r -- 12-hour clock time (default: %I:%M:%S %p)\n  %R -- %H:%M\n  %S -- second as a decimal number (00-60)\n  %t -- horizontal-tab character\n  %T -- %H:%M:%S (ISO 8601 time)\n  %u -- ISO 8601 weekday as a decimal number (1-7), where Monday is 1\n  %U -- week number of the year (the first Sunday as the first day of week 1)\n        as a decimal number (00-53)\n  %V -- ISO 8601 week number as a decimal number (01-53)\n  %w -- weekday as a decimal number (0-6), where Sunday is 0\n  %W -- week number of the year (the first Monday as the first day of week 1)\n        as a decimal number (00-53)\n  %x -- date (default: %m/%d/%y)\n  %X -- time (default: %T)\n  %y -- last 2 digits of the year as a decimal number (00-99)\n  %Y -- year as a decimal number\n  %z -- offset from UTC in the ISO 8601 format, or by no characters\n        if no time zone is determinable (example: -0500 for EST)\n  %Z -- time zone name or abbreviation, or by no characters if no time zone\n        is determinable (examples: UTC, EDT, PST)\n  %% -- % (percent sign)\n  TIMEFMT processes format strings with the C function strftime().  The above\nlist of conversion specifiers (formatting commands) is from the C (draft\nC17/C18) standard: some MUCKs may have more conversion specifiers available.\n\n\nCONVTIME (s -- i) \n\n  Converts time string from \"HH:MM:SS MO/DY/YR\" format to systime seconds.\n\n\nFMTTIME (s1 s2 -- i) \n\n  Converts time string s1 from the format given by s2 to systime seconds.\n\n\n\nSLEEP (i -- )\n\n  Makes the program pause here for 'i' seconds.  the value of i cannot\nbe negative.  If the sleep is for more than 0 seconds, then the program\nmay not thereafter use the READ primitive.\n\n\n\n\n\n----------------------------------------------------------------------------\n                        Process Management Operators\n----------------------------------------------------------------------------\n\n\n\n\nMODE ( -- i)\n\n  Returns an integer denoting the current multitasking mode.  This ignores\nBOUND bits on programs.  The integer this returns will be the same as\none of those defined by the standard $defines bg_mode, fg_mode, and\npr_mode, being background, foreground, and preempt mode, respectively.\n\n\nSETMODE (i -- )\n\n  Sets the current multitasking mode to the given mode.  The integer this\nuses will be the same as one of those defined by the standard $defines\nbg_mode, fg_mode, and pr_mode, being background, foreground, and preempt\nmode, respectively.  Programs set BOUND will run PREEMPT, ignoring this\nmode.\n\n\nPR_MODE ( -- i)\n\n  This is a standard built in $define.  This is used with MODE and\nSETMODE to show what mode the program is running in, or to set what mode\nit will run in.  For example, MODE returns an integer on the stack, that\nyou can compare against PR_MODE, FG_MODE, or BG_MODE, to determine what\nmode the program is in.  PR_MODE is preempt mode, and is defined as 0.\n\n\nFG_MODE ( -- i)\n\n  This is a standard built in $define.  This is used with MODE and\nSETMODE to show what mode the program is running in, or to set what mode\nit will run in.  For example, MODE returns an integer on the stack, that\nyou can compare against PR_MODE, FG_MODE, or BG_MODE, to determine what\nmode the program is in.  FG_MODE is foreground mode, and is defined as 1.\n\n\nBG_MODE ( -- i)\n\n  This is a standard built in $define.  This is used with MODE and\nSETMODE to show what mode the program is running in, or to set what mode\nit will run in.  For example, MODE returns an integer on the stack, that\nyou can compare against PR_MODE, FG_MODE, or BG_MODE, to determine what\nmode the program is in.  BG_MODE is background mode, and is defined as 2.\n\n\nPREEMPT ( -- )\n\n  Prevents a program from being swapped out to do multitasking.  Needed in\nsome cases to protect crucial data from being changed while it is being\nworked on.  A program will remain in preempt mode until its execution is\ncompleted.  Basically what this command does is to turn off multitasking,\nbut then you have a limit on how many instructions you can run without\nneeding either to pause with a SLEEP, or have a wizbit on the program.\n\n\nFOREGROUND ( -- )\n\n  To turn on multitasking, you can issue a foreground command.  While a\nprogram is in foreground mode, the server will be multitasking and\nhandling multiple programs at once, and input from other users, but it\nwill be blocking any input from the user of the program until the program\nfinishes.  You cannot foreground a program once it is running in the\nbackground. A program will stay in foreground mode until it finishes\nrunning or until you change the mode.\n\n\nBACKGROUND ( -- )\n\n  Another way to turn on multitasking is to use the background command.\nPrograms in the background let the program user go on and be able to do\nother things while waiting for the program to finish.  You cannot use\nthe READ command in a background program.  Once a program is put into\nbackground mode, you cannot set it into foreground or preempt mode.\nA program will remain in the background until it finishes execution.\n\n\nQUEUE (i d s -- i)\n\n  Takes a time in seconds, a program's dbref, and a parameter string.  It\nwill execute the given program with the given string as the only string on\nthe stack, after a delay of the given number of second.  Returns  the pid\nof the queued process, or 0 if the timequeue was full.\n(Requires Mucker Level 3)\n\n\nFORK ( -- i)\n\n  This primitive forks off a BACKGROUND (muf) process from the currently\nrunning program.  It returns the pid of the child process to the parent\nprocess, and returns a 0 to the child.  If the timequeue was full, then\nit returns a -1 to the parent process, and there is no child process.\n(Requires Mucker Level 3)\n\n\nKILL (i -- i)\n\n  Attempts to kill the process referred to by the given process ID.\nReturns 1 if the process existed, and 0 if it didn't.\nMust own the process if under Mucker Level 3.\n\n\nPID ( -- i)\n\n  Returns the process ID of the program that is currently running.\n\n\nISPID? (i -- i)\n\n  Takes a process id and checks to see if an event with that pid is in the\ntimequeue.  It returns 1 if it is, and 0 if it is not.  ispid? will also\nreturn 1 if the given process id is that of the currently running program.\nThis primitive requires at least mucker level 3.\n\n\nGETPIDS ( ref:obj -- list:pids )\n\n  If obj is a program dbref, this will return a list of the process IDs\nof every active process that has the given program in their call stack.\nIf obj is a player dbref, this will return a list of all the PIDs assigned to\nthat player.  If obj is a trigger dbref, it will return all the active PIDs\nassociated with that trigger.   And finally, if obj is #-1, then all active\nPIDs will be included in the array that gets returned.\n\n\nGETPIDINFO ( int:pid -- dict:info )\n\n  Given a valid active PID, returns a dictionary with information about\nthat process. The information returned is:\n    CALLED_DATA - The string the program was queued with, if any\n    CALLED_PROG - The program dbref# of the process' current call level.\n    CPU         - The amount of CPU time used up by the process.\n    DESCR       - The descriptor that called the program.\n    FILTERS     - Array of event strings being watched for.\n    INSTCNT     - The number of instructions run so far.\n    MLEVEL\t- The current MUCKER level.\n    NEXTRUN     - When the process is due to run again.\n    PID         - That process ID.\n    PLAYER      - The player dbref that PID belongs to.\n    STARTED     - Systime in seconds when the process started.\n    SUBTYPE     - Additional information about the process.\n    TRIG        - The trigger that called that process.\n    TYPE        - What type of process it is. MUF/MPI.\n\nRequires Mucker level 3 to check a pid other than current.\n\n\nINSTANCES ( d -- i )\n\n  Returns the number of active instances of the given program.  Ie: the\nnumber of active processes that are running, using the given program.\n\n\nCOMPILE ( d i1 -- i2 )\n\n  Compiles the given program.  If i1 is true, errors and warnings are printed\nout to the user.  If the program fails to compile, this returns 0.  If the\ncompile is successful, this returns the number of compiled instructions.\nThis will throw an error if the program has any current instances running.\n\n\nUNCOMPILE ( d -- )\n\n  Uncompiles the given muf program.  This will throw an error if the program\nhas any current instances running.\n\n\nCOMPILED? ( d -- i )\n\n  Returns 0 if the given program is not compiled.  Otherwise returns the\nnumber of compiled instructions.\n\n\nPROGRAM_GETLINES ( d i1 i2 -- a )\n\n  Returns a list array of strings containing the muf program lines in\nprogram d, from line i1 to line i2, inclusive.  If both i1 and i2 are\nzero, then the entire program is returned.  If i1 is zero, it is assumed\nto mean the first line.  If i2 is zero, it is assumed to mean the very\nlast line.  If i1 and i2 are the same, and non-zero, then only that line\nwill be returned, as a list array with a single string element.  The target\nprogram must be controlled by the current program's UID, be set VIEWABLE,\nor the current program must be running with wizard permissions.\n\n\nPROGRAM_SETLINES ( ref:Program list:Lines -- )\n\n  Sets all the lines of the given program to the lines in the array.\nThis primitive requires at least mucker level 4.\n\n\n\n\n\n----------------------------------------------------------------------------\n                      Connection Management Operators\n----------------------------------------------------------------------------\n\n\n\n\nDESCR ( -- i)\n\n  Returns the descriptor number that invoked this program.  The value\nreturned may be -1 in the case of listener or autostart programs.\n\n\nAWAKE? ( d -- i )\n\n  Passed a players dbref, returns the number of connections they have to\nthe game. This will be 0 if they are not connected.\n\n\nONLINE ( -- d ... i )\n\n  Returns a dbref for every player connected to the server, and lastly the\nnumber of connections.\n\n\nONLINE_ARRAY ( -- a )\n\n  Returns a single stack item, which is a list array, containing a dbref for\nevery player connected to the server.\n\n\nDESCRCOUNT ( -- i)\n\n  Returns how many connections to the server there are.\n(Requires Mucker Level 3)\n\n\nDESCRDBREF (i -- d)\n\n  Returns the dbref of the player connected to this descriptor number.\nThis may return #-1 if there is no player connected to the given descriptor.\n(Requires Mucker Level 3)\n\n\nDESCRTIME (i -- i)\n\n  Returns how many seconds the given descriptor connection has been connected\nto the server.  (Requires Mucker Level 3)\n\n\nDESCRIDLE (i -- i)\n\n  Returns how many seconds the descriptor connection has been idle.\n(Requires Mucker Level 3)\n\n\nDESCRLEASTIDLE (d -- i)\n\n  Returns the descriptor number for the least idle connection of the given\nplayer dbref, or -1 if the player is disconnected.  (Requires Mucker Level 3)\n\n\nDESCRMOSTIDLE (d -- i)\n\n  Returns the descriptor number for the most idle connection of the given\nplayer dbref, or -1 if the player is disconnected.  (Requires Mucker Level 3)\n\n\nDESCRSECURE? (d -- i)\n\n  Returns 1 if the descriptor number corresponds to a secure connection, and\n0 otherwise. (Requires Mucker Level 3)\n\n\nDESCRHOST (i -- s)\n\n  Returns the hostname of the descriptor connection. (wizbit only)\n\n\nDESCRUSER (i -- s)\n\n  Returns the username of the descriptor connection. (wizbit only)\n\n\nDESCRBOOT (i -- )\n\n  Takes a descriptor number and disconnects that connection from\nthe server.  Basically @boot for a specific descriptor connection.\n(wizbit only)\n\n\nDESCRNOTIFY (i s -- )\n\n  Sends a string to a specific descriptor connection, similar to NOTIFY.\n(Requires Mucker Level 3)\n\n\nFIRSTDESCR (d -- i)\n\n  Returns the first descriptor number associated with the given player.\nIf the player object is given as #-1, then this returns the first descriptor\nin the list of all connections.  Descriptors have no promised ordering as\nthey are basically operating system file handles; thus, this is probably\nonly useful when #-1 is given as a parameter but it maintains support for\nother dbrefs as well for compatibility reasons.\n\n\nNEXTDESCR (i -- i)\n\n  Takes a descriptor number, and returns the next connected descriptor\nnumber.  To get the first descriptor number, use '#-1 firstdescr'.  Between\nthese, you can step through the descriptors list.  If you try to use\nnextdescr on an invalid descriptor, it will return 0.  If you have\nreached the end of the descriptor list, it returns 0.\n(Requires Mucker Level 3)\n\n\nLASTDESCR (d -- i)\n\n  Returns the last descriptor number associated with the given player.\nIf the player object is given as #-1, then this returns the last descriptor\nin the list of all connections.  Descriptors have no promised ordering as\nthey are basically operating system file handles; thus, this is probably\nonly useful when #-1 is given as a parameter but it maintains support for\nother dbrefs as well for compatibility reasons.\n\n\nDESCRFLUSH (i -- )\n\n  Flushes the output text on the given descriptor.  If i is -1, flushes\noutput on all descriptors.\n(Requires Mucker Level 3)\n\n\nDESCRIPTORS (d -- ix...i1 i)\n\n  Takes a player dbref, or #-1, and returns the range of descriptor numbers\nassociated with that dbref (or all for #-1) with their count on top.\n\n\nDESCR_ARRAY (d -- a)\n\n  Takes a player dbref, or #-1, and returns a list array that contains the\ncurrent descriptor numbers associated with that dbref.  (Or all connected\ndescriptors, if the dbref is #-1)  This can return an empty list if there\nare no connections for that player.  This is effectively the same as the\nsequence 'descriptors array_make', but doesn't overflow the stack if too\nmany descriptors are available.  Descriptors are numbers that always stay\nthe same for a connection, while a connection# is the relative position\nin the WHO list of a connection.\n\n\nDESCR_SETUSER ( i d s -- i )\n\n  Reconnects descriptor i to the player with dbref d and password s.  It first\ndisconnects from the old dbref, then connects the new one, as if QUIT was\ntyped then the new character was logged in.  If the password doesn't match\nthe player's password, then it gives a permission denied error.  This\nreturns a 1 if successful or a 0 if the given descriptor wasn't found.\nWizbit only.\n\n\nDESCRBUFSIZE ( int:dscr -- int:bytes )\n\n  Returns the number of bytes of free space in the given descriptor's output\nbuffer.  If more data is written to the buffer than it has space for, the\ndata at the beginning of the buffer gets erased with an <output flushed>.\nRemember that each NOTIFY adds a CR LF byte pair at the end of each line.\nAlso note that \\r in lines gets translated to CR LF byte pairs.\n\n\n\n\n\n----------------------------------------------------------------------------\n                          Event Handling Operators\n----------------------------------------------------------------------------\n\n\n\n\nEVENT_COUNT ( -- i )\n\n  Returns the number of pending events waiting to be processed with EVENT_WAIT.\n\n\nEVENT_EXISTS ( s -- i )\n\n  Returns the number of pending events that have the given eventid type.\nThe given eventid type can be an smatch wildcard pattern.\n\n\nEVENT_WAIT ( -- ? s )\n\n  This is an inserver muf macro, that expands to '0 array_make event_waitfor'\nSee: EVENT_WAITFOR\n\n\nEVENT_WAITFOR (a -- ? s )\n\n  Waits for an event to occur that matches one of the eventIDs given in the\nstring list array.  The comparison is NOT case sensitive, and you may use\nsmatch wildcard patterns.  If a matching event isn't in the event queue\nalready, this will pause the MUF process until a matching event is added\nto the queue.  The first matching event to become available will be removed\nfrom the event queue.  This returns an event-specific context data item,\nand the matching eventID string.  If an empty list array is passed to this\nprimitive, then it will match any and all events, and return the first one\npending.\n\n  Timer events have eventID strings that are created by prepending \"TIMER.\"\nto the timerID passed to the TIMER_START primitive.  The context for Timer\nevents is an integer, representing the systime that the timer event was\nscheduled to occur at.  This might not be the time that the event is actually\nprocessed at, due to system delays.\n\n  GUI events have eventID strings that are created by prepending \"GUI.\" to\nthe dlogID of the dialog that generated the event.  The context for GUI\nevents is a dictionary contains the following keys:\n\ndescr      Holds the descriptor that generated the event.\ndlogid     Holds the DlogID of the dialog that generated the event.\nid         Holds the ID of the control that generated the event.\ndismissed  Holds 1 if the dialog was dismissed, 0 otherwise.\nevent      Holds the type of gui event.  ie: buttonpress, menuselect.\nvalues     Holds the dictionary of control values, keyed by control name.\ndata       Holds array of extra gui-event specific data.\n\n  User events have eventID strings that are created by prepending \"USER.\" to\nthe eventID given to the EVENT_SEND muf primitive.  The context for User\nevents is a dictionary containing the following keys:\n\ncaller_pid   Holds the integer Process ID of the sending program.\ncaller_prog  Holds the dbref of the sending program.\ndata         Holds the stack item sent by the EVENT_SEND primitive.\ndescr        Holds the descr that initiated the calling program.\ntrigger      Holds the trigger dbref that initiated the calling program.\nplayer       Holds the player dbref that ran the calling program.\nprog_uid     Holds the dbref of the player whose permissions the caller\n               program is running as.\n\n  MCP events have eventID strings formatted like \"MCP.packagename-mesgname\"\nwhere 'packagename' is the name of the MCP package being invoked, and\n'mesgname' is the specific message in the package being invoked.  If the\n'mesgname' is a null string, then the trailing '-' is removed.\n\n  Some example MCP eventIDs are:\n\n    MCP.com-belfry-image       Where pkg is 'com-belfry-image' & mesg is ''\n    MCP.com-belfry-image-view  Where pkg is 'com-belfry-image' & mesg is 'view'\n\nThe context for MCP events is a dictionary containing the following keys:\n\n    descr     Holds the integer descriptor of the sending connection.\n    package   Holds the string package name the MCP mesg is sent for.\n    message   Holds the string message name within that package.\n    args      Holds a dictionary, containing the message arguments.\n                Each mesg arg has an array list of strings as a value.\n\n  Read events have eventID strings of just \"READ\".  The context of Read events\nis the integer descriptor of the first waiting line to be READ.  To get the\nactual line sent by the user you need to use the READ primitive.\n\n  Process exit events have eventID strings that are created by prepending\n\"PROC.EXIT.\" to the pid of the watched process that exited.  The context\nis the pid of the process that exited.\n\n\nEVENT_SEND ( i s ? -- )\n\n  Sends a \"USER.\" event to the process referred to by the given pid.\nThe target process will receive an event that can be read with EVENT_WAIT.\nThe event type will be \"USER.\" with the given event id string appended\nto it.  The given event id string will be truncated at 32 characters.\nThe receiving process will be passed a dictionary with items \"data\" for\nthe given arbitrary stack element, \"caller_pid\" with the pid of the\nprocess calling EVENT_SEND, and \"caller_prog\" with the dbref of the\nprogram calling EVENT_SEND.\n\n  Ie: '23 \"foobar\" 3.1416 event_send' will send an event to process 23, with\nan eventid of \"USER.foobar\", and a floating point data value of 3.1416.\nThis primitive requires at least Mucker Level 3.\n\n\nTIMER_START ( i s -- )\n\n  Requests that a timer event be sent to this program in i seconds,\nwith an event name of \"TIMER.\"  with the given string appended.  ie:\n'5 \"one\" timer_start' will cause a \"TIMER.one\" event to be sent to\nthe program in 5 seconds.  This is used with EVENT_WAIT.  If a timer\nwith the given timerid already exists, it will be rescheduled to occur\nafter the new delay.  Timer ids will be truncated to 32 characters.\nEach MUF process can only have a limited number of timers, specified\nby the @tune setting 'process_timer_limit'.  Timers are listed on\nthe @ps timequeue with the PID of the timer's process in parentheses.\nTimers are one-shot events.  To get a repeating timer, you'll need to\nrestart it when you process a new timer event.\n\n\nTIMER_STOP ( s -- )\n\n  Stops the timer with the given timerid, if it exists.  If there is\nalready a timer event on the event queue, it will STAY on the queue\nuntil processed.  As with the timer_start primitive, the \"TIMER.\" part\nof the event name is assumed.  '\"first\" timer_stop' will stop the timer\ncreated by '5 \"first\" timer_start'.  Timer ids ARE case sensitive.\n\n\nWATCHPID (d -- )\n\n  Sends a \"PROC.EXIT.\" event to the current process when the process referred\nto by the given pid exits.  If the process process does not exist, the event\nwill be sent immediately.  The exit event can be retrieved by a call to\nEVENT_WAIT.  The event type will be \"PROC.EXIT.\" with the pid of the process\nappended to it.  The pid will also be returned as the data value from the\nevent.  This primitive requires at least Mucker Level 3.\n\n\n\n\n\n----------------------------------------------------------------------------\n                           MCP Support Operators\n----------------------------------------------------------------------------\n\n\n\n\nMCP_REGISTER ( strPkgName fltMinVers fltMaxVers -- )\n\n  Registers an MCP package so that clients can know what is supported.\nThe minimum and maximum versions supported are represented as floating\npoint numbers, with the minor version number being divided by 1000.\nFor example, an MCP package of version 1.1 is represented as 1.001,\nand a version of 1.23 is represented as 1.023.  This lets you use\nmathematical compares to check version numbers.\n\n\nMCP_REGISTER_EVENT ( strPkgName fltMinVers fltMaxVers -- )\n\n  Registers an MCP package so that clients can know what is supported,\nand marks this process as wanting to receive MCP messages as Muf Events.\nThese events can be read with EVENT_WAIT, and will have event ids starting\nwith \"MCP.\", followed by the package and message names.  The event data\nwill be a dictionary, containing \"descr\", \"package\", \"message\", and \"args\"\nelements.  The args element will have a dictionary of message arguments\nas its value.  The minimum and maximum package versions supported are\nrepresented as floating point numbers, with the minor version number being\ndivided by 1000.  For example, an MCP package of version 1.1 is represented\nas 1.001, and a version of 1.23 is represented as 1.023.  This lets you\nuse arithmetic compares to check version numbers.  Since this primitive\narranges for MCP messages to be received as muf events, there is no need\nto use the MCP_BIND primitive with this.  A side benefit is that _any_ MCP\nmessage sent for this package can be caught, not just the ones you bound.\nAlso, the process that will handle the events is kept alive, so your data\nstored in variables, or on the stack, is kept.\n\n\nMCP_BIND ( strPkgName strMesgName addrCallback -- )\n\n  Binds a specific message, so if it is received, the given function is\ncalled.  The callback function is assumed to accept the args:\n( intDescr dictArgs -- ) where dictArgs is a dictionary array contain-\ning key-value pairs that represent the arguments of the message.  Each\nargument can either have a string value, or a list array of strings,\nwhere the list array is used for multi-line values.\n\n\nMCP_SUPPORTS ( intDescr strPkgName -- fltVersion )\n\n  Returns the version number of this package that is supported by this\nconnection descriptor.  If this package isn't supported, returns 0.0\nThe version number is represented as a floating point number, with the\nminor version number being divided by 1000.  For example, an MCP\npackage of version 1.1 is represented as 1.001, and a version of 1.23\nis represented as 1.023.  This lets you use mathematical compares to\ncheck version numbers.\n\n\nMCP_SEND ( intDescr strPkgName strMsgName dictArgs -- )\n\n  Sends an MCP message for the given package to the given connection\ndescriptor.  dictArgs contains key-value pairs, where each key is\nan argument name, and the value is the argument value.  Values can\nbe strings, floats, dbrefs, integers, or array lists of strings.\nThey all get translated into an appropriate string format before\ngetting sent.\n\n\n\n\n\n----------------------------------------------------------------------------\n                           GUI Support Operators\n----------------------------------------------------------------------------\n\n\n\n\nGUI_AVAILABLE (intDescr -- fltVersion)\n\n  Returns the floating point version number of the MCP GUI protocol\nsupported by the given descriptor's connection.  The version is\nencoded in the number such that major version 8, minor version 12\nis represented as 8.012.  If the MCP protocol is not available on\nthat descriptor, then 0.0 is returned.\n\n\nGUI_DLOG_CREATE (intDescr strType strTitle dictArgs -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then this\nprimitive can be used to generate a dialog on their screen.  The intDescr\nis the integer descriptor of the connection to show the dialog on. The\nstrType is the type of the dialog to create.  Currently, the only options\nfor strType are D_SIMPLE, D_TABBED, or D_HELPER.  The strTitle argument\nis the title to show in the titlebar of the dialog.  dictArgs is a\ndictionary array that contains extra optional arguments for creating\nthe dialog.\n\n  This primitive returns a string containing the dialogid, used by other\nprims to add controls or make various changes.  This dialog will be\nhidden and not shown to the user until it has been displayed with the\nGUI_DLOG_SHOW command.\n\n  Supported optional args are:\n    names      list of user-viewable pane names for D_TABBED & D_HELPER dlogs.\n    panes      list of pane ids for D_TABBED and D_HELPER dialogs.\n    width      requested width of dialog in pixels.\n    height     requested height of dialog in pixels.\n    resizable  allows resizing in \"x\", \"y\", or \"both\" dimensions.\n    minwidth   minimum width of window in pixels.\n    minheight  minimum height of window in pixels.\n    maxwidth   maximum width of window in pixels.\n    maxheight  maximum height of window in pixels.\n\n\nGUI_DLOG_SIMPLE (intDescr strTitle -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then\nthis primitive can be used to generate a simple dialog on their\nscreen.  By \"simple\" I mean just an empty window with no controls.\nThe intDescr argument specifies what connection descriptor to\ncreate the dialog for (ie: what user's screen to show it on), and\nthe strTitle arg specifies what the title of the dialog will be.\nThis returns a string containing the dialogid, used by other prims\nto add controls or make various changes.  This dialog will be hidden\nand not shown to the user until it has been displayed with the\nGUI_DLOG_SHOW command.  GUI_DLOG_SIMPLE is actually an inserver\nconvenience macro that uses GUI_DLOG_CREATE.\n\n\nGUI_DLOG_TABBED (intDescr strTitle dictPages -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then\nthis primitive can be used to generate a tabbed dialog on their\nscreen.  By \"tabbed\" I mean a window with a tabbed notebook, similar\nto Win95 \"property sheets\", with three standard buttons at the bottom.\nThe standard buttons return values of \"_ok\", \"_cancel\", and \"_apply\".\nThe intDescr argument specifies what connection descriptor to create\nthe dialog for (ie: what user's screen to show it on).  The strTitle\narg specifies what the title of the dialog will be.  The dictPages\nargument is a dictionary array of page ids and display names to be\ncreated.  (ids as dictionary keys, display names as vals) This prim\nreturns a string containing the dialogid, used by other prims to add\ncontrols or make various changes.  When you create a new control, you\ncan specify which page to put it in by passing a pageid in as the\nvalue of the \"pane\" argument.  This dialog will be hidden and not\nshown to the user until it has been displayed with the GUI_DLOG_SHOW\ncommand.  GUI_DLOG_SIMPLE is actually an inserver convenience macro\nthat uses GUI_DLOG_CREATE.\n\n\nGUI_DLOG_HELPER (intDescr strTitle dictPages -- strDlogID)\n\n  If a user has a client that can support the MCP GUI protocol, then\nthis primitive can be used to generate a helper dialog on their\nscreen.  By \"helper\" I mean a dialog similar to a Win95 wizard dialog.\nThe standard buttons return values of \"_cancel\", and \"_finish\".\nThe intDescr argument specifies what connection descriptor to\ncreate the dialog for (ie: what user's screen to show it on), and\nthe strTitle arg specifies what the title of the dialog will be.\nThe dictPages argument is a dictionary array of page ids and display\nnames to be created.  (ids as dictionary keys, display names as vals)\nThis returns a string containing the dialogid, used by other prims\nto add controls or make various changes.  When you create a new\ncontrol, you can specify which page to put it in by passing a pageid\nin as the value of the \"pane\" argument.  This dialog will be hidden\nand not shown to the user until it has been displayed with the\nGUI_DLOG_SHOW command.  GUI_DLOG_SIMPLE is actually an inserver\nconvenience macro that uses GUI_DLOG_CREATE.\n\n\nGUI_DLOG_SHOW (strDlogID -- )\n\n  Forces a given dialog to be shown to the user.  The strDlogId is what\nwas returned by the GUI_DLOG_CREATE (or similar) command.\n\n\nGUI_DLOG_CLOSE (strDlogID -- )\n\n  Forces a given dialog to be closed and destroyed.  The strDlogId is\nwhat was returned by the GUI_DLOG_CREATE (or similar) command.\n\n\nGUI_CTRL_CREATE (strDlogID strType strCtrlID dictArgs -- )\n\n  Creates a new control in a given dialog.  strDlogID contains the dlogid\nreturned from a GUI_DLOG_SIMPLE (or similar) command.  strType contains\nthe control type.  To make debugging easier and faster, MUF $defs have\nbeen provided for each control type.  They are:\nC_DATUM, C_LABEL, C_IMAGE, C_HRULE, C_VRULE, C_BUTTON, C_CHECKBOX,\nC_RADIOBTN, C_EDIT, C_MULTIEDIT, C_COMBOBOX, C_SPINNER, C_SCALE,\nC_LISTBOX, C_MENU, C_FRAME, C_NOTEBOOK.\nIf you use these instead of the actual type name strings, then if you\nmistype one, it will throw an error when trying to compile, instead of\nwhen you try to run it.  The strCtrlID arg is the id to give the control,\nfor use in reading the values back later, or modifying the control.\ndictArgs is used to pass any other arguments needed to create the control.\nThis will be used by almost all controls.  It is a dictionary array that\ncontains argnames as keys, each with an argument value.\n\n\nGUI_VALUES_GET (strDlogID -- dictValues)\n\n  Returns a dictionary containing all the control values for the given\ndialog.  The keys are the control ids.\n\n\nGUI_VALUE_GET (strDlogID strCtrlID -- arrValue)\n\n  This gets the current value of the given GUI control, and returns it as a\nstring list array.\n\n\nGUI_VALUE_SET (strDlogID strCtrlID strValue -- )\n\n  Sets the value of a given control in a given dialog.\n\n\nGUI_CTRL_COMMAND (strDlogID strCtrlID strCommand dictArgs -- )\n\n  This is the generic primitive for executing a GUI control specific command.\nThe dictionary contains the arguments for the given command.\n\nAt the time of this writing, the following commands are supported:\n\n\"insert\" Inserts text or list items into the given control.\n        Takes the following arguments:\n        \"values\" list of values or text to insert.\n        \"before\" position in widget to insert before.  Defaults to \"end\".\n\n\"delete\" Deletes text or list items from the given control.\n        Takes the following arguments if the widget is a listbox:\n        \"items\" The list of listbox items to delete, given by index.\n        Takes the following arguments if the widget is not a listbox:\n        \"first\" gives the first item to delete.\n        \"last\"  gives the last item of the range to delete.  If not given,\n                this defaults to the same value as \"first\".\n\n\"select\" Selects text or list items in the given control.\n        Takes the following arguments if the widget is a listbox:\n        \"items\" The list of listbox items to select, given by index.\n                All other items will be deselected.\n        Takes the following arguments if the widget is not a listbox:\n        \"first\" gives the first character to select.\n        \"last\"  gives the last character of the range to select.  If not\n                given, this defaults to the same value as \"first\".\n\n\"show\"   Scrolls the given item or character into view.\n        Takes the following arguments:\n        \"position\" The item or character position to make visible.\n\n\"cursor\" Moves the cursor of the given control.\n        Takes the following arguments:\n        \"position\" The item or character to move the cursor to or before.\n\n\nMCP GUI Options:\n\n  The MCP GUI package has several common options used when creating controls\nin dialog.  These options are common to almost all control types.  They\nare as follows:\n\n    value     Holds the value of the control.\n    valname   Specifies the name used with GUI_VALUE_GET/SET, to refer to the\n            value for this control.  Multiple controls can share the same\n            valname, in the case of radio buttons and the like.\n    report    If set to 1, image, checkbox, and radiobutton controls will send\n            a 'buttonpress' event when the user clicks on them.  All other\n            control types send a 'valchanged' gui event when their value\n            is changed If the value is changed several times within a few\n            seconds, only the final value is guaranteed to have a valchanged\n            event.  It is possible to receive valchanged events even though\n            the value appears to have not changed.\n    pane      The pane in which to place this control.  Some controls, like\n            the notebook or frame controls, create new panes in which you\n            can place controls.\n    newline   If 1, next control will be at the beginning of the next row.\n            If 0, next control will be in the next column to the right,\n            taking into account colspan and colskip.  Defaults to 1.\n    sticky    Which sides of the cell this control sticks to.  This is a\n            string with any or all of the letters 'n', 's', 'e', or 'w',\n            corresponding to north, south, east, and west.\n    row       If given, forces the control to be placed in the given row.\n    column    If given, forces the control to be placed in the given column.\n    rowspan   Number of rows this control spans across.  Defaults to 1.\n    colspan   Number of columns this control spans across.  Defaults to 1.\n    colskip   Number of columns to skip before placing this control.\n            Defaults to 0.\n    minwidth  Minimum width of control in pixels.\n    minheight Minimum width of control in pixels.\n    hweight   How much the starting column of this control should expand.\n            When filling unused space, if there are two columns, one with\n            hweight 2 and the other with hweight 1, then the column with\n            hweight 2 will be expanded twice as much as the other column.\n            The default hweight is 0.  Note that the last control in the\n            given column sets the hweight for the column.  If no hweights\n            are given in a pane, then if the pane is forced to be wider\n            than the contained controls, the empty space will be placed\n            in the right side of the pane.\n    vweight   How much the starting row of this control should expand.\n            When filling unused space, if there are two rows, one with\n            vweight 2 and the other with vweight 1, then the row with\n            vweight 2 will be expanded twice as much as the other row.\n            The default hweight is 0.  Note that the last control in the\n            given row sets the vweight for the row.  If no vweights\n            are given in a pane, then if the pane is forced to be taller\n            than the contained controls, the empty space will be placed\n            in the bottom of the pane.\n    toppad    Number of pixels padding to add above this control.\n    leftpad   Number of pixels padding to add to the left of this control.\n\n\nC_DATUM ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Datum control in a GUI dialog.  The Datum control is a non-\nvisible control that just holds a value.  It's useful for keeping program\nstate information.\nThe control has no control-specific options.\n\n\nC_MENU ( -- s)\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a menu control in a GUI dialog.  The menu control is a pull-down\nmenu that a user can select commands from.  It can contain labels, hrules,\nbuttons, checkboxes, radiobuttons, and other menus.\nThe control options specific to this type of control are:\n    text    The text to display as the user-visible name of this menu. For\n            example: \"Settings\", \"Help\", etc.\n    pane    The id of the menu in which to place this menu as a cascading\n            menu.  If specified as \"\", then this is a toplevel menu.\n\n\nC_LABEL ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a text label control in a GUI dialog.  The label control is just\na text label, nothing more.\nThe control options specific to this type of control are:\n    value    Contains the text to be displayed.\n    justify  Which way to justify the text, if word wrapped.  Can be one of\n            left, right, or center.\n    maxwidth The max width in pixels for the label, before it word wraps.\n\n\nC_IMAGE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create an image control in a GUI dialog.  The image control is a picture\nwhose image is loaded from a URL.\nThe control options specific to this type of control are:\n    value    Holds the url of the image to be displayed.\n    width    The width of the image in pixels.  This is required.\n    height   The height of the image in pixels.  This is required.\n\n\nC_HRULE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Horizontal Rule control in a GUI dialog.\nThe hrule control is just a horizontal line, nothing more.\nThe control options specific to this type of control are:\n    height   Number of pixels of vertical thickness of the horizontal line.\n\n\nC_VRULE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Vertical Rule control in a GUI dialog.\nThe vrule control is just a vertical line, nothing more.\nThe control options specific to this type of control are:\n    width    Number of pixels of horizontal thickness of the vertical line.\n\n\nC_BUTTON ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Button control in a GUI dialog.\nThe Button control is a simple button the user can press.\nThe control options specific to this type of control are:\n    text     The text label that will show on the button face.\n    width    Number of characters text the button should be able to hold.\n    dismiss  If 1, the dialog will be dismissed when this button is pressed.\n            Defaults to 1.\n\n\nC_CHECKBOX ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a CheckBox control in a GUI dialog.\nThe CheckBox control is used for indicating simple \"on/off\" boolean settings.\nThe control options specific to this type of control are:\n    text     The text label that will show to the right of the checkbox.\n    onvalue  The value this control should have when checked.\n    offvalue The value this control should have when not checked.\n    value    The current state/value of the control.  This should match either\n            the value of the \"onvalue\" or \"offvalue\" argument.\n\n\nC_RADIOBTN ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a radio button control in a GUI dialog.\nThe radio button control is used for selecting one of a number of options.\nThe control options specific to this type of control are:\n    text     The text label that will show to the right of the radio button.\n    valname  The name used to refer to the value of this radio button group.\n            A radio button group is defined as radio buttons that share the\n            same valname.\n    selvalue The value of this radio button group, when this is selected.\n    value    The current state/value of the radio button group.  This should\n            match one of the selvalues of a radio button in this group.\n\n\nC_EDIT ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a single-line text Edit control in a GUI dialog.\nThe Edit control is used for single-line text string editing.\nThe control options specific to this type of control are:\n    text     The text label that will show to the left of the control.\n            Defaults to \"\" (no label).  If there is a label, then this\n            control will be split across two columns, with the label in\n            the first one, the edit control in the second.\n    value    The current contents/value of the control.\n    maxlen   The maximum string length allowed.  Defaults to 1024 chars.\n    width    Number of average character widths wide this control should be.\n            Defaults to 40 characters wide.\n    height   Number of lines high this control will be.  Defaults to 1.\n            If this is greater than 1, then text will wrap as you type it,\n            but you still won't be able to insert carriage returns.\n\n\nC_MULTIEDIT ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Multi-line text Edit control in a GUI dialog.\nThe MultiEdit control is used for multi-line text string editing.\nThe control options specific to this type of control are:\n    value    The current contents/value of the control.\n    width    Number of average character widths wide this control should be.\n            Defaults to 40 characters wide.\n    height   Number of lines high this control will be.  Defaults to 1.\n    font     Specifies whether the font used is \"fixed\" or \"proportional\".\n\n\nC_COMBOBOX ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Win95 style combobox with a pulldown menu of options.\nThe ComboBox control is used for selecting from multiple standard options\nin a compact form factor.  Optionally the user can enter arbitrary data.\nThe control options specific to this type of control are:\n    text     The text label that will show to the left of the control.\n            Defaults to \"\" (no label).  If there is a label, then this\n            control will be split across two columns, with the label in\n            the first one, the combobox control in the second.\n    value    The current contents/value of the control.\n    width    Number of average character widths wide this control should be.\n            Defaults to 20 characters wide.\n    options  Contains a list of entries for the combobox pulldown menu, one\n            per line.\n    editable If 1, the user can edit the value arbitrarily.  If 0, then the\n            user can only pick a value from the combobox pulldown menu.\n            Defaults to 0\n    sorted   Causes the contents of the pulldown menu to be auto-sorted.\n\n\nC_LISTBOX ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a ListBox control in a GUI dialog.  The ListBox control is used\nfor selecting one or more entries from a list of options.\nThe control options specific to this type of control are:\n    value    The list of the currently selected list items, given as a list\n            of integers that refer to list positions.  0 is the first item.\n    font     Specifies whether the font used is \"fixed\" or \"proportional\".\n    width    Number of average character widths wide this control should be.\n            Defaults to 40 characters wide.\n    height   Number of lines high this control will be.  Defaults to 10.\n    options  The list of entries for the listbox contents, one per line.\n    selectmode  One of \"single\", \"multiple\", or \"extended\".  Specifies how\n            list item selection is performed, and whether more than one item\n            can be selected at a time.\n\n\nC_SPINNER ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Spinner control in a GUI dialog.  The Spinner control is used\nfor setting an integer value, that can be incremented and decremented via\nup and down buttons.\nThe control options specific to this type of control are:\n    value    The current integer value of the control.\n    text     If given, makes a label with the given text next to the spinner.\n    minval   The minimum integer value that this control can be set to.\n    maxval   The maximum integer value that this control can be set to.\n    width    Number of digits that this control should be able to hold.\n            Defaults to 12 digits.\n\n\nC_SCALE ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a Scale control in a GUI dialog.  The Scale control is used for\nsetting a floating point value, that can be changed by moving a slider.\nThe control options specific to this type of control are:\n    value      The current floating point value of the control.\n    text       If given, makes a label with the given text next to the scale.\n    minval     The minimum value that this control can be set to.\n    maxval     The maximum value that this control can be set to.\n    resolution This is the smallest change available via the slider.\n                Defaults to 1.\n    bigincrement  How much to change the value when the user clicks in the\n                bar on either side of the slider.  Defaults to 10.\n    digits     The number of significant digits of resolution for the value.\n    orient     The orientation, \"horiz\" or \"vert\".  (Defaults to horiz.)\n    length     The length of the long axis of the scale, in pixels.\n            Defaults to 100 pixels.\n    width      The length of the short axis of the scale, in pixels.\n            Defaults to 15 pixels.\n\n\nC_FRAME ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE\nto create a frame control in a GUI dialog.  Frame controls are used to\ncontain and organize other controls.  Frames can be either invisible\ncontainers that just organize the positions of other controls, or they\ncan be visible groupboxes with borders and labels.\nThe control options specific to this type of control are:\n    text        If set, the frame, as a groupbox, will have the given label.\n    visible     If set to 1, causes a border to be drawn around the frame.\n    collapsible This, is set to 1, allows the group box to be collapsed.\n    collapsed   If the frame is collapsible, this sets the state to collapsed.\n\n\nC_NOTEBOOK ( -- s )\n\n  This is a standard server define used in conjunction with GUI_CTRL_CREATE to\ncreate a tabbed notebook control in a GUI dialog.  Tabbed notebook controls\nare used to contain and organize other controls in multiple pages that the\nuser can select between.\nThe control options specific to this type of control are:\n    panes       The list of pane ids to create.  Those are used by other\n                controls, when you wish to specify which pane the control\n                is in.\n    names       The list of names that should be displayed on the pane's tabs.\n                The first name should be for the first pane, the second name\n                should be for the second name, etc.\n    width       The minimum width of the notebook's client area, in pixels.\n    height      The minimum height of the notebook's client area, in pixels.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Exception Handling\n----------------------------------------------------------------------------\n\n\n\n\nTRY ( i -- )\nCATCH ( -- s ) or CATCH_DETAILED ( -- a )\nENDCATCH ( -- )\n\n  The TRY statement marks the start of the TRY-CATCH block, and locks all\nbut the top i stack items against removal or alteration.  If code inside\nof a TRY-CATCH block gets an error, or attempts to remove or alter locked\nstack items, then execution immediately jumps to the CATCH statement.\nIf, instead, execution reaches the end of the TRY-CATCH block without\nerror, then the stack is unlocked, and execution is resumed after the\nENDCATCH statement.\n\n  On an error, the CATCH statement will pop off all stack items that were\nnot locked, to return the stack to a known state.  The stack will then\nbe unlocked, and the thrown error string will be pushed onto the stack.\nFinally, the code inside the CATCH-ENDCATCH block will then be executed.\nIf you have nested TRY-CATCH blocks, then the most recent TRY-CATCH\nblock will catch the error thrown.  If the error is thrown in another\ncalled function or program, then those calls are unwound back to the\nmost recent TRY-CATCH block.\n\n  The CATCH_DETAILED statement can be used in place of the CATCH statement.\nIt behaves identically to CATCH, except it pushes a dictionary onto the\nstack, instead of a string.  This dictionary holds much more detailed\ninformation about the thrown exception.  The following dictionary entries\nare currently supported:\n\n    \"error\"    The error message string, like what CATCH returns.\n    \"instr\"    The name string of the instruction which threw the error.\n    \"line\"     The integer program line number where the error was thrown.\n    \"program\"  The dbref of the program in which the error was thrown.\n\n  The ABORT primitive may be used to throw an arbitrary error anywhere.\nIf you need to re-propagate an error, you can use ABORT.\n\nExample code:\n    : get_a_prop ( d s -- s )\n        2 TRY\n            getpropstr\n        CATCH\n            pop (We got an error trying to read the prop.  Ignore it.)\n            \"\"\n        ENDCATCH\n    ;\n\n\nABORT ( s -- )\n\n  Aborts the MUF program with an error.  ie:  '\"Bad vibes.\" abort' would\nStop the MUF program and tell the user a message like:\nProgrammer error.  Please tell Revar the following message:\n#1234 (line 23) ABORT: Bad vibes.\n\n\nCHECKARGS (??? s -- )\n\n  Takes a string argument that contains an expression that is used\nto test the arguments on the stack below the given string.  If they\ndo not match what the expression says should be there, then it aborts\nthe running program with an appropriate Program Error Message.  The\nexpression is formed from single character argument tests that refer\nto different argument types.  The tests are:\n\n  a - function address.\n  d - dbref.  (#-1, #-2, #-3 are okay)\n  D - valid, non-garbage dbref.  (#-1, #-2 NOT allowed.  #-3 is okay)\n  e - exit dbref.  (#-1, #-2 allowed)\n  E - exit dbref.  (#-1, #-2 NOT allowed)\n  f - program dbref.  (#-1, #-2 allowed)\n  F - program dbref.  (#-1, #-2 NOT allowed)\n  i - integer.\n  l - lock boolean expression.\n  n - floating point number.\n  p - player dbref.  (#-1, #-2 allowed)\n  P - player dbref.  (#-1, #-2 NOT allowed)\n  r - room dbref.  (#-1, #-2 allowed)  (#-3 is a room)\n  R - room dbref.  (#-1, #-2 NOT allowed)  (#-3 is a room)\n  s - string.\n  S - non-null string.\n  t - thing dbref.  (#-1, #-2 allowed)\n  T - thing dbref.  (#-1, #-2 NOT allowed)\n  v - variable.\n  x - dictionary.\n  y - array.  (dictionary allowed)\n  Y - array.  (dictionary NOT allowed)\n  ? - any stack item type.\n\n  Tests can be repeated multiple times by following the test with a number.\nie: '\"i12\" checkargs' would test the stack for 12 integers.\n\n  The last test in the string expression will be done on the top stack item.\nTests are done from the top of the stack down, in order, so the last test\nthat fails in a string expression will be the one that the Program Error\nwill be given for.  ie: '\"sdSi\" checkargs' will test that the top stack\nitem is an integer, then it tests that the next item down is a non-null\nstring, then it tests the third item from the top to see if it is a dbref,\nand lastly it tests to make sure that the 4th item from the top is a string.\n\n  Spaces are ignored, so \"s d i\" is the same as \"sdi\".  However, multipliers\nare ignored if they follow a space, so \"s 4d i\" is also the same as \"sdi\".\nThis is because you are basically telling it to repeat the space 4 times,\nand since spaces are ignored, it has no effect.\n\n  If you have a function that takes a stack item of any type, you can use\nthe \"?\" test.  \"?\" will match a string, integer, dbref, or any other type.\n\n  Since sometimes arguments are passed in ranges, such as the way that the\nexplode primitive returns multiple strings with an integer count on top,\nthere is a way to group arguments, to show that you expect to receive a\nrange of that type.  ie: '\"{s}\" checkargs' would test the stack for a set\nof strings like '\"first\" \"second\" \"third\" \"fourth\" 4' where the top stack\nitem tells how many strings to expect within the range.\n\n  Sometimes a function takes a range of paired arguments, such as:\n'\"one\" 1 \"two\" 2 \"three\" 3 \"four\" 4 4' where the count on the top of the\nrange refers to the number of pairs.  To test for the range given above,\nyou would use '\"{si}\" checkargs' to tell it that you want to check for\na range of paired strings and integers.  You can group as many argument\ntests together in a range as you would like.  ie: you could use \"{sida}\"\nas an expression to test for a range of related strings, integers, dbrefs,\nand function addresses.\n\n  Since the argument multipliers refer to the previous test OR range, you\ncan test for two string ranges with the test '\"{s}2\" checkargs'.  ie:\nIt would succeed on a stack of: '\"one\" \"two\" \"three\" 3 \"four\" \"five\" 2'.\n'\"{s2}\" checkargs', however, would test for one range of paired strings.\nie: It would succeed with a stack of: '\"one\" \"1\" \"two\" \"2\" \"three\" \"3\" 3'.\n\n  If, for some reason, you need to pass a range of ranges to a function,\nyou can test for it by nesting the braces.  ie: '\"{{s}}\" checkargs'\n\n  Now, as one last example, the primitive notify_exclude, if we were to test\nthe arguments passed to it manually, would use the test '\"R{p}s\" checkargs'\nto test for a valid room dbref, a range of player dbrefs or #-1s, and a\nstring.\n\n\n\n\n\n----------------------------------------------------------------------------\n                                 Debugging\n----------------------------------------------------------------------------\n\n\n\n\nDEBUG_ON ( -- )\n\n  Turns the programs debug stack trace on.\n\n\nDEBUG_OFF ( -- )\n\n  Turns the programs debug stack trace off.\n\n\nDEBUG_LINE ( -- )\n\n  Displays a single line of debug stack trace if the player running the program\ncontrols it.\n\n\nDEBUGGER_BREAK ( -- )\n\n  If the user controls the currently running program, and the program hasn't\never backgrounded, this will force the program into the interactive MUF\ndebugger at the current location.  If the user was already in the MUF\ndebugger, this will force a breakpoint stop at the current location.\n\n\nThe MUF Debugger:\n\n  To use the interactive debugger, set the ZOMBIE (Z) flag on a program.  When\nyou run a programm you own which is set ZOMBIE, you will be placed in the\ninteractive MUF debugger.\n  When you enter the debugger, the program counter will be placed at the entry\npoint of the MUF.  This should always be the start of a function.  From\nthere, you may set breakpoints, examine or change the stack or variables,\nlist lines of code, step through, or continue execution.\n  Every time execution halts and returns you to the debugger, the argument\nstack is displayed, as well as a dump of the current line.  If execution\nis at the beginning of the line, the actual line of source will be\ndisplayed, otherwise the compiled instructions will be displayed with the\ncurrent instruction marked by surrounding braces.\n\n\nDebugger commands:\n\n  cont            continues execution until a breakpoint is hit.\n  finish          completes execution of current function.\n  step [NUM]      executes one (or NUM, 1) lines of muf.\n  stepi [NUM]     executes one (or NUM, 1) muf instructions.\n  next [NUM]      like step, except skips CALL and EXECUTE.\n  nexti [NUM]     like stepi, except skips CALL and EXECUTE.\n  break LINE#     sets breakpoint at given LINE number.\n  break FUNCNAME  sets breakpoint at start of given function.\n  breaks          lists all currently set breakpoints.\n  delete NUM      deletes breakpoint by NUM, as listed by 'breaks'\n  where [LEVS]    displays function call backtrace of up to num levels deep.\n  stack [NUM]     shows the top num items on the stack.\n  print v#        displays the value of given global variable #.\n  print lv#       displays the value of given local variable #.\n  trace [on|off]  turns on/off debug stack tracing.\n  list [L1,[L2]]  lists source code of given line range.\n  list FUNCNAME   lists source code of given function.\n  listi [L1,[L2]] lists instructions in given line range.\n  listi FUNCNAME  lists instructions in given function.\n  words           lists all function word names in program.\n  words PATTERN   lists all function word names that match PATTERN.\n  exec FUNCNAME   calls given function with the current stack data.\n  prim PRIMITIVE  executes given primitive with current stack data.\n  push DATA       pushes an int, dbref, var, or string onto the stack.\n  pop             pops top data item off the stack.\n  help            displays this help screen.\n  quit            stop execution here.\n\n\nBreakpoints:\n\n  Breakpoints can be set on a specefic line number, or on execution of a\nspecific word.  To set a breakpoint, simply enter 'break LINE', as in\n'break 123', or 'break WORD', as in 'break do-something'.  To list current\nbreakpoints, simply enter the command 'breaks'.  To delete a breakpoint,\n'delete NUM', where NUM is the number 'breaks' listed for that breakpoint.\nAn implied breakpoint is always triggered on return of words after an\nexecute, or an EXEC, when the line they were called from was stepped with\nnext.\n  A breakpoint is triggered after execution of the program has continued with\neither 'continue', 'finish', or while in a word called when 'next' or\n'nexti' is used.\n\n\nInstruction notation as given by DEBUG dumps and the MUF debugger:\n\n    PRIMITIVE:      A call to that primitive. (As in POP or ROTATE)\n    NUM:            An integer. (As in 5 or -154)\n    #dbref:         An object dbref. (As in #1 or #63516)\n    \"Text\":         A string.  (As in \"Wizard\" or \"Hello world!\") If it is\n                    followed by _, there is more in the string than shown.\n    [Lock]:         A lock in its native structure. (As in [#0|!#0])\n    VNUM:           Variable number NUM. (As in V0 or V10)\n    LVNUM:          Local variable number NUM. (As in LV2 or LV5)\n    SVNUM:          Scoped function variable number NUM. (As in SV2 or SV5)\n    (word):         The start of a word. (As in (do-something))\n    'word:          The address of word. (As in 'do-something)\n    '#dbref'word:   The address of word in another program.\n                    (As in '#2345'do-something)\n    EXEC->word:     A subroutine call to word. (As in EXEC->do-something)\n    JMP->word:      A jump to word. (As in JMP->do-something)\n    JMP->lineNUM:   An internal jump used by IF-ELSE-THEN and loops.\n                    (As in JMP->line9)\n    IF->lineNUM:    An internal IF jump.  If the top stack item is 0, the jump\n                    occurs, otherwise this is just a no-op. (As in IF->line9)\n    ???:            An unknown instruction type. (As in ???)\n    ???<file:line>: An instruction that has been freed.  If you see this please\n                    report it to the current server code maintainer.\n                    (As in ???<p_db.c:1042>)\n\nSome tokens are just used as placeholders, and disappear as soon as the MUF\nis compiled.  These are BEGIN, and THEN.  In addition, FOR loops will\nproduce at least two extra instruction, and an IF->lineNUM.  FORITER, the\niteration counter, and FORPOP, which cleans up from the for loop.  If you\nJMP or EXIT out of a word from nested FOR loops, you will see a FORPOP\nbefore the JMP or EXIT for each nexted FOR loop.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               Miscellaneous\n----------------------------------------------------------------------------\n\n\n\n\nVERSION ( -- s)\n\n  Returns the version of this code in a string.\n\n\nSMTP_SEND ( s:to s:to_name s:subject a:body -- i)\n\n  Sends an email to email address 'to'.  'to_name' can be an empty string or\n  it may be the name of the recipient.  'subject' will be the email subject,\n  and 'body' will be an array that will be joined together with carriage\n  return and newline to form the message body.\n\n  The rules for how 'body' is joined together and what can be in 'body' are\n  the same as ARRAY_JOIN.\n\n  The return value will be an integer.  0 if the send was successful, -1\n  if SMTP is not configured for this server and thus not available, or -2 if\n  there was an error sending.  The error message will be in the MUCK's\n  status log instead of output to the user for security reasons.\n\n  The following @tune parameters are used by this program.  They are only\n  visible / settable by One:\n\n    smtp_server          The host to connect to\n    smtp_port            The port to connect to\n    smtp_ssl_type        0 for StartTLS, 1 for TLS, 2 for no SSL\n    smtp_no_verify_cert  If true, do not verify server's SSL cert.\n    smtp_auth_type       0 for CRAM_MD5, 1 for none, 2 for plain, 3 for login\n    smtp_user            User for authentication\n    smtp_password        Password for authentication\n    smtp_from_name       The name to use in the From message header\n    smtp_from_email      The email to use in the From message header\n\n  Note that, unfortunately, the password is not encrypted on disk and is in\n  plain text in @tune if logged in as the One user.\n\n  WARNING: This primitive will (currently) block the MUCK server when sending\n  mail.  The timeouts used are pretty aggressive so we won't allow extended\n  blocking, but it is easily possible for the MUCK to pause for a few seconds\n  while a mail is sent.  We have future plans to remedy this, but it is\n  something you should be aware of as a \"side effect\".\n\n  This primitive is Wizbit only.\n\n\nFORCE (d s -- )\n\n  Forces player d to do action s as if they were @forced.  (wizbit only)\n\n\nFORCE_LEVEL ( -- i)\n\n  Returns non-zero if the code we are running was triggered by an @force.\n\n\nFORCEDBY ( -- d)\n\n  Returns the dbref of the most recent object forcing the code to run, or\n  #-1 if none. (Wizbit only)\n\n\nFORCEDBY_ARRAY ( -- a)\n\n  Returns an array containg the dbrefs of all objects forcing the code to run,\n  most recent first. (Wizbit only)\n\n\n\n\n\n----------------------------------------------------------------------------\n                                   Basics\n----------------------------------------------------------------------------\n\n\n\n\nThe word 'me' refers to yourself. Some things to do when starting out:\n1) give yourself a description with \"@describe me=<description>\", then\n    look at yourself with \"look me\".\n2) prevent anyone else from robbing you with \"@lock me=me\".\n3) set your gender, if you wish it known, with \"@set me=sex:male\" or\n    \"@set me=sex:female\" (or \"@set me=sex:neuter\" to be an 'it').\n\n\nSAY <message>\n\"<message>\n\n  Says <message> out loud to everyone in the room.  If your name is Igor,\nand you typed 'say Hello everyone!', you will see 'You say, \"Hello everyone!\"'\nand everyone else in the room will see 'Igor says, \"Hello everyone!\"'\nThere's also an abbreviated form of the 'say' command: '\"Hello everyone!'\n\n\nPOSE <message>\n:<message>\n\n  Poses a message to everyone in the room.  This is used for actions.  i.e.:\nif your name was Igor, and you typed 'pose falls down.', everyone would see\n    Igor falls down.\nThere's also an abbreviated form of the 'pose' command: ':falls down.'\n\n\nPAGE <player>\nPAGE <player>=<message>\n\n  In the first form, this tells a player your location, like\n'You sense that <pager> is paging you from <location>.'\n\n  In the second form, with the <message>, the user receives a message like:\n'<pager> pages from <location>: \"<message>\"'\n\n  If a player is set HAVEN, you cannot page them.  You will instead be told,\n'That player does not wish to be disturbed.'\n\n  Note: Most systems use a MUF program with a global 'page' action, which\ntakes the place of the built-in 'page' command, and has more features.\nUsually, you can see the extra features of this MUF page program by using\nthe command 'page #help'.\n\n\nWHISPER <player>=<message>\n\n  Whispers the message to the named person, if they are in the same room\nas you.  No one else can see the message.  Wizards can use the form\n'whisper *<player>=<message>' to whisper to players in other rooms.\n  Note: Most systems use a MUF program with a global 'whisper' action, which\ntakes the place of the built-in 'whisper' command, and has more features.\n\n\nLOOK <object>\n\n  Looks around at the current room, or at <object> if specified.\nFor players, displays their description and inventory, for things,\ntheir description, and for rooms, their name, description, succ/fail\nmessage, and contents.  Also triggers osucc/ofail messages on rooms.\nPrograms are triggered accordingly on desc/succ/fail fields.\n\n\nINVENTORY\n\n  Lists what you are carrying. This can usually be abbreviated to inv or i.\n\n\nGET <object>\nGET <container>=<object>\n\n  Attempts to pick up <object> in the first form.  The lock on <object> is\nchecked for a success (true), and the normal path of success/fail is then\ntaken.  On success the object is placed in your inventory.\n  \n  In the second form, attempts to get <object> from the given <container>.\nThe _/clk lock property on <container> is tested, and if it is true, then\nit checks to see if the standard _/lok lock property on <object> tests true.\nIf both locks pass, then <object> is moved into the player's inventory.\nIf there is no _/clk property on <container> it defaults to failing.\nThe _/lok property, on <object>, on the other hand, defaults to passing.\n@succ/@fail messages are not displayed, when fetching something from a\ncontainer.\n\n  TAKE can also be used instead of GET.\n\n\nPUT <thing>=<container>\n\n  Attempts to put <thing> into the given <container>.  The _/clk lock\nproperty on <container> is tested, and if it is true, then it checks\nto see if the standard _/lok lock property on <thing> tests true.\nIf both locks pass, then <thing> is moved from the player's inventory\ninto the given container.  If there is no _/clk property on <container>\nit defaults to failing.  The _/lok property, on <thing>, on the other\nhand, defaults to passing.  @succ/@fail messages are not displayed,\nwhen putting something into a container.\n\n  You can also put programs in containers, much the same as you can with\nthings.  Throw, put, and hand can be used instead of drop.\n\n\nDROP <thing>\n\n  Drops the <thing> if you are holding it.  It moves the thing to the room\nyou are in, unless the thing's STICKY flag is set, or the room has a\ndrop-to.\n\n  If the thing's STICKY flag is set, it will go home when dropped.\n\n  If the room's drop-to is set, and the room has its STICKY flag set,\nthen the thing will stick around in the room until all players have left.\nIf the room is not set sticky, then the thing will be sent to the location\ngiven by the room's drop-to.\n\n  You can also drop programs, much like things, but they are not affected\nby room droptos or STICKY flags.\n\n  An '@drop' message can be set which will be shown to the player dropping\nthe object, and an '@odrop' message can be set, which will be shown to the\nother players in the room.  Throw, put, and hand can be used instead of drop.\n\n\nGO <direction>\nGO home\nMOVE <direction>\nMOVE home\n\n  Move the player in a specific direction.  'go home' is a special\ncommand that returns to you to your starting location.  'go' may be\nomitted by simply specifying a direction, and 'goto', 'move' are the\nsame as 'go'.\n\n  Examples:\n    go home            teleport home, *leaving behind all possessions*\n                       (See 'help home')\n    goto kitchen       go to the exit called 'kitchen'\n    move up            move in the direction 'up', if it exists\n    north              move to the exit 'north', if it exists\n\n\nHOME\n\n  Sends you home, no matter where you are. You retain your pennies, but\nany objects you are carrying leave your inventory and return to their own\nhomes. See HOMES.\n\n\nGoal:\n\n  There is no ultimate goal to this game, except to have fun.  There are\npuzzles to solve, scenery to visit, and people to meet. There are no\nwinners or losers, only fellow players. Enjoy.\n\n\nSCORE\n\n  Displays how many pennies you are carrying.  Pretty meaningless.\n\n\nBuilding and some other actions cost money.  How to get money:\n    1) Get pennies from the local bank.\n    2) Find pennies.\n    3) Get killed.\n    4) Be given money by another player.\n    5) Rob someone.\nOnce you reach 10000 pennies, it becomes difficult to acquire\nmore.  Wizards don't need money to do anything.\n\n\nGIVE <player|object>=<amount>\n\n  Gives <amount> pennies from your supply to <player>.  Mortals may only\ngive positive amounts and may not cause a player to have more than 10000\npennies.  Wizards do not affect their penny supplies by giving to others,\nand may also give pennies to objects, changing that object's value.\n\n\nEXAMINE <object>[=proppattern]\n  \n  If you do not control <object>, it prints the owner of the object.\n  \n  If you control <object>, examine will give you a complete breakdown of\nall standard fields, flags, etc that are associated with the object.\nMPI in the the displayed fields will be shown raw, without executing it.\n  \n  If the optional proppattern field is supplied, then it instead lists\nout all the properties that matches the given wildcard pattern.  If the\npattern ends with '/' then all the sub-properties in the matching propdirs\nwill be listed.  If the pattern ends with **, then all sub-propdirs of\nthe matching properties will be shown recursively.\n  \n  ex obj=/        list all root properties on obj.\n  ex obj=/**      list ALL properties on obj.\n  ex obj=foo/     list all properties in the foo propdir on obj.\n  ex obj=foo/**   list all props in the foo/ propdir, and all contained dirs.\n  ex obj=foo*bar  list root props whose name start with foo and end with bar.\n\n\nHELP\nHELP alpha\nHELP category\nHELP <subject>\n\n  With no arguments, this command shows a brief summary of basic\ncommands for playing the game.  With <subject> specified, it shows\ndetailed information on that topic.  Use 'help alpha' or\n'help category' to see an alphabetical or categorized list of topics,\nrespectively.  Seeing as you are reading this, you probably already\nunderstand how this works.\n\n  Examples:\n    help               see the introductory information\n    help alpha         show an alphabetical list of topics\n    help category      show a categorized list of topics\n    help basics        read commands in the category 'Basics'\n\n\nINFO\nINFO <topic>\nINFO <topic>=<range>\n\n  See what information files are available or read information on a\nparticular topic, optionally limiting to a specific set of lines.\n\n  Examples:\n    info                 list available information files\n    info muf-cheat       read the information file 'muf-cheat'\n    info muf-cheat=180   read line 180 from 'muf-cheat'\n    info muf-cheat=5-10  read lines 5-10 from 'muf-cheat'\n\n\nMPI\nMPI alpha\nMPI category\nMPI <subject>\n\n  With no arguments, this command shows a brief summary of MPI\nreference info.  With <subject> specified, it shows detailed\ninformation on that topic.  Use 'mpi alpha' or 'mpi category' to see an\nalphabetical or categorized list of topics, respectively.\n\n  Examples:\n    mpi                see the introductory information\n    mpi alpha          show an alphabetical list of topics\n    mpi category       show a categorized list of topics\n    mpi Looping        read commands in the category 'Looping'\n\n\nMOTD\nMOTD clear\nMOTD <text>\n\n  See the current message of the day.\n  Wizards may clear the message with 'clear', or set a new message by\ntyping it after the command.  If longer than 68 characters, the rest of\nthe message is split at the nearest word into a new line.\n\n  Examples:\n    motd               print the message of the day\n    motd clear         clear the current message of the day\n    motd Fresh start!  set the message of the day to 'Fresh start!'\n\n\nNEWS [<topic>]\n\n  Displays the current news file for the game. Must be typed in full.  If a\ntopic is given, then it displays the information on that specific topic.\n\n\n@PASSWORD <old password>=<new password>\n\n  This changes your password.\n\n\nGRIPE <message>\n\n  Sends <message> to the system maintainer.  Gripes are logged for\nlater reference; also, if the system maintainer is connected he will\nreceive the gripe real-time when the gripe is made.\n\n\nWHO [<player>]\n\n  Must be in all capitals, and typed in full. Lists the name of every\nplayer currently logged in, and how long they have been inactive. If\ngiven a player name, it displays only the matching names and idle times.\nWizards also get a display of the host the player is connected from.\n\n  Examples:\n    WHO                show all players online\n    WHO Az             show online players that start with 'Az'\n\n\n@DOING [me][=[<text>]]\n\n  Shows your doing message, or sets it to <text>.  If <text> is not specified,\nthe field is cleared.  This uses the property '_/do'.\n\nA doing message is shown when typing WHO.\n\n\nQUIT\n\n  Must be in all capitals, and typed in full. Logs out of your character\nand leaves the game. Your character remains at the location you are in when\nyou log out, although it might be moved elsewhere while you are 'asleep.'\n\n\nDISEMBARK\nLEAVE\n\n  Exit a vehicle, arriving at the destination.  If you can't leave, it\nshows an error message instead.\n\n\nUPTIME\n\n  Displays the amount of time the server has been running.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               Building Help\n----------------------------------------------------------------------------\n\n\n\n\nObject Types:\n\n  There are 5 types of objects:\nPlayers are the objects users log in as; their avatars.\nThings are objects that can be carried, or that can sit about a room.\nRooms are locations that contain players and things and linked exits.\nExits are the means by which players move between rooms.\nPrograms are player-written extensions to the game.\n\n  The first letter following an object's ID number indicates the type:\nP(layer), E(xit), F(orth program), or R(oom).  Otherwise it's a Thing.\n\n\nReferring to Objects:\n\n  You can specify objects (things, players, exits, and rooms) by name if\nthey're in your inventory or in the same room as you. You need only type\nenough letters of the name to be unambiguous. You can also specify objects\nanywhere by their DBRef, in the form #<dbrefnumber>. Players in other rooms\nmay be specified in the form *<player name>. The keywords 'me' can be used\nfor yourself, and 'here' for the room you're in.\n\n  Each object has an ID number (the 'dbref'), which appears after the\nname of the object, and is followed by any flags on the object; Ie:\nFoo(#3672PB) is a Player, named Foo, set BUILDER.  The number is a\ndatabase reference, and is used to specify objects at a distance;\nIe. 'examine #3672'. You will only see the ID number of objects you\nown, or which are set LINK_OK, ABODE, or CHOWN_OK. Wizards can see the\nnumbers and flags on all objects.\n\n\nControl:\n\nThere are 3 rules to controlling objects:\n  1) You control anything you own.\n  2) A wizard or God controls everything.\n  3) If Realms_Control is @tuned on in the server, then if a player owns an\n     environmental room, and that room has its Wizard bit set, then the owner\n     of that environment room has control over anything contained in that env-\n     ironment room.  This includes things inside of rooms that are inside of\n     that environment room, and so forth.  Everything in that Wizbit environ-\n     ment can be controlled by the environment's owner. \n  \nThere are a few things to keep in mind, in relation to the above:\n  a) Anybody can @chown an unlinked exit to themselves, even if it is locked.\n     Builders should beware of this, lest their exits be linked or stolen.\n     Once the object has been chowned, then it will be controlled by the\n     owner, as per rule 1.\n  b) Players can @chown to themselves any exits which are linked to an object\n     they own.  Note Rule #1.\n  c) Players can @chown to themselves any exits which are attached to an object\n     that they own.  Note Rule #1.\n  d) If an object is set CHOWN_OK, anyone may \"@chown <object>=me\" and gain\n     ownership and control of the object. (see chown_ok)\n\n\n@CREATE <object> [=<cost>[=<regname>]]\n\n  Creates a new object and places it in your inventory.  This costs at\nleast ten pennies.  If <cost> is specified, you are charged that many\npennies, and in return, the object is endowed with a value according\nto the formula: ((cost / 5) - 1).  Usually the maximum value of an\nobject is 100 pennies, which would cost 505 pennies to create. If a\n<regname> is specified, then the _reg/<regname> property on the player\nis set to the dbref of the new object.  This lets players refer to\nthe object as $<regname> (ie: $mybutton) in @locks, @sets, et cetera.\nOnly a builder may use this command.\n\n\n@CLONE <object> [=<regname>]\n\n  Clones the given object, including name, location, flags, and\nproperties.  You must have control of the object, you may not clone\nrooms, exits, etc, and cloning may cost pennies.  If successful, the\ncommand prints the identifier of the new object.  Only a Builder may\nuse this command.\n\n  Example:\n    @clone some_object\n\n\n@DIG <room> [=<parent> [=<regname>]]\n\n  Creates a new room, sets its parent, and gives it a personal registered\nname.  If no parent is given, it defaults to the first ABODE room down the\nenvironment tree from the current room.  If it fails to find one, it sets\nthe parent to the global environment, which is typically room #0.  If no\n<regname> is given, then it doesn't register the object.  If one is given,\nthen the object's dbref is recorded in the player's _reg/<regname> property,\nso that they can refer to the object later as $<regname>.  Digging a room\ncosts 10 pennies, and you must be able to link to the parent room if\nspecified.  Only a builder may use this command.\n\n\n@OPEN <exit> [=<object> [; <object2>; ... <objectn> ] [=<regname>]]\n\n  Opens an exit in the current room, optionally attempting to link it\nsimultaneously.  If a <regname> is specified, then the _reg/<regname>\nproperty on the player is set to the dbref of the new object.  This lets\nplayers refer to the object as $<regname> (ie: $mybutton) in @locks,\n@sets, etc.  Opening an exit costs a penny, and an extra penny to link\nit, and you must control the room where it is being opened.\n\n\n@ACTION <name>=<source> [=<regname>]\n\n  Creates a new action and attaches it to the thing, room, or player\nspecified.  If a <regname> is specified, then the _reg/<regname> property\non the player is set to the dbref of the new object.  This lets players\nrefer to the object as $<regname> (ie: $mybutton) in @locks, @sets, etc.\nYou may only attach actions you control to things you control.  Creating\nan action costs 1 penny.  The action can then be linked with the command\n@LINK.\n\n\nBogus Exits and Pseudo Commands:\n\n  Bogus commands can be made using exits.  For example, to make a 'sit'\ncommand, one could give the following commands:\n    @open sit\n\t@link sit=here                   (because unlinked exits can be stolen)\n\t@lock sit=me&!me                 (therefore always fails)\n\t@fail sit=You sit on the chair.\n    @ofail sit=sits on the chair.\nSince nobody can go through it, it always fails. The @fail message is\ndisplayed to the player, and the @ofail message (preceded by the player's\nname) to everyone else.\n\n\n@RECYCLE <object>\n\n  Destroy an object and remove all references to it within the database.\nThe object is then added to a free list, and newly created objects are\nassigned from the pool of recycled objects first.  You *must* own the\nobject being recycled, even wizards must use the @chown command to\nrecycle someone else's belongings.\n\n\n@NAME  <object>=<name> [<password>]\n\n  Sets the name field of <object> to <name>.  A null <name> is illegal.\nYou must supply <password> if renaming a player.  Wizards can rename\nany player but still must include the password.\n\n\n@DESCRIBE [<object>][=[<text>]]\n\n  Shows <object>'s description, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/de'.\n\nA description is shown to a player looking at <object>.\n\n\n@IDESCRIBE [<object>][=[<text>]]\n\n  Shows <object>'s inside description, or sets it to <text>.  If <object> is\nnot specified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/ide'.\n\nAn inside description is shown to a player looking inside a vehicle <object>.\n\n\n@SUCCESS [<object>][=[<text>]]\n\n  Shows <object>'s success message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/sc'.\n\nA success message is shown to a player who successfully uses <object>.\n\n\n@FAIL [<object>][=[<text>]]\n\n  Shows <object>'s failure message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/fl'.\n\nA failure message is shown to a player who fails to use <object>.\n\n\n@DROP [<object>][=[<text>]]\n\n  Shows <object>'s drop message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/dr'.\n\nA drop message works differently depending on <object>'s type:\n\n On a room, it is shown to a player who drops an object there.\n On a thing, it is shown to a player who drops it.\n On an exit, it is shown to a player arriving at its destination.\n On a player, it is shown to a player who kills them.\n\n\n@OSUCCESS [<object>][=[<text>]]\n\n  Shows <object>'s osuccess message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/osc'.\n\nAn osuccess message, prefixed by the player's name, is shown to others in the\nroom when a player successfully uses <object>.\n\n\n@OFAIL [<object>][=[<text>]]\n\n  Shows <object>'s ofailure message, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/ofl'.\n\nAn ofailure message, prefixed by the player's name, is shown to others in the\nroom when a player fails to use <object>.\n\n\n@ODROP [<object>][=[<text>]]\n\n  Shows <object>'s odrop, or sets it to <text>.  If <object> is not\nspecified, it defaults to 'me'. If <text> is not specified, the field is\ncleared.  This uses the property '_/odr'.\n\nAn odrop message, prefixed by the activating player's name, is shown to others\nin the room. It works differently depending on <object>'s type:\n\n  On a room, it is shown when an object is dropped there.\n  On a thing, it is shown when a player drops it.\n  On an exit, it is shown when a player arrives at its destination.\n  On a player, it is shown when another player kills them.\n\n\nPronoun Substitutions:\n\n  @osuccess, @ofail, and @odrop messages may contain %-substitutions,\nwhich evaluate to gender-specific pronouns if the player's 'sex' property\nis set. These substitutions are:\n    %a (absolute)       = Name's, his, hers, its.\n    %s (subjective)     = Name, he, she, it.\n    %o (objective)      = Name, him, her, it.\n    %p (possessive)     = Name's, his, her, its.\n    %r (reflexive)      = Name, himself, herself, itself.\n    %n (player's name)  = Name.\nCapitalized pronouns are also available with %A, %S, %O, %P, and %R.\nIf you need a '%', use %%.\n  \n  The naturally supported genders are 'male', 'female', 'neuter', 'herm',\nand 'hermaphrodite', with the last two being equivalent, both using the\nsie/hir/hirself/hirs pronoun set.\n \nThis set of supported genders can be extended either on an individual\nplayer, or globally by adding _pronouns/GENDER/%X properties on the\nplayer, or on #0 respectively.  For example, to add support on yourself\nfor a 'stallion' gender, you would add five properties, one for each\nof the %a, %s, %o, %p, and %r pronouns, in the _pronouns/stallion/\npropdir.  Ie:\n    @set me=_pronouns/stallion/%a:his\n    @set me=_pronouns/stallion/%s:he\n    @set me=_pronouns/stallion/%o:him\n    @set me=_pronouns/stallion/%p:his\n    @set me=_pronouns/stallion/%r:himself\n\nIf a shapeshifting player decided that they prefer a different subjective\npronoun for themselve while they were in herm form, they could override it\nwith something like:\n    @set me=_pronouns/herm/%s:shi\nThis would only override the %s pronoun while their gender was 'herm',\nthough, meaning that if they shapeshift to male, they only have to change\ntheir 'sex' property, and not tweak their pronouns as well.\n  \nIf a player sets a %a, %s, %o, %p, or %r property on themselve, that value\nWILL be used, instead of any matching _pronouns/GENDER/%X property.  This\nlets players make quick temporary pronoun fixes, and is also available\nfor legacy reasons.\n  \nEx. '@ofail teapot=burns %p hand on the hot teapot.'\n\n\n@ATTACH <action>=<new source>\n\n  Removes the action from where it was and attaches it to the new source.\nYou must control the action in question.\n\n\nLinking:\n\n  You can link to a room if you control it, or if it is set LINK_OK or ABODE.\nBeing able to link means you can set the homes of objects or yourself to that\nroom if it is set ABODE, and can set the destination of exits to that room if \nit is LINK_OK. See LINK_OK, ABODE, and @LINK.\n\n\n@LINK <object1>=<object2> [; <object3>; ...  <objectn> ]\n\n  Links <object1> to <object2>, provided you control <object1>, and\n<object2> is either controlled by you or linkable.  Actions may be\nlinked to more than one thing, specified in a list separated by\nsemi-colons.\n\n\n@RELINK <object1>=<object2> [; <object3>; ...  <objectn> ]\n\n  Unlinks <object1>, then links it to <object2>, provided you control\n<object1>, and <object2> is either controlled by you or linkable.\nActions may be linked to more than one thing, specified in a list\nseparated by semi-colons.\n\n\n@UNLINK <exit>\n@UNLINK here\n\n  Removes the link on the exit in the specified direction, or removes the\ndrop-to on the room. Unlinked exits may be picked up and dropped elsewhere.\nBe careful, anyone can relink an unlinked exit, becoming its new owner\n(but you will be reimbursed your 1 penny).\n\n\nHomes:\n\n  Every thing or player has a home. This is where things go when they\nare sent home, or things with the STICKY flag set go when dropped.\nHomes are set with the @link command.  A thing's home defaults to the\nroom where it was created, if you control that room, or your home.\nYou can link an exit to send players home (with their inventory) with\n    @link <exit>=home\nDrop-tos can also be set to 'home'. @teleport accepts home as an argument,\nso you can @teleport things (and players if you are a wizard) to their home.\n\n\nDrop-to:\n\n  When the @link command is used on a room, it sets a drop-to location.  Any\nobject dropped in the room (if it isn't STICKY) will go to that location. If\nthe room is STICKY, the drop-to will be delayed until the last person in the\nroom has left.\n\n\n@LOCK [<object>][=[<key>]]\n\n  Shows <object>'s lock, or sets it to <key>.  If <object> is not specified,\nit defaults to 'me'. If <key> is not specified, the field is cleared.  This\nuses the property '_/lk'.\n\nA lock that is not passed prevents players from using <object>.\n\n  Examples:\n    @lock thingy=*Igor\n    @lock thingy=me|#1234\n    @lock here=me|Other Thingy\n    @lock west=sex:female\n    @lock east=((*Igor|*JohnDoe)&sex:male)\n\n\n@UNLOCK <object>\n\n  Removes the lock on <object>.\n\n\nSuccess:\n\n  You successfully use an object when you take it. You use an exit\nsuccessfully when you go through it. You use a person successfully\nwhen you successfully rob them. You successfully use a room when you\nlook around.\n\n\nFailure:\n\nYou fail to use a thing when you cannot take it (because its lock fails).\nYou fail to use an exit when you cannot go through it (because it's locked).\nYou fail to use a person when you fail to rob them.\nYou fail to use a room when you fail to look around (because it's locked).\n\n\n@SET <object> = [!]<flag>\n@SET <object> = <property>:<string>\n@SET <object> = <property>:\n@SET <object> = :clear\n  \n  @set does one of three things on TinyMUCK, it can modify flags, add\nproperties to an object, or remove properties from an object.\n  \n  Using the first format, you may set flags, which are:\n\tABODE (AUTOSTART)\n\tBUILDER (BOUND)\n\tCHOWN_OK (COLOR)\n\tDARK (DEBUG)\n\tHAVEN (HARDUID)\n\tJUMP_OK\n\tKILL_OK\n\tLINK_OK\n\tMUCKER\n\tQUELL\n\tSTICKY (SETUID)\n\tVEHICLE (VIEWABLE)\n\tWIZARD\n\tXFORCIBLE\n\tZOMBIE\n  You can also set the MUCKER (or Priority) Level of an object by using\n0, 1, 2, or 3 as the flag name.\n  \n  The second format sets <property> on <object> to <string>\n\n  The third format will remove <property> and any sub-properties under it.\n  \n  The fourth format removes all properties from an object.\n\n\n@PROPSET <object>=<type>:<property>:<value> -or-\n@PROPSET <object>=erase:<property>\n  \n  @propset can set and clear properties from an object.\n  \n  If the first format above is specified, the @propset command sets\n<property> on <object> to <value>, where <value> is of type <type>.\n<type> can be one of 'string', 'integer', 'float, 'dbref', or 'lock'.\nA string can be any set of characters the MUCK recognizes.  An integer\nmust be composed solely of numerals with the possible exception of\na leading sign indicator (+ or -).  A float must be a valid floating\npoint number.  A dbref must be of the form # followed by a positive\ninteger, and it must be a valid dbref (i.e., the object must exist).\nA lock value must be a key that would be accepted by @lock or a similar\ncommand (see the help for @lock for more details).\n  \n  The second format removes <property> on object.  Note that if <property>\nis a propdir, it removes all properties below <property> as well.\nIf you wish to clear the value of a propdir without removing the\nproperties below it, use '@propset <object> = integer:<property>:0'.\n\n\n\n  Lists registered objects, or manages existing object registrations, on\nthe target object and propdir.\n\nThe default target is \"_reg\" on #0, but can be changed with these prefixes:\n\n  #me\n\tSets target object to you.\n  #prop [<target>]:<propdir>\n\tSets target object to <target>, and target propdir to <propdir>.\n\t<target> may be omitted to keep the default.\n\nSyntax:\n  @register [<prefix>]\n    Lists registrations in the target propdir on the target object.\n  @register [<prefix>] <subpropdir>\n    Lists registrations in <subpropdir> in the target propdir.\n  @register [<prefix>] <object> = <regname>\n    Registers <regname> to <object> in the target propdir.\n  @register [<prefix>] = <regname>\n    Removes registration of <regname> in the target propdir.\n\n\n@CHOWN <object> [=<player>]\n\n  Changes the ownership of <object> to <player>, or if no player is given,\nto yourself.  Any player is allowed to take possession of objects, rooms, and\nactions, provided the CHOWN_OK flag is set.  Mortals cannot take ownership of\na room unless they are standing in it, and may not take ownership of an object unless\nthey are holding it.  Wizards have absolute power over all ownership.\n\n\n@CHLOCK [<object>][=[<key>]]\n@CHOWN_LOCK [<object>][=[<key>]]\n\n  Shows <object>'s chown lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '_/chlk'.\n\nA chown lock that is not passed prevents players from taking ownership of\n<object>.\n\n\n@FLOCK [<object>][=[<key>]]\n@FORCE_LOCK [<object>][=[<key>]]\n\n  Shows <object>'s force lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '@/flk'.\n\nA force lock that is passed allows players to force <object>.\n\n\n@CONLOCK [<object>][=[<key>]]\n\n  Shows <object>'s container lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '_/clk'.\n\nA container lock that is passed allows players to put things in <object>.\n\n\n@READLOCK [<object>][=[<key>]]\n\n  Shows <object>'s read lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '@/rlk'.\n\nA read lock that is passed allows players to bypass non-MUF read permissions\nfor <object>.\n\n\n@OWNLOCK [<object>][=[<key>]]\n\n  Shows <object>'s ownership lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '@/olk'.\n\nAn ownership lock that is passed allows players to bypass controller\npermissions for <object>.\n\n\n@LINKLOCK [<object>][=[<key>]]\n\n  Shows <object>'s link lock, or sets it to <key>.  If <object> is not\nspecified, it defaults to 'me'. If <key> is not specified, the field is\ncleared.  This uses the property '_/lklk'.\n\nA link lock that is not passed prevents players from linking to <object>.\n\n\n@TELEPORT <arg1> [=<destination>]\n\n  Moves <arg1> to <destination>, if <destination> is not given, moves you\nto <arg1>.  Wizards may teleport anything to anywhere, provided it makes\nsense, and mortals are allowed to do two things: teleport rooms to change\ntheir parent fields, and they may teleport things to a room they can link\nto, provided they control either the thing or its location.\n\n\n@STATS [<player>]\n\n  For mortal players, returns the highest number in\nthe database, which includes garbage that has been generated with\n@recycle.  For Wizards, gives this number as well as a breakdown of\neach type of object: rooms, exits, things, programs, players, and\ngarbage.  Wizards may also specify <player> which returns a similar\ndisplay limited to the possessions of <player>.\n\n\nTimestamps:\n\n  Every object has a timestamp, which includes the time last used, the\ntime last modified, the time the object was created, and the number\nof times that that object has been used by a player. They are shown by\nusing EXAMINE. 'Usage' is defined as follows: Players-when they are\nconnected, Rooms-when entered or 'look'd at, Exits-when invoked (by a\n'go' command) or 'look'd at, Things-when 'look'd at or 'take'n/'drop'd,\nPrograms-when run by a player. Examining an object does not count as\nlooking at them.\n\n\n@FIND [<name>] [= <flags/types> = [<output type>]]\n\n  Searches through the database for items that you control matching <name>.\nPlayers control only objects they own; wizards control all objects, so @find\nsearches the entire database when they use it.  Because the command is\ncomputationally expensive, this costs 100 pennies.\n  \n  Flags or types can be specified, to specify that you only want to list\nobjects that have that flag set, or that are of that type.  You can also\nspecify to list objects that are NOT of that specific type, or that do\nNOT have that flag.  (A \"!\" before the modifier indicates that it is to\nbe inverted.)\n  \nThe flags that you can specify are:  (use the initial capitalized letter only)\n  Abode, Builder/Block, Chown_ok, Dark/Debug, Haven, Interactive, Jump_ok,\n  Kill_ok, Link_ok, Mucker, Quell, Sticky/Silent, Vehicle, Wizard, Xforcible,\n  and Zombie.\n  \nYou can also specify Mucker Levels by the level number: 1, 2, 3, or 4.\n  \nThe types that you can specify are: (use the capitalized letter only)\n  Exit, muF program, Player, Room, and Thing.\n  \nThere are a few other modifiers you can specify: (use only initial character)\n  Unlinked   will specify that you want to list only unlinked objects.\n  @          specifies to list objects longer than about 90 days old.\n  ~size      will match all objs whose current memory usage is greater than\n               or equal to size bytes.  This must be the last modifier in the\n               list of modifiers.\n  ^size      will match all objs whose total memory usage, when fully loaded,\n               is greater than size bytes.  To do this, it loads the entire\n               object into memory from disk.  This modifier is only available\n               to wizards.  For regular players, this acts like ~size.  This\n               must be the last modifier in the list of modifiers.\n  \nThe output types that can be given are owners, links, size, count, & location.\n  (You use the whole name for output type, and you can use only one at a time.)\n  owners    lists who owns each object.\n  links     shows what each object is linked to, or *UNLINKED*, or, for exits\n              linked to multiple things, *METALINK*\n  size      displays how much memory is currently being used by an object.  If\n              this option is used with the ^ modifier, (see above) then this\n              will display the true full size of the object, and not just how\n              much is currently being used.\n  count     causes nothing to be shown but how many objects the @find/etc would\n              match.  ie:  it doesn't display any of the matched objects.\n  location  shows where the object is located at.\n  \nThe matching on names is as follows:\n        Individual words can be matched as {word1|word2|...}\n        Individual characters can be matched as [abc...]\n        A ? matches any character.\n        A * matches any number of characters, including none.\n        Any of these special charcters can be matched by putting a \\ before it.\n  \nExamples of use:\n    \"@find north = EU = location\" will find all of your unlinked exits named\n        \"north\" and print them along with their locations.\n    \"@find {big|little} = R!L\" finds all your rooms whose names contain \"big\"\n        or \"little\" and are not LINK_OK.\n    \"@find w[ei]ll\" will find everything you control whose name contains \"will\"\n        or \"well.\"\n    \"@find =E=links\" will list all exits that you control, and display where\n        they are linked to.\n    \"@find button==locations\" will list all objects you control with 'button'\n        in the name, and it will display where thay are located at.\n    \"@find =~2000=size\" will list all your objects whose current memory usage\n        is 2000 bytes or more, and it will display their size.\n    \"@find =^2000=size\" will, for a wizard, find all objects in the db that are\n        2000 or more bytes in total size, when fully loaded, and it will show\n        their sizes.  Note that this will load all of each object into memory\n        to make the size determination.  On some systems this can take a while,\n        and on all systems this is an abuse to the diskbasing cache.  Only\n        Wizards may use this search feature.\n\n\n@OWNED <name> [= <flags/types> = [<output type>]]\n\n  Searches through the database for items that <name> controls.\n  \n  For an explanation of the flags/types modifiers and the output types,\nsee the help entry for @FIND.\n  \nExample:  @owned Revar=F!L3=location\n  Will list all Mucker Level 3 (3) programs (F) owned by revar, that are\nNOT set Link_OK (!L), and it will show the location of each one.\n  \nNote that only wizards can do an @owned on other people.\n\n\n@CONTENTS [<object>] [= <flags/types> = [<output type>]]\n\n  Searches the given object for items & exits that match the given flag string.\n  \n  For an explanation of the flags/types modifiers and the output types, see\nthe help entry for @FIND.\n  \nExample:  @contents here=DE=owner\n  Will list all Dark Exits who's source is your current location, giving the\nowner of each one.\n\n\n@ENTRANCES [<object>] [= <flags/types> = [<output type>]]\n\n  Searches through the database for items that you control linked to <object>.\n  \n  For an explanation of the flags/types modifiers and the output types, see\nthe help entry for @FIND.\n  \nExample:  @entrances here=ED=location\n  Will list all Dark Exits that are linked to your current location,\ngiving the location of each one.\n\n\n@TRACE <object> [=<depth>]\n\n  Starts with <object> and traces all location fields, until the global-\nenvironment room is reached or the optional <depth> is specified.  This\nis generally useful for finding which rooms are parents in your heirarchy.\nIf you cannot link to a particular location its name is replaced by stars\n(***).\n\n\n@OECHO <vehicle object> = <echo prepend string>\n\nSets a string to prepend to messages relayed to the interior of a vehicle\nin the vehicle's _/oecho property. Without a value, \"Outside>\" is prepended.\n\n\n@PECHO <puppet object> = <echo prepend string>\n\nSets a string to prepend to messages relayed from a puppet in the puppet's\n_/pecho property. By default, the puppet's name followed by \">\" is prepended.\n\n\n@SWEEP\n@SWEEP <object>\n\n  Perform a security sweep of some object, showing all listeners,\nboth players and things.  You must own the object to sweep it.\n\n  Examples:\n    @sweep                 check the current room\n    @sweep me              check yourself\n    @sweep janitor_closet  check the object 'janitor_closet'\n\n\n\n\n\n----------------------------------------------------------------------------\n                                Object Flags\n----------------------------------------------------------------------------\n\n\n\n\n@SET here=A\n\n  If a room is set ABODE, players can set their homes there,\nand can set the homes of objects there. (LINK_OK is now used only for exits,\nand ABODE is for players and objects.)\n  When set on a program, it means AUTOSTART.  This means that when the game\nis first started up, the program will automatically be run with a trigger\nof #-1 and a 'me @' of the owner of the program.  This is useful to restart\nprocesses that run in the background periodically.\n\n\n@SET <thing>=B\n\n  Some mud restrict building commands to players whose builder flag is\nset.  The builder flag, BUILDER, is only meaningful for players. On such\nsystems, only builders can @create, @dig, @link, @open, or take control of\nunlinked exits. Only a wizard can set this flag.\n\n  When BUILDER is set on a program, it is called \"BOUND\" and it causes any\nfunctions within the program to run in preempt mode, regardless of the\nmultitasking mode that the process had before calling this program.  When\nthe execution exits this program, the multitasking mode returns to what\nit was before the function was called.  This lets libraries of atomic\nfunctions be written.\n\n  This flag is also called BOUND when it is set on rooms. An exit attached to\na thing or player and linked to a player or room will not work when the object\nto which it is attached is in a room set BOUND.\n\n\n@SET here=C\n\n  When set on rooms, exit and things, the C flag indicates that any player\nmay use the @chown command to claim ownership of the item. (see @chown)\nWhen the C flag is set on a player, this indicates that the player wishes\nto receive ANSI Color codes from the server.\n\n\n@SET here=D\n\n  If a room is DARK, then when people besides the owner 'look' there, they only\nsee things they own. If a thing or player is DARK, then \"look\" does not list\nthat object in the room's Contents:. Players can set rooms they own dark, and\nmay also set objects they own dark, but they cannot drop dark objects in rooms\nthey don't control. Wizards can set players dark.\nWhen a program is set DARK, it is called DEBUG, and a running stack trace is\nprinted out to any users of the program for each instruction executes.\n\n\n@set here=O\n\n  If you set a room to 'Yield', exit matching will NOT continue up the\nenvironment chain.  The only exception to this are any exits on an area\nup the environment chain that has been set to be 'Overt'.  By setting a\nroom both Yield and Bound, you can limit players to -only- those exits\nset on the room itself (assuming there are no Overt rooms further up the\nenv chain).\n\n\n@set here=Y\n\n  If you set a room to 'Yield', exit matching will NOT continue up the\nenvironment chain.  The only exception to this are any exits on an area\nup the environment chain that has been set to be 'Overt'.  By setting a\nroom both Yield and Bound, you can limit players to -only- those exits\nset on the room itself (assuming there are no Overt rooms further up the\nenv chain).\n\n\nThe flags are displayed as letters following an object's ID number.\nFlags are set with the @set command. The flags are: W(izard), S(ticky),\nL(ink_OK), D(ark), J(ump_OK), K(ill_OK), C(hown_OK), H(aven), A(bode),\nB(uilder), V(ehicle), Z(ombie), and The flags R(oom), E(xit), and\nP(layer) are also used.  Debug is the same flag as Dark, Silent as Sticky,\nColor as Chown_OK, and Bound as Builder.  F refers to a Muck Forth program.\nAn M followed by a 1, 2, or 3 gives the Mucker Level.  (Priority Level for\nexits.) See TYPES, GENDER, and individual flag names.\n\n\n@SET here=H\n\n  If a room is HAVEN, you cannot kill in that room. If a player is set\nHAVEN, he cannot be paged. (see page) HAVEN, when set on a program is\ncalled HARDUID, and causes that program to run with the permissions of\nthe owner of the trigger, rather than with the permissions of the user\nof the program.  When this is set in conjunction with the STICKY (SETUID)\nflag on a program, and the program is owned by a wizard, then it will run\nwith the effective mucker level and permissions of the calling program.\nIf the caller was not a program, or the current program is NOT owned by\na wizard, then it runs with SETUID permissions.\n\n\n@SET here=J\n\n  The Jump_OK flag is used in several ways.  Unprivileged programs cannot\nuse MOVETO on an object unless the player either controls the object, the\nroom it's being moved from, and the room it's being moved to, or else they\nare set Jump_OK.  A player cannot use an action that is linked to another\nplayer unless the other player is set Jump_OK.  On some systems, where\nSECURE_TELEPORTing is set up, you cannot use an action to leave a room,\nunless the action is either attached to that room, or the room is JUMP_OK.\n\n\n@SET here=K\n\n  On systems where the KILL_OK flag is used, it may restrict combat.\n\n\n@SET here=L\n\n  If a room is LINK_OK, anyone can link exits to it (but still not from it).\nIt has no meaning for people, things, or exits. See @LINK in the dictionary.\nA program that is link_ok can be called by any other program, and can be run\nfrom actions and propqueues not owned by the owner of the program.\n\n\nMucker Levels:\n\n  The mucker level of a player or program specifies whether or not a player\ncan make MUF programs, and what permissions they will have when the programs\nare run.  (See 'man mucker levels')  Only a wizard may set the mucker level\nof a player, and a normal player may only set the mucker level of programs\nthey own to less than their current mucker level.  A program cannot be set\nto mucker level 0, since it doesn't mean anything.\n  \n  When the mucker level of an exit is set, is it called the exit's priority\nlevel.  The priority levels let you specify that certain exits are not\noveridable by local actions.  When an exit is searched for, in the\nmatching routines, it will match like it used to, except that if it finds\nan exit, later in the search order, that has a higher priority level, it\nwill choose that exit instead.\n  \n  You can set the priority level of an exit by setting its Mucker Level.\n(ie: @set exit=2)  A level of 0 is the lowest priority, and a level of 3\nis the highest priority.  Only a Wizard can set the priority level of an\naction or exit.\n  \n  When the server looks for the standard \"connect\", \"disconnect\", or \"look\"\nactions, it will ignore any actions with a priority Level of 0.  When an\naction is @attached to another object, @named to something else, or\n@unlinked, its Priority Level is reset to 0.\n  \n  If COMPATIBLE_PRIORITIES is #defined on your system, then exits that are\non room or player objects will never act as if they have an effective\npriority level of less than 1.\n\n\n@SET here=Q\n\n  A wizard set QUELL is effectively a normal player with no wizardly powers.\nPrograms that test to see if a player is wizard will get a false response\nfrom '\"wizard\" flag?' when the player is QUELLed.  Wiz-bitted programs\nwill still act wizbitted whether or not the owner is QUELLED.\n\n\n@SET here=S\n\n  If a thing is STICKY, it goes home when dropped (See HOMES). If a room is\nSTICKY, its drop-to is delayed until the last person leaves (See DROP-TO).\nIf a player is STICKY (SILENT), they don't see the dbrefs on things they\nown, and they do not see dark objects.  If an exit is linked to a Thing,\nand it is located on another Thing, then if the exit is not STICKY, the\nThing the exit is located on will go home when the exit is triggered.  If\na program is STICKY (SETUID) it runs with the permissions of the owner of\nthe program, not the perms of the user.\n\n  A player can set themselves \"SILENT\" and not see all the dbrefs and dark\nobjects that they own.  They won't see objects in a dark room either.\nThey still control the objects though.  Silent is the same flag as STICKY.\n\n\n@SET <thing>=V\n\n  Objects of TYPE_THING, that have the VEHICLE flag set, can contain\nplayers.  To enter a vehicle, you can either use a MUF program to\nteleport you to it via MOVETO, you can get a wizard to @teleport you\ninto it, or else you an use an action that is both attached and linked\nto the vehicle to enter it.  This means that you can only enter a vehicle\nfrom the same room that it is in, and you cannot use far links to enter\nit.  This prevents the use of vehicles to get around locks.  Inside the\nvehicle, you will see its @idesc, instead of its @desc, and you will\nnot be shown its @succ or @fail.  Objects dropped in a vehicle will not\ngo away to the their homes, as a vehicle cannot have a dropto set in it.  \nThings with the VEHICLE flag set cannot enter rooms or use exits that\nhave the VEHICLE flag set.  This allows a way to prevent vehicles from\nentering areas where it would be illogical for them to be.\nWhen VEHICLE is set on a program, it is called VIEWABLE, and enables the\nprogram to be @listed.\n\n\n@SET <thing>=W\n\n  If a person is WIZARD, they are a wizard, unkillable, subject to fewer\nrestrictions, and able to use wizard commands. It is only meaningful for\nplayers and programs. In general, WIZARDs can do anything using #<number>\nor *<player>.  Only player #1 can set and unset the WIZARD flag of other\nplayers if GOD_PRIV is used.\n\n\n@SET <thing>=X\n\n  A thing or player set XFORCIBLE can be forced by anything passing its\nforce-lock. When the @tune enable_prefix is on, wizards may set this flag\non any wizard-owned action to allow matching on the beginning of the user's\ncommand string, much like the builtin '\"' and ':'. The flag is named XPRESS\nwhen used in this way.\n\n\n@SET <thing>=Z\n\n  @force and the FORCE muf primitive can be used on objects of type\nTHING, if they have the ZOMBIE flag set.  Objects act as if they\nhave the permissions of their owner.  If an object is locked against\na player, it will also be locked against anything that that player\nowns, that tries to test the lock.\n  \n Things with the ZOMBIE flag set cannot enter rooms or use exits that\nhave the ZOMBIE flag set.  This allows a way to prevent zombies from\nentering areas where they are not wanted.\n  \n If you try to run a program that you control, that has its ZOMBIE flag\nset, it will drop you into the MUF debugger.  This lets you step line\nby line, or instruction by instruction through a muf program, setting\nbreakpoints to stop at, and other nice things.  There is help available\nwithin the debugger, via the 'help' command.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Object Properties\n----------------------------------------------------------------------------\n\n\n\n\nProperties are stored in AVL trees, and organized into directories of\n  properties.  This speeds things up, and keeps you from being spammed on\n  examines.  To examine the properties on an object, use 'ex <obj>=<propdir>'.\n  where to examine the base properties in an object, <propdir> would be '/'.\n  You can see the value of a single property with 'ex <object>=<propname>'.\n      Propdirs are a method of storing and organizing properties to speed\n    access and to provide a sort of built-in organization.  The basic idea\n    is to make something similar to a 'filesystem' for properties.  In this\n    analogy, each person would be a filesystem, with a root directory and\n    (theoretically) an infinite number of properties beneath that.\n      A property has been expanded with the idea that each property may now\n    contain a new property list -- the 'propdir'.  properties can both have\n    a value (either integer or string as before) _and_ contain other\n    properties.\n      The actual directory entries may ALSO contain data.  Propdirs' only\n    real 'visible' changes are in the names of properties -- '/' is used as\n    the property directory separator, and so will not appear in the names\n    of the properties when listed through 'examine' or MUF programs.\n      Property protections have also been expanded -- the . and _ may appear\n    either at the beginning of the property name or immediately following a\n    '/', and that property will have the appropriate protections.  For\n    example, the property '/mail/.inbox/mesg/#' would have the same\n    protections as '.mesg#' would now.\n    There are two ways to remove a property list:\n      * First, and most straight forward, is to remove the property that\n        contains it.  so, in the previous example, removing the property\n        '/mail/.inbox' would (recursively) remove all properties under\n        .inbox before removing .inbox itself.\n      * The second way is to remove all properties within the property list\n        yourself.  When the last property is removed, the parent property\n        (the one that contained the property list) is examined to see if\n        contains data.  If it does, then the property list only is\n        removed.  If the property doesn't contain data then it is removed\n        also.\n      Because of the first method of removing propdirs, the ability to have a\n    property list and value in the same property should be used sparingly.\n      If you try to access a property ending in '/', in MUF, it will give a\n    programmer error, except in NEXTPROP, in which it will give the name of\n    the first property in that propdir.\n      The last visible, non-MUF change that propdirs bring is that 'examine'\n    will no longer show properties _directly_.  Instead, where the properties\n    would normally be shown, it will say:\n        \"[ Use 'examine <object>=/' to list root properties. ]\"\n      Examine now can take an argument which is the property or propdir to\n    view.  If the property name given ends with a '/', all properties in\n    property directory will be listed, otherwise the single property named\n    will be shown.\n      Internally, a few things changed.  property lists are now stored as AVL\n    trees instead of straight lists, so there is a speed increase even if\n    propdirs are not directly used.  This also means properties are kept in\n    sorted order and will be displayed that way.\n      'addprop' will no longer allow a \":\" in the property name.\n      To clear a propdir's value without deleting the proptree below it,\n    from MUF do a '\"\" 0 addprop' to it.\n      A property can *not* have both a string and integer stored at the same\n    time anymore.  The old property.c was lax and allowed this, even though\n    the integer value would be lost on dbload.\n    See also PROPDIRS-EXAMPLE.\n\n\nProperty and Propdir Usage Examples:\n  Lines indented only 2 spaces are what the user is typing.\n  Lines indented 6 spaces are what the MUCK is returning to the user.\n  Lines in []'s are comments on what's going on.\n  \n  [first, lets set up a bunch of properties]\n  @set me=first:a property.\n  @set me=second:another property.\n  @set me=first/one:A property in a propdir\n  @set me=first/two:Another property in a propdir\n  @set me=third/prime:three\n  \n  [Okay, now lets see what properties we have.  We use the examine command\n   to do that, with a second argument, to tell it what we want to list in\n   the way of properties.  In this case, since we want to list the base level\n   properties, we use '/'.]\n  \n  ex me=/\n      first/: (string) a property.\n      second: (string) another property.\n      third/: (no value)\n  \n  [Okay, it has a few properties with the first part of the names of the\n   properties that we set.  The /'s at the end of some of the property\n   names means that there are sub-properties that we can list.  When we\n   set a property like 'first/one', it's actually creating a sub-property\n   named 'one' beneath a property named 'first'.  If 'first' doesn't\n   already exist, then it will create that property.  Let's list what\n   sub-properties we created under 'first'.]\n  \n  ex me=first/\n      first/one: (string) A property in a propdir.\n      first/two: (string) Another property in a propdir.\n  \n  [Here we see the properties that we set as sub-properties under 'first'.\n   We examined for 'first/' to list the sub-properties.  The / at the end\n   of the name tells the game that we want it to list the sub-properties\n   of that property, and not that property's value itself.  Lets see what\n   value the property 'first' has, itself.  To do this we leave off the '/']\n  \n  ex me=first\n      first/: (string) a property.\n  \n  [Okay, lets say that we just want to see the value of the sub-property\n   named 'one', under the property 'first'.  We can list it as follows:]\n  \n  ex me=first/one\n      first/one: (string) A property in a propdir.\n  \n  [If the property or sub-property that you specify does not exist, it\n   will complain about it.]\n  \n  ex me=first/three\n      No property found.\n  \n  [if a property was created to contain a sub-property, but was never given\n   a value itself, it is listed as having no value.  It has sub-properties,\n   however.]\n  \n  ex me=third\n      third/: (no value)\n  \n  [Let's list those sub-properties.]\n  \n  ex me=third/\n      third/prime: (string) three\n  \n  [Okay, let's delete the sub-property 'prime', from under the property\n   'third'.  To do this, we act like we are setting the variable again,\n   except that we are giving it no value this time.]\n  \n  @set me=third/prime:\n  ex me=third/\n      No properties listed.\n  \n  [There.  It's gone.  Now let's list the bottom level properties again.]\n  \n  ex me=/\n      first/: (string) a property.\n      second: (string) another property.\n  \n  [Whoops!  The property 'third' is gone too!  This is because properties\n   with no values are automatically deleted when their last sub-property\n   is deleted.  Let's delete a subproperty from 'first', now.]\n  \n  @set me=first/one:\n  ex me=/\n      first/: (string) a property.\n      second: (string) another property.\n  \n  [The property 'first' still exists, with its string value, and it still\n   has sub-properties.  Lets list those.]\n  \n  ex me=first/\n      first/two: (string) Another property in a propdir.\n  \n  [Here we see that the sub-property 'one' is gone, as we expected.  Let's\n   see what happens when you erase a property that has sub-properties.]\n  \n  @set me=first:\n  ex me=/\n      second: (string) another property.\n  \n  [The property 'first' is gone.]\n  \n  ex me=first/\n      No properties listed.\n  \n  [And the subproperty it had is gone too!  Let's remake the 'first' prop.]\n  \n  @set me=first:again, a property.\n  ex me=/\n      first: (string) again, a property.\n      second: (string) another property.\n  \n  [We have two properties again, and no sub-properties.  It should be\n   noted that sub-properties can have sub-sub-properties, and they can\n   contain even subbier properties, and so on and so forth.]\n  @set me=first/one:uno\n  @set me=first/one/example:dos\n  @set me=first/two/example:tres\n  @set me=first/one/example/cat:meow\n  ex me=first/\n      first/one/: (string) uno\n      first/two/: (no value)\n  ex me=first/one/\n      first/one/example/: (string) dos\n  ex me=first/one/example/\n      first/one/example/cat: (string) meow\n  \n  [There is a special case in examine to let us list ALL the properties and\n   sub-properties of a prop.  To use it, we just specify '**' as a propdir.\n   For example, to list all sub-properties and sub-sub-properties, etc.,\n   under 'first', you would do the following:]\n  \n  ex me=first/**\n      first/one/: (string) uno\n      first/one/example/: (string) dos\n      first/one/example/cat: (string) meow\n      first/two/: (no value)\n      first/two/example/: (string) tres\n      \n  [Let's delete all the properties on the object, now.  To do that, we\n   specify no property name or value when we use @set.  Nothing but a\n   colon.]\n  \n  @set me=:\n  ex me=/\n      No properties listed.\n  \n  [All gone!]\n  \n\n\n@SET me=sex:unassigned|male|female|neuter\n\n  Default unassigned. If a player's sex is set, %-substitutions will use\nthe appropriate pronoun for that player. Only meaningful for players and\nmaybe Zombie things.\n\n\n@SET me=sex:unassigned|male|female|neuter|herm|hermaphrodite\n\n  Default is unassigned. If a player's sex is set, %X substitutions\nwill use the appropriate pronoun for that player in @osucc/@ofail/etc.\nOnly meaningful for players.\n\n\nObjects have several standard strings:\n  1) a name.\n  2) a description.                             (stored in _/de property)\n  2) an inside description (for vehicles).      (stored in _/ide property)\n  3) a success message (seen by the player).    (stored in _/sc property)\n  4) a fail message (seen by the player).       (stored in _/fl property)\n  5) an osuccess message (seen by others).      (stored in _/osc property)\n  6) an ofail message (seen by others).         (stored in _/ofl property)\n  7) a drop message (seen by the player).       (stored in _/dr property)\n  8) an odrop message (seen by others).         (stored in _/ofl property)\n(see properties)\n\n\n\n\n\n----------------------------------------------------------------------------\n                              MUF Programming\n----------------------------------------------------------------------------\n\n\n\n\nMAN [<subject>]\n\n  Displays the programmer's manual or a quick reference.\n\n\n@PS\n\n  Lists the status of the currently running MUF program processes.\nThis lists all processes for a Wizard.  Non-Wizards only see the muf\nprocesses that they can @kill.\n\n\n@KILL <processid>\n@KILL <playername>\n@KILL <programdbref>\n@KILL all\n\n  If passed a processid (a number without a '#' preceeding it), it will kill\nthe given process, if the player controls it.  If passed a player name, it\nwill kill all the processes controlled by that player.  If passed a program\ndbref, it will kill all processes that that program is running in.  If the\nargument passed is \"all\", and the player is a wizard, it will kill all\nprocesses on the timequeue.\n\n\n@LIST <program>  [=[!#@]*[line1][-line2]]\n\n  Lists lines in a program, provided you control it or it is VIEWABLE.\nZero, one, or two line numbers may be specified, denoting the range of\nlines to list.  If no lines are given, the entire program is listed.\n\n  Additionally, a set of prefixes can be given to control the output:\n\n  !\tOutputs system messages as MUF comments.\n  #\tLists program with line numbers, overriding current setting.\n  @\tLists program without line numbers, overriding current setting.\n\n\n@EDIT <program>\n\n  Searches for a program and if a match is found, puts the player into\nedit mode.  Programs must be created with @PROGRAM or @MCPPROGRAM.\n\n\n@PROGRAM <program> [=<regname>]\n\n  Create a new program, or enter edit mode on an existing one. If a <regname>\nis specified, a new program is always created.\n\n\n@MCPEDIT <program>\n\n  Searches for a program and if a match is found, pops up an editor window\nif the client supports the MCP edit package, otherwise puts the player into\ntext edit mode.  Programs must be created with @PROGRAM or @MCPPROGRAM.\n\n\n@MCPPROGRAM <program> [=<regname>]\n\n  Create a new program, or enter edit mode on an existing one.  If a <regname>\nis specified, a new program is always created.  If the client supports the MCP\nedit package, an editor window will appear instead of using the text edit mode.\n\n\n\n\n\n----------------------------------------------------------------------------\n                             Wizardly Commands\n----------------------------------------------------------------------------\n\n\n\n\n@PCREATE <player>=<password>\n\n  Only wizards can use this command. This command creates a new player.\nIt may only be used if REGISTRATION is enabled.\n\n\n@NEWPASSWORD <player> [=<password>]\n\n  Only wizards may use this command.  Changes <player>'s password,\ninforming <player> that you changed it. Must be typed in full. If\nGOD_PRIV was defined, nobody can change god's password.\n\n\n@FORCE <player|thing>=<command>\n\n  Causes the game to process <command> as if it were typed by <player|thing>.\nIf the player or thing being forced is set Xforcible, and its @flock force\nlock is set, then anyone (or any zombie) that passed that lock can use @force\non them.  Otherwise only a wizard can use @flock on them.\n\n  With the compile option GOD_PRIV, God cannot be forced by anything except\nGod owned, wizbit programs.\n\n\n@BOOT <player>\n\n  Disconnects a player from the game.  If a player is connected more than\nonce it affects the most recent connection. Only a wizard may use this\ncommand.\n\n\n@TOAD <player1> = <player2>\n\n  Only wizards may use this command.  Turns <player1> into a slimy toad,\ndestroying their character.  All possessions of <player1> are @chowned to\n<player2>.  Must be typed in full.\n\n\n@BLESS <obj>=<proppattern>\n  \n  This is a wizard-only command.\n  \n  Blesses all properties on <obj> that match the given <proppattern> wildcard\npattern.  The wildcard pattern works similarly to how the examine patterns\nwork.  ie:\n\n  @bless obj=/**      blesses ALL properties on obj.\n  @bless obj=foo/**   blesses all props in the foo/ propdir, and all propdirs\n                       under the foo/ propdir, recursively.\n  @bless obj=foo*bar  blesses all root props whose name start with foo and end\n                       with bar.\n\n The @bless command will list all properties that it blesses.\n\n  Blessed properties can execute MPI code with elevated permissions, allowing\nscripts that can alter remote objects, and those objects not controlled by\nthe trigger owner.  Blessed MPI can also use {force} on anyone.\n\n  Blessed _msgmacs properties don't execute with blessed permissions when they\nare referenced from other MPI code.  Instead, the bless bit on _msgmacs props\nindicates only that that macro is available to scripts up the environment,\neven if the script's trigger is not the same as the owner of the environment\nroom the _msgmacs prop is on.\n\n\n@UNBLESS <obj>=<proppattern>\n  \n  This is a wizard-only command.\n  \n  Unblesses all properties on <obj> that match the given <proppattern>\nwildcard pattern.  The wildcard pattern works similarly to how the examine\npatterns work.  Ie:\n\n  @unbless obj=/**      unblesses ALL properties on obj.\n  @unbless obj=foo/**   unblesses all props in the foo/ propdir, and all\n                         propdirs under the foo/ propdir, recursively.\n  @unbless obj=foo*bar  unblesses all root props whose name start with foo\n                         and end with bar.\n\n  The @unbless command will list all properties that it unblesses.\n\n  Blessed properties can execute MPI code with elevated permissions, allowing\nscripts that can alter remote objects, and those objects not controlled by\nthe trigger owner.  Blessed MPI can also use {force} on anyone.\n\n  Blessed _msgmacs properties don't execute with blessed permissions when they\nare referenced from other MPI code.  Instead, the bless bit on _msgmacs props\nindicates only that that macro is available to scripts up the environment,\neven if the script's trigger is not the same as the owner of the environment\nroom the _msgmacs prop is on.\n\n\n@WALL <message>\n\n  Only wizards may use this command. Shouts something to every\nplayer connected. Must be typed in full.\n\n\n@DUMP [filename]\n\n  Only wizards may use this command. Saves the database from memory to disk.\nAutomatically occurs every three hours, and when @shutdown is used. It does\nslow down the server, so only use if you fear a server crash is iminent.\nIf a filename is given, it will save the db to that file, and save any\nsubsequent dumps to it as well.\n\n\n@SHUTDOWN\n\n  Shuts down the game.  Only wizards may use this command, and it\nmust be typed in full.\n\n\n@RESTART\n\n  Initiate a full shutdown and restart of the Muck server.  Only\nwizards may use this command.\n\n\n@ARMAGEDDON [<reason>]\n\n  Initiates an immediate emergency shutdown of the Muck server, and does\nNOT save the database out to disk.  Use this ONLY when you suspect the\ndatabase has been corrupted, and it would be a BAD thing to save the\ndatabase out to disk.  This is a wizard-only command.\n\n  Examples:\n    @armageddon                  force shutdown server\n    @armageddon World ending!    force shutdown with given reason\n\n\n@RESTRICT [on|off]\n\n  Manages restriction of logins, turning on or off maintenance wiz-only login\nmode.  With no args, @restrict will print out the current login restriction\nstate.  With an argument of 'on', maintenance mode is turned on, and only\nwizards can log in.  With an argument of 'off', restricted login mode is turned\noff, and all players can log in.  NOTE: when the muck starts up in sanfix mode,\nwith a corrupted database, it will be with @restricted logins.\n\n\n@UNCOMPILE\n\n  Uncompiles all programs, removing them from memory.\n\n\n@RECONFIGURESSL\n\n  Only wizards may use this command.  Attempt to reread SSL certificate files\nand reset SSL options from @tune settings.  If it fails (for example,\nthe new certificate file is not usable), old settings will persist. Must be\ntyped in full.\n\n\n@TUNE\n@TUNE info\n@TUNE <param> [=<value>]\n@TUNE %<param>\n@TUNE info <param>\n\n  View and modify tunable parameters that configure how the server operates,\nor provide help on a specific parameter.\n\n  This is a wizard-only command.\n\n  Examples:\n    @tune              shows all parameters and their values\n    @tune info         shows all parameters, values, and brief descriptions\n    @tune foo          shows the value of foo\n    @tune foo=bar      sets the value of foo to bar\n    @tune %foo         resets foo to the default system value\n    @tune info foo     briefly describes foo\n\n  Some parameters may require a @RESTART or reload to apply.\n\n\n@CREDITS\n\n  Show a bit about those who contributed to the development of the\nmuck server software, giving credit where credit is due.\n\n\n@VERSION\n\n  Show the version information, build time, and compile options used.\n\n\n@DEBUG\n\n  Wizard only command that gives database usage stats for\n'diskbase'-style databases.  Only available if compiled with DISKBASE.\nMore options will be added in the future.\n\n  Examples:\n    @debug display propcache    display database property cache\n\n\n@TOPS\n@TOPS [muf|mpi] <count>\n@TOPS [muf|mpi] reset\n\n  Show process usage and runtime statistics for both MUF and MPI\nprograms.  Count controls the maximum rows of results shown.  If left\nblank, it uses the default of '10'.\n\n  This is a wizard-only command.\n\n  Examples:\n    @tops              show default amount of profiling statistics\n    @tops 3            show 3 rows of all profiling statistics\n    @tops muf 5        show 5 rows of MUF profiling statistics\n    @tops mpi reset    reset MPI collected profiling statistics\n\n\n@MEMORY\n\n  Wizard only command that gives detailed memory stats for the muck\nserver process.  If HAVE_MALLINFO is used, this command shows more\ninformation.\n\n\n@USAGE\n\n  Wizard only command that gives system resource usage stats for the\nmuck server process.\n\n\n@EXAMINE <object>\n\n  Print detailed information on the given object, including owner,\nlocation, home, referring objects, and more.  The information printed\ndepends on what type the object is, e.g. thing, room, player, exit.\n  Only player #1 can examine if GOD_PRIV is used, otherwise, only\nWizards may use this command.\n\n  Examples:\n    @examine           examine the current room\n    @examine #1        examine database object #1\n\n\n@SANITY\n\n  Scan the entire database, verifying that all objects have valid data,\nsuch as names, exits, ownerships, and check for orphan objects.  Shows\nall problems, but does not make any changes.  Only player #1 can manage\nsanity if GOD_PRIV is used, otherwise, only Wizards may do so.\n\n\n@SANCHANGE <dbref> <field> <object>\n\n  Manually change the field of an entry in the database, primarily to\nhelp with repairing a broken database.  Use with caution.  Only player\n#1 can manage sanity if GOD_PRIV is used, otherwise, only Wizards may\ndo so.\n\n  Fields are:\n    exits              start of Exits list\n\tcontents           start of Contents list\n\tnext               next object in list\n\tlocation           object's Location\n\thome               object's Home\n\towner              object's Owner\n\n\n@SANFIX\n\n  As with @sanity, scan the entire database and verify all is sane,\nbut also attempt to fix any problems found.  If sanity can not be\nrestored, you may need to manually repair the database with other\ncommands.  Only player #1 can manage sanity if GOD_PRIV is used,\notherwise, only Wizards may do so.\n\n\n@TELEDUMP\n\n  Wizard-only command that dumps the database, MUF programs, and macros\non disk to the current descriptor.  Output is base64-encoded.\n\n\n\n\n\n----------------------------------------------------------------------------\n                               Miscellaneous\n----------------------------------------------------------------------------\n\n\n\n\nMuck Basics Cheatsheet:\n\nThis is Fuzzball Muck, a user-extensible, multi-user chat system.\n\nBasic commands:\n  move/go <direction>\n  get/take <thing>; drop/throw <thing>\n  look; look <thing>; look <direction>\n  say <message>; \"<message>\n  pose <message>; :<message> --- shows your name, with the message after it.  Used for actions.\n  whisper <player> = <message>\n  inventory\n  news\n  @describe me = <description>\n  @password <oldpassword>=<newpassword>\n  page <player> --- tell player that you are looking for them (cost no pennies)\n  page <player> = <message> --- gives the player the message long-distance\n  gripe <message> --- Complain to the management.\n  home --- go home\n\nFor help on a specific command, type 'help <subject>'.\nFor a list of subjects, try 'help category', or 'help alpha'.\nRemember, no matter how bad it gets, you can always go 'home' or QUIT.\n\n\nCosts:\n\n  Kill: 10p (or more, up to 100p).\n  @dig: 10p\n  @create: 10p (or more, up to 505p)\n    sacrifice value=(cost-5)/5\n  @find, @owned: 100p.\n  @link: 1p (if you didn't already own it, +1p to the previous owner).\n  @open: 1p (2p if linked at the same time).\n  \nWizards don't need money to do anything.\n\n\nRemoving intermediate container 7e7680bfc2c5\n ---> 94dfb2041fae\nStep 6/14 : FROM ubuntu:20.04\n ---> d5447fc01ae6\nStep 7/14 : RUN apt update && apt dist-upgrade -y     && apt-get install --no-install-recommends -y libssl1.1 openssl     && mkdir -p /opt/fbmuck-base     && mkdir -p /opt/fbmuck-ssl\n ---> Running in 03486ec2298a\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mGet:1 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]\nGet:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\nGet:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\nGet:5 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2358 kB]\nGet:6 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [27.7 kB]\nGet:7 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1779 kB]\nGet:8 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [972 kB]\nGet:9 http://archive.ubuntu.com/ubuntu focal/restricted amd64 Packages [33.4 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal/universe amd64 Packages [11.3 MB]\nGet:11 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages [1275 kB]\nGet:12 http://archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [177 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2828 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [30.4 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1275 kB]\nGet:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1894 kB]\nGet:17 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\nGet:18 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\nFetched 24.7 MB in 2s (15.1 MB/s)\nReading package lists...\nBuilding dependency tree...\nReading state information...\nAll packages are up to date.\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mReading package lists...\nBuilding dependency tree...\nReading state information...\nCalculating upgrade...\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\nReading package lists...\nBuilding dependency tree...\nReading state information...\nSuggested packages:\n  ca-certificates\nThe following NEW packages will be installed:\n  libssl1.1 openssl\n0 upgraded, 2 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 1942 kB of archives.\nAfter this operation, 5412 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl1.1 amd64 1.1.1f-1ubuntu2.16 [1321 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openssl amd64 1.1.1f-1ubuntu2.16 [621 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 1942 kB in 1s (1670 kB/s)\nSelecting previously unselected package libssl1.1:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 4126 files and directories currently installed.)\r\nPreparing to unpack .../libssl1.1_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\nSelecting previously unselected package openssl.\r\nPreparing to unpack .../openssl_1.1.1f-1ubuntu2.16_amd64.deb ...\r\nUnpacking openssl (1.1.1f-1ubuntu2.16) ...\r\nSetting up libssl1.1:amd64 (1.1.1f-1ubuntu2.16) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\ndebconf: unable to initialize frontend: Readline\r\ndebconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.30.0 /usr/local/share/perl/5.30.0 /usr/lib/x86_64-linux-gnu/perl5/5.30 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.30 /usr/share/perl/5.30 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 7.)\r\ndebconf: falling back to frontend: Teletype\r\nSetting up openssl (1.1.1f-1ubuntu2.16) ...\r\nProcessing triggers for libc-bin (2.31-0ubuntu9.9) ...\r\nRemoving intermediate container 03486ec2298a\n ---> 907150e87fa1\nStep 8/14 : COPY --from=0 /root/scratch /usr\n ---> 96b247be78b0\nStep 9/14 : COPY scripts/docker-entrypoint.sh /usr/bin/\n ---> aae9ea22d676\nStep 10/14 : RUN chmod a+rx /usr/bin/docker-entrypoint.sh\n ---> Running in 95179360a8c9\nRemoving intermediate container 95179360a8c9\n ---> a2a79778d9b1\nStep 11/14 : COPY game/ dbs/starterdb/ /opt/fbmuck-base/\n ---> d9befbd91870\nStep 12/14 : COPY docs/ /opt/fbmuck-base/data\n ---> b6a25e4aea63\nStep 13/14 : RUN mv /opt/fbmuck-base/data/starterdb.db /opt/fbmuck-base/data/std-db.db\n ---> Running in f2eded5b2e29\nRemoving intermediate container f2eded5b2e29\n ---> 9fe8abfc01e7\nStep 14/14 : ENTRYPOINT [\"bash\", \"/usr/bin/docker-entrypoint.sh\"]\n ---> Running in 6517465eccc3\nRemoving intermediate container 6517465eccc3\n ---> ebdbf525db1d\nSuccessfully built ebdbf525db1d\nSuccessfully tagged fuzzball:latest\n","stderr":"","imageSize":126357379},"endTime":1672373049810}