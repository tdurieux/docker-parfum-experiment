{"repository":"https://github.com/manuc66/node-hp-scan-to","dockerfilePath":"Dockerfile","startTime":1672318626387,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/manuc66/node-hp-scan-to'...\n","error":null,"commit":"1a543db44542ca37d26116611897bd1807b6b7b3"},"originalBuild":{"startTimestamp":1672318627272,"endTimestamp":1672318715323,"error":null,"stdout":"Sending build context to Docker daemon    834kB\r\r\nStep 1/17 : FROM node:18-alpine  as build\n ---> 6d7b7852bcd3\nStep 2/17 : WORKDIR /app\n ---> Running in 601ad92e902a\nRemoving intermediate container 601ad92e902a\n ---> 46e1dcc7be84\nStep 3/17 : ADD . .\n ---> ca4ecb562d43\nStep 4/17 : RUN yarn install -d  && yarn build  && rm dist/*.d.ts dist/*.js.map\n ---> Running in 7287dfd0abd5\nyarn install v1.22.19\n[1/5] Validating package.json...\n[2/5] Resolving packages...\n[3/5] Fetching packages...\n[4/5] Linking dependencies...\n[5/5] Building fresh packages...\nDone in 12.04s.\nyarn run v1.22.19\n$ tsc -p .\nDone in 1.72s.\nRemoving intermediate container 7287dfd0abd5\n ---> f21a9ddf8029\nStep 5/17 : FROM node:18-alpine as app\n ---> 6d7b7852bcd3\nStep 6/17 : ENV NODE_ENV production\n ---> Running in 4bdf7f219ffa\nRemoving intermediate container 4bdf7f219ffa\n ---> e5182ca401e0\nStep 7/17 : ADD root/ /\n ---> 5158008e993b\nStep 8/17 : ARG S6_SRC_DEP=\"ca-certificates xz-utils wget\"\n ---> Running in 968e57498f95\nRemoving intermediate container 968e57498f95\n ---> 7acc12cb0e83\nStep 9/17 : ARG S6_SRC_URL=\"https://github.com/just-containers/s6-overlay/releases/download\"\n ---> Running in 04be21113c9e\nRemoving intermediate container 04be21113c9e\n ---> 7c97fe128ef9\nStep 10/17 : ARG S6_VERSION=v3.1.1.2\n ---> Running in b3fcc234828d\nRemoving intermediate container b3fcc234828d\n ---> 529da2e60af8\nStep 11/17 : RUN export SYS_ARCH=$(uname -m);     case \"$SYS_ARCH\" in         aarch64 ) export S6_ARCH='aarch64' ;;         arm64   ) export S6_ARCH='aarch64' ;;         armhf   ) export S6_ARCH='armhf'   ;;         arm*    ) export S6_ARCH='arm'     ;;         i4*     ) export S6_ARCH='i486'    ;;         i6*     ) export S6_ARCH='i686'    ;;         riscv64 ) export S6_ARCH='riscv64' ;;         s390*   ) export S6_ARCH='s390x'   ;;         *       ) export S6_ARCH='x86_64'  ;;     esac;     untar (){         echo \"⏬ Downloading $1\";         wget -nv -O- $1 | tar Jxp -C /;     };         echo \"⬇️ Downloading s6 overlay:${S6_ARCH}-${S6_VERSION} for ${SYS_ARCH}\"         && untar ${S6_SRC_URL}/${S6_VERSION}/s6-overlay-noarch.tar.xz         && untar ${S6_SRC_URL}/${S6_VERSION}/s6-overlay-${S6_ARCH}.tar.xz     echo \"⬇️ Install shadow (for groupmod and usermod) and tzdata (for TZ env variable)\"     && apk add --no-cache shadow tzdata\n ---> Running in 713e523db1e3\n⬇️ Downloading s6 overlay:x86_64-v3.1.1.2 for x86_64\n⏬ Downloading https://github.com/just-containers/s6-overlay/releases/download/v3.1.1.2/s6-overlay-noarch.tar.xz\n\u001b[91mConnecting to github.com (140.82.121.4:443)\n\u001b[0m\u001b[91mConnecting to objects.githubusercontent.com (185.199.108.133:443)\n\u001b[0m\u001b[91mwriting to stdout\n\u001b[0m\u001b[91m-                    100% |********************************|  5768  0:00:00 ETA\nwritten to stdout\n\u001b[0m⏬ Downloading https://github.com/just-containers/s6-overlay/releases/download/v3.1.1.2/s6-overlay-x86_64.tar.xz\n\u001b[91mConnecting to github.com (140.82.121.4:443)\n\u001b[0m\u001b[91mConnecting to objects.githubusercontent.com (185.199.108.133:443)\n\u001b[0m\u001b[91mwriting to stdout\n\u001b[0m\u001b[91m-                      2% |                                | 15762  0:00:41 ETA\n\u001b[0m\u001b[91m-                    100% |********************************|  646k  0:00:00 ETA\nwritten to stdout\n\u001b[0mfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/3) Installing linux-pam (1.5.2-r1)\n(2/3) Installing shadow (4.13-r0)\n(3/3) Installing tzdata (2022f-r1)\nExecuting busybox-1.35.0-r29.trigger\nOK: 15 MiB in 20 packages\nRemoving intermediate container 713e523db1e3\n ---> 58232b48c110\nStep 12/17 : WORKDIR /app\n ---> Running in ab26be932196\nRemoving intermediate container ab26be932196\n ---> b1e99cc4bb80\nStep 13/17 : COPY --from=build /app/dist/ /app/package.json ./\n ---> 7b72bbe2688f\nStep 14/17 : RUN yarn install -d  && yarn cache clean --force\n ---> Running in db0eae202f22\nyarn install v1.22.19\ninfo No lockfile found.\n[1/5] Validating package.json...\n[2/5] Resolving packages...\n\u001b[91mwarning codecov@3.8.3: https://about.codecov.io/blog/codecov-uploader-deprecation-plan/\n\u001b[0m[3/5] Fetching packages...\n[4/5] Linking dependencies...\n[5/5] Building fresh packages...\nsuccess Saved lockfile.\nDone in 18.81s.\nyarn cache v1.22.19\nsuccess Cleared cache.\nDone in 1.18s.\nRemoving intermediate container db0eae202f22\n ---> 4d9c0647f663\nStep 15/17 : VOLUME [\"/scan\"]\n ---> Running in 0e358fe48abd\nRemoving intermediate container 0e358fe48abd\n ---> bc21d09d44f8\nStep 16/17 : ENTRYPOINT [\"/init\"]\n ---> Running in 3d976d449b9f\nRemoving intermediate container 3d976d449b9f\n ---> 29275b599443\nStep 17/17 : CMD [\"/app.sh\"]\n ---> Running in 62b117dd23b2\nRemoving intermediate container 62b117dd23b2\n ---> c379a0ef1a80\nSuccessfully built c379a0ef1a80\nSuccessfully tagged node-hp-scan-to:latest\n","stderr":"","imageSize":206097444},"repair":{"violations":[],"repairedDockerfile":"FROM node:18-alpine  as build\nWORKDIR /app\n\nADD . .\nRUN yarn install -d \\\n && yarn build \\\n && rm dist/*.d.ts dist/*.js.map\n\nFROM node:18-alpine as app\nENV NODE_ENV production\nADD root/ /\n\n# sets version for s6 overlay\nARG S6_SRC_DEP=\"ca-certificates xz-utils wget\"\nARG S6_SRC_URL=\"https://github.com/just-containers/s6-overlay/releases/download\"\nARG S6_VERSION=v3.1.1.2\n\n# detect system arch then select the right version of s6\nRUN export SYS_ARCH=$(uname -m); \\\n    case \"$SYS_ARCH\" in \\\n        aarch64 ) export S6_ARCH='aarch64' ;; \\\n        arm64   ) export S6_ARCH='aarch64' ;; \\\n        armhf   ) export S6_ARCH='armhf'   ;; \\\n        arm*    ) export S6_ARCH='arm'     ;; \\\n        i4*     ) export S6_ARCH='i486'    ;; \\\n        i6*     ) export S6_ARCH='i686'    ;; \\\n        riscv64 ) export S6_ARCH='riscv64' ;; \\\n        s390*   ) export S6_ARCH='s390x'   ;; \\\n        *       ) export S6_ARCH='x86_64'  ;; \\\n    esac; \\\n    untar() { \\\n     { \\\n     echo \"⏬ Downloading $1\"; \\\n        wget -nv -O- $1 | tar Jxp -C /; \\\n       } \\\n      } \\\n\n    echo \"⬇️ Downloading s6 overlay:${S6_ARCH}-${S6_VERSION} for ${SYS_ARCH}\" \\\n        && untar ${S6_SRC_URL}/${S6_VERSION}/s6-overlay-noarch.tar.xz \\\n        && untar ${S6_SRC_URL}/${S6_VERSION}/s6-overlay-${S6_ARCH}.tar.xz \\\n    echo \"⬇️ Install shadow (for groupmod and usermod) and tzdata (for TZ env variable)\" \\\n    && apk add --no-cache shadow tzdata\n\n# add builded app\nWORKDIR /app\nCOPY --from=build /app/dist/ /app/package.json ./\nRUN yarn install -d \\\n && yarn cache clean --force\n\nVOLUME [\"/scan\"]\nENTRYPOINT [\"/init\"]\nCMD [\"/app.sh\"]\n\n"},"endTime":1672318715868}