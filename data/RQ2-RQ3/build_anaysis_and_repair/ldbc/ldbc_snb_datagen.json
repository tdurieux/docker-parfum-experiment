{"repository":"https://github.com/ldbc/ldbc_snb_datagen","dockerfilePath":"Dockerfile","startTime":1672326717168,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/ldbc/ldbc_snb_datagen'...\n","error":null,"commit":"fbec425ecfbb89c3a563c60ad0066f0256631240"},"originalBuild":{"startTimestamp":1672326728437,"endTimestamp":1672326995241,"error":null,"stdout":"Sending build context to Docker daemon   85.8MB\r\r\nStep 1/31 : FROM eclipse-temurin:8 as build-jar\n8: Pulling from library/eclipse-temurin\n6e3729cf69e0: Already exists\n96aa423488f0: Pulling fs layer\nf34fa275bf0b: Pulling fs layer\n28777328b1ab: Pulling fs layer\n96aa423488f0: Verifying Checksum\n96aa423488f0: Download complete\nf34fa275bf0b: Verifying Checksum\nf34fa275bf0b: Download complete\n96aa423488f0: Pull complete\nf34fa275bf0b: Pull complete\n28777328b1ab: Pull complete\nDigest: sha256:1a41d068f47c8b4a35618bf04ddd193a45a90b2d76b49e217516afab3dd334f1\nStatus: Downloaded newer image for eclipse-temurin:8\n ---> fc01e9fb4e3b\nStep 2/31 : RUN apt-get update\n ---> Running in 70f30123356e\nGet:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]\nGet:2 http://archive.ubuntu.com/ubuntu jammy InRelease [270 kB]\nGet:3 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [4,732 B]\nGet:4 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [593 kB]\nGet:5 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [781 kB]\nGet:6 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [667 kB]\nGet:7 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [114 kB]\nGet:8 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [99.8 kB]\nGet:9 http://archive.ubuntu.com/ubuntu jammy/universe amd64 Packages [17.5 MB]\nGet:10 http://archive.ubuntu.com/ubuntu jammy/multiverse amd64 Packages [266 kB]\nGet:11 http://archive.ubuntu.com/ubuntu jammy/restricted amd64 Packages [164 kB]\nGet:12 http://archive.ubuntu.com/ubuntu jammy/main amd64 Packages [1,792 kB]\nGet:13 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [8,150 B]\nGet:14 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [641 kB]\nGet:15 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [972 kB]\nGet:16 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [970 kB]\nGet:17 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [7,278 B]\nGet:18 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [3,520 B]\nFetched 24.9 MB in 3s (8,290 kB/s)\nReading package lists...\nRemoving intermediate container 70f30123356e\n ---> 25dfdad5a15b\nStep 3/31 : RUN apt-get install -y curl\n ---> Running in f692e022c06e\nReading package lists...\nBuilding dependency tree...\nReading state information...\ncurl is already the newest version (7.81.0-1ubuntu1.6).\n0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.\nRemoving intermediate container f692e022c06e\n ---> 3af7728d3cd6\nStep 4/31 : ARG SBT_VERSION=1.5.2\n ---> Running in 5e51ffb38171\nRemoving intermediate container 5e51ffb38171\n ---> f0a5da5ce6d1\nStep 5/31 : RUN cd /opt && curl -fSsL https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz | tar xvz\n ---> Running in fbc912c2f655\nsbt/\nsbt/bin/\nsbt/bin/sbtn-x86_64-apple-darwin\nsbt/bin/sbt\nsbt/bin/sbtn-x86_64-pc-win32.exe\nsbt/bin/sbt.bat\nsbt/bin/sbt-launch.jar\nsbt/bin/sbtn-x86_64-pc-linux\nsbt/conf/\nsbt/conf/sbtconfig.txt\nsbt/conf/sbtopts\nsbt/LICENSE\nsbt/NOTICE\nRemoving intermediate container fbc912c2f655\n ---> adad73b43479\nStep 6/31 : ENV PATH=/opt/sbt/bin:$PATH\n ---> Running in 9939311b6074\nRemoving intermediate container 9939311b6074\n ---> 08daac7bce8f\nStep 7/31 : WORKDIR build\n ---> Running in a358adb9966b\nRemoving intermediate container a358adb9966b\n ---> bb3c9ff1fb2d\nStep 8/31 : COPY build.sbt build.sbt\n ---> 89a2c6622c83\nStep 9/31 : COPY project project\n ---> 5fedef423679\nStep 10/31 : RUN sbt update\n ---> Running in d81f00cb6e4c\n\u001b[91m[info] [launcher] getting org.scala-sbt sbt 1.5.2  (this may take some time)...\n\u001b[0m\u001b[91m[info] [launcher] getting Scala 2.12.13 (for sbt)...\n\u001b[0m[info] welcome to sbt 1.5.2 (Temurin Java 1.8.0_352)\n[info] loading settings for project build-build from plugins.sbt ...\n[info] loading project definition from /build/project\n[info] loading settings for project build from build.sbt ...\n[info] set current project to ldbc_snb_datagen (in build file:/build/)\n[success] Total time: 10 s, completed Dec 29, 2022 3:13:27 PM\nRemoving intermediate container d81f00cb6e4c\n ---> fd0a8de38913\nStep 11/31 : COPY src src\n ---> fca71e9f5a02\nStep 12/31 : RUN sbt assembly\n ---> Running in 02ca7164f5a4\n[info] welcome to sbt 1.5.2 (Temurin Java 1.8.0_352)\n[info] loading settings for project build-build from plugins.sbt ...\n[info] loading project definition from /build/project\n[info] loading settings for project build from build.sbt ...\n[info] set current project to ldbc_snb_datagen (in build file:/build/)\n[info] compiling 49 Scala sources and 93 Java sources to /build/target/scala-2.12/classes ...\n[info] Non-compiled module 'compiler-bridge_2.12' for Scala 2.12.16. Compiling...\n[info]   Compilation completed in 8.137s.\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/FactorGenerationStage.scala:405:35: implicit numeric widening\n[warn]         val sampleSize = Math.min(count, Math.max(minSampleSize, count / (1 + Math.exp(count * curveFactor)) * 2))\n[warn]                                   ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/FactorGenerationStage.scala:455:35: implicit numeric widening\n[warn]         val sampleSize = Math.min(count, Math.max(minSampleSize, count / (1 + Math.exp(count * curveFactor)) * 2))\n[warn]                                   ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/io/package.scala:11:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class FactorTableSink in package io instead.\n[warn]   case class FactorTableSink(path: String, format: String = \"parquet\", overwrite: Boolean = false)\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/io/package.scala:16:23: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class FactorTableWriter in package io instead.\n[warn]   private final class FactorTableWriter[M <: Mode] extends Writer[FactorTableSink] with Logging {\n[warn]                       ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/io/package.scala:29:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait WriterInstances in package io instead.\n[warn]   trait WriterInstances {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/GenerationStage.scala:33:22: implicit numeric widening\n[warn]         config.getInt(\"hadoop.numThreads\", spark.sparkContext.defaultParallelism)\n[warn]                      ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/generators/SparkPersonGenerator.scala:23:95: implicit numeric widening\n[warn]         size = Math.min(DatagenParams.numPersons - DatagenParams.blockSize * i, DatagenParams.blockSize).toInt\n[warn]                                                                                               ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/generators/SparkPersonGenerator.scala:31:17: implicit numeric widening\n[warn]       .range(0, numBlocks, step = 1, numSlices = partitions)\n[warn]                 ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/serializers/ActivityOutputStream.scala:93:12: implicit numeric widening\n[warn]       post.getCountryId\n[warn]            ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/serializers/ActivityOutputStream.scala:147:13: implicit numeric widening\n[warn]       photo.getCountryId\n[warn]             ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/serializers/PersonOutputStream.scala:35:22: implicit numeric widening\n[warn]     getGender(person.getGender),\n[warn]                      ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/csv/package.scala:10:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait CsvRowEncoder in package csv instead.\n[warn]   trait CsvRowEncoder[T] {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/csv/package.scala:18:15: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class CsvRecordOutputStream in package csv instead.\n[warn]   final class CsvRecordOutputStream[T: CsvRowEncoder](\n[warn]               ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/csv/package.scala:42:15: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class MakeCsvBatchPart in package csv instead.\n[warn]   final class MakeCsvBatchPart[T <: Product: CsvRowEncoder](pathPrefix: String, writeContext: WriteContext) extends MakeBatchPart[T] {\n[warn]               ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:26:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait RecordOutputStream in package raw instead.\n[warn]   trait RecordOutputStream[T] extends AutoCloseable {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:30:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait RawFormat in package raw instead.\n[warn]   sealed trait RawFormat\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:34:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class RawSink in package raw instead.\n[warn]   case class RawSink(\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:42:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class WriteContext in package raw instead.\n[warn]   class WriteContext(\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:71:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class RawSerializationTaskContext in package raw instead.\n[warn]   class RawSerializationTaskContext(\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:172:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class RawSerializationJobContext in package raw instead.\n[warn]   class RawSerializationJobContext(\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:13:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait Cardinality in package model instead.\n[warn]   sealed trait Cardinality\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:20:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait EntityTraits in package model instead.\n[warn]   trait EntityTraits[A] {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:41:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait EntityType in package model instead.\n[warn]   sealed trait EntityType {\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:91:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait UntypedEntities in package model instead.\n[warn]   trait UntypedEntities[T] { def value: Map[EntityType, StructType] }\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:97:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait UntypedEntitiesInstances in package model instead.\n[warn]   trait UntypedEntitiesInstances {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:113:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class Batched in package model instead.\n[warn]   case class Batched(entity: DataFrame, batchId: Seq[String], ordering: Seq[Column])\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:115:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class BatchedEntity in package model instead.\n[warn]   case class BatchedEntity(\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:121:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait Mode in package model instead.\n[warn]   sealed trait Mode {\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:152:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class Graph in package model instead.\n[warn]   case class Graph[+M <: Mode](\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:157:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class GraphDef in package model instead.\n[warn]   case class GraphDef[+M <: Mode](\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:165:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait BatchPeriod in package model instead.\n[warn]   sealed trait BatchPeriod\n[warn]                ^\n[warn] 31 warnings found\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/Forum.java:45:1: serializable class ldbc.snb.datagen.entities.dynamic.Forum has no definition of serialVersionUID\n[warn] public class Forum implements DynamicActivity {\n[warn]     public enum ForumType {\n[warn]         WALL,\n[warn]         ALBUM,\n[warn]         GROUP\n[warn]     }\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long id;\n[warn]     private PersonSummary moderator;\n[warn]     private long moderatorDeletionDate;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private String title;\n[warn]     private List<Integer> tags;\n[warn]     private int placeId;\n[warn]     private int language;\n[warn]     private List<ForumMembership> memberships;\n[warn]     private ForumType forumType;\n[warn] \n[warn] \n[warn]     public Forum(long id, long creationDate, long deletionDate, PersonSummary moderator, long moderatorDeletionDate, String title, int placeId, int language, ForumType forumType, boolean isExplicitlyDeleted) {\n[warn]         assert (moderator.getCreationDate() + DatagenParams.delta) <= creationDate : \"Moderator's creation date is less than or equal to the Forum creation date\";\n[warn]         memberships = new ArrayList<>();\n[warn]         tags = new ArrayList<>();\n[warn]         this.id = id;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.title = title;\n[warn]         this.placeId = placeId;\n[warn]         this.moderator = new PersonSummary(moderator);\n[warn]         this.moderatorDeletionDate = moderatorDeletionDate;\n[warn]         this.language = language;\n[warn]         this.forumType = forumType;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void addMember(ForumMembership member) {\n[warn]         memberships.add(member);\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getId() {\n[warn]         return id;\n[warn]     }\n[warn] \n[warn]     public void setId(long id) {\n[warn]         this.id = id;\n[warn]     }\n[warn] \n[warn]     public PersonSummary getModerator() {\n[warn]         return moderator;\n[warn]     }\n[warn] \n[warn]     public void setModerator(PersonSummary moderator) {\n[warn]         this.moderator = moderator;\n[warn]     }\n[warn] \n[warn]     public long getModeratorDeletionDate() {\n[warn]         return moderatorDeletionDate;\n[warn]     }\n[warn] \n[warn]     public void setModeratorDeletionDate(long moderatorDeletionDate) {\n[warn]         this.moderatorDeletionDate = moderatorDeletionDate;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public String getTitle() {\n[warn]         return title;\n[warn]     }\n[warn] \n[warn]     public void setTitle(String title) {\n[warn]         this.title = title;\n[warn]     }\n[warn] \n[warn]     public List<Integer> getTags() {\n[warn]         return tags;\n[warn]     }\n[warn] \n[warn]     public void setTags(List<Integer> tags) {\n[warn]         this.tags = tags;\n[warn]     }\n[warn] \n[warn]     public int getPlaceId() {\n[warn]         return placeId;\n[warn]     }\n[warn] \n[warn]     public void setPlaceId(int placeId) {\n[warn]         this.placeId = placeId;\n[warn]     }\n[warn] \n[warn]     public int getLanguage() {\n[warn]         return language;\n[warn]     }\n[warn] \n[warn]     public void setLanguage(int language) {\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn]     public List<ForumMembership> getMemberships() {\n[warn]         return memberships;\n[warn]     }\n[warn] \n[warn]     public void setMemberships(List<ForumMembership> memberships) {\n[warn]         this.memberships = memberships;\n[warn]     }\n[warn] \n[warn]     public ForumType getForumType() {\n[warn]         return forumType;\n[warn]     }\n[warn] \n[warn]     public void setForumType(ForumType forumType) {\n[warn]         this.forumType = forumType;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/person/PersonSummary.java:11:1: serializable class ldbc.snb.datagen.entities.dynamic.person.PersonSummary has no definition of serialVersionUID\n[warn] public final class PersonSummary implements Writable, Serializable {\n[warn]     private long accountId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private int browserId;\n[warn]     private int country;\n[warn]     private IP ipAddress;\n[warn]     private boolean isLargePoster;\n[warn]     private boolean isMessageDeleter;\n[warn] \n[warn]     public PersonSummary() {\n[warn]         ipAddress = new IP();\n[warn]     }\n[warn] \n[warn]     public PersonSummary(Person p) {\n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         browserId = p.getBrowserId();\n[warn]         country = p.getCountryId();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn]         isLargePoster = p.getIsLargePoster();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]     }\n[warn] \n[warn]     public PersonSummary(PersonSummary p) {\n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         browserId = p.getBrowserId();\n[warn]         country = p.getCountry();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn]         isLargePoster = p.isLargePoster();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]     }\n[warn] \n[warn]     public void copy(PersonSummary p) {\n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         browserId = p.getBrowserId();\n[warn]         country = p.getCountry();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn]         isLargePoster = p.isLargePoster();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn] \n[warn]         accountId = arg0.readLong();\n[warn]         creationDate = arg0.readLong();\n[warn]         deletionDate = arg0.readLong();\n[warn]         browserId = arg0.readInt();\n[warn]         country = arg0.readInt();\n[warn]         ipAddress.readFields(arg0);\n[warn]         isLargePoster = arg0.readBoolean();\n[warn]         isMessageDeleter = arg0.readBoolean();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeLong(accountId);\n[warn]         arg0.writeLong(creationDate);\n[warn]         arg0.writeLong(deletionDate);\n[warn]         arg0.writeInt(browserId);\n[warn]         arg0.writeInt(country);\n[warn]         ipAddress.write(arg0);\n[warn]         arg0.writeBoolean(isLargePoster);\n[warn]         arg0.writeBoolean(isMessageDeleter);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         PersonSummary that = (PersonSummary) o;\n[warn]         return accountId == that.accountId &&\n[warn]                 creationDate == that.creationDate &&\n[warn]                 deletionDate == that.deletionDate &&\n[warn]                 browserId == that.browserId &&\n[warn]                 country == that.country &&\n[warn]                 isLargePoster == that.isLargePoster &&\n[warn]                 isMessageDeleter == that.isMessageDeleter &&\n[warn]                 Objects.equals(ipAddress, that.ipAddress);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(accountId, creationDate, deletionDate, browserId, country, ipAddress, isLargePoster, isMessageDeleter);\n[warn]     }\n[warn] \n[warn]     public long getAccountId() {\n[warn]         return accountId;\n[warn]     }\n[warn] \n[warn]     public void setAccountId(long accountId) {\n[warn]         this.accountId = accountId;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public int getBrowserId() {\n[warn]         return browserId;\n[warn]     }\n[warn] \n[warn]     public void setBrowserId(int browserId) {\n[warn]         this.browserId = browserId;\n[warn]     }\n[warn] \n[warn]     public int getCountry() {\n[warn]         return country;\n[warn]     }\n[warn] \n[warn]     public void setCountry(int country) {\n[warn]         this.country = country;\n[warn]     }\n[warn] \n[warn]     public IP getIpAddress() {\n[warn]         return ipAddress;\n[warn]     }\n[warn] \n[warn]     public void setIpAddress(IP ipAddress) {\n[warn]         this.ipAddress = ipAddress;\n[warn]     }\n[warn] \n[warn]     public boolean isLargePoster() {\n[warn]         return isLargePoster;\n[warn]     }\n[warn] \n[warn]     public void setLargePoster(boolean largePoster) {\n[warn]         isLargePoster = largePoster;\n[warn]     }\n[warn] \n[warn]     public boolean isMessageDeleter() {\n[warn]         return isMessageDeleter;\n[warn]     }\n[warn] \n[warn]     public void setMessageDeleter(boolean messageDeleter) {\n[warn]         isMessageDeleter = messageDeleter;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/ForumMembership.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.ForumMembership has no definition of serialVersionUID\n[warn] public class ForumMembership implements DynamicActivity {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long forumId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private PersonSummary person;\n[warn]     private Forum.ForumType forumType;\n[warn] \n[warn]     public ForumMembership(long forumId, long creationDate, long deletionDate, PersonSummary p, Forum.ForumType forumType, boolean isExplicitlyDeleted) {\n[warn]         assert (p.getCreationDate() + DatagenParams.delta) <= creationDate : \"Person creation date is larger than membership\";\n[warn]         this.forumId = forumId;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.forumType = forumType;\n[warn]         person = new PersonSummary(p);\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getForumId() {\n[warn]         return forumId;\n[warn]     }\n[warn] \n[warn]     public void setForumId(long forumId) {\n[warn]         this.forumId = forumId;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public PersonSummary getPerson() {\n[warn]         return person;\n[warn]     }\n[warn] \n[warn]     public void setPerson(PersonSummary p) {\n[warn]         person = p;\n[warn]     }\n[warn] \n[warn]     public Forum.ForumType getForumType() {\n[warn]         return forumType;\n[warn]     }\n[warn] \n[warn]     public void setForumType(Forum.ForumType forumType) {\n[warn]         this.forumType = forumType;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/person/IP.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.person.IP has no definition of serialVersionUID\n[warn] public final class IP implements Writable, Serializable, Cloneable {\n[warn] \n[warn]     public static final int BYTE_MASK = 0xFF;\n[warn]     public static final int IP4_SIZE_BITS = 32;\n[warn]     public static final int BYTE1_SHIFT_POSITION = 24;\n[warn]     public static final int BYTE2_SHIFT_POSITION = 16;\n[warn]     public static final int BYTE3_SHIFT_POSITION = 8;\n[warn] \n[warn]     public void setIp(int ip) {\n[warn]         this.ip = ip;\n[warn]     }\n[warn] \n[warn]     public void setMask(int mask) {\n[warn]         this.mask = mask;\n[warn]     }\n[warn] \n[warn]     public void setNetwork(int network) {\n[warn]         this.network = network;\n[warn]     }\n[warn] \n[warn]     private int ip;\n[warn]     private int mask;\n[warn]     private int network;\n[warn] \n[warn]     public IP() {\n[warn] \n[warn]     }\n[warn] \n[warn]     public IP(int byte1, int byte2, int byte3, int byte4, int networkMask) {\n[warn]         ip = ((byte1 & BYTE_MASK) << BYTE1_SHIFT_POSITION) |\n[warn]                 ((byte2 & BYTE_MASK) << BYTE2_SHIFT_POSITION) |\n[warn]                 ((byte3 & BYTE_MASK) << BYTE3_SHIFT_POSITION) |\n[warn]                 (byte4 & BYTE_MASK);\n[warn] \n[warn]         mask = 0xFFFFFFFF << (IP4_SIZE_BITS - networkMask);\n[warn]         network = ip & mask;\n[warn]     }\n[warn] \n[warn]     public IP(IP i) {\n[warn]         this.ip = i.ip;\n[warn]         this.mask = i.mask;\n[warn]         this.network = i.network;\n[warn]     }\n[warn] \n[warn]     public IP(int ip, int mask) {\n[warn]         this.ip = ip;\n[warn]         this.mask = mask;\n[warn]         this.network = this.ip & this.mask;\n[warn]     }\n[warn] \n[warn]     public int getIp() {\n[warn]         return ip;\n[warn]     }\n[warn] \n[warn]     public int getMask() {\n[warn]         return mask;\n[warn]     }\n[warn] \n[warn] \n[warn]     public int getNetwork() {\n[warn]         return network;\n[warn]     }\n[warn] \n[warn]     public void copy(IP ip) {\n[warn]         this.ip = ip.ip;\n[warn]         this.mask = ip.mask;\n[warn]         this.network = ip.network;\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn]         ip = arg0.readInt();\n[warn]         mask = arg0.readInt();\n[warn]         network = arg0.readInt();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeInt(ip);\n[warn]         arg0.writeInt(mask);\n[warn]         arg0.writeInt(network);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         IP ip1 = (IP) o;\n[warn]         return ip == ip1.ip &&\n[warn]                 mask == ip1.mask &&\n[warn]                 network == ip1.network;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(ip, mask, network);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public String toString() {\n[warn]         return ipToString(ip);\n[warn]     }\n[warn] \n[warn]     private static String ipToString(int ip) {\n[warn]         return ((ip >>> BYTE1_SHIFT_POSITION) & BYTE_MASK) + \".\" +\n[warn]                 ((ip >>> BYTE2_SHIFT_POSITION) & BYTE_MASK) + \".\" +\n[warn]                 ((ip >>> BYTE3_SHIFT_POSITION) & BYTE_MASK) + \".\" +\n[warn]                 (ip & BYTE_MASK);\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/person/Person.java:47:1: serializable class ldbc.snb.datagen.entities.dynamic.person.Person has no definition of serialVersionUID\n[warn] public final class Person implements Writable, Serializable, Comparable<Person> {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private boolean isMessageDeleter;\n[warn]     private long accountId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private long maxNumKnows;\n[warn]     private List<Knows> knows;\n[warn]     private int browserId;\n[warn]     private IP ipAddress;\n[warn]     private int countryId;\n[warn]     private int cityId;\n[warn]     private List<Integer> interests;\n[warn]     private int mainInterest;\n[warn]     private int universityLocationId;\n[warn]     private byte gender;\n[warn]     private long birthday;\n[warn]     private boolean isLargePoster;\n[warn]     private long randomId;\n[warn] \n[warn]     private List<String> emails;\n[warn]     private List<Integer> languages;\n[warn]     private String firstName;\n[warn]     private String lastName;\n[warn]     private Map<Long, Long> companies;\n[warn]     private long classYear;\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         Person person = (Person) o;\n[warn]         return isExplicitlyDeleted == person.isExplicitlyDeleted &&\n[warn]                 isMessageDeleter == person.isMessageDeleter &&\n[warn]                 accountId == person.accountId &&\n[warn]                 creationDate == person.creationDate &&\n[warn]                 deletionDate == person.deletionDate &&\n[warn]                 maxNumKnows == person.maxNumKnows &&\n[warn]                 browserId == person.browserId &&\n[warn]                 countryId == person.countryId &&\n[warn]                 cityId == person.cityId &&\n[warn]                 mainInterest == person.mainInterest &&\n[warn]                 universityLocationId == person.universityLocationId &&\n[warn]                 gender == person.gender &&\n[warn]                 birthday == person.birthday &&\n[warn]                 isLargePoster == person.isLargePoster &&\n[warn]                 randomId == person.randomId &&\n[warn]                 classYear == person.classYear &&\n[warn]                 Objects.equals(knows, person.knows) &&\n[warn]                 Objects.equals(ipAddress, person.ipAddress) &&\n[warn]                 Objects.equals(interests, person.interests) &&\n[warn]                 Objects.equals(emails, person.emails) &&\n[warn]                 Objects.equals(languages, person.languages) &&\n[warn]                 Objects.equals(firstName, person.firstName) &&\n[warn]                 Objects.equals(lastName, person.lastName) &&\n[warn]                 Objects.equals(companies, person.companies);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(isExplicitlyDeleted, isMessageDeleter, accountId, creationDate, deletionDate, maxNumKnows, knows, browserId, ipAddress, countryId, cityId, interests, mainInterest, universityLocationId, gender, birthday, isLargePoster, randomId, emails, languages, firstName, lastName, companies, classYear);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public String toString() {\n[warn]         return \"Person{\" +\n[warn]                 \"isExplicitlyDeleted=\" + isExplicitlyDeleted +\n[warn]                 \", isMessageDeleter=\" + isMessageDeleter +\n[warn]                 \", accountId=\" + accountId +\n[warn]                 \", creationDate=\" + creationDate +\n[warn]                 \", deletionDate=\" + deletionDate +\n[warn]                 \", maxNumKnows=\" + maxNumKnows +\n[warn]                 \", knows=\" + knows +\n[warn]                 \", browserId=\" + browserId +\n[warn]                 \", ipAddress=\" + ipAddress +\n[warn]                 \", countryId=\" + countryId +\n[warn]                 \", cityId=\" + cityId +\n[warn]                 \", interests=\" + interests +\n[warn]                 \", mainInterest=\" + mainInterest +\n[warn]                 \", universityLocationId=\" + universityLocationId +\n[warn]                 \", gender=\" + gender +\n[warn]                 \", birthday=\" + birthday +\n[warn]                 \", isLargePoster=\" + isLargePoster +\n[warn]                 \", randomId=\" + randomId +\n[warn]                 \", emails=\" + emails +\n[warn]                 \", languages=\" + languages +\n[warn]                 \", firstName='\" + firstName + '\\'' +\n[warn]                 \", lastName='\" + lastName + '\\'' +\n[warn]                 \", companies=\" + companies +\n[warn]                 \", classYear=\" + classYear +\n[warn]                 '}';\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int compareTo(Person o) {\n[warn]         return Long.compare(this.getAccountId(), o.getAccountId());\n[warn] \n[warn]     }\n[warn] \n[warn]     public interface PersonSimilarity {\n[warn]         float similarity(Person personA, Person personB);\n[warn]     }\n[warn] \n[warn]     public Person() {\n[warn]         knows = new ArrayList<>();\n[warn]         emails = new ArrayList<>();\n[warn]         interests = new ArrayList<>();\n[warn]         languages = new ArrayList<>();\n[warn]         companies = new HashMap<>();\n[warn]         ipAddress = new IP();\n[warn]     }\n[warn] \n[warn]     public Person(Person p) {\n[warn] \n[warn]         isExplicitlyDeleted = p.isExplicitlyDeleted();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]         knows = new ArrayList<>();\n[warn]         emails = new ArrayList<>();\n[warn]         interests = new ArrayList<>();\n[warn]         languages = new ArrayList<>();\n[warn]         companies = new HashMap<>();\n[warn] \n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         maxNumKnows = p.getMaxNumKnows();\n[warn]         for (Knows k : p.getKnows()) {\n[warn]             knows.add(new Knows(k));\n[warn]         }\n[warn] \n[warn]         browserId = p.getBrowserId();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn] \n[warn]         countryId = p.getCountryId();\n[warn]         cityId = p.getCityId();\n[warn]         interests.addAll(p.getInterests());\n[warn]         mainInterest = p.getMainInterest();\n[warn] \n[warn]         universityLocationId = p.getUniversityLocationId();\n[warn]         gender = p.getGender();\n[warn]         birthday = p.getBirthday();\n[warn]         isLargePoster = p.getIsLargePoster();\n[warn]         randomId = p.getRandomId();\n[warn] \n[warn]         emails.addAll(p.getEmails());\n[warn] \n[warn]         languages.addAll(p.getLanguages());\n[warn] \n[warn]         firstName = p.getFirstName();\n[warn]         lastName = p.getLastName();\n[warn]         for (Map.Entry<Long, Long> c : p.getCompanies().entrySet()) {\n[warn]             companies.put(c.getKey(), c.getValue());\n[warn]         }\n[warn]         classYear = p.getClassYear();\n[warn] \n[warn]     }\n[warn] \n[warn]     public boolean isMessageDeleter() {\n[warn]         return isMessageDeleter;\n[warn]     }\n[warn] \n[warn]     public void setMessageDeleter(boolean messageDeleter) {\n[warn]         isMessageDeleter = messageDeleter;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getAccountId() {\n[warn]         return accountId;\n[warn]     }\n[warn] \n[warn]     public void setAccountId(long id) {\n[warn]         accountId = id;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public long getMaxNumKnows() {\n[warn]         return maxNumKnows;\n[warn]     }\n[warn] \n[warn]     public void setMaxNumKnows(long maxKnows) {\n[warn]         maxNumKnows = maxKnows;\n[warn]     }\n[warn] \n[warn]     public List<Knows> getKnows() {\n[warn]         return knows;\n[warn]     }\n[warn] \n[warn]     public void setKnows(List<Knows> knows) {\n[warn]         this.knows.clear();\n[warn]         this.knows.addAll(knows);\n[warn]     }\n[warn] \n[warn]     public int getBrowserId() {\n[warn]         return browserId;\n[warn]     }\n[warn] \n[warn]     public void setBrowserId(int browserId) {\n[warn]         this.browserId = browserId;\n[warn]     }\n[warn] \n[warn]     public IP getIpAddress() {\n[warn]         return ipAddress;\n[warn]     }\n[warn] \n[warn]     public void setIpAddress(IP ipAddress) {\n[warn]         this.ipAddress.copy(ipAddress);\n[warn]     }\n[warn] \n[warn]     public int getCountryId() {\n[warn]         return countryId;\n[warn]     }\n[warn] \n[warn]     public void setCountryId(int countryId) {\n[warn]         this.countryId = countryId;\n[warn]     }\n[warn] \n[warn]     public int getCityId() {\n[warn]         return cityId;\n[warn]     }\n[warn] \n[warn]     public void setCityId(int cityId) {\n[warn]         this.cityId = cityId;\n[warn]     }\n[warn] \n[warn]     public List<Integer> getInterests() {\n[warn]         return interests;\n[warn]     }\n[warn] \n[warn]     public void setInterests(List<Integer> interests) {\n[warn]         this.interests.clear();\n[warn]         this.interests.addAll(interests);\n[warn]     }\n[warn] \n[warn]     public int getMainInterest() {\n[warn]         return mainInterest;\n[warn]     }\n[warn] \n[warn]     public void setMainInterest(int interest) {\n[warn]         mainInterest = interest;\n[warn]     }\n[warn] \n[warn]     public int getUniversityLocationId() {\n[warn]         return universityLocationId;\n[warn]     }\n[warn] \n[warn]     public void setUniversityLocationId(int location) {\n[warn]         universityLocationId = location;\n[warn]     }\n[warn] \n[warn]     public byte getGender() {\n[warn]         return gender;\n[warn]     }\n[warn] \n[warn]     public void setGender(byte gender) {\n[warn]         this.gender = gender;\n[warn]     }\n[warn] \n[warn]     public long getBirthday() {\n[warn]         return birthday;\n[warn]     }\n[warn] \n[warn]     public void setBirthday(long birthday) {\n[warn]         this.birthday = birthday;\n[warn]     }\n[warn] \n[warn]     public boolean getIsLargePoster() {\n[warn]         return isLargePoster;\n[warn]     }\n[warn] \n[warn]     public void setIsLargePoster(boolean largePoster) {\n[warn]         isLargePoster = largePoster;\n[warn]     }\n[warn] \n[warn]     public long getRandomId() {\n[warn]         return randomId;\n[warn]     }\n[warn] \n[warn]     public void setRandomId(long randomId) {\n[warn]         this.randomId = randomId;\n[warn]     }\n[warn] \n[warn]     public List<String> getEmails() {\n[warn]         return emails;\n[warn]     }\n[warn] \n[warn]     public void setEmails(List<String> emails) {\n[warn]         emails.clear();\n[warn]         this.emails.addAll(emails);\n[warn]     }\n[warn] \n[warn]     public List<Integer> getLanguages() {\n[warn]         return languages;\n[warn]     }\n[warn] \n[warn]     public void setLanguages(List<Integer> languages) {\n[warn]         this.languages.clear();\n[warn]         this.languages.addAll(languages);\n[warn]     }\n[warn] \n[warn]     public String getFirstName() {\n[warn]         return firstName;\n[warn]     }\n[warn] \n[warn]     public void setFirstName(String firstName) {\n[warn]         this.firstName = firstName;\n[warn]     }\n[warn] \n[warn]     public String getLastName() {\n[warn]         return lastName;\n[warn]     }\n[warn] \n[warn]     public void setLastName(String lastName) {\n[warn]         this.lastName = lastName;\n[warn]     }\n[warn] \n[warn]     public Map<Long, Long> getCompanies() {\n[warn]         return companies;\n[warn]     }\n[warn] \n[warn]     public void setCompanies(Map<Long, Long> companies) {\n[warn]         this.companies = companies;\n[warn]     }\n[warn] \n[warn]     public long getClassYear() {\n[warn]         return classYear;\n[warn]     }\n[warn] \n[warn]     public void setClassYear(long classYear) {\n[warn]         this.classYear = classYear;\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn]         isExplicitlyDeleted = arg0.readBoolean();\n[warn]         isMessageDeleter = arg0.readBoolean();\n[warn]         accountId = arg0.readLong();\n[warn]         creationDate = arg0.readLong();\n[warn]         deletionDate = arg0.readLong();\n[warn]         maxNumKnows = arg0.readLong();\n[warn]         int numFriends = arg0.readShort();\n[warn]         knows = new ArrayList<>();\n[warn]         for (int i = 0; i < numFriends; i++) {\n[warn]             Knows fr = new Knows();\n[warn]             fr.readFields(arg0);\n[warn]             knows.add(fr);\n[warn]         }\n[warn] \n[warn]         browserId = arg0.readInt();\n[warn] \n[warn]         ipAddress.readFields(arg0);\n[warn] \n[warn]         countryId = arg0.readInt();\n[warn]         cityId = arg0.readInt();\n[warn] \n[warn]         byte numTags = arg0.readByte();\n[warn]         interests = new ArrayList<>();\n[warn]         for (byte i = 0; i < numTags; i++) {\n[warn]             interests.add(arg0.readInt());\n[warn]         }\n[warn]         mainInterest = arg0.readInt();\n[warn] \n[warn]         universityLocationId = arg0.readInt();\n[warn]         gender = arg0.readByte();\n[warn]         birthday = arg0.readLong();\n[warn]         isLargePoster = arg0.readBoolean();\n[warn]         randomId = arg0.readLong();\n[warn] \n[warn]         int numEmails = arg0.readInt();\n[warn]         emails = new ArrayList<>();\n[warn]         for (int i = 0; i < numEmails; ++i) {\n[warn]             emails.add(arg0.readUTF());\n[warn]         }\n[warn]         int numLanguages = arg0.readInt();\n[warn]         languages = new ArrayList<>();\n[warn]         for (int i = 0; i < numLanguages; ++i) {\n[warn]             languages.add(arg0.readInt());\n[warn]         }\n[warn]         firstName = arg0.readUTF();\n[warn]         lastName = arg0.readUTF();\n[warn]         int numCompanies = arg0.readInt();\n[warn]         companies = new HashMap<>();\n[warn]         for (int i = 0; i < numCompanies; ++i) {\n[warn]             companies.put(arg0.readLong(), arg0.readLong());\n[warn]         }\n[warn]         classYear = arg0.readLong();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeBoolean(isExplicitlyDeleted);\n[warn]         arg0.writeBoolean(isMessageDeleter);\n[warn]         arg0.writeLong(accountId);\n[warn]         arg0.writeLong(creationDate);\n[warn]         arg0.writeLong(deletionDate);\n[warn]         arg0.writeLong(maxNumKnows);\n[warn]         arg0.writeShort(knows.size());\n[warn] \n[warn]         for (Knows f : knows) {\n[warn]             f.write(arg0);\n[warn]         }\n[warn] \n[warn]         arg0.writeInt(browserId);\n[warn]         ipAddress.write(arg0);\n[warn] \n[warn]         arg0.writeInt(countryId);\n[warn]         arg0.writeInt(cityId);\n[warn] \n[warn]         arg0.writeByte((byte) interests.size());\n[warn]         for (Integer interest : interests) {\n[warn]             arg0.writeInt(interest);\n[warn]         }\n[warn]         arg0.writeInt(mainInterest);\n[warn]         arg0.writeInt(universityLocationId);\n[warn]         arg0.writeByte(gender);\n[warn]         arg0.writeLong(birthday);\n[warn]         arg0.writeBoolean(isLargePoster);\n[warn]         arg0.writeLong(randomId);\n[warn] \n[warn]         arg0.writeInt(emails.size());\n[warn]         for (String s : emails) {\n[warn]             arg0.writeUTF(s);\n[warn]         }\n[warn]         arg0.writeInt(languages.size());\n[warn]         for (Integer l : languages) {\n[warn]             arg0.writeInt(l);\n[warn]         }\n[warn]         arg0.writeUTF(firstName);\n[warn]         arg0.writeUTF(lastName);\n[warn]         arg0.writeInt(companies.size());\n[warn]         for (Map.Entry<Long, Long> e : companies.entrySet()) {\n[warn]             arg0.writeLong(e.getKey());\n[warn]             arg0.writeLong(e.getValue());\n[warn]         }\n[warn]         arg0.writeLong(classYear);\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/Knows.java:51:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.Knows has no definition of serialVersionUID\n[warn] public final class Knows implements Writable, Comparable<Knows>, Serializable {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private PersonSummary to;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private float weight = 0.0f;\n[warn]     public static int num = 0;\n[warn] \n[warn]     public Knows() {\n[warn]         to = new PersonSummary();\n[warn]     }\n[warn] \n[warn]     public Knows(Knows k) {\n[warn]         to = new PersonSummary(k.to());\n[warn]         creationDate = k.getCreationDate();\n[warn]         deletionDate = k.getDeletionDate();\n[warn]         weight = k.getWeight();\n[warn]         isExplicitlyDeleted = k.isExplicitlyDeleted();\n[warn]     }\n[warn] \n[warn]     public Knows(Person to, long creationDate, long deletionDate, float weight, boolean isExplicitlyDeleted) {\n[warn]         this.to = new PersonSummary(to);\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.weight = weight;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public PersonSummary to() {\n[warn]         return to;\n[warn]     }\n[warn] \n[warn]     public void to(PersonSummary to) {\n[warn]         this.to.copy(to);\n[warn]     }\n[warn] \n[warn]     public PersonSummary getTo() {\n[warn]         return to;\n[warn]     }\n[warn] \n[warn]     public void setTo(PersonSummary to) {\n[warn]         this.to = to;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setWeight(float weight) {\n[warn]         this.weight = weight;\n[warn]     }\n[warn] \n[warn]     public float getWeight() {\n[warn]         return weight;\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn]         isExplicitlyDeleted = arg0.readBoolean();\n[warn]         to.readFields(arg0);\n[warn]         creationDate = arg0.readLong();\n[warn]         deletionDate = arg0.readLong();\n[warn]         weight = arg0.readFloat();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeBoolean(isExplicitlyDeleted);\n[warn]         to.write(arg0);\n[warn]         arg0.writeLong(creationDate);\n[warn]         arg0.writeLong(deletionDate);\n[warn]         arg0.writeFloat(weight);\n[warn]     }\n[warn] \n[warn]     public int compareTo(Knows k) {\n[warn]         long res = (to.getAccountId() - k.to().getAccountId());\n[warn]         if (res > 0) return 1;\n[warn]         if (res < 0) return -1;\n[warn]         return 0;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         Knows knows = (Knows) o;\n[warn]         return isExplicitlyDeleted == knows.isExplicitlyDeleted &&\n[warn]                 creationDate == knows.creationDate &&\n[warn]                 deletionDate == knows.deletionDate &&\n[warn]                 Float.compare(knows.weight, weight) == 0 &&\n[warn]                 Objects.equals(to, knows.to);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(isExplicitlyDeleted, to, creationDate, deletionDate, weight);\n[warn]     }\n[warn] \n[warn]     static public class FullComparator implements Comparator<Knows> {\n[warn] \n[warn]         public int compare(Knows a, Knows b) {\n[warn]             long res = (a.to.getAccountId() - b.to().getAccountId());\n[warn]             if (res > 0) return 1;\n[warn]             if (res < 0) return -1;\n[warn]             long res2 = a.creationDate - b.getCreationDate();\n[warn]             if (res2 > 0) return 1;\n[warn]             if (res2 < 0) return -1;\n[warn]             return 0;\n[warn]         }\n[warn] \n[warn]     }\n[warn] \n[warn]     public static boolean createKnow(Random dateRandom, Random deletionRandom, Person personA, Person personB, Person.PersonSimilarity personSimilarity, Boolean ignore) {\n[warn] \n[warn]         if (personA.getCreationDate() + DatagenParams.delta > personB.getDeletionDate() ||\n[warn]                 personB.getCreationDate() + DatagenParams.delta > personA.getDeletionDate()) {\n[warn]             return false;\n[warn]         }\n[warn] \n[warn]         long creationDate = Dictionaries.dates.randomKnowsCreationDate(dateRandom, personA, personB);\n[warn]         long deletionDate;\n[warn]         boolean isExplicitlyDeleted;\n[warn] \n[warn]         float similarity = personSimilarity.similarity(personA, personB);\n[warn] \n[warn]         double deleteProb;\n[warn]         if (similarity < 0.9222521) {\n[warn]             deleteProb = 0.025;\n[warn]         } else {\n[warn]             deleteProb = 0.075;\n[warn]         }\n[warn] \n[warn]         if (deletionRandom.nextDouble() < deleteProb) {\n[warn]             isExplicitlyDeleted = true;\n[warn]             deletionDate = Dictionaries.dates.randomKnowsDeletionDate(dateRandom, personA, personB, creationDate);\n[warn]         } else {\n[warn]             isExplicitlyDeleted = false;\n[warn]             deletionDate = Collections.min(Arrays.asList(personA.getDeletionDate(), personB.getDeletionDate()));\n[warn]         }\n[warn]         assert (creationDate <= deletionDate) : \"Knows creation date is larger than knows deletion date\";\n[warn] \n[warn]         return personB.getKnows().add(new Knows(personA, creationDate, deletionDate, similarity,isExplicitlyDeleted)) &&\n[warn]                 personA.getKnows().add(new Knows(personB, creationDate, deletionDate, similarity,isExplicitlyDeleted));\n[warn]     }\n[warn] \n[warn]     //     TODO: used for uni and interest dimension in knows gen\n[warn]     public static void createKnow(Random dateRandom, Random deletionRandom, Person personA, Person personB, Person.PersonSimilarity personSimilarity) {\n[warn] \n[warn]         if (personA.getCreationDate() + DatagenParams.delta > personB.getDeletionDate() ||\n[warn]                 personB.getCreationDate() + DatagenParams.delta > personA.getDeletionDate()) {\n[warn]             return;\n[warn]         }\n[warn] \n[warn]         float similarity = personSimilarity.similarity(personA, personB);\n[warn] \n[warn]         long creationDate = Dictionaries.dates.randomKnowsCreationDate(dateRandom, personA, personB);\n[warn]         long deletionDate;\n[warn]         boolean isExplicitlyDeleted;\n[warn]         double deleteProb;\n[warn]         if (similarity < 0.9222521) {\n[warn]             deleteProb = 0.025;\n[warn]         } else {\n[warn]             deleteProb = 0.075;\n[warn]         }\n[warn] \n[warn]         if (deletionRandom.nextDouble() < deleteProb) {\n[warn]             isExplicitlyDeleted = true;\n[warn]             deletionDate = Dictionaries.dates.randomKnowsDeletionDate(dateRandom, personA, personB, creationDate);\n[warn]         } else {\n[warn]             isExplicitlyDeleted = false;\n[warn]             deletionDate = Collections.min(Arrays.asList(personA.getDeletionDate(), personB.getDeletionDate()));\n[warn]         }\n[warn] \n[warn]         assert (creationDate <= deletionDate) : \"Knows creation date is larger than knows deletion date\";\n[warn] \n[warn]         if (personB.getKnows().add(new Knows(personA, creationDate, deletionDate, similarity, isExplicitlyDeleted))) {\n[warn]             personA.getKnows().add(new Knows(personB, creationDate, deletionDate, similarity, isExplicitlyDeleted));\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public static long targetEdges(Person person, List<Float> percentages, int step_index) {\n[warn]         int generated_edges = 0;\n[warn]         for (int i = 0; i < step_index; ++i) {\n[warn]             generated_edges += Math.ceil(percentages.get(i) * person.getMaxNumKnows());\n[warn]         }\n[warn]         generated_edges = Math.min(generated_edges, (int) person.getMaxNumKnows());\n[warn]         return Math.min((int) person.getMaxNumKnows() - generated_edges, (int) Math\n[warn]                 .ceil(percentages.get(step_index) * person.getMaxNumKnows()));\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Message.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Message has no definition of serialVersionUID\n[warn] abstract public class Message implements DynamicActivity {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long messageId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private PersonSummary author;\n[warn]     private long forumId;\n[warn]     private String content;\n[warn]     private List<Integer> tags;\n[warn]     private IP ipAddress;\n[warn]     private int browserId;\n[warn]     private int countryId;\n[warn] \n[warn]     public Message() {\n[warn]         tags = new ArrayList<>();\n[warn]         ipAddress = new IP();\n[warn]     }\n[warn] \n[warn]     public Message(long messageId, long creationDate, long deletionDate, PersonSummary author, long forumId,\n[warn]                    String content, List<Integer> tags, int countryId, IP ipAddress, int browserId,\n[warn]                    boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         assert ((author.getCreationDate() + DatagenParams.delta) <= creationDate);\n[warn]         this.messageId = messageId;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.author = new PersonSummary(author);\n[warn]         this.forumId = forumId;\n[warn]         this.content = content;\n[warn]         this.tags = new ArrayList<>(tags);\n[warn]         this.countryId = countryId;\n[warn]         this.ipAddress = new IP(ipAddress);\n[warn]         this.browserId = browserId;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void initialize(long messageId, long creationDate, long deletionDate, PersonSummary author, long forumId,\n[warn]                            String content, List<Integer> tags, int countryId, IP ipAddress, int browserId,\n[warn]                            boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         this.messageId = messageId;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.author = new PersonSummary(author);\n[warn]         this.forumId = forumId;\n[warn]         this.content = content;\n[warn]         this.tags.clear();\n[warn]         this.tags.addAll(tags);\n[warn]         this.countryId = countryId;\n[warn]         this.ipAddress.copy(ipAddress);\n[warn]         this.browserId = browserId;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getMessageId() {\n[warn]         return messageId;\n[warn]     }\n[warn] \n[warn]     public void setMessageId(long messageId) {\n[warn]         this.messageId = messageId;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public PersonSummary getAuthor() {\n[warn]         return author;\n[warn]     }\n[warn] \n[warn]     public void setAuthor(PersonSummary author) {\n[warn]         this.author = author;\n[warn]     }\n[warn] \n[warn]     public long getForumId() {\n[warn]         return forumId;\n[warn]     }\n[warn] \n[warn]     public void setForumId(long forumId) {\n[warn]         this.forumId = forumId;\n[warn]     }\n[warn] \n[warn]     public String getContent() {\n[warn]         return content;\n[warn]     }\n[warn] \n[warn]     public void setContent(String content) {\n[warn]         this.content = content;\n[warn]     }\n[warn] \n[warn]     public List<Integer> getTags() {\n[warn]         return tags;\n[warn]     }\n[warn] \n[warn]     public void setTags(List<Integer> tags) {\n[warn]         this.tags = tags;\n[warn]     }\n[warn] \n[warn]     public IP getIpAddress() {\n[warn]         return ipAddress;\n[warn]     }\n[warn] \n[warn]     public void setIpAddress(IP ipAddress) {\n[warn]         this.ipAddress = ipAddress;\n[warn]     }\n[warn] \n[warn]     public int getBrowserId() {\n[warn]         return browserId;\n[warn]     }\n[warn] \n[warn]     public void setBrowserId(int browserId) {\n[warn]         this.browserId = browserId;\n[warn]     }\n[warn] \n[warn]     public int getCountryId() {\n[warn]         return countryId;\n[warn]     }\n[warn] \n[warn]     public void setCountryId(int countryId) {\n[warn]         this.countryId = countryId;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Comment.java:44:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Comment has no definition of serialVersionUID\n[warn] public class Comment extends Message {\n[warn] \n[warn]     private long rootPostId;\n[warn]     private long parentMessageId;\n[warn] \n[warn]     public Comment() {\n[warn]         super();\n[warn]     }\n[warn] \n[warn]     public Comment(Comment comment) {\n[warn]         super(comment.getMessageId(), comment.getCreationDate(), comment.getDeletionDate(), comment.getAuthor(), comment.getForumId(), comment.getContent(),\n[warn]               comment.getTags(), comment.getCountryId(), comment.getIpAddress(), comment.getBrowserId(),comment.isExplicitlyDeleted());\n[warn]         rootPostId = comment.getRootPostId();\n[warn]         parentMessageId = comment.getParentMessageId();\n[warn]     }\n[warn] \n[warn]     public Comment(long commentId,\n[warn]                    long creationDate,\n[warn]                    long deletionDate,\n[warn]                    PersonSummary author,\n[warn]                    long forumId,\n[warn]                    String content,\n[warn]                    List<Integer> tags,\n[warn]                    int countryId,\n[warn]                    IP ipAddress,\n[warn]                    int browserId,\n[warn]                    long rootPostId,\n[warn]                    long parentMessageId,\n[warn]                    boolean isExplicitlyDeleted\n[warn]     ) {\n[warn] \n[warn]         super(commentId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.rootPostId = rootPostId;\n[warn]         this.parentMessageId = parentMessageId;\n[warn]     }\n[warn] \n[warn]     public void initialize(long commentId,\n[warn]                            long creationDate,\n[warn]                            long deletionDate,\n[warn]                            PersonSummary author,\n[warn]                            long forumId,\n[warn]                            String content,\n[warn]                            List<Integer> tags,\n[warn]                            int countryId,\n[warn]                            IP ipAddress,\n[warn]                            int browserId,\n[warn]                            long rootPostId,\n[warn]                            long parentMessageId,\n[warn]                            boolean isExplicitlyDeleted) {\n[warn]         super.initialize(commentId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.rootPostId = rootPostId;\n[warn]         this.parentMessageId = parentMessageId;\n[warn]     }\n[warn] \n[warn]     public long getRootPostId() {\n[warn]         return rootPostId;\n[warn]     }\n[warn] \n[warn]     public void setRootPostId(long rootPostId) {\n[warn]         this.rootPostId = rootPostId;\n[warn]     }\n[warn] \n[warn]     public long getParentMessageId() {\n[warn]         return parentMessageId;\n[warn]     }\n[warn] \n[warn]     public void setParentMessageId(long parentMessageId) {\n[warn]         this.parentMessageId = parentMessageId;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Photo.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Photo has no definition of serialVersionUID\n[warn] public class Photo extends Message {\n[warn] \n[warn]     public Photo() {\n[warn]         super();\n[warn]     }\n[warn] \n[warn]     public Photo(long messageId,\n[warn]                  long creationDate,\n[warn]                  long deletionDate,\n[warn]                  PersonSummary author,\n[warn]                  long forumId,\n[warn]                  String content,\n[warn]                  List<Integer> tags,\n[warn]                  int countryId,\n[warn]                  IP ipAddress,\n[warn]                  int browserId,\n[warn]                  boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         super(messageId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Post.java:43:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Post has no definition of serialVersionUID\n[warn] public class Post extends Message {\n[warn] \n[warn]     private int language;\n[warn] \n[warn]     public Post() {\n[warn]         super();\n[warn]     }\n[warn] \n[warn]     public Post(long postId,\n[warn]                 long creationDate,\n[warn]                 long deletionDate,\n[warn]                 PersonSummary author,\n[warn]                 long forumId,\n[warn]                 String content,\n[warn]                 List<Integer> tags,\n[warn]                 int countryId,\n[warn]                 IP ipAddress,\n[warn]                 int browserId,\n[warn]                 int language,\n[warn]                 boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         super(postId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn]     public void initialize(long postId, long creationDate, long deletionDate, PersonSummary author, long forumId,\n[warn]                            String content, List<Integer> tags, int countryId, IP ipAddress, int browserId, int language,\n[warn]                            boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         super.initialize(postId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn]     public int getLanguage() {\n[warn]         return language;\n[warn]     }\n[warn] \n[warn]     public void setLanguage(int language) {\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/Like.java:41:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.Like has no definition of serialVersionUID\n[warn] public class Like implements DynamicActivity {\n[warn]     public enum LikeType {\n[warn]         POST,\n[warn]         COMMENT,\n[warn]         PHOTO\n[warn]     }\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long person;\n[warn]     private long personCreationDate;\n[warn]     private long messageId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private LikeType type;\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getPerson() {\n[warn]         return person;\n[warn]     }\n[warn] \n[warn]     public long getPersonCreationDate() {\n[warn]         return personCreationDate;\n[warn]     }\n[warn] \n[warn]     public long getMessageId() {\n[warn]         return messageId;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public LikeType getType() {\n[warn]         return type;\n[warn]     }\n[warn] \n[warn]     public void setPerson(long person) {\n[warn]         this.person = person;\n[warn]     }\n[warn] \n[warn]     public void setPersonCreationDate(long personCreationDate) {\n[warn]         this.personCreationDate = personCreationDate;\n[warn]     }\n[warn] \n[warn]     public void setMessageId(long messageId) {\n[warn]         this.messageId = messageId;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setType(LikeType type) {\n[warn]         this.type = type;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/StudyAt.java:41:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.StudyAt has no definition of serialVersionUID\n[warn] public class StudyAt implements Serializable {\n[warn]     public long person;\n[warn]     public long university;\n[warn]     public long year;\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/WorkAt.java:40:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.WorkAt has no definition of serialVersionUID\n[warn] public class WorkAt implements Serializable {\n[warn]     public long person;\n[warn]     public long company;\n[warn]     public long year;\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/util/GeneratorConfiguration.java:8:1: serializable class ldbc.snb.datagen.util.GeneratorConfiguration has no definition of serialVersionUID\n[warn] public class GeneratorConfiguration implements Iterable<Map.Entry<String, String>>, Serializable {\n[warn]     public final Map<String, String> map;\n[warn] \n[warn]     public GeneratorConfiguration(Map<String, String> map) {\n[warn]         this.map = map;\n[warn]     }\n[warn] \n[warn]     public String get(String key) {\n[warn]         return map.get(key);\n[warn]     }\n[warn] \n[warn]     public String get(String key, String defaultValue) {\n[warn]         return map.getOrDefault(key, defaultValue);\n[warn]     }\n[warn] \n[warn]     public boolean getBoolean(String key, boolean defaultValue) {\n[warn]         String valueString = this.getTrimmed(key);\n[warn]         if (null != valueString && !valueString.isEmpty()) {\n[warn]             if (\"true\".equalsIgnoreCase(valueString)) {\n[warn]                 return true;\n[warn]             } else {\n[warn]                 return \"false\".equalsIgnoreCase(valueString) ? false : defaultValue;\n[warn]             }\n[warn]         } else {\n[warn]             return defaultValue;\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public int getInt(String name, int defaultValue) {\n[warn]         String valueString = this.getTrimmed(name);\n[warn]         if (valueString == null) {\n[warn]             return defaultValue;\n[warn]         } else {\n[warn]             String hexString = this.getHexDigits(valueString);\n[warn]             return hexString != null ? Integer.parseInt(hexString, 16) : Integer.parseInt(valueString);\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public double getDouble(String name, double defaultValue) {\n[warn]         String valueString = this.getTrimmed(name);\n[warn]         return valueString == null ? defaultValue : Double.parseDouble(valueString);\n[warn]     }\n[warn] \n[warn]     public float getFloat(String name, float defaultValue) {\n[warn]         String valueString = this.getTrimmed(name);\n[warn]         return valueString == null ? defaultValue : Float.parseFloat(valueString);\n[warn]     }\n[warn] \n[warn]     private String getHexDigits(String value) {\n[warn]         boolean negative = false;\n[warn]         String str = value;\n[warn]         String hexString;\n[warn]         if (value.startsWith(\"-\")) {\n[warn]             negative = true;\n[warn]             str = value.substring(1);\n[warn]         }\n[warn] \n[warn]         if (!str.startsWith(\"0x\") && !str.startsWith(\"0X\")) {\n[warn]             return null;\n[warn]         } else {\n[warn]             hexString = str.substring(2);\n[warn]             if (negative) {\n[warn]                 hexString = \"-\" + hexString;\n[warn]             }\n[warn] \n[warn]             return hexString;\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public String getTrimmed(String name) {\n[warn]         String value = this.get(name);\n[warn]         return null == value ? null : value.trim();\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public Iterator<Map.Entry<String, String>> iterator() {\n[warn]         return this.map.entrySet().iterator();\n[warn]     }\n[warn] \n[warn]     public String getOutputDir() {\n[warn]         return map.get(\"generator.outputDir\");\n[warn]     }\n[warn] \n[warn]     public void printConfig() {\n[warn]         System.out.println(\"********* Configuration *********\");\n[warn]         map.forEach((key, value) -> System.out.println(key + \": \" + value));\n[warn]         System.out.println(\"*********************************\");\n[warn]     }\n[warn] }\n[info] done compiling\n[warn] multiple main classes detected: run 'show discoveredMainClasses' to see the list\n[info] Strategy 'discard' was applied to a file (Run the task at debug level to see details)\n[info] Strategy 'first' was applied to 641 files (Run the task at debug level to see details)\n[success] Total time: 40 s, completed Dec 29, 2022 3:14:41 PM\nRemoving intermediate container 02ca7164f5a4\n ---> b2893ce12adb\nStep 13/31 : FROM scratch as jar\n ---> \nStep 14/31 : COPY --from=build-jar /build/target/ldbc_snb_datagen_*-jar-with-dependencies.jar /jar\n ---> 6e7a121585c9\nStep 15/31 : FROM python:3.7-slim as build-tools\n3.7-slim: Pulling from library/python\n3f4ca61aafcd: Already exists\n3f487a3359db: Already exists\ne87858cc8912: Pulling fs layer\n471900aadde7: Pulling fs layer\n37bdaa58825f: Pulling fs layer\n471900aadde7: Verifying Checksum\n471900aadde7: Download complete\n37bdaa58825f: Verifying Checksum\n37bdaa58825f: Download complete\ne87858cc8912: Verifying Checksum\ne87858cc8912: Download complete\ne87858cc8912: Pull complete\n471900aadde7: Pull complete\n37bdaa58825f: Pull complete\nDigest: sha256:aa949f5f10e9b28e1f9561fff73d1a359fa8517d4e543451a714d1a4ecc61c56\nStatus: Downloaded newer image for python:3.7-slim\n ---> 74e5f3c48333\nStep 16/31 : RUN pip install --no-cache virtualenv && virtualenv -p python3.7 /tools\n ---> Running in 6975f89fab3c\nCollecting virtualenv\n  Downloading virtualenv-20.17.1-py3-none-any.whl (8.8 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.8/8.8 MB 75.9 MB/s eta 0:00:00\nCollecting distlib<1,>=0.3.6\n  Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 468.5/468.5 KB 194.3 MB/s eta 0:00:00\nCollecting filelock<4,>=3.4.1\n  Downloading filelock-3.9.0-py3-none-any.whl (9.7 kB)\nCollecting importlib-metadata>=4.8.3\n  Downloading importlib_metadata-5.2.0-py3-none-any.whl (21 kB)\nCollecting platformdirs<3,>=2.4\n  Downloading platformdirs-2.6.2-py3-none-any.whl (14 kB)\nCollecting zipp>=0.5\n  Downloading zipp-3.11.0-py3-none-any.whl (6.6 kB)\nCollecting typing-extensions>=3.6.4\n  Downloading typing_extensions-4.4.0-py3-none-any.whl (26 kB)\nInstalling collected packages: distlib, zipp, typing-extensions, filelock, platformdirs, importlib-metadata, virtualenv\nSuccessfully installed distlib-0.3.6 filelock-3.9.0 importlib-metadata-5.2.0 platformdirs-2.6.2 typing-extensions-4.4.0 virtualenv-20.17.1 zipp-3.11.0\n\u001b[91mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\u001b[0m\u001b[91mWARNING: You are using pip version 22.0.4; however, version 22.3.1 is available.\nYou should consider upgrading via the '/usr/local/bin/python -m pip install --upgrade pip' command.\n\u001b[0mcreated virtual environment CPython3.7.16.final.0-64 in 418ms\n  creator CPython3Posix(dest=/tools, clear=False, no_vcs_ignore=False, global=False)\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/root/.local/share/virtualenv)\n    added seed packages: pip==22.3.1, setuptools==65.6.3, wheel==0.38.4\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\nRemoving intermediate container 6975f89fab3c\n ---> f479c77229f9\nStep 17/31 : COPY tools build\n ---> 6368f1867e68\nStep 18/31 : WORKDIR build\n ---> Running in 3c2798f5253b\nRemoving intermediate container 3c2798f5253b\n ---> 329f3eeb4965\nStep 19/31 : RUN . /tools/bin/activate && pip install .\n ---> Running in 669bc6a411c6\nProcessing /build\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting chardet\n  Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 199.1/199.1 kB 13.6 MB/s eta 0:00:00\nCollecting boto3\n  Downloading boto3-1.26.39-py3-none-any.whl (132 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 132.7/132.7 kB 13.4 MB/s eta 0:00:00\nCollecting requests\n  Downloading requests-2.28.1-py3-none-any.whl (62 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 62.8/62.8 kB 4.7 MB/s eta 0:00:00\nCollecting urllib3\n  Downloading urllib3-1.26.13-py2.py3-none-any.whl (140 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 140.6/140.6 kB 15.6 MB/s eta 0:00:00\nCollecting botocore<1.30.0,>=1.29.39\n  Downloading botocore-1.29.39-py3-none-any.whl (10.3 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.3/10.3 MB 55.5 MB/s eta 0:00:00\nCollecting s3transfer<0.7.0,>=0.6.0\n  Downloading s3transfer-0.6.0-py3-none-any.whl (79 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 79.6/79.6 kB 6.8 MB/s eta 0:00:00\nCollecting jmespath<2.0.0,>=0.7.1\n  Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\nCollecting certifi>=2017.4.17\n  Downloading certifi-2022.12.7-py3-none-any.whl (155 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 155.3/155.3 kB 15.6 MB/s eta 0:00:00\nCollecting charset-normalizer<3,>=2\n  Downloading charset_normalizer-2.1.1-py3-none-any.whl (39 kB)\nCollecting idna<4,>=2.5\n  Downloading idna-3.4-py3-none-any.whl (61 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 61.5/61.5 kB 6.8 MB/s eta 0:00:00\nCollecting python-dateutil<3.0.0,>=2.1\n  Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 247.7/247.7 kB 23.1 MB/s eta 0:00:00\nCollecting six>=1.5\n  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\nBuilding wheels for collected packages: ldbc-datagen-tools-common\n  Building wheel for ldbc-datagen-tools-common (pyproject.toml): started\n  Building wheel for ldbc-datagen-tools-common (pyproject.toml): finished with status 'done'\n  Created wheel for ldbc-datagen-tools-common: filename=ldbc_datagen_tools_common-1.0.0-py3-none-any.whl size=10891 sha256=ae11284d4a684006fbc0a664c2531936262c443a33ef27a2f4906058ea804a48\n  Stored in directory: /tmp/pip-ephem-wheel-cache-pusd33k4/wheels/9f/41/ce/5e8ec7d31fa190bdc8334d019731d197987022a1e11d767bcd\nSuccessfully built ldbc-datagen-tools-common\nInstalling collected packages: urllib3, six, jmespath, idna, charset-normalizer, chardet, certifi, requests, python-dateutil, botocore, s3transfer, boto3, ldbc-datagen-tools-common\nSuccessfully installed boto3-1.26.39 botocore-1.29.39 certifi-2022.12.7 chardet-5.1.0 charset-normalizer-2.1.1 idna-3.4 jmespath-1.0.1 ldbc-datagen-tools-common-1.0.0 python-dateutil-2.8.2 requests-2.28.1 s3transfer-0.6.0 six-1.16.0 urllib3-1.26.13\nRemoving intermediate container 669bc6a411c6\n ---> 1ed0ec1889fc\nStep 20/31 : FROM python:3.7-slim as tools\n ---> 74e5f3c48333\nStep 21/31 : COPY --from=build-tools /tools /tools\n ---> f6a96cafcb3c\nStep 22/31 : FROM bde2020/spark-master:3.2.1-hadoop3.2 as standalone\n3.2.1-hadoop3.2: Pulling from bde2020/spark-master\n396c31837116: Pulling fs layer\n2be5eda0744f: Pulling fs layer\n72191b0aadda: Pulling fs layer\na3914a4a6eb1: Pulling fs layer\n9fd65d12172a: Pulling fs layer\n4f4fb700ef54: Pulling fs layer\n78d372c59f72: Pulling fs layer\na3914a4a6eb1: Waiting\n78d372c59f72: Waiting\n4f4fb700ef54: Waiting\n9fd65d12172a: Waiting\n396c31837116: Download complete\n2be5eda0744f: Verifying Checksum\n2be5eda0744f: Download complete\n72191b0aadda: Verifying Checksum\n72191b0aadda: Download complete\n396c31837116: Pull complete\n2be5eda0744f: Pull complete\n72191b0aadda: Pull complete\n4f4fb700ef54: Download complete\na3914a4a6eb1: Verifying Checksum\na3914a4a6eb1: Download complete\na3914a4a6eb1: Pull complete\n78d372c59f72: Download complete\n9fd65d12172a: Verifying Checksum\n9fd65d12172a: Download complete\n9fd65d12172a: Pull complete\n4f4fb700ef54: Pull complete\n78d372c59f72: Pull complete\nDigest: sha256:37c7f5702b06b1c5e74a45324ada549675f90e520166b8d64b862e9b46ea5b98\nStatus: Downloaded newer image for bde2020/spark-master:3.2.1-hadoop3.2\n ---> e2e9e5a7d7f1\nStep 23/31 : COPY --from=jar /jar /jar\n ---> d8962703e901\nStep 24/31 : COPY --from=tools /tools /tools\n ---> 2371f4cfd8e0\nStep 25/31 : RUN ln -sf /usr/bin/python3 /tools/bin/python\n ---> Running in 67ad729e2624\nRemoving intermediate container 67ad729e2624\n ---> 8d5663c7b250\nStep 26/31 : ENV TEMP_DIR /tmp\n ---> Running in b3f2cc28bff4\nRemoving intermediate container b3f2cc28bff4\n ---> 3c0640b9f248\nStep 27/31 : ENV SPARK_LOCAL_DIRS ${TEMP_DIR}\n ---> Running in c5a79a47f960\nRemoving intermediate container c5a79a47f960\n ---> 981856afdcf0\nStep 28/31 : ENV PATH=/tools/bin:/spark/bin:$PATH\n ---> Running in 50ffe33bea02\nRemoving intermediate container 50ffe33bea02\n ---> ba2de7b3e3f2\nStep 29/31 : ENV LDBC_SNB_DATAGEN_JAR=/jar\n ---> Running in b2d4a7960682\nRemoving intermediate container b2d4a7960682\n ---> 9abd24b226f2\nStep 30/31 : WORKDIR /\n ---> Running in c53944dd4153\nRemoving intermediate container c53944dd4153\n ---> 07a5c05ec971\nStep 31/31 : ENTRYPOINT [\"run.py\"]\n ---> Running in 67e6ce754427\nRemoving intermediate container 67e6ce754427\n ---> b1891374dede\nSuccessfully built b1891374dede\nSuccessfully tagged ldbc_snb_datagen:latest\n","stderr":"","imageSize":693257995},"repair":{"violations":[{"name":"pipUseNoCacheDir","position":{"start":19,"end":19,"columnStart":4,"columnEnd":37}},{"name":"pipUseNoCacheDir","position":{"start":22,"end":22,"columnStart":29,"columnEnd":42}},{"name":"ruleAptGetInstallUseNoRec","position":{"start":3,"end":3,"columnStart":4,"columnEnd":27}},{"name":"ruleAptGetUpdatePrecedesInstall","position":{"start":3,"end":3,"columnStart":4,"columnEnd":27}},{"name":"ruleAptGetInstallThenRemoveAptLists","position":{"start":3,"end":3,"columnStart":4,"columnEnd":27}}],"repairedDockerfile":"FROM eclipse-temurin:8 as build-jar\n\n\nRUN apt-get update && \\\napt-get install --no-install-recommends -y curl\n\nARG SBT_VERSION=1.5.2\nRUN cd /opt && curl -fSsL https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz | tar xvz\nENV PATH=/opt/sbt/bin:$PATH\nWORKDIR build\nCOPY build.sbt build.sbt\nCOPY project project\nRUN sbt update\nCOPY src src\nRUN sbt assembly\n\nFROM scratch as jar\nCOPY --from=build-jar /build/target/ldbc_snb_datagen_*-jar-with-dependencies.jar /jar\n\nFROM python:3.7-slim as build-tools\nRUN pip install --no-cache-dir --no-cache virtualenv && virtualenv -p python3.7 /tools\nCOPY tools build\nWORKDIR build\nRUN . /tools/bin/activate && pip install --no-cache-dir .\n\nFROM python:3.7-slim as tools\nCOPY --from=build-tools /tools /tools\n\nFROM bde2020/spark-master:3.2.1-hadoop3.2 as standalone\nCOPY --from=jar /jar /jar\nCOPY --from=tools /tools /tools\nRUN ln -sf /usr/bin/python3 /tools/bin/python\n\nENV TEMP_DIR /tmp\nENV SPARK_LOCAL_DIRS ${TEMP_DIR}\nENV PATH=/tools/bin:/spark/bin:$PATH\nENV LDBC_SNB_DATAGEN_JAR=/jar\n\nWORKDIR /\nENTRYPOINT [\"run.py\"]\n"},"repairedBuild":{"startTimestamp":1672326995737,"endTimestamp":1672327268446,"error":null,"stdout":"Sending build context to Docker daemon   85.8MB\r\r\nStep 1/30 : FROM eclipse-temurin:8 as build-jar\n ---> fc01e9fb4e3b\nStep 2/30 : RUN apt-get update && apt-get install --no-install-recommends -y curl\n ---> Running in 0eedfb5f4435\nGet:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]\nGet:2 http://archive.ubuntu.com/ubuntu jammy InRelease [270 kB]\nGet:3 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [593 kB]\nGet:4 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [4,732 B]\nGet:5 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [781 kB]\nGet:6 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [667 kB]\nGet:7 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [114 kB]\nGet:8 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [99.8 kB]\nGet:9 http://archive.ubuntu.com/ubuntu jammy/main amd64 Packages [1,792 kB]\nGet:10 http://archive.ubuntu.com/ubuntu jammy/multiverse amd64 Packages [266 kB]\nGet:11 http://archive.ubuntu.com/ubuntu jammy/restricted amd64 Packages [164 kB]\nGet:12 http://archive.ubuntu.com/ubuntu jammy/universe amd64 Packages [17.5 MB]\nGet:13 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [970 kB]\nGet:14 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [8,150 B]\nGet:15 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [641 kB]\nGet:16 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [972 kB]\nGet:17 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [7,278 B]\nGet:18 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [3,520 B]\nFetched 24.9 MB in 4s (6,990 kB/s)\nReading package lists...\nReading package lists...\nBuilding dependency tree...\nReading state information...\ncurl is already the newest version (7.81.0-1ubuntu1.6).\n0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.\nRemoving intermediate container 0eedfb5f4435\n ---> 88f8cf995084\nStep 3/30 : ARG SBT_VERSION=1.5.2\n ---> Running in 8a375d08ac0a\nRemoving intermediate container 8a375d08ac0a\n ---> b1cb5f1d0981\nStep 4/30 : RUN cd /opt && curl -fSsL https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz | tar xvz\n ---> Running in 01b4ff8f45ba\nsbt/\nsbt/bin/\nsbt/bin/sbtn-x86_64-apple-darwin\nsbt/bin/sbt\nsbt/bin/sbtn-x86_64-pc-win32.exe\nsbt/bin/sbt.bat\nsbt/bin/sbt-launch.jar\nsbt/bin/sbtn-x86_64-pc-linux\nsbt/conf/\nsbt/conf/sbtconfig.txt\nsbt/conf/sbtopts\nsbt/LICENSE\nsbt/NOTICE\nRemoving intermediate container 01b4ff8f45ba\n ---> 3dc514bb8742\nStep 5/30 : ENV PATH=/opt/sbt/bin:$PATH\n ---> Running in a1de2d8ba7df\nRemoving intermediate container a1de2d8ba7df\n ---> 4290aa459e15\nStep 6/30 : WORKDIR build\n ---> Running in 643cdd323f66\nRemoving intermediate container 643cdd323f66\n ---> 781e799e99cd\nStep 7/30 : COPY build.sbt build.sbt\n ---> d24ed6b24356\nStep 8/30 : COPY project project\n ---> 4bd63377d742\nStep 9/30 : RUN sbt update\n ---> Running in 067130c60f4f\n\u001b[91m[info] [launcher] getting org.scala-sbt sbt 1.5.2  (this may take some time)...\n\u001b[0m\u001b[91m[info] [launcher] getting Scala 2.12.13 (for sbt)...\n\u001b[0m[info] welcome to sbt 1.5.2 (Temurin Java 1.8.0_352)\n[info] loading settings for project build-build from plugins.sbt ...\n[info] loading project definition from /build/project\n[info] loading settings for project build from build.sbt ...\n[info] set current project to ldbc_snb_datagen (in build file:/build/)\n[success] Total time: 7 s, completed Dec 29, 2022 3:17:23 PM\nRemoving intermediate container 067130c60f4f\n ---> b599494a2a6d\nStep 10/30 : COPY src src\n ---> 7487b05894e0\nStep 11/30 : RUN sbt assembly\n ---> Running in 6ea734110370\n[info] welcome to sbt 1.5.2 (Temurin Java 1.8.0_352)\n[info] loading settings for project build-build from plugins.sbt ...\n[info] loading project definition from /build/project\n[info] loading settings for project build from build.sbt ...\n[info] set current project to ldbc_snb_datagen (in build file:/build/)\n[info] compiling 49 Scala sources and 93 Java sources to /build/target/scala-2.12/classes ...\n[info] Non-compiled module 'compiler-bridge_2.12' for Scala 2.12.16. Compiling...\n[info]   Compilation completed in 7.676s.\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/FactorGenerationStage.scala:405:35: implicit numeric widening\n[warn]         val sampleSize = Math.min(count, Math.max(minSampleSize, count / (1 + Math.exp(count * curveFactor)) * 2))\n[warn]                                   ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/FactorGenerationStage.scala:455:35: implicit numeric widening\n[warn]         val sampleSize = Math.min(count, Math.max(minSampleSize, count / (1 + Math.exp(count * curveFactor)) * 2))\n[warn]                                   ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/io/package.scala:11:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class FactorTableSink in package io instead.\n[warn]   case class FactorTableSink(path: String, format: String = \"parquet\", overwrite: Boolean = false)\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/io/package.scala:16:23: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class FactorTableWriter in package io instead.\n[warn]   private final class FactorTableWriter[M <: Mode] extends Writer[FactorTableSink] with Logging {\n[warn]                       ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/factors/io/package.scala:29:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait WriterInstances in package io instead.\n[warn]   trait WriterInstances {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/GenerationStage.scala:33:22: implicit numeric widening\n[warn]         config.getInt(\"hadoop.numThreads\", spark.sparkContext.defaultParallelism)\n[warn]                      ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/generators/SparkPersonGenerator.scala:23:95: implicit numeric widening\n[warn]         size = Math.min(DatagenParams.numPersons - DatagenParams.blockSize * i, DatagenParams.blockSize).toInt\n[warn]                                                                                               ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/generators/SparkPersonGenerator.scala:31:17: implicit numeric widening\n[warn]       .range(0, numBlocks, step = 1, numSlices = partitions)\n[warn]                 ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/serializers/ActivityOutputStream.scala:93:12: implicit numeric widening\n[warn]       post.getCountryId\n[warn]            ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/serializers/ActivityOutputStream.scala:147:13: implicit numeric widening\n[warn]       photo.getCountryId\n[warn]             ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/generator/serializers/PersonOutputStream.scala:35:22: implicit numeric widening\n[warn]     getGender(person.getGender),\n[warn]                      ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/csv/package.scala:10:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait CsvRowEncoder in package csv instead.\n[warn]   trait CsvRowEncoder[T] {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/csv/package.scala:18:15: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class CsvRecordOutputStream in package csv instead.\n[warn]   final class CsvRecordOutputStream[T: CsvRowEncoder](\n[warn]               ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/csv/package.scala:42:15: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class MakeCsvBatchPart in package csv instead.\n[warn]   final class MakeCsvBatchPart[T <: Product: CsvRowEncoder](pathPrefix: String, writeContext: WriteContext) extends MakeBatchPart[T] {\n[warn]               ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:26:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait RecordOutputStream in package raw instead.\n[warn]   trait RecordOutputStream[T] extends AutoCloseable {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:30:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait RawFormat in package raw instead.\n[warn]   sealed trait RawFormat\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:34:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class RawSink in package raw instead.\n[warn]   case class RawSink(\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:42:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class WriteContext in package raw instead.\n[warn]   class WriteContext(\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:71:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class RawSerializationTaskContext in package raw instead.\n[warn]   class RawSerializationTaskContext(\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/io/raw/package.scala:172:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class RawSerializationJobContext in package raw instead.\n[warn]   class RawSerializationJobContext(\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:13:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait Cardinality in package model instead.\n[warn]   sealed trait Cardinality\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:20:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait EntityTraits in package model instead.\n[warn]   trait EntityTraits[A] {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:41:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait EntityType in package model instead.\n[warn]   sealed trait EntityType {\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:91:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait UntypedEntities in package model instead.\n[warn]   trait UntypedEntities[T] { def value: Map[EntityType, StructType] }\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:97:9: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait UntypedEntitiesInstances in package model instead.\n[warn]   trait UntypedEntitiesInstances {\n[warn]         ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:113:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class Batched in package model instead.\n[warn]   case class Batched(entity: DataFrame, batchId: Seq[String], ordering: Seq[Column])\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:115:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class BatchedEntity in package model instead.\n[warn]   case class BatchedEntity(\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:121:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait Mode in package model instead.\n[warn]   sealed trait Mode {\n[warn]                ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:152:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class Graph in package model instead.\n[warn]   case class Graph[+M <: Mode](\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:157:14: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define class GraphDef in package model instead.\n[warn]   case class GraphDef[+M <: Mode](\n[warn]              ^\n[warn] /build/src/main/scala/ldbc/snb/datagen/model/package.scala:165:16: it is not recommended to define classes/objects inside of package objects.\n[warn] If possible, define trait BatchPeriod in package model instead.\n[warn]   sealed trait BatchPeriod\n[warn]                ^\n[warn] 31 warnings found\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/Forum.java:45:1: serializable class ldbc.snb.datagen.entities.dynamic.Forum has no definition of serialVersionUID\n[warn] public class Forum implements DynamicActivity {\n[warn]     public enum ForumType {\n[warn]         WALL,\n[warn]         ALBUM,\n[warn]         GROUP\n[warn]     }\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long id;\n[warn]     private PersonSummary moderator;\n[warn]     private long moderatorDeletionDate;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private String title;\n[warn]     private List<Integer> tags;\n[warn]     private int placeId;\n[warn]     private int language;\n[warn]     private List<ForumMembership> memberships;\n[warn]     private ForumType forumType;\n[warn] \n[warn] \n[warn]     public Forum(long id, long creationDate, long deletionDate, PersonSummary moderator, long moderatorDeletionDate, String title, int placeId, int language, ForumType forumType, boolean isExplicitlyDeleted) {\n[warn]         assert (moderator.getCreationDate() + DatagenParams.delta) <= creationDate : \"Moderator's creation date is less than or equal to the Forum creation date\";\n[warn]         memberships = new ArrayList<>();\n[warn]         tags = new ArrayList<>();\n[warn]         this.id = id;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.title = title;\n[warn]         this.placeId = placeId;\n[warn]         this.moderator = new PersonSummary(moderator);\n[warn]         this.moderatorDeletionDate = moderatorDeletionDate;\n[warn]         this.language = language;\n[warn]         this.forumType = forumType;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void addMember(ForumMembership member) {\n[warn]         memberships.add(member);\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getId() {\n[warn]         return id;\n[warn]     }\n[warn] \n[warn]     public void setId(long id) {\n[warn]         this.id = id;\n[warn]     }\n[warn] \n[warn]     public PersonSummary getModerator() {\n[warn]         return moderator;\n[warn]     }\n[warn] \n[warn]     public void setModerator(PersonSummary moderator) {\n[warn]         this.moderator = moderator;\n[warn]     }\n[warn] \n[warn]     public long getModeratorDeletionDate() {\n[warn]         return moderatorDeletionDate;\n[warn]     }\n[warn] \n[warn]     public void setModeratorDeletionDate(long moderatorDeletionDate) {\n[warn]         this.moderatorDeletionDate = moderatorDeletionDate;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public String getTitle() {\n[warn]         return title;\n[warn]     }\n[warn] \n[warn]     public void setTitle(String title) {\n[warn]         this.title = title;\n[warn]     }\n[warn] \n[warn]     public List<Integer> getTags() {\n[warn]         return tags;\n[warn]     }\n[warn] \n[warn]     public void setTags(List<Integer> tags) {\n[warn]         this.tags = tags;\n[warn]     }\n[warn] \n[warn]     public int getPlaceId() {\n[warn]         return placeId;\n[warn]     }\n[warn] \n[warn]     public void setPlaceId(int placeId) {\n[warn]         this.placeId = placeId;\n[warn]     }\n[warn] \n[warn]     public int getLanguage() {\n[warn]         return language;\n[warn]     }\n[warn] \n[warn]     public void setLanguage(int language) {\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn]     public List<ForumMembership> getMemberships() {\n[warn]         return memberships;\n[warn]     }\n[warn] \n[warn]     public void setMemberships(List<ForumMembership> memberships) {\n[warn]         this.memberships = memberships;\n[warn]     }\n[warn] \n[warn]     public ForumType getForumType() {\n[warn]         return forumType;\n[warn]     }\n[warn] \n[warn]     public void setForumType(ForumType forumType) {\n[warn]         this.forumType = forumType;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/person/PersonSummary.java:11:1: serializable class ldbc.snb.datagen.entities.dynamic.person.PersonSummary has no definition of serialVersionUID\n[warn] public final class PersonSummary implements Writable, Serializable {\n[warn]     private long accountId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private int browserId;\n[warn]     private int country;\n[warn]     private IP ipAddress;\n[warn]     private boolean isLargePoster;\n[warn]     private boolean isMessageDeleter;\n[warn] \n[warn]     public PersonSummary() {\n[warn]         ipAddress = new IP();\n[warn]     }\n[warn] \n[warn]     public PersonSummary(Person p) {\n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         browserId = p.getBrowserId();\n[warn]         country = p.getCountryId();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn]         isLargePoster = p.getIsLargePoster();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]     }\n[warn] \n[warn]     public PersonSummary(PersonSummary p) {\n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         browserId = p.getBrowserId();\n[warn]         country = p.getCountry();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn]         isLargePoster = p.isLargePoster();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]     }\n[warn] \n[warn]     public void copy(PersonSummary p) {\n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         browserId = p.getBrowserId();\n[warn]         country = p.getCountry();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn]         isLargePoster = p.isLargePoster();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn] \n[warn]         accountId = arg0.readLong();\n[warn]         creationDate = arg0.readLong();\n[warn]         deletionDate = arg0.readLong();\n[warn]         browserId = arg0.readInt();\n[warn]         country = arg0.readInt();\n[warn]         ipAddress.readFields(arg0);\n[warn]         isLargePoster = arg0.readBoolean();\n[warn]         isMessageDeleter = arg0.readBoolean();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeLong(accountId);\n[warn]         arg0.writeLong(creationDate);\n[warn]         arg0.writeLong(deletionDate);\n[warn]         arg0.writeInt(browserId);\n[warn]         arg0.writeInt(country);\n[warn]         ipAddress.write(arg0);\n[warn]         arg0.writeBoolean(isLargePoster);\n[warn]         arg0.writeBoolean(isMessageDeleter);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         PersonSummary that = (PersonSummary) o;\n[warn]         return accountId == that.accountId &&\n[warn]                 creationDate == that.creationDate &&\n[warn]                 deletionDate == that.deletionDate &&\n[warn]                 browserId == that.browserId &&\n[warn]                 country == that.country &&\n[warn]                 isLargePoster == that.isLargePoster &&\n[warn]                 isMessageDeleter == that.isMessageDeleter &&\n[warn]                 Objects.equals(ipAddress, that.ipAddress);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(accountId, creationDate, deletionDate, browserId, country, ipAddress, isLargePoster, isMessageDeleter);\n[warn]     }\n[warn] \n[warn]     public long getAccountId() {\n[warn]         return accountId;\n[warn]     }\n[warn] \n[warn]     public void setAccountId(long accountId) {\n[warn]         this.accountId = accountId;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public int getBrowserId() {\n[warn]         return browserId;\n[warn]     }\n[warn] \n[warn]     public void setBrowserId(int browserId) {\n[warn]         this.browserId = browserId;\n[warn]     }\n[warn] \n[warn]     public int getCountry() {\n[warn]         return country;\n[warn]     }\n[warn] \n[warn]     public void setCountry(int country) {\n[warn]         this.country = country;\n[warn]     }\n[warn] \n[warn]     public IP getIpAddress() {\n[warn]         return ipAddress;\n[warn]     }\n[warn] \n[warn]     public void setIpAddress(IP ipAddress) {\n[warn]         this.ipAddress = ipAddress;\n[warn]     }\n[warn] \n[warn]     public boolean isLargePoster() {\n[warn]         return isLargePoster;\n[warn]     }\n[warn] \n[warn]     public void setLargePoster(boolean largePoster) {\n[warn]         isLargePoster = largePoster;\n[warn]     }\n[warn] \n[warn]     public boolean isMessageDeleter() {\n[warn]         return isMessageDeleter;\n[warn]     }\n[warn] \n[warn]     public void setMessageDeleter(boolean messageDeleter) {\n[warn]         isMessageDeleter = messageDeleter;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/ForumMembership.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.ForumMembership has no definition of serialVersionUID\n[warn] public class ForumMembership implements DynamicActivity {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long forumId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private PersonSummary person;\n[warn]     private Forum.ForumType forumType;\n[warn] \n[warn]     public ForumMembership(long forumId, long creationDate, long deletionDate, PersonSummary p, Forum.ForumType forumType, boolean isExplicitlyDeleted) {\n[warn]         assert (p.getCreationDate() + DatagenParams.delta) <= creationDate : \"Person creation date is larger than membership\";\n[warn]         this.forumId = forumId;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.forumType = forumType;\n[warn]         person = new PersonSummary(p);\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getForumId() {\n[warn]         return forumId;\n[warn]     }\n[warn] \n[warn]     public void setForumId(long forumId) {\n[warn]         this.forumId = forumId;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public PersonSummary getPerson() {\n[warn]         return person;\n[warn]     }\n[warn] \n[warn]     public void setPerson(PersonSummary p) {\n[warn]         person = p;\n[warn]     }\n[warn] \n[warn]     public Forum.ForumType getForumType() {\n[warn]         return forumType;\n[warn]     }\n[warn] \n[warn]     public void setForumType(Forum.ForumType forumType) {\n[warn]         this.forumType = forumType;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/person/IP.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.person.IP has no definition of serialVersionUID\n[warn] public final class IP implements Writable, Serializable, Cloneable {\n[warn] \n[warn]     public static final int BYTE_MASK = 0xFF;\n[warn]     public static final int IP4_SIZE_BITS = 32;\n[warn]     public static final int BYTE1_SHIFT_POSITION = 24;\n[warn]     public static final int BYTE2_SHIFT_POSITION = 16;\n[warn]     public static final int BYTE3_SHIFT_POSITION = 8;\n[warn] \n[warn]     public void setIp(int ip) {\n[warn]         this.ip = ip;\n[warn]     }\n[warn] \n[warn]     public void setMask(int mask) {\n[warn]         this.mask = mask;\n[warn]     }\n[warn] \n[warn]     public void setNetwork(int network) {\n[warn]         this.network = network;\n[warn]     }\n[warn] \n[warn]     private int ip;\n[warn]     private int mask;\n[warn]     private int network;\n[warn] \n[warn]     public IP() {\n[warn] \n[warn]     }\n[warn] \n[warn]     public IP(int byte1, int byte2, int byte3, int byte4, int networkMask) {\n[warn]         ip = ((byte1 & BYTE_MASK) << BYTE1_SHIFT_POSITION) |\n[warn]                 ((byte2 & BYTE_MASK) << BYTE2_SHIFT_POSITION) |\n[warn]                 ((byte3 & BYTE_MASK) << BYTE3_SHIFT_POSITION) |\n[warn]                 (byte4 & BYTE_MASK);\n[warn] \n[warn]         mask = 0xFFFFFFFF << (IP4_SIZE_BITS - networkMask);\n[warn]         network = ip & mask;\n[warn]     }\n[warn] \n[warn]     public IP(IP i) {\n[warn]         this.ip = i.ip;\n[warn]         this.mask = i.mask;\n[warn]         this.network = i.network;\n[warn]     }\n[warn] \n[warn]     public IP(int ip, int mask) {\n[warn]         this.ip = ip;\n[warn]         this.mask = mask;\n[warn]         this.network = this.ip & this.mask;\n[warn]     }\n[warn] \n[warn]     public int getIp() {\n[warn]         return ip;\n[warn]     }\n[warn] \n[warn]     public int getMask() {\n[warn]         return mask;\n[warn]     }\n[warn] \n[warn] \n[warn]     public int getNetwork() {\n[warn]         return network;\n[warn]     }\n[warn] \n[warn]     public void copy(IP ip) {\n[warn]         this.ip = ip.ip;\n[warn]         this.mask = ip.mask;\n[warn]         this.network = ip.network;\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn]         ip = arg0.readInt();\n[warn]         mask = arg0.readInt();\n[warn]         network = arg0.readInt();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeInt(ip);\n[warn]         arg0.writeInt(mask);\n[warn]         arg0.writeInt(network);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         IP ip1 = (IP) o;\n[warn]         return ip == ip1.ip &&\n[warn]                 mask == ip1.mask &&\n[warn]                 network == ip1.network;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(ip, mask, network);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public String toString() {\n[warn]         return ipToString(ip);\n[warn]     }\n[warn] \n[warn]     private static String ipToString(int ip) {\n[warn]         return ((ip >>> BYTE1_SHIFT_POSITION) & BYTE_MASK) + \".\" +\n[warn]                 ((ip >>> BYTE2_SHIFT_POSITION) & BYTE_MASK) + \".\" +\n[warn]                 ((ip >>> BYTE3_SHIFT_POSITION) & BYTE_MASK) + \".\" +\n[warn]                 (ip & BYTE_MASK);\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/person/Person.java:47:1: serializable class ldbc.snb.datagen.entities.dynamic.person.Person has no definition of serialVersionUID\n[warn] public final class Person implements Writable, Serializable, Comparable<Person> {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private boolean isMessageDeleter;\n[warn]     private long accountId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private long maxNumKnows;\n[warn]     private List<Knows> knows;\n[warn]     private int browserId;\n[warn]     private IP ipAddress;\n[warn]     private int countryId;\n[warn]     private int cityId;\n[warn]     private List<Integer> interests;\n[warn]     private int mainInterest;\n[warn]     private int universityLocationId;\n[warn]     private byte gender;\n[warn]     private long birthday;\n[warn]     private boolean isLargePoster;\n[warn]     private long randomId;\n[warn] \n[warn]     private List<String> emails;\n[warn]     private List<Integer> languages;\n[warn]     private String firstName;\n[warn]     private String lastName;\n[warn]     private Map<Long, Long> companies;\n[warn]     private long classYear;\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         Person person = (Person) o;\n[warn]         return isExplicitlyDeleted == person.isExplicitlyDeleted &&\n[warn]                 isMessageDeleter == person.isMessageDeleter &&\n[warn]                 accountId == person.accountId &&\n[warn]                 creationDate == person.creationDate &&\n[warn]                 deletionDate == person.deletionDate &&\n[warn]                 maxNumKnows == person.maxNumKnows &&\n[warn]                 browserId == person.browserId &&\n[warn]                 countryId == person.countryId &&\n[warn]                 cityId == person.cityId &&\n[warn]                 mainInterest == person.mainInterest &&\n[warn]                 universityLocationId == person.universityLocationId &&\n[warn]                 gender == person.gender &&\n[warn]                 birthday == person.birthday &&\n[warn]                 isLargePoster == person.isLargePoster &&\n[warn]                 randomId == person.randomId &&\n[warn]                 classYear == person.classYear &&\n[warn]                 Objects.equals(knows, person.knows) &&\n[warn]                 Objects.equals(ipAddress, person.ipAddress) &&\n[warn]                 Objects.equals(interests, person.interests) &&\n[warn]                 Objects.equals(emails, person.emails) &&\n[warn]                 Objects.equals(languages, person.languages) &&\n[warn]                 Objects.equals(firstName, person.firstName) &&\n[warn]                 Objects.equals(lastName, person.lastName) &&\n[warn]                 Objects.equals(companies, person.companies);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(isExplicitlyDeleted, isMessageDeleter, accountId, creationDate, deletionDate, maxNumKnows, knows, browserId, ipAddress, countryId, cityId, interests, mainInterest, universityLocationId, gender, birthday, isLargePoster, randomId, emails, languages, firstName, lastName, companies, classYear);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public String toString() {\n[warn]         return \"Person{\" +\n[warn]                 \"isExplicitlyDeleted=\" + isExplicitlyDeleted +\n[warn]                 \", isMessageDeleter=\" + isMessageDeleter +\n[warn]                 \", accountId=\" + accountId +\n[warn]                 \", creationDate=\" + creationDate +\n[warn]                 \", deletionDate=\" + deletionDate +\n[warn]                 \", maxNumKnows=\" + maxNumKnows +\n[warn]                 \", knows=\" + knows +\n[warn]                 \", browserId=\" + browserId +\n[warn]                 \", ipAddress=\" + ipAddress +\n[warn]                 \", countryId=\" + countryId +\n[warn]                 \", cityId=\" + cityId +\n[warn]                 \", interests=\" + interests +\n[warn]                 \", mainInterest=\" + mainInterest +\n[warn]                 \", universityLocationId=\" + universityLocationId +\n[warn]                 \", gender=\" + gender +\n[warn]                 \", birthday=\" + birthday +\n[warn]                 \", isLargePoster=\" + isLargePoster +\n[warn]                 \", randomId=\" + randomId +\n[warn]                 \", emails=\" + emails +\n[warn]                 \", languages=\" + languages +\n[warn]                 \", firstName='\" + firstName + '\\'' +\n[warn]                 \", lastName='\" + lastName + '\\'' +\n[warn]                 \", companies=\" + companies +\n[warn]                 \", classYear=\" + classYear +\n[warn]                 '}';\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int compareTo(Person o) {\n[warn]         return Long.compare(this.getAccountId(), o.getAccountId());\n[warn] \n[warn]     }\n[warn] \n[warn]     public interface PersonSimilarity {\n[warn]         float similarity(Person personA, Person personB);\n[warn]     }\n[warn] \n[warn]     public Person() {\n[warn]         knows = new ArrayList<>();\n[warn]         emails = new ArrayList<>();\n[warn]         interests = new ArrayList<>();\n[warn]         languages = new ArrayList<>();\n[warn]         companies = new HashMap<>();\n[warn]         ipAddress = new IP();\n[warn]     }\n[warn] \n[warn]     public Person(Person p) {\n[warn] \n[warn]         isExplicitlyDeleted = p.isExplicitlyDeleted();\n[warn]         isMessageDeleter = p.isMessageDeleter();\n[warn]         knows = new ArrayList<>();\n[warn]         emails = new ArrayList<>();\n[warn]         interests = new ArrayList<>();\n[warn]         languages = new ArrayList<>();\n[warn]         companies = new HashMap<>();\n[warn] \n[warn]         accountId = p.getAccountId();\n[warn]         creationDate = p.getCreationDate();\n[warn]         deletionDate = p.getDeletionDate();\n[warn]         maxNumKnows = p.getMaxNumKnows();\n[warn]         for (Knows k : p.getKnows()) {\n[warn]             knows.add(new Knows(k));\n[warn]         }\n[warn] \n[warn]         browserId = p.getBrowserId();\n[warn]         ipAddress = new IP(p.getIpAddress());\n[warn] \n[warn]         countryId = p.getCountryId();\n[warn]         cityId = p.getCityId();\n[warn]         interests.addAll(p.getInterests());\n[warn]         mainInterest = p.getMainInterest();\n[warn] \n[warn]         universityLocationId = p.getUniversityLocationId();\n[warn]         gender = p.getGender();\n[warn]         birthday = p.getBirthday();\n[warn]         isLargePoster = p.getIsLargePoster();\n[warn]         randomId = p.getRandomId();\n[warn] \n[warn]         emails.addAll(p.getEmails());\n[warn] \n[warn]         languages.addAll(p.getLanguages());\n[warn] \n[warn]         firstName = p.getFirstName();\n[warn]         lastName = p.getLastName();\n[warn]         for (Map.Entry<Long, Long> c : p.getCompanies().entrySet()) {\n[warn]             companies.put(c.getKey(), c.getValue());\n[warn]         }\n[warn]         classYear = p.getClassYear();\n[warn] \n[warn]     }\n[warn] \n[warn]     public boolean isMessageDeleter() {\n[warn]         return isMessageDeleter;\n[warn]     }\n[warn] \n[warn]     public void setMessageDeleter(boolean messageDeleter) {\n[warn]         isMessageDeleter = messageDeleter;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getAccountId() {\n[warn]         return accountId;\n[warn]     }\n[warn] \n[warn]     public void setAccountId(long id) {\n[warn]         accountId = id;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public long getMaxNumKnows() {\n[warn]         return maxNumKnows;\n[warn]     }\n[warn] \n[warn]     public void setMaxNumKnows(long maxKnows) {\n[warn]         maxNumKnows = maxKnows;\n[warn]     }\n[warn] \n[warn]     public List<Knows> getKnows() {\n[warn]         return knows;\n[warn]     }\n[warn] \n[warn]     public void setKnows(List<Knows> knows) {\n[warn]         this.knows.clear();\n[warn]         this.knows.addAll(knows);\n[warn]     }\n[warn] \n[warn]     public int getBrowserId() {\n[warn]         return browserId;\n[warn]     }\n[warn] \n[warn]     public void setBrowserId(int browserId) {\n[warn]         this.browserId = browserId;\n[warn]     }\n[warn] \n[warn]     public IP getIpAddress() {\n[warn]         return ipAddress;\n[warn]     }\n[warn] \n[warn]     public void setIpAddress(IP ipAddress) {\n[warn]         this.ipAddress.copy(ipAddress);\n[warn]     }\n[warn] \n[warn]     public int getCountryId() {\n[warn]         return countryId;\n[warn]     }\n[warn] \n[warn]     public void setCountryId(int countryId) {\n[warn]         this.countryId = countryId;\n[warn]     }\n[warn] \n[warn]     public int getCityId() {\n[warn]         return cityId;\n[warn]     }\n[warn] \n[warn]     public void setCityId(int cityId) {\n[warn]         this.cityId = cityId;\n[warn]     }\n[warn] \n[warn]     public List<Integer> getInterests() {\n[warn]         return interests;\n[warn]     }\n[warn] \n[warn]     public void setInterests(List<Integer> interests) {\n[warn]         this.interests.clear();\n[warn]         this.interests.addAll(interests);\n[warn]     }\n[warn] \n[warn]     public int getMainInterest() {\n[warn]         return mainInterest;\n[warn]     }\n[warn] \n[warn]     public void setMainInterest(int interest) {\n[warn]         mainInterest = interest;\n[warn]     }\n[warn] \n[warn]     public int getUniversityLocationId() {\n[warn]         return universityLocationId;\n[warn]     }\n[warn] \n[warn]     public void setUniversityLocationId(int location) {\n[warn]         universityLocationId = location;\n[warn]     }\n[warn] \n[warn]     public byte getGender() {\n[warn]         return gender;\n[warn]     }\n[warn] \n[warn]     public void setGender(byte gender) {\n[warn]         this.gender = gender;\n[warn]     }\n[warn] \n[warn]     public long getBirthday() {\n[warn]         return birthday;\n[warn]     }\n[warn] \n[warn]     public void setBirthday(long birthday) {\n[warn]         this.birthday = birthday;\n[warn]     }\n[warn] \n[warn]     public boolean getIsLargePoster() {\n[warn]         return isLargePoster;\n[warn]     }\n[warn] \n[warn]     public void setIsLargePoster(boolean largePoster) {\n[warn]         isLargePoster = largePoster;\n[warn]     }\n[warn] \n[warn]     public long getRandomId() {\n[warn]         return randomId;\n[warn]     }\n[warn] \n[warn]     public void setRandomId(long randomId) {\n[warn]         this.randomId = randomId;\n[warn]     }\n[warn] \n[warn]     public List<String> getEmails() {\n[warn]         return emails;\n[warn]     }\n[warn] \n[warn]     public void setEmails(List<String> emails) {\n[warn]         emails.clear();\n[warn]         this.emails.addAll(emails);\n[warn]     }\n[warn] \n[warn]     public List<Integer> getLanguages() {\n[warn]         return languages;\n[warn]     }\n[warn] \n[warn]     public void setLanguages(List<Integer> languages) {\n[warn]         this.languages.clear();\n[warn]         this.languages.addAll(languages);\n[warn]     }\n[warn] \n[warn]     public String getFirstName() {\n[warn]         return firstName;\n[warn]     }\n[warn] \n[warn]     public void setFirstName(String firstName) {\n[warn]         this.firstName = firstName;\n[warn]     }\n[warn] \n[warn]     public String getLastName() {\n[warn]         return lastName;\n[warn]     }\n[warn] \n[warn]     public void setLastName(String lastName) {\n[warn]         this.lastName = lastName;\n[warn]     }\n[warn] \n[warn]     public Map<Long, Long> getCompanies() {\n[warn]         return companies;\n[warn]     }\n[warn] \n[warn]     public void setCompanies(Map<Long, Long> companies) {\n[warn]         this.companies = companies;\n[warn]     }\n[warn] \n[warn]     public long getClassYear() {\n[warn]         return classYear;\n[warn]     }\n[warn] \n[warn]     public void setClassYear(long classYear) {\n[warn]         this.classYear = classYear;\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn]         isExplicitlyDeleted = arg0.readBoolean();\n[warn]         isMessageDeleter = arg0.readBoolean();\n[warn]         accountId = arg0.readLong();\n[warn]         creationDate = arg0.readLong();\n[warn]         deletionDate = arg0.readLong();\n[warn]         maxNumKnows = arg0.readLong();\n[warn]         int numFriends = arg0.readShort();\n[warn]         knows = new ArrayList<>();\n[warn]         for (int i = 0; i < numFriends; i++) {\n[warn]             Knows fr = new Knows();\n[warn]             fr.readFields(arg0);\n[warn]             knows.add(fr);\n[warn]         }\n[warn] \n[warn]         browserId = arg0.readInt();\n[warn] \n[warn]         ipAddress.readFields(arg0);\n[warn] \n[warn]         countryId = arg0.readInt();\n[warn]         cityId = arg0.readInt();\n[warn] \n[warn]         byte numTags = arg0.readByte();\n[warn]         interests = new ArrayList<>();\n[warn]         for (byte i = 0; i < numTags; i++) {\n[warn]             interests.add(arg0.readInt());\n[warn]         }\n[warn]         mainInterest = arg0.readInt();\n[warn] \n[warn]         universityLocationId = arg0.readInt();\n[warn]         gender = arg0.readByte();\n[warn]         birthday = arg0.readLong();\n[warn]         isLargePoster = arg0.readBoolean();\n[warn]         randomId = arg0.readLong();\n[warn] \n[warn]         int numEmails = arg0.readInt();\n[warn]         emails = new ArrayList<>();\n[warn]         for (int i = 0; i < numEmails; ++i) {\n[warn]             emails.add(arg0.readUTF());\n[warn]         }\n[warn]         int numLanguages = arg0.readInt();\n[warn]         languages = new ArrayList<>();\n[warn]         for (int i = 0; i < numLanguages; ++i) {\n[warn]             languages.add(arg0.readInt());\n[warn]         }\n[warn]         firstName = arg0.readUTF();\n[warn]         lastName = arg0.readUTF();\n[warn]         int numCompanies = arg0.readInt();\n[warn]         companies = new HashMap<>();\n[warn]         for (int i = 0; i < numCompanies; ++i) {\n[warn]             companies.put(arg0.readLong(), arg0.readLong());\n[warn]         }\n[warn]         classYear = arg0.readLong();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeBoolean(isExplicitlyDeleted);\n[warn]         arg0.writeBoolean(isMessageDeleter);\n[warn]         arg0.writeLong(accountId);\n[warn]         arg0.writeLong(creationDate);\n[warn]         arg0.writeLong(deletionDate);\n[warn]         arg0.writeLong(maxNumKnows);\n[warn]         arg0.writeShort(knows.size());\n[warn] \n[warn]         for (Knows f : knows) {\n[warn]             f.write(arg0);\n[warn]         }\n[warn] \n[warn]         arg0.writeInt(browserId);\n[warn]         ipAddress.write(arg0);\n[warn] \n[warn]         arg0.writeInt(countryId);\n[warn]         arg0.writeInt(cityId);\n[warn] \n[warn]         arg0.writeByte((byte) interests.size());\n[warn]         for (Integer interest : interests) {\n[warn]             arg0.writeInt(interest);\n[warn]         }\n[warn]         arg0.writeInt(mainInterest);\n[warn]         arg0.writeInt(universityLocationId);\n[warn]         arg0.writeByte(gender);\n[warn]         arg0.writeLong(birthday);\n[warn]         arg0.writeBoolean(isLargePoster);\n[warn]         arg0.writeLong(randomId);\n[warn] \n[warn]         arg0.writeInt(emails.size());\n[warn]         for (String s : emails) {\n[warn]             arg0.writeUTF(s);\n[warn]         }\n[warn]         arg0.writeInt(languages.size());\n[warn]         for (Integer l : languages) {\n[warn]             arg0.writeInt(l);\n[warn]         }\n[warn]         arg0.writeUTF(firstName);\n[warn]         arg0.writeUTF(lastName);\n[warn]         arg0.writeInt(companies.size());\n[warn]         for (Map.Entry<Long, Long> e : companies.entrySet()) {\n[warn]             arg0.writeLong(e.getKey());\n[warn]             arg0.writeLong(e.getValue());\n[warn]         }\n[warn]         arg0.writeLong(classYear);\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/Knows.java:51:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.Knows has no definition of serialVersionUID\n[warn] public final class Knows implements Writable, Comparable<Knows>, Serializable {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private PersonSummary to;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private float weight = 0.0f;\n[warn]     public static int num = 0;\n[warn] \n[warn]     public Knows() {\n[warn]         to = new PersonSummary();\n[warn]     }\n[warn] \n[warn]     public Knows(Knows k) {\n[warn]         to = new PersonSummary(k.to());\n[warn]         creationDate = k.getCreationDate();\n[warn]         deletionDate = k.getDeletionDate();\n[warn]         weight = k.getWeight();\n[warn]         isExplicitlyDeleted = k.isExplicitlyDeleted();\n[warn]     }\n[warn] \n[warn]     public Knows(Person to, long creationDate, long deletionDate, float weight, boolean isExplicitlyDeleted) {\n[warn]         this.to = new PersonSummary(to);\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.weight = weight;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public PersonSummary to() {\n[warn]         return to;\n[warn]     }\n[warn] \n[warn]     public void to(PersonSummary to) {\n[warn]         this.to.copy(to);\n[warn]     }\n[warn] \n[warn]     public PersonSummary getTo() {\n[warn]         return to;\n[warn]     }\n[warn] \n[warn]     public void setTo(PersonSummary to) {\n[warn]         this.to = to;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setWeight(float weight) {\n[warn]         this.weight = weight;\n[warn]     }\n[warn] \n[warn]     public float getWeight() {\n[warn]         return weight;\n[warn]     }\n[warn] \n[warn]     public void readFields(DataInput arg0) throws IOException {\n[warn]         isExplicitlyDeleted = arg0.readBoolean();\n[warn]         to.readFields(arg0);\n[warn]         creationDate = arg0.readLong();\n[warn]         deletionDate = arg0.readLong();\n[warn]         weight = arg0.readFloat();\n[warn]     }\n[warn] \n[warn]     public void write(DataOutput arg0) throws IOException {\n[warn]         arg0.writeBoolean(isExplicitlyDeleted);\n[warn]         to.write(arg0);\n[warn]         arg0.writeLong(creationDate);\n[warn]         arg0.writeLong(deletionDate);\n[warn]         arg0.writeFloat(weight);\n[warn]     }\n[warn] \n[warn]     public int compareTo(Knows k) {\n[warn]         long res = (to.getAccountId() - k.to().getAccountId());\n[warn]         if (res > 0) return 1;\n[warn]         if (res < 0) return -1;\n[warn]         return 0;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public boolean equals(Object o) {\n[warn]         if (this == o) return true;\n[warn]         if (o == null || getClass() != o.getClass()) return false;\n[warn]         Knows knows = (Knows) o;\n[warn]         return isExplicitlyDeleted == knows.isExplicitlyDeleted &&\n[warn]                 creationDate == knows.creationDate &&\n[warn]                 deletionDate == knows.deletionDate &&\n[warn]                 Float.compare(knows.weight, weight) == 0 &&\n[warn]                 Objects.equals(to, knows.to);\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public int hashCode() {\n[warn]         return Objects.hash(isExplicitlyDeleted, to, creationDate, deletionDate, weight);\n[warn]     }\n[warn] \n[warn]     static public class FullComparator implements Comparator<Knows> {\n[warn] \n[warn]         public int compare(Knows a, Knows b) {\n[warn]             long res = (a.to.getAccountId() - b.to().getAccountId());\n[warn]             if (res > 0) return 1;\n[warn]             if (res < 0) return -1;\n[warn]             long res2 = a.creationDate - b.getCreationDate();\n[warn]             if (res2 > 0) return 1;\n[warn]             if (res2 < 0) return -1;\n[warn]             return 0;\n[warn]         }\n[warn] \n[warn]     }\n[warn] \n[warn]     public static boolean createKnow(Random dateRandom, Random deletionRandom, Person personA, Person personB, Person.PersonSimilarity personSimilarity, Boolean ignore) {\n[warn] \n[warn]         if (personA.getCreationDate() + DatagenParams.delta > personB.getDeletionDate() ||\n[warn]                 personB.getCreationDate() + DatagenParams.delta > personA.getDeletionDate()) {\n[warn]             return false;\n[warn]         }\n[warn] \n[warn]         long creationDate = Dictionaries.dates.randomKnowsCreationDate(dateRandom, personA, personB);\n[warn]         long deletionDate;\n[warn]         boolean isExplicitlyDeleted;\n[warn] \n[warn]         float similarity = personSimilarity.similarity(personA, personB);\n[warn] \n[warn]         double deleteProb;\n[warn]         if (similarity < 0.9222521) {\n[warn]             deleteProb = 0.025;\n[warn]         } else {\n[warn]             deleteProb = 0.075;\n[warn]         }\n[warn] \n[warn]         if (deletionRandom.nextDouble() < deleteProb) {\n[warn]             isExplicitlyDeleted = true;\n[warn]             deletionDate = Dictionaries.dates.randomKnowsDeletionDate(dateRandom, personA, personB, creationDate);\n[warn]         } else {\n[warn]             isExplicitlyDeleted = false;\n[warn]             deletionDate = Collections.min(Arrays.asList(personA.getDeletionDate(), personB.getDeletionDate()));\n[warn]         }\n[warn]         assert (creationDate <= deletionDate) : \"Knows creation date is larger than knows deletion date\";\n[warn] \n[warn]         return personB.getKnows().add(new Knows(personA, creationDate, deletionDate, similarity,isExplicitlyDeleted)) &&\n[warn]                 personA.getKnows().add(new Knows(personB, creationDate, deletionDate, similarity,isExplicitlyDeleted));\n[warn]     }\n[warn] \n[warn]     //     TODO: used for uni and interest dimension in knows gen\n[warn]     public static void createKnow(Random dateRandom, Random deletionRandom, Person personA, Person personB, Person.PersonSimilarity personSimilarity) {\n[warn] \n[warn]         if (personA.getCreationDate() + DatagenParams.delta > personB.getDeletionDate() ||\n[warn]                 personB.getCreationDate() + DatagenParams.delta > personA.getDeletionDate()) {\n[warn]             return;\n[warn]         }\n[warn] \n[warn]         float similarity = personSimilarity.similarity(personA, personB);\n[warn] \n[warn]         long creationDate = Dictionaries.dates.randomKnowsCreationDate(dateRandom, personA, personB);\n[warn]         long deletionDate;\n[warn]         boolean isExplicitlyDeleted;\n[warn]         double deleteProb;\n[warn]         if (similarity < 0.9222521) {\n[warn]             deleteProb = 0.025;\n[warn]         } else {\n[warn]             deleteProb = 0.075;\n[warn]         }\n[warn] \n[warn]         if (deletionRandom.nextDouble() < deleteProb) {\n[warn]             isExplicitlyDeleted = true;\n[warn]             deletionDate = Dictionaries.dates.randomKnowsDeletionDate(dateRandom, personA, personB, creationDate);\n[warn]         } else {\n[warn]             isExplicitlyDeleted = false;\n[warn]             deletionDate = Collections.min(Arrays.asList(personA.getDeletionDate(), personB.getDeletionDate()));\n[warn]         }\n[warn] \n[warn]         assert (creationDate <= deletionDate) : \"Knows creation date is larger than knows deletion date\";\n[warn] \n[warn]         if (personB.getKnows().add(new Knows(personA, creationDate, deletionDate, similarity, isExplicitlyDeleted))) {\n[warn]             personA.getKnows().add(new Knows(personB, creationDate, deletionDate, similarity, isExplicitlyDeleted));\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public static long targetEdges(Person person, List<Float> percentages, int step_index) {\n[warn]         int generated_edges = 0;\n[warn]         for (int i = 0; i < step_index; ++i) {\n[warn]             generated_edges += Math.ceil(percentages.get(i) * person.getMaxNumKnows());\n[warn]         }\n[warn]         generated_edges = Math.min(generated_edges, (int) person.getMaxNumKnows());\n[warn]         return Math.min((int) person.getMaxNumKnows() - generated_edges, (int) Math\n[warn]                 .ceil(percentages.get(step_index) * person.getMaxNumKnows()));\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Message.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Message has no definition of serialVersionUID\n[warn] abstract public class Message implements DynamicActivity {\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long messageId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private PersonSummary author;\n[warn]     private long forumId;\n[warn]     private String content;\n[warn]     private List<Integer> tags;\n[warn]     private IP ipAddress;\n[warn]     private int browserId;\n[warn]     private int countryId;\n[warn] \n[warn]     public Message() {\n[warn]         tags = new ArrayList<>();\n[warn]         ipAddress = new IP();\n[warn]     }\n[warn] \n[warn]     public Message(long messageId, long creationDate, long deletionDate, PersonSummary author, long forumId,\n[warn]                    String content, List<Integer> tags, int countryId, IP ipAddress, int browserId,\n[warn]                    boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         assert ((author.getCreationDate() + DatagenParams.delta) <= creationDate);\n[warn]         this.messageId = messageId;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.author = new PersonSummary(author);\n[warn]         this.forumId = forumId;\n[warn]         this.content = content;\n[warn]         this.tags = new ArrayList<>(tags);\n[warn]         this.countryId = countryId;\n[warn]         this.ipAddress = new IP(ipAddress);\n[warn]         this.browserId = browserId;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void initialize(long messageId, long creationDate, long deletionDate, PersonSummary author, long forumId,\n[warn]                            String content, List<Integer> tags, int countryId, IP ipAddress, int browserId,\n[warn]                            boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         this.messageId = messageId;\n[warn]         this.creationDate = creationDate;\n[warn]         this.deletionDate = deletionDate;\n[warn]         this.author = new PersonSummary(author);\n[warn]         this.forumId = forumId;\n[warn]         this.content = content;\n[warn]         this.tags.clear();\n[warn]         this.tags.addAll(tags);\n[warn]         this.countryId = countryId;\n[warn]         this.ipAddress.copy(ipAddress);\n[warn]         this.browserId = browserId;\n[warn]         this.isExplicitlyDeleted = isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getMessageId() {\n[warn]         return messageId;\n[warn]     }\n[warn] \n[warn]     public void setMessageId(long messageId) {\n[warn]         this.messageId = messageId;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public PersonSummary getAuthor() {\n[warn]         return author;\n[warn]     }\n[warn] \n[warn]     public void setAuthor(PersonSummary author) {\n[warn]         this.author = author;\n[warn]     }\n[warn] \n[warn]     public long getForumId() {\n[warn]         return forumId;\n[warn]     }\n[warn] \n[warn]     public void setForumId(long forumId) {\n[warn]         this.forumId = forumId;\n[warn]     }\n[warn] \n[warn]     public String getContent() {\n[warn]         return content;\n[warn]     }\n[warn] \n[warn]     public void setContent(String content) {\n[warn]         this.content = content;\n[warn]     }\n[warn] \n[warn]     public List<Integer> getTags() {\n[warn]         return tags;\n[warn]     }\n[warn] \n[warn]     public void setTags(List<Integer> tags) {\n[warn]         this.tags = tags;\n[warn]     }\n[warn] \n[warn]     public IP getIpAddress() {\n[warn]         return ipAddress;\n[warn]     }\n[warn] \n[warn]     public void setIpAddress(IP ipAddress) {\n[warn]         this.ipAddress = ipAddress;\n[warn]     }\n[warn] \n[warn]     public int getBrowserId() {\n[warn]         return browserId;\n[warn]     }\n[warn] \n[warn]     public void setBrowserId(int browserId) {\n[warn]         this.browserId = browserId;\n[warn]     }\n[warn] \n[warn]     public int getCountryId() {\n[warn]         return countryId;\n[warn]     }\n[warn] \n[warn]     public void setCountryId(int countryId) {\n[warn]         this.countryId = countryId;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Comment.java:44:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Comment has no definition of serialVersionUID\n[warn] public class Comment extends Message {\n[warn] \n[warn]     private long rootPostId;\n[warn]     private long parentMessageId;\n[warn] \n[warn]     public Comment() {\n[warn]         super();\n[warn]     }\n[warn] \n[warn]     public Comment(Comment comment) {\n[warn]         super(comment.getMessageId(), comment.getCreationDate(), comment.getDeletionDate(), comment.getAuthor(), comment.getForumId(), comment.getContent(),\n[warn]               comment.getTags(), comment.getCountryId(), comment.getIpAddress(), comment.getBrowserId(),comment.isExplicitlyDeleted());\n[warn]         rootPostId = comment.getRootPostId();\n[warn]         parentMessageId = comment.getParentMessageId();\n[warn]     }\n[warn] \n[warn]     public Comment(long commentId,\n[warn]                    long creationDate,\n[warn]                    long deletionDate,\n[warn]                    PersonSummary author,\n[warn]                    long forumId,\n[warn]                    String content,\n[warn]                    List<Integer> tags,\n[warn]                    int countryId,\n[warn]                    IP ipAddress,\n[warn]                    int browserId,\n[warn]                    long rootPostId,\n[warn]                    long parentMessageId,\n[warn]                    boolean isExplicitlyDeleted\n[warn]     ) {\n[warn] \n[warn]         super(commentId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.rootPostId = rootPostId;\n[warn]         this.parentMessageId = parentMessageId;\n[warn]     }\n[warn] \n[warn]     public void initialize(long commentId,\n[warn]                            long creationDate,\n[warn]                            long deletionDate,\n[warn]                            PersonSummary author,\n[warn]                            long forumId,\n[warn]                            String content,\n[warn]                            List<Integer> tags,\n[warn]                            int countryId,\n[warn]                            IP ipAddress,\n[warn]                            int browserId,\n[warn]                            long rootPostId,\n[warn]                            long parentMessageId,\n[warn]                            boolean isExplicitlyDeleted) {\n[warn]         super.initialize(commentId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.rootPostId = rootPostId;\n[warn]         this.parentMessageId = parentMessageId;\n[warn]     }\n[warn] \n[warn]     public long getRootPostId() {\n[warn]         return rootPostId;\n[warn]     }\n[warn] \n[warn]     public void setRootPostId(long rootPostId) {\n[warn]         this.rootPostId = rootPostId;\n[warn]     }\n[warn] \n[warn]     public long getParentMessageId() {\n[warn]         return parentMessageId;\n[warn]     }\n[warn] \n[warn]     public void setParentMessageId(long parentMessageId) {\n[warn]         this.parentMessageId = parentMessageId;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Photo.java:46:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Photo has no definition of serialVersionUID\n[warn] public class Photo extends Message {\n[warn] \n[warn]     public Photo() {\n[warn]         super();\n[warn]     }\n[warn] \n[warn]     public Photo(long messageId,\n[warn]                  long creationDate,\n[warn]                  long deletionDate,\n[warn]                  PersonSummary author,\n[warn]                  long forumId,\n[warn]                  String content,\n[warn]                  List<Integer> tags,\n[warn]                  int countryId,\n[warn]                  IP ipAddress,\n[warn]                  int browserId,\n[warn]                  boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         super(messageId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/messages/Post.java:43:1: serializable class ldbc.snb.datagen.entities.dynamic.messages.Post has no definition of serialVersionUID\n[warn] public class Post extends Message {\n[warn] \n[warn]     private int language;\n[warn] \n[warn]     public Post() {\n[warn]         super();\n[warn]     }\n[warn] \n[warn]     public Post(long postId,\n[warn]                 long creationDate,\n[warn]                 long deletionDate,\n[warn]                 PersonSummary author,\n[warn]                 long forumId,\n[warn]                 String content,\n[warn]                 List<Integer> tags,\n[warn]                 int countryId,\n[warn]                 IP ipAddress,\n[warn]                 int browserId,\n[warn]                 int language,\n[warn]                 boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         super(postId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn]     public void initialize(long postId, long creationDate, long deletionDate, PersonSummary author, long forumId,\n[warn]                            String content, List<Integer> tags, int countryId, IP ipAddress, int browserId, int language,\n[warn]                            boolean isExplicitlyDeleted\n[warn]     ) {\n[warn]         super.initialize(postId, creationDate, deletionDate, author, forumId, content, tags, countryId, ipAddress, browserId,isExplicitlyDeleted);\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn]     public int getLanguage() {\n[warn]         return language;\n[warn]     }\n[warn] \n[warn]     public void setLanguage(int language) {\n[warn]         this.language = language;\n[warn]     }\n[warn] \n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/Like.java:41:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.Like has no definition of serialVersionUID\n[warn] public class Like implements DynamicActivity {\n[warn]     public enum LikeType {\n[warn]         POST,\n[warn]         COMMENT,\n[warn]         PHOTO\n[warn]     }\n[warn] \n[warn]     private boolean isExplicitlyDeleted;\n[warn]     private long person;\n[warn]     private long personCreationDate;\n[warn]     private long messageId;\n[warn]     private long creationDate;\n[warn]     private long deletionDate;\n[warn]     private LikeType type;\n[warn] \n[warn]     public boolean isExplicitlyDeleted() {\n[warn]         return isExplicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public void setExplicitlyDeleted(boolean explicitlyDeleted) {\n[warn]         isExplicitlyDeleted = explicitlyDeleted;\n[warn]     }\n[warn] \n[warn]     public long getPerson() {\n[warn]         return person;\n[warn]     }\n[warn] \n[warn]     public long getPersonCreationDate() {\n[warn]         return personCreationDate;\n[warn]     }\n[warn] \n[warn]     public long getMessageId() {\n[warn]         return messageId;\n[warn]     }\n[warn] \n[warn]     public long getCreationDate() {\n[warn]         return creationDate;\n[warn]     }\n[warn] \n[warn]     public long getDeletionDate() {\n[warn]         return deletionDate;\n[warn]     }\n[warn] \n[warn]     public LikeType getType() {\n[warn]         return type;\n[warn]     }\n[warn] \n[warn]     public void setPerson(long person) {\n[warn]         this.person = person;\n[warn]     }\n[warn] \n[warn]     public void setPersonCreationDate(long personCreationDate) {\n[warn]         this.personCreationDate = personCreationDate;\n[warn]     }\n[warn] \n[warn]     public void setMessageId(long messageId) {\n[warn]         this.messageId = messageId;\n[warn]     }\n[warn] \n[warn]     public void setCreationDate(long creationDate) {\n[warn]         this.creationDate = creationDate;\n[warn]     }\n[warn] \n[warn]     public void setDeletionDate(long deletionDate) {\n[warn]         this.deletionDate = deletionDate;\n[warn]     }\n[warn] \n[warn]     public void setType(LikeType type) {\n[warn]         this.type = type;\n[warn]     }\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/StudyAt.java:41:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.StudyAt has no definition of serialVersionUID\n[warn] public class StudyAt implements Serializable {\n[warn]     public long person;\n[warn]     public long university;\n[warn]     public long year;\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/entities/dynamic/relations/WorkAt.java:40:1: serializable class ldbc.snb.datagen.entities.dynamic.relations.WorkAt has no definition of serialVersionUID\n[warn] public class WorkAt implements Serializable {\n[warn]     public long person;\n[warn]     public long company;\n[warn]     public long year;\n[warn] }\n[warn] /build/src/main/java/ldbc/snb/datagen/util/GeneratorConfiguration.java:8:1: serializable class ldbc.snb.datagen.util.GeneratorConfiguration has no definition of serialVersionUID\n[warn] public class GeneratorConfiguration implements Iterable<Map.Entry<String, String>>, Serializable {\n[warn]     public final Map<String, String> map;\n[warn] \n[warn]     public GeneratorConfiguration(Map<String, String> map) {\n[warn]         this.map = map;\n[warn]     }\n[warn] \n[warn]     public String get(String key) {\n[warn]         return map.get(key);\n[warn]     }\n[warn] \n[warn]     public String get(String key, String defaultValue) {\n[warn]         return map.getOrDefault(key, defaultValue);\n[warn]     }\n[warn] \n[warn]     public boolean getBoolean(String key, boolean defaultValue) {\n[warn]         String valueString = this.getTrimmed(key);\n[warn]         if (null != valueString && !valueString.isEmpty()) {\n[warn]             if (\"true\".equalsIgnoreCase(valueString)) {\n[warn]                 return true;\n[warn]             } else {\n[warn]                 return \"false\".equalsIgnoreCase(valueString) ? false : defaultValue;\n[warn]             }\n[warn]         } else {\n[warn]             return defaultValue;\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public int getInt(String name, int defaultValue) {\n[warn]         String valueString = this.getTrimmed(name);\n[warn]         if (valueString == null) {\n[warn]             return defaultValue;\n[warn]         } else {\n[warn]             String hexString = this.getHexDigits(valueString);\n[warn]             return hexString != null ? Integer.parseInt(hexString, 16) : Integer.parseInt(valueString);\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public double getDouble(String name, double defaultValue) {\n[warn]         String valueString = this.getTrimmed(name);\n[warn]         return valueString == null ? defaultValue : Double.parseDouble(valueString);\n[warn]     }\n[warn] \n[warn]     public float getFloat(String name, float defaultValue) {\n[warn]         String valueString = this.getTrimmed(name);\n[warn]         return valueString == null ? defaultValue : Float.parseFloat(valueString);\n[warn]     }\n[warn] \n[warn]     private String getHexDigits(String value) {\n[warn]         boolean negative = false;\n[warn]         String str = value;\n[warn]         String hexString;\n[warn]         if (value.startsWith(\"-\")) {\n[warn]             negative = true;\n[warn]             str = value.substring(1);\n[warn]         }\n[warn] \n[warn]         if (!str.startsWith(\"0x\") && !str.startsWith(\"0X\")) {\n[warn]             return null;\n[warn]         } else {\n[warn]             hexString = str.substring(2);\n[warn]             if (negative) {\n[warn]                 hexString = \"-\" + hexString;\n[warn]             }\n[warn] \n[warn]             return hexString;\n[warn]         }\n[warn]     }\n[warn] \n[warn]     public String getTrimmed(String name) {\n[warn]         String value = this.get(name);\n[warn]         return null == value ? null : value.trim();\n[warn]     }\n[warn] \n[warn]     @Override\n[warn]     public Iterator<Map.Entry<String, String>> iterator() {\n[warn]         return this.map.entrySet().iterator();\n[warn]     }\n[warn] \n[warn]     public String getOutputDir() {\n[warn]         return map.get(\"generator.outputDir\");\n[warn]     }\n[warn] \n[warn]     public void printConfig() {\n[warn]         System.out.println(\"********* Configuration *********\");\n[warn]         map.forEach((key, value) -> System.out.println(key + \": \" + value));\n[warn]         System.out.println(\"*********************************\");\n[warn]     }\n[warn] }\n[info] done compiling\n[warn] multiple main classes detected: run 'show discoveredMainClasses' to see the list\n[info] Strategy 'discard' was applied to a file (Run the task at debug level to see details)\n[info] Strategy 'first' was applied to 641 files (Run the task at debug level to see details)\n[success] Total time: 35 s, completed Dec 29, 2022 3:18:27 PM\nRemoving intermediate container 6ea734110370\n ---> 9206fc70a82d\nStep 12/30 : FROM scratch as jar\n ---> \nStep 13/30 : COPY --from=build-jar /build/target/ldbc_snb_datagen_*-jar-with-dependencies.jar /jar\n ---> 6c43132ff2d7\nStep 14/30 : FROM python:3.7-slim as build-tools\n ---> 74e5f3c48333\nStep 15/30 : RUN pip install --no-cache-dir --no-cache virtualenv && virtualenv -p python3.7 /tools\n ---> Running in 1af04218894b\nCollecting virtualenv\n  Downloading virtualenv-20.17.1-py3-none-any.whl (8.8 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.8/8.8 MB 95.5 MB/s eta 0:00:00\nCollecting distlib<1,>=0.3.6\n  Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 468.5/468.5 KB 197.5 MB/s eta 0:00:00\nCollecting platformdirs<3,>=2.4\n  Downloading platformdirs-2.6.2-py3-none-any.whl (14 kB)\nCollecting importlib-metadata>=4.8.3\n  Downloading importlib_metadata-5.2.0-py3-none-any.whl (21 kB)\nCollecting filelock<4,>=3.4.1\n  Downloading filelock-3.9.0-py3-none-any.whl (9.7 kB)\nCollecting zipp>=0.5\n  Downloading zipp-3.11.0-py3-none-any.whl (6.6 kB)\nCollecting typing-extensions>=3.6.4\n  Downloading typing_extensions-4.4.0-py3-none-any.whl (26 kB)\nInstalling collected packages: distlib, zipp, typing-extensions, filelock, platformdirs, importlib-metadata, virtualenv\nSuccessfully installed distlib-0.3.6 filelock-3.9.0 importlib-metadata-5.2.0 platformdirs-2.6.2 typing-extensions-4.4.0 virtualenv-20.17.1 zipp-3.11.0\n\u001b[91mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\u001b[0m\u001b[91mWARNING: You are using pip version 22.0.4; however, version 22.3.1 is available.\nYou should consider upgrading via the '/usr/local/bin/python -m pip install --upgrade pip' command.\n\u001b[0mcreated virtual environment CPython3.7.16.final.0-64 in 420ms\n  creator CPython3Posix(dest=/tools, clear=False, no_vcs_ignore=False, global=False)\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/root/.local/share/virtualenv)\n    added seed packages: pip==22.3.1, setuptools==65.6.3, wheel==0.38.4\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\nRemoving intermediate container 1af04218894b\n ---> 11799853c88b\nStep 16/30 : COPY tools build\n ---> a024aaa95e58\nStep 17/30 : WORKDIR build\n ---> Running in d5d519f67614\nRemoving intermediate container d5d519f67614\n ---> 7a51e2f878cb\nStep 18/30 : RUN . /tools/bin/activate && pip install --no-cache-dir .\n ---> Running in b916c4b0b4d5\nProcessing /build\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nCollecting requests\n  Downloading requests-2.28.1-py3-none-any.whl (62 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 62.8/62.8 kB 30.1 MB/s eta 0:00:00\nCollecting urllib3\n  Downloading urllib3-1.26.13-py2.py3-none-any.whl (140 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 140.6/140.6 kB 105.0 MB/s eta 0:00:00\nCollecting chardet\n  Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 199.1/199.1 kB 198.6 MB/s eta 0:00:00\nCollecting boto3\n  Downloading boto3-1.26.39-py3-none-any.whl (132 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 132.7/132.7 kB 256.4 MB/s eta 0:00:00\nCollecting botocore<1.30.0,>=1.29.39\n  Downloading botocore-1.29.39-py3-none-any.whl (10.3 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.3/10.3 MB 103.0 MB/s eta 0:00:00\nCollecting jmespath<2.0.0,>=0.7.1\n  Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\nCollecting s3transfer<0.7.0,>=0.6.0\n  Downloading s3transfer-0.6.0-py3-none-any.whl (79 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 79.6/79.6 kB 235.4 MB/s eta 0:00:00\nCollecting charset-normalizer<3,>=2\n  Downloading charset_normalizer-2.1.1-py3-none-any.whl (39 kB)\nCollecting idna<4,>=2.5\n  Downloading idna-3.4-py3-none-any.whl (61 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 61.5/61.5 kB 220.1 MB/s eta 0:00:00\nCollecting certifi>=2017.4.17\n  Downloading certifi-2022.12.7-py3-none-any.whl (155 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 155.3/155.3 kB 235.1 MB/s eta 0:00:00\nCollecting python-dateutil<3.0.0,>=2.1\n  Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 247.7/247.7 kB 248.9 MB/s eta 0:00:00\nCollecting six>=1.5\n  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\nBuilding wheels for collected packages: ldbc-datagen-tools-common\n  Building wheel for ldbc-datagen-tools-common (pyproject.toml): started\n  Building wheel for ldbc-datagen-tools-common (pyproject.toml): finished with status 'done'\n  Created wheel for ldbc-datagen-tools-common: filename=ldbc_datagen_tools_common-1.0.0-py3-none-any.whl size=10891 sha256=1312e04e0d321c85fc2eed7c00fe765d1e8c5d1b6ffab4241af7aa89d624414d\n  Stored in directory: /tmp/pip-ephem-wheel-cache-tplrp1n5/wheels/9f/41/ce/5e8ec7d31fa190bdc8334d019731d197987022a1e11d767bcd\nSuccessfully built ldbc-datagen-tools-common\nInstalling collected packages: urllib3, six, jmespath, idna, charset-normalizer, chardet, certifi, requests, python-dateutil, botocore, s3transfer, boto3, ldbc-datagen-tools-common\nSuccessfully installed boto3-1.26.39 botocore-1.29.39 certifi-2022.12.7 chardet-5.1.0 charset-normalizer-2.1.1 idna-3.4 jmespath-1.0.1 ldbc-datagen-tools-common-1.0.0 python-dateutil-2.8.2 requests-2.28.1 s3transfer-0.6.0 six-1.16.0 urllib3-1.26.13\nRemoving intermediate container b916c4b0b4d5\n ---> 6f81abc31f32\nStep 19/30 : FROM python:3.7-slim as tools\n ---> 74e5f3c48333\nStep 20/30 : COPY --from=build-tools /tools /tools\n ---> ec1a58d4766e\nStep 21/30 : FROM bde2020/spark-master:3.2.1-hadoop3.2 as standalone\n ---> e2e9e5a7d7f1\nStep 22/30 : COPY --from=jar /jar /jar\n ---> a89ba6206b33\nStep 23/30 : COPY --from=tools /tools /tools\n ---> ffa6dfa465ce\nStep 24/30 : RUN ln -sf /usr/bin/python3 /tools/bin/python\n ---> Running in f2dc2eb8c646\nRemoving intermediate container f2dc2eb8c646\n ---> 1af08daed81e\nStep 25/30 : ENV TEMP_DIR /tmp\n ---> Running in fe633a93e079\nRemoving intermediate container fe633a93e079\n ---> 1ce5dc4823b6\nStep 26/30 : ENV SPARK_LOCAL_DIRS ${TEMP_DIR}\n ---> Running in d5c73e58fe72\nRemoving intermediate container d5c73e58fe72\n ---> 0124e05a77d8\nStep 27/30 : ENV PATH=/tools/bin:/spark/bin:$PATH\n ---> Running in 5753a28c5313\nRemoving intermediate container 5753a28c5313\n ---> d34d7aa810d6\nStep 28/30 : ENV LDBC_SNB_DATAGEN_JAR=/jar\n ---> Running in b7c38d2c04ce\nRemoving intermediate container b7c38d2c04ce\n ---> 036b3fcaea1b\nStep 29/30 : WORKDIR /\n ---> Running in 87a25699cf6d\nRemoving intermediate container 87a25699cf6d\n ---> 5bf08a97b5f0\nStep 30/30 : ENTRYPOINT [\"run.py\"]\n ---> Running in 6c2fcc02393a\nRemoving intermediate container 6c2fcc02393a\n ---> d687ee3d9cff\nSuccessfully built d687ee3d9cff\nSuccessfully tagged ldbc_snb_datagen:latest\n","stderr":"","imageSize":693257995},"endTime":1672327268923}