{"repository":"https://github.com/python-discord/site","dockerfilePath":"Dockerfile","startTime":1673035530806,"endTime":1673035598419,"clone":{"startTime":1673035530807,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/python-discord/site'...\n","error":null,"endTime":1673035532195,"commit":"b4e2c53dfb1a130ba733de9c390a26cd66737104"},"originalBuild":{"startTime":1673035532278,"endTime":1673035597633,"error":null,"stdout":"Sending build context to Docker daemon  8.493MB\r\r\nStep 1/13 : FROM ghcr.io/chrislovering/python-poetry-base:3.10-slim\n3.10-slim: Pulling from chrislovering/python-poetry-base\ne9995326b091: Pulling fs layer\nf3d7f077cdde: Pulling fs layer\n97998d90ca9f: Pulling fs layer\n7920de519334: Pulling fs layer\n3c7e41a98fc1: Pulling fs layer\n4a5a949edcc8: Pulling fs layer\n90fbed5ea64c: Pulling fs layer\n3c7e41a98fc1: Waiting\n90fbed5ea64c: Waiting\n4a5a949edcc8: Waiting\n7920de519334: Waiting\nf3d7f077cdde: Verifying Checksum\nf3d7f077cdde: Download complete\n97998d90ca9f: Verifying Checksum\n97998d90ca9f: Download complete\n7920de519334: Verifying Checksum\n7920de519334: Download complete\ne9995326b091: Verifying Checksum\ne9995326b091: Download complete\n3c7e41a98fc1: Verifying Checksum\n3c7e41a98fc1: Download complete\n4a5a949edcc8: Verifying Checksum\n4a5a949edcc8: Download complete\n90fbed5ea64c: Verifying Checksum\n90fbed5ea64c: Download complete\ne9995326b091: Pull complete\nf3d7f077cdde: Pull complete\n97998d90ca9f: Pull complete\n7920de519334: Pull complete\n3c7e41a98fc1: Pull complete\n4a5a949edcc8: Pull complete\n90fbed5ea64c: Pull complete\nDigest: sha256:5d16279d318095fc001eb63e65f67d21a55dbea4e362ddf2eabaa81ee894bda3\nStatus: Downloaded newer image for ghcr.io/chrislovering/python-poetry-base:3.10-slim\n ---> 6ccf9902374d\nStep 2/13 : STOPSIGNAL SIGQUIT\n ---> Running in f108798ac864\nRemoving intermediate container f108798ac864\n ---> e857ade010aa\nStep 3/13 : WORKDIR /app\n ---> Running in 6fab7239e647\nRemoving intermediate container 6fab7239e647\n ---> d82087ae32c3\nStep 4/13 : COPY pyproject.toml poetry.lock ./\n ---> 4176be369227\nStep 5/13 : RUN poetry install --without dev\n ---> Running in b1ca14b05d0d\nCreating virtualenv site-9TtSrW0h-py3.10 in /opt/poetry/cache/virtualenvs\nInstalling dependencies from lock file\n\nPackage operations: 36 installs, 1 update, 0 removals\n\n  • Installing idna (3.4)\n  • Installing pycparser (2.21)\n  • Installing sniffio (1.3.0)\n  • Installing anyio (3.6.2)\n  • Installing asgiref (3.5.2)\n  • Installing cffi (1.15.1)\n  • Installing charset-normalizer (2.1.1)\n  • Installing h11 (0.12.0)\n  • Installing six (1.16.0)\n  • Installing sqlparse (0.4.3)\n  • Installing certifi (2022.12.7)\n  • Installing urllib3 (1.26.12)\n  • Installing cryptography (38.0.3)\n  • Installing django (4.1.4)\n  • Installing libsass (0.21.0)\n  • Installing markdown (3.4.1)\n  • Installing prometheus-client (0.15.0)\n  • Installing pyyaml (6.0)\n  • Installing requests (2.28.1)\n  • Installing rfc3986 (1.5.0)\n  • Updating setuptools (65.3.0 -> 65.5.1)\n  • Installing httpcore (0.15.0)\n  • Installing pytz (2022.5)\nConnection pool is full, discarding connection: pypi.org. Connection pool size: 10\n  • Installing django-distill (3.0.2)\n  • Installing django-environ (0.9.0)\n  • Installing django-filter (22.1)\n  • Installing django-simple-bulma (2.5.0)\n  • Installing gunicorn (20.1.0)\n  • Installing djangorestframework (3.14.0)\n  • Installing psycopg2-binary (2.9.5)\n  • Installing pymdown-extensions (9.9)\n  • Installing python-frontmatter (1.0.0)\n  • Installing sentry-sdk (1.12.1)\n  • Installing httpx (0.23.1)\n  • Installing django-prometheus (2.2.0)\n  • Installing whitenoise (6.2.0)\n  • Installing pyjwt (2.6.0)\nConnection pool is full, discarding connection: pypi.org. Connection pool size: 10\nConnection pool is full, discarding connection: pypi.org. Connection pool size: 10\nConnection pool is full, discarding connection: pypi.org. Connection pool size: 10\nConnection pool is full, discarding connection: pypi.org. Connection pool size: 10\nRemoving intermediate container b1ca14b05d0d\n ---> 8867078da98f\nStep 6/13 : ARG git_sha=\"development\"\n ---> Running in b9f048b76412\nRemoving intermediate container b9f048b76412\n ---> cca3af717032\nStep 7/13 : ENV GIT_SHA=$git_sha\n ---> Running in abb329a16e37\nRemoving intermediate container abb329a16e37\n ---> 7f5e6f2ad38f\nStep 8/13 : COPY . .\n ---> 034d86b7a25e\nStep 9/13 : RUN     BUILDING_DOCKER=yes     SECRET_KEY=dummy_value     DATABASE_URL=postgres://localhost     METRICITY_DB_URL=postgres://localhost     poetry run python manage.py collectstatic --noinput --clear\n ---> Running in a66eabe93eca\n\n273 static files copied to '/app/staticfiles'.\nRemoving intermediate container a66eabe93eca\n ---> 362b0f04ed86\nStep 10/13 : ARG STATIC_BUILD=false\n ---> Running in 0fa0fe8b2cc6\nRemoving intermediate container 0fa0fe8b2cc6\n ---> 625f5474ac5b\nStep 11/13 : RUN if [ $STATIC_BUILD = \"TRUE\" ] ;   then SECRET_KEY=dummy_value poetry run python manage.py distill-local build --traceback --force ; fi\n ---> Running in 9d8b52f751cd\nRemoving intermediate container 9d8b52f751cd\n ---> d87b327f1c56\nStep 12/13 : ENTRYPOINT [\"poetry\", \"run\", \"python\", \"manage.py\"]\n ---> Running in 94d02b4217b4\nRemoving intermediate container 94d02b4217b4\n ---> 6ce912dd50f6\nStep 13/13 : CMD [\"run\"]\n ---> Running in 4ce2ada6bc1f\nRemoving intermediate container 4ce2ada6bc1f\n ---> 19cda33db19c\nSuccessfully built 19cda33db19c\nSuccessfully tagged site:latest\n","stderr":"","imageSize":435523939},"repair":{"startTime":1673035597681,"endTime":1673035597726,"violations":[],"repairedDockerfile":"FROM ghcr.io/chrislovering/python-poetry-base:3.10-slim\n\n# Allow service to handle stops gracefully\nSTOPSIGNAL SIGQUIT\n\n# Copy the project files into working directory\nWORKDIR /app\n\n# Install project dependencies\nCOPY pyproject.toml poetry.lock ./\nRUN poetry install --without dev\n\n# Set Git SHA environment variable\nARG git_sha=\"development\"\nENV GIT_SHA=$git_sha\n\n# Copy the source code in last to optimize rebuilding the image\nCOPY . .\n\n# Set dummy variables so collectstatic can load settings.py\nRUN \\\n    # Set BUILDING_DOCKER to anything but undefined so settings.py\n    # does not insert django_prometheus into the list of installed apps.\n    # This prevents django_prometheus from attempting to connect to the database\n    # when the collectstatic task is ran.\n    BUILDING_DOCKER=yes \\\n    SECRET_KEY=dummy_value \\\n    DATABASE_URL=postgres://localhost \\\n    METRICITY_DB_URL=postgres://localhost \\\n    poetry run python manage.py collectstatic --noinput --clear\n\n# Build static files if we are doing a static build\nARG STATIC_BUILD=false\nRUN if [ $STATIC_BUILD = \"TRUE\" ] ; \\\n  then SECRET_KEY=dummy_value poetry run python manage.py distill-local build --traceback --force ; \\\nfi\n\n# Run web server through custom manager\nENTRYPOINT [\"poetry\", \"run\", \"python\", \"manage.py\"]\nCMD [\"run\"]\n"}}