{"repository":"https://github.com/jts/nanopolish","dockerfilePath":"Dockerfile","startTime":1672006259973,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/jts/nanopolish'...\n","error":null,"commit":"07cb03deb49323b439ed84641b3352d850ce2812"},"originalBuild":{"startTimestamp":1672006261500,"endTimestamp":1672006719345,"error":{"code":"ERR_CHILD_PROCESS_STDIO_MAXBUFFER","cmd":"docker build --no-cache --force-rm -t nanopolish:latest -f /tmp/dinghy-analysis/jts/nanopolish/Dockerfile ."},"stdout":"Sending build context to Docker daemon  15.22MB\r\r\nStep 1/8 : FROM centos:7\n ---> eeb6ee3f44bd\nStep 2/8 : WORKDIR /\n ---> Running in 32367610a20d\nRemoving intermediate container 32367610a20d\n ---> 37ddbdcf5109\nStep 3/8 : RUN yum group install \"Development Tools\" -y\n ---> Running in a326c9fd0ab9\nLoaded plugins: fastestmirror, ovl\n\u001b[91mThere is no installed groups file.\nMaybe run: yum groups mark convert (see man yum)\n\u001b[0mDetermining fastest mirrors\n * base: mirror.nsc.liu.se\n * extras: mirror.nsc.liu.se\n * updates: mirror.nsc.liu.se\nResolving Dependencies\n--> Running transaction check\n---> Package autoconf.noarch 0:2.69-11.el7 will be installed\n--> Processing Dependency: perl >= 5.006 for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: m4 >= 1.4.14 for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(warnings) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(vars) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(strict) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(constant) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Text::ParseWords) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(POSIX) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(IO::File) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Getopt::Long) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::stat) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::Spec) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::Path) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::Find) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::Copy) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::Compare) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(File::Basename) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Exporter) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Errno) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(DynaLoader) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Data::Dumper) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Cwd) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Class::Struct) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: perl(Carp) for package: autoconf-2.69-11.el7.noarch\n--> Processing Dependency: /usr/bin/perl for package: autoconf-2.69-11.el7.noarch\n---> Package automake.noarch 0:1.13.4-3.el7 will be installed\n--> Processing Dependency: perl(threads) for package: automake-1.13.4-3.el7.noarch\n--> Processing Dependency: perl(Thread::Queue) for package: automake-1.13.4-3.el7.noarch\n--> Processing Dependency: perl(TAP::Parser) for package: automake-1.13.4-3.el7.noarch\n---> Package bison.x86_64 0:3.0.4-2.el7 will be installed\n---> Package byacc.x86_64 0:1.9.20130304-3.el7 will be installed\n---> Package cscope.x86_64 0:15.8-10.el7 will be installed\n--> Processing Dependency: emacs-filesystem for package: cscope-15.8-10.el7.x86_64\n---> Package ctags.x86_64 0:5.8-13.el7 will be installed\n---> Package diffstat.x86_64 0:1.57-4.el7 will be installed\n---> Package doxygen.x86_64 1:1.8.5-4.el7 will be installed\n---> Package elfutils.x86_64 0:0.176-5.el7 will be installed\n---> Package flex.x86_64 0:2.5.37-6.el7 will be installed\n---> Package gcc.x86_64 0:4.8.5-44.el7 will be installed\n--> Processing Dependency: libgomp = 4.8.5-44.el7 for package: gcc-4.8.5-44.el7.x86_64\n--> Processing Dependency: cpp = 4.8.5-44.el7 for package: gcc-4.8.5-44.el7.x86_64\n--> Processing Dependency: glibc-devel >= 2.2.90-12 for package: gcc-4.8.5-44.el7.x86_64\n--> Processing Dependency: libmpfr.so.4()(64bit) for package: gcc-4.8.5-44.el7.x86_64\n--> Processing Dependency: libmpc.so.3()(64bit) for package: gcc-4.8.5-44.el7.x86_64\n--> Processing Dependency: libgomp.so.1()(64bit) for package: gcc-4.8.5-44.el7.x86_64\n---> Package gcc-c++.x86_64 0:4.8.5-44.el7 will be installed\n--> Processing Dependency: libstdc++-devel = 4.8.5-44.el7 for package: gcc-c++-4.8.5-44.el7.x86_64\n---> Package gcc-gfortran.x86_64 0:4.8.5-44.el7 will be installed\n--> Processing Dependency: libquadmath-devel = 4.8.5-44.el7 for package: gcc-gfortran-4.8.5-44.el7.x86_64\n--> Processing Dependency: libquadmath = 4.8.5-44.el7 for package: gcc-gfortran-4.8.5-44.el7.x86_64\n--> Processing Dependency: libgfortran = 4.8.5-44.el7 for package: gcc-gfortran-4.8.5-44.el7.x86_64\n--> Processing Dependency: libgfortran.so.3()(64bit) for package: gcc-gfortran-4.8.5-44.el7.x86_64\n---> Package gettext.x86_64 0:0.19.8.1-3.el7 will be installed\n--> Processing Dependency: gettext-libs(x86-64) = 0.19.8.1-3.el7 for package: gettext-0.19.8.1-3.el7.x86_64\n--> Processing Dependency: libunistring.so.0()(64bit) for package: gettext-0.19.8.1-3.el7.x86_64\n--> Processing Dependency: libgettextsrc-0.19.8.1.so()(64bit) for package: gettext-0.19.8.1-3.el7.x86_64\n--> Processing Dependency: libgettextlib-0.19.8.1.so()(64bit) for package: gettext-0.19.8.1-3.el7.x86_64\n--> Processing Dependency: libcroco-0.6.so.3()(64bit) for package: gettext-0.19.8.1-3.el7.x86_64\n---> Package git.x86_64 0:1.8.3.1-23.el7_8 will be installed\n--> Processing Dependency: perl-Git = 1.8.3.1-23.el7_8 for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: rsync for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Term::ReadKey) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Git) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Temp) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Error) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: openssh-clients for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: less for package: git-1.8.3.1-23.el7_8.x86_64\n---> Package indent.x86_64 0:2.2.11-13.el7 will be installed\n---> Package intltool.noarch 0:0.50.2-7.el7 will be installed\n--> Processing Dependency: perl(XML::Parser) for package: intltool-0.50.2-7.el7.noarch\n--> Processing Dependency: perl(Encode) for package: intltool-0.50.2-7.el7.noarch\n--> Processing Dependency: gettext-devel for package: intltool-0.50.2-7.el7.noarch\n---> Package libtool.x86_64 0:2.4.2-22.el7_3 will be installed\n---> Package make.x86_64 1:3.82-24.el7 will be installed\n---> Package patch.x86_64 0:2.7.1-12.el7_7 will be installed\n---> Package patchutils.x86_64 0:0.3.3-5.el7_9 will be installed\n---> Package rcs.x86_64 0:5.9.0-7.el7 will be installed\n---> Package redhat-rpm-config.noarch 0:9.1.0-88.el7.centos will be installed\n--> Processing Dependency: dwz >= 0.4 for package: redhat-rpm-config-9.1.0-88.el7.centos.noarch\n--> Processing Dependency: zip for package: redhat-rpm-config-9.1.0-88.el7.centos.noarch\n--> Processing Dependency: python-srpm-macros for package: redhat-rpm-config-9.1.0-88.el7.centos.noarch\n--> Processing Dependency: perl-srpm-macros for package: redhat-rpm-config-9.1.0-88.el7.centos.noarch\n---> Package rpm-build.x86_64 0:4.11.3-48.el7_9 will be installed\n--> Processing Dependency: rpm = 4.11.3-48.el7_9 for package: rpm-build-4.11.3-48.el7_9.x86_64\n--> Processing Dependency: unzip for package: rpm-build-4.11.3-48.el7_9.x86_64\n--> Processing Dependency: file for package: rpm-build-4.11.3-48.el7_9.x86_64\n--> Processing Dependency: bzip2 for package: rpm-build-4.11.3-48.el7_9.x86_64\n--> Processing Dependency: /usr/bin/gdb-add-index for package: rpm-build-4.11.3-48.el7_9.x86_64\n---> Package rpm-sign.x86_64 0:4.11.3-48.el7_9 will be installed\n--> Processing Dependency: rpm-build-libs(x86-64) = 4.11.3-48.el7_9 for package: rpm-sign-4.11.3-48.el7_9.x86_64\n---> Package subversion.x86_64 0:1.7.14-16.el7 will be installed\n--> Processing Dependency: subversion-libs(x86-64) = 1.7.14-16.el7 for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: systemd-sysv for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_wc-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_subr-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_repos-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_ra_svn-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_ra_neon-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_ra_local-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_ra-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_fs_util-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_fs_fs-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_fs_base-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_fs-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_diff-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_delta-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libsvn_client-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libneon.so.27()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libaprutil-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n--> Processing Dependency: libapr-1.so.0()(64bit) for package: subversion-1.7.14-16.el7.x86_64\n---> Package swig.x86_64 0:2.0.10-5.el7 will be installed\n---> Package systemtap.x86_64 0:4.0-13.el7 will be installed\n--> Processing Dependency: systemtap-devel = 4.0-13.el7 for package: systemtap-4.0-13.el7.x86_64\n--> Processing Dependency: systemtap-client = 4.0-13.el7 for package: systemtap-4.0-13.el7.x86_64\n--> Running transaction check\n---> Package apr.x86_64 0:1.4.8-7.el7 will be installed\n---> Package apr-util.x86_64 0:1.5.2-6.el7 will be installed\n---> Package bzip2.x86_64 0:1.0.6-13.el7 will be installed\n---> Package cpp.x86_64 0:4.8.5-44.el7 will be installed\n---> Package dwz.x86_64 0:0.11-3.el7 will be installed\n---> Package emacs-filesystem.noarch 1:24.3-23.el7 will be installed\n---> Package file.x86_64 0:5.11-37.el7 will be installed\n---> Package gdb.x86_64 0:7.6.1-120.el7 will be installed\n---> Package gettext-devel.x86_64 0:0.19.8.1-3.el7 will be installed\n--> Processing Dependency: gettext-common-devel = 0.19.8.1-3.el7 for package: gettext-devel-0.19.8.1-3.el7.x86_64\n---> Package gettext-libs.x86_64 0:0.19.8.1-3.el7 will be installed\n---> Package glibc-devel.x86_64 0:2.17-326.el7_9 will be installed\n--> Processing Dependency: glibc-headers = 2.17-326.el7_9 for package: glibc-devel-2.17-326.el7_9.x86_64\n--> Processing Dependency: glibc = 2.17-326.el7_9 for package: glibc-devel-2.17-326.el7_9.x86_64\n--> Processing Dependency: glibc-headers for package: glibc-devel-2.17-326.el7_9.x86_64\n---> Package less.x86_64 0:458-9.el7 will be installed\n--> Processing Dependency: groff-base for package: less-458-9.el7.x86_64\n---> Package libcroco.x86_64 0:0.6.12-6.el7_9 will be installed\n---> Package libgfortran.x86_64 0:4.8.5-44.el7 will be installed\n---> Package libgomp.x86_64 0:4.8.5-44.el7 will be installed\n---> Package libmpc.x86_64 0:1.0.1-3.el7 will be installed\n---> Package libquadmath.x86_64 0:4.8.5-44.el7 will be installed\n---> Package libquadmath-devel.x86_64 0:4.8.5-44.el7 will be installed\n---> Package libstdc++-devel.x86_64 0:4.8.5-44.el7 will be installed\n---> Package libunistring.x86_64 0:0.9.3-9.el7 will be installed\n---> Package m4.x86_64 0:1.4.16-10.el7 will be installed\n---> Package mpfr.x86_64 0:3.1.1-4.el7 will be installed\n---> Package neon.x86_64 0:0.30.0-4.el7 will be installed\n--> Processing Dependency: libgnutls.so.28(GNUTLS_3_0_0)(64bit) for package: neon-0.30.0-4.el7.x86_64\n--> Processing Dependency: libgnutls.so.28(GNUTLS_2_12)(64bit) for package: neon-0.30.0-4.el7.x86_64\n--> Processing Dependency: libgnutls.so.28(GNUTLS_1_4)(64bit) for package: neon-0.30.0-4.el7.x86_64\n--> Processing Dependency: libproxy.so.1()(64bit) for package: neon-0.30.0-4.el7.x86_64\n--> Processing Dependency: libpakchois.so.0()(64bit) for package: neon-0.30.0-4.el7.x86_64\n--> Processing Dependency: libgnutls.so.28()(64bit) for package: neon-0.30.0-4.el7.x86_64\n---> Package openssh-clients.x86_64 0:7.4p1-22.el7_9 will be installed\n--> Processing Dependency: openssh = 7.4p1-22.el7_9 for package: openssh-clients-7.4p1-22.el7_9.x86_64\n--> Processing Dependency: fipscheck-lib(x86-64) >= 1.3.0 for package: openssh-clients-7.4p1-22.el7_9.x86_64\n--> Processing Dependency: libfipscheck.so.1()(64bit) for package: openssh-clients-7.4p1-22.el7_9.x86_64\n--> Processing Dependency: libedit.so.0()(64bit) for package: openssh-clients-7.4p1-22.el7_9.x86_64\n---> Package perl.x86_64 4:5.16.3-299.el7_9 will be installed\n--> Processing Dependency: perl-libs = 4:5.16.3-299.el7_9 for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Socket) >= 1.3 for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Scalar::Util) >= 1.10 for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl-macros for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl-libs for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(threads::shared) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Time::Local) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Time::HiRes) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Storable) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Socket) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Scalar::Util) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Pod::Simple::XHTML) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Pod::Simple::Search) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Filter::Util::Call) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: libperl.so()(64bit) for package: 4:perl-5.16.3-299.el7_9.x86_64\n---> Package perl-Carp.noarch 0:1.26-244.el7 will be installed\n---> Package perl-Data-Dumper.x86_64 0:2.145-3.el7 will be installed\n---> Package perl-Encode.x86_64 0:2.51-7.el7 will be installed\n---> Package perl-Error.noarch 1:0.17020-2.el7 will be installed\n---> Package perl-Exporter.noarch 0:5.68-3.el7 will be installed\n---> Package perl-File-Path.noarch 0:2.09-2.el7 will be installed\n---> Package perl-File-Temp.noarch 0:0.23.01-3.el7 will be installed\n---> Package perl-Getopt-Long.noarch 0:2.40-3.el7 will be installed\n--> Processing Dependency: perl(Pod::Usage) >= 1.14 for package: perl-Getopt-Long-2.40-3.el7.noarch\n---> Package perl-Git.noarch 0:1.8.3.1-23.el7_8 will be installed\n---> Package perl-PathTools.x86_64 0:3.40-5.el7 will be installed\n---> Package perl-TermReadKey.x86_64 0:2.30-20.el7 will be installed\n---> Package perl-Test-Harness.noarch 0:3.28-3.el7 will be installed\n---> Package perl-Text-ParseWords.noarch 0:3.29-4.el7 will be installed\n---> Package perl-Thread-Queue.noarch 0:3.02-2.el7 will be installed\n---> Package perl-XML-Parser.x86_64 0:2.41-10.el7 will be installed\n---> Package perl-constant.noarch 0:1.27-2.el7 will be installed\n---> Package perl-srpm-macros.noarch 0:1-8.el7 will be installed\n---> Package perl-threads.x86_64 0:1.87-4.el7 will be installed\n---> Package python-srpm-macros.noarch 0:3-34.el7 will be installed\n---> Package rpm.x86_64 0:4.11.3-45.el7 will be updated\n--> Processing Dependency: rpm = 4.11.3-45.el7 for package: rpm-python-4.11.3-45.el7.x86_64\n--> Processing Dependency: rpm = 4.11.3-45.el7 for package: rpm-libs-4.11.3-45.el7.x86_64\n---> Package rpm.x86_64 0:4.11.3-48.el7_9 will be an update\n---> Package rpm-build-libs.x86_64 0:4.11.3-45.el7 will be updated\n---> Package rpm-build-libs.x86_64 0:4.11.3-48.el7_9 will be an update\n---> Package rsync.x86_64 0:3.1.2-12.el7_9 will be installed\n---> Package subversion-libs.x86_64 0:1.7.14-16.el7 will be installed\n---> Package systemd-sysv.x86_64 0:219-78.el7_9.7 will be installed\n--> Processing Dependency: systemd = 219-78.el7_9.7 for package: systemd-sysv-219-78.el7_9.7.x86_64\n---> Package systemtap-client.x86_64 0:4.0-13.el7 will be installed\n--> Processing Dependency: systemtap-runtime = 4.0-13.el7 for package: systemtap-client-4.0-13.el7.x86_64\n--> Processing Dependency: mokutil for package: systemtap-client-4.0-13.el7.x86_64\n--> Processing Dependency: libavahi-common.so.3()(64bit) for package: systemtap-client-4.0-13.el7.x86_64\n--> Processing Dependency: libavahi-client.so.3()(64bit) for package: systemtap-client-4.0-13.el7.x86_64\n---> Package systemtap-devel.x86_64 0:4.0-13.el7 will be installed\n--> Processing Dependency: kernel-devel-uname-r for package: systemtap-devel-4.0-13.el7.x86_64\n---> Package unzip.x86_64 0:6.0-24.el7_9 will be installed\n---> Package zip.x86_64 0:3.0-11.el7 will be installed\n--> Running transaction check\n---> Package avahi-libs.x86_64 0:0.6.31-20.el7 will be installed\n---> Package fipscheck-lib.x86_64 0:1.4.1-6.el7 will be installed\n--> Processing Dependency: /usr/bin/fipscheck for package: fipscheck-lib-1.4.1-6.el7.x86_64\n---> Package gettext-common-devel.noarch 0:0.19.8.1-3.el7 will be installed\n---> Package glibc.x86_64 0:2.17-317.el7 will be updated\n--> Processing Dependency: glibc = 2.17-317.el7 for package: glibc-common-2.17-317.el7.x86_64\n---> Package glibc.x86_64 0:2.17-326.el7_9 will be an update\n---> Package glibc-headers.x86_64 0:2.17-326.el7_9 will be installed\n--> Processing Dependency: kernel-headers >= 2.2.1 for package: glibc-headers-2.17-326.el7_9.x86_64\n--> Processing Dependency: kernel-headers for package: glibc-headers-2.17-326.el7_9.x86_64\n---> Package gnutls.x86_64 0:3.3.29-9.el7_6 will be installed\n--> Processing Dependency: trousers >= 0.3.11.2 for package: gnutls-3.3.29-9.el7_6.x86_64\n--> Processing Dependency: libnettle.so.4()(64bit) for package: gnutls-3.3.29-9.el7_6.x86_64\n--> Processing Dependency: libhogweed.so.2()(64bit) for package: gnutls-3.3.29-9.el7_6.x86_64\n---> Package groff-base.x86_64 0:1.22.2-8.el7 will be installed\n---> Package kernel-debug-devel.x86_64 0:3.10.0-1160.81.1.el7 will be installed\n---> Package libedit.x86_64 0:3.0-12.20121213cvs.el7 will be installed\n---> Package libproxy.x86_64 0:0.4.11-11.el7 will be installed\n--> Processing Dependency: libmodman.so.1()(64bit) for package: libproxy-0.4.11-11.el7.x86_64\n---> Package mokutil.x86_64 0:15-8.el7 will be installed\n--> Processing Dependency: libefivar.so.1(libefivar.so.0)(64bit) for package: mokutil-15-8.el7.x86_64\n--> Processing Dependency: libefivar.so.1(LIBEFIVAR_0.24)(64bit) for package: mokutil-15-8.el7.x86_64\n--> Processing Dependency: libefivar.so.1()(64bit) for package: mokutil-15-8.el7.x86_64\n---> Package openssh.x86_64 0:7.4p1-22.el7_9 will be installed\n---> Package pakchois.x86_64 0:0.4-10.el7 will be installed\n---> Package perl-Filter.x86_64 0:1.49-3.el7 will be installed\n---> Package perl-Pod-Simple.noarch 1:3.28-4.el7 will be installed\n--> Processing Dependency: perl(Pod::Escapes) >= 1.04 for package: 1:perl-Pod-Simple-3.28-4.el7.noarch\n---> Package perl-Pod-Usage.noarch 0:1.63-3.el7 will be installed\n--> Processing Dependency: perl(Pod::Text) >= 3.15 for package: perl-Pod-Usage-1.63-3.el7.noarch\n--> Processing Dependency: perl-Pod-Perldoc for package: perl-Pod-Usage-1.63-3.el7.noarch\n---> Package perl-Scalar-List-Utils.x86_64 0:1.27-248.el7 will be installed\n---> Package perl-Socket.x86_64 0:2.010-5.el7 will be installed\n---> Package perl-Storable.x86_64 0:2.45-3.el7 will be installed\n---> Package perl-Time-HiRes.x86_64 4:1.9725-3.el7 will be installed\n---> Package perl-Time-Local.noarch 0:1.2300-2.el7 will be installed\n---> Package perl-libs.x86_64 4:5.16.3-299.el7_9 will be installed\n---> Package perl-macros.x86_64 4:5.16.3-299.el7_9 will be installed\n---> Package perl-threads-shared.x86_64 0:1.43-6.el7 will be installed\n---> Package rpm-libs.x86_64 0:4.11.3-45.el7 will be updated\n---> Package rpm-libs.x86_64 0:4.11.3-48.el7_9 will be an update\n---> Package rpm-python.x86_64 0:4.11.3-45.el7 will be updated\n---> Package rpm-python.x86_64 0:4.11.3-48.el7_9 will be an update\n---> Package systemd.x86_64 0:219-78.el7 will be updated\n---> Package systemd.x86_64 0:219-78.el7_9.7 will be an update\n--> Processing Dependency: systemd-libs = 219-78.el7_9.7 for package: systemd-219-78.el7_9.7.x86_64\n---> Package systemtap-runtime.x86_64 0:4.0-13.el7 will be installed\n--> Processing Dependency: libsymtabAPI.so.9.3()(64bit) for package: systemtap-runtime-4.0-13.el7.x86_64\n--> Processing Dependency: libdyninstAPI.so.9.3()(64bit) for package: systemtap-runtime-4.0-13.el7.x86_64\n--> Running transaction check\n---> Package dyninst.x86_64 0:9.3.1-3.el7 will be installed\n--> Processing Dependency: libdwarf.so.0()(64bit) for package: dyninst-9.3.1-3.el7.x86_64\n--> Processing Dependency: libboost_thread-mt.so.1.53.0()(64bit) for package: dyninst-9.3.1-3.el7.x86_64\n--> Processing Dependency: libboost_system-mt.so.1.53.0()(64bit) for package: dyninst-9.3.1-3.el7.x86_64\n--> Processing Dependency: libboost_date_time-mt.so.1.53.0()(64bit) for package: dyninst-9.3.1-3.el7.x86_64\n---> Package efivar-libs.x86_64 0:36-12.el7 will be installed\n---> Package fipscheck.x86_64 0:1.4.1-6.el7 will be installed\n---> Package glibc-common.x86_64 0:2.17-317.el7 will be updated\n---> Package glibc-common.x86_64 0:2.17-326.el7_9 will be an update\n---> Package kernel-headers.x86_64 0:3.10.0-1160.81.1.el7 will be installed\n---> Package libmodman.x86_64 0:2.0.1-8.el7 will be installed\n---> Package nettle.x86_64 0:2.7.1-9.el7_9 will be installed\n---> Package perl-Pod-Escapes.noarch 1:1.04-299.el7_9 will be installed\n---> Package perl-Pod-Perldoc.noarch 0:3.20-4.el7 will be installed\n--> Processing Dependency: perl(parent) for package: perl-Pod-Perldoc-3.20-4.el7.noarch\n--> Processing Dependency: perl(HTTP::Tiny) for package: perl-Pod-Perldoc-3.20-4.el7.noarch\n---> Package perl-podlators.noarch 0:2.5.1-3.el7 will be installed\n---> Package systemd-libs.x86_64 0:219-78.el7 will be updated\n---> Package systemd-libs.x86_64 0:219-78.el7_9.7 will be an update\n---> Package trousers.x86_64 0:0.3.14-2.el7 will be installed\n--> Running transaction check\n---> Package boost-date-time.x86_64 0:1.53.0-28.el7 will be installed\n---> Package boost-system.x86_64 0:1.53.0-28.el7 will be installed\n---> Package boost-thread.x86_64 0:1.53.0-28.el7 will be installed\n---> Package libdwarf.x86_64 0:20130207-4.el7 will be installed\n---> Package perl-HTTP-Tiny.noarch 0:0.033-3.el7 will be installed\n---> Package perl-parent.noarch 1:0.225-244.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package                   Arch      Version                   Repository  Size\n================================================================================\nInstalling for group install \"Development Tools\":\n autoconf                  noarch    2.69-11.el7               base       701 k\n automake                  noarch    1.13.4-3.el7              base       679 k\n bison                     x86_64    3.0.4-2.el7               base       674 k\n byacc                     x86_64    1.9.20130304-3.el7        base        65 k\n cscope                    x86_64    15.8-10.el7               base       203 k\n ctags                     x86_64    5.8-13.el7                base       155 k\n diffstat                  x86_64    1.57-4.el7                base        35 k\n doxygen                   x86_64    1:1.8.5-4.el7             base       3.6 M\n elfutils                  x86_64    0.176-5.el7               base       308 k\n flex                      x86_64    2.5.37-6.el7              base       293 k\n gcc                       x86_64    4.8.5-44.el7              base        16 M\n gcc-c++                   x86_64    4.8.5-44.el7              base       7.2 M\n gcc-gfortran              x86_64    4.8.5-44.el7              base       6.7 M\n gettext                   x86_64    0.19.8.1-3.el7            base       1.0 M\n git                       x86_64    1.8.3.1-23.el7_8          base       4.4 M\n indent                    x86_64    2.2.11-13.el7             base       150 k\n intltool                  noarch    0.50.2-7.el7              base        59 k\n libtool                   x86_64    2.4.2-22.el7_3            base       588 k\n make                      x86_64    1:3.82-24.el7             base       421 k\n patch                     x86_64    2.7.1-12.el7_7            base       111 k\n patchutils                x86_64    0.3.3-5.el7_9             updates    104 k\n rcs                       x86_64    5.9.0-7.el7               base       230 k\n redhat-rpm-config         noarch    9.1.0-88.el7.centos       base        81 k\n rpm-build                 x86_64    4.11.3-48.el7_9           updates    150 k\n rpm-sign                  x86_64    4.11.3-48.el7_9           updates     49 k\n subversion                x86_64    1.7.14-16.el7             base       1.0 M\n swig                      x86_64    2.0.10-5.el7              base       1.3 M\n systemtap                 x86_64    4.0-13.el7                base        15 k\nInstalling for dependencies:\n apr                       x86_64    1.4.8-7.el7               base       104 k\n apr-util                  x86_64    1.5.2-6.el7               base        92 k\n avahi-libs                x86_64    0.6.31-20.el7             base        62 k\n boost-date-time           x86_64    1.53.0-28.el7             base        52 k\n boost-system              x86_64    1.53.0-28.el7             base        40 k\n boost-thread              x86_64    1.53.0-28.el7             base        58 k\n bzip2                     x86_64    1.0.6-13.el7              base        52 k\n cpp                       x86_64    4.8.5-44.el7              base       5.9 M\n dwz                       x86_64    0.11-3.el7                base        99 k\n dyninst                   x86_64    9.3.1-3.el7               base       3.5 M\n efivar-libs               x86_64    36-12.el7                 base        88 k\n emacs-filesystem          noarch    1:24.3-23.el7             base        58 k\n file                      x86_64    5.11-37.el7               base        57 k\n fipscheck                 x86_64    1.4.1-6.el7               base        21 k\n fipscheck-lib             x86_64    1.4.1-6.el7               base        11 k\n gdb                       x86_64    7.6.1-120.el7             base       2.4 M\n gettext-common-devel      noarch    0.19.8.1-3.el7            base       410 k\n gettext-devel             x86_64    0.19.8.1-3.el7            base       320 k\n gettext-libs              x86_64    0.19.8.1-3.el7            base       502 k\n glibc-devel               x86_64    2.17-326.el7_9            updates    1.1 M\n glibc-headers             x86_64    2.17-326.el7_9            updates    691 k\n gnutls                    x86_64    3.3.29-9.el7_6            base       680 k\n groff-base                x86_64    1.22.2-8.el7              base       942 k\n kernel-debug-devel        x86_64    3.10.0-1160.81.1.el7      updates     18 M\n kernel-headers            x86_64    3.10.0-1160.81.1.el7      updates    9.1 M\n less                      x86_64    458-9.el7                 base       120 k\n libcroco                  x86_64    0.6.12-6.el7_9            updates    105 k\n libdwarf                  x86_64    20130207-4.el7            base       109 k\n libedit                   x86_64    3.0-12.20121213cvs.el7    base        92 k\n libgfortran               x86_64    4.8.5-44.el7              base       301 k\n libgomp                   x86_64    4.8.5-44.el7              base       159 k\n libmodman                 x86_64    2.0.1-8.el7               base        28 k\n libmpc                    x86_64    1.0.1-3.el7               base        51 k\n libproxy                  x86_64    0.4.11-11.el7             base        64 k\n libquadmath               x86_64    4.8.5-44.el7              base       190 k\n libquadmath-devel         x86_64    4.8.5-44.el7              base        54 k\n libstdc++-devel           x86_64    4.8.5-44.el7              base       1.5 M\n libunistring              x86_64    0.9.3-9.el7               base       293 k\n m4                        x86_64    1.4.16-10.el7             base       256 k\n mokutil                   x86_64    15-8.el7                  base        42 k\n mpfr                      x86_64    3.1.1-4.el7               base       203 k\n neon                      x86_64    0.30.0-4.el7              base       166 k\n nettle                    x86_64    2.7.1-9.el7_9             updates    328 k\n openssh                   x86_64    7.4p1-22.el7_9            updates    510 k\n openssh-clients           x86_64    7.4p1-22.el7_9            updates    655 k\n pakchois                  x86_64    0.4-10.el7                base        14 k\n perl                      x86_64    4:5.16.3-299.el7_9        updates    8.0 M\n perl-Carp                 noarch    1.26-244.el7              base        19 k\n perl-Data-Dumper          x86_64    2.145-3.el7               base        47 k\n perl-Encode               x86_64    2.51-7.el7                base       1.5 M\n perl-Error                noarch    1:0.17020-2.el7           base        32 k\n perl-Exporter             noarch    5.68-3.el7                base        28 k\n perl-File-Path            noarch    2.09-2.el7                base        26 k\n perl-File-Temp            noarch    0.23.01-3.el7             base        56 k\n perl-Filter               x86_64    1.49-3.el7                base        76 k\n perl-Getopt-Long          noarch    2.40-3.el7                base        56 k\n perl-Git                  noarch    1.8.3.1-23.el7_8          base        56 k\n perl-HTTP-Tiny            noarch    0.033-3.el7               base        38 k\n perl-PathTools            x86_64    3.40-5.el7                base        82 k\n perl-Pod-Escapes          noarch    1:1.04-299.el7_9          updates     52 k\n perl-Pod-Perldoc          noarch    3.20-4.el7                base        87 k\n perl-Pod-Simple           noarch    1:3.28-4.el7              base       216 k\n perl-Pod-Usage            noarch    1.63-3.el7                base        27 k\n perl-Scalar-List-Utils    x86_64    1.27-248.el7              base        36 k\n perl-Socket               x86_64    2.010-5.el7               base        49 k\n perl-Storable             x86_64    2.45-3.el7                base        77 k\n perl-TermReadKey          x86_64    2.30-20.el7               base        31 k\n perl-Test-Harness         noarch    3.28-3.el7                base       302 k\n perl-Text-ParseWords      noarch    3.29-4.el7                base        14 k\n perl-Thread-Queue         noarch    3.02-2.el7                base        17 k\n perl-Time-HiRes           x86_64    4:1.9725-3.el7            base        45 k\n perl-Time-Local           noarch    1.2300-2.el7              base        24 k\n perl-XML-Parser           x86_64    2.41-10.el7               base       223 k\n perl-constant             noarch    1.27-2.el7                base        19 k\n perl-libs                 x86_64    4:5.16.3-299.el7_9        updates    690 k\n perl-macros               x86_64    4:5.16.3-299.el7_9        updates     44 k\n perl-parent               noarch    1:0.225-244.el7           base        12 k\n perl-podlators            noarch    2.5.1-3.el7               base       112 k\n perl-srpm-macros          noarch    1-8.el7                   base       4.6 k\n perl-threads              x86_64    1.87-4.el7                base        49 k\n perl-threads-shared       x86_64    1.43-6.el7                base        39 k\n python-srpm-macros        noarch    3-34.el7                  base       8.8 k\n rsync                     x86_64    3.1.2-12.el7_9            updates    408 k\n subversion-libs           x86_64    1.7.14-16.el7             base       922 k\n systemd-sysv              x86_64    219-78.el7_9.7            updates     97 k\n systemtap-client          x86_64    4.0-13.el7                base       3.6 M\n systemtap-devel           x86_64    4.0-13.el7                base       2.2 M\n systemtap-runtime         x86_64    4.0-13.el7                base       444 k\n trousers                  x86_64    0.3.14-2.el7              base       289 k\n unzip                     x86_64    6.0-24.el7_9              updates    172 k\n zip                       x86_64    3.0-11.el7                base       260 k\nUpdating for dependencies:\n glibc                     x86_64    2.17-326.el7_9            updates    3.6 M\n glibc-common              x86_64    2.17-326.el7_9            updates     12 M\n rpm                       x86_64    4.11.3-48.el7_9           updates    1.2 M\n rpm-build-libs            x86_64    4.11.3-48.el7_9           updates    108 k\n rpm-libs                  x86_64    4.11.3-48.el7_9           updates    279 k\n rpm-python                x86_64    4.11.3-48.el7_9           updates     84 k\n systemd                   x86_64    219-78.el7_9.7            updates    5.1 M\n systemd-libs              x86_64    219-78.el7_9.7            updates    419 k\n\nTransaction Summary\n================================================================================\nInstall  28 Packages (+91 Dependent packages)\nUpgrade              (  8 Dependent packages)\n\nTotal download size: 138 M\nDownloading packages:\nDelta RPMs disabled because /usr/bin/applydeltarpm not installed.\n\u001b[91mwarning: /var/cache/yum/x86_64/7/base/packages/apr-util-1.5.2-6.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY\n\u001b[0mPublic key for apr-util-1.5.2-6.el7.x86_64.rpm is not installed\nPublic key for glibc-2.17-326.el7_9.x86_64.rpm is not installed\n--------------------------------------------------------------------------------\nTotal                                               51 MB/s | 138 MB  00:02     \nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\u001b[91mImporting GPG key 0xF4A80EB5:\n Userid     : \"CentOS-7 Key (CentOS 7 Official Signing Key) <security@centos.org>\"\n Fingerprint: 6341 ab27 53d7 8a78 a7c2 7bb1 24c6 a8a7 f4a8 0eb5\n Package    : centos-release-7-9.2009.0.el7.centos.x86_64 (@CentOS)\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\u001b[0mRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Updating   : glibc-common-2.17-326.el7_9.x86_64                         1/135 \n  Updating   : glibc-2.17-326.el7_9.x86_64                                2/135 \n  Updating   : rpm-libs-4.11.3-48.el7_9.x86_64                            3/135 \n  Updating   : rpm-4.11.3-48.el7_9.x86_64                                 4/135 \n  Installing : mpfr-3.1.1-4.el7.x86_64                                    5/135 \n  Installing : libmpc-1.0.1-3.el7.x86_64                                  6/135 \n  Updating   : rpm-build-libs-4.11.3-48.el7_9.x86_64                      7/135 \n  Installing : fipscheck-1.4.1-6.el7.x86_64                               8/135 \n  Installing : fipscheck-lib-1.4.1-6.el7.x86_64                           9/135 \n  Installing : apr-1.4.8-7.el7.x86_64                                    10/135 \n  Installing : libgomp-4.8.5-44.el7.x86_64                               11/135 \n  Installing : m4-1.4.16-10.el7.x86_64                                   12/135 \n  Installing : libquadmath-4.8.5-44.el7.x86_64                           13/135 \n  Installing : apr-util-1.5.2-6.el7.x86_64                               14/135 \n  Installing : groff-base-1.22.2-8.el7.x86_64                            15/135 \n  Installing : libcroco-0.6.12-6.el7_9.x86_64                            16/135 \n  Installing : boost-system-1.53.0-28.el7.x86_64                         17/135 \n  Installing : avahi-libs-0.6.31-20.el7.x86_64                           18/135 \n  Installing : libunistring-0.9.3-9.el7.x86_64                           19/135 \n  Installing : gettext-libs-0.19.8.1-3.el7.x86_64                        20/135 \n  Installing : unzip-6.0-24.el7_9.x86_64                                 21/135 \n  Installing : patch-2.7.1-12.el7_7.x86_64                               22/135 \n  Installing : zip-3.0-11.el7.x86_64                                     23/135 \n  Installing : gettext-0.19.8.1-3.el7.x86_64                             24/135 \ninstall-info: No such file or directory for /usr/share/info/gettext.info.gz\n  Installing : boost-thread-1.53.0-28.el7.x86_64                         25/135 \n  Installing : less-458-9.el7.x86_64                                     26/135 \n  Installing : 1:perl-parent-0.225-244.el7.noarch                        27/135 \n  Installing : perl-HTTP-Tiny-0.033-3.el7.noarch                         28/135 \n  Installing : perl-podlators-2.5.1-3.el7.noarch                         29/135 \n  Installing : perl-Pod-Perldoc-3.20-4.el7.noarch                        30/135 \n  Installing : 1:perl-Pod-Escapes-1.04-299.el7_9.noarch                  31/135 \n  Installing : perl-Text-ParseWords-3.29-4.el7.noarch                    32/135 \n  Installing : perl-Encode-2.51-7.el7.x86_64                             33/135 \n  Installing : perl-Pod-Usage-1.63-3.el7.noarch                          34/135 \n  Installing : perl-Storable-2.45-3.el7.x86_64                           35/135 \n  Installing : 4:perl-Time-HiRes-1.9725-3.el7.x86_64                     36/135 \n  Installing : perl-threads-1.87-4.el7.x86_64                            37/135 \n  Installing : perl-Carp-1.26-244.el7.noarch                             38/135 \n  Installing : perl-Filter-1.49-3.el7.x86_64                             39/135 \n  Installing : perl-Exporter-5.68-3.el7.noarch                           40/135 \n  Installing : perl-constant-1.27-2.el7.noarch                           41/135 \n  Installing : perl-Socket-2.010-5.el7.x86_64                            42/135 \n  Installing : 4:perl-macros-5.16.3-299.el7_9.x86_64                     43/135 \n  Installing : perl-Time-Local-1.2300-2.el7.noarch                       44/135 \n  Installing : perl-threads-shared-1.43-6.el7.x86_64                     45/135 \n  Installing : perl-File-Temp-0.23.01-3.el7.noarch                       46/135 \n  Installing : perl-File-Path-2.09-2.el7.noarch                          47/135 \n  Installing : perl-PathTools-3.40-5.el7.x86_64                          48/135 \n  Installing : perl-Scalar-List-Utils-1.27-248.el7.x86_64                49/135 \n  Installing : 4:perl-libs-5.16.3-299.el7_9.x86_64                       50/135 \n  Installing : 1:perl-Pod-Simple-3.28-4.el7.noarch                       51/135 \n  Installing : perl-Getopt-Long-2.40-3.el7.noarch                        52/135 \n  Installing : 4:perl-5.16.3-299.el7_9.x86_64                            53/135 \n  Installing : perl-Thread-Queue-3.02-2.el7.noarch                       54/135 \n  Installing : 1:perl-Error-0.17020-2.el7.noarch                         55/135 \n  Installing : perl-TermReadKey-2.30-20.el7.x86_64                       56/135 \n  Installing : perl-Data-Dumper-2.145-3.el7.x86_64                       57/135 \n  Installing : autoconf-2.69-11.el7.noarch                               58/135 \ninstall-info: No such file or directory for /usr/share/info/autoconf.info\n  Installing : kernel-debug-devel-3.10.0-1160.81.1.el7.x86_64            59/135 \n  Installing : perl-XML-Parser-2.41-10.el7.x86_64                        60/135 \n  Installing : perl-Test-Harness-3.28-3.el7.noarch                       61/135 \n  Installing : automake-1.13.4-3.el7.noarch                              62/135 \ninstall-info: No such file or directory for /usr/share/info/automake.info.gz\n  Installing : libgfortran-4.8.5-44.el7.x86_64                           63/135 \n  Installing : openssh-7.4p1-22.el7_9.x86_64                             64/135 \n  Installing : cpp-4.8.5-44.el7.x86_64                                   65/135 \n  Installing : libdwarf-20130207-4.el7.x86_64                            66/135 \n  Installing : boost-date-time-1.53.0-28.el7.x86_64                      67/135 \n  Installing : dyninst-9.3.1-3.el7.x86_64                                68/135 \n  Installing : systemtap-runtime-4.0-13.el7.x86_64                       69/135 \n  Installing : libedit-3.0-12.20121213cvs.el7.x86_64                     70/135 \n  Installing : openssh-clients-7.4p1-22.el7_9.x86_64                     71/135 \n  Installing : file-5.11-37.el7.x86_64                                   72/135 \n  Updating   : systemd-libs-219-78.el7_9.7.x86_64                        73/135 \n  Updating   : systemd-219-78.el7_9.7.x86_64                             74/135 \nFailed to get D-Bus connection: Operation not permitted\n  Installing : rsync-3.1.2-12.el7_9.x86_64                               75/135 \n  Installing : perl-Git-1.8.3.1-23.el7_8.noarch                          76/135 \n  Installing : git-1.8.3.1-23.el7_8.x86_64                               77/135 \n  Installing : trousers-0.3.14-2.el7.x86_64                              78/135 \n  Installing : systemd-sysv-219-78.el7_9.7.x86_64                        79/135 \n  Installing : bzip2-1.0.6-13.el7.x86_64                                 80/135 \n  Installing : gdb-7.6.1-120.el7.x86_64                                  81/135 \n  Installing : 1:make-3.82-24.el7.x86_64                                 82/135 \n  Installing : libmodman-2.0.1-8.el7.x86_64                              83/135 \n  Installing : libproxy-0.4.11-11.el7.x86_64                             84/135 \n  Installing : nettle-2.7.1-9.el7_9.x86_64                               85/135 \ninstall-info: No such file or directory for /usr/share/info/nettle.info\n  Installing : gnutls-3.3.29-9.el7_6.x86_64                              86/135 \n  Installing : efivar-libs-36-12.el7.x86_64                              87/135 \n  Installing : mokutil-15-8.el7.x86_64                                   88/135 \n  Installing : dwz-0.11-3.el7.x86_64                                     89/135 \n  Installing : pakchois-0.4-10.el7.x86_64                                90/135 \n  Installing : neon-0.30.0-4.el7.x86_64                                  91/135 \n  Installing : subversion-libs-1.7.14-16.el7.x86_64                      92/135 \n  Installing : elfutils-0.176-5.el7.x86_64                               93/135 \n  Installing : libstdc++-devel-4.8.5-44.el7.x86_64                       94/135 \n  Installing : kernel-headers-3.10.0-1160.81.1.el7.x86_64                95/135 \n  Installing : glibc-headers-2.17-326.el7_9.x86_64                       96/135 \n  Installing : glibc-devel-2.17-326.el7_9.x86_64                         97/135 \n  Installing : gcc-4.8.5-44.el7.x86_64                                   98/135 \n  Installing : systemtap-devel-4.0-13.el7.x86_64                         99/135 \n  Installing : systemtap-client-4.0-13.el7.x86_64                       100/135 \n  Installing : libquadmath-devel-4.8.5-44.el7.x86_64                    101/135 \n  Installing : gettext-common-devel-0.19.8.1-3.el7.noarch               102/135 \n  Installing : gettext-devel-0.19.8.1-3.el7.x86_64                      103/135 \ninstall-info: No such file or directory for /usr/share/info/autosprintf.info\n  Installing : perl-srpm-macros-1-8.el7.noarch                          104/135 \n  Installing : 1:emacs-filesystem-24.3-23.el7.noarch                    105/135 \n  Installing : python-srpm-macros-3-34.el7.noarch                       106/135 \n  Installing : redhat-rpm-config-9.1.0-88.el7.centos.noarch             107/135 \n  Installing : rpm-build-4.11.3-48.el7_9.x86_64                         108/135 \n  Installing : cscope-15.8-10.el7.x86_64                                109/135 \n  Installing : intltool-0.50.2-7.el7.noarch                             110/135 \n  Installing : gcc-gfortran-4.8.5-44.el7.x86_64                         111/135 \n  Installing : systemtap-4.0-13.el7.x86_64                              112/135 \n  Installing : gcc-c++-4.8.5-44.el7.x86_64                              113/135 \n  Installing : libtool-2.4.2-22.el7_3.x86_64                            114/135 \ninstall-info: No such file or directory for /usr/share/info/libtool.info.gz\n  Installing : subversion-1.7.14-16.el7.x86_64                          115/135 \n  Installing : patchutils-0.3.3-5.el7_9.x86_64                          116/135 \n  Installing : flex-2.5.37-6.el7.x86_64                                 117/135 \n  Installing : bison-3.0.4-2.el7.x86_64                                 118/135 \n  Installing : rpm-sign-4.11.3-48.el7_9.x86_64                          119/135 \n  Updating   : rpm-python-4.11.3-48.el7_9.x86_64                        120/135 \n  Installing : rcs-5.9.0-7.el7.x86_64                                   121/135 \n  Installing : swig-2.0.10-5.el7.x86_64                                 122/135 \n  Installing : diffstat-1.57-4.el7.x86_64                               123/135 \n  Installing : 1:doxygen-1.8.5-4.el7.x86_64                             124/135 \n  Installing : byacc-1.9.20130304-3.el7.x86_64                          125/135 \n  Installing : ctags-5.8-13.el7.x86_64                                  126/135 \n  Installing : indent-2.2.11-13.el7.x86_64                              127/135 \n  Cleanup    : rpm-python-4.11.3-45.el7.x86_64                          128/135 \n  Cleanup    : rpm-build-libs-4.11.3-45.el7.x86_64                      129/135 \n  Cleanup    : rpm-4.11.3-45.el7.x86_64                                 130/135 \n  Cleanup    : rpm-libs-4.11.3-45.el7.x86_64                            131/135 \n  Cleanup    : systemd-219-78.el7.x86_64                                132/135 \n  Cleanup    : systemd-libs-219-78.el7.x86_64                           133/135 \n  Cleanup    : glibc-common-2.17-317.el7.x86_64                         134/135 \n  Cleanup    : glibc-2.17-317.el7.x86_64                                135/135 \n  Verifying  : fipscheck-lib-1.4.1-6.el7.x86_64                           1/135 \n  Verifying  : perl-HTTP-Tiny-0.033-3.el7.noarch                          2/135 \n  Verifying  : gcc-c++-4.8.5-44.el7.x86_64                                3/135 \n  Verifying  : rsync-3.1.2-12.el7_9.x86_64                                4/135 \n  Verifying  : libdwarf-20130207-4.el7.x86_64                             5/135 \n  Verifying  : git-1.8.3.1-23.el7_8.x86_64                                6/135 \n  Verifying  : rcs-5.9.0-7.el7.x86_64                                     7/135 \n  Verifying  : boost-thread-1.53.0-28.el7.x86_64                          8/135 \n  Verifying  : perl-TermReadKey-2.30-20.el7.x86_64                        9/135 \n  Verifying  : groff-base-1.22.2-8.el7.x86_64                            10/135 \n  Verifying  : perl-File-Temp-0.23.01-3.el7.noarch                       11/135 \n  Verifying  : swig-2.0.10-5.el7.x86_64                                  12/135 \n  Verifying  : perl-Data-Dumper-2.145-3.el7.x86_64                       13/135 \n  Verifying  : fipscheck-1.4.1-6.el7.x86_64                              14/135 \n  Verifying  : boost-date-time-1.53.0-28.el7.x86_64                      15/135 \n  Verifying  : apr-util-1.5.2-6.el7.x86_64                               16/135 \n  Verifying  : subversion-1.7.14-16.el7.x86_64                           17/135 \n  Verifying  : subversion-libs-1.7.14-16.el7.x86_64                      18/135 \n  Verifying  : kernel-debug-devel-3.10.0-1160.81.1.el7.x86_64            19/135 \n  Verifying  : systemtap-devel-4.0-13.el7.x86_64                         20/135 \n  Verifying  : perl-Storable-2.45-3.el7.x86_64                           21/135 \n  Verifying  : autoconf-2.69-11.el7.noarch                               22/135 \n  Verifying  : gettext-0.19.8.1-3.el7.x86_64                             23/135 \n  Verifying  : perl-File-Path-2.09-2.el7.noarch                          24/135 \n  Verifying  : libedit-3.0-12.20121213cvs.el7.x86_64                     25/135 \n  Verifying  : perl-Text-ParseWords-3.29-4.el7.noarch                    26/135 \n  Verifying  : python-srpm-macros-3-34.el7.noarch                        27/135 \n  Verifying  : diffstat-1.57-4.el7.x86_64                                28/135 \n  Verifying  : rpm-sign-4.11.3-48.el7_9.x86_64                           29/135 \n  Verifying  : file-5.11-37.el7.x86_64                                   30/135 \n  Verifying  : trousers-0.3.14-2.el7.x86_64                              31/135 \n  Verifying  : systemd-libs-219-78.el7_9.7.x86_64                        32/135 \n  Verifying  : glibc-2.17-326.el7_9.x86_64                               33/135 \n  Verifying  : 4:perl-Time-HiRes-1.9725-3.el7.x86_64                     34/135 \n  Verifying  : systemd-219-78.el7_9.7.x86_64                             35/135 \n  Verifying  : perl-XML-Parser-2.41-10.el7.x86_64                        36/135 \n  Verifying  : gettext-libs-0.19.8.1-3.el7.x86_64                        37/135 \n  Verifying  : 1:doxygen-1.8.5-4.el7.x86_64                              38/135 \n  Verifying  : libcroco-0.6.12-6.el7_9.x86_64                            39/135 \n  Verifying  : bzip2-1.0.6-13.el7.x86_64                                 40/135 \n  Verifying  : apr-1.4.8-7.el7.x86_64                                    41/135 \n  Verifying  : gdb-7.6.1-120.el7.x86_64                                  42/135 \n  Verifying  : 1:make-3.82-24.el7.x86_64                                 43/135 \n  Verifying  : dyninst-9.3.1-3.el7.x86_64                                44/135 \n  Verifying  : gnutls-3.3.29-9.el7_6.x86_64                              45/135 \n  Verifying  : boost-system-1.53.0-28.el7.x86_64                         46/135 \n  Verifying  : libmodman-2.0.1-8.el7.x86_64                              47/135 \n  Verifying  : libgfortran-4.8.5-44.el7.x86_64                           48/135 \n  Verifying  : libmpc-1.0.1-3.el7.x86_64                                 49/135 \n  Verifying  : perl-Pod-Usage-1.63-3.el7.noarch                          50/135 \n  Verifying  : perl-Encode-2.51-7.el7.x86_64                             51/135 \n  Verifying  : nettle-2.7.1-9.el7_9.x86_64                               52/135 \n  Verifying  : 1:emacs-filesystem-24.3-23.el7.noarch                     53/135 \n  Verifying  : glibc-devel-2.17-326.el7_9.x86_64                         54/135 \n  Verifying  : perl-Getopt-Long-2.40-3.el7.noarch                        55/135 \n  Verifying  : libgomp-4.8.5-44.el7.x86_64                               56/135 \n  Verifying  : perl-srpm-macros-1-8.el7.noarch                           57/135 \n  Verifying  : avahi-libs-0.6.31-20.el7.x86_64                           58/135 \n  Verifying  : perl-threads-shared-1.43-6.el7.x86_64                     59/135 \n  Verifying  : patchutils-0.3.3-5.el7_9.x86_64                           60/135 \n  Verifying  : openssh-clients-7.4p1-22.el7_9.x86_64                     61/135 \n  Verifying  : libunistring-0.9.3-9.el7.x86_64                           62/135 \n  Verifying  : byacc-1.9.20130304-3.el7.x86_64                           63/135 \n  Verifying  : unzip-6.0-24.el7_9.x86_64                                 64/135 \n  Verifying  : systemtap-runtime-4.0-13.el7.x86_64                       65/135 \n  Verifying  : m4-1.4.16-10.el7.x86_64                                   66/135 \n  Verifying  : cpp-4.8.5-44.el7.x86_64                                   67/135 \n  Verifying  : 1:perl-parent-0.225-244.el7.noarch                        68/135 \n  Verifying  : perl-Test-Harness-3.28-3.el7.noarch                       69/135 \n  Verifying  : 1:perl-Pod-Escapes-1.04-299.el7_9.noarch                  70/135 \n  Verifying  : libtool-2.4.2-22.el7_3.x86_64                             71/135 \n  Verifying  : patch-2.7.1-12.el7_7.x86_64                               72/135 \n  Verifying  : perl-Carp-1.26-244.el7.noarch                             73/135 \n  Verifying  : systemtap-4.0-13.el7.x86_64                               74/135 \n  Verifying  : gettext-devel-0.19.8.1-3.el7.x86_64                       75/135 \n  Verifying  : rpm-build-4.11.3-48.el7_9.x86_64                          76/135 \n  Verifying  : gcc-4.8.5-44.el7.x86_64                                   77/135 \n  Verifying  : flex-2.5.37-6.el7.x86_64                                  78/135 \n  Verifying  : rpm-libs-4.11.3-48.el7_9.x86_64                           79/135 \n  Verifying  : glibc-common-2.17-326.el7_9.x86_64                        80/135 \n  Verifying  : cscope-15.8-10.el7.x86_64                                 81/135 \n  Verifying  : mokutil-15-8.el7.x86_64                                   82/135 \n  Verifying  : perl-podlators-2.5.1-3.el7.noarch                         83/135 \n  Verifying  : libquadmath-devel-4.8.5-44.el7.x86_64                     84/135 \n  Verifying  : 4:perl-5.16.3-299.el7_9.x86_64                            85/135 \n  Verifying  : mpfr-3.1.1-4.el7.x86_64                                   86/135 \n  Verifying  : efivar-libs-36-12.el7.x86_64                              87/135 \n  Verifying  : perl-Filter-1.49-3.el7.x86_64                             88/135 \n  Verifying  : dwz-0.11-3.el7.x86_64                                     89/135 \n  Verifying  : gettext-common-devel-0.19.8.1-3.el7.noarch                90/135 \n  Verifying  : pakchois-0.4-10.el7.x86_64                                91/135 \n  Verifying  : less-458-9.el7.x86_64                                     92/135 \n  Verifying  : ctags-5.8-13.el7.x86_64                                   93/135 \n  Verifying  : gcc-gfortran-4.8.5-44.el7.x86_64                          94/135 \n  Verifying  : automake-1.13.4-3.el7.noarch                              95/135 \n  Verifying  : rpm-4.11.3-48.el7_9.x86_64                                96/135 \n  Verifying  : perl-threads-1.87-4.el7.x86_64                            97/135 \n  Verifying  : perl-Exporter-5.68-3.el7.noarch                           98/135 \n  Verifying  : perl-constant-1.27-2.el7.noarch                           99/135 \n  Verifying  : perl-PathTools-3.40-5.el7.x86_64                         100/135 \n  Verifying  : neon-0.30.0-4.el7.x86_64                                 101/135 \n  Verifying  : openssh-7.4p1-22.el7_9.x86_64                            102/135 \n  Verifying  : perl-Socket-2.010-5.el7.x86_64                           103/135 \n  Verifying  : systemtap-client-4.0-13.el7.x86_64                       104/135 \n  Verifying  : 4:perl-macros-5.16.3-299.el7_9.x86_64                    105/135 \n  Verifying  : libquadmath-4.8.5-44.el7.x86_64                          106/135 \n  Verifying  : perl-Thread-Queue-3.02-2.el7.noarch                      107/135 \n  Verifying  : glibc-headers-2.17-326.el7_9.x86_64                      108/135 \n  Verifying  : 1:perl-Pod-Simple-3.28-4.el7.noarch                      109/135 \n  Verifying  : perl-Time-Local-1.2300-2.el7.noarch                      110/135 \n  Verifying  : intltool-0.50.2-7.el7.noarch                             111/135 \n  Verifying  : perl-Pod-Perldoc-3.20-4.el7.noarch                       112/135 \n  Verifying  : perl-Git-1.8.3.1-23.el7_8.noarch                         113/135 \n  Verifying  : kernel-headers-3.10.0-1160.81.1.el7.x86_64               114/135 \n  Verifying  : 1:perl-Error-0.17020-2.el7.noarch                        115/135 \n  Verifying  : indent-2.2.11-13.el7.x86_64                              116/135 \n  Verifying  : systemd-sysv-219-78.el7_9.7.x86_64                       117/135 \n  Verifying  : perl-Scalar-List-Utils-1.27-248.el7.x86_64               118/135 \n  Verifying  : libproxy-0.4.11-11.el7.x86_64                            119/135 \n  Verifying  : bison-3.0.4-2.el7.x86_64                                 120/135 \n  Verifying  : rpm-python-4.11.3-48.el7_9.x86_64                        121/135 \n  Verifying  : elfutils-0.176-5.el7.x86_64                              122/135 \n  Verifying  : zip-3.0-11.el7.x86_64                                    123/135 \n  Verifying  : libstdc++-devel-4.8.5-44.el7.x86_64                      124/135 \n  Verifying  : 4:perl-libs-5.16.3-299.el7_9.x86_64                      125/135 \n  Verifying  : rpm-build-libs-4.11.3-48.el7_9.x86_64                    126/135 \n  Verifying  : redhat-rpm-config-9.1.0-88.el7.centos.noarch             127/135 \n  Verifying  : rpm-4.11.3-45.el7.x86_64                                 128/135 \n  Verifying  : glibc-common-2.17-317.el7.x86_64                         129/135 \n  Verifying  : systemd-219-78.el7.x86_64                                130/135 \n  Verifying  : rpm-python-4.11.3-45.el7.x86_64                          131/135 \n  Verifying  : rpm-build-libs-4.11.3-45.el7.x86_64                      132/135 \n  Verifying  : systemd-libs-219-78.el7.x86_64                           133/135 \n  Verifying  : glibc-2.17-317.el7.x86_64                                134/135 \n  Verifying  : rpm-libs-4.11.3-45.el7.x86_64                            135/135 \n\nInstalled:\n  autoconf.noarch 0:2.69-11.el7                                                 \n  automake.noarch 0:1.13.4-3.el7                                                \n  bison.x86_64 0:3.0.4-2.el7                                                    \n  byacc.x86_64 0:1.9.20130304-3.el7                                             \n  cscope.x86_64 0:15.8-10.el7                                                   \n  ctags.x86_64 0:5.8-13.el7                                                     \n  diffstat.x86_64 0:1.57-4.el7                                                  \n  doxygen.x86_64 1:1.8.5-4.el7                                                  \n  elfutils.x86_64 0:0.176-5.el7                                                 \n  flex.x86_64 0:2.5.37-6.el7                                                    \n  gcc.x86_64 0:4.8.5-44.el7                                                     \n  gcc-c++.x86_64 0:4.8.5-44.el7                                                 \n  gcc-gfortran.x86_64 0:4.8.5-44.el7                                            \n  gettext.x86_64 0:0.19.8.1-3.el7                                               \n  git.x86_64 0:1.8.3.1-23.el7_8                                                 \n  indent.x86_64 0:2.2.11-13.el7                                                 \n  intltool.noarch 0:0.50.2-7.el7                                                \n  libtool.x86_64 0:2.4.2-22.el7_3                                               \n  make.x86_64 1:3.82-24.el7                                                     \n  patch.x86_64 0:2.7.1-12.el7_7                                                 \n  patchutils.x86_64 0:0.3.3-5.el7_9                                             \n  rcs.x86_64 0:5.9.0-7.el7                                                      \n  redhat-rpm-config.noarch 0:9.1.0-88.el7.centos                                \n  rpm-build.x86_64 0:4.11.3-48.el7_9                                            \n  rpm-sign.x86_64 0:4.11.3-48.el7_9                                             \n  subversion.x86_64 0:1.7.14-16.el7                                             \n  swig.x86_64 0:2.0.10-5.el7                                                    \n  systemtap.x86_64 0:4.0-13.el7                                                 \n\nDependency Installed:\n  apr.x86_64 0:1.4.8-7.el7                                                      \n  apr-util.x86_64 0:1.5.2-6.el7                                                 \n  avahi-libs.x86_64 0:0.6.31-20.el7                                             \n  boost-date-time.x86_64 0:1.53.0-28.el7                                        \n  boost-system.x86_64 0:1.53.0-28.el7                                           \n  boost-thread.x86_64 0:1.53.0-28.el7                                           \n  bzip2.x86_64 0:1.0.6-13.el7                                                   \n  cpp.x86_64 0:4.8.5-44.el7                                                     \n  dwz.x86_64 0:0.11-3.el7                                                       \n  dyninst.x86_64 0:9.3.1-3.el7                                                  \n  efivar-libs.x86_64 0:36-12.el7                                                \n  emacs-filesystem.noarch 1:24.3-23.el7                                         \n  file.x86_64 0:5.11-37.el7                                                     \n  fipscheck.x86_64 0:1.4.1-6.el7                                                \n  fipscheck-lib.x86_64 0:1.4.1-6.el7                                            \n  gdb.x86_64 0:7.6.1-120.el7                                                    \n  gettext-common-devel.noarch 0:0.19.8.1-3.el7                                  \n  gettext-devel.x86_64 0:0.19.8.1-3.el7                                         \n  gettext-libs.x86_64 0:0.19.8.1-3.el7                                          \n  glibc-devel.x86_64 0:2.17-326.el7_9                                           \n  glibc-headers.x86_64 0:2.17-326.el7_9                                         \n  gnutls.x86_64 0:3.3.29-9.el7_6                                                \n  groff-base.x86_64 0:1.22.2-8.el7                                              \n  kernel-debug-devel.x86_64 0:3.10.0-1160.81.1.el7                              \n  kernel-headers.x86_64 0:3.10.0-1160.81.1.el7                                  \n  less.x86_64 0:458-9.el7                                                       \n  libcroco.x86_64 0:0.6.12-6.el7_9                                              \n  libdwarf.x86_64 0:20130207-4.el7                                              \n  libedit.x86_64 0:3.0-12.20121213cvs.el7                                       \n  libgfortran.x86_64 0:4.8.5-44.el7                                             \n  libgomp.x86_64 0:4.8.5-44.el7                                                 \n  libmodman.x86_64 0:2.0.1-8.el7                                                \n  libmpc.x86_64 0:1.0.1-3.el7                                                   \n  libproxy.x86_64 0:0.4.11-11.el7                                               \n  libquadmath.x86_64 0:4.8.5-44.el7                                             \n  libquadmath-devel.x86_64 0:4.8.5-44.el7                                       \n  libstdc++-devel.x86_64 0:4.8.5-44.el7                                         \n  libunistring.x86_64 0:0.9.3-9.el7                                             \n  m4.x86_64 0:1.4.16-10.el7                                                     \n  mokutil.x86_64 0:15-8.el7                                                     \n  mpfr.x86_64 0:3.1.1-4.el7                                                     \n  neon.x86_64 0:0.30.0-4.el7                                                    \n  nettle.x86_64 0:2.7.1-9.el7_9                                                 \n  openssh.x86_64 0:7.4p1-22.el7_9                                               \n  openssh-clients.x86_64 0:7.4p1-22.el7_9                                       \n  pakchois.x86_64 0:0.4-10.el7                                                  \n  perl.x86_64 4:5.16.3-299.el7_9                                                \n  perl-Carp.noarch 0:1.26-244.el7                                               \n  perl-Data-Dumper.x86_64 0:2.145-3.el7                                         \n  perl-Encode.x86_64 0:2.51-7.el7                                               \n  perl-Error.noarch 1:0.17020-2.el7                                             \n  perl-Exporter.noarch 0:5.68-3.el7                                             \n  perl-File-Path.noarch 0:2.09-2.el7                                            \n  perl-File-Temp.noarch 0:0.23.01-3.el7                                         \n  perl-Filter.x86_64 0:1.49-3.el7                                               \n  perl-Getopt-Long.noarch 0:2.40-3.el7                                          \n  perl-Git.noarch 0:1.8.3.1-23.el7_8                                            \n  perl-HTTP-Tiny.noarch 0:0.033-3.el7                                           \n  perl-PathTools.x86_64 0:3.40-5.el7                                            \n  perl-Pod-Escapes.noarch 1:1.04-299.el7_9                                      \n  perl-Pod-Perldoc.noarch 0:3.20-4.el7                                          \n  perl-Pod-Simple.noarch 1:3.28-4.el7                                           \n  perl-Pod-Usage.noarch 0:1.63-3.el7                                            \n  perl-Scalar-List-Utils.x86_64 0:1.27-248.el7                                  \n  perl-Socket.x86_64 0:2.010-5.el7                                              \n  perl-Storable.x86_64 0:2.45-3.el7                                             \n  perl-TermReadKey.x86_64 0:2.30-20.el7                                         \n  perl-Test-Harness.noarch 0:3.28-3.el7                                         \n  perl-Text-ParseWords.noarch 0:3.29-4.el7                                      \n  perl-Thread-Queue.noarch 0:3.02-2.el7                                         \n  perl-Time-HiRes.x86_64 4:1.9725-3.el7                                         \n  perl-Time-Local.noarch 0:1.2300-2.el7                                         \n  perl-XML-Parser.x86_64 0:2.41-10.el7                                          \n  perl-constant.noarch 0:1.27-2.el7                                             \n  perl-libs.x86_64 4:5.16.3-299.el7_9                                           \n  perl-macros.x86_64 4:5.16.3-299.el7_9                                         \n  perl-parent.noarch 1:0.225-244.el7                                            \n  perl-podlators.noarch 0:2.5.1-3.el7                                           \n  perl-srpm-macros.noarch 0:1-8.el7                                             \n  perl-threads.x86_64 0:1.87-4.el7                                              \n  perl-threads-shared.x86_64 0:1.43-6.el7                                       \n  python-srpm-macros.noarch 0:3-34.el7                                          \n  rsync.x86_64 0:3.1.2-12.el7_9                                                 \n  subversion-libs.x86_64 0:1.7.14-16.el7                                        \n  systemd-sysv.x86_64 0:219-78.el7_9.7                                          \n  systemtap-client.x86_64 0:4.0-13.el7                                          \n  systemtap-devel.x86_64 0:4.0-13.el7                                           \n  systemtap-runtime.x86_64 0:4.0-13.el7                                         \n  trousers.x86_64 0:0.3.14-2.el7                                                \n  unzip.x86_64 0:6.0-24.el7_9                                                   \n  zip.x86_64 0:3.0-11.el7                                                       \n\nDependency Updated:\n  glibc.x86_64 0:2.17-326.el7_9       glibc-common.x86_64 0:2.17-326.el7_9     \n  rpm.x86_64 0:4.11.3-48.el7_9        rpm-build-libs.x86_64 0:4.11.3-48.el7_9  \n  rpm-libs.x86_64 0:4.11.3-48.el7_9   rpm-python.x86_64 0:4.11.3-48.el7_9      \n  systemd.x86_64 0:219-78.el7_9.7     systemd-libs.x86_64 0:219-78.el7_9.7     \n\nComplete!\nRemoving intermediate container a326c9fd0ab9\n ---> 9255f7eeb422\nStep 4/8 : RUN yum install git wget tar zlib-devel -y\n ---> Running in a3b66344350c\nLoaded plugins: fastestmirror, ovl\nLoading mirror speeds from cached hostfile\n * base: mirror.nsc.liu.se\n * extras: mirror.nsc.liu.se\n * updates: mirror.nsc.liu.se\nPackage git-1.8.3.1-23.el7_8.x86_64 already installed and latest version\nPackage 2:tar-1.26-35.el7.x86_64 already installed and latest version\nResolving Dependencies\n--> Running transaction check\n---> Package wget.x86_64 0:1.14-18.el7_6.1 will be installed\n---> Package zlib-devel.x86_64 0:1.2.7-20.el7_9 will be installed\n--> Processing Dependency: zlib = 1.2.7-20.el7_9 for package: zlib-devel-1.2.7-20.el7_9.x86_64\n--> Running transaction check\n---> Package zlib.x86_64 0:1.2.7-18.el7 will be updated\n---> Package zlib.x86_64 0:1.2.7-20.el7_9 will be an update\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package           Arch          Version                   Repository      Size\n================================================================================\nInstalling:\n wget              x86_64        1.14-18.el7_6.1           base           547 k\n zlib-devel        x86_64        1.2.7-20.el7_9            updates         50 k\nUpdating for dependencies:\n zlib              x86_64        1.2.7-20.el7_9            updates         90 k\n\nTransaction Summary\n================================================================================\nInstall  2 Packages\nUpgrade             ( 1 Dependent package)\n\nTotal download size: 687 k\nDownloading packages:\nDelta RPMs disabled because /usr/bin/applydeltarpm not installed.\n--------------------------------------------------------------------------------\nTotal                                              5.8 MB/s | 687 kB  00:00     \nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Updating   : zlib-1.2.7-20.el7_9.x86_64                                   1/4 \n  Installing : zlib-devel-1.2.7-20.el7_9.x86_64                             2/4 \n  Installing : wget-1.14-18.el7_6.1.x86_64                                  3/4 \ninstall-info: No such file or directory for /usr/share/info/wget.info.gz\n  Cleanup    : zlib-1.2.7-18.el7.x86_64                                     4/4 \n  Verifying  : zlib-1.2.7-20.el7_9.x86_64                                   1/4 \n  Verifying  : zlib-devel-1.2.7-20.el7_9.x86_64                             2/4 \n  Verifying  : wget-1.14-18.el7_6.1.x86_64                                  3/4 \n  Verifying  : zlib-1.2.7-18.el7.x86_64                                     4/4 \n\nInstalled:\n  wget.x86_64 0:1.14-18.el7_6.1        zlib-devel.x86_64 0:1.2.7-20.el7_9       \n\nDependency Updated:\n  zlib.x86_64 0:1.2.7-20.el7_9                                                  \n\nComplete!\nRemoving intermediate container a3b66344350c\n ---> 900e1c583de1\nStep 5/8 : RUN git clone --recursive https://github.com/jts/nanopolish.git\n ---> Running in 5d3929dd473a\nCloning into 'nanopolish'...\nSubmodule 'htslib' (https://github.com/samtools/htslib) registered for path 'htslib'\nSubmodule 'minimap2' (https://github.com/lh3/minimap2) registered for path 'minimap2'\nSubmodule 'slow5lib' (https://github.com/hasindu2008/slow5lib) registered for path 'slow5lib'\nCloning into 'htslib'...\nSubmodule path 'htslib': checked out '6811ac546b5807ce879ec4a22e4297215b9f5fee'\nSubmodule 'htscodecs' (https://github.com/samtools/htscodecs.git) registered for path 'htscodecs'\nCloning into 'htscodecs'...\nSubmodule path 'htslib/htscodecs': checked out '1395d730651fdfa39cd916be3b3ef4dd9b1ab895'\nCloning into 'minimap2'...\nSubmodule path 'minimap2': checked out 'fe35e679e95d936698e9e937acc48983f16253d6'\nSubmodule 'lib/simde' (https://github.com/nemequ/simde.git) registered for path 'lib/simde'\nCloning into 'lib/simde'...\nSubmodule path 'minimap2/lib/simde': checked out 'b30129b3b48a6823013da2b309c50a081177b6b8'\nSubmodule 'munit' (https://github.com/nemequ/munit.git) registered for path 'test/munit'\nCloning into 'test/munit'...\nSubmodule path 'minimap2/lib/simde/test/munit': checked out 'da8f73412998e4f1adf1100dc187533a51af77fd'\nCloning into 'slow5lib'...\nSubmodule path 'slow5lib': checked out '3680e17360366c8cbffb66eb1e07426756665454'\nRemoving intermediate container 5d3929dd473a\n ---> fa0713584db9\nStep 6/8 : WORKDIR /nanopolish\n ---> Running in 00dce3c5e312\nRemoving intermediate container 00dce3c5e312\n ---> 66caa699b6ef\nStep 7/8 : RUN make all\n ---> Running in eb3864964304\nif [ ! -e hdf5-1.8.14.tar.gz ]; then \\\n\tversion_major_minor=`echo \"1.8.14\" | sed -E 's/\\.[0-9]+$//'`; \\\n\twget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-${version_major_minor}/hdf5-1.8.14/src/hdf5-1.8.14.tar.gz; \\\nfi\n\u001b[91m--2022-12-25 22:14:21--  https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.14/src/hdf5-1.8.14.tar.gz\n\u001b[0m\u001b[91mResolving support.hdfgroup.org (support.hdfgroup.org)... \u001b[0m\u001b[91m50.28.50.143\nConnecting to support.hdfgroup.org (support.hdfgroup.org)|50.28.50.143|:443... \u001b[0m\u001b[91mconnected.\n\u001b[0m\u001b[91mHTTP request sent, awaiting response... \u001b[0m\u001b[91m200 OK\nLength: 11761702 (11M)\u001b[0m\u001b[91m [application/x-gzip]\n\u001b[0m\u001b[91mSaving to: 'hdf5-1.8.14.tar.gz'\n\u001b[0m\u001b[91m\n     0K .....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... ...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m....  0%  186K 61s\n    50K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......  0%  286K 51s\n   100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m..  1%  524K 41s\n   150K ...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......  1%  375K 38s\n   200K\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m...\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m.  2%  377K 36s\n   250K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m....  2%  379K 35s\n   300K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......  3% 1.16M 31s\n   350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m..  3%  519K 30s\n   400K ..\u001b[0m\u001b[91m...\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m.  3%\u001b[0m\u001b[91m  379K 30s\n   450K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ....\u001b[0m\u001b[91m....\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m.  4%  377K 29s\n   500K .\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m....  4%  379K\u001b[0m\u001b[91m 29s\n   550K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......  5% 1.16M 27s\n   600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m..  5%\u001b[0m\u001b[91m  520K 27s\n   650K \u001b[0m\u001b[91m...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......  6%  380K 27s\n   700K .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m.  6%  377K 27s\n   750K .\u001b[0m\u001b[91m......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m....  6%\u001b[0m\u001b[91m  379K 27s\n   800K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......  7%  555K 26s\n   850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m..  7% 1.01M 25s\n   900K ...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......  8%  381K 25s\n   950K\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m.  8%  376K 25s\n  1000K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m....  9%  378K 25s\n  1050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......  9%  379K 25s\n  1100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 10%  575K 25s\n  1150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 10%  981K 24s\n  1200K .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 10%  378K 24s\n  1250K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ..\u001b[0m\u001b[91m....\u001b[0m\u001b[91m.... 11%  378K 24s\n  1300K \u001b[0m\u001b[91m....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 11%  379K 24s\n  1350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 12%  571K 24s\n  1400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 12%  995K 23s\n  1450K\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 13%  377K 23s\n  1500K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 13%  377K 23s\n  1550K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 13%  380K 23s\n  1600K .......... ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........ ........\u001b[0m\u001b[91m.. 14%  569K 23s\n  1650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 14%  960K 22s\n  1700K\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 15%  380K 22s\n  1750K .\u001b[0m\u001b[91m......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 15%  379K\u001b[0m\u001b[91m 22s\n  1800K .\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 16%  375K 22s\n  1850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 16%  580K 22s\n  1900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m......... \u001b[0m\u001b[91m......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 16%  776K 22s\n  1950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 17%  372K 22s\n  2000K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ...\u001b[0m\u001b[91m...\u001b[0m\u001b[91m.... 17%  373K 22s\u001b[0m\u001b[91m\n  2050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m 18%  346K 22s\u001b[0m\u001b[91m\n  2100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 18%  374K 22s\n  2150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m 19% 1.67M 21s\n  2200K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ...\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...\u001b[0m\u001b[91m. ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m. .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 19%  372K 21s\n  2250K \u001b[0m\u001b[91m.....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 20%  374K 21s\n  2300K\u001b[0m\u001b[91m ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 20%  377K 21s\u001b[0m\u001b[91m\n  2350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 20%  375K 21s\n  2400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 21% 2.56M 21s\n  2450K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 21%  372K 20s\n  2500K .......\u001b[0m\u001b[91m... \u001b[0m\u001b[91m.....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m....\u001b[0m\u001b[91m 22%  278K 21s\n  2550K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 22%  392K 21s\n  2600K\u001b[0m\u001b[91m .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m ......\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.. 23%  540K 20s\n  2650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m 23% 1.12M 20s\n  2700K\u001b[0m\u001b[91m .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 23%  374K\u001b[0m\u001b[91m 20s\n  2750K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 24%  377K 20s\n  2800K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 24%  377K 20s\n  2850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 25%  539K 20s\n  2900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 25%\u001b[0m\u001b[91m  406K 20s\n  2950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 26%  533K 19s\n  3000K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 26%  374K 19s\n  3050K .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 26%  549K 19s\n  3100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 27%  538K 19s\n  3150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 27%\u001b[0m\u001b[91m  290K 19s\n  3200K\u001b[0m\u001b[91m .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 28%  580K 19s\n  3250K .\u001b[0m\u001b[91m......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 28%  374K 19s\n  3300K .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 29% 1009K 18s\n  3350K \u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 29%  382K 18s\n  3400K ....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 30%\u001b[0m\u001b[91m  457K 18s\n  3450K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 30%  373K 18s\n  3500K\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m.\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 30%  375K 18s\n  3550K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 31% 1.80M 18s\u001b[0m\u001b[91m\n  3600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 31%  375K 18s\n  3650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 32%  459K 18s\u001b[0m\u001b[91m\n  3700K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 32%  376K 18s\n  3750K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 33%  377K 17s\n  3800K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 33%  731K 17s\n  3850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 33%  544K 17s\n  3900K .\u001b[0m\u001b[91m....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 34%  458K 17s\n  3950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 34%  375K 17s\n  4000K \u001b[0m\u001b[91m.......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 35%  377K 17s\n  4050K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m. ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 35%  459K 17s\n  4100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 36%  978K 17s\n  4150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 36%  457K 16s\n  4200K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 37%\u001b[0m\u001b[91m  376K 16s\n  4250K\u001b[0m\u001b[91m \u001b[0m\u001b[91m..\u001b[0m\u001b[91m...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 37%  378K 16s\n  4300K\u001b[0m\u001b[91m ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 37%  460K 16s\n  4350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 38%  969K 16s\n  4400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m. 38%  456K\u001b[0m\u001b[91m 16s\n  4450K .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 39%  375K 16s\n  4500K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 39%\u001b[0m\u001b[91m  379K 16s\n  4550K ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... \u001b[0m\u001b[91m..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 40%  461K 16s\n  4600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 40%  973K 15s\n  4650K ....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 40%  455K\u001b[0m\u001b[91m 15s\n  4700K .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 41%  376K 15s\n  4750K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 41%  379K 15s\n  4800K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 42%  462K 15s\n  4850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 42%  967K 15s\n  4900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... \u001b[0m\u001b[91m....\u001b[0m\u001b[91m...... 43%  456K\u001b[0m\u001b[91m 15s\n  4950K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 43%  375K 15s\n  5000K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 43%  380K 14s\n  5050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 44%  461K 14s\n  5100K .\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 44%  963K 14s\n  5150K ....\u001b[0m\u001b[91m.\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m......\u001b[0m\u001b[91m. .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 45%\u001b[0m\u001b[91m  456K 14s\u001b[0m\u001b[91m\n  5200K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 45%  375K 14s\n  5250K ....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m .......... ..........\u001b[0m\u001b[91m 46%  107K 14s\n  5300K\u001b[0m\u001b[91m ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 46% 87.6M\u001b[0m\u001b[91m 14s\n  5350K .\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 47% 77.0M 14s\n  5400K ...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .......... .......... .......... 47% 91.1M 14s\n  5450K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 47%  377K 13s\n  5500K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 48%  333K 13s\n  5550K\u001b[0m\u001b[91m ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 48%  374K 13s\n  5600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 49%  719K 13s\n  5650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 49%\u001b[0m\u001b[91m  734K 13s\n  5700K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 50%  376K 13s\n  5750K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 50%  304K 13s\n  5800K .......... ..\u001b[0m\u001b[91m........ ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 50%  500K 13s\n  5850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 51%  756K\u001b[0m\u001b[91m 13s\n  5900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m 51%  373K\u001b[0m\u001b[91m 12s\n  5950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 52%  264K 12s\n  6000K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 52%  646K 12s\n  6050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 53%  739K 12s\n  6100K\u001b[0m\u001b[91m .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 53%  381K 12s\n  6150K\u001b[0m\u001b[91m .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 53%  269K 12s\n  6200K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.... ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 54%  609K 12s\n  6250K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 54%  706K 12s\n  6300K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 55%\u001b[0m\u001b[91m  497K 12s\n  6350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ..........\u001b[0m\u001b[91m 55%  376K\u001b[0m\u001b[91m 11s\n  6400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 56%  377K 11s\n  6450K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 56%  513K 11s\n  6500K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. .......... 57%  462K\u001b[0m\u001b[91m 11s\n  6550K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ..\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m 57%  788K\u001b[0m\u001b[91m 11s\u001b[0m\u001b[91m\n  6600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 57%  376K 11s\n  6650K .\u001b[0m\u001b[91m....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...... 58%  377K 11s\n  6700K ..\u001b[0m\u001b[91m......\u001b[0m\u001b[91m..\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 58%  513K 11s\n  6750K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 59%\u001b[0m\u001b[91m  441K 11s\n  6800K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 59%  388K 10s\n  6850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 60%  374K 10s\n  6900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 60%  814K 10s\n  6950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m .......... .......... \u001b[0m\u001b[91m.......... .\u001b[0m\u001b[91m......... 60%  384K 10s\n  7000K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 61%  415K 10s\n  7050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 61%  375K 10s\n  7100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... .\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 62%  561K 10s\n  7150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 62%  815K 10s\n  7200K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 63%  420K 9s\n  7250K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 63%  312K 9s\n  7300K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 63%  476K 9s\n  7350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 64%  560K 9s\n  7400K ........\u001b[0m\u001b[91m.. \u001b[0m\u001b[91m...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 64%  662K 9s\n  7450K .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. .......... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 65%  240K 9s\n  7500K .....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 65%  566K 9s\n  7550K ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 66%  613K 9s\n  7600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 66%  513K 9s\n  7650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 67%  383K 8s\n  7700K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 67%  414K 8s\n  7750K\u001b[0m\u001b[91m .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 67%  374K 8s\u001b[0m\u001b[91m\n  7800K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m... .......... ......\u001b[0m\u001b[91m.... 68%\u001b[0m\u001b[91m  374K 8s\n  7850K\u001b[0m\u001b[91m .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 68%  524K 8s\n  7900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 69%\u001b[0m\u001b[91m 1.23M 8s\n  7950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m .......... ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m....\u001b[0m\u001b[91m.. .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 69%  311K 8s\u001b[0m\u001b[91m\n  8000K .....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... \u001b[0m\u001b[91m...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 70%  374K 8s\n  8050K \u001b[0m\u001b[91m....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 70%  476K 8s\n  8100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 70%  459K 7s\n  8150K ..\u001b[0m\u001b[91m...\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 71%  512K\u001b[0m\u001b[91m 7s\n  8200K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m. 71%  372K 7s\n  8250K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m .......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.. .......... 72%  166K 7s\n  8300K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... ...\u001b[0m\u001b[91m..\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 72% 87.7M 7s\n  8350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ...\u001b[0m\u001b[91m...\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 73% 1.14M 7s\n  8400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 73%  538K 7s\n  8450K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m. 74%  375K 7s\n  8500K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m .......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 74%  377K\u001b[0m\u001b[91m 7s\n  8550K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 74%  592K 6s\n  8600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 75%  546K 6s\n  8650K .....\u001b[0m\u001b[91m..... ..\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m.. .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 75%  538K 6s\n  8700K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 76%  376K 6s\n  8750K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 76%  377K 6s\n  8800K \u001b[0m\u001b[91m....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 77%  588K 6s\n  8850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 77%  550K 6s\n  8900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 77%\u001b[0m\u001b[91m  299K 6s\n  8950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ...\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m.. ....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .........\u001b[0m\u001b[91m. 78%  458K 6s\n  9000K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 78%  402K 5s\n  9050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 79% 1.13M 5s\n  9100K .\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m...\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 79%  403K 5s\n  9150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 80%  452K 5s\n  9200K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 80%  376K 5s\n  9250K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 80%  404K 5s\n  9300K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 81% 1.13M 5s\n  9350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 81%  403K 5s\n  9400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 82%  453K 5s\n  9450K ..\u001b[0m\u001b[91m......\u001b[0m\u001b[91m..\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 82%  376K 4s\n  9500K .....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m .......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 83%  403K 4s\n  9550K\u001b[0m\u001b[91m ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 83% 1.13M 4s\n  9600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 84%  403K 4s\n  9650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 84%  453K 4s\n  9700K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 84%  376K 4s\u001b[0m\u001b[91m\n  9750K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 85%  404K 4s\n  9800K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 85% 1.13M 4s\n  9850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 86%  403K 4s\n  9900K .\u001b[0m\u001b[91m....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 86%  452K 3s\u001b[0m\u001b[91m\n  9950K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 87%  376K 3s\n 10000K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 87%  404K 3s\n 10050K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 87% 1.13M 3s\n 10100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 88%  403K 3s\n 10150K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m......\u001b[0m\u001b[91m 88%  452K 3s\n 10200K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 89%  376K 3s\n 10250K ...\u001b[0m\u001b[91m....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 89%  403K 3s\n 10300K \u001b[0m\u001b[91m....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 90% 1.13M 3s\n 10350K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 90%  401K 2s\n 10400K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 90%  448K 2s\u001b[0m\u001b[91m\n 10450K \u001b[0m\u001b[91m..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 91%  374K 2s\n 10500K .\u001b[0m\u001b[91m....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 91%  377K 2s\n 10550K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 92% 1.51M 2s\n 10600K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 92%  388K 2s\n 10650K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 93%  129K 2s\n 10700K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 93% 66.7K 2s\n 10750K .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 94%\u001b[0m\u001b[91m  186K 2s\n 10800K ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m......\u001b[0m\u001b[91m. 94%  373K 1s\n 10850K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... \u001b[0m\u001b[91m....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 94%\u001b[0m\u001b[91m  372K 1s\n 10900K .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 95%  367K 1s\n 10950K .\u001b[0m\u001b[91m.\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 95%  375K 1s\n 11000K .\u001b[0m\u001b[91m......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 96%  375K 1s\n 11050K .\u001b[0m\u001b[91m...\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... 96% 13.4M\u001b[0m\u001b[91m 1s\n 11100K .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 97%\u001b[0m\u001b[91m  376K 1s\n 11150K ..\u001b[0m\u001b[91m...\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ....\u001b[0m\u001b[91m...... 97%  377K\u001b[0m\u001b[91m 1s\n 11200K ..\u001b[0m\u001b[91m......\u001b[0m\u001b[91m..\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. 97%  376K 1s\u001b[0m\u001b[91m\n 11250K ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ..\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... 98%  379K 0s\n 11300K ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m.....\u001b[0m\u001b[91m..\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.\u001b[0m\u001b[91m... .....\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m.......\u001b[0m\u001b[91m 98% 12.1M 0s\u001b[0m\u001b[91m\n 11350K\u001b[0m\u001b[91m .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. ......\u001b[0m\u001b[91m.... ....\u001b[0m\u001b[91m...... ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. 99%  367K 0s\n 11400K ...\u001b[0m\u001b[91m.\u001b[0m\u001b[91m.\u001b[0m\u001b[91m..... ...\u001b[0m\u001b[91m....... .\u001b[0m\u001b[91m........\u001b[0m\u001b[91m. .......\u001b[0m\u001b[91m... ..\u001b[0m\u001b[91m..\u001b[0m\u001b[91m...... 99%  378K 0s\n 11450K ..\u001b[0m\u001b[91m........\u001b[0m\u001b[91m ........\u001b[0m\u001b[91m.. ......\u001b[0m\u001b[91m.... ......               100%  276K=27s\n\n\u001b[0m\u001b[91m2022-12-25 22:14:49 (429 KB/s) - 'hdf5-1.8.14.tar.gz' saved [11761702/11761702]\n\n\u001b[0mtar -xzf hdf5-1.8.14.tar.gz || exit 255\ncd hdf5-1.8.14 && \\\n\t./configure CFLAGS=\"\" CPPFLAGS=\"\" --enable-threadsafe --disable-hl --libdir=`pwd`/../lib --includedir=`pwd`/../include --prefix=`pwd`/.. || exit 255\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... /usr/bin/mkdir -p\nchecking for gawk... gawk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking whether make supports nested variables... (cached) yes\nchecking whether to enable maintainer-specific portions of Makefiles... no\nchecking build system type... x86_64-unknown-linux-gnu\nchecking host system type... x86_64-unknown-linux-gnu\nchecking shell variables initial values... done\nchecking if basename works... yes\nchecking if xargs works... yes\nchecking for cached host... none\nchecking for config x86_64-unknown-linux-gnu... no\nchecking for config x86_64-unknown-linux-gnu... no\nchecking for config unknown-linux-gnu... no\nchecking for config unknown-linux-gnu... no\nchecking for config x86_64-linux-gnu... no\nchecking for config x86_64-linux-gnu... no\nchecking for config x86_64-unknown... no\nchecking for config linux-gnu... found\ncompiler 'gcc' is GNU gcc-4.8.5\nchecking for config ./config/site-specific/host-eb3864964304... no\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... none needed\nchecking whether gcc understands -c and -o together... yes\nchecking for style of include used by make... GNU\nchecking dependency style of gcc... gcc3\nchecking if unsupported combinations of configure options are allowed... no\nchecking if Fortran interface enabled... no\nchecking if Fortran 2003 interface enabled... yes\nchecking whether we are using the GNU C++ compiler... yes\nchecking whether g++ accepts -g... yes\nchecking dependency style of g++... gcc3\nchecking how to run the C++ preprocessor... g++ -E\nchecking if c++ interface enabled... no\nchecking for perl... perl\nchecking for ar... ar\nchecking whether make sets $(MAKE)... (cached) yes\nchecking for tr... /usr/bin/tr\nchecking if srcdir= and time commands work together... no\nchecking how to print strings... printf\nchecking for a sed that does not truncate output... /usr/bin/sed\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for fgrep... /usr/bin/grep -F\nchecking for ld used by gcc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 1572864\nchecking whether the shell understands some XSI constructs... yes\nchecking whether the shell understands \"+=\"... yes\nchecking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format... func_convert_file_noop\nchecking how to convert x86_64-unknown-linux-gnu file names to toolchain format... func_convert_file_noop\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... pass_all\nchecking for dlltool... dlltool\nchecking how to associate runtime and link libraries... printf %s\\n\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\nchecking for sysroot... no\nchecking for mt... no\nchecking if : is a manifest tool... no\nchecking how to run the C preprocessor... gcc -E\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if gcc supports -fno-rtti -fno-exceptions... no\nchecking for gcc option to produce PIC... -fPIC -DPIC\nchecking if gcc PIC flag -fPIC -DPIC works... yes\nchecking if gcc static flag -static works... no\nchecking if gcc supports -c -o file.o... yes\nchecking if gcc supports -c -o file.o... (cached) yes\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\nchecking whether -lc should be explicitly linked in... no\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking for shl_load... no\nchecking for shl_load in -ldld... no\nchecking for dlopen... no\nchecking for dlopen in -ldl... yes\nchecking whether a program can dlopen itself... yes\nchecking whether a statically linked program can dlopen itself... yes\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... yes\nchecking whether to build static libraries... yes\nchecking if we should install only statically linked executables... no\nchecking if -Wl,-rpath should be used to link shared libs in nondefault directories... yes\nchecking how make searches directories... VPATH=DIR1 DIR2 ...\nchecking whether make will build with undefined variables... yes\nchecking for production mode... production\nchecking for ceil in -lm... yes\nchecking for dlopen in -ldl... (cached) yes\nchecking for ANSI C header files... (cached) yes\nchecking whether time.h and sys/time.h may both be included... yes\nchecking for difftime... yes\nchecking for gettimeofday... yes\nchecking for library containing clock_gettime... none required\nchecking for clock_gettime... yes\nchecking sys/resource.h usability... yes\nchecking sys/resource.h presence... yes\nchecking for sys/resource.h... yes\nchecking sys/time.h usability... yes\nchecking sys/time.h presence... yes\nchecking for sys/time.h... yes\nchecking for unistd.h... (cached) yes\nchecking sys/ioctl.h usability... yes\nchecking sys/ioctl.h presence... yes\nchecking for sys/ioctl.h... yes\nchecking for sys/stat.h... (cached) yes\nchecking sys/socket.h usability... yes\nchecking sys/socket.h presence... yes\nchecking for sys/socket.h... yes\nchecking for sys/types.h... (cached) yes\nchecking stddef.h usability... yes\nchecking stddef.h presence... yes\nchecking for stddef.h... yes\nchecking setjmp.h usability... yes\nchecking setjmp.h presence... yes\nchecking for setjmp.h... yes\nchecking features.h usability... yes\nchecking features.h presence... yes\nchecking for features.h... yes\nchecking dirent.h usability... yes\nchecking dirent.h presence... yes\nchecking for dirent.h... yes\nchecking for stdint.h... (cached) yes\nchecking mach/mach_time.h usability... no\nchecking mach/mach_time.h presence... no\nchecking for mach/mach_time.h... no\nchecking io.h usability... no\nchecking io.h presence... no\nchecking for io.h... no\nchecking winsock2.h usability... no\nchecking winsock2.h presence... no\nchecking for winsock2.h... no\nchecking sys/timeb.h usability... yes\nchecking sys/timeb.h presence... yes\nchecking for sys/timeb.h... yes\nchecking if libtool needs -no-undefined flag to build shared libraries... no\nchecking if configure should try to set up large file support... yes\nchecking for special C compiler options needed for large files... no\nchecking for _FILE_OFFSET_BITS value needed for large files... no\nchecking if large (64-bit) files are supported on this system.... yes\nchecking for lseek64... yes\nchecking for fseeko64... yes\nchecking for ftello64... yes\nchecking for ftruncate64... yes\nchecking for fseeko... yes\nchecking for ftello... yes\nchecking for stat64... yes\nchecking for fstat64... yes\nchecking for off_t... yes\nchecking for size_t... yes\nchecking for ssize_t... yes\nchecking for ptrdiff_t... yes\nchecking whether byte ordering is bigendian... no\nchecking size of char... 1\nchecking size of short... 2\nchecking size of int... 4\nchecking size of unsigned... 4\nchecking size of long... 8\nchecking size of long long... 8\nchecking size of __int64... 0\nchecking size of float... 4\nchecking size of double... 8\nchecking size of long double... 16\nchecking size of int8_t... 1\nchecking size of uint8_t... 1\nchecking size of int_least8_t... 1\nchecking size of uint_least8_t... 1\nchecking size of int_fast8_t... 1\nchecking size of uint_fast8_t... 1\nchecking size of int16_t... 2\nchecking size of uint16_t... 2\nchecking size of int_least16_t... 2\nchecking size of uint_least16_t... 2\nchecking size of int_fast16_t... 8\nchecking size of uint_fast16_t... 8\nchecking size of int32_t... 4\nchecking size of uint32_t... 4\nchecking size of int_least32_t... 4\nchecking size of uint_least32_t... 4\nchecking size of int_fast32_t... 8\nchecking size of uint_fast32_t... 8\nchecking size of int64_t... 8\nchecking size of uint64_t... 8\nchecking size of int_least64_t... 8\nchecking size of uint_least64_t... 8\nchecking size of int_fast64_t... 8\nchecking size of uint_fast64_t... 8\nchecking size of size_t... 8\nchecking size of ssize_t... 8\nchecking size of ptrdiff_t... 8\nchecking size of off_t... 8\nchecking size of off64_t... 8\nchecking if dev_t is scalar... yes\nchecking for dmalloc library... suppressed\nchecking zlib.h usability... yes\nchecking zlib.h presence... yes\nchecking for zlib.h... yes\nchecking for compress2 in -lz... yes\nchecking for compress2... yes\nchecking for szlib... suppressed\nchecking for thread safe support... yes\nchecking pthread.h usability... yes\nchecking pthread.h presence... yes\nchecking for pthread.h... yes\nchecking for pthread_self in -lpthread... yes\nchecking whether CLOCK_MONOTONIC is declared... yes\nchecking for tm_gmtoff in struct tm... yes\nchecking for __tm_gmtoff in struct tm... no\nchecking for global timezone variable... no\nchecking whether struct tm is in sys/time.h or time.h... time.h\nchecking for struct tm.tm_zone... yes\nchecking for struct timezone... yes\nchecking whether gettimeofday() gives timezone... yes\nchecking for st_blocks in struct stat... yes\nchecking for _getvideoconfig... no\nchecking for gettextinfo... no\nchecking for GetConsoleScreenBufferInfo... no\nchecking for _scrsize... no\nchecking for ioctl... yes\nchecking for struct videoconfig... no\nchecking for struct text_info... no\nchecking for TIOCGWINSZ... yes\nchecking for TIOCGETD... yes\nchecking for alarm... yes\nchecking for BSDgettimeofday... no\nchecking for fork... yes\nchecking for frexpf... yes\nchecking for frexpl... yes\nchecking for gethostname... yes\nchecking for getpwuid... yes\nchecking for getrusage... yes\nchecking for lstat... yes\nchecking for rand_r... yes\nchecking for random... yes\nchecking for setsysinfo... no\nchecking for signal... yes\nchecking for longjmp... yes\nchecking for setjmp... yes\nchecking for siglongjmp... yes\nchecking for sigsetjmp... no\nchecking for sigprocmask... yes\nchecking for snprintf... yes\nchecking for srandom... yes\nchecking for strdup... yes\nchecking for symlink... yes\nchecking for system... yes\nchecking for tmpfile... yes\nchecking for asprintf... yes\nchecking for vasprintf... yes\nchecking for waitpid... yes\nchecking for vsnprintf... yes\nchecking if vsnprintf returns correct value... yes\nchecking if lone colon can be used as an argument... yes\nchecking for an ANSI C-conforming const... yes\nchecking for inline... inline\nchecking for __attribute__ extension... yes\nchecking for __func__ extension... yes\nchecking for __FUNCTION__ extension... yes\nchecking for C99 designated initialization support... yes\nchecking how to print long long... %ld and %lu\nchecking Threads support system scope... yes\nchecking for debug flags... none\nchecking whether function stack tracking is enabled... no\nchecking whether metadata trace file code is enabled... no\nchecking for API tracing... no\nchecking for instrumented library... no\nchecking whether to clear file buffers... yes\nchecking whether a memory checking tool will be used... no\nchecking for parallel support files... skipped\nchecking for I/O filters... all (shuffle,fletcher32,nbit,scaleoffset)\nchecking for Default Virtual File Driver definition... yes\nchecking for Direct Virtual File Driver support... no\nchecking for custom plugin default path definition... /usr/local/hdf5/lib/plugin\nchecking whether exception handling functions is checked during data conversions... yes\nchecking whether data accuracy is guaranteed during data conversions... yes\nchecking if converting denormalized floating-point values is possible... yes\nchecking if converting floating-point values to long long is not working... false\nchecking if the machine has window style path name... no\nchecking if converting from long double to integers is accurate... yes\nchecking if converting from long double to integers works... yes\nchecking if accurately converting from integers to long double... yes\nchecking if accurately converting unsigned long to float values... yes\nchecking if accurately converting unsigned long long to floating-point values... yes\nchecking if accurately roundup converting floating-point to unsigned long long values... yes\nchecking if right maximum converting floating-point to unsigned long long values... yes\nchecking if correctly converting long double to unsigned int values... yes\nchecking if compiling unsigned long long to floating-point typecasts work... yes\nchecking if compiling long long to floating-point typecasts work... yes\nchecking if converting unsigned long long to long double with precision... yes\nchecking if overflows normally converting floating-point to integer values... yes\nchecking if using special algorithm to convert long double to (unsigned) long values... no\nchecking if using special algorithm to convert (unsigned) long to long double values... no\nchecking if correctly converting long double to (unsigned) long long values... yes\nchecking if correctly converting (unsigned) long long to long double values... yes\nchecking if bad code for log2 routine is generated... no\nchecking if high level library is enabled... no\nchecking additional programs should be built... no\nchecking if deprecated public symbols are available... yes\nchecking which version of public symbols to use by default... v18\nchecking whether to perform strict file format checks... no\nchecking whether to have library information embedded in the executables... yes\nchecking if alignment restrictions are strictly enforced... no\nconfigure: creating ./config.lt\nconfig.lt: creating libtool\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating src/libhdf5.settings\nconfig.status: creating Makefile\nconfig.status: creating src/Makefile\nconfig.status: creating test/Makefile\nconfig.status: creating test/testcheck_version.sh\nconfig.status: creating test/testerror.sh\nconfig.status: creating test/H5srcdir_str.h\nconfig.status: creating test/testlibinfo.sh\nconfig.status: creating test/testlinks_env.sh\nconfig.status: creating test/test_plugin.sh\nconfig.status: creating testpar/Makefile\nconfig.status: creating perform/Makefile\nconfig.status: creating tools/Makefile\nconfig.status: creating tools/h5dump/Makefile\nconfig.status: creating tools/h5dump/testh5dump.sh\nconfig.status: creating tools/h5dump/testh5dumppbits.sh\nconfig.status: creating tools/h5dump/testh5dumpxml.sh\nconfig.status: creating tools/h5ls/testh5ls.sh\nconfig.status: creating tools/h5import/Makefile\nconfig.status: creating tools/h5import/h5importtestutil.sh\nconfig.status: creating tools/h5diff/Makefile\nconfig.status: creating tools/h5diff/testh5diff.sh\nconfig.status: creating tools/h5diff/testph5diff.sh\nconfig.status: creating tools/h5jam/Makefile\nconfig.status: creating tools/h5jam/testh5jam.sh\nconfig.status: creating tools/h5repack/Makefile\nconfig.status: creating tools/h5repack/h5repack.sh\nconfig.status: creating tools/h5repack/h5repack_plugin.sh\nconfig.status: creating tools/h5ls/Makefile\nconfig.status: creating tools/h5copy/Makefile\nconfig.status: creating tools/h5copy/testh5copy.sh\nconfig.status: creating tools/lib/Makefile\nconfig.status: creating tools/misc/Makefile\nconfig.status: creating tools/misc/h5cc\nconfig.status: creating tools/misc/testh5mkgrp.sh\nconfig.status: creating tools/misc/testh5repart.sh\nconfig.status: creating tools/h5stat/testh5stat.sh\nconfig.status: creating tools/h5stat/Makefile\nconfig.status: creating examples/Makefile\nconfig.status: creating examples/run-c-ex.sh\nconfig.status: creating examples/testh5cc.sh\nconfig.status: creating c++/Makefile\nconfig.status: creating c++/src/Makefile\nconfig.status: creating c++/src/h5c++\nconfig.status: creating c++/test/Makefile\nconfig.status: creating c++/test/H5srcdir_str.h\nconfig.status: creating c++/examples/Makefile\nconfig.status: creating c++/examples/run-c++-ex.sh\nconfig.status: creating c++/examples/testh5c++.sh\nconfig.status: creating fortran/Makefile\nconfig.status: creating fortran/src/h5fc\nconfig.status: creating fortran/src/Makefile\nconfig.status: creating fortran/test/Makefile\nconfig.status: creating fortran/testpar/Makefile\nconfig.status: creating fortran/examples/Makefile\nconfig.status: creating fortran/examples/run-fortran-ex.sh\nconfig.status: creating fortran/examples/testh5fc.sh\nconfig.status: creating hl/Makefile\nconfig.status: creating hl/src/Makefile\nconfig.status: creating hl/test/Makefile\nconfig.status: creating hl/test/H5srcdir_str.h\nconfig.status: creating hl/tools/Makefile\nconfig.status: creating hl/tools/gif2h5/Makefile\nconfig.status: creating hl/tools/gif2h5/h52giftest.sh\nconfig.status: creating hl/examples/Makefile\nconfig.status: creating hl/examples/run-hlc-ex.sh\nconfig.status: creating hl/c++/Makefile\nconfig.status: creating hl/c++/src/Makefile\nconfig.status: creating hl/c++/test/Makefile\nconfig.status: creating hl/c++/examples/Makefile\nconfig.status: creating hl/c++/examples/run-hlc++-ex.sh\nconfig.status: creating hl/fortran/Makefile\nconfig.status: creating hl/fortran/src/Makefile\nconfig.status: creating hl/fortran/test/Makefile\nconfig.status: creating hl/fortran/examples/Makefile\nconfig.status: creating hl/fortran/examples/run-hlfortran-ex.sh\nconfig.status: creating src/H5config.h\nconfig.status: executing pubconf commands\ncreating src/H5pubconf.h\nPost process src/libhdf5.settings\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\n\t    SUMMARY OF THE HDF5 CONFIGURATION\n\t    =================================\n\nGeneral Information:\n-------------------\n\t\t   HDF5 Version: 1.8.14\n\t\t  Configured on: Sun Dec 25 22:15:15 UTC 2022\n\t\t  Configured by: root@eb3864964304\n\t\t Configure mode: production\n\t\t    Host system: x86_64-unknown-linux-gnu\n\t      Uname information: Linux eb3864964304 5.4.0-113-generic #127~18.04.1-Ubuntu SMP Wed May 18 15:40:23 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n\t\t       Byte sex: little-endian\n\t\t      Libraries: static, shared\n\t     Installation point: /nanopolish/hdf5-1.8.14/..\n\nCompiling Options:\n------------------\n               Compilation Mode: production\n                     C Compiler: /usr/bin/gcc ( gcc (GCC) 4.8.5 20150623 )\n                         CFLAGS: \n                      H5_CFLAGS: -std=c99 -pedantic -Wall -Wextra -Wundef -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wnested-externs -Winline -Wfloat-equal -Wmissing-format-attribute -Wmissing-noreturn -Wpacked -Wdisabled-optimization -Wformat=2 -Wunreachable-code -Wendif-labels -Wdeclaration-after-statement -Wold-style-definition -Winvalid-pch -Wvariadic-macros -Winit-self -Wmissing-include-dirs -Wswitch-default -Wswitch-enum -Wunused-macros -Wunsafe-loop-optimizations -Wc++-compat -Wstrict-overflow -Wlogical-op -Wlarger-than=2048 -Wvla -Wsync-nand -Wframe-larger-than=16384 -Wpacked-bitfield-compat -Wstrict-overflow=5 -Wjump-misses-init -Wunsuffixed-float-constants -Wdouble-promotion -Wsuggest-attribute=const -Wtrampolines -Wstack-usage=8192 -Wvector-operation-performance -Wsuggest-attribute=pure -Wsuggest-attribute=noreturn -Wsuggest-attribute=format -O3 -fomit-frame-pointer -finline-functions\n                      AM_CFLAGS: \n                       CPPFLAGS: \n                    H5_CPPFLAGS: -D_POSIX_C_SOURCE=199506L   -DNDEBUG -UH5_DEBUG_API\n                    AM_CPPFLAGS: -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_BSD_SOURCE \n               Shared C Library: yes\n               Static C Library: yes\n  Statically Linked Executables: no\n                        LDFLAGS: \n                     H5_LDFLAGS: \n                     AM_LDFLAGS:  -L/nanopolish/hdf5-1.8.14/../lib\n \t \tExtra libraries:  -lpthread -lz -ldl -lm \n \t\t       Archiver: ar\n \t\t \t Ranlib: ranlib\n \t      Debugged Packages: \n\t\t    API Tracing: no\n\nLanguages:\n----------\n                        Fortran: no\n\n                            C++: no\n\nFeatures:\n---------\n                  Parallel HDF5: no\n             High Level library: no\n                   Threadsafety: yes\n            Default API Mapping: v18\n With Deprecated Public Symbols: yes\n         I/O filters (external): deflate(zlib)\n         I/O filters (internal): shuffle,fletcher32,nbit,scaleoffset\n                            MPE: no\n                     Direct VFD: no\n                        dmalloc: no\nClear file buffers before write: yes\n           Using memory checker: no\n         Function Stack Tracing: no\n      Strict File Format Checks: no\n   Optimization Instrumentation: no\n       Large File Support (LFS): yes\nmake -C hdf5-1.8.14 && make -C hdf5-1.8.14 install\nmake[1]: Entering directory `/nanopolish/hdf5-1.8.14'\nMaking all in src\nmake[2]: Entering directory `/nanopolish/hdf5-1.8.14/src'\nmake  all-am\nmake[3]: Entering directory `/nanopolish/hdf5-1.8.14/src'\n  CC       H5.lo\n  CC       H5checksum.lo\n\u001b[91mH5checksum.c: In function 'H5_checksum_fletcher32':\nH5checksum.c:112:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5_checksum_fletcher32(const void *_data, size_t _len)\n ^\n\u001b[0m\u001b[91mH5checksum.c: In function 'H5_checksum_lookup3':\n\u001b[0m\u001b[91mH5checksum.c:374:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5_checksum_lookup3(const void *key, size_t length, uint32_t initval)\n ^\n\u001b[0m\u001b[91mH5checksum.c: In function 'H5_hash_string':\n\u001b[0m\u001b[91mH5checksum.c:481:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5_hash_string(const char *str)\n ^\n\u001b[0m  CC       H5dbg.lo\n\u001b[91mH5dbg.c: In function 'H5_buffer_dump':\nH5dbg.c:102:5: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n     for(u = 0; u < buf_size; u += 16) {\n     ^\n\u001b[0m  CC       H5system.lo\n\u001b[91mH5system.c: In function 'HDfprintf':\n\u001b[0m\u001b[91mH5system.c:277:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf (stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:280:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf (stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:283:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf (stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:286:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf (stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:296:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:299:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:302:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:305:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:316:25: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                         n = fprintf(stream, format_templ, x);\n                         ^\nH5system.c:316:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mH5system.c:319:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:327:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:364:29: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                             n = fprintf(stream, format_templ, x);\n                             ^\n\u001b[0m\u001b[91mH5system.c:376:29: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                             fprintf(stream, format_templ, \"UNDEF\");\n                             ^\n\u001b[0m\u001b[91mH5system.c:384:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:392:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                         n = fprintf(stream, format_templ, x);\n                         ^\n\u001b[0m\u001b[91mH5system.c:398:21: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                     n = fprintf(stream, format_templ, nout);\n                     ^\n\u001b[0m\u001b[91mH5system.c: In function 'HDstrtoll':\n\u001b[0m\u001b[91mH5system.c:515:7: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n       (*s>='A' && *s<'A'+base-10)))) {\n       ^\nH5system.c:515:7: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\nH5system.c:515:7: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m  CC       H5timer.lo\n\u001b[91mH5timer.c: In function 'H5_timer_begin':\nH5timer.c:134:20: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                    ((double)rusage.ru_utime.tv_usec / 1e6);\n                    ^\nH5timer.c:136:20: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                    ((double)rusage.ru_stime.tv_usec / 1e6);\n                    ^\nH5timer.c:143:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     timer->etime = (double)etime.tv_sec + ((double)etime.tv_usec / 1e6);\n     ^\nH5timer.c: In function 'H5_timer_end':\n\u001b[0m\u001b[91mH5timer.c:175:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     timer->utime = MAX(0.0, now.utime - timer->utime);\n     ^\nH5timer.c:175:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:176:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     timer->stime = MAX(0.0, now.stime - timer->stime);\n     ^\nH5timer.c:176:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:177:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     timer->etime = MAX(0.0, now.etime - timer->etime);\n     ^\nH5timer.c:177:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c: In function 'H5_bandwidth':\n\u001b[0m\u001b[91mH5timer.c:219:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(nseconds <= 0.0)\n     ^\n\u001b[0m\u001b[91mH5timer.c:223:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         if(HDfabs(bw) < 0.0000000001)\n         ^\n\u001b[0m\u001b[91mH5timer.c:226:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  else if(bw < 1.0)\n  ^\n\u001b[0m\u001b[91mH5timer.c:228:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  else if(bw < 1024.0) {\n  ^\n\u001b[0m\u001b[91mH5timer.c:231:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  } else if(bw < (1024.0 * 1024.0)) {\n  ^\nH5timer.c:231:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:232:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      sprintf(buf, \"%05.4f\", bw / 1024.0);\n      ^\n\u001b[0m\u001b[91mH5timer.c:234:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  } else if(bw < (1024.0 * 1024.0 * 1024.0)) {\n  ^\nH5timer.c:234:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:234:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:235:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      sprintf(buf, \"%05.4f\", bw / (1024.0 * 1024.0));\n      ^\nH5timer.c:235:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:237:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  } else if(bw < (1024.0 * 1024.0 * 1024.0 * 1024.0)) {\n  ^\nH5timer.c:237:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:237:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:237:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:238:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      sprintf(buf, \"%05.4f\", bw / (1024.0 * 1024.0 * 1024.0));\n      ^\nH5timer.c:238:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:238:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:240:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  } else if(bw < (1024.0 * 1024.0 * 1024.0 * 1024.0 * 1024.0)) {\n  ^\nH5timer.c:240:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:240:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:240:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:240:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5timer.c:241:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      sprintf(buf, \"%05.4f\", bw / (1024.0 * 1024.0 * 1024.0 * 1024.0));\n      ^\nH5timer.c:241:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:241:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5timer.c:241:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m  CC       H5trace.lo\n\u001b[91mH5trace.c: In function 'H5_trace':\nH5trace.c:132:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     static H5_timer_t   first_time = {0.0, 0.0, 0.0};\n     ^\nH5trace.c:132:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5trace.c:132:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5trace.c:139:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         return 0.0; /*tracing is off*/\n         ^\nH5trace.c:146:17: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                 return 0.0;\n                 ^\nH5trace.c:153:17: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                 return 0.0;\n                 ^\n\u001b[0m\u001b[91mH5trace.c:159:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(HDfabs(first_time.etime) < 0.0000000001)\n     ^\n\u001b[0m\u001b[91mH5trace.c:235:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      unsigned n = (unsigned)MAX (0, (int)HDstrlen(argname) - 3); /*lint !e666 Allow expression with side effects */\n      ^\n\u001b[0m\u001b[91mH5trace.c:2312:29: warning: conversion to 'hssize_t' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n                             asize[argno] = iul;\n                             ^\n\u001b[0m\u001b[91mH5trace.c:2336:29: warning: conversion to 'hssize_t' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n                             asize[argno] = iull;\n                             ^\n\u001b[0m  CC       H5A.lo\n  CC       H5Abtree2.lo\n\u001b[91mH5Abtree2.c: In function 'H5A_dense_btree2_name_compare':\nH5Abtree2.c:272:16: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n         herr_t status;                  /* Status from fractal heap 'op' routine */\n                ^\n\u001b[0m  CC       H5Adense.lo\n  CC       H5Adeprec.lo\n  CC       H5Aint.lo\n\u001b[91mH5Aint.c: In function 'H5A_create':\nH5Aint.c:202:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     if(NULL == (attr->shared->dt = H5T_copy(type, H5T_COPY_ALL)))\n     ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Aprivate.h:27,\n                 from H5Apkg.h:39,\n                 from H5Aint.c:39:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Aint.c: In function 'H5A_write':\n\u001b[0m\u001b[91mH5Aint.c:529:13: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n             if((src_id = H5I_register(H5I_DATATYPE, H5T_copy(mem_type, H5T_COPY_ALL), FALSE)) < 0 ||\n             ^\n\u001b[0m\u001b[91mIn file included from H5Oprivate.h:41:0,\n                 from H5Aprivate.h:27,\n                 from H5Apkg.h:39,\n                 from H5Aint.c:39:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Aint.c: In function 'H5A_read':\n\u001b[0m\u001b[91mH5Aint.c:646:25: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n                         (dst_id = H5I_register(H5I_DATATYPE, H5T_copy(mem_type, H5T_COPY_ALL), FALSE)) < 0)\n                         ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Aprivate.h:27,\n                 from H5Apkg.h:39,\n                 from H5Aint.c:39:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mIn file included from H5Aint.c:38:0:\nH5Aint.c: In function 'H5A_attr_copy_file':\n\u001b[0m\u001b[91mH5Sprivate.h:148:71: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n #define H5S_GET_EXTENT_NPOINTS(S)       (H5S_get_simple_extent_npoints(S))\n                                                                       ^\nH5private.h:1485:23: note: in definition of macro 'H5_ASSIGN_OVERFLOW'\n     (dst) = (dsttype)(src);\n                       ^\nH5Aint.c:2022:53: note: in expansion of macro 'H5S_GET_EXTENT_NPOINTS'\n     H5_ASSIGN_OVERFLOW(attr_dst->shared->data_size, H5S_GET_EXTENT_NPOINTS(attr_dst->shared->ds) * H5T_get_size(attr_dst->shared->dt), hssize_t, size_t);\n                                                     ^\n\u001b[0m\u001b[91mH5Aint.c:1924:17: warning: unused parameter 'cpy_info' [-Wunused-parameter]\n     H5O_copy_t *cpy_info, hid_t dxpl_id)\n                 ^\n\u001b[0m\u001b[91mH5Aint.c: In function 'H5A_oloc':\n\u001b[0m\u001b[91mH5Aint.c:1103:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5A_oloc(H5A_t *attr)\n ^\n\u001b[0m\u001b[91mH5Aint.c: In function 'H5A_nameof':\n\u001b[0m\u001b[91mH5Aint.c:1134:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5A_nameof(H5A_t *attr)\n ^\n\u001b[0m\u001b[91mH5Aint.c: In function 'H5A_type':\n\u001b[0m\u001b[91mH5Aint.c:1163:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5A_type(const H5A_t *attr)\n ^\n\u001b[0m  CC       H5Atest.lo\n  CC       H5AC.lo\n  CC       H5B.lo\n\u001b[91mH5B.c: In function 'H5B_iterate_helper':\n\u001b[0m\u001b[91mH5B.c:1259:15: warning: request for implicit conversion from 'void *' to 'haddr_t *' not permitted in C++ [-Wc++-compat]\n         child = H5FL_SEQ_FREE(haddr_t, child);\n               ^\n\u001b[0m\u001b[91mH5B.c: In function 'H5B_shared_new':\n\u001b[0m\u001b[91mH5B.c:1828:30: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n                 shared->nkey = H5FL_SEQ_FREE(size_t, shared->nkey);\n                              ^\n\u001b[0m\u001b[91mH5B.c: In function 'H5B_shared_free':\n\u001b[0m\u001b[91mH5B.c:1859:18: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n     shared->nkey = H5FL_SEQ_FREE(size_t, shared->nkey);\n                  ^\n\u001b[0m\u001b[91mH5B.c: In function 'H5B_copy':\n\u001b[0m\u001b[91mH5B.c:1927:22: warning: request for implicit conversion from 'void *' to 'haddr_t *' not permitted in C++ [-Wc++-compat]\n      new_node->child = H5FL_SEQ_FREE(haddr_t, new_node->child);\n                      ^\n\u001b[0m\u001b[91mH5B.c: In function 'H5B_valid':\n\u001b[0m\u001b[91mH5B.c:2112:26: warning: variable 'shared' set but not used [-Wunused-but-set-variable]\n     H5B_shared_t        *shared;                /* Pointer to shared B-tree info */\n                          ^\n\u001b[0m\u001b[91mH5B.c: In function 'H5B_node_dest':\n\u001b[0m\u001b[91mH5B.c:2174:15: warning: request for implicit conversion from 'void *' to 'haddr_t *' not permitted in C++ [-Wc++-compat]\n     bt->child = H5FL_SEQ_FREE(haddr_t, bt->child);\n               ^\n\u001b[0m  CC       H5Bcache.lo\n  CC       H5Bdbg.lo\n\u001b[91mH5Bdbg.c: In function 'H5B_debug':\nH5Bdbg.c:130:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     \"Address:\", bt->child[u]);\n     ^\nH5Bdbg.c:136:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                       \"Left Key:\");\n                       ^\n\u001b[0m\u001b[91mH5Bdbg.c:139:10: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n          H5B_NKEY(bt, shared, u), udata);\n          ^\nH5Bdbg.c:143:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                       \"Right Key:\");\n                       ^\n\u001b[0m\u001b[91mH5Bdbg.c:146:10: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n          H5B_NKEY(bt, shared, u + 1), udata);\n          ^\n\u001b[0m  CC       H5B2.lo\n  CC       H5B2cache.lo\n\u001b[91mH5B2cache.c: In function 'H5B2__cache_internal_load':\nH5B2cache.c:552:27: warning: conversion to 'uint16_t' from 'unsigned int' may alter its value [-Wconversion]\n     internal->nrec = udata->nrec;\n                           ^\n\u001b[0m\u001b[91mH5B2cache.c:553:28: warning: conversion to 'uint16_t' from 'unsigned int' may alter its value [-Wconversion]\n     internal->depth = udata->depth;\n                            ^\n\u001b[0m\u001b[91mIn file included from H5B2private.h:34:0,\n                 from H5B2pkg.h:32,\n                 from H5B2cache.c:38:\nH5Fprivate.h:151:20: warning: conversion to 'uint16_t' from 'int' may alter its value [-Wconversion]\n       n = (n << 8) | *(--p);            \\\n                    ^\nH5Fprivate.h:183:41: note: in expansion of macro 'DECODE_VAR'\n #  define UINT64DECODE_VAR(p, n, l)     DECODE_VAR(p, n, l)\n                                         ^\nH5B2cache.c:572:9: note: in expansion of macro 'UINT64DECODE_VAR'\n         UINT64DECODE_VAR(p, int_node_ptr->node_nrec, udata->hdr->max_nrec_size);\n         ^\n\u001b[0m\u001b[91mH5B2cache.c: In function 'H5B2__cache_leaf_load':\n\u001b[0m\u001b[91mH5B2cache.c:890:23: warning: conversion to 'uint16_t' from 'unsigned int' may alter its value [-Wconversion]\n     leaf->nrec = udata->nrec;\n                       ^\n\u001b[0m  CC       H5B2dbg.lo\n\u001b[91mH5B2dbg.c: In function 'H5B2_hdr_debug':\nH5B2dbg.c:175:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             hdr->node_info[u].max_nrec, hdr->node_info[u].split_nrec, hdr->node_info[u].merge_nrec);\n             ^\n\u001b[0m\u001b[91mH5B2dbg.c: In function 'H5B2_int_debug':\n\u001b[0m\u001b[91mH5B2dbg.c:289:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   internal->node_ptrs[u].addr);\n                   ^\n\u001b[0m\u001b[91mH5B2dbg.c:294:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   temp_str);\n                   ^\n\u001b[0m\u001b[91mH5B2dbg.c:297:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             H5B2_INT_NREC(internal, hdr, u), dbg_ctx);\n             ^\n\u001b[0m\u001b[91mH5B2dbg.c:306:15: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n               internal->node_ptrs[u].addr);\n               ^\n\u001b[0m\u001b[91mH5B2dbg.c: In function 'H5B2_leaf_debug':\nH5B2dbg.c:415:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   temp_str);\n                   ^\n\u001b[0m\u001b[91mH5B2dbg.c:418:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             H5B2_LEAF_NREC(leaf, hdr, u), dbg_ctx);\n             ^\n\u001b[0m  CC       H5B2hdr.lo\n\u001b[91mH5B2hdr.c: In function 'H5B2_hdr_free':\nH5B2hdr.c:525:22: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         hdr->nat_off = H5FL_SEQ_FREE(size_t, hdr->nat_off);\n                      ^\nH5B2hdr.c:542:24: warning: request for implicit conversion from 'void *' to 'struct H5B2_node_info_t *' not permitted in C++ [-Wc++-compat]\n         hdr->node_info = H5FL_SEQ_FREE(H5B2_node_info_t, hdr->node_info);\n                        ^\n\u001b[0m  CC       H5B2int.lo\n\u001b[91mH5B2int.c: In function 'H5B2_redistribute2':\n\u001b[0m\u001b[91mH5B2int.c:549:13: warning: conversion to 'hssize_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n             left_moved_nrec = moved_nrec;\n             ^\n\u001b[0m\u001b[91mH5B2int.c:550:13: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             right_moved_nrec -= moved_nrec;\n             ^\n\u001b[0m\u001b[91mH5B2int.c:550:30: warning: conversion to 'hssize_t' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n             right_moved_nrec -= moved_nrec;\n                              ^\n\u001b[0m\u001b[91mH5B2int.c:602:13: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             left_moved_nrec -= moved_nrec;\n             ^\n\u001b[0m\u001b[91mH5B2int.c:602:29: warning: conversion to 'hssize_t' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n             left_moved_nrec -= moved_nrec;\n                             ^\n\u001b[0m\u001b[91mH5B2int.c:603:13: warning: conversion to 'hssize_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n             right_moved_nrec = moved_nrec;\n             ^\n\u001b[0m  CC       H5B2stat.lo\n  CC       H5B2test.lo\n\u001b[91mH5B2test.c: In function 'H5B2_get_node_depth_test':\n\u001b[0m\u001b[91mH5B2test.c:529:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n     ret_value = ninfo.depth;\n                      ^\n\u001b[0m  CC       H5C.lo\n\u001b[91mH5C.c: In function 'H5C_pin_protected_entry':\n\u001b[0m\u001b[91mH5C.c:3418:25: warning: variable 'cache_ptr' set but not used [-Wunused-but-set-variable]\n     H5C_t             * cache_ptr;\n                         ^\n\u001b[0m\u001b[91mH5C.c: At top level:\nH5C.c:285:1: warning: 'H5C_epoch_marker_notify' defined but not used [-Wunused-function]\n H5C_epoch_marker_notify(H5C_notify_action_t UNUSED action,\n ^\n\u001b[0m\u001b[91mH5C.c: In function 'H5C_stats__reset':\n\u001b[0m\u001b[91mH5C.c:4812:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5C_stats__reset(H5C_t UNUSED * cache_ptr)\n ^\n\u001b[0m\u001b[91mH5C.c: In function 'H5C_make_space_in_cache':\n\u001b[0m\u001b[91mH5C.c:8336:36: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n                 ( entries_examined <= initial_list_len )\n                                    ^\n\u001b[0m  CC       H5CS.lo\n  CC       H5D.lo\n  CC       H5Dbtree.lo\n  CC       H5Dchunk.lo\n\u001b[91mH5Dchunk.c: In function 'H5D__chunk_io_init':\nH5Dchunk.c:742:60: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     if((file_space_normalized = H5S_hyper_normalize_offset((H5S_t *)file_space, old_offset)) < 0)\n                                                            ^\n\u001b[0m\u001b[91mH5Dchunk.c:972:41: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if(H5S_hyper_denormalize_offset((H5S_t *)file_space, old_offset) < 0)\n                                         ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__create_chunk_map_single':\n\u001b[0m\u001b[91mH5Dchunk.c:1192:26: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     chunk_info->mspace = (H5S_t *)fm->mem_space;\n                          ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__create_chunk_file_map_hyper':\n\u001b[0m\u001b[91mH5Dchunk.c:1259:46: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if(TRUE == H5S_hyper_intersect_block((H5S_t *)fm->file_space, coords, end)) {\n                                              ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__create_chunk_mem_map_hyper':\n\u001b[0m\u001b[91mH5Dchunk.c:1427:30: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         chunk_info->mspace = (H5S_t *)fm->mem_space;\n                              ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__chunk_allocate':\n\u001b[0m\u001b[91mH5Dchunk.c:3348:17: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n                 (void *)pline, (H5MM_free_t)H5D__chunk_xfree, (void *)pline,\n                 ^\n\u001b[0m\u001b[91mH5Dchunk.c:3348:63: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n                 (void *)pline, (H5MM_free_t)H5D__chunk_xfree, (void *)pline,\n                                                               ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__chunk_prune_fill':\n\u001b[0m\u001b[91mH5Dchunk.c:3790:20: warning: size of 'chunk_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t chunk_iter;          /* Memory selection iteration info */\n                    ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__chunk_copy':\n\u001b[0m\u001b[91mH5Dchunk.c:4840:9: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n         if(NULL == (dt_mem = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))\n         ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Dchunk.c:57:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Dchunk.c:4848:9: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n         if(NULL == (dt_dst = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))\n         ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Dchunk.c:57:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Dchunk.c: In function 'H5D__chunk_dest':\n\u001b[0m\u001b[91mH5Dchunk.c:5177:20: warning: request for implicit conversion from 'void *' to 'struct H5D_rdcc_ent_t **' not permitted in C++ [-Wc++-compat]\n         rdcc->slot = H5FL_SEQ_FREE(H5D_rdcc_ent_ptr_t, rdcc->slot);\n                    ^\n\u001b[0m  CC       H5Dcompact.lo\n  CC       H5Dcontig.lo\n\u001b[91mH5Dcontig.c: In function 'H5D__contig_is_space_alloc':\n\u001b[0m\u001b[91mH5Dcontig.c:471:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5D__contig_is_space_alloc(const H5O_storage_t *storage)\n ^\n\u001b[0m  CC       H5Ddbg.lo\n  CC       H5Ddeprec.lo\n  CC       H5Defl.lo\n\u001b[91mIn file included from H5Cprivate.h:37:0,\n                 from H5ACprivate.h:35,\n                 from H5Oprivate.h:38,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Defl.c:32:\nH5Defl.c: In function 'H5D__efl_read':\n\u001b[0m\u001b[91mH5Defl.c:292:42: warning: conversion to 'long long unsigned int' from 'off_t' may change the sign of the result [-Wsign-conversion]\n  if(H5F_OVERFLOW_HSIZET2OFFT(efl->slot[u].offset + skip))\n                                          ^\nH5Fprivate.h:346:16: note: in definition of macro 'H5F_OVERFLOW_HSIZET2OFFT'\n     ((hsize_t)(X)>=(hsize_t)((hsize_t)1<<(8*sizeof(off_t)-1)))\n                ^\n\u001b[0m\u001b[91mIn file included from H5Defl.c:31:0:\nH5Defl.c:296:37: warning: conversion to 'long long unsigned int' from 'off_t' may change the sign of the result [-Wsign-conversion]\n  if(HDlseek(fd, (off_t)(efl->slot[u].offset + skip), SEEK_SET) < 0)\n                                     ^\nH5private.h:953:43: note: in definition of macro 'HDlseek'\n         #define HDlseek(F,O,W)  lseek64(F,O,W)\n                                           ^\n\u001b[0m\u001b[91mIn file included from H5Cprivate.h:37:0,\n                 from H5ACprivate.h:35,\n                 from H5Oprivate.h:38,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Defl.c:32:\nH5Defl.c: In function 'H5D__efl_write':\n\u001b[0m\u001b[91mH5Defl.c:378:42: warning: conversion to 'long long unsigned int' from 'off_t' may change the sign of the result [-Wsign-conversion]\n  if(H5F_OVERFLOW_HSIZET2OFFT(efl->slot[u].offset + skip))\n                                          ^\nH5Fprivate.h:346:16: note: in definition of macro 'H5F_OVERFLOW_HSIZET2OFFT'\n     ((hsize_t)(X)>=(hsize_t)((hsize_t)1<<(8*sizeof(off_t)-1)))\n                ^\n\u001b[0m\u001b[91mIn file included from H5Defl.c:31:0:\nH5Defl.c:386:37: warning: conversion to 'long long unsigned int' from 'off_t' may change the sign of the result [-Wsign-conversion]\n  if(HDlseek(fd, (off_t)(efl->slot[u].offset + skip), SEEK_SET) < 0)\n                                     ^\nH5private.h:953:43: note: in definition of macro 'HDlseek'\n         #define HDlseek(F,O,W)  lseek64(F,O,W)\n                                           ^\n\u001b[0m\u001b[91mH5Defl.c: In function 'H5D__efl_is_space_alloc':\nH5Defl.c:201:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5D__efl_is_space_alloc(const H5O_storage_t UNUSED *storage)\n ^\n\u001b[0m  CC       H5Dfill.lo\n\u001b[91mH5Dfill.c: In function 'H5D__fill':\nH5Dfill.c:234:13: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n             if((src_id = H5I_register(H5I_DATATYPE, H5T_copy(fill_type, H5T_COPY_ALL), FALSE)) < 0)\n             ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Dfill.c:37:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\nH5Dfill.c:237:13: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n             if((dst_id = H5I_register(H5I_DATATYPE, H5T_copy(buf_type, H5T_COPY_ALL), FALSE)) < 0)\n             ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Dfill.c:37:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Dfill.c:248:28: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]\n             H5S_sel_iter_t mem_iter;            /* Memory selection iteration info */\n                            ^\n\u001b[0m\u001b[91mH5Dfill.c: In function 'H5D__fill_init':\n\u001b[0m\u001b[91mH5Dfill.c:407:13: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n             if(NULL == (fb_info->mem_type = H5T_copy(dset_type, H5T_COPY_REOPEN)))\n             ^\n\u001b[0m\u001b[91mIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Dfill.c:37:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m  CC       H5Dint.lo\n\u001b[91mH5Dint.c: In function 'H5D__init_type':\n\u001b[0m\u001b[91mH5Dint.c:638:9: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n         if((dset->shared->type = H5T_copy(type, H5T_COPY_ALL)) == NULL)\n         ^\n\u001b[0m\u001b[91mIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Dpkg.h:32,\n                 from H5Dint.c:30:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Dint.c:661:30: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         dset->shared->type = (H5T_t *)type; /* (Cast away const OK - QAK) */\n                              ^\n\u001b[0m\u001b[91mH5Dint.c: In function 'H5D_oloc':\n\u001b[0m\u001b[91mH5Dint.c:1523:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5D_oloc(H5D_t *dataset)\n ^\n\u001b[0m\u001b[91mH5Dint.c: In function 'H5D_nameof':\n\u001b[0m\u001b[91mH5Dint.c:1546:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5D_nameof(H5D_t *dataset)\n ^\n\u001b[0m\u001b[91mH5Dint.c: In function 'H5D_typeof':\n\u001b[0m\u001b[91mH5Dint.c:1570:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5D_typeof(const H5D_t *dset)\n ^\n\u001b[0m  CC       H5Dio.lo\n\u001b[91mH5Dio.c: In function 'H5D__read':\nH5Dio.c:377:21: warning: size of 'fm' is 2864 bytes [-Wlarger-than=]\n     H5D_chunk_map_t fm;                 /* Chunk file<->memory mapping */\n                     ^\n\u001b[0m\u001b[91mH5Dio.c:477:66: warning: to be safe all intermediate pointers in cast from 'void **' to 'const void **' must be 'const' qualified [-Wcast-qual]\n                 (unsigned)H5S_GET_EXTENT_NDIMS(file_space), buf, (const void **)&adj_buf, type_info.dst_type_size) < 0)\n                                                                  ^\n\u001b[0m\u001b[91mH5Dio.c: In function 'H5D__write':\n\u001b[0m\u001b[91mH5Dio.c:592:21: warning: size of 'fm' is 2864 bytes [-Wlarger-than=]\n     H5D_chunk_map_t fm;                 /* Chunk file<->memory mapping */\n                     ^\n\u001b[0m\u001b[91mH5Dio.c:731:66: warning: to be safe all intermediate pointers in cast from 'void **' to 'const void **' must be 'const' qualified [-Wcast-qual]\n                 (unsigned)H5S_GET_EXTENT_NDIMS(file_space), buf, (const void **)&adj_buf, type_info.src_type_size) < 0)\n                                                                  ^\n\u001b[0m  CC       H5Dlayout.lo\n  CC       H5Dmpio.lo\n  CC       H5Doh.lo\n  CC       H5Dscatgath.lo\n\u001b[91mH5Dscatgath.c: In function 'H5D__scatter_file':\nH5Dscatgath.c:100:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t _off[H5D_IO_VECTOR_SIZE];             /* Array to store sequence offsets */\n             ^\nH5Dscatgath.c:105:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]\n     size_t _len[H5D_IO_VECTOR_SIZE];              /* Array to store sequence lengths */\n            ^\n\u001b[0m\u001b[91mH5Dscatgath.c:164:13: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         len = H5FL_SEQ_FREE(size_t, len);\n             ^\nH5Dscatgath.c:166:13: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         off = H5FL_SEQ_FREE(hsize_t, off);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__gather_file':\n\u001b[0m\u001b[91mH5Dscatgath.c:199:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t _off[H5D_IO_VECTOR_SIZE];   /* Array to store sequence offsets */\n             ^\nH5Dscatgath.c:204:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]\n     size_t _len[H5D_IO_VECTOR_SIZE];    /* Array to store sequence lengths */\n            ^\n\u001b[0m\u001b[91mH5Dscatgath.c:265:13: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         len = H5FL_SEQ_FREE(size_t, len);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c:267:13: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         off = H5FL_SEQ_FREE(hsize_t, off);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__scatter_mem':\n\u001b[0m\u001b[91mH5Dscatgath.c:295:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t _off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c:297:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]\n     size_t _len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */\n            ^\n\u001b[0m\u001b[91mH5Dscatgath.c:350:13: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         len = H5FL_SEQ_FREE(size_t, len);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c:352:13: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         off = H5FL_SEQ_FREE(hsize_t, off);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__gather_mem':\n\u001b[0m\u001b[91mH5Dscatgath.c:382:13: warning: size of '_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t _off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c:384:12: warning: size of '_len' is 8192 bytes [-Wlarger-than=]\n     size_t _len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */\n            ^\n\u001b[0m\u001b[91mH5Dscatgath.c:437:13: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         len = H5FL_SEQ_FREE(size_t, len);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c:439:13: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         off = H5FL_SEQ_FREE(hsize_t, off);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__scatgath_read':\n\u001b[0m\u001b[91mH5Dscatgath.c:463:20: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t mem_iter;            /*memory selection iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c:465:20: warning: size of 'bkg_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t bkg_iter;            /*background iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c:467:20: warning: size of 'file_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t file_iter;           /*file selection iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__scatgath_write':\n\u001b[0m\u001b[91mH5Dscatgath.c:595:20: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t mem_iter;            /*memory selection iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c:597:20: warning: size of 'bkg_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t bkg_iter;            /*background iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c:599:20: warning: size of 'file_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t file_iter;           /*file selection iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__compound_opt_read':\n\u001b[0m\u001b[91mH5Dscatgath.c:747:16: warning: size of '_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t    _off[H5D_IO_VECTOR_SIZE];        /* Array to store sequence offsets */\n                ^\n\u001b[0m\u001b[91mH5Dscatgath.c:749:16: warning: size of '_len' is 8192 bytes [-Wlarger-than=]\n     size_t     _len[H5D_IO_VECTOR_SIZE];        /* Array to store sequence lengths */\n                ^\n\u001b[0m\u001b[91mH5Dscatgath.c:831:13: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         len = H5FL_SEQ_FREE(size_t, len);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c:833:13: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         off = H5FL_SEQ_FREE(hsize_t, off);\n             ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5Dscatter':\n\u001b[0m\u001b[91mH5Dscatgath.c:926:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t iter;        /* Selection iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5Dgather':\n\u001b[0m\u001b[91mH5Dscatgath.c:1026:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t iter;        /* Selection iteration info*/\n                    ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__gather_file':\nH5Dscatgath.c:194:1: warning: stack usage is 16800 bytes [-Wstack-usage=]\n H5D__gather_file(const H5D_io_info_t *_io_info,\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c:270:1: warning: the frame size of 16712 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n } /* H5D__gather_file() */\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__gather_mem.isra.0':\nH5Dscatgath.c:376:1: warning: stack usage is 16576 bytes [-Wstack-usage=]\n H5D__gather_mem(const void *_buf, const H5S_t *space,\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c:442:1: warning: the frame size of 16488 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }   /* H5D__gather_mem() */\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__scatter_mem':\nH5Dscatgath.c:289:1: warning: stack usage is 16576 bytes [-Wstack-usage=]\n H5D__scatter_mem (const void *_tscat_buf, const H5S_t *space,\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c:355:1: warning: the frame size of 16480 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }   /* H5D__scatter_mem() */\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__scatgath_read':\nH5Dscatgath.c:458:1: warning: stack usage is 23392 bytes [-Wstack-usage=]\n H5D__scatgath_read(const H5D_io_info_t *io_info, const H5D_type_info_t *type_info,\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c:574:1: warning: the frame size of 23304 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n } /* end H5D__scatgath_read() */\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c: In function 'H5D__scatgath_write':\nH5Dscatgath.c:590:1: warning: stack usage is 23600 bytes [-Wstack-usage=]\n H5D__scatgath_write(const H5D_io_info_t *io_info, const H5D_type_info_t *type_info,\n ^\n\u001b[0m\u001b[91mH5Dscatgath.c:705:1: warning: the frame size of 23512 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n } /* end H5D__scatgath_write() */\n ^\n\u001b[0m  CC       H5Dselect.lo\n\u001b[91mH5Dselect.c: In function 'H5D__select_io':\nH5Dselect.c:89:20: warning: size of 'mem_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t mem_iter;    /* Memory selection iteration info */\n                    ^\nH5Dselect.c:91:20: warning: size of 'file_iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t file_iter;   /* File selection iteration info */\n                    ^\nH5Dselect.c:93:13: warning: size of '_mem_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t _mem_off[H5D_IO_VECTOR_SIZE];      /* Array to store sequence offsets in memory */\n             ^\n\u001b[0m\u001b[91mH5Dselect.c:95:13: warning: size of '_file_off' is 8192 bytes [-Wlarger-than=]\n     hsize_t _file_off[H5D_IO_VECTOR_SIZE];     /* Array to store sequence offsets in the file */\n             ^\nH5Dselect.c:97:12: warning: size of '_mem_len' is 8192 bytes [-Wlarger-than=]\n     size_t _mem_len[H5D_IO_VECTOR_SIZE];       /* Array to store sequence lengths in memory */\n            ^\n\u001b[0m\u001b[91mH5Dselect.c:99:12: warning: size of '_file_len' is 8192 bytes [-Wlarger-than=]\n     size_t _file_len[H5D_IO_VECTOR_SIZE];      /* Array to store sequence lengths in the file */\n            ^\n\u001b[0m\u001b[91mH5Dselect.c:242:18: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         file_len = H5FL_SEQ_FREE(size_t, file_len);\n                  ^\n\u001b[0m\u001b[91mH5Dselect.c:244:18: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         file_off = H5FL_SEQ_FREE(hsize_t, file_off);\n                  ^\n\u001b[0m\u001b[91mH5Dselect.c:246:17: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n         mem_len = H5FL_SEQ_FREE(size_t, mem_len);\n                 ^\nH5Dselect.c:248:17: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n         mem_off = H5FL_SEQ_FREE(hsize_t, mem_off);\n                 ^\n\u001b[0m\u001b[91mH5Dselect.c:86:1: warning: stack usage is 37504 bytes [-Wstack-usage=]\n H5D__select_io(const H5D_io_info_t *io_info, size_t elmt_size,\n ^\n\u001b[0m\u001b[91mH5Dselect.c:251:1: warning: the frame size of 37416 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n } /* end H5D__select_io() */\n ^\n\u001b[0m  CC       H5Dtest.lo\n  CC       H5E.lo\n\u001b[91mH5E.c: In function 'H5Epush2':\nH5E.c:1391:5: warning: implicit declaration of function 'vasprintf' [-Wimplicit-function-declaration]\n     if(HDvasprintf(&tmp, fmt, ap) < 0)\n     ^\nH5E.c:1391:5: warning: nested extern declaration of 'vasprintf' [-Wnested-externs]\n\u001b[0m  CC       H5Edeprec.lo\n  CC       H5Eint.lo\n\u001b[91mH5Eint.c: In function 'H5E_printf_stack':\nH5Eint.c:735:5: warning: implicit declaration of function 'vasprintf' [-Wimplicit-function-declaration]\n     if(HDvasprintf(&tmp, fmt, ap) < 0)\n     ^\nH5Eint.c:735:5: warning: nested extern declaration of 'vasprintf' [-Wnested-externs]\n\u001b[0m\u001b[91mH5Eint.c: In function 'H5E_clear_entries':\n\u001b[0m\u001b[91mH5Eint.c:915:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             H5MM_xfree((void *)error->func_name);        /* Casting away const OK - QAK */\n                        ^\n\u001b[0m\u001b[91mH5Eint.c:917:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             H5MM_xfree((void *)error->file_name);        /* Casting away const OK - QAK */\n                        ^\n\u001b[0m\u001b[91mH5Eint.c:919:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             H5MM_xfree((void *)error->desc);     /* Casting away const OK - QAK */\n                        ^\n\u001b[0m\u001b[91mH5Eint.c: In function 'H5E_walk':\nH5Eint.c:570:53: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 for(i = (int)(estack->nused - 1); i >= 0 && status >= 0; i--) {\n                                                     ^\nH5Eint.c:600:53: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 for(i = (int)(estack->nused - 1); i >= 0 && status >= 0; i--)\n                                                     ^\n\u001b[0m  CC       H5F.lo\n  CC       H5Fint.lo\n\u001b[91mH5Fint.c: In function 'H5F_build_actual_name':\n\u001b[0m\u001b[91mH5Fint.c:1572:18: warning: size of 'realname' is 4096 bytes [-Wlarger-than=]\n             char realname[PATH_MAX];    /* Fully resolved path name of file */\n                  ^\n\u001b[0m  CC       H5Faccum.lo\n  CC       H5Fcwfs.lo\n  CC       H5Fdbg.lo\n\u001b[91mH5Fdbg.c: In function 'H5F_debug':\n\u001b[0m\u001b[91mH5Fdbg.c:126:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             H5G__ent_debug(f->shared->sblock->root_ent, stream, indent + 3, MAX(0, fwidth - 3), NULL);\n             ^\n\u001b[0m\u001b[91mH5Fdbg.c:141:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             H5G__ent_debug(&root_ent, stream, indent + 3, MAX(0, fwidth - 3), NULL);\n             ^\n\u001b[0m  CC       H5Fefc.lo\n\u001b[91mH5Fefc.c: In function 'H5F_efc_max_nfiles':\nH5Fefc.c:396:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_efc_max_nfiles(H5F_efc_t *efc)\n ^\n\u001b[0m  CC       H5Ffake.lo\n  CC       H5Fio.lo\n  CC       H5Fmount.lo\n\u001b[91mH5Fmount.c: In function 'H5F_is_mount':\nH5Fmount.c:440:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_is_mount(const H5F_t *file)\n ^\n\u001b[0m  CC       H5Fmpi.lo\n  CC       H5Fquery.lo\n\u001b[91mH5Fquery.c: In function 'H5F_get_intent':\nH5Fquery.c:94:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_intent(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_open_name':\nH5Fquery.c:119:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_open_name(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_actual_name':\nH5Fquery.c:145:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_actual_name(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_extpath':\n\u001b[0m\u001b[91mH5Fquery.c:171:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_extpath(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_shared':\n\u001b[0m\u001b[91mH5Fquery.c:195:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_shared(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_same_shared':\n\u001b[0m\u001b[91mH5Fquery.c:218:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_same_shared(const H5F_t *f1, const H5F_t *f2)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_nopen_objs':\n\u001b[0m\u001b[91mH5Fquery.c:244:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_nopen_objs(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_file_id':\n\u001b[0m\u001b[91mH5Fquery.c:267:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_file_id(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_parent':\n\u001b[0m\u001b[91mH5Fquery.c:290:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_parent(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_nmounts':\n\u001b[0m\u001b[91mH5Fquery.c:313:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_nmounts(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_fcpl':\n\u001b[0m\u001b[91mH5Fquery.c:340:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_fcpl(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_sizeof_addr':\n\u001b[0m\u001b[91mH5Fquery.c:367:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_sizeof_addr(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_sizeof_size':\n\u001b[0m\u001b[91mH5Fquery.c:394:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_sizeof_size(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_sohm_addr':\n\u001b[0m\u001b[91mH5Fquery.c:418:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_sohm_addr(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_sohm_vers':\n\u001b[0m\u001b[91mH5Fquery.c:442:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_sohm_vers(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_sohm_nindexes':\n\u001b[0m\u001b[91mH5Fquery.c:466:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_sohm_nindexes(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_sym_leaf_k':\n\u001b[0m\u001b[91mH5Fquery.c:497:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_sym_leaf_k(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_Kvalue':\n\u001b[0m\u001b[91mH5Fquery.c:529:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_Kvalue(const H5F_t *f, const H5B_class_t *type)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_nrefs':\n\u001b[0m\u001b[91mH5Fquery.c:555:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_nrefs(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_rdcc_nslots':\n\u001b[0m\u001b[91mH5Fquery.c:586:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_rdcc_nslots(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_rdcc_nbytes':\n\u001b[0m\u001b[91mH5Fquery.c:617:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_rdcc_nbytes(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_rdcc_w0':\n\u001b[0m\u001b[91mH5Fquery.c:648:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_rdcc_w0(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_base_addr':\n\u001b[0m\u001b[91mH5Fquery.c:675:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_base_addr(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_grp_btree_shared':\n\u001b[0m\u001b[91mH5Fquery.c:707:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_grp_btree_shared(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_sieve_buf_size':\n\u001b[0m\u001b[91mH5Fquery.c:738:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_sieve_buf_size(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_gc_ref':\n\u001b[0m\u001b[91mH5Fquery.c:769:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_gc_ref(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_use_latest_format':\n\u001b[0m\u001b[91mH5Fquery.c:798:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_use_latest_format(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_fc_degree':\n\u001b[0m\u001b[91mH5Fquery.c:826:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_fc_degree(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_store_msg_crt_idx':\n\u001b[0m\u001b[91mH5Fquery.c:854:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_store_msg_crt_idx(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_has_feature':\n\u001b[0m\u001b[91mH5Fquery.c:881:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_has_feature(const H5F_t *f, unsigned feature)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_get_driver_id':\n\u001b[0m\u001b[91mH5Fquery.c:908:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_get_driver_id(const H5F_t *f)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_is_tmp_addr':\n\u001b[0m\u001b[91mH5Fquery.c:1037:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_is_tmp_addr(const H5F_t *f, haddr_t addr)\n ^\n\u001b[0m\u001b[91mH5Fquery.c: In function 'H5F_use_tmp_space':\n\u001b[0m\u001b[91mH5Fquery.c:1065:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5F_use_tmp_space(const H5F_t *f)\n ^\n\u001b[0m  CC       H5Fsfile.lo\n\u001b[91mH5Fsfile.c: In function 'H5F_sfile_assert_num':\nH5Fsfile.c:57:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5F_sfile_assert_num(unsigned n)\n ^\n\u001b[0m  CC       H5Fsuper.lo\n  CC       H5Fsuper_cache.lo\n\u001b[91mH5Fsuper_cache.c: In function 'H5F_sblock_load':\nH5Fsuper_cache.c:282:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->base_addr/*out*/);\n                            ^\nH5Fsuper_cache.c:283:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->ext_addr/*out*/);\n                            ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:284:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &stored_eoa/*out*/);\n                            ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:285:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->driver_addr/*out*/);\n                            ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:293:30: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         if(H5G_ent_decode(f, (const uint8_t **)&p, sblock->root_ent) < 0)\n                              ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:414:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->base_addr/*out*/);\n                            ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:415:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->ext_addr/*out*/);\n                            ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:416:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &stored_eoa/*out*/);\n                            ^\n\u001b[0m\u001b[91mH5Fsuper_cache.c:417:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->root_addr/*out*/);\n                            ^\n\u001b[0m  CC       H5Ftest.lo\n  CC       H5FD.lo\n\u001b[91mH5FD.c: In function 'H5FD_get_base_addr':\n\u001b[0m\u001b[91mH5FD.c:2052:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5FD_get_base_addr(const H5FD_t *file)\n ^\n\u001b[0m  CC       H5FDcore.lo\n  CC       H5FDdirect.lo\n\u001b[91mIn file included from H5FDdirect.c:32:0:\nH5private.h:1795:15: warning: 'H5_interface_initialize_g' defined but not used [-Wunused-variable]\n static int    H5_interface_initialize_g = 0;\n               ^\n\u001b[0m\u001b[91mH5FDdirect.c:26:33: warning: 'H5FD_direct_init_interface' declared 'static' but never defined [-Wunused-function]\n #define H5_INTERFACE_INIT_FUNC  H5FD_direct_init_interface\n                                 ^\nH5private.h:1796:18: note: in expansion of macro 'H5_INTERFACE_INIT_FUNC'\n static herr_t    H5_INTERFACE_INIT_FUNC(void);\n                  ^\n\u001b[0m  CC       H5FDfamily.lo\n\u001b[91mH5FDfamily.c: In function 'H5FD_family_open':\n\u001b[0m\u001b[91mH5FDfamily.c:649:11: warning: size of 'memb_name' is 4096 bytes [-Wlarger-than=]\n     char  memb_name[4096], temp[4096];\n           ^\n\u001b[0m\u001b[91mH5FDfamily.c:649:28: warning: size of 'temp' is 4096 bytes [-Wlarger-than=]\n     char  memb_name[4096], temp[4096];\n                            ^\n\u001b[0m\u001b[91mH5FDfamily.c:711:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(memb_name, sizeof(memb_name), name, 0);\n     ^\nH5FDfamily.c:711:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mH5FDfamily.c:712:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(temp, sizeof(temp), name, 1);\n     ^\nH5FDfamily.c:712:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mH5FDfamily.c:718:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n         HDsnprintf(memb_name, sizeof(memb_name), name, file->nmembs);\n         ^\nH5FDfamily.c:718:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mH5FDfamily.c: In function 'H5FD_family_cmp':\n\u001b[0m\u001b[91mH5FDfamily.c:870:1: warning: label 'done' defined but not used [-Wunused-label]\n done:\n ^\n\u001b[0m\u001b[91mH5FDfamily.c: In function 'H5FD_family_set_eoa':\n\u001b[0m\u001b[91mH5FDfamily.c:970:11: warning: size of 'memb_name' is 4096 bytes [-Wlarger-than=]\n     char  memb_name[4096];\n           ^\n\u001b[0m\u001b[91mH5FDfamily.c:993:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n             HDsnprintf(memb_name, sizeof(memb_name), file->name, u);\n             ^\nH5FDfamily.c:993:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mH5FDfamily.c: In function 'H5FD_family_open':\nH5FDfamily.c:644:1: warning: stack usage is 8352 bytes [-Wstack-usage=]\n H5FD_family_open(const char *name, unsigned flags, hid_t fapl_id,\n ^\n\u001b[0m  CC       H5FDint.lo\n  CC       H5FDlog.lo\n\u001b[91mH5FDlog.c: In function 'H5Pset_fapl_log':\n\u001b[0m\u001b[91mH5FDlog.c:330:18: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     fa.logfile = (char *)logfile;\n                  ^\n\u001b[0m\u001b[91mH5FDlog.c: In function 'H5FD_log_open':\nH5FDlog.c:627:95: warning: 'stat_timeval_diff.tv_usec' may be used uninitialized in this function [-Wmaybe-uninitialized]\n             HDfprintf(file->logfp, \"Stat took: (%f s)\\n\", (double)stat_timeval_diff.tv_sec + ((double)stat_timeval_diff.tv_usec / (double)1000000.0f));\n                                                                                               ^\n\u001b[0m\u001b[91mH5FDlog.c:627:59: warning: 'stat_timeval_diff.tv_sec' may be used uninitialized in this function [-Wmaybe-uninitialized]\n             HDfprintf(file->logfp, \"Stat took: (%f s)\\n\", (double)stat_timeval_diff.tv_sec + ((double)stat_timeval_diff.tv_usec / (double)1000000.0f));\n                                                           ^\n\u001b[0m\u001b[91mH5FDlog.c:625:95: warning: 'open_timeval_diff.tv_usec' may be used uninitialized in this function [-Wmaybe-uninitialized]\n             HDfprintf(file->logfp, \"Open took: (%f s)\\n\", (double)open_timeval_diff.tv_sec + ((double)open_timeval_diff.tv_usec / (double)1000000.0f));\n                                                                                               ^\n\u001b[0m\u001b[91mH5FDlog.c:625:59: warning: 'open_timeval_diff.tv_sec' may be used uninitialized in this function [-Wmaybe-uninitialized]\n             HDfprintf(file->logfp, \"Open took: (%f s)\\n\", (double)open_timeval_diff.tv_sec + ((double)open_timeval_diff.tv_usec / (double)1000000.0f));\n                                                           ^\n\u001b[0m  CC       H5FDmpi.lo\n  CC       H5FDmpio.lo\n\u001b[91mIn file included from H5FDmpio.c:28:0:\nH5private.h:1795:15: warning: 'H5_interface_initialize_g' defined but not used [-Wunused-variable]\n static int    H5_interface_initialize_g = 0;\n               ^\n\u001b[0m\u001b[91mH5FDmpio.c:25:33: warning: 'H5FD_mpio_init_interface' declared 'static' but never defined [-Wunused-function]\n #define H5_INTERFACE_INIT_FUNC  H5FD_mpio_init_interface\n                                 ^\nH5private.h:1796:18: note: in expansion of macro 'H5_INTERFACE_INIT_FUNC'\n static herr_t    H5_INTERFACE_INIT_FUNC(void);\n                  ^\n\u001b[0m  CC       H5FDmulti.lo\n\u001b[91mH5FDmulti.c: In function 'H5FD_multi_read':\n\u001b[0m\u001b[91mH5FDmulti.c:1657:55: warning: unused parameter 'dxpl_id' [-Wunused-parameter]\n H5FD_multi_read(H5FD_t *_file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,\n                                                       ^\n\u001b[0m\u001b[91mH5FDmulti.c: In function 'H5FD_multi_write':\n\u001b[0m\u001b[91mH5FDmulti.c:1708:56: warning: unused parameter 'dxpl_id' [-Wunused-parameter]\n H5FD_multi_write(H5FD_t *_file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,\n                                                        ^\n\u001b[0m\u001b[91mH5FDmulti.c: In function 'compute_next':\n\u001b[0m\u001b[91mH5FDmulti.c:59:16: warning: declaration of '_unmapped' shadows a previous local [-Wshadow]\n     H5FD_mem_t _unmapped, LOOPVAR;           \\\n                ^\nH5FDmulti.c:1882:2: note: in expansion of macro 'UNIQUE_MEMBERS'\n  UNIQUE_MEMBERS(file->fa.memb_map, mt2) {\n  ^\n\u001b[0m\u001b[91mH5FDmulti.c:59:16: warning: shadowed declaration is here [-Wshadow]\n     H5FD_mem_t _unmapped, LOOPVAR;           \\\n                ^\nH5FDmulti.c:1881:5: note: in expansion of macro 'UNIQUE_MEMBERS'\n     UNIQUE_MEMBERS(file->fa.memb_map, mt1) {\n     ^\n\u001b[0m\u001b[91mH5FDmulti.c:60:13: warning: declaration of '_seen' shadows a previous local [-Wshadow]\n     hbool_t _seen[H5FD_MEM_NTYPES];           \\\n             ^\nH5FDmulti.c:1882:2: note: in expansion of macro 'UNIQUE_MEMBERS'\n  UNIQUE_MEMBERS(file->fa.memb_map, mt2) {\n  ^\n\u001b[0m\u001b[91mH5FDmulti.c:60:13: warning: shadowed declaration is here [-Wshadow]\n     hbool_t _seen[H5FD_MEM_NTYPES];           \\\n             ^\nH5FDmulti.c:1881:5: note: in expansion of macro 'UNIQUE_MEMBERS'\n     UNIQUE_MEMBERS(file->fa.memb_map, mt1) {\n     ^\n\u001b[0m\u001b[91mH5FDmulti.c: In function 'open_members':\n\u001b[0m\u001b[91mH5FDmulti.c:1931:2: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n  sprintf(tmp, file->fa.memb_name[mt], file->name);\n  ^\n\u001b[0m  CC       H5FDsec2.lo\n  CC       H5FDspace.lo\n  CC       H5FDstdio.lo\n  CC       H5FL.lo\n  CC       H5FO.lo\n  CC       H5FS.lo\n\u001b[91mH5FS.c: In function 'H5FS_new':\nH5FS.c:540:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     fspace->nclasses = nclasses;\n     ^\n\u001b[0m\u001b[91mIn file included from H5FS.c:38:0:\nH5FSpkg.h:79:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + H5F_SIZEOF_SIZE(f) /* Allocated size of serialized free space sections */ \\\n     ^\nH5FS.c:566:24: note: in expansion of macro 'H5FS_HEADER_SIZE'\n     fspace->hdr_size = H5FS_HEADER_SIZE(f);\n                        ^\n\u001b[0m\u001b[91mH5FS.c: In function 'H5FS_size':\n\u001b[0m\u001b[91mH5FS.c:601:24: warning: unused parameter 'f' [-Wunused-parameter]\n H5FS_size(const H5F_t *f, const H5FS_t *fspace, hsize_t *meta_size)\n                        ^\n\u001b[0m\u001b[91mH5FS.c: In function 'H5FS_sinfo_dest':\n\u001b[0m\u001b[91mH5FS.c:892:17: warning: request for implicit conversion from 'void *' to 'struct H5FS_bin_t *' not permitted in C++ [-Wc++-compat]\n     sinfo->bins = H5FL_SEQ_FREE(H5FS_bin_t, sinfo->bins);\n                 ^\n\u001b[0m  CC       H5FScache.lo\n\u001b[91mH5FScache.c: In function 'H5FS_cache_sinfo_load':\n\u001b[0m\u001b[91mH5FScache.c:618:17: warning: variable 'old_tot_space' set but not used [-Wunused-but-set-variable]\n         hsize_t old_tot_space;          /* Total space managed from header */\n                 ^\n\u001b[0m\u001b[91mH5FScache.c:617:17: warning: variable 'old_ghost_sect_count' set but not used [-Wunused-but-set-variable]\n         hsize_t old_ghost_sect_count;   /* Total ghost section count from header */\n                 ^\n\u001b[0m\u001b[91mH5FScache.c:616:17: warning: variable 'old_serial_sect_count' set but not used [-Wunused-but-set-variable]\n         hsize_t old_serial_sect_count;  /* Total serializable section count from header */\n                 ^\n\u001b[0m\u001b[91mH5FScache.c:615:17: warning: variable 'old_tot_sect_count' set but not used [-Wunused-but-set-variable]\n         hsize_t old_tot_sect_count;     /* Total section count from header */\n                 ^\n\u001b[0m  CC       H5FSdbg.lo\n\u001b[91mH5FSdbg.c: In function 'H5FS_sects_debug':\nH5FSdbg.c:288:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if(H5HF_sects_debug(f, dxpl_id, client_addr, stream, indent + 3, MAX(0, fwidth - 3)) < 0)\n             ^\n\u001b[0m  CC       H5FSsection.lo\n\u001b[91mH5FSsection.c: In function 'H5FS_sinfo_new':\nH5FSsection.c:147:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     sinfo->sect_prefix_size = (size_t)H5FS_SINFO_PREFIX_SIZE(f);\n                               ^\n\u001b[0m\u001b[91mH5FSsection.c:178:25: warning: request for implicit conversion from 'void *' to 'struct H5FS_bin_t *' not permitted in C++ [-Wc++-compat]\n             sinfo->bins = H5FL_SEQ_FREE(H5FS_bin_t, sinfo->bins);\n                         ^\n\u001b[0m\u001b[91mH5FSsection.c: In function 'H5FS_sect_try_shrink_eoa':\n\u001b[0m\u001b[91mH5FSsection.c:2338:5: warning: passing argument 1 of 'H5FS_sinfo_lock' discards 'const' qualifier from pointer target type [enabled by default]\n     if(H5FS_sinfo_lock(f, dxpl_id, fspace, H5AC_WRITE) < 0)\n     ^\nH5FSsection.c:207:1: note: expected 'struct H5F_t *' but argument is of type 'const struct H5F_t *'\n H5FS_sinfo_lock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, H5AC_protect_t accmode)\n ^\n\u001b[0m\u001b[91mH5FSsection.c:2338:5: warning: passing argument 3 of 'H5FS_sinfo_lock' discards 'const' qualifier from pointer target type [enabled by default]\n     if(H5FS_sinfo_lock(f, dxpl_id, fspace, H5AC_WRITE) < 0)\n     ^\nH5FSsection.c:207:1: note: expected 'struct H5FS_t *' but argument is of type 'const struct H5FS_t *'\n H5FS_sinfo_lock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, H5AC_protect_t accmode)\n ^\n\u001b[0m\u001b[91mH5FSsection.c:2362:7: warning: passing argument 1 of 'H5FS_sect_remove_real' discards 'const' qualifier from pointer target type [enabled by default]\n       if(H5FS_sect_remove_real(fspace, tmp_sect) < 0)\n       ^\n\u001b[0m\u001b[91mH5FSsection.c:859:1: note: expected 'struct H5FS_t *' but argument is of type 'const struct H5FS_t *'\n H5FS_sect_remove_real(H5FS_t *fspace, H5FS_section_info_t *sect)\n ^\n\u001b[0m\u001b[91mH5FSsection.c:2376:5: warning: passing argument 1 of 'H5FS_sinfo_unlock' discards 'const' qualifier from pointer target type [enabled by default]\n     if(sinfo_valid && H5FS_sinfo_unlock(f, dxpl_id, fspace, section_removed) < 0)\n     ^\n\u001b[0m\u001b[91mH5FSsection.c:313:1: note: expected 'struct H5F_t *' but argument is of type 'const struct H5F_t *'\n H5FS_sinfo_unlock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, hbool_t modified)\n ^\n\u001b[0m\u001b[91mH5FSsection.c:2376:5: warning: passing argument 3 of 'H5FS_sinfo_unlock' discards 'const' qualifier from pointer target type [enabled by default]\n     if(sinfo_valid && H5FS_sinfo_unlock(f, dxpl_id, fspace, section_removed) < 0)\n     ^\n\u001b[0m\u001b[91mH5FSsection.c:313:1: note: expected 'struct H5FS_t *' but argument is of type 'const struct H5FS_t *'\n H5FS_sinfo_unlock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, hbool_t modified)\n ^\n\u001b[0m  CC       H5FSstat.lo\n\u001b[91mH5FSstat.c: In function 'H5FS_stat_info':\nH5FSstat.c:99:23: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     stats->hdr_size = (size_t)H5FS_HEADER_SIZE(f);\n                       ^\n\u001b[0m  CC       H5FStest.lo\n\u001b[91mH5FStest.c: In function 'H5FS_cmp_cparam_test':\nH5FStest.c:118:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5FS_cmp_cparam_test(const H5FS_create_t *cparam1, const H5FS_create_t *cparam2)\n ^\n\u001b[0m  CC       H5G.lo\n  CC       H5Gbtree2.lo\n\u001b[91mH5Gbtree2.c: In function 'H5G_dense_btree2_name_compare':\nH5Gbtree2.c:266:16: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n         herr_t status;                  /* Status from fractal heap 'op' routine */\n                ^\n\u001b[0m  CC       H5Gcache.lo\n\u001b[91mIn file included from H5Gpkg.h:32:0,\n                 from H5Gcache.c:39:\nH5Gcache.c: In function 'H5G_node_load':\n\u001b[0m\u001b[91mH5Gprivate.h:54:7: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     4 +    /*reserved    */    \\\n       ^\nH5Gpkg.h:58:34: note: in expansion of macro 'H5G_SIZEOF_ENTRY'\n     + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \\\n                                  ^\nH5Gcache.c:148:22: note: in expansion of macro 'H5G_NODE_SIZE'\n     sym->node_size = H5G_NODE_SIZE(f);\n                      ^\n\u001b[0m\u001b[91mH5Gcache.c:123:60: warning: unused parameter 'udata' [-Wunused-parameter]\n H5G_node_load(H5F_t *f, hid_t dxpl_id, haddr_t addr, void *udata)\n                                                            ^\n\u001b[0m  CC       H5Gcompact.lo\n  CC       H5Gdense.lo\n\u001b[91mH5Gdense.c: In function 'H5G__dense_create':\n\u001b[0m\u001b[91mH5Gdense.c:325:30: warning: conversion to 'uint32_t' from 'size_t' may alter its value [-Wconversion]\n     bt2_cparam.rrec_size = 4 +          /* Name's hash value */\n                              ^\n\u001b[0m\u001b[91mH5Gdense.c:345:34: warning: conversion to 'uint32_t' from 'size_t' may alter its value [-Wconversion]\n         bt2_cparam.rrec_size = 8 +      /* Creation order value */\n                                  ^\n\u001b[0m  CC       H5Gdeprec.lo\n\u001b[91mH5Gdeprec.c: In function 'H5Gcreate1':\n\u001b[0m\u001b[91mH5Gdeprec.c:264:9: warning: conversion to 'uint32_t' from 'size_t' may alter its value [-Wconversion]\n         ginfo.lheap_size_hint = size_hint;\n         ^\n\u001b[0m\u001b[91mH5Gdeprec.c: In function 'H5G_map_obj_type':\nH5Gdeprec.c:169:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5G_map_obj_type(H5O_type_t obj_type)\n ^\n\u001b[0m  CC       H5Gent.lo\n\u001b[91mH5Gent.c: In function 'H5G__ent_copy':\n\u001b[0m\u001b[91mH5Gent.c:341:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         H5G__ent_reset((H5G_entry_t *)src);\n                        ^\n\u001b[0m\u001b[91mH5Gent.c: In function 'H5G__ent_debug':\n\u001b[0m\u001b[91mH5Gent.c:553:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     nested_fwidth = MAX(0, fwidth - 3);\n     ^\n\u001b[0m  CC       H5Gint.lo\n\u001b[91mH5Gint.c: In function 'H5G_oloc':\nH5Gint.c:578:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5G_oloc(H5G_t *grp)\n ^\n\u001b[0m\u001b[91mH5Gint.c: In function 'H5G_nameof':\n\u001b[0m\u001b[91mH5Gint.c:601:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5G_nameof(H5G_t *grp)\n ^\n\u001b[0m\u001b[91mH5Gint.c: In function 'H5G_fileof':\n\u001b[0m\u001b[91mH5Gint.c:625:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5G_fileof(H5G_t *grp)\n ^\n\u001b[0m\u001b[91mH5Gint.c: In function 'H5G_get_shared_count':\n\u001b[0m\u001b[91mH5Gint.c:649:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5G_get_shared_count(H5G_t *grp)\n ^\n\u001b[0m\u001b[91mH5Gint.c: In function 'H5G_mounted':\n\u001b[0m\u001b[91mH5Gint.c:701:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5G_mounted(H5G_t *grp)\n ^\n\u001b[0m  CC       H5Glink.lo\n  CC       H5Gloc.lo\n\u001b[91mH5Gloc.c: In function 'H5G__loc_insert':\nH5Gloc.c:580:16: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     lnk.name = (char *)name;\n                ^\n\u001b[0m\u001b[91mH5Gloc.c: In function 'H5G_loc_set_comment_cb':\n\u001b[0m\u001b[91mH5Gloc.c:793:14: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n  comment.s = (char *)udata->comment;\n              ^\n\u001b[0m  CC       H5Gname.lo\n\u001b[91mH5Gname.c: In function 'H5G_name_copy':\nH5Gname.c:537:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         H5G_name_reset((H5G_name_t *)src);\n                        ^\n\u001b[0m  CC       H5Gnode.lo\n\u001b[91mH5Gnode.c: In function 'H5G__node_free':\n\u001b[0m\u001b[91mH5Gnode.c:299:20: warning: request for implicit conversion from 'void *' to 'struct H5G_entry_t *' not permitted in C++ [-Wc++-compat]\n         sym->entry = H5FL_SEQ_FREE(H5G_entry_t, sym->entry);\n                    ^\n\u001b[0m\u001b[91mIn file included from H5Gpkg.h:32:0,\n                 from H5Gnode.c:45:\nH5Gnode.c: In function 'H5G_node_create':\n\u001b[0m\u001b[91mH5Gprivate.h:54:7: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     4 +    /*reserved    */    \\\n       ^\nH5Gpkg.h:58:34: note: in expansion of macro 'H5G_SIZEOF_ENTRY'\n     + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \\\n                                  ^\nH5Gnode.c:344:22: note: in expansion of macro 'H5G_NODE_SIZE'\n     sym->node_size = H5G_NODE_SIZE(f);\n                      ^\n\u001b[0m\u001b[91mH5Gnode.c:367:28: warning: request for implicit conversion from 'void *' to 'struct H5G_entry_t *' not permitted in C++ [-Wc++-compat]\n                 sym->entry = H5FL_SEQ_FREE(H5G_entry_t, sym->entry);\n                            ^\n\u001b[0m\u001b[91mH5Gnode.c: In function 'H5G_node_insert':\n\u001b[0m\u001b[91mH5Gnode.c:718:6: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n      idx -= H5F_SYM_LEAF_K(f);\n      ^\n\u001b[0m\u001b[91mH5Gnode.c:718:10: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n      idx -= H5F_SYM_LEAF_K(f);\n          ^\n\u001b[0m\u001b[91mH5Gnode.c: In function 'H5G_node_remove':\n\u001b[0m\u001b[91mH5Gnode.c:792:21: warning: unused variable 'lt_key' [-Wunused-variable]\n     H5G_node_key_t *lt_key = (H5G_node_key_t *)_lt_key;\n                     ^\n\u001b[0m\u001b[91mH5Gnode.c: In function 'H5G__node_copy':\n\u001b[0m\u001b[91mH5Gnode.c:1294:28: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             grp_loc.oloc = (H5O_loc_t *)src_oloc;\n                            ^\n\u001b[0m\u001b[91mIn file included from H5Gpkg.h:32:0,\n                 from H5Gnode.c:45:\nH5Gnode.c: In function 'H5G__node_iterate_size':\n\u001b[0m\u001b[91mH5Gprivate.h:54:7: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     4 +    /*reserved    */    \\\n       ^\nH5Gpkg.h:58:34: note: in expansion of macro 'H5G_SIZEOF_ENTRY'\n     + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \\\n                                  ^\nH5Gnode.c:1481:19: note: in expansion of macro 'H5G_NODE_SIZE'\n     *stab_size += H5G_NODE_SIZE(f);\n                   ^\n\u001b[0m\u001b[91mH5Gnode.c: In function 'H5G_node_debug':\n\u001b[0m\u001b[91mH5Gnode.c:1550:9: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n         fwidth = MAX(0, fwidth - 3);\n         ^\n\u001b[0m  CC       H5Gobj.lo\n\u001b[91mH5Gobj.c: In function 'H5G__obj_create_real':\n\u001b[0m\u001b[91mH5Gobj.c:272:67: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if(H5O_msg_create(oloc, H5O_LINFO_ID, 0, H5O_UPDATE_TIME, (void *)linfo, dxpl_id) < 0)\n                                                                   ^\n\u001b[0m\u001b[91mH5Gobj.c:277:73: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if(H5O_msg_create(oloc, H5O_GINFO_ID, H5O_MSG_FLAG_CONSTANT, 0, (void *)ginfo, dxpl_id) < 0)\n                                                                         ^\n\u001b[0m\u001b[91mH5Gobj.c:283:77: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             if(H5O_msg_create(oloc, H5O_PLINE_ID, H5O_MSG_FLAG_CONSTANT, 0, (void *)pline, dxpl_id) < 0)\n                                                                             ^\n\u001b[0m\u001b[91mH5Gobj.c: In function 'H5G_obj_stab_to_new_cb':\n\u001b[0m\u001b[91mH5Gobj.c:433:51: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     if(H5G_obj_insert(udata->grp_oloc, lnk->name, (H5O_link_t *)lnk, FALSE,\n                                                   ^\n\u001b[0m  CC       H5Goh.lo\n  CC       H5Groot.lo\n  CC       H5Gstab.lo\n  CC       H5Gtest.lo\n  CC       H5Gtraverse.lo\n\u001b[91mH5Gtraverse.c: In function 'H5G_traverse_real':\nH5Gtraverse.c:743:52: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n                     if(H5O_msg_reset(H5O_GINFO_ID, (void *)ginfo) < 0)\n                                                    ^\n\u001b[0m\u001b[91mH5Gtraverse.c:747:52: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n                     if(H5O_msg_reset(H5O_LINFO_ID, (void *)linfo) < 0)\n                                                    ^\n\u001b[0m\u001b[91mH5Gtraverse.c:751:52: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n                     if(H5O_msg_reset(H5O_PLINE_ID, (void *)pline) < 0)\n                                                    ^\n\u001b[0m  CC       H5HF.lo\n\u001b[91mIn file included from H5HF.c:41:0:\nH5HF.c: In function 'H5HF_op_write':\n\u001b[0m\u001b[91mH5HF.c:130:14: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     HDmemcpy((void *)obj, op_data, obj_len);    /* Casting away const OK -QAK */\n              ^\nH5private.h:986:47: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                               ^\n\u001b[0m\u001b[91mH5HF.c: In function 'H5HF_insert':\n\u001b[0m\u001b[91mH5HF.c:375:49: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if(H5HF_huge_insert(hdr, dxpl_id, size, (void *)obj, id) < 0)\n                                                 ^\n\u001b[0m  CC       H5HFbtree2.lo\n  CC       H5HFcache.lo\n\u001b[91mH5HFcache.c: In function 'H5HF_cache_hdr_flush':\n\u001b[0m\u001b[91mH5HFcache.c:503:20: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n         heap_flags |= (hdr->huge_ids_wrapped ?  H5HF_HDR_FLAGS_HUGE_ID_WRAPPED : 0);\n                    ^\n\u001b[0m\u001b[91mH5HFcache.c:504:20: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n         heap_flags |= (hdr->checksum_dblocks ?  H5HF_HDR_FLAGS_CHECKSUM_DBLOCKS : 0);\n                    ^\n\u001b[0m\u001b[91mH5HFcache.c: In function 'H5HF_cache_iblock_load':\n\u001b[0m\u001b[91mH5HFcache.c:708:25: warning: size of 'iblock_buf' is 4096 bytes [-Wlarger-than=]\n     uint8_t             iblock_buf[H5HF_IBLOCK_BUF_SIZE]; /* Buffer for indirect block */\n                         ^\n\u001b[0m\u001b[91mIn file included from H5HFcache.c:40:0:\nH5HFpkg.h:121:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \\\n                                              ^\nH5HFpkg.h:133:81: note: in expansion of macro 'H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE'\n     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \\\n                                                                                 ^\nH5HFcache.c:749:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFpkg.h:132:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFcache.c:749:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFcache.c: In function 'H5HF_cache_iblock_flush':\n\u001b[0m\u001b[91mH5HFcache.c:906:17: warning: size of 'iblock_buf' is 4096 bytes [-Wlarger-than=]\n     uint8_t     iblock_buf[H5HF_IBLOCK_BUF_SIZE]; /* Buffer for indirect block */\n                 ^\n\u001b[0m\u001b[91mIn file included from H5HFcache.c:37:0:\nH5HFcache.c: In function 'H5HF_cache_dblock_load':\n\u001b[0m\u001b[91mH5HFcache.c:1349:18: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         HDmemset((uint8_t *)p - H5HF_SIZEOF_CHKSUM, 0, (size_t)H5HF_SIZEOF_CHKSUM);\n                  ^\nH5private.h:992:39: note: in definition of macro 'HDmemset'\n     #define HDmemset(X,C,Z)    memset(X,C,Z)\n                                       ^\n\u001b[0m  CC       H5HFdbg.lo\n\u001b[91mH5HFdbg.c: In function 'H5HF_hdr_print':\nH5HFdbg.c:259:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     H5HF_dtable_debug(&hdr->man_dtable, stream, indent + 3, MAX(0, fwidth - 3));\n     ^\nH5HFdbg.c:267:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                       hdr->pline_root_direct_size);\n                       ^\n\u001b[0m\u001b[91mH5HFdbg.c:270:23: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                       hdr->pline_root_direct_filter_mask);\n                       ^\nH5HFdbg.c:273:30: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                              indent + 3, MAX(0, fwidth - 3));\n                              ^\n\u001b[0m\u001b[91mH5HFdbg.c:283:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   hdr->root_iblock_flags);\n                   ^\nH5HFdbg.c:286:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   hdr->root_iblock);\n                   ^\n\u001b[0m\u001b[91mH5HFdbg.c: In function 'H5HF_dblock_debug_cb':\n\u001b[0m\u001b[91mH5HFdbg.c:402:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   start, len);\n   ^\n\u001b[0m\u001b[91mIn file included from H5HFdbg.c:40:0:\nH5HFdbg.c: In function 'H5HF_dblock_debug':\n\u001b[0m\u001b[91mH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFdbg.c:483:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n     blk_prefix_size = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                       ^\n\u001b[0m\u001b[91mH5HFdbg.c: In function 'H5HF_iblock_print':\n\u001b[0m\u001b[91mH5HFdbg.c:622:17: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 temp_str);\n                 ^\n\u001b[0m\u001b[91mH5HFdbg.c:632:25: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         iblock->filt_ents[off].filter_mask);\n                         ^\n\u001b[0m\u001b[91mH5HFdbg.c:636:25: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         iblock->ents[off].addr);\n                         ^\n\u001b[0m\u001b[91mH5HFdbg.c:650:21: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     temp_str);\n                     ^\n\u001b[0m\u001b[91mH5HFdbg.c:657:25: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         iblock->ents[off].addr);\n                         ^\n\u001b[0m\u001b[91mH5HFdbg.c:663:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   \"<none>\");\n                   ^\n\u001b[0m\u001b[91mH5HFdbg.c:672:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   iblock->rc);\n                   ^\n\u001b[0m\u001b[91mH5HFdbg.c:677:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   iblock->parent);\n                   ^\n\u001b[0m\u001b[91mH5HFdbg.c: In function 'H5HF_sects_debug_cb':\n\u001b[0m\u001b[91mH5HFdbg.c:791:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     if(H5FS_sect_debug(udata->fspace, _sect, udata->stream, udata->indent + 3, MAX(0, udata->fwidth - 3)) < 0)\n     ^\n\u001b[0m  CC       H5HFdblock.lo\n\u001b[91mIn file included from H5HFdblock.c:39:0:\nH5HFdblock.c: In function 'H5HF_man_dblock_create':\nH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFdblock.c:143:33: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n     free_space = dblock->size - H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                                 ^\n\u001b[0m\u001b[91mH5HFpkg.h:115:5: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFdblock.c:171:70: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n     if(NULL == (sec_node = H5HF_sect_single_new((dblock->block_off + H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr)),\n                                                                      ^\n\u001b[0m\u001b[91mH5HFdblock.c: In function 'H5HF_man_dblock_new':\n\u001b[0m\u001b[91mH5HFdblock.c:363:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n     if((min_dblock_size - request) < H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr))\n                                    ^\n\u001b[0m  CC       H5HFdtable.lo\n\u001b[91mH5HFdtable.c: In function 'H5HF_dtable_size_to_row':\n\u001b[0m\u001b[91mH5HFdtable.c:241:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_dtable_size_to_row(const H5HF_dtable_t *dtable, size_t block_size)\n ^\n\u001b[0m\u001b[91mH5HFdtable.c: In function 'H5HF_dtable_size_to_rows':\n\u001b[0m\u001b[91mH5HFdtable.c:275:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_dtable_size_to_rows(const H5HF_dtable_t *dtable, hsize_t size)\n ^\n\u001b[0m\u001b[91mH5HFdtable.c: In function 'H5HF_dtable_span_size':\n\u001b[0m\u001b[91mH5HFdtable.c:306:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_dtable_span_size(const H5HF_dtable_t *dtable, unsigned start_row,\n ^\n\u001b[0m  CC       H5HFhdr.lo\n\u001b[91mIn file included from H5HFhdr.c:36:0:\nH5HFhdr.c: In function 'H5HF_hdr_finish_init_phase1':\n\u001b[0m\u001b[91mH5HFhdr.c:226:45: warning: conversion to 'uint8_t' from 'unsigned int' may alter its value [-Wconversion]\n     hdr->heap_len_size = MIN(hdr->man_dtable.max_dir_blk_off_size,\n                                             ^\nH5private.h:313:35: note: in definition of macro 'MIN'\n #define MIN(a,b)    (((a)<(b)) ? (a) : (b))\n                                   ^\nH5HFhdr.c:227:32: warning: conversion to 'uint8_t' from 'unsigned int' may alter its value [-Wconversion]\n             H5VM_limit_enc_size((uint64_t)hdr->max_man_size));\n                                ^\nH5private.h:313:41: note: in definition of macro 'MIN'\n #define MIN(a,b)    (((a)<(b)) ? (a) : (b))\n                                         ^\n\u001b[0m\u001b[91mIn file included from H5HFhdr.c:38:0:\nH5HFhdr.c: In function 'H5HF_hdr_finish_init_phase2':\n\u001b[0m\u001b[91mH5HFpkg.h:115:5: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFhdr.c:264:21: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n                     H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                     ^\n\u001b[0m\u001b[91mH5HFhdr.c: In function 'H5HF_hdr_create':\n\u001b[0m\u001b[91mH5HFhdr.c:435:52: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n         if(0 == (hdr->filter_len = H5O_msg_raw_size(hdr->f, H5O_PLINE_ID, FALSE, &(hdr->pline))))\n                                                    ^\n\u001b[0m\u001b[91mH5HFhdr.c:441:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             + 4                                 /* Size of filter mask for filtered root direct block */\n             ^\n\u001b[0m\u001b[91mIn file included from H5HFhdr.c:38:0:\nH5HFpkg.h:105:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + H5HF_DTABLE_INFO_SIZE(h) /* Size of managed obj. doubling-table info */ \\\n     ^\nH5HFhdr.c:446:26: note: in expansion of macro 'H5HF_HEADER_SIZE'\n         hdr->heap_size = H5HF_HEADER_SIZE(hdr);\n                          ^\n\u001b[0m\u001b[91mH5HFhdr.c:468:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     + hdr->sizeof_size; /* Size of de-filtered object in memory */\n                     ^\n\u001b[0m\u001b[91mH5HFhdr.c:472:21: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     + hdr->sizeof_size; /* Length of object */\n                     ^\n\u001b[0m\u001b[91mIn file included from H5HFhdr.c:38:0:\nH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFhdr.c:494:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n     dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                       ^\n\u001b[0m\u001b[91mH5HFhdr.c: In function 'H5HF_hdr_adj_free':\n\u001b[0m\u001b[91mH5HFhdr.c:763:5: warning: conversion to 'long long unsigned int' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     hdr->total_man_free += amt;\n     ^\n\u001b[0m\u001b[91mH5HFhdr.c: In function 'H5HF_hdr_adjust_heap':\n\u001b[0m\u001b[91mH5HFhdr.c:803:5: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n     hdr->total_man_free += extra_free;\n     ^\n\u001b[0m\u001b[91mH5HFhdr.c: In function 'H5HF_hdr_reverse_iter':\n\u001b[0m\u001b[91mH5HFhdr.c:1245:9: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         tmp_entry = curr_entry;\n         ^\n\u001b[0m\u001b[91mH5HFhdr.c:1280:13: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             curr_entry = tmp_entry;\n             ^\n\u001b[0m  CC       H5HFhuge.lo\n\u001b[91mH5HFhuge.c: In function 'H5HF_huge_bt2_create':\nH5HFhuge.c:127:36: warning: conversion to 'uint32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */\n                                    ^\n\u001b[0m\u001b[91mH5HFhuge.c:134:36: warning: conversion to 'uint32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */\n                                    ^\n\u001b[0m\u001b[91mH5HFhuge.c:141:36: warning: conversion to 'uint32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of filtered object */\n                                    ^\n\u001b[0m\u001b[91mH5HFhuge.c:149:36: warning: conversion to 'uint32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */\n                                    ^\n\u001b[0m\u001b[91mH5HFhuge.c: In function 'H5HF_huge_write':\n\u001b[0m\u001b[91mH5HFhuge.c:805:23: warning: 'obj_size' may be used uninitialized in this function [-Wmaybe-uninitialized]\n     if(H5F_block_write(hdr->f, H5FD_MEM_FHEAP_HUGE_OBJ, obj_addr, obj_size, dxpl_id, obj) < 0)\n                       ^\n\u001b[0m  CC       H5HFiblock.lo\n\u001b[91mH5HFiblock.c: In function 'H5HF_iblock_unpin':\n\u001b[0m\u001b[91mH5HFiblock.c:216:13: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n             iblock->hdr->root_iblock_flags &= ~(H5HF_ROOT_IBLOCK_PINNED);\n             ^\n\u001b[0m\u001b[91mIn file included from H5HFiblock.c:39:0:\nH5HFiblock.c: In function 'H5HF_man_iblock_root_double':\n\u001b[0m\u001b[91mH5HFpkg.h:121:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \\\n                                              ^\nH5HFpkg.h:133:81: note: in expansion of macro 'H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE'\n     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \\\n                                                                                 ^\nH5HFiblock.c:592:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFpkg.h:132:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFiblock.c:592:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFiblock.c:631:26: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n         unsigned row = u / hdr->man_dtable.cparam.width;        /* Row for current entry */\n                          ^\n\u001b[0m\u001b[91mH5HFiblock.c: In function 'H5HF_man_iblock_root_halve':\n\u001b[0m\u001b[91mH5HFiblock.c:733:19: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     new_nrows = 1 << (1 + H5VM_log2_gen((uint64_t)max_child_row));\n                   ^\n\u001b[0m\u001b[91mIn file included from H5HFiblock.c:39:0:\nH5HFpkg.h:121:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \\\n                                              ^\nH5HFpkg.h:133:81: note: in expansion of macro 'H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE'\n     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \\\n                                                                                 ^\nH5HFiblock.c:761:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFpkg.h:132:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFiblock.c:761:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFiblock.c: In function 'H5HF_man_iblock_create':\n\u001b[0m\u001b[91mH5HFpkg.h:121:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \\\n                                              ^\nH5HFpkg.h:133:81: note: in expansion of macro 'H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE'\n     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \\\n                                                                                 ^\nH5HFiblock.c:1030:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFpkg.h:132:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFiblock.c:1030:20: note: in expansion of macro 'H5HF_MAN_INDIRECT_SIZE'\n     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);\n                    ^\n\u001b[0m\u001b[91mH5HFiblock.c: In function 'H5HF_man_iblock_unprotect':\n\u001b[0m\u001b[91mH5HFiblock.c:1283:13: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n             iblock->hdr->root_iblock_flags &= ~(H5HF_ROOT_IBLOCK_PROTECTED);\n             ^\n\u001b[0m\u001b[91mH5HFiblock.c: In function 'H5HF_man_iblock_dest':\n\u001b[0m\u001b[91mH5HFiblock.c:1725:22: warning: request for implicit conversion from 'void *' to 'struct H5HF_indirect_ent_t *' not permitted in C++ [-Wc++-compat]\n         iblock->ents = H5FL_SEQ_FREE(H5HF_indirect_ent_t, iblock->ents);\n                      ^\n\u001b[0m\u001b[91mH5HFiblock.c:1727:27: warning: request for implicit conversion from 'void *' to 'struct H5HF_indirect_filt_ent_t *' not permitted in C++ [-Wc++-compat]\n         iblock->filt_ents = H5FL_SEQ_FREE(H5HF_indirect_filt_ent_t, iblock->filt_ents);\n                           ^\n\u001b[0m\u001b[91mH5HFiblock.c:1729:31: warning: request for implicit conversion from 'void *' to 'struct H5HF_indirect_t **' not permitted in C++ [-Wc++-compat]\n         iblock->child_iblocks = H5FL_SEQ_FREE(H5HF_indirect_ptr_t, iblock->child_iblocks);\n                               ^\n\u001b[0m  CC       H5HFiter.lo\n\u001b[91mH5HFiter.c: In function 'H5HF_man_iter_ready':\n\u001b[0m\u001b[91mH5HFiter.c:653:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_man_iter_ready(H5HF_block_iter_t *biter)\n ^\n\u001b[0m  CC       H5HFman.lo\n\u001b[91mH5HFman.c: In function 'H5HF_man_write':\n\u001b[0m\u001b[91mH5HFman.c:432:58: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     if(H5HF_man_op_real(hdr, dxpl_id, id, H5HF_op_write, (void *)obj, H5HF_OP_MODIFY) < 0)\n                                                          ^\n\u001b[0m  CC       H5HFsection.lo\n\u001b[91mH5HFsection.c: In function 'H5HF_sect_single_dblock_info':\n\u001b[0m\u001b[91mH5HFsection.c:651:53: warning: unused parameter 'dxpl_id' [-Wunused-parameter]\n H5HF_sect_single_dblock_info(H5HF_hdr_t *hdr, hid_t dxpl_id,\n                                                     ^\n\u001b[0m\u001b[91mIn file included from H5HFsection.c:35:0:\nH5HFsection.c: In function 'H5HF_sect_single_full_dblock':\n\u001b[0m\u001b[91mH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFsection.c:774:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n     dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                       ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_single_can_shrink':\n\u001b[0m\u001b[91mH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFsection.c:1034:27: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n         dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                           ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_single_valid':\n\u001b[0m\u001b[91mH5HFsection.c:1200:78: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             status = H5HF_sect_single_dblock_info(iblock->hdr, H5AC_dxpl_id, (H5HF_free_section_t *)sect, &dblock_addr, &dblock_size);\n                                                                              ^\n\u001b[0m\u001b[91mIn file included from H5HFsection.c:35:0:\nH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFsection.c:1209:31: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n             dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(iblock->hdr);\n                               ^\n\u001b[0m\u001b[91mH5HFsection.c:1192:20: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n             herr_t status;              /* Generic status value */\n                    ^\n\u001b[0m\u001b[91mH5HFsection.c:1190:20: warning: variable 'dblock_overhead' set but not used [-Wunused-but-set-variable]\n             size_t dblock_overhead;     /* Direct block's overhead */\n                    ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_row_init_cls':\n\u001b[0m\u001b[91mH5HFsection.c:48:9: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         + 2             /* # of entries */                                    \\\n         ^\nH5HFsection.c:1569:28: note: in expansion of macro 'H5HF_SECT_INDIRECT_SERIAL_SIZE'\n         cls->serial_size = H5HF_SECT_INDIRECT_SERIAL_SIZE(hdr);\n                            ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_row_valid':\n\u001b[0m\u001b[91mH5HFsection.c:2000:14: warning: variable 'indir_idx' set but not used [-Wunused-but-set-variable]\n     unsigned indir_idx;         /* Index of row in underlying indirect section's row array */\n              ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_row_debug':\n\u001b[0m\u001b[91mH5HFsection.c:2082:9: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n         H5HF_sect_indirect_debug(sect->u.row.under, stream, indent + 3, MAX(0, fwidth - 3));\n         ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_indirect_init_cls':\n\u001b[0m\u001b[91mH5HFsection.c:48:9: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         + 2             /* # of entries */                                    \\\n         ^\nH5HFsection.c:2185:24: note: in expansion of macro 'H5HF_SECT_INDIRECT_SERIAL_SIZE'\n     cls->serial_size = H5HF_SECT_INDIRECT_SERIAL_SIZE(hdr);\n                        ^\n\u001b[0m\u001b[91mIn file included from H5HFsection.c:35:0:\nH5HFsection.c: In function 'H5HF_sect_indirect_init_rows':\n\u001b[0m\u001b[91mH5HFpkg.h:115:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     + (h)->heap_off_size        /* Offset of the block in the heap */         \\\n     ^\nH5HFsection.c:2478:23: note: in expansion of macro 'H5HF_MAN_ABS_DIRECT_OVERHEAD'\n     dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);\n                       ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_indirect_valid':\n\u001b[0m\u001b[91mH5HFsection.c:4107:44: warning: variable 'tmp_row_sect2' set but not used [-Wunused-but-set-variable]\n                 const H5HF_free_section_t *tmp_row_sect2;    /* Pointer to row section */\n                                            ^\n\u001b[0m\u001b[91mH5HFsection.c:4099:40: warning: variable 'tmp_row_sect' set but not used [-Wunused-but-set-variable]\n             const H5HF_free_section_t *tmp_row_sect;    /* Pointer to row section */\n                                        ^\n\u001b[0m\u001b[91mH5HFsection.c:4134:44: warning: variable 'tmp_child_sect2' set but not used [-Wunused-but-set-variable]\n                 const H5HF_free_section_t *tmp_child_sect2;    /* Pointer to child indirect section */\n                                            ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_indirect_top':\n\u001b[0m\u001b[91mH5HFsection.c:2134:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5HF_sect_indirect_top(H5HF_free_section_t *sect)\n ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_row_can_merge':\n\u001b[0m\u001b[91mH5HFsection.c:1716:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5HF_sect_row_can_merge(const H5FS_section_info_t *_sect1,\n ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_indirect_is_first.isra.1':\n\u001b[0m\u001b[91mH5HFsection.c:3389:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5HF_sect_indirect_is_first(H5HF_free_section_t *sect)\n ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_indirect_valid.isra.3':\n\u001b[0m\u001b[91mH5HFsection.c:4060:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5HF_sect_indirect_valid(const H5HF_hdr_t *hdr, const H5HF_free_section_t *sect)\n ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_row_valid':\n\u001b[0m\u001b[91mH5HFsection.c:1994:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5HF_sect_row_valid(const H5FS_section_class_t *cls, const H5FS_section_info_t *_sect)\n ^\n\u001b[0m\u001b[91mH5HFsection.c: In function 'H5HF_sect_row_get_iblock':\n\u001b[0m\u001b[91mH5HFsection.c:1514:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_sect_row_get_iblock(H5HF_free_section_t *sect)\n ^\n\u001b[0m  CC       H5HFspace.lo\n  CC       H5HFstat.lo\n  CC       H5HFtest.lo\n\u001b[91mH5HFtest.c: In function 'H5HF_get_cparam_test':\nH5HFtest.c:99:29: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n     else if(fh->hdr->id_len == (1 + fh->hdr->sizeof_size + fh->hdr->sizeof_addr))\n                             ^\nH5HFtest.c:102:33: warning: conversion to 'uint16_t' from 'unsigned int' may alter its value [-Wconversion]\n         cparam->id_len = fh->hdr->id_len;\n                                 ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_cmp_cparam_test':\nH5HFtest.c:125:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_cmp_cparam_test(const H5HF_create_t *cparam1, const H5HF_create_t *cparam2)\n ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_get_max_root_rows':\n\u001b[0m\u001b[91mH5HFtest.c:245:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_get_max_root_rows(const H5HF_t *fh)\n ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_get_dtable_width_test':\n\u001b[0m\u001b[91mH5HFtest.c:276:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_get_dtable_width_test(const H5HF_t *fh)\n ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_get_dtable_max_drows_test':\n\u001b[0m\u001b[91mH5HFtest.c:307:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_get_dtable_max_drows_test(const H5HF_t *fh)\n ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_get_iblock_max_drows_test':\n\u001b[0m\u001b[91mH5HFtest.c:342:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_get_iblock_max_drows_test(const H5HF_t *fh, unsigned pos)\n ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_get_dblock_size_test':\n\u001b[0m\u001b[91mH5HFtest.c:375:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_get_dblock_size_test(const H5HF_t *fh, unsigned row)\n ^\n\u001b[0m\u001b[91mH5HFtest.c: In function 'H5HF_get_dblock_free_test':\n\u001b[0m\u001b[91mH5HFtest.c:407:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HF_get_dblock_free_test(const H5HF_t *fh, unsigned row)\n ^\n\u001b[0m  CC       H5HFtiny.lo\n\u001b[91mH5HFtiny.c: In function 'H5HF_tiny_insert':\nH5HFtiny.c:172:55: warning: conversion to 'uint8_t' from 'size_t' may alter its value [-Wconversion]\n         *id++ = H5HF_ID_VERS_CURR | H5HF_ID_TYPE_TINY |\n                                                       ^\n\u001b[0m\u001b[91mH5HFtiny.c:176:55: warning: conversion to 'uint8_t' from 'size_t' may alter its value [-Wconversion]\n         *id++ = H5HF_ID_VERS_CURR | H5HF_ID_TYPE_TINY |\n                                                       ^\n\u001b[0m\u001b[91mH5HFtiny.c: In function 'H5HF_tiny_get_obj_len':\n\u001b[0m\u001b[91mH5HFtiny.c:232:34: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);\n                                  ^\n\u001b[0m\u001b[91mH5HFtiny.c: In function 'H5HF_tiny_op_real':\n\u001b[0m\u001b[91mH5HFtiny.c:283:34: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);\n                                  ^\n\u001b[0m\u001b[91mH5HFtiny.c: In function 'H5HF_tiny_remove':\n\u001b[0m\u001b[91mH5HFtiny.c:408:34: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);\n                                  ^\n\u001b[0m  CC       H5HG.lo\n\u001b[91mIn file included from H5HG.c:53:0:\nH5HG.c: In function 'H5HG_create':\nH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:89:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(4 +   /*magic number  */       \\\n     ^\nH5HGpkg.h:111:37: note: in expansion of macro 'H5HG_SIZEOF_HDR'\n #define H5HG_NOBJS(f,z) (int)((((z)-H5HG_SIZEOF_HDR(f))/        \\\n                                     ^\nH5HG.c:166:20: note: in expansion of macro 'H5HG_NOBJS'\n     heap->nalloc = H5HG_NOBJS(f, size);\n                    ^\n\u001b[0m\u001b[91mH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:99:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(2 +   /*object id number */       \\\n     ^\nH5HGpkg.h:112:11: note: in expansion of macro 'H5HG_SIZEOF_OBJHDR'\n           H5HG_SIZEOF_OBJHDR(f)+2))\n           ^\nH5HG.c:166:20: note: in expansion of macro 'H5HG_NOBJS'\n     heap->nalloc = H5HG_NOBJS(f, size);\n                    ^\n\u001b[0m\u001b[91mH5HGpkg.h:111:25: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_NOBJS(f,z) (int)((((z)-H5HG_SIZEOF_HDR(f))/        \\\n                         ^\nH5HG.c:166:20: note: in expansion of macro 'H5HG_NOBJS'\n     heap->nalloc = H5HG_NOBJS(f, size);\n                    ^\n\u001b[0m\u001b[91mH5HG.c:185:37: warning: conversion to 'size_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     n = H5HG_ALIGN(p - heap->chunk) - (p - heap->chunk);\n                                     ^\n\u001b[0m\u001b[91mIn file included from H5HG.c:53:0:\nH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:89:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(4 +   /*magic number  */       \\\n     ^\nH5HG.c:193:32: note: in expansion of macro 'H5HG_SIZEOF_HDR'\n     heap->obj[0].size = size - H5HG_SIZEOF_HDR(f);\n                                ^\n\u001b[0m\u001b[91mH5HG.c: In function 'H5HG_alloc':\n\u001b[0m\u001b[91mH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:99:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(2 +   /*object id number */       \\\n     ^\nH5HG.c:298:19: note: in expansion of macro 'H5HG_SIZEOF_OBJHDR'\n     size_t need = H5HG_SIZEOF_OBJHDR(f) + H5HG_ALIGN(size);\n                   ^\n\u001b[0m\u001b[91mH5HG.c:363:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n     else if(heap->obj[0].size-need >= H5HG_SIZEOF_OBJHDR (f)) {\n                                    ^\n\u001b[0m\u001b[91mIn file included from H5HG.c:53:0:\nH5HG.c: In function 'H5HG_insert':\n\u001b[0m\u001b[91mH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:99:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(2 +   /*object id number */       \\\n     ^\nH5HG.c:538:12: note: in expansion of macro 'H5HG_SIZEOF_OBJHDR'\n     need = H5HG_SIZEOF_OBJHDR(f) + H5HG_ALIGN(size);\n            ^\n\u001b[0m\u001b[91mH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:89:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(4 +   /*magic number  */       \\\n     ^\nH5HG.c:550:47: note: in expansion of macro 'H5HG_SIZEOF_HDR'\n         addr = H5HG_create(f, dxpl_id, need + H5HG_SIZEOF_HDR(f));\n                                               ^\n\u001b[0m\u001b[91mH5HG.c: In function 'H5HG_remove':\n\u001b[0m\u001b[91mH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:99:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(2 +   /*object id number */       \\\n     ^\nH5HG.c:765:52: note: in expansion of macro 'H5HG_SIZEOF_OBJHDR'\n     need = H5HG_ALIGN(heap->obj[hobj->idx].size) + H5HG_SIZEOF_OBJHDR(f);\n                                                    ^\n\u001b[0m\u001b[91mIn file included from H5HG.c:50:0:\nH5HG.c:779:42: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]\n         heap->size - ((obj_start + need) - heap->chunk));\n                                          ^\nH5private.h:989:67: note: in definition of macro 'HDmemmove'\n     #define HDmemmove(X,Y,Z)  memmove((char*)(X),(const char*)(Y),Z)\n                                                                   ^\n\u001b[0m\u001b[91mH5HG.c:780:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n     if(heap->obj[0].size >= H5HG_SIZEOF_OBJHDR(f)) {\n                          ^\n\u001b[0m\u001b[91mIn file included from H5HG.c:53:0:\nH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:89:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(4 +   /*magic number  */       \\\n     ^\nH5HG.c:790:29: note: in expansion of macro 'H5HG_SIZEOF_HDR'\n     if((heap->obj[0].size + H5HG_SIZEOF_HDR(f)) == heap->size) {\n                             ^\n\u001b[0m\u001b[91mH5HG.c: In function 'H5HG_free':\n\u001b[0m\u001b[91mH5HG.c:844:19: warning: request for implicit conversion from 'void *' to 'struct H5HG_obj_t *' not permitted in C++ [-Wc++-compat]\n         heap->obj = H5FL_SEQ_FREE(H5HG_obj_t, heap->obj);\n                   ^\n\u001b[0m  CC       H5HGcache.lo\n\u001b[91mIn file included from H5HGcache.c:40:0:\nH5HGcache.c: In function 'H5HG_load':\nH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:89:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(4 +   /*magic number  */       \\\n     ^\nH5HGpkg.h:111:37: note: in expansion of macro 'H5HG_SIZEOF_HDR'\n #define H5HG_NOBJS(f,z) (int)((((z)-H5HG_SIZEOF_HDR(f))/        \\\n                                     ^\nH5HGcache.c:170:14: note: in expansion of macro 'H5HG_NOBJS'\n     nalloc = H5HG_NOBJS(f, heap->size);\n              ^\n\u001b[0m\u001b[91mH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:99:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(2 +   /*object id number */       \\\n     ^\nH5HGpkg.h:112:11: note: in expansion of macro 'H5HG_SIZEOF_OBJHDR'\n           H5HG_SIZEOF_OBJHDR(f)+2))\n           ^\nH5HGcache.c:170:14: note: in expansion of macro 'H5HG_NOBJS'\n     nalloc = H5HG_NOBJS(f, heap->size);\n              ^\n\u001b[0m\u001b[91mH5HGpkg.h:111:25: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_NOBJS(f,z) (int)((((z)-H5HG_SIZEOF_HDR(f))/        \\\n                         ^\nH5HGcache.c:170:14: note: in expansion of macro 'H5HG_NOBJS'\n     nalloc = H5HG_NOBJS(f, heap->size);\n              ^\n\u001b[0m\u001b[91mH5HGcache.c:186:70: warning: conversion to 'size_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n      heap->obj[0].size = ((const uint8_t *)heap->chunk + heap->size) - p;\n                                                                      ^\n\u001b[0m\u001b[91mIn file included from H5HGcache.c:40:0:\nH5HGpkg.h:80:38: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/       \\\n                                      ^\nH5HGpkg.h:99:5: note: in expansion of macro 'H5HG_ALIGN'\n     H5HG_ALIGN(2 +   /*object id number */       \\\n     ^\nH5HGcache.c:232:10: note: in expansion of macro 'H5HG_SIZEOF_OBJHDR'\n   need = H5HG_SIZEOF_OBJHDR(f) + H5HG_ALIGN(heap->obj[idx].size);\n          ^\n\u001b[0m\u001b[91mH5HGcache.c:114:56: warning: unused parameter 'udata' [-Wunused-parameter]\n H5HG_load(H5F_t *f, hid_t dxpl_id, haddr_t addr, void *udata)\n                                                        ^\n\u001b[0m  CC       H5HGdbg.lo\n\u001b[91mH5HGdbg.c: In function 'H5HG_debug':\nH5HGdbg.c:144:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        (unsigned long)(h->obj[u].begin - h->chunk));\n        ^\nH5HGdbg.c:147:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        h->obj[u].nrefs);\n        ^\n\u001b[0m\u001b[91mH5HGdbg.c:152:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        (unsigned long)H5HG_ALIGN(h->obj[u].size));\n        ^\n\u001b[0m  CC       H5HGquery.lo\n\u001b[91mH5HGquery.c: In function 'H5HG_get_addr':\nH5HGquery.c:88:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HG_get_addr(const H5HG_heap_t *heap)\n ^\n\u001b[0m\u001b[91mH5HGquery.c: In function 'H5HG_get_size':\nH5HGquery.c:112:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HG_get_size(const H5HG_heap_t *heap)\n ^\n\u001b[0m\u001b[91mH5HGquery.c: In function 'H5HG_get_free_size':\nH5HGquery.c:136:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HG_get_free_size(const H5HG_heap_t *heap)\n ^\n\u001b[0m  CC       H5HL.lo\n\u001b[91mH5HL.c: In function 'H5HL_offset_into':\n\u001b[0m\u001b[91mH5HL.c:536:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HL_offset_into(const H5HL_t *heap, size_t offset)\n ^\n\u001b[0m  CC       H5HLcache.lo\n\u001b[91mH5HLcache.c: In function 'H5HL_datablock_load':\n\u001b[0m\u001b[91mH5HLcache.c:625:54: warning: unused parameter 'addr' [-Wunused-parameter]\n H5HL_datablock_load(H5F_t *f, hid_t dxpl_id, haddr_t addr, void *_udata)\n                                                      ^\n\u001b[0m\u001b[91mH5HLcache.c: In function 'H5HL_datablock_flush':\n\u001b[0m\u001b[91mH5HLcache.c:691:72: warning: unused parameter 'addr' [-Wunused-parameter]\n H5HL_datablock_flush(H5F_t *f, hid_t dxpl_id, hbool_t destroy, haddr_t addr,\n                                                                        ^\n\u001b[0m  CC       H5HLdbg.lo\n\u001b[91mH5HLdbg.c: In function 'H5HL_debug':\nH5HLdbg.c:100:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   freelist->offset, freelist->size);\n   ^\n\u001b[0m  CC       H5HLint.lo\n  CC       H5HP.lo\n\u001b[91mH5HP.c: In function 'H5HP_create':\nH5HP.c:384:32: warning: request for implicit conversion from 'void *' to 'struct H5HP_ent_t *' not permitted in C++ [-Wc++-compat]\n                 new_heap->heap = H5FL_SEQ_FREE(H5HP_ent_t, new_heap->heap);\n                                ^\n\u001b[0m\u001b[91mH5HP.c: In function 'H5HP_decr':\n\u001b[0m\u001b[91mH5HP.c:851:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     heap->heap[obj_loc].val-=amt;\n     ^\n\u001b[0m\u001b[91mH5HP.c:851:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n     heap->heap[obj_loc].val-=amt;\n                            ^\n\u001b[0m\u001b[91mH5HP.c: In function 'H5HP_close':\n\u001b[0m\u001b[91mH5HP.c:913:16: warning: request for implicit conversion from 'void *' to 'struct H5HP_ent_t *' not permitted in C++ [-Wc++-compat]\n     heap->heap = H5FL_SEQ_FREE(H5HP_ent_t, heap->heap);\n                ^\n\u001b[0m\u001b[91mH5HP.c: In function 'H5HP_count':\n\u001b[0m\u001b[91mH5HP.c:412:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5HP_count(const H5HP_t *heap)\n ^\n\u001b[0m  CC       H5I.lo\n\u001b[91mH5I.c: In function 'H5Iregister_type':\nH5I.c:246:25: warning: unused parameter 'hash_size' [-Wunused-parameter]\n H5Iregister_type(size_t hash_size, unsigned reserved, H5I_free_t free_func)\n                         ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I_clear_type':\n\u001b[0m\u001b[91mH5I.c:617:71: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             if(type_ptr->cls->free_func && (type_ptr->cls->free_func)((void *)cur->obj_ptr) < 0) {\n                                                                       ^\n\u001b[0m\u001b[91mIn file included from H5I.c:47:0:\nH5I.c: In function 'H5I__destroy_type':\n\u001b[0m\u001b[91mH5I.c:741:48: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         type_ptr->cls = H5FL_FREE(H5I_class_t, (void *)type_ptr->cls);\n                                                ^\nH5FLprivate.h:132:65: note: in definition of macro 'H5FL_FREE'\n #define H5FL_FREE(t,obj) (t *)H5FL_reg_free(&(H5FL_REG_NAME(t)),obj)\n                                                                 ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I_subst':\n\u001b[0m\u001b[91mH5I.c:968:17: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     ret_value = (void *)id_ptr->obj_ptr;\n                 ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I_object':\n\u001b[0m\u001b[91mH5I.c:1003:21: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         ret_value = (void *)id_ptr->obj_ptr;\n                     ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I_object_verify':\n\u001b[0m\u001b[91mH5I.c:1077:21: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         ret_value = (void *)id_ptr->obj_ptr;\n                     ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I__remove_common':\n\u001b[0m\u001b[91mH5I.c:1250:17: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     ret_value = (void *)curr_id->obj_ptr;\n                 ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I_dec_ref':\n\u001b[0m\u001b[91mH5I.c:1429:68: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if(!type_ptr->cls->free_func || (type_ptr->cls->free_func)((void *)id_ptr->obj_ptr) >= 0) {\n                                                                    ^\n\u001b[0m\u001b[91mH5I.c: In function 'H5I__iterate_cb':\n\u001b[0m\u001b[91mH5I.c:2107:42: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         cb_ret_val = (*udata->user_func)((void *)item->obj_ptr, item->id, udata->user_udata);\n                                          ^\n\u001b[0m  CC       H5Itest.lo\n  CC       H5L.lo\n\u001b[91mH5L.c: In function 'H5L_link_cb':\n\u001b[0m\u001b[91mH5L.c:1718:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     udata->lnk->name = (char *)name;\n                        ^\n\u001b[0m\u001b[91mH5L.c: In function 'H5L_move_dest_cb':\n\u001b[0m\u001b[91mH5L.c:2437:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     udata->lnk->name = (char *)name;\n                        ^\n\u001b[0m\u001b[91mH5L.c: In function 'H5L_link_copy_file':\n\u001b[0m\u001b[91mH5L.c:3014:28: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         lnk_grp_loc.oloc = (H5O_loc_t *)src_oloc;    /* Casting away const OK -QAK */\n                            ^\n\u001b[0m\u001b[91mH5L.c: In function 'H5L_find_class_idx':\n\u001b[0m\u001b[91mH5L.c:1410:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5L_find_class_idx(H5L_type_t id)\n ^\n\u001b[0m  CC       H5Lexternal.lo\n  CC       H5make_libsettings.o\n  CCLD     H5make_libsettings\nLD_LIBRARY_PATH=\"$LD_LIBRARY_PATH`echo  |                  \\\n\tsed -e 's/-L/:/g' -e 's/ //g'`\"                               \\\n ./H5make_libsettings > H5lib_settings.c  ||                               \\\n    (test $HDF5_Make_Ignore && echo \"*** Error ignored\") ||          \\\n    (rm -f H5lib_settings.c ; exit 1)\n  CC       H5lib_settings.lo\n\u001b[91mH5lib_settings.c:34:6: warning: size of 'H5libhdf5_settings' is 3202 bytes [-Wlarger-than=]\n char H5libhdf5_settings[]=\n      ^\n\u001b[0m  CC       H5MF.lo\n  CC       H5MFaggr.lo\n\u001b[91mH5MFaggr.c: In function 'H5MF_aggr_try_extend':\n\u001b[0m\u001b[91mH5MFaggr.c:417:3: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n   if(extra_requested <= (EXTEND_THRESHOLD * aggr->size)) {\n   ^\n\u001b[0m\u001b[91mH5MFaggr.c:417:49: warning: conversion to 'double' from 'hsize_t' may alter its value [-Wconversion]\n   if(extra_requested <= (EXTEND_THRESHOLD * aggr->size)) {\n                                                 ^\n\u001b[0m  CC       H5MFdbg.lo\n  CC       H5MFsection.lo\n  CC       H5MM.lo\n  CC       H5MP.lo\n  CC       H5MPtest.lo\n\u001b[91mH5MPtest.c: In function 'H5MP_pool_is_free_size_correct':\nH5MPtest.c:119:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5MP_pool_is_free_size_correct(const H5MP_pool_t *mp)\n ^\n\u001b[0m  CC       H5O.lo\n\u001b[91mH5O.c: In function 'H5O_get_oh_addr':\n\u001b[0m\u001b[91mH5O.c:3046:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5O_get_oh_addr(const H5O_t *oh)\n ^\n\u001b[0m  CC       H5Oainfo.lo\n\u001b[91mH5Oainfo.c: In function 'H5O_ainfo_copy_file':\nH5Oainfo.c:405:28: warning: unused parameter 'file_src' [-Wunused-parameter]\n H5O_ainfo_copy_file(H5F_t *file_src, void *mesg_src, H5F_t *file_dst,\n                            ^\nH5Oainfo.c:407:17: warning: unused parameter 'cpy_info' [-Wunused-parameter]\n     H5O_copy_t *cpy_info, void UNUSED *udata, hid_t dxpl_id)\n                 ^\n\u001b[0m  CC       H5Oalloc.lo\n\u001b[91mH5Oalloc.c: In function 'H5O_add_gap':\nH5Oalloc.c:112:20: warning: unused parameter 'f' [-Wunused-parameter]\n H5O_add_gap(H5F_t *f, H5O_t *oh, unsigned chunkno, hbool_t *chk_dirtied,\n                    ^\n\u001b[0m\u001b[91mH5Oalloc.c: In function 'H5O_alloc_new_chunk':\n\u001b[0m\u001b[91mH5Oalloc.c:923:26: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     chunkno = oh->nchunks++;\n                          ^\n\u001b[0m  CC       H5Oattr.lo\n\u001b[91mH5Oattr.c: In function 'H5O_attr_debug':\nH5Oattr.c:862:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      (unsigned long)(mesg->shared->dt_size));\n      ^\n\u001b[0m\u001b[91mH5Oattr.c:863:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     if((H5O_MSG_DTYPE->debug)(f, dxpl_id, mesg->shared->dt, stream, indent + 3, MAX(0, fwidth - 3)) < 0)\n     ^\n\u001b[0m\u001b[91mH5Oattr.c:869:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      (unsigned long)(mesg->shared->ds_size));\n      ^\n\u001b[0m\u001b[91mH5Oattr.c:870:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     if(H5S_debug(f, dxpl_id, mesg->shared->ds, stream, indent + 3, MAX(0, fwidth - 3)) < 0)\n     ^\n\u001b[0m\u001b[91mH5Oattr.c: In function 'H5O_attr_reset':\n\u001b[0m\u001b[91mH5Oattr.c:481:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5O_attr_reset(void UNUSED *_mesg)\n ^\n\u001b[0m  CC       H5Oattribute.lo\n  CC       H5Obogus.lo\n  CC       H5Obtreek.lo\n  CC       H5Ocache.lo\n\u001b[91mH5Ocache.c: In function 'H5O_load':\nH5Ocache.c:166:12: warning: variable 'prefix_size' set but not used [-Wunused-but-set-variable]\n     size_t prefix_size;    /* Size of object header prefix */\n            ^\n\u001b[0m\u001b[91mH5Ocache.c: In function 'H5O_cache_chk_load':\n\u001b[0m\u001b[91mH5Ocache.c:728:49: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n         chk_proxy->chunkno = udata->oh->nchunks - 1;\n                                                 ^\n\u001b[0m\u001b[91mH5Ocache.c: In function 'H5O_chunk_deserialize':\n\u001b[0m\u001b[91mH5Ocache.c:1064:26: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     chunkno = oh->nchunks++;\n                          ^\n\u001b[0m\u001b[91mH5Ocache.c:1186:36: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             oh->mesg[mesgno].raw = (uint8_t *)p;        /* Casting away const OK - QAK */\n                                    ^\n\u001b[0m\u001b[91mH5Ocache.c:1288:57: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n             cont->chunkno = udata->cont_msg_info->nmsgs + 1; /*the next continuation message/chunk */\n                                                         ^\n\u001b[0m\u001b[91mH5Ocache.c: In function 'H5O_chunk_serialize':\n\u001b[0m\u001b[91mH5Ocache.c:1384:30: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             if(H5O_msg_flush((H5F_t *)f, oh, curr_msg) < 0)\n                              ^\n\u001b[0m  CC       H5Ochunk.lo\n  CC       H5Ocont.lo\n  CC       H5Ocopy.lo\n  CC       H5Odbg.lo\n\u001b[91mH5Odbg.c: In function 'H5O_debug_real':\nH5Odbg.c:395:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   oh->chunk[i].addr);\n                   ^\n\u001b[0m\u001b[91mH5Odbg.c:412:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     chunk_size);\n     ^\n\u001b[0m\u001b[91mH5Odbg.c:416:19: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                   oh->chunk[i].gap);\n                   ^\n\u001b[0m\u001b[91mH5Odbg.c:448:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     sequence[oh->mesg[i].type->id]++);\n     ^\n\u001b[0m\u001b[91mH5Odbg.c:451:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      oh->mesg[i].dirty);\n      ^\n\u001b[0m\u001b[91mH5Odbg.c:453:20: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                    \"Message flags:\");\n                    ^\n\u001b[0m\u001b[91mH5Odbg.c:488:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                            oh->mesg[i].flags & ~H5O_MSG_FLAG_BITS);\n                            ^\n\u001b[0m\u001b[91mH5Odbg.c:494:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     oh->mesg[i].chunkno);\n     ^\n\u001b[0m\u001b[91mH5Odbg.c:501:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     oh->mesg[i].raw_size);\n     ^\n\u001b[0m\u001b[91mH5Odbg.c:516:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     \"Message Information:\");\n     ^\n\u001b[0m\u001b[91mH5Odbg.c:518:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      (debug_type->debug)(f, dxpl_id, oh->mesg[i].native, stream, indent + 6, MAX(0, fwidth - 6));\n      ^\n\u001b[0m  CC       H5Odrvinfo.lo\n  CC       H5Odtype.lo\n\u001b[91mH5Odtype.c: In function 'H5O_dtype_copy':\n\u001b[0m\u001b[91mH5Odtype.c:1188:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     if(NULL == (dst = H5T_copy(src, H5T_COPY_ALL)))\n     ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Odtype.c:20:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Odtype.c: In function 'H5O_dtype_pre_copy_file':\n\u001b[0m\u001b[91mH5Odtype.c:1533:9: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n         if(NULL == (udata->src_dtype = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))\n         ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Odtype.c:20:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Odtype.c: In function 'H5O_dtype_debug':\n\u001b[0m\u001b[91mH5Odtype.c:1732:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n       (unsigned long)(dt->shared->u.compnd.memb[i].offset));\n       ^\n\u001b[0m\u001b[91mH5Odtype.c:1734:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        indent + 3, MAX(0, fwidth - 3));\n        ^\n\u001b[0m\u001b[91mH5Odtype.c:1738:2: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n  H5O_dtype_debug(f, dxpl_id, dt->shared->parent, stream, indent+3, MAX(0, fwidth-3));\n  ^\n\u001b[0m\u001b[91mH5Odtype.c:1965:2: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n  H5O_dtype_debug(f, dxpl_id, dt->shared->parent, stream, indent + 3, MAX(0, fwidth - 3));\n  ^\n\u001b[0m\u001b[91mH5Odtype.c: In function 'H5O_dtype_size':\n\u001b[0m\u001b[91mH5Odtype.c:1223:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5O_dtype_size(const H5F_t *f, const void *_mesg)\n ^\n\u001b[0m\u001b[91mH5Odtype.c: In function 'H5O_dtype_decode_helper':\n\u001b[0m\u001b[91mH5Odtype.c:333:25: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n                         for(j = 0; j <= i; j++)\n                         ^\n\u001b[0m\u001b[91mH5Odtype.c:353:33: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n                                 for(j = 0; j <= i; j++)\n                                 ^\n\u001b[0m  CC       H5Oefl.lo\n\u001b[91mH5Oefl.c: In function 'H5O_efl_debug':\n\u001b[0m\u001b[91mH5Oefl.c:574:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     mesg->slot[u].name);\n     ^\n\u001b[0m\u001b[91mH5Oefl.c:578:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     (unsigned long)(mesg->slot[u].name_offset));\n     ^\n\u001b[0m\u001b[91mH5Oefl.c:582:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      (unsigned long)(mesg->slot[u].offset));\n      ^\n\u001b[0m\u001b[91mH5Oefl.c:586:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n      (unsigned long)(mesg->slot[u].size));\n      ^\n\u001b[0m  CC       H5Ofill.lo\n\u001b[91mIn file included from H5Ofill.c:69:0:\nH5Oshared.h: In function 'H5O_fill_shared_post_copy_file':\n\u001b[0m\u001b[91mH5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]\n H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,\n                                            ^\n\u001b[0m\u001b[91mIn file included from H5Ofill.c:105:0:\nH5Oshared.h: In function 'H5O_fill_new_shared_post_copy_file':\n\u001b[0m\u001b[91mH5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]\n H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,\n                                            ^\n\u001b[0m\u001b[91mIn file included from H5Cprivate.h:37:0,\n                 from H5ACprivate.h:35,\n                 from H5Oprivate.h:38,\n                 from H5Dprivate.h:27,\n                 from H5Ofill.c:26:\nH5Ofill.c: In function 'H5O_fill_new_decode':\n\u001b[0m\u001b[91mH5Fprivate.h:132:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n    (i) |= ((int32_t)(((*(p) & 0xff) << 24) |                                  \\\n                                     ^\nH5Ofill.c:219:13: note: in expansion of macro 'INT32DECODE'\n             INT32DECODE(p, fill->size);\n             ^\n\u001b[0m  CC       H5Oginfo.lo\n  CC       H5Olayout.lo\n  CC       H5Olinfo.lo\n  CC       H5Olink.lo\n  CC       H5Omessage.lo\n\u001b[91mH5Omessage.c: In function 'H5O_msg_reset_share':\n\u001b[0m\u001b[91mH5Omessage.c:1703:28: warning: variable 'type' set but not used [-Wunused-but-set-variable]\n     const H5O_msg_class_t *type;        /* Actual H5O class type for the ID */\n                            ^\n\u001b[0m\u001b[91mH5Omessage.c: In function 'H5O_msg_count_real':\nH5Omessage.c:836:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5O_msg_count_real(const H5O_t *oh, const H5O_msg_class_t *type)\n ^\n\u001b[0m\u001b[91mH5Omessage.c: In function 'H5O_msg_exists_oh':\n\u001b[0m\u001b[91mH5Omessage.c:921:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5O_msg_exists_oh(const H5O_t *oh, unsigned type_id)\n ^\n\u001b[0m\u001b[91mH5Omessage.c: In function 'H5O_msg_can_share_in_ohdr':\n\u001b[0m\u001b[91mH5Omessage.c:1574:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5O_msg_can_share_in_ohdr(unsigned type_id)\n ^\n\u001b[0m\u001b[91mH5Omessage.c: In function 'H5O_msg_is_shared':\n\u001b[0m\u001b[91mH5Omessage.c:1612:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5O_msg_is_shared(unsigned type_id, const void *mesg)\n ^\n\u001b[0m  CC       H5Omtime.lo\n  CC       H5Oname.lo\n  CC       H5Onull.lo\n  CC       H5Opline.lo\n\u001b[91mIn file included from H5Opline.c:67:0:\nH5Oshared.h: In function 'H5O_pline_shared_post_copy_file':\nH5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]\n H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,\n                                            ^\n\u001b[0m\u001b[91mH5Opline.c: In function 'H5O_pline_debug':\n\u001b[0m\u001b[91mH5Opline.c:637:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   (unsigned)(pline->filter[i].id));\n   ^\n\u001b[0m\u001b[91mH5Opline.c:641:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n       pline->filter[i].name);\n       ^\n\u001b[0m\u001b[91mH5Opline.c:644:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n       \"Filter name:\");\n       ^\n\u001b[0m\u001b[91mH5Opline.c:647:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   pline->filter[i].flags);\n   ^\n\u001b[0m\u001b[91mH5Opline.c:650:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   pline->filter[i].cd_nelmts);\n   ^\n\u001b[0m\u001b[91mH5Opline.c:659:7: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n       pline->filter[i].cd_values[j]);\n       ^\n\u001b[0m  CC       H5Orefcount.lo\n  CC       H5Osdspace.lo\n\u001b[91mIn file included from H5Osdspace.c:61:0:\nH5Oshared.h: In function 'H5O_sdspace_shared_post_copy_file':\n\u001b[0m\u001b[91mH5Oshared.h:386:44: warning: unused parameter 'oloc_src' [-Wunused-parameter]\n H5O_SHARED_POST_COPY_FILE(const H5O_loc_t *oloc_src, const void *mesg_src,\n                                            ^\n\u001b[0m  CC       H5Oshared.lo\n\u001b[91mH5Oshared.c: In function 'H5O_shared_copy_file':\n\u001b[0m\u001b[91mH5Oshared.c:590:29: warning: unused parameter 'file_src' [-Wunused-parameter]\n H5O_shared_copy_file(H5F_t *file_src, H5F_t *file_dst,\n                             ^\n\u001b[0m\u001b[91mH5Oshared.c:592:71: warning: unused parameter 'cpy_info' [-Wunused-parameter]\n     hbool_t UNUSED *recompute_size, unsigned *mesg_flags, H5O_copy_t *cpy_info,\n                                                                       ^\n\u001b[0m  CC       H5Ostab.lo\n  CC       H5Oshmesg.lo\n  CC       H5Otest.lo\n  CC       H5Ounknown.lo\n  CC       H5P.lo\n  CC       H5Pacpl.lo\n  CC       H5Pdapl.lo\n  CC       H5Pdcpl.lo\n\u001b[91mH5Pdcpl.c: In function 'H5P_get_fill_value':\n\u001b[0m\u001b[91mH5Pdcpl.c:1565:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     if((dst_id = H5I_register(H5I_DATATYPE, H5T_copy(type, H5T_COPY_TRANSIENT), FALSE)) < 0)\n     ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Pdcpl.c:39:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m  CC       H5Pdeprec.lo\n  CC       H5Pdxpl.lo\n\u001b[91mH5Pdxpl.c: In function 'H5P__dxfr_reg_prop':\nH5Pdxpl.c:218:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     double def_btree_split_ratio[3] = H5D_XFER_BTREE_SPLIT_RATIO_DEF;   /* Default value for B-tree node split ratios */\n     ^\nH5Pdxpl.c:218:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pdxpl.c:218:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m  CC       H5Pfapl.lo\n\u001b[91mH5Pfapl.c: In function 'H5P_facc_reg_prop':\n\u001b[0m\u001b[91mH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     H5AC_cache_config_t mdc_initCacheCfg = H5F_ACS_META_CACHE_INIT_CONFIG_DEF;  /* Default metadata cache settings */\n     ^\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5Pfapl.c:212:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m  CC       H5Pfcpl.lo\n  CC       H5Pfmpl.lo\n  CC       H5Pgcpl.lo\n  CC       H5Pint.lo\n\u001b[91mH5Pint.c: In function 'H5P__iterate_pclass_cb':\n\u001b[0m\u001b[91mH5Pint.c:3632:11: warning: unused variable 'key' [-Wunused-variable]\n     char *key = (char *)_key;                           /* Pointer to the property's name */\n           ^\n\u001b[0m\u001b[91mH5Pint.c: In function 'H5P_get_class_parent':\n\u001b[0m\u001b[91mH5Pint.c:4830:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5P_get_class_parent(const H5P_genclass_t *pclass)\n ^\n\u001b[0m\u001b[91mH5Pint.c: In function 'H5P_get_plist_id':\n\u001b[0m\u001b[91mH5Pint.c:4898:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5P_get_plist_id(const H5P_genplist_t *plist)\n ^\n\u001b[0m\u001b[91mH5Pint.c: In function 'H5P_get_class':\n\u001b[0m\u001b[91mH5Pint.c:4926:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5P_get_class(const H5P_genplist_t *plist)\n ^\n\u001b[0m  CC       H5Plapl.lo\n\u001b[91mH5Plapl.c: In function 'H5P_lacc_elink_fapl_cmp':\n\u001b[0m\u001b[91mH5Plapl.c:305:16: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n         herr_t status;\n                ^\n\u001b[0m  CC       H5Plcpl.lo\n  CC       H5Pocpl.lo\n\u001b[91mH5Pocpl.c: In function 'H5Pget_filter_by_id2':\n\u001b[0m\u001b[91mH5Pocpl.c:1076:30: warning: unused variable 'filter' [-Wunused-variable]\n     const H5Z_filter_info_t *filter;        /* Pointer to filter information */\n                              ^\n\u001b[0m\u001b[91mH5Pocpl.c:1075:21: warning: unused variable 'pline' [-Wunused-variable]\n     H5O_pline_t     pline;                  /* Filter pipeline */\n                     ^\n\u001b[0m  CC       H5Pocpypl.lo\n\u001b[91mH5Pocpypl.c: In function 'H5P__ocpy_merge_comm_dt_list_cmp':\n\u001b[0m\u001b[91mH5Pocpypl.c:280:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5P__ocpy_merge_comm_dt_list_cmp(const void *_dt_list1, const void *_dt_list2,\n ^\n\u001b[0m  CC       H5Pstrcpl.lo\n  CC       H5Ptest.lo\n  CC       H5PL.lo\n\u001b[91mH5PL.c: In function 'H5PL__open':\n\u001b[0m\u001b[91mH5PL.c:545:39: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]\n         if(NULL == (get_plugin_info = (H5PL_get_plugin_info_t)H5PL_GET_LIB_FUNC(handle, \"H5PLget_plugin_info\"))) {\n                                       ^\n\u001b[0m\u001b[91mH5PL.c: In function 'H5PL__search_table':\n\u001b[0m\u001b[91mH5PL.c:628:47: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]\n                 if(NULL == (get_plugin_info = (H5PL_get_plugin_info_t)H5PL_GET_LIB_FUNC((H5PL_table_g[i]).handle, \"H5PLget_plugin_info\")))\n                                               ^\n\u001b[0m  CC       H5R.lo\n  CC       H5Rdeprec.lo\n  CC       H5RC.lo\n  CC       H5RS.lo\n\u001b[91mH5RS.c: In function 'H5RS_wrap':\nH5RS.c:153:20: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     ret_value->s = (char *)s;      /* (Cast away const OK - QAK) */\n                    ^\n\u001b[0m\u001b[91mH5RS.c: In function 'H5RS_cmp':\n\u001b[0m\u001b[91mH5RS.c:389:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5RS_cmp(const H5RS_str_t *rs1, const H5RS_str_t *rs2)\n ^\n\u001b[0m\u001b[91mH5RS.c: In function 'H5RS_len':\n\u001b[0m\u001b[91mH5RS.c:423:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5RS_len(const H5RS_str_t *rs)\n ^\n\u001b[0m\u001b[91mH5RS.c: In function 'H5RS_get_str':\n\u001b[0m\u001b[91mH5RS.c:457:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5RS_get_str(const H5RS_str_t *rs)\n ^\n\u001b[0m\u001b[91mH5RS.c: In function 'H5RS_get_count':\n\u001b[0m\u001b[91mH5RS.c:489:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5RS_get_count(const H5RS_str_t *rs)\n ^\n\u001b[0m  CC       H5S.lo\n\u001b[91mH5S.c: In function 'H5S_has_extent':\n\u001b[0m\u001b[91mH5S.c:1893:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5S_has_extent(const H5S_t *ds)\n ^\n\u001b[0m\u001b[91mH5S.c: In function 'H5S_extent_equal':\n\u001b[0m\u001b[91mH5S.c:2008:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5S_extent_equal(const H5S_t *ds1, const H5S_t *ds2)\n ^\n\u001b[0m\u001b[91mH5S.c: In function 'H5S_extent_nelem':\n\u001b[0m\u001b[91mH5S.c:2069:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5S_extent_nelem(const H5S_extent_t *ext)\n ^\n\u001b[0m  CC       H5Sall.lo\n\u001b[91mH5Sall.c: In function 'H5S_all_project_simple':\n\u001b[0m\u001b[91mH5Sall.c:814:37: warning: unused parameter 'base_space' [-Wunused-parameter]\n H5S_all_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)\n                                     ^\n\u001b[0m\u001b[91mH5Sall.c:814:76: warning: unused parameter 'offset' [-Wunused-parameter]\n H5S_all_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)\n                                                                            ^\n\u001b[0m  CC       H5Sdbg.lo\n\u001b[91mH5Sdbg.c: In function 'H5S_debug':\nH5Sdbg.c:113:34: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                                  indent + 3, MAX(0, fwidth - 3));\n                                  ^\nH5Sdbg.c:98:5: warning: enumeration value 'H5S_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(H5S_GET_EXTENT_TYPE(mesg)) {\n     ^\n\u001b[0m  CC       H5Shyper.lo\n\u001b[91mH5Shyper.c: In function 'H5S_hyper_serialize':\n\u001b[0m\u001b[91mH5Shyper.c:2200:13: warning: conversion to 'uint32_t' from 'long unsigned int' may alter its value [-Wconversion]\n         len += (size_t)(8 * space->extent.rank * block_count);\n             ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_iter_has_next_block':\nH5Shyper.c:598:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_iter_has_next_block(const H5S_sel_iter_t *iter)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_cmp_spans':\n\u001b[0m\u001b[91mH5Shyper.c:1415:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_cmp_spans (H5S_hyper_span_info_t *span_info1, H5S_hyper_span_info_t *span_info2)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_is_valid_helper.isra.4':\n\u001b[0m\u001b[91mH5Shyper.c:1690:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_is_valid_helper (const H5S_hyper_span_info_t *spans, const hssize_t *offset, const hsize_t *size, hsize_t rank)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_is_valid':\n\u001b[0m\u001b[91mH5Shyper.c:1753:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_is_valid (const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_span_nblocks':\n\u001b[0m\u001b[91mH5Shyper.c:1814:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_span_nblocks(H5S_hyper_span_info_t *spans)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_get_select_hyper_nblocks.isra.5':\n\u001b[0m\u001b[91mH5Shyper.c:1859:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_get_select_hyper_nblocks(H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_serial_size':\n\u001b[0m\u001b[91mH5Shyper.c:1941:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_serial_size(const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_is_contiguous':\n\u001b[0m\u001b[91mH5Shyper.c:2882:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_is_contiguous(const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_is_single':\n\u001b[0m\u001b[91mH5Shyper.c:3067:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_is_single(const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_spans_nelem':\n\u001b[0m\u001b[91mH5Shyper.c:5623:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_hyper_spans_nelem (H5S_hyper_span_info_t *spans)\n ^\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_get_select_hyper_blocklist.isra.18.constprop.29':\n\u001b[0m\u001b[91mH5Shyper.c:2515:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 while(temp_dim >= 0 && !done) {\n                                ^\n\u001b[0m\u001b[91mcc1: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]\n\u001b[0m\u001b[91mH5Shyper.c: In function 'H5S_hyper_serialize':\n\u001b[0m\u001b[91mH5Shyper.c:2162:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 while(temp_dim >= 0 && done == 0) {\n                                ^\n\u001b[0m\u001b[91mcc1: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]\n\u001b[0m  CC       H5Smpio.lo\n  CC       H5Snone.lo\n\u001b[91mH5Snone.c: In function 'H5S_none_project_simple':\n\u001b[0m\u001b[91mH5Snone.c:763:38: warning: unused parameter 'base_space' [-Wunused-parameter]\n H5S_none_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)\n                                      ^\n\u001b[0m\u001b[91mH5Snone.c:763:77: warning: unused parameter 'offset' [-Wunused-parameter]\n H5S_none_project_simple(const H5S_t *base_space, H5S_t *new_space, hsize_t *offset)\n                                                                             ^\n\u001b[0m  CC       H5Spoint.lo\n\u001b[91mH5Spoint.c: In function 'H5S_point_bounds':\n\u001b[0m\u001b[91mH5Spoint.c:1106:63: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             if(start[u] > (node->pnt[u] + space->select.offset[u]))\n                                                               ^\n\u001b[0m\u001b[91mH5Spoint.c:1107:63: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 start[u] = node->pnt[u] + space->select.offset[u];\n                                                               ^\n\u001b[0m\u001b[91mH5Spoint.c:1108:61: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             if(end[u] < (node->pnt[u] + space->select.offset[u]))\n                                                             ^\n\u001b[0m\u001b[91mH5Spoint.c:1109:61: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 end[u] = node->pnt[u] + space->select.offset[u];\n                                                             ^\n\u001b[0m\u001b[91mH5Spoint.c: In function 'H5S_point_get_seq_list':\n\u001b[0m\u001b[91mH5Spoint.c:1655:56: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             loc += (node->pnt[i] + space->select.offset[i]) * acc;\n                                                        ^\n\u001b[0m\u001b[91mH5Spoint.c: In function 'H5S_point_is_valid':\n\u001b[0m\u001b[91mH5Spoint.c:685:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_point_is_valid (const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Spoint.c: In function 'H5S_point_serial_size':\n\u001b[0m\u001b[91mH5Spoint.c:774:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5S_point_serial_size (const H5S_t *space)\n ^\n\u001b[0m  CC       H5Sselect.lo\n\u001b[91mH5Sselect.c: In function 'H5S_select_iterate':\n\u001b[0m\u001b[91mH5Sselect.c:1218:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t iter;        /* Selection iteration info */\n                    ^\n\u001b[0m\u001b[91mH5Sselect.c:1266:17: warning: size of 'off' is 8192 bytes [-Wlarger-than=]\n         hsize_t off[H5D_IO_VECTOR_SIZE];        /* Array to store sequence offsets */\n                 ^\n\u001b[0m\u001b[91mH5Sselect.c:1267:16: warning: size of 'len' is 8192 bytes [-Wlarger-than=]\n         size_t len[H5D_IO_VECTOR_SIZE];         /* Array to store sequence lengths */\n                ^\n\u001b[0m\u001b[91mH5Sselect.c: In function 'H5S_select_shape_same':\n\u001b[0m\u001b[91mH5Sselect.c:1428:20: warning: size of 'iter_a' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t iter_a;    /* Selection a iteration info */\n                    ^\n\u001b[0m\u001b[91mH5Sselect.c:1429:20: warning: size of 'iter_b' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t iter_b;    /* Selection b iteration info */\n                    ^\n\u001b[0m\u001b[91mH5Sselect.c: In function 'H5S_select_fill':\n\u001b[0m\u001b[91mH5Sselect.c:1997:20: warning: size of 'iter' is 2232 bytes [-Wlarger-than=]\n     H5S_sel_iter_t iter;        /* Selection iteration info */\n                    ^\n\u001b[0m\u001b[91mH5Sselect.c:2025:17: warning: size of 'off' is 8192 bytes [-Wlarger-than=]\n         hsize_t off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */\n                 ^\n\u001b[0m\u001b[91mH5Sselect.c:2026:16: warning: size of 'len' is 8192 bytes [-Wlarger-than=]\n         size_t len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */\n                ^\n\u001b[0m\u001b[91mH5Sselect.c: In function 'H5S_get_select_npoints':\n\u001b[0m\u001b[91mH5Sselect.c:333:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5S_get_select_npoints(const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Sselect.c: In function 'H5S_get_select_type':\n\u001b[0m\u001b[91mH5Sselect.c:1386:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5S_get_select_type(const H5S_t *space)\n ^\n\u001b[0m\u001b[91mH5Sselect.c: In function 'H5S_select_iterate':\n\u001b[0m\u001b[91mH5Sselect.c:1214:1: warning: stack usage is 19376 bytes [-Wstack-usage=]\n H5S_select_iterate(void *buf, hid_t type_id, const H5S_t *space, H5D_operator_t op,\n ^\n\u001b[0m\u001b[91mH5Sselect.c:1327:1: warning: the frame size of 19284 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }   /* end H5S_select_iterate() */\n ^\n\u001b[0m\u001b[91mH5Sselect.c: In function 'H5S_select_fill':\n\u001b[0m\u001b[91mH5Sselect.c:1995:1: warning: stack usage is 18784 bytes [-Wstack-usage=]\n H5S_select_fill(const void *fill, size_t fill_size, const H5S_t *space, void *_buf)\n ^\n\u001b[0m\u001b[91mH5Sselect.c:2057:1: warning: the frame size of 18696 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }   /* H5S_select_fill() */\n ^\n\u001b[0m  CC       H5Stest.lo\n  CC       H5SL.lo\n\u001b[91mH5SL.c: In function 'H5SL_release_common':\nH5SL.c:776:35: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             (void)(op)(node->item,(void *)node->key,op_data);\n                                   ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_remove_first':\n\u001b[0m\u001b[91mH5SL.c:1161:30: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     size_t      level = slist->curr_level;      /* Skip list level */\n                              ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_iterate':\n\u001b[0m\u001b[91mH5SL.c:2051:42: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         if((ret_value = (op)(node->item, (void *)node->key, op_data)) != 0)\n                                          ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_term_interface':\n\u001b[0m\u001b[91mH5SL.c:2251:13: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     herr_t  ret;\n             ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_count':\nH5SL.c:944:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5SL_count(H5SL_t *slist)\n ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_first':\n\u001b[0m\u001b[91mH5SL.c:1844:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5SL_first(H5SL_t *slist)\n ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_next':\n\u001b[0m\u001b[91mH5SL.c:1878:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5SL_next(H5SL_node_t *slist_node)\n ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_prev':\n\u001b[0m\u001b[91mH5SL.c:1912:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5SL_prev(H5SL_node_t *slist_node)\n ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_last':\n\u001b[0m\u001b[91mH5SL.c:1947:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5SL_last(H5SL_t *slist)\n ^\n\u001b[0m\u001b[91mH5SL.c: In function 'H5SL_item':\n\u001b[0m\u001b[91mH5SL.c:1981:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5SL_item(H5SL_node_t *slist_node)\n ^\n\u001b[0m  CC       H5SM.lo\n  CC       H5SMbtree2.lo\n  CC       H5SMcache.lo\n  CC       H5SMmessage.lo\n\u001b[91mH5SMmessage.c: In function 'H5SM_message_compare':\nH5SMmessage.c:229:16: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n         herr_t status;\n                ^\n\u001b[0m  CC       H5SMtest.lo\n  CC       H5ST.lo\n\u001b[91mH5ST.c: In function 'H5ST_find_internal':\nH5ST.c:290:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5ST_find_internal(H5ST_ptr_t p, const char *s)\n ^\n\u001b[0m\u001b[91mH5ST.c: In function 'H5ST_findfirst_internal':\n\u001b[0m\u001b[91mH5ST.c:405:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5ST_findfirst_internal(H5ST_ptr_t p)\n ^\n\u001b[0m\u001b[91mH5ST.c: In function 'H5ST_getnext':\n\u001b[0m\u001b[91mH5ST.c:484:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5ST_getnext(H5ST_ptr_t p)\n ^\n\u001b[0m\u001b[91mH5ST.c: In function 'H5ST_search':\nH5ST.c:245:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5ST_search(H5ST_tree_t *tree, const char *s)\n ^\n\u001b[0m\u001b[91mH5ST.c: In function 'H5ST_findnext':\nH5ST.c:542:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5ST_findnext(H5ST_ptr_t p)\n ^\n\u001b[0m  CC       H5T.lo\n\u001b[91mH5T.c: In function 'H5T_copy':\n\u001b[0m\u001b[91mH5T.c:3297:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     new_dt->shared->u.compnd.memb[i].offset += accum_change;\n                     ^\n\u001b[0m\u001b[91mH5T.c:3302:33: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                                 old_match = j;\n                                 ^\n\u001b[0m\u001b[91mH5T.c:3312:25: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                         old_match = i;\n                         ^\n\u001b[0m\u001b[91mH5T.c:3319:25: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                         accum_change += (new_dt->shared->u.compnd.memb[i].type->shared->size - old_dt->shared->u.compnd.memb[old_match].type->shared->size);\n                         ^\n\u001b[0m\u001b[91mH5T.c:3319:38: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n                         accum_change += (new_dt->shared->u.compnd.memb[i].type->shared->size - old_dt->shared->u.compnd.memb[old_match].type->shared->size);\n                                      ^\n\u001b[0m\u001b[91mH5T.c:3324:17: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 new_dt->shared->size += accum_change;\n                 ^\n\u001b[0m\u001b[91mH5T.c:3265:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n         switch(new_dt->shared->type) {\n         ^\nH5T.c:3265:9: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5T.c:3265:9: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5T.c:3265:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5T.c:3265:9: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5T.c:3265:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5T.c:3265:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c: In function 'H5T__free':\n\u001b[0m\u001b[91mH5T.c:3567:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt->shared->type) {\n     ^\nH5T.c:3567:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nH5T.c:3567:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_cmp':\n\u001b[0m\u001b[91mH5T.c:3987:54: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                 for(i = dt1->shared->u.compnd.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i)\n                                                      ^\n\u001b[0m\u001b[91mH5T.c:3991:39: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                             tmp = idx1[j];\n                                       ^\n\u001b[0m\u001b[91mH5T.c:3993:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                             idx1[j + 1] = tmp;\n                             ^\n\u001b[0m\u001b[91mH5T.c:3996:54: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                 for(i = dt2->shared->u.compnd.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i)\n                                                      ^\n\u001b[0m\u001b[91mH5T.c:4000:39: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                             tmp = idx2[j];\n                                       ^\n\u001b[0m\u001b[91mH5T.c:4002:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                             idx2[j + 1] = tmp;\n                             ^\n\u001b[0m\u001b[91mH5T.c:4065:52: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                 for (i=dt1->shared->u.enumer.nmembs-1, swapped=TRUE; swapped && i>=0; --i)\n                                                    ^\n\u001b[0m\u001b[91mH5T.c:4069:39: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                             tmp = idx1[j];\n                                       ^\n\u001b[0m\u001b[91mH5T.c:4071:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                             idx1[j+1] = tmp;\n                             ^\n\u001b[0m\u001b[91mH5T.c:4077:52: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                 for (i=dt2->shared->u.enumer.nmembs-1, swapped=TRUE; swapped && i>=0; --i)\n                                                    ^\n\u001b[0m\u001b[91mH5T.c:4081:39: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                             tmp = idx2[j];\n                                       ^\n\u001b[0m\u001b[91mH5T.c:4083:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                             idx2[j+1] = tmp;\n                             ^\n\u001b[0m\u001b[91mH5T.c:4224:13: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n             switch (dt1->shared->type) {\n             ^\nH5T.c:4224:13: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5T.c:4224:13: warning: enumeration value 'H5T_COMPOUND' not handled in switch [-Wswitch-enum]\nH5T.c:4224:13: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5T.c:4224:13: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5T.c:4224:13: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nH5T.c:4224:13: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c:3970:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt1->shared->type) {\n     ^\nH5T.c:3970:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5T.c:3970:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5T.c:3970:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5T.c:3970:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5T.c:3970:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5T.c:3970:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5T.c:3970:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_path_find':\n\u001b[0m\u001b[91mH5T.c:4469:2: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n  if(NULL == (path->src = H5T_copy(src, H5T_COPY_ALL)))\n  ^\n\u001b[0m\u001b[91mH5T.c:3162:1: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5T_copy(H5T_t *old_dt, H5T_copy_t method)\n ^\n\u001b[0m\u001b[91mH5T.c:4471:9: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n         if(NULL == (path->dst = H5T_copy(dst, H5T_COPY_ALL)))\n         ^\n\u001b[0m\u001b[91mH5T.c:3162:1: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5T_copy(H5T_t *old_dt, H5T_copy_t method)\n ^\n\u001b[0m\u001b[91mIn file included from H5T.c:36:0:\nH5T.c:4592:71: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         HDmemmove(H5T_g.path + md + 1, H5T_g.path + md, (H5T_g.npaths - md) * sizeof(H5T_path_t*));\n                                                                       ^\nH5private.h:989:67: note: in definition of macro 'HDmemmove'\n     #define HDmemmove(X,Y,Z)  memmove((char*)(X),(const char*)(Y),Z)\n                                                                   ^\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_is_sensible':\n\u001b[0m\u001b[91mH5T.c:5040:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt->shared->type) {\n     ^\nH5T.c:5040:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nH5T.c:5040:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_set_loc':\n\u001b[0m\u001b[91mH5T.c:5139:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     dt->shared->u.compnd.memb[i].offset += accum_change;\n                     ^\n\u001b[0m\u001b[91mH5T.c:5162:72: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                             accum_change += (memb_type->shared->size - (int)old_size);\n                                                                        ^\n\u001b[0m\u001b[91mH5T.c:5162:29: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                             accum_change += (memb_type->shared->size - (int)old_size);\n                             ^\n\u001b[0m\u001b[91mH5T.c:5162:42: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n                             accum_change += (memb_type->shared->size - (int)old_size);\n                                          ^\n\u001b[0m\u001b[91mH5T.c:5168:17: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 dt->shared->size = (size_t)(dt->shared->size + accum_change);\n                 ^\n\u001b[0m\u001b[91mH5T.c:5109:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n         switch(dt->shared->type) {\n         ^\nH5T.c:5109:9: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5T.c:5109:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_upgrade_version_cb':\n\u001b[0m\u001b[91mH5T.c:5278:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt->shared->type) {\n     ^\nH5T.c:5278:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5T.c:5278:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_is_variable_str':\n\u001b[0m\u001b[91mH5T.c:2109:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T_is_variable_str(const H5T_t *dt)\n ^\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_get_size':\n\u001b[0m\u001b[91mH5T.c:3898:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T_get_size(const H5T_t *dt)\n ^\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_path_bkg':\n\u001b[0m\u001b[91mH5T.c:4710:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T_path_bkg(const H5T_path_t *p)\n ^\n\u001b[0m\u001b[91mH5T.c: In function 'H5T_cmp':\n\u001b[0m\u001b[91mH5T.c:3987:88: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 for(i = dt1->shared->u.compnd.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i)\n                                                                                        ^\n\u001b[0m\u001b[91mH5T.c:3996:88: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 for(i = dt2->shared->u.compnd.nmembs - 1, swapped = TRUE; swapped && i >= 0; --i)\n                                                                                        ^\n\u001b[0m\u001b[91mH5T.c:4065:82: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 for (i=dt1->shared->u.enumer.nmembs-1, swapped=TRUE; swapped && i>=0; --i)\n                                                                                  ^\n\u001b[0m\u001b[91mH5T.c:4077:82: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 for (i=dt2->shared->u.enumer.nmembs-1, swapped=TRUE; swapped && i>=0; --i)\n                                                                                  ^\n\u001b[0m\u001b[91mH5T.c: At top level:\nH5T.c:71:0: warning: macro \"H5T_INIT_TYPE_NONE_CORE\" is not used [-Wunused-macros]\n #define H5T_INIT_TYPE_NONE_CORE {           \\\n ^\n\u001b[0m  CC       H5Tarray.lo\n\u001b[91mH5Tarray.c: In function 'H5T__get_array_ndims':\n\u001b[0m\u001b[91mH5Tarray.c:275:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T__get_array_ndims(const H5T_t *dt)\n ^\n\u001b[0m  CC       H5Tbit.lo\n\u001b[91mH5Tbit.c: In function 'H5T__bit_find':\nH5Tbit.c:424:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5T__bit_find(uint8_t *buf, size_t offset, size_t size, H5T_sdir_t direction,\n ^\n\u001b[0m  CC       H5Tcommit.lo\n\u001b[91mH5Tcommit.c: In function 'H5T_committed':\nH5Tcommit.c:493:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T_committed(const H5T_t *type)\n ^\n\u001b[0m  CC       H5Tcompound.lo\n\u001b[91mH5Tcompound.c: In function 'H5T__insert':\nH5Tcompound.c:484:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     parent->shared->u.compnd.memb[idx].type = H5T_copy(member, H5T_COPY_ALL);\n     ^\nIn file included from H5Tpkg.h:39:0,\n                 from H5Tcompound.c:38:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Tcompound.c: In function 'H5T_is_packed':\nH5Tcompound.c:606:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5T_is_packed(const H5T_t *dt)\n ^\n\u001b[0m\u001b[91mH5Tcompound.c: In function 'H5T_get_member_offset':\nH5Tcompound.c:166:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T_get_member_offset(const H5T_t *dt, unsigned membno)\n ^\n\u001b[0m\u001b[91mH5Tcompound.c: In function 'H5T__get_member_size':\nH5Tcompound.c:315:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T__get_member_size(const H5T_t *dt, unsigned membno)\n ^\n\u001b[0m  CC       H5Tconv.lo\n\u001b[91mH5Tconv.c: In function 'H5T_conv_struct_free':\n\u001b[0m\u001b[91mH5Tconv.c:1842:17: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n             int status;\n                 ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_float_ullong':\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8736:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_double_ullong':\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8792:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_ldouble_ullong':\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:721:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:725:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:728:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:551:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \\\n                                                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c:569:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \\\n                     ^\nH5private.h:2057:28: note: in expansion of macro 'H5T_CONV_Fx_CORE'\n #define H5_GLUE(x,y)       x##y\n                            ^\nH5Tconv.c:852:9: note: in expansion of macro 'H5_GLUE'\n         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)\n         ^\nH5Tconv.c:833:9: note: in expansion of macro 'H5T_CONV_LOOP_GUTS'\n         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \\\n         ^\nH5Tconv.c:817:9: note: in expansion of macro 'H5T_CONV_LOOP'\n         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \\\n         ^\nH5Tconv.c:731:17: note: in expansion of macro 'H5T_CONV_LOOP_OUTER'\n                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \\\n                 ^\nH5Tconv.c:592:5: note: in expansion of macro 'H5T_CONV'\n     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \\\n     ^\nH5Tconv.c:8848:5: note: in expansion of macro 'H5T_CONV_Fx'\n     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);\n     ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_f_i':\n\u001b[0m\u001b[91mH5Tconv.c:8966:24: warning: cast from function call of type 'double' to non-matching type 'long unsigned int' [-Wbad-function-cast]\n             buf_size = (size_t)HDpow((double)2.0f, (double)src.u.f.esize) / 8 + 1;\n                        ^\n\u001b[0m\u001b[91mH5Tconv.c:9042:38: warning: conversion to 'hssize_t' from 'uint64_t' may change the sign of the result [-Wsign-conversion]\n                 sign = H5T__bit_get_d(s, src.u.f.sign, (size_t)1);\n                                      ^\n\u001b[0m\u001b[91mH5Tconv.c:9169:38: warning: conversion to 'hssize_t' from 'uint64_t' may change the sign of the result [-Wsign-conversion]\n                 expo = H5T__bit_get_d(s, src.u.f.epos, src.u.f.esize);\n                                      ^\n\u001b[0m\u001b[91mH5Tconv.c:9176:21: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                     expo -= (src.u.f.ebias-1);\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9176:26: warning: conversion to 'hssize_t' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n                     expo -= (src.u.f.ebias-1);\n                          ^\n\u001b[0m\u001b[91mH5Tconv.c:9178:21: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                     expo -= src.u.f.ebias;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9178:26: warning: conversion to 'hssize_t' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n                     expo -= src.u.f.ebias;\n                          ^\n\u001b[0m\u001b[91mH5Tconv.c:9208:17: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 H5T__bit_shift(int_buf, (ssize_t)(expo-src.u.f.msize), (size_t)0, buf_size * 8);\n                 ^\n\u001b[0m\u001b[91mH5Tconv.c:9413:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     sp += direction * buf_stride;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9414:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     dp += direction * buf_stride;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9416:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     sp += direction * src_p->shared->size;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9417:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     dp += direction * dst_p->shared->size;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_i_f':\n\u001b[0m\u001b[91mH5Tconv.c:9763:28: warning: cast from function call of type 'double' to non-matching type 'long long unsigned int' [-Wbad-function-cast]\n                 expo_max = (hsize_t)HDpow((double)2.0f, (double)dst.u.f.esize) - 1;\n                            ^\n\u001b[0m\u001b[91mH5Tconv.c:9842:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     sp += direction * buf_stride;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9843:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     dp += direction * buf_stride;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9845:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     sp += direction * src_p->shared->size;\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9846:21: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                     dp += direction * dst_p->shared->size;\n                     ^\n\u001b[0m\u001b[91mIn file included from H5Tconv.c:33:0:\nH5Tconv.c: At top level:\n\u001b[0m\u001b[91mH5private.h:1795:15: warning: 'H5_interface_initialize_g' defined but not used [-Wunused-variable]\n static int    H5_interface_initialize_g = 0;\n               ^\n\u001b[0m\u001b[91mH5Tconv.c:985:1: warning: 'H5T_init_conv_interface' defined but not used [-Wunused-function]\n H5T_init_conv_interface(void)\n ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_struct_subset':\n\u001b[0m\u001b[91mH5Tconv.c:2077:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5T__conv_struct_subset(const H5T_cdata_t *cdata)\n ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_b_b':\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_i_i':\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_f_f':\n\u001b[0m\u001b[91mH5Tconv.c:4479:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n                     for (i = 0; i < tsize; i += 4) {\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\nH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\nH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\nH5Tconv.c:4127:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n                     for (i = 0; i < tsize; i += 4) {\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_f_i':\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9024:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n                     for (i = 0; i < tsize; i += 4) {\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c: In function 'H5T__conv_i_f':\n\u001b[0m\u001b[91mH5Tconv.c:9823:21: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n                     for (i = 0; i < tsize; i += 4) {\n                     ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m\u001b[91mH5Tconv.c:9900:9: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         for (i = 0; i < size; i += 2) {\n         ^\n\u001b[0m  CC       H5Tcset.lo\n  CC       H5Tdbg.lo\n\u001b[91mH5Tdbg.c: In function 'H5T_debug':\nH5Tdbg.c:175:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt->shared->type) {\n     ^\nH5Tdbg.c:175:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:175:5: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:175:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Tdbg.c:249:2: warning: enumeration value 'H5T_ORDER_ERROR' not handled in switch [-Wswitch-enum]\n  switch(dt->shared->u.atomic.order) {\n  ^\nH5Tdbg.c:249:2: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:281:17: warning: enumeration value 'H5T_SGN_ERROR' not handled in switch [-Wswitch-enum]\n                 switch(dt->shared->u.atomic.u.i.sign) {\n                 ^\nH5Tdbg.c:281:17: warning: enumeration value 'H5T_NSGN' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:300:17: warning: enumeration value 'H5T_NORM_ERROR' not handled in switch [-Wswitch-enum]\n                 switch(dt->shared->u.atomic.u.f.norm) {\n                 ^\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n  switch(dt->shared->type) {\n  ^\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_COMPOUND' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:279:2: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\nH5Tdbg.c:353:9: warning: enumeration value 'H5T_LOC_BADLOC' not handled in switch [-Wswitch-enum]\n         switch(dt->shared->u.vlen.loc) {\n         ^\nH5Tdbg.c:353:9: warning: enumeration value 'H5T_LOC_MAXLOC' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Tdbg.c: In function 'H5T__print_stats':\nH5Tdbg.c:105:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5T__print_stats(H5T_path_t UNUSED * path, int UNUSED * nprint/*in,out*/)\n ^\n\u001b[0m  CC       H5Tdeprec.lo\n  CC       H5Tenum.lo\n\u001b[91mH5Tenum.c: In function 'H5T__enum_create':\nH5Tenum.c:136:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     ret_value->shared->parent = H5T_copy(parent, H5T_COPY_ALL);\n     ^\nIn file included from H5Tpkg.h:39:0,\n                 from H5Tenum.c:31:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Tenum.c: In function 'H5T_enum_nameof':\n\u001b[0m\u001b[91mH5Tenum.c:437:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     if(NULL == (copied_dt = H5T_copy(dt, H5T_COPY_ALL)))\n     ^\n\u001b[0m\u001b[91mIn file included from H5Tpkg.h:39:0,\n                 from H5Tenum.c:31:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Tenum.c: In function 'H5T_enum_valueof':\n\u001b[0m\u001b[91mH5Tenum.c:576:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     if (NULL==(copied_dt=H5T_copy(dt, H5T_COPY_ALL)))\n     ^\n\u001b[0m\u001b[91mIn file included from H5Tpkg.h:39:0,\n                 from H5Tenum.c:31:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m  CC       H5Tfields.lo\n  CC       H5Tfixed.lo\n\u001b[91mH5Tfixed.c: In function 'H5Tget_sign':\nH5Tfixed.c:82:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m\u001b[91mH5Tfixed.c: In function 'H5Tset_sign':\nH5Tfixed.c:161:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m  CC       H5Tfloat.lo\n  CC       H5detect.o\n\u001b[91mH5detect.c:115:19: warning: size of 'd_g' is 12800 bytes [-Wlarger-than=]\n static detected_t d_g[MAXDETECT];\n                   ^\n\u001b[0m\u001b[91mH5detect.c: In function 'find_bias':\n\u001b[0m\u001b[91mH5detect.c:1179:24: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n     unsigned char *a = (unsigned char *) _a;\n                        ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5private.h:313:38: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n #define MIN(a,b)    (((a)<(b)) ? (a) : (b))\n                                      ^\nH5detect.c:1184:10: note: in expansion of macro 'MIN'\n  nbits = MIN(esize, (8 - epos % 8));\n          ^\n\u001b[0m\u001b[91mH5detect.c:1185:22: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n  mask = (1 << nbits) - 1;\n                      ^\n\u001b[0m\u001b[91mH5detect.c:1186:40: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  b = (a[perm[epos / 8]] >> (epos % 8)) & mask;\n                                        ^\n\u001b[0m\u001b[91mH5detect.c:1190:2: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  esize -= nbits;\n  ^\n\u001b[0m\u001b[91mH5detect.c:1190:8: warning: conversion to 'int' from 'long unsigned int' may alter its value [-Wconversion]\n  esize -= nbits;\n        ^\n\u001b[0m\u001b[91mH5detect.c:1191:2: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  epos += nbits;\n  ^\n\u001b[0m\u001b[91mH5detect.c:1191:7: warning: conversion to 'int' from 'long unsigned int' may alter its value [-Wconversion]\n  epos += nbits;\n       ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c: In function 'detect_C89_integers':\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1356:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(signed char,   SCHAR,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1356:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(signed char,   SCHAR,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1357:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(unsigned char,   UCHAR,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1357:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(unsigned char,   UCHAR,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:254:24: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n         _v = (_v << 8) + _i;                                                  \\\n                        ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1358:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(short,    SHORT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1358:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(short,    SHORT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1358:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(short,    SHORT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:254:24: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n         _v = (_v << 8) + _i;                                                  \\\n                        ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1359:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned short,   USHORT,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1359:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned short,   USHORT,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1359:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned short,   USHORT,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1360:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int,    INT,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1360:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int,    INT,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1361:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(unsigned int,   UINT,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1361:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned int,   UINT,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1361:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned int,   UINT,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1362:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(long,    LONG,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1362:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(long,    LONG,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1363:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(unsigned long,   ULONG,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1363:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned long,   ULONG,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1363:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned long,   ULONG,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c: In function 'detect_C89_floats':\n\u001b[0m\u001b[91mH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:327:21: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n     HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                        \\\n                     ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:329:67: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n         for(_byte_mask = (unsigned char)1; _byte_mask; _byte_mask <<= 1) {    \\\n                                                                   ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:331:22: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n             HDmemcpy((void *)&_v2, (const void *)_buf1, sizeof(TYPE));        \\\n                      ^\nH5private.h:986:47: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                               ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:332:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(_v1 != _v2)                                                    \\\n                    ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\nH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:341:13: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n         _v2 /= 256.0;                                                         \\\n             ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:341:13: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n         _v2 /= 256.0;                                                         \\\n             ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:342:25: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n         HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                    \\\n                         ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:343:25: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n         HDmemcpy(_buf3, (const void *)&_v3, sizeof(TYPE));                    \\\n                         ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:350:47: warning: to be safe all intermediate pointers in cast from 'char **' to 'const char **' must be 'const' qualified [-Wcast-qual]\n     fix_order(sizeof(TYPE), _last, INFO.perm, (const char**)&_mesg);          \\\n                                               ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1384:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:448:9: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n  if(_val!=_val2)             \\\n         ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1384:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(float,    FLOAT,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:327:21: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n     HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                        \\\n                     ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:329:67: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n         for(_byte_mask = (unsigned char)1; _byte_mask; _byte_mask <<= 1) {    \\\n                                                                   ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:331:22: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n             HDmemcpy((void *)&_v2, (const void *)_buf1, sizeof(TYPE));        \\\n                      ^\nH5private.h:986:47: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                               ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:332:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(_v1 != _v2)                                                    \\\n                    ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\nH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:342:25: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n         HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                    \\\n                         ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:343:25: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n         HDmemcpy(_buf3, (const void *)&_v3, sizeof(TYPE));                    \\\n                         ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:350:47: warning: to be safe all intermediate pointers in cast from 'char **' to 'const char **' must be 'const' qualified [-Wcast-qual]\n     fix_order(sizeof(TYPE), _last, INFO.perm, (const char**)&_mesg);          \\\n                                               ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1385:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:448:9: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n  if(_val!=_val2)             \\\n         ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1385:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(double,    DOUBLE,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c: In function 'detect_C99_integers8':\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1408:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(int8_t,           INT8,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1408:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(int8_t,           INT8,         d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1415:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(uint8_t,    UINT8,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1415:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(uint8_t,    UINT8,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1422:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(int_least8_t,     INT_LEAST8,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1422:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(int_least8_t,     INT_LEAST8,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1429:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(uint_least8_t,    UINT_LEAST8,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1429:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(uint_least8_t,    UINT_LEAST8,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1436:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(int_fast8_t,      INT_FAST8,    d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1436:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(int_fast8_t,      INT_FAST8,    d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1443:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(uint_fast8_t,    UINT_FAST8,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:274:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,int)                                     \\\n     ^\nH5detect.c:1443:5: note: in expansion of macro 'DETECT_BYTE'\n     DETECT_BYTE(uint_fast8_t,    UINT_FAST8,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c: In function 'detect_C99_integers16':\n\u001b[0m\u001b[91mH5detect.c:254:24: warning: conversion to 'int16_t' from 'int' may alter its value [-Wconversion]\n         _v = (_v << 8) + _i;                                                  \\\n                        ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1469:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int16_t,     INT16,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1469:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int16_t,     INT16,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1469:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int16_t,     INT16,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:254:24: warning: conversion to 'uint16_t' from 'int' may alter its value [-Wconversion]\n         _v = (_v << 8) + _i;                                                  \\\n                        ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1472:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint16_t,     UINT16,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1472:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint16_t,     UINT16,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1472:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint16_t,     UINT16,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:254:24: warning: conversion to 'int_least16_t' from 'int' may alter its value [-Wconversion]\n         _v = (_v << 8) + _i;                                                  \\\n                        ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1475:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least16_t,    INT_LEAST16,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1475:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least16_t,    INT_LEAST16,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1475:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least16_t,    INT_LEAST16,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:254:24: warning: conversion to 'uint_least16_t' from 'int' may alter its value [-Wconversion]\n         _v = (_v << 8) + _i;                                                  \\\n                        ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1478:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least16_t,    UINT_LEAST16, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1478:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least16_t,    UINT_LEAST16, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1478:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least16_t,    UINT_LEAST16, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1481:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_fast16_t,    INT_FAST16,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1481:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_fast16_t,    INT_FAST16,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1484:5: warning: conversion to 'uint_fast16_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint_fast16_t,    UINT_FAST16,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1484:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_fast16_t,    UINT_FAST16,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1484:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_fast16_t,    UINT_FAST16,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c: In function 'detect_C99_integers32':\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1507:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int32_t,     INT32,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1507:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int32_t,     INT32,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1510:5: warning: conversion to 'uint32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint32_t,     UINT32,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1510:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint32_t,     UINT32,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1510:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint32_t,     UINT32,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1513:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least32_t,    INT_LEAST32,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1513:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least32_t,    INT_LEAST32,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1516:5: warning: conversion to 'uint_least32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint_least32_t,    UINT_LEAST32, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1516:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least32_t,    UINT_LEAST32, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1516:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least32_t,    UINT_LEAST32, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1519:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_fast32_t,    INT_FAST32,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1519:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_fast32_t,    INT_FAST32,   d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1522:5: warning: conversion to 'uint_fast32_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint_fast32_t,    UINT_FAST32,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1522:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_fast32_t,    UINT_FAST32,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1522:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_fast32_t,    UINT_FAST32,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c: In function 'detect_C99_integers64':\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1545:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int64_t,     INT64,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1545:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int64_t,     INT64,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1548:5: warning: conversion to 'uint64_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint64_t,     UINT64,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1548:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint64_t,     UINT64,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1548:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint64_t,     UINT64,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1551:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least64_t,    INT_LEAST64,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1551:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_least64_t,    INT_LEAST64,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1554:5: warning: conversion to 'uint_least64_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint_least64_t,    UINT_LEAST64, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1554:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least64_t,    UINT_LEAST64, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1554:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_least64_t,    UINT_LEAST64, d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1557:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_fast64_t,    INT_FAST64,   d_g[nd_g]); nd_g++;\n     ^\nH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1557:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(int_fast64_t,    INT_FAST64,   d_g[nd_g]); nd_g++;\n     ^\nH5detect.c:1560:5: warning: conversion to 'uint_fast64_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(uint_fast64_t,    UINT_FAST64,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1560:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_fast64_t,    UINT_FAST64,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1560:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(uint_fast64_t,    UINT_FAST64,  d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1564:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(long long,    LLONG,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1564:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(long long,    LLONG,        d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1565:5: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     DETECT_I(unsigned long long,  ULLONG,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1565:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned long long,  ULLONG,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:263:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:280:5: note: in expansion of macro 'DETECT_I_BYTE_CORE'\n     DETECT_I_BYTE_CORE(TYPE,VAR,INFO,TYPE)                                    \\\n     ^\nH5detect.c:1565:5: note: in expansion of macro 'DETECT_I'\n     DETECT_I(unsigned long long,  ULLONG,       d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c: In function 'detect_C99_floats':\n\u001b[0m\u001b[91mH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:327:21: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n     HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                        \\\n                     ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:329:67: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n         for(_byte_mask = (unsigned char)1; _byte_mask; _byte_mask <<= 1) {    \\\n                                                                   ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:331:22: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n             HDmemcpy((void *)&_v2, (const void *)_buf1, sizeof(TYPE));        \\\n                      ^\nH5private.h:986:47: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                               ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:332:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(_v1 != _v2)                                                    \\\n                    ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:342:25: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n         HDmemcpy(_buf1, (const void *)&_v1, sizeof(TYPE));                    \\\n                         ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:343:25: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n         HDmemcpy(_buf3, (const void *)&_v3, sizeof(TYPE));                    \\\n                         ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:350:47: warning: to be safe all intermediate pointers in cast from 'char **' to 'const char **' must be 'const' qualified [-Wcast-qual]\n     fix_order(sizeof(TYPE), _last, INFO.perm, (const char**)&_mesg);          \\\n                                               ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mH5detect.c:1630:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from H5detect.c:57:0:\nH5detect.c:444:80: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.size-((INFO.offset+INFO.precision)/8)),((char *)&_val)+(INFO.size-((INFO.offset+INFO.precision)/8)),(size_t)(INFO.precision/8)); \\\n                                                                                ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:446:51: warning: cast discards '__attribute__((noreturn))' qualifier from pointer target type [-Wcast-qual]\n      HDmemcpy(_buf+align_g[_ano]+(INFO.offset/8),((char *)&_val)+(INFO.offset/8),(size_t)(INFO.precision/8)); \\\n                                                   ^\nH5private.h:986:64: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c:448:9: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n  if(_val!=_val2)             \\\n         ^\nH5detect.c:381:5: note: in expansion of macro 'ALIGNMENT'\n     ALIGNMENT(TYPE, INFO);                                                    \\\n     ^\nH5detect.c:1630:5: note: in expansion of macro 'DETECT_F'\n     DETECT_F(long double,   LDOUBLE,      d_g[nd_g]); nd_g++;\n     ^\n\u001b[0m\u001b[91mH5detect.c: In function 'find_bias':\n\u001b[0m\u001b[91mH5detect.c:1177:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n find_bias(int epos, int esize, int *perm, volatile void *_a)\n ^\n\u001b[0m\u001b[91mH5detect.c: In function 'main':\n\u001b[0m\u001b[91mH5detect.c:899:2: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n  for (i=MIN(pass*4+3,d->size-1),\n  ^\n\u001b[0m\u001b[91mH5detect.c:890:2: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n  for (i=MIN(pass*4+3,d->size-1); i>=pass*4; --i) {\n  ^\n\u001b[0m  CCLD     H5detect\nLD_LIBRARY_PATH=\"$LD_LIBRARY_PATH`echo  |                  \\\n\tsed -e 's/-L/:/g' -e 's/ //g'`\"                               \\\n ./H5detect > H5Tinit.c  ||                               \\\n    (test $HDF5_Make_Ignore && echo \"*** Error ignored\") ||          \\\n    (rm -f H5Tinit.c ; exit 1)\n  CC       H5Tinit.lo\n  CC       H5Tnative.lo\n  CC       H5Toffset.lo\n  CC       H5Toh.lo\n  CC       H5Topaque.lo\n\u001b[91mH5Topaque.c: In function 'H5Tset_tag':\nH5Topaque.c:80:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m\u001b[91mH5Topaque.c: In function 'H5Tget_tag':\n\u001b[0m\u001b[91mH5Topaque.c:126:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m  CC       H5Torder.lo\n  CC       H5Tpad.lo\n\u001b[91mH5Tpad.c: In function 'H5Tget_pad':\nH5Tpad.c:83:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m\u001b[91mH5Tpad.c: In function 'H5Tset_pad':\nH5Tpad.c:127:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m  CC       H5Tprecis.lo\n\u001b[91mH5Tprecis.c: In function 'H5Tget_precision':\nH5Tprecis.c:90:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m\u001b[91mH5Tprecis.c: In function 'H5Tset_precision':\n\u001b[0m\u001b[91mH5Tprecis.c:179:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m\u001b[91mH5Tprecis.c: In function 'H5T_set_precision':\n\u001b[0m\u001b[91mH5Tprecis.c:268:6: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n      switch (dt->shared->type) {\n      ^\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_COMPOUND' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nH5Tprecis.c:268:6: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m  CC       H5Tstrpad.lo\n\u001b[91mH5Tstrpad.c: In function 'H5Tget_strpad':\nH5Tstrpad.c:86:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m\u001b[91mH5Tstrpad.c: In function 'H5Tset_strpad':\n\u001b[0m\u001b[91mH5Tstrpad.c:143:21: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))\n                     ^\n\u001b[0m  CC       H5Tvisit.lo\n\u001b[91mH5Tvisit.c: In function 'H5T__visit':\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt->shared->type) {\n     ^\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Tvisit.c:119:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m  CC       H5Tvlen.lo\n\u001b[91mH5Tvlen.c: In function 'H5Tvlen_create':\nH5Tvlen.c:116:22: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (base = H5I_object_verify(base_id, H5I_DATATYPE)))\n                      ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T__vlen_create':\n\u001b[0m\u001b[91mH5Tvlen.c:168:5: warning: passing argument 1 of 'H5T_copy' discards 'const' qualifier from pointer target type [enabled by default]\n     if(NULL == (dt->shared->parent = H5T_copy(base, H5T_COPY_ALL)))\n     ^\nIn file included from H5Oprivate.h:41:0,\n                 from H5Dprivate.h:27,\n                 from H5Tvlen.c:28:\nH5Tprivate.h:109:15: note: expected 'struct H5T_t *' but argument is of type 'const struct H5T_t *'\n H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);\n               ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T__vlen_set_loc':\n\u001b[0m\u001b[91mH5Tvlen.c:270:59: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 dt->shared->size = 4 + H5F_SIZEOF_ADDR(f) + 4;\n                                                           ^\n\u001b[0m\u001b[91mH5Tvlen.c:222:9: warning: enumeration value 'H5T_LOC_MAXLOC' not handled in switch [-Wswitch-enum]\n         switch(loc) {\n         ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T_vlen_str_mem_write':\n\u001b[0m\u001b[91mH5Tvlen.c:719:20: warning: request for implicit conversion from 'void *' to 'char *' not permitted in C++ [-Wc++-compat]\n         if(NULL==(t=(vl_alloc_info->alloc_func)((seq_len+1)*base_size,vl_alloc_info->alloc_info)))\n                    ^\n\u001b[0m\u001b[91mH5Tvlen.c:723:20: warning: request for implicit conversion from 'void *' to 'char *' not permitted in C++ [-Wc++-compat]\n         if(NULL==(t=H5MM_malloc((seq_len+1)*base_size)))\n                    ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T_vlen_disk_isnull':\n\u001b[0m\u001b[91mH5Tvlen.c:847:23: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n     H5F_addr_decode(f,(const uint8_t **)&vl,&addr);\n                       ^\nH5Tvlen.c: In function 'H5T_vlen_disk_read':\n\u001b[0m\u001b[91mH5Tvlen.c:884:23: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n     H5F_addr_decode(f,(const uint8_t **)&vl,&(hobjid.addr));\n                       ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T_vlen_disk_write':\n\u001b[0m\u001b[91mH5Tvlen.c:937:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&bg, &(bg_hobjid.addr));\n                            ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T_vlen_disk_setnull':\n\u001b[0m\u001b[91mH5Tvlen.c:999:28: warning: to be safe all intermediate pointers in cast from 'uint8_t **' to 'const uint8_t **' must be 'const' qualified [-Wcast-qual]\n         H5F_addr_decode(f, (const uint8_t **)&bg, &(bg_hobjid.addr));\n                            ^\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T_vlen_reclaim_recurse':\n\u001b[0m\u001b[91mH5Tvlen.c:1055:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dt->shared->type) {\n     ^\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_INTEGER' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Tvlen.c:1055:5: warning: enumeration value 'H5T_FLOAT' not handled in switch [-Wswitch-enum]\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Tvlen.c:1055:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Tvlen.c:1055:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Tvlen.c: In function 'H5T_vlen_reclaim':\n\u001b[0m\u001b[91mH5Tvlen.c:1170:20: warning: request for implicit conversion from 'void *' to 'struct H5T_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (dt = H5I_object_verify(type_id, H5I_DATATYPE)))\n                    ^\n\u001b[0m  CC       H5TS.lo\n\u001b[91mH5TS.c: In function 'H5TS_create_thread':\nH5TS.c:512:38: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]\n     pthread_create(&ret_value, attr, (void * (*)(void *))func, udata);\n                                      ^\n\u001b[0m  CC       H5VM.lo\n\u001b[91mH5VM.c: In function 'H5VM_hyper_eq':\n\u001b[0m\u001b[91mH5VM.c:359:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5VM_hyper_eq(unsigned n,\n ^\n\u001b[0m\u001b[91mH5VM.c: In function 'H5VM_hyper_disjointp':\n\u001b[0m\u001b[91mH5VM.c:407:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5VM_hyper_disjointp(unsigned n,\n ^\n\u001b[0m\u001b[91mH5VM.c: In function 'H5VM_array_offset_pre':\n\u001b[0m\u001b[91mH5VM.c:1080:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5VM_array_offset_pre(unsigned n, const hsize_t *acc, const hsize_t *offset)\n ^\n\u001b[0m  CC       H5WB.lo\n  CC       H5Z.lo\n\u001b[91mH5Z.c: In function 'H5Z_find_idx':\n\u001b[0m\u001b[91mH5Z.c:1210:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n H5Z_find_idx(H5Z_filter_t id)\n ^\n\u001b[0m  CC       H5Zdeflate.lo\n  CC       H5Zfletcher32.lo\n\u001b[91mH5Zfletcher32.c: In function 'H5Z_filter_fletcher32':\nH5Zfletcher32.c:142:16: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n  if (NULL==(dst=outbuf=H5MM_malloc(nbytes+FLETCHER_LEN)))\n                ^\n\u001b[0m  CC       H5Znbit.lo\n\u001b[91mH5Znbit.c: In function 'H5Z_calc_parms_array':\nH5Znbit.c:255:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dtype_base_class) {\n     ^\nH5Znbit.c:255:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Znbit.c:255:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c:255:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Znbit.c:255:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:255:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:255:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Znbit.c:255:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Znbit.c:255:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_calc_parms_compound':\n\u001b[0m\u001b[91mH5Znbit.c:340:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n         switch(dtype_member_class) {\n         ^\nH5Znbit.c:340:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Znbit.c:340:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_set_parms_nooptype':\n\u001b[0m\u001b[91mH5Znbit.c:410:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[cd_values_index++] = dtype_size;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_set_parms_atomic':\n\u001b[0m\u001b[91mH5Znbit.c:452:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[cd_values_index++] = dtype_size;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c:459:5: warning: enumeration value 'H5T_ORDER_ERROR' not handled in switch [-Wswitch-enum]\n     switch(dtype_order) {\n     ^\nH5Znbit.c:459:5: warning: enumeration value 'H5T_ORDER_VAX' not handled in switch [-Wswitch-enum]\nH5Znbit.c:459:5: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]\nH5Znbit.c:459:5: warning: enumeration value 'H5T_ORDER_NONE' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c:481:5: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     if(dtype_precision > dtype_size * 8 || (dtype_precision + dtype_offset) > dtype_size * 8\n     ^\n\u001b[0m\u001b[91mH5Znbit.c:486:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[cd_values_index++] = dtype_precision;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c:489:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     cd_values[cd_values_index++] = dtype_offset;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_set_parms_array':\n\u001b[0m\u001b[91mH5Znbit.c:538:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[cd_values_index++]=dtype_size;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c:549:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dtype_base_class) {\n     ^\nH5Znbit.c:549:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Znbit.c:549:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_set_parms_compound':\n\u001b[0m\u001b[91mH5Znbit.c:628:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[cd_values_index++] = dtype_size;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c:635:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     cd_values[cd_values_index++] = nmembers;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c:651:9: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n         cd_values[cd_values_index++] = dtype_member_offset;\n         ^\n\u001b[0m\u001b[91mH5Znbit.c:692:77: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n                     cd_values[cd_values_index++] = dtype_next_member_offset - dtype_member_offset;\n                                                                             ^\n\u001b[0m\u001b[91mH5Znbit.c:654:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n         switch(dtype_member_class) {\n         ^\nH5Znbit.c:654:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Znbit.c:654:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_set_local_nbit':\n\u001b[0m\u001b[91mH5Znbit.c:759:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dtype_class) {\n     ^\nH5Znbit.c:759:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Znbit.c:759:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c:814:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch(dtype_class) {\n     ^\nH5Znbit.c:814:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nH5Znbit.c:814:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Znbit.c:839:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[0] = cd_values_actual_nparms;\n     ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_decompress_one_byte':\n\u001b[0m\u001b[91mH5Znbit.c:973:7: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n       data[data_offset + k] =\n       ^\n\u001b[0m\u001b[91mH5Znbit.c:974:58: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len)) << uchar_offset;\n                                                          ^\n\u001b[0m\u001b[91mH5Znbit.c:977:7: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n       data[data_offset + k] =\n       ^\n\u001b[0m\u001b[91mH5Znbit.c:978:59: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len)) << uchar_offset;\n                                                           ^\n\u001b[0m\u001b[91mH5Znbit.c:984:7: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n       data[data_offset + k] |=\n       ^\n\u001b[0m\u001b[91mH5Znbit.c:984:29: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       data[data_offset + k] |=\n                             ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_decompress_one_nooptype':\n\u001b[0m\u001b[91mH5Znbit.c:1003:72: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       data[data_offset + i] = ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len));\n                                                                        ^\n\u001b[0m\u001b[91mH5Znbit.c:1003:58: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       data[data_offset + i] = ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len));\n                                                          ^\n\u001b[0m\u001b[91mH5Znbit.c:1004:18: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       dat_len -= *buf_len;\n                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1009:42: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       data[data_offset + i] |= ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len));\n                                          ^\n\u001b[0m\u001b[91mH5Znbit.c:1009:29: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       data[data_offset + i] |= ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len));\n                             ^\n\u001b[0m\u001b[91mH5Znbit.c:1010:7: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       *buf_len -= dat_len;\n       ^\n\u001b[0m\u001b[91mH5Znbit.c:1010:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n       *buf_len -= dat_len;\n                ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_decompress_one_atomic':\n\u001b[0m\u001b[91mH5Znbit.c:1022:26: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n    datatype_len = p.size * 8;\n                          ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_decompress_one_array':\n\u001b[0m\u001b[91mH5Znbit.c:1064:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.order = parms[parms_index++];\n                           ^\n\u001b[0m\u001b[91mH5Znbit.c:1065:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.precision = parms[parms_index++];\n                               ^\n\u001b[0m\u001b[91mH5Znbit.c:1066:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.offset = parms[parms_index++];\n                            ^\n\u001b[0m\u001b[91mH5Znbit.c:1067:26: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n            n = total_size/p.size;\n                          ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_decompress_one_compound':\n\u001b[0m\u001b[91mH5Znbit.c:1117:30: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n               p.order = parms[parms_index++];\n                              ^\n\u001b[0m\u001b[91mH5Znbit.c:1118:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n               p.precision = parms[parms_index++];\n                                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1119:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n               p.offset = parms[parms_index++];\n                               ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_decompress':\n\u001b[0m\u001b[91mH5Znbit.c:1163:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.order = parms[5];\n                           ^\n\u001b[0m\u001b[91mH5Znbit.c:1164:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.precision = parms[6];\n                               ^\n\u001b[0m\u001b[91mH5Znbit.c:1165:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.offset = parms[7];\n                            ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_compress_one_byte':\n\u001b[0m\u001b[91mH5Znbit.c:1198:4: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n    val = data[data_offset + k];\n    ^\n\u001b[0m\u001b[91mH5Znbit.c:1204:14: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n          val >>= 8 - dat_len;\n              ^\n\u001b[0m\u001b[91mH5Znbit.c:1209:11: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       val >>= p.offset % 8;\n           ^\n\u001b[0m\u001b[91mH5Znbit.c:1214:18: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       buffer[*j] |= (val & ~(~0 << dat_len)) << (*buf_len - dat_len);\n                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1217:18: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);\n                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1222:45: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);\n                                             ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_compress_one_nooptype':\n\u001b[0m\u001b[91mH5Znbit.c:1239:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);\n                                        ^\n\u001b[0m\u001b[91mH5Znbit.c:1239:18: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);\n                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1240:18: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       dat_len -= *buf_len;\n                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1244:49: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);\n                                                 ^\n\u001b[0m\u001b[91mH5Znbit.c:1244:45: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n       buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);\n                                             ^\n\u001b[0m\u001b[91mH5Znbit.c:1245:7: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n       *buf_len -= dat_len;\n       ^\n\u001b[0m\u001b[91mH5Znbit.c:1245:16: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n       *buf_len -= dat_len;\n                ^\nH5Znbit.c: In function 'H5Z_nbit_compress_one_atomic':\n\u001b[0m\u001b[91mH5Znbit.c:1256:26: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n    datatype_len = p.size * 8;\n                          ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_compress_one_array':\n\u001b[0m\u001b[91mH5Znbit.c:1297:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.order = parms[parms_index++];\n                           ^\n\u001b[0m\u001b[91mH5Znbit.c:1298:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.precision = parms[parms_index++];\n                               ^\n\u001b[0m\u001b[91mH5Znbit.c:1299:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.offset = parms[parms_index++];\n                            ^\n\u001b[0m\u001b[91mH5Znbit.c:1300:26: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n            n = total_size/p.size;\n                          ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_compress_one_compound':\n\u001b[0m\u001b[91mH5Znbit.c:1350:30: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n               p.order = parms[parms_index++];\n                              ^\n\u001b[0m\u001b[91mH5Znbit.c:1351:34: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n               p.precision = parms[parms_index++];\n                                  ^\n\u001b[0m\u001b[91mH5Znbit.c:1352:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n               p.offset = parms[parms_index++];\n                               ^\n\u001b[0m\u001b[91mH5Znbit.c: In function 'H5Z_nbit_compress':\n\u001b[0m\u001b[91mH5Znbit.c:1395:27: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.order = parms[5];\n                           ^\n\u001b[0m\u001b[91mH5Znbit.c:1396:31: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.precision = parms[6];\n                               ^\n\u001b[0m\u001b[91mH5Znbit.c:1397:28: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n            p.offset = parms[7];\n                            ^\n\u001b[0m  CC       H5Zshuffle.lo\n  CC       H5Zszip.lo\n  CC       H5Zscaleoffset.lo\n\u001b[91mH5Zscaleoffset.c: In function 'H5Z_set_local_scaleoffset':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:942:5: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     cd_values[H5Z_SCALEOFFSET_PARM_SIZE] = dtype_size;\n     ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:971:5: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]\n     switch(dtype_order) {\n     ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_filter_scaleoffset':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1067:5: warning: enumeration value 'H5T_ORDER_MIXED' not handled in switch [-Wswitch-enum]\n     switch(H5T_native_order_g) {\n     ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_scaleoffset_convert':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1330:48: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n        for(i = 0; i < d_nelmts * dtype_size; i += dtype_size)\n                                                ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_scaleoffset_precompress_fd':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:397:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                 ^\nH5Zscaleoffset.c:562:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:397:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                                           ^\nH5Zscaleoffset.c:562:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:402:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                 ^\nH5Zscaleoffset.c:562:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:402:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                                           ^\nH5Zscaleoffset.c:562:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:407:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                 ^\nH5Zscaleoffset.c:562:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:407:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                                           ^\nH5Zscaleoffset.c:562:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:563:38: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                      ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:563:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                                                  ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:563:89: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                                                                         ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:490:37: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                               buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));  \\\n                                     ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:490:63: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                               buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));  \\\n                                                               ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:489:50: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n             *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                    \\\n                                                  ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:498:38: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                                buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \\\n                                      ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:498:64: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                                buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \\\n                                                                ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:497:51: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n             *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                   \\\n                                                   ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:506:43: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                                     buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \\\n                                           ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:506:69: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                                     buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \\\n                                                                     ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:505:56: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n             *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                              \\\n                                                        ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:397:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                 ^\nH5Zscaleoffset.c:569:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:397:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                                           ^\nH5Zscaleoffset.c:569:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:402:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                 ^\nH5Zscaleoffset.c:569:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:402:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                                           ^\nH5Zscaleoffset.c:569:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:407:33: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                 ^\nH5Zscaleoffset.c:569:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:407:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \\\n                                                           ^\nH5Zscaleoffset.c:569:7: note: in expansion of macro 'H5Z_scaleoffset_check_3'\n       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \\\n       ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:570:38: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                      ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:570:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                                                  ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:570:89: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                                                                         ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:518:34: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                            buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));     \\\n                                  ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:518:60: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                            buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));     \\\n                                                            ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:517:47: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n          *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                       \\\n                                               ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:522:35: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                             buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));    \\\n                                   ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:522:61: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                             buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));    \\\n                                                             ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:521:48: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n          *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                      \\\n                                                ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:526:40: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                                  buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \\\n                                        ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:526:66: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                                  buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \\\n                                                                  ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:525:53: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n          *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                                 \\\n                                                     ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1519:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:563:89: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                                                                         ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:489:50: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n             *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                    \\\n                                                  ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:497:51: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n             *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                   \\\n                                                   ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:505:56: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n             *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                              \\\n                                                        ^\nH5Zscaleoffset.c:566:10: note: in expansion of macro 'H5Z_scaleoffset_modify_1'\n          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \\\n          ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:570:89: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \\\n                                                                                         ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:517:47: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n          *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                       \\\n                                               ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:521:48: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n          *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                      \\\n                                                ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:525:53: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n          *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                                 \\\n                                                     ^\nH5Zscaleoffset.c:573:10: note: in expansion of macro 'H5Z_scaleoffset_modify_2'\n          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \\\n          ^\nH5Zscaleoffset.c:1522:7: note: in expansion of macro 'H5Z_scaleoffset_precompress_3'\n       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_scaleoffset_postdecompress_fd':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:631:76: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                   filval : (double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);        \\\n                                                                            ^\nH5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'\n       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:631:26: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]\n                   filval : (double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);        \\\n                          ^\nH5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'\n       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:635:77: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                   filval : (double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);       \\\n                                                                             ^\nH5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'\n       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:635:26: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]\n                   filval : (double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);       \\\n                          ^\nH5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'\n       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:639:82: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                   filval : (double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min);  \\\n                                                                                  ^\nH5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'\n       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:639:26: warning: implicit conversion from 'float' to 'double' to match other result of conditional [-Wdouble-promotion]\n                   filval : (double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min);  \\\n                          ^\nH5Zscaleoffset.c:671:7: note: in expansion of macro 'H5Z_scaleoffset_modify_3'\n       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:649:74: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n          buf[i] = (type)((double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);       \\\n                                                                          ^\nH5Zscaleoffset.c:673:7: note: in expansion of macro 'H5Z_scaleoffset_modify_4'\n       H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:652:75: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n          buf[i] = (type)((double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);      \\\n                                                                           ^\nH5Zscaleoffset.c:673:7: note: in expansion of macro 'H5Z_scaleoffset_modify_4'\n       H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:655:80: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n          buf[i] = (type)((double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min); \\\n                                                                                ^\nH5Zscaleoffset.c:673:7: note: in expansion of macro 'H5Z_scaleoffset_modify_4'\n       H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \\\n       ^\nH5Zscaleoffset.c:1542:7: note: in expansion of macro 'H5Z_scaleoffset_postdecompress_3'\n       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,\n       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_scaleoffset_decompress_one_atomic':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1602:23: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n    dtype_len = p.size * 8;\n                       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1605:28: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n       begin_i = p.size - 1 - (dtype_len - p.minbits) / 8;\n                            ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_scaleoffset_compress_one_atomic':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1685:23: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n    dtype_len = p.size * 8;\n                       ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1688:28: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n       begin_i = p.size - 1 - (dtype_len - p.minbits) / 8;\n                            ^\n\u001b[0m\u001b[91mH5Zscaleoffset.c: In function 'H5Z_scaleoffset_log2':\n\u001b[0m\u001b[91mH5Zscaleoffset.c:1370:1: warning: function might be candidate for attribute 'const' if it is known to return normally [-Wsuggest-attribute=const]\n H5Z_scaleoffset_log2(unsigned long long num)\n ^\n\u001b[0m  CC       H5Ztrans.lo\n\u001b[91mH5Ztrans.c: In function 'H5Z_parse_term':\n\u001b[0m\u001b[91mH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_ERROR' not handled in switch [-Wswitch-enum]\n         switch (current->tok_type) {\n         ^\nH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_INTEGER' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_FLOAT' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_SYMBOL' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_PLUS' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_MINUS' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:718:9: warning: enumeration value 'H5Z_XFORM_LPAREN' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Ztrans.c: In function 'H5Z_parse_factor':\n\u001b[0m\u001b[91mH5Ztrans.c:804:5: warning: enumeration value 'H5Z_XFORM_ERROR' not handled in switch [-Wswitch-enum]\n     switch (current->tok_type) {\n     ^\nH5Ztrans.c:804:5: warning: enumeration value 'H5Z_XFORM_MULT' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:804:5: warning: enumeration value 'H5Z_XFORM_DIVIDE' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Ztrans.c: In function 'H5Z_xform_eval_full':\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1123:46: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1123:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1127:46: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1127:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1131:45: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n                                             ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1131:3: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)\n   ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'unsigned char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'signed char' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'short int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:155:16: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *pl = *pl OP *pr;                                            \\\n                ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'short unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\nH5Ztrans.c:1135:46: warning: conversion to 'int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\nH5Ztrans.c:1135:46: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:210:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:212:2: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:190:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long long int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:214:2: note: in expansion of macro 'H5Z_XFORM_LL_DO_OP1'\n  H5Z_XFORM_LL_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:128:11: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = *p OP tree_val;                                            \\\n           ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:145:23: warning: conversion to 'double' from 'long long unsigned int' may alter its value [-Wconversion]\n      *p = tree_val OP *p;                                            \\\n                       ^\nH5Ztrans.c:177:5: note: in expansion of macro 'H5Z_XFORM_DO_OP1'\n     H5Z_XFORM_DO_OP1(RESL,RESR,TYPE,OP,SIZE)\n     ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'long long unsigned int' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:216:2: note: in expansion of macro 'H5Z_XFORM_ULL_DO_OP1'\n  H5Z_XFORM_ULL_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \\\n  ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:128:14: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = *p OP tree_val;                                            \\\n              ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1135:46: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n                                              ^\nH5Ztrans.c:145:20: note: in definition of macro 'H5Z_XFORM_DO_OP1'\n      *p = tree_val OP *p;                                            \\\n                    ^\nH5Ztrans.c:1135:4: note: in expansion of macro 'H5Z_XFORM_TYPE_OP'\n    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)\n    ^\n\u001b[0m\u001b[91mH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_ERROR' not handled in switch [-Wswitch-enum]\n  switch (tree->type) {\n  ^\nH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_INTEGER' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_FLOAT' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_SYMBOL' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_LPAREN' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_RPAREN' not handled in switch [-Wswitch-enum]\nH5Ztrans.c:1121:2: warning: enumeration value 'H5Z_XFORM_END' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mH5Ztrans.c: In function 'H5Z_xform_noop':\n\u001b[0m\u001b[91mH5Ztrans.c:1707:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5Z_xform_noop(const H5Z_data_xform_t *data_xform_prop)\n ^\n\u001b[0m\u001b[91mH5Ztrans.c: In function 'H5Z_xform_extract_xform_str':\n\u001b[0m\u001b[91mH5Ztrans.c:1736:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n H5Z_xform_extract_xform_str(const H5Z_data_xform_t *data_xform_prop)\n ^\n\u001b[0m  CCLD     libhdf5.la\nmake[3]: Leaving directory `/nanopolish/hdf5-1.8.14/src'\nmake[2]: Leaving directory `/nanopolish/hdf5-1.8.14/src'\nMaking all in test\nmake[2]: Entering directory `/nanopolish/hdf5-1.8.14/test'\n  CC       dynlib1.lo\n\u001b[91mdynlib1.c: In function 'H5PLget_plugin_type':\ndynlib1.c:41:15: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5PL_type_t   H5PLget_plugin_type(void) {return H5PL_TYPE_FILTER;}\n               ^\n\u001b[0m\u001b[91mdynlib1.c: In function 'H5PLget_plugin_info':\n\u001b[0m\u001b[91mdynlib1.c:42:16: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n const void    *H5PLget_plugin_info(void) {return H5Z_DYNLIB1;}\n                ^\n\u001b[0m\u001b[91mdynlib1.c: In function 'H5Z_filter_dynlib1':\n\u001b[0m\u001b[91mdynlib1.c:82:14: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         while(buf_left > 0) {\n              ^\n\u001b[0m\u001b[91mdynlib1.c:89:14: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         while(buf_left > 0) {\n              ^\n\u001b[0m  CCLD     libdynlib1.la\n  CC       dynlib2.lo\n\u001b[91mdynlib2.c: In function 'H5PLget_plugin_type':\ndynlib2.c:42:15: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5PL_type_t   H5PLget_plugin_type(void) {return H5PL_TYPE_FILTER;}\n               ^\n\u001b[0m\u001b[91mdynlib2.c: In function 'H5PLget_plugin_info':\ndynlib2.c:43:15: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n const void   *H5PLget_plugin_info(void) {return H5Z_DYNLIB2;}\n               ^\n\u001b[0m\u001b[91mdynlib2.c: In function 'H5Z_filter_dynlib2':\ndynlib2.c:79:14: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         while(buf_left > 0) {\n              ^\n\u001b[0m\u001b[91mdynlib2.c:86:14: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n         while(buf_left > 0) {\n              ^\n\u001b[0m  CCLD     libdynlib2.la\n  CC       dynlib3.lo\n\u001b[91mdynlib3.c: In function 'H5Z_filter_dynlib3':\n\u001b[0m\u001b[91mdynlib3.c:91:21: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         memcpy(dst, (void*)GROUP_SUFFIX, SUFFIX_LEN);\n                     ^\n\u001b[0m\u001b[91mdynlib3.c: In function 'H5PLget_plugin_type':\n\u001b[0m\u001b[91mdynlib3.c:44:15: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n H5PL_type_t   H5PLget_plugin_type(void) {return H5PL_TYPE_FILTER;}\n               ^\n\u001b[0m\u001b[91mdynlib3.c: In function 'H5PLget_plugin_info':\n\u001b[0m\u001b[91mdynlib3.c:45:15: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n const void   *H5PLget_plugin_info(void) {return H5Z_DYNLIB3;}\n               ^\n\u001b[0m  CCLD     libdynlib3.la\n  CC       h5test.lo\n\u001b[91mh5test.c: In function 'h5_cleanup':\nh5test.c:158:21: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                     HDsnprintf(temp, sizeof temp, filename, j);\n                     ^\nh5test.c:158:21: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mh5test.c: In function 'h5_fileaccess':\n\u001b[0m\u001b[91mh5test.c:551:14: warning: size of 'sv' is 7168 bytes [-Wlarger-than=]\n         char sv[H5FD_MEM_NTYPES][1024];\n              ^\n\u001b[0m\u001b[91mh5test.c:565:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             memb_addr[mt] = (haddr_t)MAX(mt - 1, 0) * (HADDR_MAX / 10);\n             ^\n\u001b[0m\u001b[91mh5test.c: In function 'h5_get_file_size':\n\u001b[0m\u001b[91mh5test.c:916:17: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n                 HDsnprintf(temp, sizeof temp, filename, j);\n                 ^\nh5test.c:916:17: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mh5test.c: In function 'print_func':\n\u001b[0m\u001b[91mh5test.c:953:3: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n   ret_value = vprintf(format, arglist);\n   ^\n\u001b[0m\u001b[91mh5test.c: In function 'h5_make_local_copy':\n\u001b[0m\u001b[91mh5test.c:1121:11: warning: size of 'buf' is 4096 bytes [-Wlarger-than=]\n     char  buf[READ_BUF_SIZE];           /* Buffer for copying data */\n           ^\n\u001b[0m\u001b[91mIn file included from h5test.c:28:0:\nh5test.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m\u001b[91mh5test.c: In function 'h5_rmprefix':\n\u001b[0m\u001b[91mh5test.c:472:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n h5_rmprefix(const char *filename)\n ^\n\u001b[0m\u001b[91mh5test.c: In function 'h5_fileaccess':\nh5test.c:504:1: warning: stack usage is 8464 bytes [-Wstack-usage=]\n h5_fileaccess(void)\n ^\n\u001b[0m  CC       testframe.lo\n\u001b[91mtestframe.c:54:19: warning: size of 'Test' is 6720 bytes [-Wlarger-than=]\n static TestStruct Test[MAXNUMOFTESTS];\n                   ^\n\u001b[0m\u001b[91mtestframe.c: In function 'PrintErrorStackOn':\n\u001b[0m\u001b[91mtestframe.c:618:5: warning: passing argument 2 of 'H5Eset_auto2' from incompatible pointer type [enabled by default]\n     H5Eset_auto2(H5E_DEFAULT, PrintErrorStackFunc, PrintErrorStackData);\n     ^\n\u001b[0m\u001b[91mIn file included from ../src/H5Eprivate.h:22:0,\n                 from testhdf5.h:28,\n                 from testframe.c:24:\n../src/H5Epublic.h:174:15: note: expected 'H5E_auto2_t' but argument is of type 'herr_t (**)(hid_t,  void *)'\n H5_DLL herr_t H5Eset_auto2(hid_t estack_id, H5E_auto2_t func, void *client_data);\n               ^\n\u001b[0m\u001b[91mtestframe.c: In function 'GetTestVerbosity':\n\u001b[0m\u001b[91mtestframe.c:365:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int GetTestVerbosity(void)\n     ^\n\u001b[0m\u001b[91mtestframe.c: In function 'GetTestSummary':\n\u001b[0m\u001b[91mtestframe.c:452:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int GetTestSummary(void)\n     ^\n\u001b[0m\u001b[91mtestframe.c: In function 'GetTestCleanup':\n\u001b[0m\u001b[91mtestframe.c:461:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int GetTestCleanup(void)\n     ^\n\u001b[0m\u001b[91mtestframe.c: In function 'GetTestNumErrs':\n\u001b[0m\u001b[91mtestframe.c:498:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int GetTestNumErrs(void)\n     ^\n\u001b[0m\u001b[91mtestframe.c: In function 'GetTestParameters':\n\u001b[0m\u001b[91mtestframe.c:516:13: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n const void *GetTestParameters(void)\n             ^\n\u001b[0m  CC       cache_common.lo\n\u001b[91mcache_common.c:67:21: warning: size of 'pico_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t pico_entries[NUM_PICO_ENTRIES], orig_pico_entries[NUM_PICO_ENTRIES];\n                     ^\ncache_common.c:67:53: warning: size of 'orig_pico_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t pico_entries[NUM_PICO_ENTRIES], orig_pico_entries[NUM_PICO_ENTRIES];\n                                                     ^\n\u001b[0m\u001b[91mcache_common.c:68:21: warning: size of 'nano_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t nano_entries[NUM_NANO_ENTRIES], orig_nano_entries[NUM_NANO_ENTRIES];\n                     ^\ncache_common.c:68:53: warning: size of 'orig_nano_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t nano_entries[NUM_NANO_ENTRIES], orig_nano_entries[NUM_NANO_ENTRIES];\n                                                     ^\n\u001b[0m\u001b[91mcache_common.c:69:21: warning: size of 'micro_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t micro_entries[NUM_MICRO_ENTRIES], orig_micro_entries[NUM_MICRO_ENTRIES];\n                     ^\n\u001b[0m\u001b[91mcache_common.c:69:55: warning: size of 'orig_micro_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t micro_entries[NUM_MICRO_ENTRIES], orig_micro_entries[NUM_MICRO_ENTRIES];\n                                                       ^\ncache_common.c:70:21: warning: size of 'tiny_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t tiny_entries[NUM_TINY_ENTRIES], orig_tiny_entries[NUM_TINY_ENTRIES];\n                     ^\n\u001b[0m\u001b[91mcache_common.c:70:53: warning: size of 'orig_tiny_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t tiny_entries[NUM_TINY_ENTRIES], orig_tiny_entries[NUM_TINY_ENTRIES];\n                                                     ^\ncache_common.c:71:21: warning: size of 'small_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t small_entries[NUM_SMALL_ENTRIES], orig_small_entries[NUM_SMALL_ENTRIES];\n                     ^\n\u001b[0m\u001b[91mcache_common.c:71:55: warning: size of 'orig_small_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t small_entries[NUM_SMALL_ENTRIES], orig_small_entries[NUM_SMALL_ENTRIES];\n                                                       ^\n\u001b[0m\u001b[91mcache_common.c:72:21: warning: size of 'medium_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t medium_entries[NUM_MEDIUM_ENTRIES], orig_medium_entries[NUM_MEDIUM_ENTRIES];\n                     ^\n\u001b[0m\u001b[91mcache_common.c:72:57: warning: size of 'orig_medium_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t medium_entries[NUM_MEDIUM_ENTRIES], orig_medium_entries[NUM_MEDIUM_ENTRIES];\n                                                         ^\n\u001b[0m\u001b[91mcache_common.c:73:21: warning: size of 'large_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t large_entries[NUM_LARGE_ENTRIES], orig_large_entries[NUM_LARGE_ENTRIES];\n                     ^\ncache_common.c:73:55: warning: size of 'orig_large_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t large_entries[NUM_LARGE_ENTRIES], orig_large_entries[NUM_LARGE_ENTRIES];\n                                                       ^\n\u001b[0m\u001b[91mcache_common.c:74:21: warning: size of 'huge_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t huge_entries[NUM_HUGE_ENTRIES], orig_huge_entries[NUM_HUGE_ENTRIES];\n                     ^\n\u001b[0m\u001b[91mcache_common.c:74:53: warning: size of 'orig_huge_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t huge_entries[NUM_HUGE_ENTRIES], orig_huge_entries[NUM_HUGE_ENTRIES];\n                                                     ^\n\u001b[0m\u001b[91mcache_common.c:75:21: warning: size of 'monster_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t monster_entries[NUM_MONSTER_ENTRIES], orig_monster_entries[NUM_MONSTER_ENTRIES];\n                     ^\ncache_common.c:75:59: warning: size of 'orig_monster_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t monster_entries[NUM_MONSTER_ENTRIES], orig_monster_entries[NUM_MONSTER_ENTRIES];\n                                                           ^\n\u001b[0m\u001b[91mcache_common.c:76:21: warning: size of 'variable_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t variable_entries[NUM_VARIABLE_ENTRIES], orig_variable_entries[NUM_VARIABLE_ENTRIES];\n                     ^\n\u001b[0m\u001b[91mcache_common.c:76:61: warning: size of 'orig_variable_entries' is 5734400 bytes [-Wlarger-than=]\n static test_entry_t variable_entries[NUM_VARIABLE_ENTRIES], orig_variable_entries[NUM_VARIABLE_ENTRIES];\n                                                             ^\n\u001b[0m\u001b[91mcache_common.c: In function 'clear':\n\u001b[0m\u001b[91mcache_common.c:523:20: warning: variable 'base_addr' set but not used [-Wunused-but-set-variable]\n     test_entry_t * base_addr;\n                    ^\n\u001b[0m\u001b[91mcache_common.c: In function 'destroy':\n\u001b[0m\u001b[91mcache_common.c:647:20: warning: variable 'base_addr' set but not used [-Wunused-but-set-variable]\n     test_entry_t * base_addr;\n                    ^\n\u001b[0m\u001b[91mcache_common.c: In function 'flush':\n\u001b[0m\u001b[91mcache_common.c:811:20: warning: variable 'base_addr' set but not used [-Wunused-but-set-variable]\n     test_entry_t * base_addr;\n                    ^\n\u001b[0m\u001b[91mcache_common.c: In function 'size':\n\u001b[0m\u001b[91mcache_common.c:1098:20: warning: variable 'base_addr' set but not used [-Wunused-but-set-variable]\n     test_entry_t * base_addr;\n                    ^\n\u001b[0m\u001b[91mcache_common.c: In function 'row_major_scan_forward':\n\u001b[0m\u001b[91mcache_common.c:3353:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx + lag - 1) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3355:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 1) % 3 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c:3363:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx + lag - 2) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3365:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 2) % 3 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c:3374:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( do_moves ) && ( (idx + lag - 2) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3376:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 2) % 3 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c:3383:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx + lag - 3) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3385:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 3) % 5 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c:3393:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx + lag - 5) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3395:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 5) % 5 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c:3405:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx + lag - 5) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3407:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx + lag - 5) % 9 == 0 ) ) {\n        ^\ncache_common.c:3407:8: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3416:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx + lag - 6) >= 0 ) &&\n   ^\ncache_common.c:3418:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx + lag - 6) % 11 == 0 ) ) {\n        ^\ncache_common.c:3418:8: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ncache_common.c:3427:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx + lag - 7) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3429:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx + lag - 7) % 13 == 0 ) ) {\n        ^\ncache_common.c:3429:8: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3438:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx + lag - 7) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3440:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx + lag - 7) % 9 == 0 ) ) {\n        ^\ncache_common.c:3440:8: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3449:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx + lag - 8) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3451:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx + lag - 8) % 11 == 0 ) ) {\n        ^\ncache_common.c:3451:8: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3460:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx + lag - 9) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3462:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx + lag - 9) % 13 == 0 ) ) {\n        ^\ncache_common.c:3462:8: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3480:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx - lag + 2) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3482:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 2) % 7 ) == 0 ) ) {\n                  ^\ncache_common.c:3482:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3490:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx - lag + 1) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3492:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 1) % 7 ) == 0 ) ) {\n                  ^\ncache_common.c:3492:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ncache_common.c: In function 'row_major_scan_backward':\ncache_common.c:3751:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx - lag + 1) >= 0 ) &&\n             ^\ncache_common.c:3753:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 1) % 3 ) == 0 ) ) {\n                  ^\ncache_common.c:3753:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ncache_common.c:3761:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx - lag + 2) >= 0 ) &&\n             ^\ncache_common.c:3763:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 2) % 3 ) == 0 ) ) {\n                  ^\ncache_common.c:3763:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ncache_common.c:3772:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( do_moves ) && ( (idx - lag + 2) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3774:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 2) % 3 ) == 0 ) ) {\n                  ^\ncache_common.c:3774:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3781:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx - lag + 3) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3783:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 3) % 5 ) == 0 ) ) {\n                  ^\ncache_common.c:3783:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3791:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx - lag + 5) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3793:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx - lag + 5) % 5 ) == 0 ) ) {\n                  ^\ncache_common.c:3793:18: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mcache_common.c:3803:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx - lag + 5) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3805:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx - lag + 5) % 9 == 0 ) ) {\n        ^\n\u001b[0m\u001b[91mcache_common.c:3814:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx - lag + 6) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3816:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx - lag + 6) % 11 == 0 ) ) {\n        ^\n\u001b[0m\u001b[91mcache_common.c:3825:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx - lag + 7) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3827:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx - lag + 7) % 13 == 0 ) ) {\n        ^\n\u001b[0m\u001b[91mcache_common.c:3836:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx - lag + 7) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3838:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx - lag + 7) % 9 == 0 ) ) {\n        ^\n\u001b[0m\u001b[91mcache_common.c:3847:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx - lag + 8) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3849:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx - lag + 8) % 11 == 0 ) ) {\n        ^\n\u001b[0m\u001b[91mcache_common.c:3858:3: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n   if ( ( pass ) && ( (idx - lag + 9) >= 0 ) &&\n   ^\n\u001b[0m\u001b[91mcache_common.c:3860:8: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n        ( (idx - lag + 9) % 13 == 0 ) ) {\n        ^\n\u001b[0m\u001b[91mcache_common.c:3879:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx + lag - 2) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3881:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 2) % 7 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c:3889:13: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( (idx + lag - 1) >= 0 ) &&\n             ^\n\u001b[0m\u001b[91mcache_common.c:3891:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                  ( ( (idx + lag - 1) % 7 ) == 0 ) ) {\n                  ^\n\u001b[0m\u001b[91mcache_common.c: In function 'check_and_validate_cache_hit_rate':\n\u001b[0m\u001b[91mcache_common.c:4612:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             expected_hit_rate = 0.0;\n             ^\n\u001b[0m\u001b[91mcache_common.c:4622:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         } else if ( ! DBL_REL_EQUAL(hit_rate, expected_hit_rate, 0.00001) ) {\n         ^\n\u001b[0m\u001b[91mcache_common.c: At top level:\n\u001b[0m\u001b[91mcache_common.c:4804:1: warning: no previous prototype for 'resize_configs_are_equal' [-Wmissing-prototypes]\n resize_configs_are_equal(const H5C_auto_size_ctl_t *a,\n ^\n\u001b[0m\u001b[91mcache_common.c: In function 'resize_configs_are_equal':\n\u001b[0m\u001b[91mcache_common.c:4816:67: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->min_clean_fraction - b->min_clean_fraction) > FP_EPSILON)\n                                                                   ^\n\u001b[0m\u001b[91mcache_common.c:4826:67: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->lower_hr_threshold - b->lower_hr_threshold) > FP_EPSILON)\n                                                                   ^\n\u001b[0m\u001b[91mcache_common.c:4828:49: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->increment - b->increment) > FP_EPSILON)\n                                                 ^\n\u001b[0m\u001b[91mcache_common.c:4836:59: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->flash_multiple - b->flash_multiple) > FP_EPSILON)\n                                                           ^\n\u001b[0m\u001b[91mcache_common.c:4838:61: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->flash_threshold - b->flash_threshold) > FP_EPSILON)\n                                                             ^\n\u001b[0m\u001b[91mcache_common.c:4842:67: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->upper_hr_threshold - b->upper_hr_threshold) > FP_EPSILON)\n                                                                   ^\n\u001b[0m\u001b[91mcache_common.c:4844:49: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->decrement - b->decrement) > FP_EPSILON)\n                                                 ^\n\u001b[0m\u001b[91mcache_common.c:4854:57: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n     else if(HDfabs(a->empty_reserve - b->empty_reserve) > FP_EPSILON)\n                                                         ^\n\u001b[0m\u001b[91mIn file included from cache_common.c:27:0:\ncache_common.c: In function 'validate_mdc_config':\n\u001b[0m\u001b[91mcache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_common.c:4965:16: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         if ( ! CACHE_CONFIGS_EQUAL((*ext_config_ptr), scratch, \\\n                ^\n\u001b[0m\u001b[91mcache_common.c: In function 'hl_row_major_scan_forward':\n\u001b[0m\u001b[91mcache_common.c:3634:45: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( do_inserts ) && ( (idx + lag) >= 0 ) &&\n                                             ^\n\u001b[0m\u001b[91mcache_common.c: In function 'hl_row_major_scan_backward':\n\u001b[0m\u001b[91mcache_common.c:4032:45: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             if ( ( pass ) && ( do_inserts ) && ( (idx + lag) >= 0 ) &&\n                                             ^\n\u001b[0m\u001b[91mcache_common.c: In function 'resize_configs_are_equal':\n\u001b[0m\u001b[91mcache_common.c:4804:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n resize_configs_are_equal(const H5C_auto_size_ctl_t *a,\n ^\n\u001b[0m\u001b[91mcache_common.c: In function 'col_major_scan_backward':\n\u001b[0m\u001b[91mcache_common.c:4361:36: warning: 'cache_ptr' may be used uninitialized in this function [-Wmaybe-uninitialized]\n                  ( ! entry_in_cache(cache_ptr, type, (idx - lag)) ) ) {\n                                    ^\n\u001b[0m  CCLD     libh5test.la\n  CC       testhdf5.o\n  CC       tarray.o\n\u001b[91mtarray.c: In function 'test_array_funcs':\n\u001b[0m\u001b[91mtarray.c:192:26: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     size=H5Tget_precision(type);\n                          ^\n\u001b[0m\u001b[91mtarray.c:195:21: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     size=H5Tget_size(type);\n                     ^\n\u001b[0m\u001b[91mtarray.c:198:22: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     size=H5Tget_ebias(type);\n                      ^\n\u001b[0m\u001b[91mtarray.c: In function 'test_array_compound_atomic':\n\u001b[0m\u001b[91mtarray.c:544:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             wdata[i][j].f = (float)(i * 2.5 + j);\n             ^\n\u001b[0m\u001b[91mtarray.c:689:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Array data information doesn't match!, wdata[%d][%d].f=%f, rdata[%d][%d].f=%f\\n\", (int)i, (int)j, wdata[i][j].f, (int)i, (int)j, rdata[i][j].f);\n                 ^\ntarray.c:689:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c: In function 'test_array_compound_array':\n\u001b[0m\u001b[91mtarray.c:748:17: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                 wdata[i][j].f[k]=(float)(i*10+j*2.5+k);\n                 ^\n\u001b[0m\u001b[91mtarray.c:932:21: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                     TestErrPrintf(\"Array data information doesn't match!, wdata[%d][%d].f[%d]=%f, rdata[%d][%d].f[%d]=%f\\n\",(int)i,(int)j,(int)k,wdata[i][j].f[k],(int)i,(int)j,(int)k,rdata[i][j].f[k]);\n                     ^\ntarray.c:932:21: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c: In function 'test_array_alloc_custom':\n\u001b[0m\u001b[91mtarray.c:977:9: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         *mem_used+=size;\n         ^\n\u001b[0m\u001b[91mtarray.c:977:18: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n         *mem_used+=size;\n                  ^\n\u001b[0m\u001b[91mtarray.c: In function 'test_array_free_custom':\n\u001b[0m\u001b[91mtarray.c:1005:9: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         *mem_used-=*(size_t *)mem;\n         ^\n\u001b[0m\u001b[91mtarray.c:1005:18: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n         *mem_used-=*(size_t *)mem;\n                  ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:27:0,\n                 from tarray.c:24:\ntarray.c: In function 'test_array_vlen_atomic':\n\u001b[0m\u001b[91mtarray.c:1044:40: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             wdata[i][j].p=HDmalloc((i+j+1)*sizeof(unsigned int));\n                                        ^\n../src/H5private.h:961:35: note: in definition of macro 'HDmalloc'\n     #define HDmalloc(Z)    malloc(Z)\n                                   ^\n\u001b[0m\u001b[91mtarray.c:1045:32: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             wdata[i][j].len=i+j+1;\n                                ^\n\u001b[0m\u001b[91mtarray.c:1046:13: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n             for(k=0; k<(i+j+1); k++)\n             ^\n\u001b[0m\u001b[91mtarray.c:1047:62: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 ((unsigned int *)wdata[i][j].p)[k]=i*100+j*10+k;\n                                                              ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:27:0,\n                 from tarray.c:24:\ntarray.c: In function 'test_array_vlen_array':\n\u001b[0m\u001b[91mtarray.c:1255:40: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             wdata[i][j].p=HDmalloc((i+j+1)*(sizeof(unsigned int)*ARRAY1_DIM1));\n                                        ^\n../src/H5private.h:961:35: note: in definition of macro 'HDmalloc'\n     #define HDmalloc(Z)    malloc(Z)\n                                   ^\n\u001b[0m\u001b[91mtarray.c:1256:32: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             wdata[i][j].len=i+j+1;\n                                ^\n\u001b[0m\u001b[91mtarray.c:1257:13: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n             for(k=0; k<(i+j+1); k++)\n             ^\n\u001b[0m\u001b[91mtarray.c:1259:87: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     ((unsigned int *)wdata[i][j].p)[k*ARRAY1_DIM1+l]=i*1000+j*100+k*10+l;\n                                                                                       ^\n\u001b[0m\u001b[91mtarray.c: In function 'test_array_bkg':\n\u001b[0m\u001b[91mtarray.c:1537:4: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n    cf[i].b[j] = (float)(100.*(i+1) + 0.01*j);\n    ^\ntarray.c:1537:4: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mtarray.c:1538:4: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n    cf[i].c[j] = 100.*(i+1) + 0.02*j;\n    ^\ntarray.c:1538:4: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mtarray.c:1622:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field b data doesn't match, cf[%d].b[%d]=%f, cfr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)cf[i].b[j],(int)i,(int)j,(float)cfr[i].b[j]);\n                 ^\ntarray.c:1622:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c:1626:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field c data doesn't match, cf[%d].b[%d]=%f, cfr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)cf[i].c[j],(int)i,(int)j,(float)cfr[i].c[j]);\n                 ^\ntarray.c:1626:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c:1677:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             cf[i].b[j]=fld[i].b[j] = (float)1.313;\n             ^\n\u001b[0m\u001b[91mtarray.c:1689:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field data doesn't match, fld[%d].b[%d]=%f, fldr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)fld[i].b[j],(int)i,(int)j,(float)fldr[i].b[j]);\n                 ^\ntarray.c:1689:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c:1715:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field b data doesn't match, cf[%d].b[%d]=%f, cfr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)cf[i].b[j],(int)i,(int)j,(float)cfr[i].b[j]);\n                 ^\ntarray.c:1715:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c:1719:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field c data doesn't match, cf[%d].b[%d]=%f, cfr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)cf[i].c[j],(int)i,(int)j,(float)cfr[i].c[j]);\n                 ^\ntarray.c:1719:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c:1764:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field b data doesn't match, cf[%d].b[%d]=%f, cfr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)cf[i].b[j],(int)i,(int)j,(float)cfr[i].b[j]);\n                 ^\ntarray.c:1764:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtarray.c:1768:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"Field c data doesn't match, cf[%d].b[%d]=%f, cfr[%d].b[%d]=%f\\n\",(int)i,(int)j,(float)cf[i].c[j],(int)i,(int)j,(float)cfr[i].c[j]);\n                 ^\ntarray.c:1768:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mIn file included from tarray.c:25:0:\ntarray.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\n\u001b[0m\u001b[91mH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CC       tattr.o\n\u001b[91mtattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n double attr_data3[ATTR3_DIM1][ATTR3_DIM2][ATTR3_DIM3]={{{2.3,-26.1},{0.123,-10.0}},{{973.23,-0.91827},{2.0,23.0}}}; /* Test data for 3rd attribute */\n ^\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntattr.c:100:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mtattr.c:116:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  } attr_data4[ATTR4_DIM1][ATTR4_DIM2]={{{3,-26.1,'d'},{-100000, 0.123,'3'}},\n  ^\n\u001b[0m\u001b[91mtattr.c:116:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mtattr.c:117:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     {{-23,981724.2,'Q'},{0,2.0,'\\n'}}}; /* Test data for 4th attribute */\n     ^\ntattr.c:117:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mtattr.c:121:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n float attr_data5=(float)-5.123;        /* Test data for 5th attribute */\n ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_flush':\n\u001b[0m\u001b[91mtattr.c:502:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     double wdata=3.14159;       /* Data to write */\n     ^\n\u001b[0m\u001b[91mtattr.c:524:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(!DBL_ABS_EQUAL(rdata,0.0))\n     ^\n\u001b[0m\u001b[91mtattr.c:525:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         TestErrPrintf(\"attribute value wrong: rdata=%f, should be %f\\n\",rdata,0.0);\n         ^\n\u001b[0m\u001b[91mtattr.c:533:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(!DBL_ABS_EQUAL(rdata,0.0))\n     ^\n\u001b[0m\u001b[91mtattr.c:534:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         TestErrPrintf(\"attribute value wrong: rdata=%f, should be %f\\n\",rdata,0.0);\n         ^\n\u001b[0m\u001b[91mIn file included from tattr.c:24:0:\ntattr.c: In function 'test_attr_compound_read':\n\u001b[0m\u001b[91mtesthdf5.h:73:34: warning: cast from function call of type 'H5T_order_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                                  ^\ntattr.c:847:5: note: in expansion of macro 'VERIFY'\n     VERIFY(order, H5Tget_order(H5T_NATIVE_INT), \"H5Tget_order\");\n     ^\n\u001b[0m\u001b[91mtesthdf5.h:73:34: warning: cast from function call of type 'H5T_order_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                                  ^\ntattr.c:856:5: note: in expansion of macro 'VERIFY'\n     VERIFY(order, H5Tget_order(H5T_NATIVE_DOUBLE), \"H5Tget_order\");\n     ^\n\u001b[0m\u001b[91mtesthdf5.h:73:34: warning: cast from function call of type 'H5T_order_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                                  ^\ntattr.c:865:5: note: in expansion of macro 'VERIFY'\n     VERIFY(order, H5Tget_order(H5T_NATIVE_SCHAR), \"H5Tget_order\");\n     ^\n\u001b[0m\u001b[91mtattr.c:884:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_scalar_read':\n\u001b[0m\u001b[91mtattr.c:985:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     float       rdata = 0.0;    /* Buffer for reading 1st attribute */\n     ^\n\u001b[0m\u001b[91mtattr.c:1016:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n      \"H5Aread\", attr_data5, rdata, (int)__LINE__, __FILE__);\n      ^\ntattr.c:1016:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mIn file included from tattr.c:24:0:\ntattr.c: In function 'test_attr_mult_read':\n\u001b[0m\u001b[91mtesthdf5.h:73:34: warning: cast from function call of type 'H5T_order_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                                  ^\ntattr.c:1228:5: note: in expansion of macro 'VERIFY'\n     VERIFY(order, H5Tget_order(H5T_NATIVE_INT), \"H5Tget_order\");\n     ^\n\u001b[0m\u001b[91mtattr.c:1243:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c:1249:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr,HDstrlen(ATTR1_NAME), attr_name);\n                           ^\n\u001b[0m\u001b[91mIn file included from tattr.c:24:0:\ntesthdf5.h:73:34: warning: cast from function call of type 'H5T_order_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                                  ^\ntattr.c:1283:5: note: in expansion of macro 'VERIFY'\n     VERIFY(order, H5Tget_order(H5T_NATIVE_INT), \"H5Tget_order\");\n     ^\n\u001b[0m\u001b[91mtattr.c:1299:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c:1305:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, HDstrlen(ATTR2_NAME), attr_name);\n                           ^\n\u001b[0m\u001b[91mIn file included from tattr.c:24:0:\ntesthdf5.h:73:34: warning: cast from function call of type 'H5T_order_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                                  ^\ntattr.c:1341:5: note: in expansion of macro 'VERIFY'\n     VERIFY(order, H5Tget_order(H5T_NATIVE_DOUBLE), \"H5Tget_order\");\n     ^\n\u001b[0m\u001b[91mtattr.c:1358:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c:1364:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, HDstrlen(ATTR3_NAME), attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_delete':\n\u001b[0m\u001b[91mtattr.c:1552:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c:1566:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c:1589:27: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, attr_name);\n                           ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_dense_verify':\n\u001b[0m\u001b[91mtattr.c:2086:31: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n         name_len = H5Aget_name(attr, (size_t)ATTR_NAME_LEN, check_name);\n                               ^\n\u001b[0m\u001b[91mtattr.c: In function 'attr_info_by_idx_check':\n\u001b[0m\u001b[91mtattr.c:5559:29: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Aget_name_by_idx(obj_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, n, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                             ^\n\u001b[0m\u001b[91mtattr.c:5584:33: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n         ret = H5Aget_name_by_idx(obj_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_NATIVE, n, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                 ^\n\u001b[0m\u001b[91mtattr.c:5605:29: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Aget_name_by_idx(obj_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_DEC, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                             ^\n\u001b[0m\u001b[91mtattr.c:5625:29: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Aget_name_by_idx(obj_id, \".\", H5_INDEX_NAME, H5_ITER_INC, n, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                             ^\n\u001b[0m\u001b[91mtattr.c:5650:29: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Aget_name_by_idx(obj_id, \".\", H5_INDEX_NAME, H5_ITER_DEC, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                             ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_info_by_idx':\n\u001b[0m\u001b[91mtattr.c:5759:37: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n             ret = H5Aget_name_by_idx(my_dataset, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                     ^\n\u001b[0m\u001b[91mtattr.c:5796:37: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n             ret = H5Aget_name_by_idx(my_dataset, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)u, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                     ^\n\u001b[0m\u001b[91mtattr.c:5846:37: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n             ret = H5Aget_name_by_idx(my_dataset, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)u, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                     ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_delete_by_idx':\n\u001b[0m\u001b[91mtattr.c:5918:74: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(idx_type = H5_INDEX_NAME; idx_type <=H5_INDEX_CRT_ORDER; idx_type++) {\n                                                                          ^\n\u001b[0m\u001b[91mtattr.c:5920:60: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n         for(order = H5_ITER_INC; order <=H5_ITER_DEC; order++) {\n                                                            ^\n\u001b[0m\u001b[91mtattr.c:6073:49: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                         ret = H5Aget_name_by_idx(my_dataset, \".\", idx_type, order, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                                 ^\n\u001b[0m\u001b[91mtattr.c:6198:49: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                         ret = H5Aget_name_by_idx(my_dataset, \".\", idx_type, order, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                                 ^\n\u001b[0m\u001b[91mtattr.c:6309:49: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                         ret = H5Aget_name_by_idx(my_dataset, \".\", idx_type, order, (hsize_t)u, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                                 ^\n\u001b[0m\u001b[91mtattr.c:6358:49: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                         ret = H5Aget_name_by_idx(my_dataset, \".\", idx_type, order, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                                 ^\n\u001b[0m\u001b[91mtattr.c: In function 'attr_iterate_check':\n\u001b[0m\u001b[91mtattr.c:6614:70: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_attrs - 1) - skip);\n                                                                      ^\n\u001b[0m\u001b[91mtattr.c:6614:5: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_attrs - 1) - skip);\n     ^\n\u001b[0m\u001b[91mtattr.c:6646:70: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_attrs - 1) - skip);\n                                                                      ^\n\u001b[0m\u001b[91mtattr.c:6646:5: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_attrs - 1) - skip);\n     ^\n\u001b[0m\u001b[91mtattr.c:6678:70: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_attrs - 1) - skip);\n                                                                      ^\n\u001b[0m\u001b[91mtattr.c:6678:5: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_attrs - 1) - skip);\n     ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_iterate2':\n\u001b[0m\u001b[91mtattr.c:6867:74: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(idx_type = H5_INDEX_NAME; idx_type <=H5_INDEX_CRT_ORDER; idx_type++) {\n                                                                          ^\n\u001b[0m\u001b[91mtattr.c:6869:60: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n         for(order = H5_ITER_INC; order <=H5_ITER_DEC; order++) {\n                                                            ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_open_by_idx':\n\u001b[0m\u001b[91mtattr.c:7221:74: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(idx_type = H5_INDEX_NAME; idx_type <=H5_INDEX_CRT_ORDER; idx_type++) {\n                                                                          ^\n\u001b[0m\u001b[91mtattr.c:7223:60: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n         for(order = H5_ITER_INC; order <=H5_ITER_DEC; order++) {\n                                                            ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_shared_write':\n\u001b[0m\u001b[91mtattr.c:8026:14: warning: size of 'big_value' is 2340 bytes [-Wlarger-than=]\n     unsigned big_value[SPACE1_DIM1 * SPACE1_DIM2 * SPACE1_DIM3];   /* Data for \"big\" attribute */\n              ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_shared_rename':\n\u001b[0m\u001b[91mtattr.c:8352:14: warning: size of 'big_value' is 2340 bytes [-Wlarger-than=]\n     unsigned big_value[SPACE1_DIM1 * SPACE1_DIM2 * SPACE1_DIM3];   /* Data for \"big\" attribute */\n              ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_shared_delete':\n\u001b[0m\u001b[91mtattr.c:8793:14: warning: size of 'big_value' is 2340 bytes [-Wlarger-than=]\n     unsigned big_value[SPACE1_DIM1 * SPACE1_DIM2 * SPACE1_DIM3];   /* Data for \"big\" attribute */\n              ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_shared_unlink':\n\u001b[0m\u001b[91mtattr.c:9157:14: warning: size of 'big_value' is 2340 bytes [-Wlarger-than=]\n     unsigned big_value[SPACE1_DIM1 * SPACE1_DIM2 * SPACE1_DIM3];   /* Data for \"big\" attribute */\n              ^\n\u001b[0m\u001b[91mtattr.c: In function 'test_attr_bug3':\n\u001b[0m\u001b[91mtattr.c:9861:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             wdata2[u][v] = (int)((u * dims2[1]) + v);\n                            ^\n\u001b[0m  CC       tchecksum.o\n\u001b[91mtchecksum.c:40:9: warning: size of 'large_buf' is 3093 bytes [-Wlarger-than=]\n uint8_t large_buf[BUF_LEN];\n         ^\n\u001b[0m\u001b[91mtchecksum.c: In function 'test_chksum_large':\n\u001b[0m\u001b[91mtchecksum.c:192:26: warning: conversion to 'uint8_t' from 'size_t' may alter its value [-Wconversion]\n         large_buf[u] = u * 3;\n                          ^\n\u001b[0m\u001b[91mtchecksum.c: In function 'cleanup_checksum':\n\u001b[0m\u001b[91mtchecksum.c:251:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n cleanup_checksum(void)\n ^\n\u001b[0m  CC       tconfig.o\n\u001b[91mtconfig.c: In function 'test_config_ctypes':\ntconfig.c:126:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(char, H5_SIZEOF_CHAR);\n     ^\n\u001b[0m\u001b[91mtconfig.c:127:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(signed char, unsigned char, H5_SIZEOF_CHAR);\n     ^\ntconfig.c:127:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:128:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int, unsigned int, H5_SIZEOF_INT);\n     ^\ntconfig.c:128:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:129:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(short, unsigned short, H5_SIZEOF_SHORT);\n     ^\n\u001b[0m\u001b[91mtconfig.c:129:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:130:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(long, unsigned long, H5_SIZEOF_LONG);\n     ^\n\u001b[0m\u001b[91mtconfig.c:130:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:131:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(float, H5_SIZEOF_FLOAT);\n     ^\n\u001b[0m\u001b[91mtconfig.c:132:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(double, H5_SIZEOF_DOUBLE);\n     ^\n\u001b[0m\u001b[91mtconfig.c:134:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(long double, H5_SIZEOF_LONG_DOUBLE);\n     ^\n\u001b[0m\u001b[91mtconfig.c:139:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(long long, unsigned long long, H5_SIZEOF_LONG_LONG);\n     ^\ntconfig.c:139:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:143:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int8_t, uint8_t, H5_SIZEOF_INT8_T);\n     ^\ntconfig.c:143:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:147:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int16_t, uint16_t, H5_SIZEOF_INT16_T);\n     ^\ntconfig.c:147:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:151:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int32_t, uint32_t, H5_SIZEOF_INT32_T);\n     ^\ntconfig.c:151:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:155:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int64_t, uint64_t, H5_SIZEOF_INT64_T);\n     ^\ntconfig.c:155:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:161:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(int_fast8_t, H5_SIZEOF_INT_FAST8_T);\n     ^\n\u001b[0m\u001b[91mtconfig.c:165:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(uint_fast8_t, H5_SIZEOF_UINT_FAST8_T);\n     ^\n\u001b[0m\u001b[91mtconfig.c:169:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_fast16_t, uint_fast16_t, H5_SIZEOF_INT_FAST16_T);\n     ^\ntconfig.c:169:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:173:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_fast32_t, uint_fast32_t, H5_SIZEOF_INT_FAST32_T);\n     ^\ntconfig.c:173:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:177:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_fast64_t, uint_fast64_t, H5_SIZEOF_INT_FAST64_T);\n     ^\ntconfig.c:177:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:181:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_least8_t, uint_least8_t, H5_SIZEOF_INT_LEAST8_T);\n     ^\ntconfig.c:181:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:185:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_least16_t, uint_least16_t, H5_SIZEOF_INT_LEAST16_T);\n     ^\ntconfig.c:185:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:189:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_least32_t, uint_least32_t, H5_SIZEOF_INT_LEAST32_T);\n     ^\ntconfig.c:189:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:193:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_cint_type(int_least64_t, uint_least64_t, H5_SIZEOF_INT_LEAST64_T);\n     ^\ntconfig.c:193:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n\u001b[0m\u001b[91mtconfig.c:202:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(off_t, H5_SIZEOF_OFF_T);\n     ^\n\u001b[0m\u001b[91mtconfig.c:206:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(size_t, H5_SIZEOF_SIZE_T);\n     ^\n\u001b[0m\u001b[91mtconfig.c:210:5: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]\n     vrfy_ctype(ssize_t, H5_SIZEOF_SSIZE_T);\n     ^\n\u001b[0m\u001b[91mtconfig.c: In function 'cleanup_configure':\n\u001b[0m\u001b[91mtconfig.c:99:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n cleanup_configure(void)\n ^\n\u001b[0m\u001b[91mtconfig.c: In function 'test_config_ctypes':\ntconfig.c:122:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n test_config_ctypes(void)\n ^\n\u001b[0m\u001b[91mtconfig.c: In function 'test_exit_definitions':\n\u001b[0m\u001b[91mtconfig.c:231:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n test_exit_definitions(void)\n ^\n\u001b[0m  CC       tfile.o\n\u001b[91mtfile.c: In function 'test_file_close':\n\u001b[0m\u001b[91mtfile.c:766:5: warning: enumeration value 'H5F_CLOSE_DEFAULT' not handled in switch [-Wswitch-enum]\n     switch(fc_degree) {\n     ^\n\u001b[0m\u001b[91mtfile.c: In function 'test_obj_count_and_id':\n\u001b[0m\u001b[91mtfile.c:1277:17: warning: enumeration value 'H5I_UNINIT' not handled in switch [-Wswitch-enum]\n                 switch(id_type) {\n                 ^\ntfile.c:1277:17: warning: enumeration value 'H5I_BADID' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_DATATYPE' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_DATASPACE' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_ATTR' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_REFERENCE' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_VFL' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_GENPROP_CLS' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_GENPROP_LST' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_ERROR_CLASS' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_ERROR_MSG' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_ERROR_STACK' not handled in switch [-Wswitch-enum]\ntfile.c:1277:17: warning: enumeration value 'H5I_NTYPES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mtfile.c: In function 'test_file_open_overlap':\n\u001b[0m\u001b[91mtfile.c:1802:29: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     nobjs = H5Fget_obj_count(fid1, H5F_OBJ_LOCAL|H5F_OBJ_ALL);\n                             ^\n\u001b[0m\u001b[91mtfile.c:1823:29: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     nobjs = H5Fget_obj_count(fid2, H5F_OBJ_ALL);\n                             ^\n\u001b[0m\u001b[91mtfile.c: In function 'test_rw_noupdate':\n\u001b[0m\u001b[91mtfile.c:2336:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(diff > 0.0) {\n     ^\n\u001b[0m\u001b[91mtfile.c:2369:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         ret = (diff > 0.0);\n         ^\n\u001b[0m\u001b[91mIn file included from tfile.c:26:0:\ntfile.c: At top level:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CC       tgenprop.o\n\u001b[91mtgenprop.c:50:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n float         prop2_def=(float)3.14;   /* Property 2 default value */\n ^\ntgenprop.c:60:1: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n double          prop4_def=1.41;   /* Property 4 default value */\n ^\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_iter1':\ntgenprop.c:292:22: warning: request for implicit conversion from 'void *' to 'struct <anonymous> *' not permitted in C++ [-Wc++-compat]\n     } *iter_struct = iter_data;\n                      ^\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_cls_crt_cb1':\n\u001b[0m\u001b[91mtgenprop.c:379:21: warning: request for implicit conversion from 'void *' to 'struct <anonymous> *' not permitted in C++ [-Wc++-compat]\n     } *count_struct=create_data;\n                     ^\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_cls_cpy_cb1':\n\u001b[0m\u001b[91mtgenprop.c:393:21: warning: request for implicit conversion from 'void *' to 'struct <anonymous> *' not permitted in C++ [-Wc++-compat]\n     } *count_struct=copy_data;\n                     ^\ntgenprop.c: In function 'test_genprop_cls_cls_cb1':\n\u001b[0m\u001b[91mtgenprop.c:407:21: warning: request for implicit conversion from 'void *' to 'struct <anonymous> *' not permitted in C++ [-Wc++-compat]\n     } *count_struct=create_data;\n                     ^\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_basic_list':\n\u001b[0m\u001b[91mtgenprop.c:686:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n      \"H5Pget\", *PROP2_DEF_VALUE, prop2_value, (int)__LINE__, __FILE__);\n      ^\ntgenprop.c:686:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_basic_list_prop':\n\u001b[0m\u001b[91mtgenprop.c:778:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n      \"H5Pget\", *PROP2_DEF_VALUE, prop2_value, (int)__LINE__, __FILE__);\n      ^\ntgenprop.c:778:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_iter2':\n\u001b[0m\u001b[91mtgenprop.c:851:20: warning: request for implicit conversion from 'void *' to 'struct <anonymous> *' not permitted in C++ [-Wc++-compat]\n     } *iter_struct=iter_data;\n                    ^\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_cls_cpy_cb2':\n\u001b[0m\u001b[91mtgenprop.c:1001:21: warning: request for implicit conversion from 'void *' to 'struct <anonymous> *' not permitted in C++ [-Wc++-compat]\n     } *count_struct=create_data;\n                     ^\n\u001b[0m\u001b[91mtgenprop.c: In function 'test_genprop_list_callback':\n\u001b[0m\u001b[91mtgenprop.c:1242:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n      \"H5Pget\", *PROP2_DEF_VALUE, prop2_value, (int)__LINE__, __FILE__);\n      ^\ntgenprop.c:1242:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m  CC       th5o.o\n\u001b[91mIn file included from th5o.c:24:0:\nth5o.c: In function 'test_h5o_close':\n\u001b[0m\u001b[91mtesthdf5.h:73:16: warning: cast from function call of type 'H5I_type_t' to non-matching type 'long int' [-Wbad-function-cast]\n     long __x = (long)_x, __val = (long)_val;          \\\n                ^\nth5o.c:167:5: note: in expansion of macro 'VERIFY'\n     VERIFY(H5Iget_type(grp), H5I_GROUP, \"H5Iget_type\");\n     ^\n\u001b[0m\u001b[91mth5o.c: In function 'test_h5o_link':\n\u001b[0m\u001b[91mth5o.c:780:9: warning: size of 'wdata' is 40000 bytes [-Wlarger-than=]\n     int wdata[TEST6_DIM1][TEST6_DIM2];\n         ^\n\u001b[0m\u001b[91mth5o.c:781:9: warning: size of 'rdata' is 40000 bytes [-Wlarger-than=]\n     int rdata[TEST6_DIM1][TEST6_DIM2];\n         ^\n\u001b[0m\u001b[91mth5o.c: In function 'test_h5o_comment':\n\u001b[0m\u001b[91mth5o.c:1011:25: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment(fid, check_comment, (size_t)comment_len+1);\n                         ^\n\u001b[0m\u001b[91mth5o.c:1025:25: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment(grp, check_comment, (size_t)comment_len+1);\n                         ^\n\u001b[0m\u001b[91mth5o.c:1039:25: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment(dtype, check_comment, (size_t)comment_len+1);\n                         ^\n\u001b[0m\u001b[91mth5o.c:1053:25: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment(dset, check_comment, (size_t)comment_len+1);\n                         ^\n\u001b[0m\u001b[91mth5o.c: In function 'test_h5o_comment_by_name':\n\u001b[0m\u001b[91mth5o.c:1182:33: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment_by_name(fid, \".\", check_comment, (size_t)comment_len+1, H5P_DEFAULT);\n                                 ^\n\u001b[0m\u001b[91mth5o.c:1196:33: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment_by_name(fid, \"group\", check_comment, (size_t)comment_len+1, H5P_DEFAULT);\n                                 ^\n\u001b[0m\u001b[91mth5o.c:1206:33: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment_by_name(grp, \"datatype\", check_comment, (size_t)comment_len+1, H5P_DEFAULT);\n                                 ^\n\u001b[0m\u001b[91mth5o.c:1216:33: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment_by_name(fid, \"dataset\", check_comment, (size_t)comment_len+1, H5P_DEFAULT);\n                                 ^\n\u001b[0m\u001b[91mth5o.c: In function 'test_h5o_link':\n\u001b[0m\u001b[91mth5o.c:768:1: warning: stack usage is 80112 bytes [-Wstack-usage=]\n test_h5o_link(void)\n ^\n\u001b[0m\u001b[91mth5o.c:900:1: warning: the frame size of 80040 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n } /* end test_h5o_link() */\n ^\n\u001b[0m  CC       th5s.o\n\u001b[91mth5s.c:82:2: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n  } space4_data={'v',987123,(float)-3.14,'g'}; /* Test data for 4th dataspace */\n  ^\n\u001b[0m\u001b[91mth5s.c: In function 'test_h5s_zero_dim':\n\u001b[0m\u001b[91mth5s.c:543:25: warning: size of 'wdata_real' is 2340 bytes [-Wlarger-than=]\n     int                 wdata_real[SPACE1_DIM1][SPACE1_DIM2][SPACE1_DIM3];\n                         ^\n\u001b[0m\u001b[91mth5s.c:544:25: warning: size of 'rdata_real' is 2340 bytes [-Wlarger-than=]\n     int                 rdata_real[SPACE1_DIM1][SPACE1_DIM2][SPACE1_DIM3];\n                         ^\n\u001b[0m\u001b[91mth5s.c:562:29: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n             wdata[i][j] = i + j;\n                             ^\n\u001b[0m\u001b[91mth5s.c:564:35: warning: conversion to 'short int' from 'unsigned int' may alter its value [-Wconversion]\n             wdata_short[i][j] = i + j;\n                                   ^\n\u001b[0m\u001b[91mth5s.c:571:45: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n                 wdata_real[i][j][k] = i + j + k;\n                                             ^\n\u001b[0m\u001b[91mth5s.c:574:89: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(alloc_time = H5D_ALLOC_TIME_EARLY; alloc_time <= H5D_ALLOC_TIME_INCR; alloc_time++) {\n                                                                                         ^\n\u001b[0m\u001b[91mth5s.c: In function 'test_h5s_compound_scalar_read':\n\u001b[0m\u001b[91mth5s.c:1589:9: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n         printf(\"scalar data different: space4_data.f=%f, read_data4.f=%f\\n\",space4_data.f,rdata.f);\n         ^\nth5s.c:1589:9: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mth5s.c: At top level:\n\u001b[0m\u001b[91mth5s.c:1611:9: warning: size of 'chunk_data_dbl' is 1200000 bytes [-Wlarger-than=]\n double  chunk_data_dbl[50000][3];\n         ^\n\u001b[0m\u001b[91mth5s.c:1612:8: warning: size of 'chunk_data_flt' is 600000 bytes [-Wlarger-than=]\n float  chunk_data_flt[50000][3];\n        ^\n\u001b[0m\u001b[91mth5s.c: In function 'test_h5s_chunk':\n\u001b[0m\u001b[91mth5s.c:1655:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             chunk_data_flt[i][j] = (float)((i + 1) * 2.5 - j * 100.3);\n             ^\nth5s.c:1655:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from testhdf5.h:31:0,\n                 from th5s.c:24:\nh5test.h:135:41: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n #define DBL_REL_EQUAL(X,Y,M)    (fabs((Y-X)/X)<M)\n                                         ^\nth5s.c:1691:17: note: in expansion of macro 'DBL_REL_EQUAL'\n             if(!DBL_REL_EQUAL(chunk_data_dbl[i][j], chunk_data_flt[i][j], 0.00001))\n                 ^\n\u001b[0m\u001b[91mth5s.c:1691:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             if(!DBL_REL_EQUAL(chunk_data_dbl[i][j], chunk_data_flt[i][j], 0.00001))\n             ^\n\u001b[0m\u001b[91mth5s.c:1692:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 TestErrPrintf(\"%u: chunk_data_dbl[%d][%d]=%e, chunk_data_flt[%d][%d]=%e\\n\", (unsigned)__LINE__, i, j, chunk_data_dbl[i][j], i, j, chunk_data_flt[i][j]);\n                 ^\n\u001b[0m\u001b[91mIn file included from th5s.c:25:0:\nth5s.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\n\u001b[0m\u001b[91mH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CC       tcoords.o\n\u001b[91mtcoords.c: In function 'test_multiple_ends':\n\u001b[0m\u001b[91mtcoords.c:412:9: warning: size of 'data_buf' is 69120 bytes [-Wlarger-than=]\n     int data_buf[4][5][3][4][2][3][6][2];\n         ^\n\u001b[0m\u001b[91mtcoords.c:448:9: warning: size of 'mem5_buffer' is 7680 bytes [-Wlarger-than=]\n     int mem5_buffer[4][5][1][4][2][1][6][2];\n         ^\n\u001b[0m\u001b[91mtcoords.c:404:13: warning: stack usage is 81904 bytes [-Wstack-usage=]\n static void test_multiple_ends(hid_t file, hbool_t is_chunked)\n             ^\n\u001b[0m\u001b[91mtcoords.c:663:1: warning: the frame size of 81816 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m  CC       theap.o\n\u001b[91mtheap.c:50:17: warning: size of 'rand_num' is 16000 bytes [-Wlarger-than=]\n static test_obj rand_num[NUM_ELEMS];\n                 ^\ntheap.c:53:17: warning: size of 'inc_sort_num' is 16000 bytes [-Wlarger-than=]\n static test_obj inc_sort_num[NUM_ELEMS];\n                 ^\ntheap.c:56:17: warning: size of 'dec_sort_num' is 16000 bytes [-Wlarger-than=]\n static test_obj dec_sort_num[NUM_ELEMS];\n                 ^\n\u001b[0m  CC       tid.o\n  CC       titerate.o\n\u001b[91mtiterate.c: In function 'test_iter_group':\n\u001b[0m\u001b[91mtiterate.c:286:13: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     idx = i = 0;\n             ^\n\u001b[0m\u001b[91mtiterate.c:311:13: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     idx = i = 0;\n             ^\n\u001b[0m\u001b[91mtiterate.c: In function 'test_iter_attr':\n\u001b[0m\u001b[91mtiterate.c:465:13: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     idx = i = 0;\n             ^\n\u001b[0m\u001b[91mtiterate.c:491:13: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     idx = i = 0;\n             ^\n\u001b[0m\u001b[91mtiterate.c: In function 'test_iter_group_large':\n\u001b[0m\u001b[91mtiterate.c:584:15: warning: size of 'names' is 13376 bytes [-Wlarger-than=]\n     iter_info names[ITER_NGROUPS+2]; /* Names of objects in the root group */\n               ^\n\u001b[0m\u001b[91mtiterate.c:675:9: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         hsize_t idx = i;\n         ^\n\u001b[0m\u001b[91mtiterate.c: In function 'iter_strcmp':\ntiterate.c:75:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int iter_strcmp(const void *s1, const void *s2)\n     ^\n\u001b[0m\u001b[91mtiterate.c: In function 'iter_strcmp2':\n\u001b[0m\u001b[91mtiterate.c:530:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int iter_strcmp2(const void *s1, const void *s2)\n     ^\n\u001b[0m\u001b[91mtiterate.c: In function 'aiter_cb':\n\u001b[0m\u001b[91mtiterate.c:365:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count > 10 ? 1 : 0);\n                                   ^\n\u001b[0m\u001b[91mtiterate.c:369:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count2 > 10 ? 1 : 0);\n                                    ^\n\u001b[0m\u001b[91mtiterate.c: In function 'liter_cb':\n\u001b[0m\u001b[91mtiterate.c:104:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count > 10 ? 1 : 0);\n                                   ^\n\u001b[0m\u001b[91mtiterate.c:108:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count2 > 10 ? 1 : 0);\n                                    ^\n\u001b[0m\u001b[91mtiterate.c: In function 'test_iter_group_large':\n\u001b[0m\u001b[91mtiterate.c:574:1: warning: stack usage is 13504 bytes [-Wstack-usage=]\n test_iter_group_large(hid_t fapl)\n ^\n\u001b[0m\u001b[91mtiterate.c: In function 'aiter_cb':\n\u001b[0m\u001b[91mtiterate.c:365:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count > 10 ? 1 : 0);\n                                   ^\n\u001b[0m\u001b[91mtiterate.c:369:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count2 > 10 ? 1 : 0);\n                                    ^\n\u001b[0m\u001b[91mtiterate.c:365:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count > 10 ? 1 : 0);\n                                   ^\n\u001b[0m\u001b[91mtiterate.c:369:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count2 > 10 ? 1 : 0);\n                                    ^\n\u001b[0m\u001b[91mtiterate.c: In function 'liter_cb':\n\u001b[0m\u001b[91mtiterate.c:104:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count > 10 ? 1 : 0);\n                                   ^\ntiterate.c:108:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count2 > 10 ? 1 : 0);\n                                    ^\n\u001b[0m\u001b[91mtiterate.c:104:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count > 10 ? 1 : 0);\n                                   ^\ntiterate.c:108:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             return(count2 > 10 ? 1 : 0);\n                                    ^\n\u001b[0m  CC       tmeta.o\n\u001b[91mIn file included from tmeta.c:25:0:\ntmeta.c: In function 'test_metadata':\n../src/H5Fprivate.h:132:37: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n    (i) |= ((int32_t)(((*(p) & 0xff) << 24) |                                  \\\n                                     ^\ntmeta.c:89:5: note: in expansion of macro 'INT32DECODE'\n     INT32DECODE(p, di32);       /* Decode the int32 value */\n     ^\n\u001b[0m\u001b[91mtmeta.c: In function 'cleanup_metadata':\ntmeta.c:127:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n cleanup_metadata(void)\n ^\n\u001b[0m  CC       tmisc.o\n\u001b[91mtmisc.c:191:10: warning: size of 'm13_data' is 2400 bytes [-Wlarger-than=]\n unsigned m13_data[MISC13_DIM1][MISC13_DIM2];           /* Data to write to dataset */\n          ^\ntmisc.c:192:10: warning: size of 'm13_rdata' is 2400 bytes [-Wlarger-than=]\n unsigned m13_rdata[MISC13_DIM1][MISC13_DIM2];          /* Data read from dataset */\n          ^\n\u001b[0m\u001b[91mtmisc.c: In function 'create_struct3':\n\u001b[0m\u001b[91mtmisc.c:716:14: warning: request for implicit conversion from 'void *' to 'struct misc5_struct3_hndl *' not permitted in C++ [-Wc++-compat]\n     str3hndl = HDmalloc(sizeof(misc5_struct3_hndl));\n              ^\n\u001b[0m\u001b[91mtmisc.c: In function 'create_struct2':\n\u001b[0m\u001b[91mtmisc.c:759:14: warning: request for implicit conversion from 'void *' to 'struct misc5_struct2_hndl *' not permitted in C++ [-Wc++-compat]\n     str2hndl = HDmalloc(sizeof(misc5_struct2_hndl));\n              ^\n\u001b[0m\u001b[91mtmisc.c: In function 'create_struct1':\n\u001b[0m\u001b[91mtmisc.c:825:14: warning: request for implicit conversion from 'void *' to 'struct misc5_struct1_hndl *' not permitted in C++ [-Wc++-compat]\n     str1hndl = HDmalloc(sizeof(misc5_struct1_hndl));\n              ^\n\u001b[0m\u001b[91mtmisc.c: In function 'test_misc8':\n\u001b[0m\u001b[91mtmisc.c:1246:10: warning: request for implicit conversion from 'void *' to 'int *' not permitted in C++ [-Wc++-compat]\n     wdata=HDmalloc(sizeof(int)*MISC8_DIM0*MISC8_DIM1);\n          ^\n\u001b[0m\u001b[91mtmisc.c:1257:40: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n             *tdata++=((u*MISC8_DIM1)+v)%13;\n                                        ^\n\u001b[0m\u001b[91mIn file included from tmisc.c:32:0:\ntmisc.c:1313:50: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0 * MISC8_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\n\u001b[0m\u001b[91mtmisc.c:1339:50: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0 * MISC8_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\n\u001b[0m\u001b[91mtmisc.c:1364:50: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0 * MISC8_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\ntmisc.c:1408:50: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0 * MISC8_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\ntmisc.c:1435:50: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0 * MISC8_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\ntmisc.c:1465:50: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0 * MISC8_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\ntmisc.c:1489:66: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, 4 * MISC8_CHUNK_DIM0 * MISC8_CHUNK_DIM1 * H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                                                  ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\ntmisc.c:1512:47: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(storage_size, MISC8_DIM0*MISC8_DIM1*H5Tget_size(H5T_NATIVE_INT), \"H5Dget_storage_size\");\n                                               ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\ntmisc.c: In function 'test_misc14':\ntmisc.c:2456:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     double data1 = 5.0;         /* Data to write for dataset #1 */\n     ^\ntmisc.c:2457:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     double data2 = 10.0;        /* Data to write for dataset #2 */\n     ^\ntmisc.c:2458:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     double data3 = 15.0;        /* Data to write for dataset #3 */\n     ^\n\u001b[0m\u001b[91mtmisc.c: In function 'test_misc16':\n\u001b[0m\u001b[91mtmisc.c:2713:25: warning: initializer-string for array chars is too long for C++ [-Wc++-compat]\n                         {\"1234567\", \"1234567\\0\", \"12345678\", {NULL}};\n                         ^\ntmisc.c:2713:25: warning: initializer-string for array chars is too long for C++ [-Wc++-compat]\ntmisc.c:2713:25: warning: initialization makes integer from pointer without a cast [enabled by default]\ntmisc.c:2713:25: warning: (near initialization for 'wdata[3][0]') [enabled by default]\n\u001b[0m\u001b[91mtmisc.c: In function 'test_misc17':\n\u001b[0m\u001b[91mtmisc.c:2792:25: warning: initializer-string for array chars is too long for C++ [-Wc++-compat]\n                         {\"1234567\", \"1234567\\0\", \"12345678\", {NULL}};\n                         ^\ntmisc.c:2792:25: warning: initializer-string for array chars is too long for C++ [-Wc++-compat]\ntmisc.c:2792:25: warning: initialization makes integer from pointer without a cast [enabled by default]\ntmisc.c:2792:25: warning: (near initialization for 'wdata[3][0]') [enabled by default]\n\u001b[0m\u001b[91mtmisc.c: In function 'test_misc23':\n\u001b[0m\u001b[91mtmisc.c:3870:25: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     status = H5Iget_name(tmp_id, objname, (size_t)MISC23_NAME_BUF_SIZE);\n                         ^\n\u001b[0m\u001b[91mtmisc.c: In function 'test_misc28':\n\u001b[0m\u001b[91mtmisc.c:4996:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     ret = H5Pset_cache(fapl, MISC28_NSLOTS, MISC28_NSLOTS, MISC28_SIZE, 0.75);\n     ^\n\u001b[0m\u001b[91mtmisc.c:5026:9: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         buf[i] = i;\n         ^\n\u001b[0m\u001b[91mtmisc.c:5047:34: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         buf[i] = MISC28_SIZE - 1 - i;\n                                  ^\n\u001b[0m\u001b[91mIn file included from tmisc.c:33:0:\ntmisc.c: At top level:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CC       trefer.o\n\u001b[91mtrefer.c: In function 'test_reference_params':\ntrefer.c:117:18: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         *tu32++=i*3;\n                  ^\n\u001b[0m\u001b[91mtrefer.c:198:28: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_size = H5Rget_name((hid_t)-1, H5R_DATASET_REGION, &rbuf[0], NULL, 0);\n                            ^\n\u001b[0m\u001b[91mtrefer.c:200:28: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_size = H5Rget_name(fid1, H5R_DATASET_REGION, NULL, NULL, 0);\n                            ^\n\u001b[0m\u001b[91mtrefer.c:202:28: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n     name_size = H5Rget_name(fid1, H5R_MAXTYPE, &rbuf[0], NULL, 0);\n                            ^\n\u001b[0m\u001b[91mtrefer.c: In function 'test_reference_obj':\n\u001b[0m\u001b[91mtrefer.c:287:18: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         *tu32++=i*3;\n                  ^\n\u001b[0m\u001b[91mtrefer.c:418:25: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Oget_comment(group, read_comment, (size_t)10);\n                         ^\n\u001b[0m\u001b[91mtrefer.c: In function 'test_reference_region':\ntrefer.c:496:5: warning: large integer implicitly truncated to unsigned type [-Woverflow]\n     hdset_reg_ref_t  nvrbuf[3]={{0},{101},{1000000000}}; /* buffer with non-valid refs */\n     ^\n\u001b[0m\u001b[91mtrefer.c:526:20: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n         *tu8++ = i * 3;\n                    ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:27:0,\n                 from trefer.c:24:\ntrefer.c:649:27: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     coords = HDmalloc(ret * SPACE2_RANK * sizeof(hsize_t) * 2); /* allocate space for the hyperslab blocks */\n                           ^\n../src/H5private.h:961:35: note: in definition of macro 'HDmalloc'\n     #define HDmalloc(Z)    malloc(Z)\n                                   ^\n\u001b[0m\u001b[91mtrefer.c:649:12: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n     coords = HDmalloc(ret * SPACE2_RANK * sizeof(hsize_t) * 2); /* allocate space for the hyperslab blocks */\n            ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:27:0,\n                 from trefer.c:24:\ntrefer.c:677:27: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     coords = HDmalloc(ret * SPACE2_RANK * sizeof(hsize_t)); /* allocate space for the element points */\n                           ^\n../src/H5private.h:961:35: note: in definition of macro 'HDmalloc'\n     #define HDmalloc(Z)    malloc(Z)\n                                   ^\n\u001b[0m\u001b[91mtrefer.c:677:12: warning: request for implicit conversion from 'void *' to 'hsize_t *' not permitted in C++ [-Wc++-compat]\n     coords = HDmalloc(ret * SPACE2_RANK * sizeof(hsize_t)); /* allocate space for the element points */\n            ^\n\u001b[0m\u001b[91mtrefer.c: In function 'test_reference_region_1D':\n\u001b[0m\u001b[91mtrefer.c:798:20: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n         *tu8++ = i * 3;\n                    ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:27:0,\n                 from trefer.c:24:\ntrefer.c:921:38: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     coords = (hsize_t *)HDmalloc(ret * SPACE3_RANK * sizeof(hsize_t) * 2); /* allocate space for the hyperslab blocks */\n                                      ^\n../src/H5private.h:961:35: note: in definition of macro 'HDmalloc'\n     #define HDmalloc(Z)    malloc(Z)\n                                   ^\n\u001b[0m\u001b[91mtrefer.c:973:38: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     coords = (hsize_t *)HDmalloc(ret * SPACE3_RANK * sizeof(hsize_t)); /* allocate space for the element points */\n                                      ^\n../src/H5private.h:961:35: note: in definition of macro 'HDmalloc'\n     #define HDmalloc(Z)    malloc(Z)\n                                   ^\n\u001b[0m\u001b[91mtrefer.c: In function 'test_reference_group':\n\u001b[0m\u001b[91mtrefer.c:1253:29: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n     ret = H5Lget_name_by_idx(gid, \".\", H5_INDEX_NAME, H5_ITER_INC, (hsize_t)0, objname, (size_t)NAME_SIZE, H5P_DEFAULT);\n                             ^\n\u001b[0m  CC       trefstr.o\n  CC       tselect.o\n\u001b[91mtselect.c: In function 'test_select_all':\n\u001b[0m\u001b[91mtselect.c:717:76: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n                 *tbuf++ = (uint8_t)(((i * SPACE4_DIM2) + j) * SPACE4_DIM3) + k;\n                                                                            ^\n\u001b[0m\u001b[91mtselect.c: In function 'verify_select_hyper_contig_dr__run_test':\n\u001b[0m\u001b[91mtselect.c:1608:12: warning: unused parameter 'cube_size' [-Wunused-parameter]\n     size_t cube_size, unsigned edge_size, unsigned cube_rank)\n            ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_combine':\n\u001b[0m\u001b[91mtselect.c:6652:13: warning: size of 'blocks' is 4096 bytes [-Wlarger-than=]\n     hsize_t blocks[128][2][SPACE7_RANK];    /* List of blocks */\n             ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_fill_point':\n\u001b[0m\u001b[91mtselect.c:7185:60: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         points[u][0] = (hsize_t)(points[u][0] + real_offset[0]);\n                                                            ^\n\u001b[0m\u001b[91mtselect.c:7186:60: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         points[u][1] = (hsize_t)(points[u][1] + real_offset[1]);\n                                                            ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_fill_hyper_simple':\n\u001b[0m\u001b[91mtselect.c:7266:55: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             if((u >= (unsigned)(start[0] + real_offset[0]) && u < (unsigned)(start[0] + count[0] + real_offset[0]))\n                                                       ^\n\u001b[0m\u001b[91mtselect.c:7266:111: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             if((u >= (unsigned)(start[0] + real_offset[0]) && u < (unsigned)(start[0] + count[0] + real_offset[0]))\n                                                                                                               ^\n\u001b[0m\u001b[91mtselect.c:7267:59: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 && (v >= (unsigned)(start[1] + real_offset[1]) && v < (unsigned)(start[1] + count[1] + real_offset[1]))) {\n                                                           ^\n\u001b[0m\u001b[91mtselect.c:7267:115: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 && (v >= (unsigned)(start[1] + real_offset[1]) && v < (unsigned)(start[1] + count[1] + real_offset[1]))) {\n                                                                                                                   ^\n\u001b[0m\u001b[91mtselect.c:7285:73: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             points[num_points][0] = (hsize_t)(u + start[0] + real_offset[0]);\n                                                                         ^\n\u001b[0m\u001b[91mtselect.c:7286:73: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n             points[num_points][1] = (hsize_t)(v + start[1] + real_offset[1]);\n                                                                         ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_fill_hyper_regular':\n\u001b[0m\u001b[91mtselect.c:7376:62: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 if(u == (unsigned)(points[w][0] + real_offset[0]) && v == (unsigned)(points[w][1] + real_offset[1])) {\n                                                              ^\n\u001b[0m\u001b[91mtselect.c:7376:112: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 if(u == (unsigned)(points[w][0] + real_offset[0]) && v == (unsigned)(points[w][1] + real_offset[1])) {\n                                                                                                                ^\n\u001b[0m\u001b[91mtselect.c:7393:60: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         points[u][0] = (hsize_t)(points[u][0] + real_offset[0]);\n                                                            ^\n\u001b[0m\u001b[91mtselect.c:7394:60: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         points[u][1] = (hsize_t)(points[u][1] + real_offset[1]);\n                                                            ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_fill_hyper_irregular':\n\u001b[0m\u001b[91mtselect.c:7499:62: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 if(u == (unsigned)(points[w][0] + real_offset[0]) && v == (unsigned)(points[w][1] + real_offset[1])) {\n                                                              ^\n\u001b[0m\u001b[91mtselect.c:7499:112: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n                 if(u == (unsigned)(points[w][0] + real_offset[0]) && v == (unsigned)(points[w][1] + real_offset[1])) {\n                                                                                                                ^\n\u001b[0m\u001b[91mtselect.c:7516:70: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         iter_points[u][0] = (hsize_t)(iter_points[u][0] + real_offset[0]);\n                                                                      ^\n\u001b[0m\u001b[91mtselect.c:7517:70: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         iter_points[u][1] = (hsize_t)(iter_points[u][1] + real_offset[1]);\n                                                                      ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_hyper_checker_board_dr__verify_data':\n\u001b[0m\u001b[91mtselect.c:2628:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n test_select_hyper_checker_board_dr__verify_data(uint16_t * buf_ptr,\n ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_shape_same_dr__run_full_space_vs_slice_tests':\n\u001b[0m\u001b[91mtselect.c:10737:40: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                             } while((z < 2) && (large_rank >= 1));\n                                        ^\n\u001b[0m\u001b[91mtselect.c:10740:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:10743:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:10746:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:10749:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_shape_same_dr__run_checkerboard_tests':\n\u001b[0m\u001b[91mtselect.c:11351:40: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                             } while((z < 2) && (large_rank >= 1));\n                                        ^\n\u001b[0m\u001b[91mtselect.c:11354:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:11357:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:11360:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:11363:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_shape_same_dr__run_irregular_tests':\n\u001b[0m\u001b[91mtselect.c:11841:40: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                             } while((z < 2) && (large_rank >= 1));\n                                        ^\n\u001b[0m\u001b[91mtselect.c:11844:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:11847:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:11850:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:11853:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2 ) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select_hyper_contig_dr__run_test.constprop.15':\n\u001b[0m\u001b[91mtselect.c:2252:21: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n                     for(; s <= stop_index; s++) {\n                     ^\n\u001b[0m\u001b[91mtselect.c:2011:21: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n                     for(; s <= stop_index; s++) {\n                     ^\n\u001b[0m\u001b[91mtselect.c: In function 'test_select':\n\u001b[0m\u001b[91mtselect.c:10737:40: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                             } while((z < 2) && (large_rank >= 1));\n                                        ^\n\u001b[0m\u001b[91mtselect.c:10740:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:10743:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:10746:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:10749:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c:11351:40: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                             } while((z < 2) && (large_rank >= 1));\n                                        ^\n\u001b[0m\u001b[91mtselect.c:11354:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:11357:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:11360:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:11363:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c:11841:40: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                             } while((z < 2) && (large_rank >= 1));\n                                        ^\n\u001b[0m\u001b[91mtselect.c:11844:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:11847:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:11850:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:11853:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2 ) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c:10740:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:10743:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:10746:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:10749:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c:11354:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:11357:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:11360:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:11363:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c:11844:36: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                         } while((y < 2) && (large_rank >= 2));\n                                    ^\n\u001b[0m\u001b[91mtselect.c:11847:32: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                     } while((x < 2) && (large_rank >= 3));\n                                ^\n\u001b[0m\u001b[91mtselect.c:11850:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n                 } while((w < 2) && (large_rank >= 4));\n                            ^\n\u001b[0m\u001b[91mtselect.c:11853:24: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n             } while((v < 2 ) && (large_rank >= 5));\n                        ^\n\u001b[0m\u001b[91mtselect.c:11681:9: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n         for(small_rank = 1; small_rank <= large_rank; small_rank++) {\n         ^\n\u001b[0m\u001b[91mtselect.c:11133:9: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n         for(small_rank = 1; small_rank <= large_rank; small_rank++) {\n         ^\n\u001b[0m\u001b[91mtselect.c:10646:9: warning: cannot optimize possibly infinite loops [-Wunsafe-loop-optimizations]\n         for(small_rank = 1; small_rank <= large_rank; small_rank++) {\n         ^\n\u001b[0m  CC       tskiplist.o\n\u001b[91mtskiplist.c:44:12: warning: size of 'rand_num' is 4000 bytes [-Wlarger-than=]\n static int rand_num[NUM_ELEMS];\n            ^\ntskiplist.c:45:12: warning: size of 'sort_rand_num' is 4000 bytes [-Wlarger-than=]\n static int sort_rand_num[NUM_ELEMS];\n            ^\ntskiplist.c:46:12: warning: size of 'rev_sort_rand_num' is 4000 bytes [-Wlarger-than=]\n static int rev_sort_rand_num[NUM_ELEMS];\n            ^\n\u001b[0m  CC       tsohm.o\n\u001b[91mtsohm.c: In function 'size1_helper':\n\u001b[0m\u001b[91mtsohm.c:603:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     wdata.f1 = 0.0;\n     ^\n\u001b[0m\u001b[91mtsohm.c: In function 'size2_verify_plist1':\n\u001b[0m\u001b[91mtsohm.c:1282:5: warning: format '%s' expects argument of type 'char *', but argument 2 has type 'int (*)(const void *, const void *, size_t)' [-Wformat=]\n     VERIFY(ret, 0, memcmp);\n     ^\n\u001b[0m\u001b[91mtsohm.c: In function 'size2_verify_plist2':\n\u001b[0m\u001b[91mtsohm.c:1353:5: warning: format '%s' expects argument of type 'char *', but argument 2 has type 'int (*)(const void *, const void *, size_t)' [-Wformat=]\n     VERIFY(ret, 0, memcmp);\n     ^\n\u001b[0m\u001b[91mtsohm.c: In function 'size2_helper':\n\u001b[0m\u001b[91mtsohm.c:1684:51: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         attr_string1[0] = attr_name[0] = (x / 10) + '0';\n                                                   ^\n\u001b[0m\u001b[91mtsohm.c:1685:51: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         attr_string1[1] = attr_name[1] = (x % 10) + '0';\n                                                   ^\n\u001b[0m\u001b[91mtsohm.c:1724:51: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         attr_string1[0] = attr_name[0] = (x / 10) + '0';\n                                                   ^\n\u001b[0m\u001b[91mtsohm.c:1725:51: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         attr_string1[1] = attr_name[1] = (x % 10) + '0';\n                                                   ^\n\u001b[0m\u001b[91mtsohm.c: In function 'size2_verify':\n\u001b[0m\u001b[91mtsohm.c:1943:58: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         attr_correct_string[0] = attr_name[0] = (x / 10) + '0';\n                                                          ^\n\u001b[0m\u001b[91mtsohm.c:1944:58: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         attr_correct_string[1] = attr_name[1] = (x % 10) + '0';\n                                                          ^\n\u001b[0m\u001b[91mtsohm.c: In function 'test_sohm_size2':\n\u001b[0m\u001b[91mtsohm.c:2200:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_med.empty_size > norm_sizes.empty_size * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2200:46: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_med.empty_size > norm_sizes.empty_size * OVERHEAD_ALLOWED)\n                                              ^\n\u001b[0m\u001b[91mtsohm.c:2261:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(btree_index.dsets2 > list_index_small.dsets2 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2261:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(btree_index.dsets2 > list_index_small.dsets2 * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2270:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_small.dsets2 > btree_index.dsets2 * OVERHEAD_ALLOWED * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2270:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_small.dsets2 > btree_index.dsets2 * OVERHEAD_ALLOWED * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2270:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_small.dsets2 > btree_index.dsets2 * OVERHEAD_ALLOWED * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2294:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(btree_index.interleaved > list_index_small.interleaved * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2294:50: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(btree_index.interleaved > list_index_small.interleaved * OVERHEAD_ALLOWED)\n                                                  ^\n\u001b[0m\u001b[91mtsohm.c:2323:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(btree_index.attrs1 > list_index_small.attrs1 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2323:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(btree_index.attrs1 > list_index_small.attrs1 * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2325:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(btree_index.attrs1 > list_index_med.attrs1 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2325:43: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(btree_index.attrs1 > list_index_med.attrs1 * OVERHEAD_ALLOWED)\n                                           ^\n\u001b[0m\u001b[91mtsohm.c:2327:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_med.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2327:43: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_med.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n                                           ^\n\u001b[0m\u001b[91mtsohm.c:2329:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_small.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2329:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_small.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2334:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_small.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2334:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_small.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2336:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_med.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2336:43: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_med.attrs1 > btree_index.attrs1 * OVERHEAD_ALLOWED)\n                                           ^\n\u001b[0m\u001b[91mtsohm.c:2352:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             ((btree_index.attrs1 - btree_index.interleaved) * OVERHEAD_ALLOWED))\n             ^\n\u001b[0m\u001b[91mtsohm.c:2352:34: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n             ((btree_index.attrs1 - btree_index.interleaved) * OVERHEAD_ALLOWED))\n                                  ^\n\u001b[0m\u001b[91mtsohm.c:2360:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(btree_index.attrs2 > list_index_small.attrs2 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2360:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(btree_index.attrs2 > list_index_small.attrs2 * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2362:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_small.attrs2 > btree_index.attrs2 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2362:45: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_small.attrs2 > btree_index.attrs2 * OVERHEAD_ALLOWED)\n                                             ^\n\u001b[0m\u001b[91mtsohm.c:2364:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(btree_index.attrs2 > list_index_med.attrs2 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2364:43: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(btree_index.attrs2 > list_index_med.attrs2 * OVERHEAD_ALLOWED)\n                                           ^\n\u001b[0m\u001b[91mtsohm.c:2366:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(list_index_med.attrs2 > btree_index.attrs2 * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2366:43: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(list_index_med.attrs2 > btree_index.attrs2 * OVERHEAD_ALLOWED)\n                                           ^\n\u001b[0m\u001b[91mtsohm.c:2454:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             (list_index_med.dsets2 - list_index_med.dsets1) * OVERHEAD_ALLOWED)\n             ^\n\u001b[0m\u001b[91mtsohm.c:2454:36: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n             (list_index_med.dsets2 - list_index_med.dsets1) * OVERHEAD_ALLOWED)\n                                    ^\n\u001b[0m\u001b[91mtsohm.c:2457:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             (btree_index.dsets2 - btree_index.dsets1) * OVERHEAD_ALLOWED)\n             ^\n\u001b[0m\u001b[91mtsohm.c:2457:33: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n             (btree_index.dsets2 - btree_index.dsets1) * OVERHEAD_ALLOWED)\n                                 ^\n\u001b[0m\u001b[91mtsohm.c:2461:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             (list_index_med.interleaved - list_index_med.dsets2) * OVERHEAD_ALLOWED)\n             ^\n\u001b[0m\u001b[91mtsohm.c:2461:41: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n             (list_index_med.interleaved - list_index_med.dsets2) * OVERHEAD_ALLOWED)\n                                         ^\n\u001b[0m\u001b[91mtsohm.c:2464:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             (btree_index.interleaved - btree_index.dsets2) * OVERHEAD_ALLOWED)\n             ^\n\u001b[0m\u001b[91mtsohm.c:2464:38: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n             (btree_index.interleaved - btree_index.dsets2) * OVERHEAD_ALLOWED)\n                                      ^\n\u001b[0m\u001b[91mtsohm.c:2486:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      if(mult_index_med.attrs2 * OVERHEAD_ALLOWED < btree_index.attrs2)\n      ^\n\u001b[0m\u001b[91mtsohm.c:2486:23: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n      if(mult_index_med.attrs2 * OVERHEAD_ALLOWED < btree_index.attrs2)\n                       ^\n\u001b[0m\u001b[91mtsohm.c:2488:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      if(mult_index_btree.attrs2 * OVERHEAD_ALLOWED < btree_index.attrs2)\n      ^\n\u001b[0m\u001b[91mtsohm.c:2488:25: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n      if(mult_index_btree.attrs2 * OVERHEAD_ALLOWED < btree_index.attrs2)\n                         ^\n\u001b[0m\u001b[91mtsohm.c:2557:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.first_dset >= type_space_index.first_dset * OVERHEAD_ALLOWED)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2557:55: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.first_dset >= type_space_index.first_dset * OVERHEAD_ALLOWED)\n                                                       ^\n\u001b[0m\u001b[91mtsohm.c:2564:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.second_dset * OVERHEAD_ALLOWED < type_space_index.second_dset)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2564:24: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.second_dset * OVERHEAD_ALLOWED < type_space_index.second_dset)\n                        ^\n\u001b[0m\u001b[91mtsohm.c:2569:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.dsets1 * OVERHEAD_ALLOWED < type_space_index.dsets1)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2569:24: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.dsets1 * OVERHEAD_ALLOWED < type_space_index.dsets1)\n                        ^\n\u001b[0m\u001b[91mtsohm.c:2574:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.dsets2 * OVERHEAD_ALLOWED < type_space_index.dsets2)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2574:24: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.dsets2 * OVERHEAD_ALLOWED < type_space_index.dsets2)\n                        ^\n\u001b[0m\u001b[91mtsohm.c:2579:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.interleaved * OVERHEAD_ALLOWED < type_space_index.interleaved)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2579:24: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.interleaved * OVERHEAD_ALLOWED < type_space_index.interleaved)\n                        ^\n\u001b[0m\u001b[91mtsohm.c:2584:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.attrs1 * OVERHEAD_ALLOWED < type_space_index.attrs1)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2584:24: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.attrs1 * OVERHEAD_ALLOWED < type_space_index.attrs1)\n                        ^\n\u001b[0m\u001b[91mtsohm.c:2589:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(share_tiny_index.attrs2 * OVERHEAD_ALLOWED < type_space_index.attrs2)\n     ^\n\u001b[0m\u001b[91mtsohm.c:2589:24: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n     if(share_tiny_index.attrs2 * OVERHEAD_ALLOWED < type_space_index.attrs2)\n                        ^\n\u001b[0m\u001b[91mtsohm.c: In function 'delete_helper_write':\n\u001b[0m\u001b[91mtsohm.c:2619:15: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n     wdata = x + 'a';\n               ^\n\u001b[0m\u001b[91mtsohm.c: In function 'delete_helper':\n\u001b[0m\u001b[91mtsohm.c:2767:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(norm_filesize > deleted_filesize * OVERHEAD_ALLOWED)\n     ^\ntsohm.c:2767:5: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mtsohm.c:2769:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(deleted_filesize > norm_filesize * OVERHEAD_ALLOWED)\n     ^\ntsohm.c:2769:5: warning: conversion to 'double' from 'h5_stat_size_t' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mtsohm.c: In function 'test_sohm_external_dtype':\n\u001b[0m\u001b[91mtsohm.c:3890:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         s_ptr->a = i*3 + 1;\n                        ^\n\u001b[0m\u001b[91mtsohm.c:3891:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         s_ptr->b = i*3 + 2;\n                        ^\n\u001b[0m  CC       ttime.o\n  CC       ttst.o\n\u001b[91mttst.c: In function 'test_tst_init':\n\u001b[0m\u001b[91mttst.c:98:15: warning: request for implicit conversion from 'void *' to 'char **' not permitted in C++ [-Wc++-compat]\n     uniq_words=HDmalloc(sizeof(char *)*num_uniq_words);\n               ^\n\u001b[0m\u001b[91mttst.c:101:20: warning: request for implicit conversion from 'void *' to 'char **' not permitted in C++ [-Wc++-compat]\n     rand_uniq_words=HDmalloc(sizeof(char *)*num_uniq_words);\n                    ^\nttst.c:104:20: warning: request for implicit conversion from 'void *' to 'char **' not permitted in C++ [-Wc++-compat]\n     sort_uniq_words=HDmalloc(sizeof(char *)*num_uniq_words);\n                    ^\n\u001b[0m\u001b[91mttst.c:110:18: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         tmp_word=(char *)words[u];\n                  ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:27:0,\n                 from ttst.c:39:\n../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nttst.c:129:14: note: in expansion of macro 'HDrandom'\n         v=u+(HDrandom()%(num_uniq_words-u));\n              ^\n\u001b[0m  CC       tunicode.o\n\u001b[91mtunicode.c: In function 'test_objnames':\n\u001b[0m\u001b[91mtunicode.c:402:31: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n   ret = H5Oget_comment_by_name(fid, string, read_buf, (size_t)MAX_STRING_LENGTH, H5P_DEFAULT);\n                               ^\n\u001b[0m\u001b[91mtunicode.c: In function 'test_attrname':\n\u001b[0m\u001b[91mtunicode.c:535:20: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n   ret = H5Aget_name(attr_id, (size_t)MAX_STRING_LENGTH, read_buf);\n                    ^\n\u001b[0m\u001b[91mtunicode.c: In function 'test_compound':\n\u001b[0m\u001b[91mtunicode.c:592:3: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n   s1.c = COMP_DOUBLE_VAL;\n   ^\n\u001b[0m\u001b[91mtunicode.c:593:3: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n   s1.b = COMP_FLOAT_VAL;\n   ^\n\u001b[0m\u001b[91mtunicode.c:636:3: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n   VERIFY(s2.c, COMP_DOUBLE_VAL, \"H5Dread\");\n   ^\n\u001b[0m\u001b[91mtunicode.c: In function 'write_char':\n\u001b[0m\u001b[91mtunicode.c:747:5: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos] = c;\n     ^\n\u001b[0m\u001b[91mtunicode.c:751:34: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos] = (0xC0 | c>>6);\n                                  ^\n\u001b[0m\u001b[91mtunicode.c:752:36: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos+1] = (0x80 | (c & 0x3F));\n                                    ^\n\u001b[0m\u001b[91mtunicode.c:756:34: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos] = (0xE0 | c>>12);\n                                  ^\n\u001b[0m\u001b[91mtunicode.c:757:36: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos+1] = (0x80 | (c>>6 & 0x3F));\n                                    ^\n\u001b[0m\u001b[91mtunicode.c:758:36: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos+2] = (0x80 | (c & 0x3F));\n                                    ^\n\u001b[0m\u001b[91mtunicode.c:762:34: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos] = (0xF0 | c>>18);\n                                  ^\n\u001b[0m\u001b[91mtunicode.c:763:36: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos+1] = (0x80 | (c>>12 & 0x3F));\n                                    ^\n\u001b[0m\u001b[91mtunicode.c:764:36: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos+2] = (0x80 | (c>>6 & 0x3F));\n                                    ^\n\u001b[0m\u001b[91mtunicode.c:765:36: warning: conversion to 'char' from 'unsigned int' may alter its value [-Wconversion]\n     test_string[cur_pos+3] = (0x80 | (c & 0x3F));\n                                    ^\n\u001b[0m\u001b[91mtunicode.c: In function 'dump_string':\n\u001b[0m\u001b[91mtunicode.c:784:18: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n   length = strlen(string);\n                  ^\n\u001b[0m\u001b[91mtunicode.c: In function 'test_unicode':\n\u001b[0m\u001b[91mtunicode.c:817:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     unicode_point = (HDrandom() % (MAX_CODE_POINT-32)) + 32;\n                                                        ^\n\u001b[0m  CC       tvlstr.o\n  CC       tvltypes.o\n\u001b[91mtvltypes.c: In function 'test_vltypes_funcs':\ntvltypes.c:186:26: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     size=H5Tget_precision(type);\n                          ^\n\u001b[0m\u001b[91mtvltypes.c:189:21: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     size=H5Tget_size(type);\n                     ^\n\u001b[0m\u001b[91mtvltypes.c:192:22: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     size=H5Tget_ebias(type);\n                      ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'rewrite_vltypes_vlen_atomic':\n\u001b[0m\u001b[91mtvltypes.c:569:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].p = HDmalloc((i + increment) * sizeof(unsigned int));\n         ^\n\u001b[0m\u001b[91mtvltypes.c:570:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].len = i + increment;\n         ^\n\u001b[0m\u001b[91mtvltypes.c:571:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         for(j = 0; j < (i + increment); j++)\n         ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'test_vltypes_vlen_compound':\n\u001b[0m\u001b[91mtvltypes.c:733:41: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n             ((s1 *)wdata[i].p)[j].i=i*10+j;\n                                         ^\n\u001b[0m\u001b[91mtvltypes.c:734:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             ((s1 *)wdata[i].p)[j].f=(float)((i*20+j)/3.0);\n             ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'rewrite_vltypes_vlen_compound':\n\u001b[0m\u001b[91mtvltypes.c:876:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].p = HDmalloc((i + increment) * sizeof(s1));\n         ^\n\u001b[0m\u001b[91mtvltypes.c:877:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].len = i + increment;\n         ^\n\u001b[0m\u001b[91mtvltypes.c:878:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         for(j = 0; j < (i + increment); j++) {\n         ^\n\u001b[0m\u001b[91mtvltypes.c:879:46: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n             ((s1 *)wdata[i].p)[j].i = i * 40 + j;\n                                              ^\n\u001b[0m\u001b[91mtvltypes.c:880:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             ((s1 *)wdata[i].p)[j].f = (float)((i * 60 + j) / 3.0);\n             ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'test_vltypes_compound_vlen_vlen':\n\u001b[0m\u001b[91mtvltypes.c:1004:8: warning: size of 'wdata' is 3072 bytes [-Wlarger-than=]\n     s1 wdata[SPACE3_DIM1];              /* data to write */\n        ^\n\u001b[0m\u001b[91mtvltypes.c:1005:8: warning: size of 'rdata' is 3072 bytes [-Wlarger-than=]\n     s1 rdata[SPACE3_DIM1];              /* data to read */\n        ^\n\u001b[0m\u001b[91mtvltypes.c:1020:21: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].i=i*10;\n                     ^\n\u001b[0m\u001b[91mtvltypes.c:1021:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         wdata[i].f=(float)((i*20)/3.0);\n         ^\n\u001b[0m\u001b[91mtvltypes.c:1024:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=(wdata[i].v).p,j=0; j<(i+L1_INCM); j++, t1++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:1105:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].v.p, t2=rdata[i].v.p, j=0; j<rdata[i].v.len; j++, t1++, t2++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:1105:32: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].v.p, t2=rdata[i].v.p, j=0; j<rdata[i].v.len; j++, t1++, t2++) {\n                                ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'test_vltypes_compound_vlstr':\n\u001b[0m\u001b[91mtvltypes.c:1202:15: warning: request for implicit conversion from 'void *' to 'struct s2 *' not permitted in C++ [-Wc++-compat]\n         for(t1=(wdata[i].v).p, j=0; j<(i+L3_INCM); j++, t1++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:1345:15: warning: request for implicit conversion from 'void *' to 'struct s2 *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].v.p, t2=rdata[i].v.p, j=0; j<rdata[i].v.len; j++, t1++, t2++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:1345:32: warning: request for implicit conversion from 'void *' to 'struct s2 *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].v.p, t2=rdata[i].v.p, j=0; j<rdata[i].v.len; j++, t1++, t2++) {\n                                ^\n\u001b[0m\u001b[91mtvltypes.c:1403:15: warning: request for implicit conversion from 'void *' to 'struct s2 *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata2[i].v.p, t2=rdata2[i].v.p, j=0; j<rdata2[i].v.len; j++, t1++, t2++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:1403:33: warning: request for implicit conversion from 'void *' to 'struct s2 *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata2[i].v.p, t2=rdata2[i].v.p, j=0; j<rdata2[i].v.len; j++, t1++, t2++) {\n                                 ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'test_vltypes_compound_vlen_atomic':\n\u001b[0m\u001b[91mtvltypes.c:1481:21: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].i=i*10;\n                     ^\n\u001b[0m\u001b[91mtvltypes.c:1482:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         wdata[i].f=(float)((i*20)/3.0);\n         ^\n\u001b[0m\u001b[91mtvltypes.c:1598:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         if(rdata[i].i != 0 || !FLT_ABS_EQUAL(rdata[i].f, 0.0) || rdata[i].v.len != 0 || rdata[i].v.p != NULL)\n         ^\n\u001b[0m\u001b[91mIn file included from testhdf5.h:31:0,\n                 from tvltypes.c:24:\nh5test.h:130:42: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n #define FLT_ABS_EQUAL(X,Y) ((float)fabs(X-Y)<FLT_EPSILON)\n                                          ^\ntvltypes.c:1598:32: note: in expansion of macro 'FLT_ABS_EQUAL'\n         if(rdata[i].i != 0 || !FLT_ABS_EQUAL(rdata[i].f, 0.0) || rdata[i].v.len != 0 || rdata[i].v.p != NULL)\n                                ^\n\u001b[0m\u001b[91mtvltypes.c:1599:13: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n             TestErrPrintf(\"VL doesn't match!, rdata[%d].i=%d, rdata[%d].f=%f, rdata[%d].v.len=%u, rdata[%d].v.p=%p\\n\",(int)i,rdata[i].i,(int)i,rdata[i].f,(int)i,(unsigned)rdata[i].v.len,(int)i,rdata[i].v.p);\n             ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'rewrite_vltypes_compound_vlen_atomic':\n\u001b[0m\u001b[91mtvltypes.c:1699:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].i = i * 40;\n                        ^\n\u001b[0m\u001b[91mtvltypes.c:1700:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         wdata[i].f = (float)((i * 50) / 3.0);\n         ^\n\u001b[0m\u001b[91mtvltypes.c:1701:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].v.p = HDmalloc((i + increment) * sizeof(unsigned int));\n         ^\n\u001b[0m\u001b[91mtvltypes.c:1702:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].v.len = i + increment;\n         ^\n\u001b[0m\u001b[91mtvltypes.c:1703:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         for(j = 0; j < (i + increment); j++)\n         ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'test_vltypes_vlen_vlen_atomic':\n\u001b[0m\u001b[91mtvltypes.c:1874:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p,j=0; j<(i+1); j++, t1++) {\n               ^\n\u001b[0m\u001b[91mIn file included from tvltypes.c:24:0:\ntvltypes.c:1963:74: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(size, ((SPACE1_DIM1 * (SPACE1_DIM1 + 1)) / 2) * sizeof(hvl_t) + vlen_size_func((unsigned long)SPACE1_DIM1) * sizeof(unsigned int), \"H5Dvlen_get_buf_size\");\n                                                                          ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\n\u001b[0m\u001b[91mtvltypes.c:1972:78: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(mem_used, ((SPACE1_DIM1 * (SPACE1_DIM1 + 1)) / 2) * sizeof(hvl_t) + vlen_size_func((unsigned long)SPACE1_DIM1) * sizeof(unsigned int), \"H5Dread\");\n                                                                              ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\n\u001b[0m\u001b[91mtvltypes.c:1980:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p, t2=rdata[i].p, j=0; j<rdata[i].len; j++, t1++, t2++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:1980:30: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p, t2=rdata[i].p, j=0; j<rdata[i].len; j++, t1++, t2++) {\n                              ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'rewrite_longer_vltypes_vlen_vlen_atomic':\n\u001b[0m\u001b[91mtvltypes.c:2059:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].p = HDmalloc((i + increment) * sizeof(hvl_t));\n         ^\n\u001b[0m\u001b[91mtvltypes.c:2064:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].len = i + increment;\n         ^\n\u001b[0m\u001b[91mtvltypes.c:2065:16: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1 = wdata[i].p, j = 0; j < (i + increment); j++, t1++) {\n                ^\n\u001b[0m\u001b[91mtvltypes.c:2065:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         for(t1 = wdata[i].p, j = 0; j < (i + increment); j++, t1++) {\n         ^\n\u001b[0m\u001b[91mtvltypes.c:2160:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p, t2=rdata[i].p, j=0; j<rdata[i].len; j++, t1++, t2++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:2160:30: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p, t2=rdata[i].p, j=0; j<rdata[i].len; j++, t1++, t2++) {\n                              ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'rewrite_shorter_vltypes_vlen_vlen_atomic':\n\u001b[0m\u001b[91mtvltypes.c:2235:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].p=HDmalloc((i+increment)*sizeof(hvl_t));\n         ^\n\u001b[0m\u001b[91mtvltypes.c:2240:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         wdata[i].len=i+increment;\n         ^\n\u001b[0m\u001b[91mtvltypes.c:2241:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p,j=0; j<(i+increment); j++, t1++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:2241:9: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         for(t1=wdata[i].p,j=0; j<(i+increment); j++, t1++) {\n         ^\n\u001b[0m\u001b[91mIn file included from tvltypes.c:24:0:\ntvltypes.c:2319:72: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(size, ((SPACE1_DIM1*(SPACE1_DIM1 + 1)) / 2) * sizeof(hvl_t) + vlen_size_func((unsigned long)SPACE1_DIM1) * sizeof(unsigned int), \"H5Dvlen_get_buf_size\");\n                                                                        ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\n\u001b[0m\u001b[91mtvltypes.c:2328:68: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n     VERIFY(mem_used,((SPACE1_DIM1*(SPACE1_DIM1+1))/2)*sizeof(hvl_t)+vlen_size_func((unsigned long)SPACE1_DIM1)*sizeof(unsigned int),\"H5Dread\");\n                                                                    ^\ntesthdf5.h:73:40: note: in definition of macro 'VERIFY'\n     long __x = (long)_x, __val = (long)_val;          \\\n                                        ^\n\u001b[0m\u001b[91mtvltypes.c:2336:15: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p, t2=rdata[i].p, j=0; j<rdata[i].len; j++, t1++, t2++) {\n               ^\n\u001b[0m\u001b[91mtvltypes.c:2336:30: warning: request for implicit conversion from 'void *' to 'struct hvl_t *' not permitted in C++ [-Wc++-compat]\n         for(t1=wdata[i].p, t2=rdata[i].p, j=0; j<rdata[i].len; j++, t1++, t2++) {\n                              ^\n\u001b[0m\u001b[91mtvltypes.c: In function 'test_vltypes_fill_value':\n\u001b[0m\u001b[91mtvltypes.c:2433:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     const dtype1_struct fill1 = {1, 2, \"foobar\", \"\", NULL, \"\\0\", \"dead\", 3, 4.0, 100.0, 1.0, \"liquid\", \"meter\"};\n     ^\ntvltypes.c:2433:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2433:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2433:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2433:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntvltypes.c:2433:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntvltypes.c:2433:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntvltypes.c:2433:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2433:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n\u001b[0m\u001b[91mtvltypes.c:2434:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     const dtype1_struct wdata = {3, 4, \"\", NULL, \"\\0\", \"foo\", \"two\", 6, 8.0, 200.0, 2.0, \"solid\", \"yard\"};\n     ^\ntvltypes.c:2434:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2434:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2434:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2434:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntvltypes.c:2434:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntvltypes.c:2434:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ntvltypes.c:2434:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\ntvltypes.c:2434:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n\u001b[0m\u001b[91mtvltypes.c:2499:10: warning: request for implicit conversion from 'void *' to 'struct dtype1_struct *' not permitted in C++ [-Wc++-compat]\n     rbuf = HDmalloc(SPACE4_DIM_LARGE * sizeof(dtype1_struct));\n          ^\n\u001b[0m\u001b[91mtvltypes.c:2541:60: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(layout = H5D_COMPACT; layout <= H5D_CHUNKED; layout++) {\n                                                            ^\n\u001b[0m\u001b[91mtvltypes.c:2561:13: warning: enumeration value 'H5D_LAYOUT_ERROR' not handled in switch [-Wswitch-enum]\n             switch(layout) {\n             ^\ntvltypes.c:2561:13: warning: enumeration value 'H5D_NLAYOUTS' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mtvltypes.c:2651:60: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(layout = H5D_COMPACT; layout <= H5D_CHUNKED; layout++) {\n                                                            ^\n\u001b[0m\u001b[91mtvltypes.c:2666:13: warning: enumeration value 'H5D_LAYOUT_ERROR' not handled in switch [-Wswitch-enum]\n             switch(layout) {\n             ^\ntvltypes.c:2666:13: warning: enumeration value 'H5D_NLAYOUTS' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mtvltypes.c:2846:60: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(layout = H5D_COMPACT; layout <= H5D_CHUNKED; layout++) {\n                                                            ^\n\u001b[0m\u001b[91mtvltypes.c:2861:13: warning: enumeration value 'H5D_LAYOUT_ERROR' not handled in switch [-Wswitch-enum]\n             switch(layout) {\n             ^\ntvltypes.c:2861:13: warning: enumeration value 'H5D_NLAYOUTS' not handled in switch [-Wswitch-enum]\n\u001b[0m  CCLD     testhdf5\n  CC       lheap.o\n\u001b[91mlheap.c: In function 'main':\nlheap.c:100:26: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n             buf[j] = '0' + j % 10;\n                          ^\n\u001b[0m\u001b[91mlheap.c:133:26: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n             buf[j] = '0' + j % 10;\n                          ^\n\u001b[0m\u001b[91mIn file included from lheap.c:23:0:\nlheap.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     lheap\n  CC       ohdr.o\n\u001b[91mIn file included from ohdr.c:20:0:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     ohdr\n  CC       stab.o\n  CCLD     stab\n  CC       gheap.o\n\u001b[91mgheap.c: In function 'test_1':\ngheap.c:80:12: warning: size of 'obj' is 16384 bytes [-Wlarger-than=]\n     H5HG_t obj[1024];\n            ^\n\u001b[0m\u001b[91mgheap.c:107:11: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n  size = i + 1;\n           ^\ngheap.c:126:11: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n  size = i + 1;\n           ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_2':\n\u001b[0m\u001b[91mgheap.c:176:12: warning: size of 'obj' is 16384 bytes [-Wlarger-than=]\n     H5HG_t obj[1024];\n            ^\n\u001b[0m\u001b[91mgheap.c:200:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n  size = 1024-i;\n             ^\n\u001b[0m\u001b[91mgheap.c:214:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n  size = 1024-i;\n             ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_3':\n\u001b[0m\u001b[91mgheap.c:263:12: warning: size of 'obj' is 16384 bytes [-Wlarger-than=]\n     H5HG_t obj[1024];\n            ^\n\u001b[0m\u001b[91mgheap.c:285:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n  size = i%30+100;\n             ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_4':\ngheap.c:342:12: warning: size of 'obj' is 16384 bytes [-Wlarger-than=]\n     H5HG_t obj[1024];\n            ^\n\u001b[0m\u001b[91mgheap.c:364:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n  size = i%30+100;\n             ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_1':\ngheap.c:76:1: warning: stack usage is 19584 bytes [-Wstack-usage=]\n test_1 (hid_t fapl)\n ^\n\u001b[0m\u001b[91mgheap.c:151:1: warning: the frame size of 19508 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_2':\ngheap.c:172:1: warning: stack usage is 19568 bytes [-Wstack-usage=]\n test_2 (hid_t fapl)\n ^\n\u001b[0m\u001b[91mgheap.c:238:1: warning: the frame size of 19504 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_3':\ngheap.c:259:1: warning: stack usage is 18560 bytes [-Wstack-usage=]\n test_3 (hid_t fapl)\n ^\n\u001b[0m\u001b[91mgheap.c:316:1: warning: the frame size of 18484 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mgheap.c: In function 'test_4':\n\u001b[0m\u001b[91mgheap.c:338:1: warning: stack usage is 18560 bytes [-Wstack-usage=]\n test_4 (hid_t fapl)\n ^\n\u001b[0m\u001b[91mgheap.c:401:1: warning: the frame size of 18484 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m  CCLD     gheap\n  CC       cache.o\n\u001b[91mcache.c: In function 'check_flush_cache__flush_ops':\n\u001b[0m\u001b[91mcache.c:7077:34: warning: size of 'spec' is 2160 bytes [-Wlarger-than=]\n  struct fo_flush_cache_test_spec spec[6] =\n                                  ^\n\u001b[0m\u001b[91mcache.c:7353:34: warning: size of 'spec' is 2160 bytes [-Wlarger-than=]\n  struct fo_flush_cache_test_spec spec[6] =\n                                  ^\n\u001b[0m\u001b[91mcache.c:7969:34: warning: size of 'spec' is 3600 bytes [-Wlarger-than=]\n  struct fo_flush_cache_test_spec spec[10] =\n                                  ^\n\u001b[0m\u001b[91mcache.c:8416:34: warning: size of 'spec' is 3600 bytes [-Wlarger-than=]\n  struct fo_flush_cache_test_spec spec[10] =\n                                  ^\n\u001b[0m\u001b[91mcache.c: In function 'check_flush_cache__single_entry':\n\u001b[0m\u001b[91mcache.c:12689:4: warning: size of 'spec' is 12288 bytes [-Wlarger-than=]\n  } spec[256] =\n    ^\n\u001b[0m\u001b[91mcache.c: In function 'check_auto_cache_resize':\n\u001b[0m\u001b[91mcache.c:20327:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         auto_size_ctl.upper_hr_threshold     = 0.999; /* for ease of testing */\n         ^\n\u001b[0m\u001b[91mcache.c: In function 'check_auto_cache_resize_input_errs':\n\u001b[0m\u001b[91mcache.c:25754:9: warning: implicit declaration of function 'resize_configs_are_equal' [-Wimplicit-function-declaration]\n         } else if ( ! resize_configs_are_equal(&test_auto_size_ctl, \\\n         ^\ncache.c:25754:9: warning: nested extern declaration of 'resize_configs_are_equal' [-Wnested-externs]\n\u001b[0m\u001b[91mcache.c: In function 'check_auto_cache_resize_aux_fcns':\n\u001b[0m\u001b[91mcache.c:28179:30: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n         } else if ( hit_rate > FP_EPSILON ) {   /* i.e. hit_rate != 0.0 */\n                              ^\n\u001b[0m\u001b[91mcache.c:28212:30: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n         } else if ( hit_rate > FP_EPSILON ) {   /* i.e. hit_rate != 0.0 */\n                              ^\n\u001b[0m\u001b[91mIn file included from cache.c:23:0:\nh5test.h:135:41: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n #define DBL_REL_EQUAL(X,Y,M)    (fabs((Y-X)/X)<M)\n                                         ^\ncache.c:28257:23: note: in expansion of macro 'DBL_REL_EQUAL'\n         } else if ( ! DBL_REL_EQUAL(hit_rate, 0.5f, FP_EPSILON) ) { /* i.e. hit_rate != 0.5 */\n                       ^\n\u001b[0m\u001b[91mh5test.h:135:47: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n #define DBL_REL_EQUAL(X,Y,M)    (fabs((Y-X)/X)<M)\n                                               ^\ncache.c:28257:23: note: in expansion of macro 'DBL_REL_EQUAL'\n         } else if ( ! DBL_REL_EQUAL(hit_rate, 0.5f, FP_EPSILON) ) { /* i.e. hit_rate != 0.5 */\n                       ^\n\u001b[0m\u001b[91mcache.c:28340:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         } else if ( ! DBL_REL_EQUAL(hit_rate, 0.5, FP_EPSILON) ) { /* i.e. hit_rate != 0.5 */\n         ^\n\u001b[0m\u001b[91mIn file included from cache.c:23:0:\nh5test.h:135:47: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n #define DBL_REL_EQUAL(X,Y,M)    (fabs((Y-X)/X)<M)\n                                               ^\ncache.c:28340:23: note: in expansion of macro 'DBL_REL_EQUAL'\n         } else if ( ! DBL_REL_EQUAL(hit_rate, 0.5, FP_EPSILON) ) { /* i.e. hit_rate != 0.5 */\n                       ^\n\u001b[0m\u001b[91mcache.c: In function 'check_metadata_blizzard_absence':\n\u001b[0m\u001b[91mcache.c:28623:34: warning: size of 'expected' is 4800 bytes [-Wlarger-than=]\n     struct expected_entry_status expected[150] =\n                                  ^\n\u001b[0m\u001b[91mcache.c: In function 'check_flush_cache__single_entry':\ncc1: warning: size of '*.LC4' is 12288 bytes [-Wlarger-than=]\n\u001b[0m\u001b[91mcache.c: In function 'check_metadata_blizzard_absence':\ncc1: warning: size of '*.LC27' is 4800 bytes [-Wlarger-than=]\n\u001b[0m\u001b[91mcache.c: In function 'check_resize_entry':\n\u001b[0m\u001b[91mcache.c:15138:44: warning: 'entry_ptr' may be used uninitialized in this function [-Wmaybe-uninitialized]\n                     ( entry_ptr->cleared ) ||\n                                            ^\n\u001b[0m\u001b[91mcache.c: In function 'check_flush_cache__single_entry':\n\u001b[0m\u001b[91mcache.c:10889:1: warning: stack usage is 12432 bytes [-Wstack-usage=]\n check_flush_cache__single_entry(H5F_t * file_ptr)\n ^\n\u001b[0m  CCLD     cache\n  CC       cache_api.o\n\u001b[91mcache_api.c: In function 'check_fapl_mdc_api_calls':\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     H5AC_cache_config_t default_config = H5AC__DEFAULT_CACHE_CONFIG;\n     ^\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:81:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from cache_api.c:26:0:\ncache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_api.c:154:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_api.c:188:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_api.c:265:2: warning: implicit declaration of function 'resize_configs_are_equal' [-Wimplicit-function-declaration]\n  if ( ! resize_configs_are_equal(&default_auto_size_ctl, \\\n  ^\ncache_api.c:265:2: warning: nested extern declaration of 'resize_configs_are_equal' [-Wnested-externs]\n\u001b[0m\u001b[91mIn file included from cache_api.c:26:0:\ncache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_api.c:300:21: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if (!CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE)) {\n                     ^\n\u001b[0m\u001b[91mcache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_api.c:449:23: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n         } else if ( ! CACHE_CONFIGS_EQUAL(mod_config, scratch, TRUE, TRUE) ) {\n                       ^\n\u001b[0m\u001b[91mcache_api.c: In function 'check_file_mdc_api_calls':\n\u001b[0m\u001b[91mcache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     H5AC_cache_config_t default_config = H5AC__DEFAULT_CACHE_CONFIG;\n     ^\ncache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:530:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:776:30: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         } else if ( hit_rate != 0.0f ) {\n                              ^\ncache_api.c:776:30: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n\u001b[0m\u001b[91mcache_api.c: In function 'mdc_api_call_smoke_check':\n\u001b[0m\u001b[91mcache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     H5AC_cache_config_t default_config = H5AC__DEFAULT_CACHE_CONFIG;\n     ^\ncache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:892:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:1186:17: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 offset[0] = i; /*offset of hyperslab in file*/\n                 ^\n\u001b[0m\u001b[91mcache_api.c:1187:17: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 offset[1] = j;\n                 ^\n\u001b[0m\u001b[91mcache_api.c:1257:9: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         offset[0] = i; /*offset of hyperslab in file*/\n         ^\n\u001b[0m\u001b[91mcache_api.c:1258:9: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         offset[1] = j;\n         ^\n\u001b[0m\u001b[91mcache_api.c:1382:9: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         offset[0] = i; /*offset of hyperslab in file*/\n         ^\n\u001b[0m\u001b[91mcache_api.c:1383:9: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         offset[1] = j;\n         ^\n\u001b[0m\u001b[91mcache_api.c: At top level:\n\u001b[0m\u001b[91mcache_api.c:1528:21: warning: size of 'invalid_configs' is 51408 bytes [-Wlarger-than=]\n H5AC_cache_config_t invalid_configs[NUM_INVALID_CONFIGS] =\n                     ^\n\u001b[0m\u001b[91mcache_api.c:2176:48: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     /* double      increment              = */ 0.999999999999,\n                                                ^\n\u001b[0m\u001b[91mcache_api.c:2535:48: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     /* double      decrement              = */ 1.0000000001,\n                                                ^\n\u001b[0m\u001b[91mcache_api.c:2715:48: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     /* double      empty_reserve          = */ 1.00000000001,\n                                                ^\n\u001b[0m\u001b[91mcache_api.c:2779:48: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     /* double      upper_hr_threshold     = */ 1.00000001,\n                                                ^\n\u001b[0m\u001b[91mcache_api.c: In function 'check_fapl_mdc_api_errs':\n\u001b[0m\u001b[91mcache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     H5AC_cache_config_t default_config = H5AC__DEFAULT_CACHE_CONFIG;\n     ^\ncache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:3026:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from cache_api.c:26:0:\ncache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_api.c:3069:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:398:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).min_clean_fraction      == (b).min_clean_fraction ) &&      \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:403:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).lower_hr_threshold      == (b).lower_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:404:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).increment               == (b).increment ) &&               \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:408:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_multiple          == (b).flash_multiple ) &&          \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:409:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).flash_threshold         == (b).flash_threshold ) &&         \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:411:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).upper_hr_threshold      == (b).upper_hr_threshold ) &&      \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:412:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).decrement               == (b).decrement ) &&               \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_common.h:417:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     ( (a).empty_reserve           == (b).empty_reserve ) &&           \\\n                                   ^\ncache_api.c:3158:15: note: in expansion of macro 'CACHE_CONFIGS_EQUAL'\n            ( !CACHE_CONFIGS_EQUAL(default_config, scratch, TRUE, TRUE) ) ) ) {\n               ^\n\u001b[0m\u001b[91mcache_api.c: In function 'check_file_mdc_api_errs':\n\u001b[0m\u001b[91mcache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     H5AC_cache_config_t default_config = H5AC__DEFAULT_CACHE_CONFIG;\n     ^\ncache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mcache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ncache_api.c:3204:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m  CCLD     cache_api\n  CC       pool.o\n\u001b[91mIn file included from h5test.h:26:0,\n                 from pool.c:19:\npool.c: In function 'test_allocate_random':\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\npool.c:674:29: note: in expansion of macro 'HDrandom'\n         swap_idx = (size_t)(HDrandom() % (MPOOL_NUM_RANDOM - u)) + u;\n                             ^\n\u001b[0m  CCLD     pool\n  CC       accum.o\n  CCLD     accum\n  CC       hyperslab.o\n\u001b[91mhyperslab.c: In function 'test_fill':\nhyperslab.c:226:43: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n                                 ref_value += fill_value * dx * dy * dz;\n                                           ^\n\u001b[0m\u001b[91mhyperslab.c: In function 'test_multifill':\n\u001b[0m\u001b[91mhyperslab.c:612:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         src[i].mid = 12345.6789;\n         ^\n\u001b[0m\u001b[91mhyperslab.c:615:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         dst[i].mid = 98765.4321;\n         ^\nhyperslab.c:624:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     fill.mid = 3.1415927;\n     ^\n\u001b[0m\u001b[91mhyperslab.c: In function 'test_transpose':\n\u001b[0m\u001b[91mhyperslab.c:822:21: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     dst_stride[0] = (ssize_t)((1 - nx * ny) * sizeof(*src));\n                     ^\n\u001b[0m\u001b[91mhyperslab.c:823:21: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     dst_stride[1] = (ssize_t)(nx * sizeof(*src));\n                     ^\n\u001b[0m\u001b[91mhyperslab.c: In function 'test_sub_super':\n\u001b[0m\u001b[91mhyperslab.c:926:21: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     src_stride[0] = (ssize_t)(2 * ny);\n                     ^\n\u001b[0m\u001b[91mhyperslab.c:975:21: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     dst_stride[0] = (ssize_t)(2 * ny);\n                     ^\n\u001b[0m\u001b[91mhyperslab.c:976:21: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     dst_stride[1] = (ssize_t)(2 * sizeof(uint8_t) - 4 * ny);\n                     ^\n\u001b[0m\u001b[91mhyperslab.c:977:21: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n     dst_stride[2] = (ssize_t)(2 * ny - 2 * sizeof(uint8_t));\n                     ^\n\u001b[0m\u001b[91mIn file included from h5test.h:26:0,\n                 from hyperslab.c:25:\nhyperslab.c: In function 'test_array_offset_n_calc':\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nhyperslab.c:1147:32: note: in expansion of macro 'HDrandom'\n         coords[0] = (hssize_t)(HDrandom() % z);\n                                ^\n\u001b[0m\u001b[91mhyperslab.c:1147:21: warning: conversion to 'hsize_t' from 'long long int' may change the sign of the result [-Wsign-conversion]\n         coords[0] = (hssize_t)(HDrandom() % z);\n                     ^\n\u001b[0m\u001b[91mIn file included from h5test.h:26:0,\n                 from hyperslab.c:25:\n../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nhyperslab.c:1148:32: note: in expansion of macro 'HDrandom'\n         coords[1] = (hssize_t)(HDrandom() % y);\n                                ^\n\u001b[0m\u001b[91mhyperslab.c:1148:21: warning: conversion to 'hsize_t' from 'long long int' may change the sign of the result [-Wsign-conversion]\n         coords[1] = (hssize_t)(HDrandom() % y);\n                     ^\n\u001b[0m\u001b[91mIn file included from h5test.h:26:0,\n                 from hyperslab.c:25:\n../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nhyperslab.c:1149:32: note: in expansion of macro 'HDrandom'\n         coords[2] = (hssize_t)(HDrandom() % x);\n                                ^\n\u001b[0m\u001b[91mhyperslab.c:1149:21: warning: conversion to 'hsize_t' from 'long long int' may change the sign of the result [-Wsign-conversion]\n         coords[2] = (hssize_t)(HDrandom() % x);\n                     ^\n\u001b[0m  CCLD     hyperslab\n  CC       istore.o\n\u001b[91mIn file included from h5test.h:26:0,\n                 from istore.c:24:\nistore.c: In function 'test_sparse':\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nistore.c:532:24: note: in expansion of macro 'HDrandom'\n  offset[0] = (hsize_t)(HDrandom() % (TEST_SPARSE_SIZE-nx));\n                        ^\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nistore.c:533:24: note: in expansion of macro 'HDrandom'\n  offset[1] = (hsize_t)(HDrandom() % (TEST_SPARSE_SIZE-ny));\n                        ^\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nistore.c:534:24: note: in expansion of macro 'HDrandom'\n  offset[2] = (hsize_t)(HDrandom() % (TEST_SPARSE_SIZE-nz));\n                        ^\n\u001b[0m  CCLD     istore\n  CC       bittests.o\n\u001b[91mbittests.c: In function 'test_find':\nbittests.c:91:16: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n  v1[i / 8] = 1 << (i % 8);\n                ^\n\u001b[0m\u001b[91mbittests.c:124:10: warning: conversion to 'uint8_t' from 'int' may alter its value [-Wconversion]\n  v1[i/8] &= ~(1<<(i%8));\n          ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_copy':\nbittests.c:178:19: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  s_offset = HDrand() % (8*sizeof v1);\n                   ^\n\u001b[0m\u001b[91mbittests.c:179:19: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  d_offset = HDrand() % (8*sizeof v2);\n                   ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_shift':\n\u001b[0m\u001b[91mbittests.c:300:17: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  offset = HDrand() % (8*sizeof vector);\n                 ^\n\u001b[0m\u001b[91mbittests.c:304:28: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         shift_dist = HDrand() % size;\n                            ^\n\u001b[0m\u001b[91mbittests.c:304:31: warning: conversion to 'ssize_t' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         shift_dist = HDrand() % size;\n                               ^\n\u001b[0m\u001b[91mbittests.c:314:2: warning: conversion to 'long unsigned int' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n  if ((size_t)n!=offset+shift_dist) {\n  ^\n\u001b[0m\u001b[91mbittests.c:353:2: warning: conversion to 'long unsigned int' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n  if (n!=(ssize_t)(offset+size-shift_dist-1)) {\n  ^\n\u001b[0m\u001b[91mbittests.c:365:13: warning: conversion to 'ssize_t' from 'size_t' may change the sign of the result [-Wsign-conversion]\n             shift_dist = size;\n             ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_increment':\n\u001b[0m\u001b[91mbittests.c:433:17: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  offset = HDrand() % (8*sizeof vector);\n                 ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_decrement':\n\u001b[0m\u001b[91mbittests.c:520:17: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  offset = HDrand() % (8*sizeof vector);\n                 ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_negate':\n\u001b[0m\u001b[91mbittests.c:592:17: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  offset = HDrand() % (8*sizeof vector);\n                 ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_set':\n\u001b[0m\u001b[91mbittests.c:692:19: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  d_offset = HDrand() % (8*sizeof v2);\n                   ^\n\u001b[0m\u001b[91mbittests.c: In function 'test_clear':\n\u001b[0m\u001b[91mbittests.c:809:19: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n  d_offset = HDrand() % (8*sizeof v2);\n                   ^\n\u001b[0m  CCLD     bittests\n  CC       dt_arith.o\n\u001b[91mdt_arith.c: In function 'some_dummy_func':\n\u001b[0m\u001b[91mdt_arith.c:541:5: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n     HDsnprintf(s, sizeof(s), \"%g\", x);\n     ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_particular_fp_integer':\n\u001b[0m\u001b[91mdt_arith.c:841:9: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n         printf(\" %29.20e\\n\", x);\n         ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_conv_int_1':\ndt_arith.c:1786:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1786:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1786:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1786:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1786:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:1786:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1786:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1786:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1786:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1786:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:1788:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1788:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1788:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1788:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1788:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:1788:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1788:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1788:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n\u001b[0m\u001b[91mdt_arith.c:1788:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1788:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1788:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:1790:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1790:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1790:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1790:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1790:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:1790:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1790:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:1790:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1790:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1790:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:1792:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1792:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1792:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1792:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1792:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:1792:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1792:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1792:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n\u001b[0m\u001b[91mdt_arith.c:1792:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:1792:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:1792:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:1796:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n         INIT_INTEGER(unsigned int, UINT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1796:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1796:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1800:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n         INIT_INTEGER(unsigned long, ULONG_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1800:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1800:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1804:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n         INIT_INTEGER(unsigned long long, ULLONG_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:1804:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:1804:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_conv_int_2':\n\u001b[0m\u001b[91mdt_arith.c:2651:10: warning: size of 'buf' is 3200 bytes [-Wlarger-than=]\n     char buf[32*100];\n          ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'my_isnan':\n\u001b[0m\u001b[91mdt_arith.c:2705:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n  retval = (x!=x);\n             ^\n\u001b[0m\u001b[91mdt_arith.c:2709:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n  retval = (x!=x);\n             ^\n\u001b[0m\u001b[91mdt_arith.c:2714:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n  retval = (x!=x);\n             ^\n\u001b[0m\u001b[91mdt_arith.c:2729:6: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n      HDsnprintf(s, sizeof(s), \"%g\", x);\n      ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_conv_flt_1':\n\u001b[0m\u001b[91mdt_arith.c:3136:57: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                 underflow = HDfabs(*((double*)aligned)) < FLT_MIN;\n                                                         ^\n\u001b[0m\u001b[91mdt_arith.c:3137:56: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n                 overflow = HDfabs(*((double*)aligned)) > FLT_MAX;\n                                                        ^\n\u001b[0m\u001b[91mdt_arith.c:3154:24: warning: conversion to 'float' from 'long double' may alter its value [-Wconversion]\n                 hw_f = *((long double*)aligned);\n                        ^\n\u001b[0m\u001b[91mdt_arith.c:3162:24: warning: conversion to 'double' from 'long double' may alter its value [-Wconversion]\n                 hw_d = *((long double*)aligned);\n                        ^\n\u001b[0m\u001b[91mIn file included from h5test.h:26:0,\n                 from dt_arith.c:25:\n../src/H5private.h:749:40: warning: conversion to 'double' from 'long double' may alter its value [-Wconversion]\n         #define HDfrexpl(X,N)    frexpl(X,N)\n                                        ^\ndt_arith.c:3299:33: note: in expansion of macro 'HDfrexpl'\n                 check_mant[0] = HDfrexpl(x, check_expo+0);\n                                 ^\n\u001b[0m\u001b[91m../src/H5private.h:749:40: warning: conversion to 'double' from 'long double' may alter its value [-Wconversion]\n         #define HDfrexpl(X,N)    frexpl(X,N)\n                                        ^\ndt_arith.c:3300:33: note: in expansion of macro 'HDfrexpl'\n                 check_mant[1] = HDfrexpl(hw_ld, check_expo+1);\n                                 ^\n\u001b[0m\u001b[91mIn file included from h5test.h:26:0,\n                 from dt_arith.c:25:\ndt_arith.c:3307:74: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 int valid_bits=(int)((dst_ebias+dst_msize)+MIN(check_expo[0],check_expo[1]))-1;\n                                                                          ^\n../src/H5private.h:313:35: note: in definition of macro 'MIN'\n #define MIN(a,b)    (((a)<(b)) ? (a) : (b))\n                                   ^\n\u001b[0m\u001b[91mdt_arith.c:3307:88: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                 int valid_bits=(int)((dst_ebias+dst_msize)+MIN(check_expo[0],check_expo[1]))-1;\n                                                                                        ^\n../src/H5private.h:313:41: note: in definition of macro 'MIN'\n #define MIN(a,b)    (((a)<(b)) ? (a) : (b))\n                                         ^\n\u001b[0m\u001b[91mdt_arith.c:3308:17: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                 double epsilon=1.0;\n                 ^\n\u001b[0m\u001b[91mdt_arith.c:3323:25: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                         HDfabs(check_mant[0]-check_mant[1])<FP_EPSILON)\n                         ^\n\u001b[0m\u001b[91mdt_arith.c:3396:13: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n             printf(\" %29.20e\\n\", x);\n             ^\n\u001b[0m\u001b[91mdt_arith.c:3416:13: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n             printf(\" %29.20e\\n\", x);\n             ^\n\u001b[0m\u001b[91mdt_arith.c:3434:13: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n             printf(\" %29.20e\\n\", hw_f);\n             ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_conv_int_fp':\n\u001b[0m\u001b[91mdt_arith.c:3779:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3779:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:3779:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3779:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3779:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:3779:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3779:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:3779:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3779:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'signed char' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3779:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(signed char, SCHAR_MAX, SCHAR_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:3781:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3781:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3781:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3781:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3781:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:3781:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3781:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3781:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n\u001b[0m\u001b[91mdt_arith.c:3781:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3781:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3781:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned char, UCHAR_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:3783:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3783:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:3783:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3783:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3783:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:3783:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3783:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:3783:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3783:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:168:20: warning: conversion to 'short int' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3783:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(short, SHRT_MAX, SHRT_MIN, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:3785:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3785:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3785:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3785:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:150:20: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3785:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:151:35: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value2 = (value1 - 1) | value1;                                                     \\\n                                   ^\ndt_arith.c:3785:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\n\u001b[0m\u001b[91mdt_arith.c:153:20: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value1 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3785:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3785:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\ndt_arith.c:3785:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:3785:9: warning: comparison is always true due to limited range of data type [-Wtype-limits]\ndt_arith.c:168:20: warning: conversion to 'short unsigned int' from 'int' may alter its value [-Wconversion]\n             value2 <<= 1;                                                                       \\\n                    ^\ndt_arith.c:3785:9: note: in expansion of macro 'INIT_INTEGER'\n         INIT_INTEGER(unsigned short, USHRT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3789:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n         INIT_INTEGER(unsigned int, UINT_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3789:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\ndt_arith.c:3789:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\ndt_arith.c:3793:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n         INIT_INTEGER(unsigned long, ULONG_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3793:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\ndt_arith.c:3793:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\ndt_arith.c:3797:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n         INIT_INTEGER(unsigned long long, ULLONG_MAX, 0, src_size, dst_size, src_nbits, buf, saved, nelmts);\n         ^\ndt_arith.c:3797:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\ndt_arith.c:3797:9: warning: comparison of unsigned expression >= 0 is always true [-Wtype-limits]\n\u001b[0m\u001b[91mdt_arith.c:4342:28: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n             for(q=dst_nbits/8; q<dst_size; q++) {\n                            ^\n\u001b[0m\u001b[91mdt_arith.c:4602:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 printf(\" %29f\\n\", *((float*)aligned));\n                 ^\n\u001b[0m\u001b[91mdt_arith.c:4667:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 printf(\" %29f\\n\", *((float*)aligned));\n                 ^\n\u001b[0m\u001b[91mdt_arith.c:4715:17: warning: format '%ld' expects argument of type 'long int', but argument 2 has type 'long long int' [-Wformat=]\n                 printf(\" %29\"H5_PRINTF_LL_WIDTH\"d\\n\", *((long long*)hw));\n                 ^\n\u001b[0m\u001b[91mdt_arith.c:4718:17: warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'long long unsigned int' [-Wformat=]\n                 printf(\" %29\"H5_PRINTF_LL_WIDTH\"u\\n\", *((unsigned long long*)hw));\n                 ^\n\u001b[0m\u001b[91mdt_arith.c:4721:17: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                 printf(\" %29f\\n\", *((float*)hw));\n                 ^\n\u001b[0m\u001b[91mdt_arith.c:4552:2: warning: label 'printing' defined but not used [-Wunused-label]\n  printing:\n  ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'main':\n\u001b[0m\u001b[91mdt_arith.c:5499:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_hard_query();\n                               ^\n\u001b[0m\u001b[91mdt_arith.c:5507:32: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_derived_flt();\n                                ^\n\u001b[0m\u001b[91mdt_arith.c:5512:36: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_derived_integer();\n                                    ^\n\u001b[0m\u001b[91mdt_arith.c:5520:28: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_fp_tests(\"noop\");\n                            ^\n\u001b[0m\u001b[91mdt_arith.c:5523:28: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_fp_tests(\"hard\");\n                            ^\n\u001b[0m\u001b[91mdt_arith.c:5526:33: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_integer_tests(\"hard\");\n                                 ^\n\u001b[0m\u001b[91mdt_arith.c:5529:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_int_fp_conv(\"hard\");\n                               ^\n\u001b[0m\u001b[91mdt_arith.c:5532:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_fp_int_conv(\"hard\");\n                               ^\n\u001b[0m\u001b[91mdt_arith.c:5535:42: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_particular_fp_integer();\n                                          ^\n\u001b[0m\u001b[91mdt_arith.c:5545:28: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_fp_tests(\"soft\");\n                            ^\n\u001b[0m\u001b[91mdt_arith.c:5548:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_conv_int_2();\n                               ^\n\u001b[0m\u001b[91mdt_arith.c:5549:33: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_integer_tests(\"soft\");\n                                 ^\n\u001b[0m\u001b[91mdt_arith.c:5556:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_fp_int_conv(\"soft\");\n                               ^\n\u001b[0m\u001b[91mdt_arith.c:5559:31: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += run_int_fp_conv(\"soft\");\n                               ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_conv_flt_1':\n\u001b[0m\u001b[91mdt_arith.c:3284:20: warning: 'overflow' may be used uninitialized in this function [-Wmaybe-uninitialized]\n                 if (overflow && my_isinf(dendian, buf+j*sizeof(double),\n                    ^\n\u001b[0m\u001b[91mdt_arith.c: In function 'test_conv_int_fp':\n\u001b[0m\u001b[91mdt_arith.c:4363:13: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n             for (k = 0; k < src_size; k += 2) {\n             ^\n\u001b[0m  CCLD     dt_arith\n  CC       dtypes.o\n\u001b[91mdtypes.c: In function 'test_compound_9':\n\u001b[0m\u001b[91mdtypes.c:1644:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     cmpd_struct wdata = {11, \"variable-length string\", 22};\n     ^\n\u001b[0m\u001b[91mdtypes.c: In function 'test_compound_10':\n\u001b[0m\u001b[91mdtypes.c:1863:25: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         wdata[i].str[9] += (char)i;\n                         ^\n\u001b[0m\u001b[91mdtypes.c:1868:43: warning: conversion to 'char' from 'int' may alter its value [-Wconversion]\n         ((char*)(wdata[i].text.p))[len-2] += (char)i;\n                                           ^\n\u001b[0m\u001b[91mdtypes.c: In function 'test_compound_11':\n\u001b[0m\u001b[91mdtypes.c:2107:37: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(((big_t *)buf_orig)[u].d1!=((little_t *)buf)[u].d1) {\n                                     ^\n\u001b[0m\u001b[91mdtypes.c:2147:37: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(((big_t *)buf_orig)[u].d1!=((little_t *)buf)[u].d1) {\n                                     ^\n\u001b[0m\u001b[91mdtypes.c:2181:37: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(((big_t *)buf_orig)[u].d1!=((little_t *)buf)[u].d1) {\n                                     ^\n\u001b[0m\u001b[91mdtypes.c: In function 'test_compound_13':\n\u001b[0m\u001b[91mdtypes.c:2398:19: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(data_out.y != data_in.y) TEST_ERROR\n                   ^\n\u001b[0m\u001b[91mdtypes.c: In function 'test_compound_14':\n\u001b[0m\u001b[91mdtypes.c:2452:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     cmpd_struct_1 wdata1 = {'A', 'B', \"variable-length string\"};\n     ^\n\u001b[0m\u001b[91mdtypes.c:2455:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     cmpd_struct_2 wdata2 = {'C', 'D', \"another vlen!\", 1, 2, -1, 9001};\n     ^\n\u001b[0m\u001b[91mdtypes.c: In function 'test_int_float_except':\n\u001b[0m\u001b[91mdtypes.c:5963:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(*floatp != buf_float[u]) TEST_ERROR\n                    ^\n\u001b[0m\u001b[91mdtypes.c:5984:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if(*floatp != buf2_float[u]) TEST_ERROR\n                    ^\n\u001b[0m\u001b[91mdtypes.c: In function 'create_del_obj_named_test_file':\n\u001b[0m\u001b[91mdtypes.c:6544:12: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n     herr_t status;      /* Generic return value */\n            ^\n\u001b[0m\u001b[91mdtypes.c: In function 'test_utf_ascii_conv':\n\u001b[0m\u001b[91mdtypes.c:7084:55: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         status = H5Tconvert(utf8_vtid, ascii_vtid, 1, (void *)utf8_w, NULL, H5P_DEFAULT);\n                                                       ^\n\u001b[0m\u001b[91mdtypes.c:7117:55: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n         status = H5Tconvert(ascii_vtid, utf8_vtid, 1, (void *)ascii_w, NULL, H5P_DEFAULT);\n                                                       ^\n\u001b[0m\u001b[91mIn file included from dtypes.c:26:0:\ndtypes.c: At top level:\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     dtypes\n  CC       dsets.o\n\u001b[91mdsets.c:209:5: warning: size of 'points' is 80000 bytes [-Wlarger-than=]\n int points[DSET_DIM1][DSET_DIM2], check[DSET_DIM1][DSET_DIM2];\n     ^\ndsets.c:209:35: warning: size of 'check' is 80000 bytes [-Wlarger-than=]\n int points[DSET_DIM1][DSET_DIM2], check[DSET_DIM1][DSET_DIM2];\n                                   ^\ndsets.c:210:8: warning: size of 'points_dbl' is 160000 bytes [-Wlarger-than=]\n double points_dbl[DSET_DIM1][DSET_DIM2], check_dbl[DSET_DIM1][DSET_DIM2];\n        ^\ndsets.c:210:42: warning: size of 'check_dbl' is 160000 bytes [-Wlarger-than=]\n double points_dbl[DSET_DIM1][DSET_DIM2], check_dbl[DSET_DIM1][DSET_DIM2];\n                                          ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_simple_io':\n\u001b[0m\u001b[91mdsets.c:405:25: warning: size of 'rdata' is 80000 bytes [-Wlarger-than=]\n     int                 rdata[DSET_DIM1][DSET_DIM2];\n                         ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_userblock_offset':\n\u001b[0m\u001b[91mdsets.c:524:25: warning: size of 'rdata' is 80000 bytes [-Wlarger-than=]\n     int                 rdata[DSET_DIM1][DSET_DIM2];\n                         ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_conv_buffer':\n\u001b[0m\u001b[91mdsets.c:1032:30: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n  cf->b[j] = (float)(100.0f*(j+1) + 0.01f*j);\n                              ^\n\u001b[0m\u001b[91mdsets.c:1032:2: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n  cf->b[j] = (float)(100.0f*(j+1) + 0.01f*j);\n  ^\n\u001b[0m\u001b[91mdsets.c:1035:22: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n  cf->c[j] = 100.0f*(j+1) + 0.02f*j;\n                      ^\n\u001b[0m\u001b[91mdsets.c:1035:2: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n  cf->c[j] = 100.0f*(j+1) + 0.02f*j;\n  ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_int':\n\u001b[0m\u001b[91mdsets.c:2787:28: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n                            (long long)HDpow(2.0f, (double)(precision - 1))) << offset);\n                            ^\n\u001b[0m\u001b[91mdsets.c:2835:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             if((new_data[i][j] & mask) != (orig_data[i][j] & mask)) {\n                            ^\n\u001b[0m\u001b[91mdsets.c:2835:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             if((new_data[i][j] & mask) != (orig_data[i][j] & mask)) {\n                                                        ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_float':\n\u001b[0m\u001b[91mdsets.c:2962:33: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(!(orig_data[i][j]==orig_data[i][j])) continue;  /* skip if value is NaN */\n                                 ^\n\u001b[0m\u001b[91mdsets.c:2963:31: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(new_data[i][j] != orig_data[i][j]) {\n                               ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_double':\n\u001b[0m\u001b[91mdsets.c:3019:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     double              orig_data[2][5] = {{1.6081706885101836e+60, -255.32099170994480,\n     ^\ndsets.c:3019:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3020:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     1.2677579992621376e-61, 64568.289448797700, -1.0619721778839084e-75}, {2.1499497833454840e+56,\n     ^\ndsets.c:3020:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3020:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3020:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3021:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     6.6562295504670740e-3, -1.5747263393432150, 1.0711093225222612, -9.8971679387636870e-1}};\n     ^\ndsets.c:3021:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3021:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3021:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3093:33: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(!(orig_data[i][j]==orig_data[i][j])) continue;  /* skip if value is NaN */\n                                 ^\n\u001b[0m\u001b[91mdsets.c:3094:31: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(new_data[i][j] != orig_data[i][j]) {\n                               ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_array':\n\u001b[0m\u001b[91mdsets.c:3195:38: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                      (long long)HDpow(2.0, (double)precision)) << offset);\n                                      ^\ndsets.c:3195:38: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_compound':\n\u001b[0m\u001b[91mdsets.c:3303:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     const float         float_val[2][5] = {{(float)188384.00, (float)19.103516, (float)-1.0831790e9, (float)-84.242188,\n     ^\ndsets.c:3303:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3303:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3303:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3304:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     (float)5.2045898}, {(float)-49140.000, (float)2350.2500, (float)-3.2110596e-1, (float)6.4998865e-5, (float)-0.0000000}};\n     ^\ndsets.c:3304:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3304:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3304:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3304:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3304:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3371:30: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                              (long long)HDpow(2.0, (double)(precision[0]-1))) << offset[0]);\n                              ^\ndsets.c:3371:30: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3373:30: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                              (long long)HDpow(2.0, (double)(precision[1]-1))) << offset[1]);\n                              ^\ndsets.c:3373:30: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3375:30: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                              (long long)HDpow(2.0, (double)(precision[2]-1))) << offset[2]);\n                              ^\ndsets.c:3375:30: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3428:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             if((new_data[i][j].i & i_mask) != (orig_data[i][j].i & i_mask) ||\n                               ^\n\u001b[0m\u001b[91mdsets.c:3428:63: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             if((new_data[i][j].i & i_mask) != (orig_data[i][j].i & i_mask) ||\n                                                               ^\n\u001b[0m\u001b[91mdsets.c:3429:17: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n                 (new_data[i][j].c & c_mask) != (orig_data[i][j].c & c_mask) ||\n                 ^\ndsets.c:3429:17: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3430:17: warning: conversion to 'unsigned int' from 'short int' may change the sign of the result [-Wsign-conversion]\n                 (new_data[i][j].s & s_mask) != (orig_data[i][j].s & s_mask) ||\n                 ^\ndsets.c:3430:17: warning: conversion to 'unsigned int' from 'short int' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3431:35: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                 (orig_data[i][j].f==orig_data[i][j].f && new_data[i][j].f != orig_data[i][j].f))\n                                   ^\n\u001b[0m\u001b[91mdsets.c:3431:75: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                 (orig_data[i][j].f==orig_data[i][j].f && new_data[i][j].f != orig_data[i][j].f))\n                                                                           ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_compound_2':\n\u001b[0m\u001b[91mdsets.c:3514:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     const float         float_val[2][5] = {{(float)188384.00, (float)19.103516, (float)-1.0831790e9, (float)-84.242188,\n     ^\ndsets.c:3514:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3514:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3514:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3515:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     (float)5.2045898}, {(float)-49140.000, (float)2350.2500, (float)-3.2110596e-1, (float)6.4998865e-5, (float)-0.0000000}};\n     ^\ndsets.c:3515:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3515:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3515:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3515:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3515:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3614:32: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                (long long)HDpow(2.0, (double)(precision[0]-1))) << offset[0]);\n                                ^\ndsets.c:3614:32: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3616:32: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                (long long)HDpow(2.0, (double)(precision[1]-1))) << offset[1]);\n                                ^\ndsets.c:3616:32: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3618:32: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                (long long)HDpow(2.0, (double)(precision[2]-1))) << offset[2]);\n                                ^\ndsets.c:3618:32: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3622:30: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                              (long long)HDpow(2.0, (double)precision[3])) << offset[3]);\n                              ^\ndsets.c:3622:30: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3627:40: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                        (long long)HDpow(2.0, (double)(precision[4]-1))) << offset[4]);\n                                        ^\ndsets.c:3627:40: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3632:42: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                          (long long)HDpow(2.0, (double)(precision[0]-1))) << offset[0]);\n                                          ^\ndsets.c:3632:42: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3634:42: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                          (long long)HDpow(2.0, (double)(precision[1]-1))) << offset[1]);\n                                          ^\ndsets.c:3634:42: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3636:42: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                                          (long long)HDpow(2.0, (double)(precision[2]-1))) << offset[2]);\n                                          ^\ndsets.c:3636:42: warning: cast from function call of type 'double' to non-matching type 'long long int' [-Wbad-function-cast]\n\u001b[0m\u001b[91mdsets.c:3701:14: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n              if((new_data[i][j].b[m][n]&b_mask)!=(orig_data[i][j].b[m][n]&b_mask)) {\n              ^\ndsets.c:3701:14: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3708:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n              if((new_data[i][j].d[m][n].i & i_mask)!=(orig_data[i][j].d[m][n].i & i_mask)||\n                                        ^\n\u001b[0m\u001b[91mdsets.c:3708:78: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n              if((new_data[i][j].d[m][n].i & i_mask)!=(orig_data[i][j].d[m][n].i & i_mask)||\n                                                                              ^\n\u001b[0m\u001b[91mdsets.c:3709:17: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n                 (new_data[i][j].d[m][n].c & c_mask)!=(orig_data[i][j].d[m][n].c & c_mask)||\n                 ^\ndsets.c:3709:17: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3710:17: warning: conversion to 'unsigned int' from 'short int' may change the sign of the result [-Wsign-conversion]\n                 (new_data[i][j].d[m][n].s & s_mask)!=(orig_data[i][j].d[m][n].s & s_mask)||\n                 ^\ndsets.c:3710:17: warning: conversion to 'unsigned int' from 'short int' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3711:42: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                 (new_data[i][j].d[m][n].f==new_data[i][j].d[m][n].f &&\n                                          ^\n\u001b[0m\u001b[91mdsets.c:3712:43: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                  new_data[i][j].d[m][n].f != new_data[i][j].d[m][n].f)) {\n                                           ^\n\u001b[0m\u001b[91mdsets.c:3718:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         if((new_data[i][j].a.i & i_mask)!=(orig_data[i][j].a.i & i_mask)||\n                             ^\n\u001b[0m\u001b[91mdsets.c:3718:61: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         if((new_data[i][j].a.i & i_mask)!=(orig_data[i][j].a.i & i_mask)||\n                                                             ^\n\u001b[0m\u001b[91mdsets.c:3719:12: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n            (new_data[i][j].a.c & c_mask)!=(orig_data[i][j].a.c & c_mask)||\n            ^\ndsets.c:3719:12: warning: conversion to 'unsigned int' from 'char' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3720:12: warning: conversion to 'unsigned int' from 'short int' may change the sign of the result [-Wsign-conversion]\n            (new_data[i][j].a.s & s_mask)!=(orig_data[i][j].a.s & s_mask)||\n            ^\ndsets.c:3720:12: warning: conversion to 'unsigned int' from 'short int' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mdsets.c:3721:31: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n            (new_data[i][j].a.f==new_data[i][j].a.f &&\n                               ^\n\u001b[0m\u001b[91mdsets.c:3722:32: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             new_data[i][j].a.f != new_data[i][j].a.f)||\n                                ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_compound_3':\n\u001b[0m\u001b[91mdsets.c:3850:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         orig_data[i].i = HDrandom() % (long)HDpow(2.0, 17.0 - 1.0);\n         ^\ndsets.c:3850:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\ndsets.c:3850:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c:3850:39: warning: cast from function call of type 'double' to non-matching type 'long int' [-Wbad-function-cast]\n         orig_data[i].i = HDrandom() % (long)HDpow(2.0, 17.0 - 1.0);\n                                       ^\n\u001b[0m\u001b[91mdsets.c:3850:37: warning: conversion to 'int' from 'long int' may alter its value [-Wconversion]\n         orig_data[i].i = HDrandom() % (long)HDpow(2.0, 17.0 - 1.0);\n                                     ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_int_size':\n\u001b[0m\u001b[91mdsets.c:3982:13: warning: size of 'orig_data' is 80000 bytes [-Wlarger-than=]\n     int     orig_data[DSET_DIM1][DSET_DIM2];\n             ^\n\u001b[0m\u001b[91mdsets.c:4038:39: warning: cast from function call of type 'double' to non-matching type 'int' [-Wbad-function-cast]\n            orig_data[i][j] = rand() % (int)pow((double)2, (double)(precision-1)) << offset;\n                                       ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_flt_size':\n\u001b[0m\u001b[91mdsets.c:4156:13: warning: size of 'orig_data' is 80000 bytes [-Wlarger-than=]\n     float   orig_data[DSET_DIM1][DSET_DIM2];\n             ^\n\u001b[0m\u001b[91mdsets.c:4245:49: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n            orig_data[i][j] = (rand() % 1234567) / 2;\n                                                 ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_scaleoffset_float':\n\u001b[0m\u001b[91mdsets.c:4671:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         orig_data[i][j] = (float)((HDrandom() % 100000) / (float)1000.0);\n         ^\n\u001b[0m\u001b[91mdsets.c:4671:47: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n         orig_data[i][j] = (float)((HDrandom() % 100000) / (float)1000.0);\n                                               ^\n\u001b[0m\u001b[91mdsets.c:4714:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             if(HDfabs(new_data[i][j]-orig_data[i][j]) > HDpow(10.0, -3.0)) {\n             ^\ndsets.c:4714:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c: In function 'test_scaleoffset_float_2':\n\u001b[0m\u001b[91mdsets.c:4791:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     fillval = 10000.0;\n     ^\n\u001b[0m\u001b[91mdsets.c:4819:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         orig_data[0][j] = (float)((HDrandom() % 100000) / (float)1000.0);\n         ^\n\u001b[0m\u001b[91mdsets.c:4819:47: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n         orig_data[0][j] = (float)((HDrandom() % 100000) / (float)1000.0);\n                                               ^\n\u001b[0m\u001b[91mdsets.c:4862:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         if(HDfabs(new_data[0][j]-orig_data[0][j]) > HDpow(10.0, -3.0)) {\n         ^\ndsets.c:4862:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c: In function 'test_scaleoffset_double':\n\u001b[0m\u001b[91mdsets.c:4947:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         orig_data[i][j] = (HDrandom() % 10000000) / 10000000.0;\n         ^\n\u001b[0m\u001b[91mdsets.c:4990:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             if(HDfabs(new_data[i][j]-orig_data[i][j]) > HDpow(10.0, -7.0)) {\n             ^\ndsets.c:4990:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c: In function 'test_scaleoffset_double_2':\n\u001b[0m\u001b[91mdsets.c:5067:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     fillval = 10000.0;\n     ^\n\u001b[0m\u001b[91mdsets.c:5095:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         orig_data[0][j] = (HDrandom() % 10000000) / 10000000.0;\n         ^\n\u001b[0m\u001b[91mdsets.c:5138:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         if(HDfabs(new_data[0][j]-orig_data[0][j]) > HDpow(10.0, -7.0)) {\n         ^\ndsets.c:5138:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mdsets.c: In function 'test_set_local':\n\u001b[0m\u001b[91mdsets.c:5908:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     n=1.0;\n     ^\n\u001b[0m\u001b[91mdsets.c:5912:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      points_dbl[i][j] = (double)1.5*n++;\n      ^\n\u001b[0m\u001b[91mdsets.c:6106:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             if(!DBL_REL_EQUAL(points_dbl[i][j],check_dbl[i][j],0.00001)) {\n             ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_deprec':\n\u001b[0m\u001b[91mdsets.c:7090:12: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n     herr_t status;\n            ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_chunk_cache':\n\u001b[0m\u001b[91mdsets.c:7432:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     w0_2 = w0_1 / 2.;\n     ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_big_chunks_bypass_cache':\n\u001b[0m\u001b[91mdsets.c:7613:44: warning: size of 'rdata1' is 4000 bytes [-Wlarger-than=]\n     static int  wdata[BYPASS_CHUNK_DIM/2], rdata1[BYPASS_DIM],\n                                            ^\n\u001b[0m\u001b[91mdsets.c:7627:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(H5Pset_cache(fapl_local, 0, rdcc_nelmts, rdcc_nbytes, (double)0.0) < 0) FAIL_STACK_ERROR\n     ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_chunk_expand':\n\u001b[0m\u001b[91mdsets.c:7857:93: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n         for(alloc_time = H5D_ALLOC_TIME_EARLY; alloc_time <= H5D_ALLOC_TIME_INCR; alloc_time++) {\n                                                                                             ^\n\u001b[0m\u001b[91mIn file included from dsets.c:27:0:\ndsets.c: At top level:\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_simple_io':\ndsets.c:396:1: warning: stack usage is 81136 bytes [-Wstack-usage=]\n test_simple_io(const char *env_h5_drvr, hid_t fapl)\n ^\n\u001b[0m\u001b[91mdsets.c:498:1: warning: the frame size of 81052 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_int_size':\n\u001b[0m\u001b[91mdsets.c:3976:1: warning: stack usage is 80112 bytes [-Wstack-usage=]\n test_nbit_int_size(hid_t file)\n ^\n\u001b[0m\u001b[91mdsets.c:4131:1: warning: the frame size of 80040 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_nbit_flt_size':\n\u001b[0m\u001b[91mdsets.c:4150:1: warning: stack usage is 80112 bytes [-Wstack-usage=]\n test_nbit_flt_size(hid_t file)\n ^\n\u001b[0m\u001b[91mdsets.c:4337:1: warning: the frame size of 80032 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mdsets.c: In function 'test_userblock_offset':\n\u001b[0m\u001b[91mdsets.c:516:1: warning: stack usage is 81088 bytes [-Wstack-usage=]\n test_userblock_offset(const char *env_h5_drvr, hid_t fapl)\n ^\n\u001b[0m\u001b[91mdsets.c:588:1: warning: the frame size of 81040 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mdsets.c: In function 'filter_bogus2':\n\u001b[0m\u001b[91mdsets.c:1362:18: warning: cannot optimize loop, the loop counter may overflow [-Wunsafe-loop-optimizations]\n             while(buf_left>0) {\n                  ^\n\u001b[0m  CCLD     dsets\n  CC       cmpd_dset.o\n\u001b[91mcmpd_dset.c: In function 'test_compound':\ncmpd_dset.c:154:18: warning: size of 's1' is 6400000 bytes [-Wlarger-than=]\n     static s1_t  s1[NX*NY];\n                  ^\n\u001b[0m\u001b[91mcmpd_dset.c:158:18: warning: size of 's2' is 6400000 bytes [-Wlarger-than=]\n     static s2_t  s2[NX*NY];\n                  ^\n\u001b[0m\u001b[91mcmpd_dset.c:162:18: warning: size of 's3' is 6400000 bytes [-Wlarger-than=]\n     static s3_t  s3[NX*NY];\n                  ^\n\u001b[0m\u001b[91mcmpd_dset.c:166:18: warning: size of 's4' is 1600000 bytes [-Wlarger-than=]\n     static s4_t  s4[NX*NY];\n                  ^\n\u001b[0m\u001b[91mcmpd_dset.c:170:18: warning: size of 's5' is 9600000 bytes [-Wlarger-than=]\n     static s5_t  s5[NX*NY];\n                  ^\n\u001b[0m\u001b[91mcmpd_dset.c:173:18: warning: size of 's6' is 9600000 bytes [-Wlarger-than=]\n     static s6_t  s6[NX*NY];\n                  ^\n\u001b[0m\u001b[91mcmpd_dset.c: In function 'initialize_stype1':\n\u001b[0m\u001b[91mcmpd_dset.c:885:26: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n         s_ptr->f    = i*2/3;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:886:28: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n         s_ptr->g    = i*2/3+1;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:888:25: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n      s_ptr->h[j] = i*j/5+j;\n                         ^\n\u001b[0m\u001b[91mcmpd_dset.c:889:28: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n         s_ptr->i    = i*2/3+2;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:890:28: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n         s_ptr->j    = i*2/3+3;\n                            ^\ncmpd_dset.c: In function 'initialize_stype2':\n\u001b[0m\u001b[91mcmpd_dset.c:921:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->a    = i*8+0;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:922:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->b    = i*8+1;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:924:23: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n      s_ptr->c[j] = i*8+j;\n                       ^\n\u001b[0m\u001b[91mcmpd_dset.c:925:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->d    = i*8+6;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:926:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->e    = i*8+7;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:928:26: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->f    = i*2/3;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:929:28: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->g    = i*2/3+1;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:931:25: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n      s_ptr->h[j] = i*j/5+j;\n                         ^\n\u001b[0m\u001b[91mcmpd_dset.c:932:28: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->i    = i*2/3+2;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:933:28: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->j    = i*2/3+3;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:935:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->k    = i/7+1;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:936:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->l    = i/7+2;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:937:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->m    = i/7+3;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:938:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->n    = i/7+4;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:940:26: warning: conversion to 'long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->o    = i*3+0;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:941:26: warning: conversion to 'long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->p    = i*3+1;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:942:26: warning: conversion to 'long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->q    = i*3+2;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c: In function 'initialize_stype4':\n\u001b[0m\u001b[91mcmpd_dset.c:999:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->a    = i*8+0;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:1000:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->b    = i*8+1;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:1002:23: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n      s_ptr->c[j] = i*8+j;\n                       ^\n\u001b[0m\u001b[91mcmpd_dset.c:1003:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->d    = i*8+6;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:1004:19: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n  s_ptr->e    = i*8+7;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:1006:26: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->f    = i*2/3;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1007:28: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->g    = i*2/3+1;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:1009:25: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n      s_ptr->h[j] = i*j/5+j;\n                         ^\n\u001b[0m\u001b[91mcmpd_dset.c:1010:28: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->i    = i*2/3+2;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:1011:28: warning: conversion to 'float' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->j    = i*2/3+3;\n                            ^\n\u001b[0m\u001b[91mcmpd_dset.c:1013:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->k    = i/7+1;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1014:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->l    = i/7+2;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1015:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->m    = i/7+3;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1016:26: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n         s_ptr->n    = i/7+4;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1018:26: warning: conversion to 'long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->o    = i*3+0;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1019:26: warning: conversion to 'long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->p    = i*3+1;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1020:26: warning: conversion to 'long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->q    = i*3+2;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1022:26: warning: conversion to 'long long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->r    = i*5+1;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1023:26: warning: conversion to 'long long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->s    = i*5+2;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c:1024:26: warning: conversion to 'long long int' from 'size_t' may change the sign of the result [-Wsign-conversion]\n         s_ptr->t    = i*5+3;\n                          ^\n\u001b[0m\u001b[91mcmpd_dset.c: In function 'compare_data':\n\u001b[0m\u001b[91mcmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                    s_ptr->h[15], s_ptr->i,s_ptr->j,s_ptr->k,s_ptr->l,s_ptr->m,s_ptr->n);\n                    ^\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mcmpd_dset.c:1307:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mcmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                    d_ptr->m,d_ptr->n);\n                    ^\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mcmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\ncmpd_dset.c:1315:20: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mcmpd_dset.c: In function 'test_pack_ooo':\n\u001b[0m\u001b[91mcmpd_dset.c:1791:19: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         j = HDrand() % num_free;\n                   ^\n\u001b[0m\u001b[91mcmpd_dset.c:1803:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     sub_cmpd_order = HDrand() % PACK_NMEMBS;\n                               ^\n\u001b[0m\u001b[91mcmpd_dset.c: In function 'main':\n\u001b[0m\u001b[91mcmpd_dset.c:2195:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_compound(fname, fapl_id);\n                             ^\n\u001b[0m\u001b[91mcmpd_dset.c:2199:36: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_hdf5_src_subset(fname, fapl_id);\n                                    ^\n\u001b[0m\u001b[91mcmpd_dset.c:2203:36: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_hdf5_dst_subset(fname, fapl_id);\n                                    ^\n\u001b[0m\u001b[91mcmpd_dset.c:2206:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_pack_ooo();\n                             ^\n\u001b[0m\u001b[91mcmpd_dset.c:2209:30: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_ooo_order(fname);\n                              ^\n\u001b[0m\u001b[91mcmpd_dset.c: In function 'test_hdf5_src_subset':\n\u001b[0m\u001b[91mcmpd_dset.c:888:23: warning: assuming signed overflow does not occur when simplifying division [-Wstrict-overflow]\n      s_ptr->h[j] = i*j/5+j;\n                       ^\ncmpd_dset.c:888:23: warning: assuming signed overflow does not occur when simplifying division [-Wstrict-overflow]\ncmpd_dset.c:888:23: warning: assuming signed overflow does not occur when simplifying division [-Wstrict-overflow]\n\u001b[0m  CCLD     cmpd_dset\n  CC       filter_fail.o\n\u001b[91mIn file included from filter_fail.c:25:0:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     filter_fail\n  CC       extend.o\n\u001b[91mextend.c:34:14: warning: size of 'buf1' is 40000 bytes [-Wlarger-than=]\n static int   buf1[NY][NX], buf2[NX / 2][NY / 2];\n              ^\n\u001b[0m\u001b[91mextend.c:34:28: warning: size of 'buf2' is 10000 bytes [-Wlarger-than=]\n static int   buf1[NY][NX], buf2[NX / 2][NY / 2];\n                            ^\n\u001b[0m  CCLD     extend\n  CC       external.o\n\u001b[91mexternal.c: In function 'test_2':\n\u001b[0m\u001b[91mexternal.c:612:14: warning: variable 'n' set but not used [-Wunused-but-set-variable]\n     hssize_t n;   /*bytes of I/O   */\n              ^\n\u001b[0m\u001b[91mexternal.c: In function 'test_3':\n\u001b[0m\u001b[91mexternal.c:780:9: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         whole[i] = i;\n         ^\n\u001b[0m\u001b[91mexternal.c:801:24: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         whole[i] = 100 + i;\n                        ^\n\u001b[0m\u001b[91mIn file included from external.c:23:0:\nexternal.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     external\n  CC       efc.o\n\u001b[91mefc.c:36:13: warning: size of 'filename' is 6144 bytes [-Wlarger-than=]\n static char filename[6][1024];\n             ^\n\u001b[0m  CCLD     efc\n  CC       objcopy.o\n\u001b[91mobjcopy.c: In function 'compare_data':\n\u001b[0m\u001b[91mobjcopy.c:1067:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             ref_buf1 = (const hdset_reg_ref_t *)buf1;\n                        ^\n\u001b[0m\u001b[91mobjcopy.c:1068:24: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             ref_buf2 = (const hdset_reg_ref_t *)buf2;\n                        ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_compound':\n\u001b[0m\u001b[91mobjcopy.c:2318:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         buf[i].d = 1. / (i + 1);\n         ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_chunked':\n\u001b[0m\u001b[91mobjcopy.c:2450:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         buf1d[i] = (float)(i / 2.0);\n         ^\n\u001b[0m\u001b[91mobjcopy.c:2452:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             buf2d[i][j] = (float)(i + (j / 100.0));\n             ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_chunked_sparse':\n\u001b[0m\u001b[91mobjcopy.c:2793:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         buf1d[i] = (float)(i / 10.0);\n         ^\n\u001b[0m\u001b[91mobjcopy.c:2795:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             buf2d[i][j] = (float)(i + (j / 100.0));\n             ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_compressed':\n\u001b[0m\u001b[91mobjcopy.c:2988:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             buf[i][j] = (float)(100.0);         /* Something easy to compress */\n             ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_compact':\n\u001b[0m\u001b[91mobjcopy.c:3117:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             buf[i][j] = (float)(i+j/100.0);\n             ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_contig_cmpd_vl':\n\u001b[0m\u001b[91mobjcopy.c:7597:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         buf[i].a = i * (i - 1);\n                      ^\n\u001b[0m\u001b[91mobjcopy.c:7602:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         buf[i].c = 1. / (i + 1.);\n         ^\nobjcopy.c:7602:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_chunked_cmpd_vl':\n\u001b[0m\u001b[91mobjcopy.c:7736:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         buf[i].a = i * (i - 1);\n                      ^\n\u001b[0m\u001b[91mobjcopy.c:7741:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         buf[i].c = 1. / (i + 1.);\n         ^\nobjcopy.c:7741:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mobjcopy.c: In function 'test_copy_dataset_compact_cmpd_vl':\n\u001b[0m\u001b[91mobjcopy.c:7881:22: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n         buf[i].a = i * (i - 1);\n                      ^\n\u001b[0m\u001b[91mobjcopy.c:7886:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         buf[i].c = 1. / (i + 1.);\n         ^\nobjcopy.c:7886:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mIn file included from objcopy.c:25:0:\nobjcopy.c: At top level:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\n\u001b[0m\u001b[91mH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m\u001b[91mobjcopy.c: In function 'addr_lookup.isra.0':\nobjcopy.c:201:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n addr_lookup(H5O_info_t *oi)\n ^\n\u001b[0m  CCLD     objcopy\n  CC       links.o\n\u001b[91mlinks.c: In function 'external_link_dangling':\n\u001b[0m\u001b[91mlinks.c:2712:36: warning: conversion to 'hid_t' from 'ssize_t' may alter its value [-Wconversion]\n         status = H5Lget_name_by_idx(rid, \"no_file\", H5_INDEX_NAME, H5_ITER_INC, 0, NULL, 0, H5P_DEFAULT);\n                                    ^\n\u001b[0m\u001b[91mlinks.c: In function 'external_set_elink_fapl1':\n\u001b[0m\u001b[91mlinks.c:3515:17: warning: size of 'sv' is 3500 bytes [-Wlarger-than=]\n     char        sv[H5FD_MEM_NTYPES][500];\n                 ^\n\u001b[0m\u001b[91mlinks.c: In function 'external_set_elink_fapl2':\n\u001b[0m\u001b[91mlinks.c:3714:10: warning: size of 'points' is 6400 bytes [-Wlarger-than=]\n     int  points[NUM40][NUM40];\n          ^\n\u001b[0m\u001b[91mlinks.c: In function 'link_filters':\n\u001b[0m\u001b[91mlinks.c:9822:17: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n                 > ((double)filesize_unfiltered * FILTER_FILESIZE_MAX_FRACTION))\n                 ^\n\u001b[0m\u001b[91mlinks.c: In function 'link_info_by_idx':\n\u001b[0m\u001b[91mlinks.c:11078:41: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                 ret = H5Lget_name_by_idx(group_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)0, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                         ^\n\u001b[0m\u001b[91mlinks.c:11120:41: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                 ret = H5Lget_name_by_idx(group_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)u, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                         ^\n\u001b[0m\u001b[91mlinks.c:11162:41: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n                 ret = H5Lget_name_by_idx(group_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)u, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                         ^\n\u001b[0m\u001b[91mlinks.c: In function 'link_info_by_idx_old':\n\u001b[0m\u001b[91mlinks.c:11330:37: warning: conversion to 'herr_t' from 'ssize_t' may alter its value [-Wconversion]\n             ret = H5Lget_name_by_idx(group_id, \".\", H5_INDEX_CRT_ORDER, H5_ITER_INC, (hsize_t)u, tmpname, (size_t)NAME_BUF_SIZE, H5P_DEFAULT);\n                                     ^\n\u001b[0m\u001b[91mlinks.c: In function 'link_iterate_check':\n\u001b[0m\u001b[91mlinks.c:12090:70: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_links - 1) - skip);\n                                                                      ^\n\u001b[0m\u001b[91mlinks.c:12090:5: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_links - 1) - skip);\n     ^\n\u001b[0m\u001b[91mlinks.c:12118:45: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = max_links / 2;\n                                             ^\n\u001b[0m\u001b[91mlinks.c:12118:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = max_links / 2;\n                                 ^\n\u001b[0m\u001b[91mlinks.c:12122:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? (unsigned)gskip : ((max_links - 1) - gskip);\n     ^\n\u001b[0m\u001b[91mlinks.c:12163:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = 0;\n                                 ^\n\u001b[0m\u001b[91mlinks.c: In function 'link_iterate_old_check':\n\u001b[0m\u001b[91mlinks.c:12520:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = 0;\n                                 ^\n\u001b[0m\u001b[91mlinks.c:12540:70: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_links - 1) - skip);\n                                                                      ^\n\u001b[0m\u001b[91mlinks.c:12540:5: warning: conversion to 'int64_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? skip : ((max_links - 1) - skip);\n     ^\n\u001b[0m\u001b[91mlinks.c:12568:45: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = max_links / 2;\n                                             ^\n\u001b[0m\u001b[91mlinks.c:12568:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = max_links / 2;\n                                 ^\n\u001b[0m\u001b[91mlinks.c:12572:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->curr = order != H5_ITER_DEC ? (unsigned)gskip : ((max_links - 1) - gskip);\n     ^\n\u001b[0m\u001b[91mlinks.c:12613:33: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     iter_info->nskipped = gskip = 0;\n                                 ^\n\u001b[0m\u001b[91mIn file included from links.c:31:0:\nlinks.c: At top level:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m\u001b[91mlinks.c: In function 'external_set_elink_fapl2':\n\u001b[0m\u001b[91mlinks.c:3704:1: warning: stack usage is 10672 bytes [-Wstack-usage=]\n external_set_elink_fapl2(hid_t fapl, hbool_t new_format)\n ^\n\u001b[0m\u001b[91mlinks.c: In function 'external_set_elink_fapl1':\n\u001b[0m\u001b[91mlinks.c:3500:1: warning: stack usage is 8944 bytes [-Wstack-usage=]\n external_set_elink_fapl1(hid_t fapl, hbool_t new_format)\n ^\n\u001b[0m\u001b[91mlinks.c: In function 'external_symlink':\n\u001b[0m\u001b[91mlinks.c:6357:1: warning: stack usage is 11392 bytes [-Wstack-usage=]\n external_symlink(const char *env_h5_drvr, hid_t fapl, hbool_t new_format)\n ^\n\u001b[0m  CCLD     links\n  CC       unlink.o\n  CCLD     unlink\n  CC       big.o\n\u001b[91mIn file included from h5test.h:26:0,\n                 from big.c:56:\nbig.c: In function 'randll':\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nbig.c:132:15: note: in expansion of macro 'HDrandom'\n         acc = HDrandom();\n               ^\n\u001b[0m\u001b[91m../src/H5private.h:1050:37: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         #define HDrandom()    HDrand()\n                                     ^\nbig.c:133:16: note: in expansion of macro 'HDrandom'\n         acc *= HDrandom();\n                ^\n\u001b[0m\u001b[91mbig.c: In function 'enough_room':\n\u001b[0m\u001b[91mbig.c:297:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n         HDsnprintf(name, sizeof(name), filename, i);\n         ^\nbig.c:297:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mbig.c:312:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n         HDsnprintf(name, sizeof(name), filename, i);\n         ^\nbig.c:312:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mbig.c: In function 'reader':\n\u001b[0m\u001b[91mbig.c:511:33: warning: conversion to 'hsize_t' from 'int64_t' may change the sign of the result [-Wsign-conversion]\n         hs_offset[0] = HDstrtoll(s, NULL, 0);\n                                 ^\n\u001b[0m\u001b[91mbig.c: In function 'main':\nbig.c:804:5: warning: conversion to 'unsigned int' from 'long unsigned int' may alter its value [-Wconversion]\n     HDsrandom(seed);\n     ^\n\u001b[0m\u001b[91mbig.c: In function 'writer.constprop.1':\nbig.c:130:33: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C1 +- C2 [-Wstrict-overflow]\n     while(overlap != 0 && tries < MAX_TRIES)\n                                 ^\n\u001b[0m  CCLD     big\n  CC       mtime.o\n\u001b[91mmtime.c: In function 'main':\nmtime.c:117:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     } else if(HDfabs(HDdifftime(now, oi1.ctime)) > 60.0) {\n     ^\n\u001b[0m\u001b[91mIn file included from mtime.c:26:0:\nmtime.c: At top level:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     mtime\n  CC       fillval.o\n\u001b[91mfillval.c: In function 'test_create':\nfillval.c:626:19: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if( rd_c.a!=0 || rd_c.y != fill_ctype.y || rd_c.x != 0 || rd_c.z != '\\0') {\n                   ^\n\u001b[0m\u001b[91mfillval.c:626:33: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         if( rd_c.a!=0 || rd_c.y != fill_ctype.y || rd_c.x != 0 || rd_c.z != '\\0') {\n                                 ^\n\u001b[0m\u001b[91mfillval.c:630:19: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                   rd_c.a, rd_c.y, rd_c.x, rd_c.z);\n                   ^\n\u001b[0m\u001b[91mfillval.c:699:15: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(rd_c.a != 0 || rd_c.y != fill_ctype.y || rd_c.x != 0 || rd_c.z!='\\0') {\n               ^\n\u001b[0m\u001b[91mfillval.c:699:30: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(rd_c.a != 0 || rd_c.y != fill_ctype.y || rd_c.x != 0 || rd_c.z!='\\0') {\n                              ^\n\u001b[0m\u001b[91mfillval.c:703:3: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n   rd_c.a, rd_c.y, rd_c.x, rd_c.z);\n   ^\n\u001b[0m\u001b[91mfillval.c: In function 'test_rdwr_cases':\n\u001b[0m\u001b[91mfillval.c:792:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % cur_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:814:57: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if(fill_time!=H5D_FILL_TIME_NEVER && (rd_c.a!=fill_c.a ||\n                                                         ^\n\u001b[0m\u001b[91mfillval.c:815:29: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n   rd_c.x!=fill_c.x || rd_c.y!=fill_c.y ||\n                             ^\n\u001b[0m\u001b[91mfillval.c:824:4: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n    fill_c.a, fill_c.x, fill_c.y, fill_c.z);\n    ^\nfillval.c:824:4: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mfillval.c:848:13: warning: request for implicit conversion from 'void *' to 'int *' not permitted in C++ [-Wc++-compat]\n         buf = HDmalloc((size_t)(nelmts * sizeof(int)));\n             ^\n\u001b[0m\u001b[91mfillval.c:882:31: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                 if(buf_c[u].a != fill_c.a || buf_c[u].x != fill_c.x ||\n                               ^\n\u001b[0m\u001b[91mfillval.c:883:36: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                         buf_c[u].y != fill_c.y || buf_c[u].z != fill_c.z) {\n                                    ^\n\u001b[0m\u001b[91mfillval.c:892:29: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                             fill_c.a, fill_c.x, fill_c.y, fill_c.z);\n                             ^\nfillval.c:892:29: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mfillval.c:912:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      buf_c[u].a = (float)1111.11;\n      ^\n\u001b[0m\u001b[91mfillval.c:914:6: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n      buf_c[u].y = 3333.3333;\n      ^\n\u001b[0m\u001b[91mfillval.c:941:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % cur_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:996:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n   if( rd_c.a!=should_be_c.a || rd_c.x!=should_be_c.x ||\n             ^\n\u001b[0m\u001b[91mfillval.c:997:13: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n       rd_c.y!=should_be_c.y || rd_c.z!=should_be_c.z)  {\n             ^\n\u001b[0m\u001b[91mfillval.c:1006:14: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n              should_be_c.x,should_be_c.y,should_be_c.z);\n              ^\nfillval.c:1006:14: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mfillval.c:1015:27: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                 if( rd_c.a!=should_be_c.a || rd_c.x!=should_be_c.x ||\n                           ^\n\u001b[0m\u001b[91mfillval.c:1016:27: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n                     rd_c.y!=should_be_c.y || rd_c.z!=should_be_c.z)  {\n                           ^\n\u001b[0m\u001b[91mfillval.c:1025:28: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                            should_be_c.x,should_be_c.y,should_be_c.z);\n                            ^\nfillval.c:1025:28: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n\u001b[0m\u001b[91mfillval.c: In function 'test_rdwr':\n\u001b[0m\u001b[91mfillval.c:1147:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         fill_ctype.y = 4444.4444;\n         ^\n\u001b[0m\u001b[91mfillval.c:1200:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     fill_ctype.y = 4444.4444;\n     ^\n\u001b[0m\u001b[91mfillval.c: In function 'test_extend_cases':\n\u001b[0m\u001b[91mfillval.c:1443:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     comp_vl_datatype val_rd_c, init_val_c = {87, \"baz\", \"mumble\", 129};\n     ^\nfillval.c:1443:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n\u001b[0m\u001b[91mfillval.c:1498:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % start_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:1551:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % start_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:1589:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % extend_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:1628:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % max_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:1669:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % extend_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c:1762:25: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n      hs_offset[j] = rand() % extend_size[j];\n                         ^\n\u001b[0m\u001b[91mfillval.c: In function 'test_extend':\n\u001b[0m\u001b[91mfillval.c:1845:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n     comp_vl_datatype fillval_c = {32, \"foo\", \"bar\", 64};         /* Fill value for compound+vl datatype tests */\n     ^\nfillval.c:1845:5: warning: initialization discards 'const' qualifier from pointer target type [enabled by default]\n\u001b[0m\u001b[91mIn file included from fillval.c:23:0:\nfillval.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m\u001b[91mfillval.c: In function 'test_rdwr_cases':\nfillval.c:886:30: warning: 'fill_c.a' may be used uninitialized in this function [-Wmaybe-uninitialized]\n                     HDfprintf(stdout,\"    Elmt={%Hu, %Hu, %Hu, %Hu, %Hu}, read: %f, %d, %f, %c\"\n                              ^\nfillval.c:886:30: warning: 'fill_c.x' may be used uninitialized in this function [-Wmaybe-uninitialized]\nfillval.c:886:30: warning: 'fill_c.y' may be used uninitialized in this function [-Wmaybe-uninitialized]\nfillval.c:886:30: warning: 'fill_c.z' may be used uninitialized in this function [-Wmaybe-uninitialized]\n\u001b[0m  CCLD     fillval\n  CC       mount.o\n  CCLD     mount\n  CC       flush1.o\n\u001b[91mflush1.c:35:15: warning: size of 'the_data' is 80000 bytes [-Wlarger-than=]\n static double the_data[100][100];\n               ^\n\u001b[0m\u001b[91mflush1.c: In function 'create_file':\n\u001b[0m\u001b[91mflush1.c:77:43: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      the_data[i][j] = (double)(hssize_t)i/(hssize_t)(j+1);\n                                           ^\n\u001b[0m\u001b[91mflush1.c: In function 'extend_file':\n\u001b[0m\u001b[91mflush1.c:134:43: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n      the_data[i][j] = (double)(hssize_t)i/(hssize_t)(j+1);\n                                           ^\n\u001b[0m  CCLD     flush1\n  CC       flush2.o\n\u001b[91mflush2.c:34:16: warning: size of 'the_data' is 80000 bytes [-Wlarger-than=]\n static double  the_data[100][100];\n                ^\nflush2.c: In function 'check_dset':\n\u001b[0m\u001b[91mflush2.c:75:72: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n       error = fabs(the_data[i][j] - (double)(hssize_t)i / ((hssize_t)j + 1));\n                                                                        ^\n\u001b[0m\u001b[91mflush2.c:76:7: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n       if(error > 0.0001) {\n       ^\n\u001b[0m\u001b[91mflush2.c:81:27: warning: conversion to 'double' from 'long long int' may alter its value [-Wconversion]\n       (double)(hssize_t)i/(hssize_t)(j+1));\n                           ^\n\u001b[0m  CCLD     flush2\n  CC       app_ref.o\n\u001b[91mapp_ref.c: In function 'main':\napp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:115:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_FILE)\n     ^\napp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:121:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_PLIST)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:128:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_PCLASS)\n     ^\napp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:134:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_TYPE)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:140:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_SPACE)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:147:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_DSET)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:154:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_ATTR)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:161:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_GROUP)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:167:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_ECLASS)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:173:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_EMSG)\n     ^\n\u001b[0m\u001b[91mapp_ref.c:37:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     for (i=0; i<ninc; i++)                                                     \\\n     ^\napp_ref.c:179:5: note: in expansion of macro 'RAND_INC'\n     RAND_INC (T_ESTACK)\n     ^\n\u001b[0m  CCLD     app_ref\n  CC       enum.o\n  CCLD     enum\n  CC       set_extent.o\n\u001b[91mset_extent.c: In function 'main':\nset_extent.c:133:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(H5Pset_cache(fapl, 0, (size_t)8, 256 * sizeof(int), 0.75) < 0) TEST_ERROR\n     ^\n\u001b[0m\u001b[91mset_extent.c:136:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     if(H5Pset_cache(fapl2, 0, (size_t)0, (size_t)0, 0.) < 0) TEST_ERROR\n     ^\n\u001b[0m\u001b[91mset_extent.c: In function 'test_random_rank4':\n\u001b[0m\u001b[91mset_extent.c:2677:17: warning: size of 'rbuf' is 40000 bytes [-Wlarger-than=]\n     static int  rbuf[10][10][10][10];           /* Read buffer */\n                 ^\n\u001b[0m\u001b[91mset_extent.c:2678:17: warning: size of 'wbuf' is 40000 bytes [-Wlarger-than=]\n     static int  wbuf[10][10][10][10];           /* Write buffer */\n                 ^\n\u001b[0m\u001b[91mset_extent.c:2679:20: warning: size of 'dim_log' is 3232 bytes [-Wlarger-than=]\n     static hsize_t dim_log[RAND4_NITER+1][4];   /* Log of dataset dimensions */\n                    ^\n\u001b[0m  CCLD     set_extent\n  CC       ttsafe.o\n\u001b[91mttsafe.c: In function 'num_digits':\nttsafe.c:56:1: warning: function might be candidate for attribute 'const' if it is known to return normally [-Wsuggest-attribute=const]\n num_digits(int num)\n ^\n\u001b[0m  CC       ttsafe_dcreate.o\n\u001b[91mttsafe_dcreate.c: In function 'tts_dcreate':\nttsafe_dcreate.c:119:9: warning: ISO C forbids passing argument 1 of 'H5TS_create_thread' between function pointer and 'void *' [-Wpedantic]\n         threads[i] = H5TS_create_thread(tts_dcreate_creator, NULL, &thread_out[i]);\n         ^\nIn file included from ../src/H5private.h:1723:0,\n                 from ttsafe.h:30,\n                 from ttsafe_dcreate.c:43:\n../src/H5TSprivate.h:125:22: note: expected 'void *' but argument is of type 'void * (*)(void *)'\n H5_DLL H5TS_thread_t H5TS_create_thread(void * func, H5TS_attr_t * attr, void *udata);\n                      ^\n\u001b[0m\u001b[91mttsafe_dcreate.c:97:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m\u001b[91mttsafe_dcreate.c: In function 'tts_dcreate_creator':\nttsafe_dcreate.c:163:13: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     herr_t  ret;\n             ^\n\u001b[0m  CC       ttsafe_error.o\n\u001b[91mttsafe_error.c: In function 'tts_error':\nttsafe_error.c:126:9: warning: ISO C forbids passing argument 1 of 'H5TS_create_thread' between function pointer and 'void *' [-Wpedantic]\n         threads[i] = H5TS_create_thread(tts_error_thread, &attribute, NULL);\n         ^\n\u001b[0m\u001b[91mIn file included from ../src/H5private.h:1723:0,\n                 from ttsafe.h:30,\n                 from ttsafe_error.c:46:\n../src/H5TSprivate.h:125:22: note: expected 'void *' but argument is of type 'void * (*)(void *)'\n H5_DLL H5TS_thread_t H5TS_create_thread(void * func, H5TS_attr_t * attr, void *udata);\n                      ^\n\u001b[0m\u001b[91mttsafe_error.c:82:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m\u001b[91mttsafe_error.c: In function 'tts_error_thread':\nttsafe_error.c:164:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m  CC       ttsafe_cancel.o\n\u001b[91mttsafe_cancel.c: In function 'tts_cancel':\nttsafe_cancel.c:76:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m\u001b[91mttsafe_cancel.c: In function 'tts_cancel_thread':\n\u001b[0m\u001b[91mttsafe_cancel.c:159:12: warning: request for implicit conversion from 'void *' to 'int *' not permitted in C++ [-Wc++-compat]\n     buffer = HDmalloc(sizeof(int));\n            ^\n\u001b[0m\u001b[91mttsafe_cancel.c:130:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m\u001b[91mttsafe_cancel.c: In function 'tts_cancel_callback':\n\u001b[0m\u001b[91mttsafe_cancel.c:191:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m\u001b[91mttsafe_cancel.c: In function 'cancellation_cleanup':\nttsafe_cancel.c:214:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\nttsafe_cancel.c: In function 'tts_cancel_barrier':\n\u001b[0m\u001b[91mttsafe_cancel.c:234:9: warning: variable 'ret' set but not used [-Wunused-but-set-variable]\n     int ret;\n         ^\n\u001b[0m  CC       ttsafe_acreate.o\n\u001b[91mttsafe_acreate.c: In function 'tts_acreate':\nttsafe_acreate.c:116:21: warning: request for implicit conversion from 'void *' to 'struct ttsafe_name_data_t *' not permitted in C++ [-Wc++-compat]\n         attrib_data = HDmalloc(sizeof(ttsafe_name_data_t));\n                     ^\n\u001b[0m\u001b[91mttsafe_acreate.c:121:9: warning: ISO C forbids passing argument 1 of 'H5TS_create_thread' between function pointer and 'void *' [-Wpedantic]\n         threads[i] = H5TS_create_thread(tts_acreate_thread, NULL, attrib_data);\n         ^\nIn file included from ../src/H5private.h:1723:0,\n                 from ttsafe.h:30,\n                 from ttsafe_acreate.c:49:\n../src/H5TSprivate.h:125:22: note: expected 'void *' but argument is of type 'void * (*)(void *)'\n H5_DLL H5TS_thread_t H5TS_create_thread(void * func, H5TS_attr_t * attr, void *udata);\n                      ^\n\u001b[0m\u001b[91mttsafe_acreate.c: In function 'tts_acreate_thread':\n\u001b[0m\u001b[91mttsafe_acreate.c:173:20: warning: request for implicit conversion from 'void *' to 'int *' not permitted in C++ [-Wc++-compat]\n     attribute_data = HDmalloc(sizeof(int));\n                    ^\n\u001b[0m  CCLD     ttsafe\n  CC       getname.o\n\u001b[91mgetname.c: In function 'test_obj_ref':\n\u001b[0m\u001b[91mgetname.c:2523:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(dataset2, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2527:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[0], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2535:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(dataset2, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2539:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[1], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2547:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(group, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2551:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[2], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2559:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(tid1, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2563:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[3], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2571:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(dataset2, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2575:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[4], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2583:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(group, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2587:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[5], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2595:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(dataset2, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2599:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[6], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2607:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(group, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2611:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[7], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2622:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(dataset2, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2626:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[4], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2638:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Iget_name(dataset2, (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m\u001b[91mgetname.c:2642:20: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     i = H5Rget_name(dataset, H5R_OBJECT, &wbuf[1], (char*)buf, sizeof(buf));\n                    ^\n\u001b[0m  CCLD     getname\n  CC       vfd.o\n\u001b[91mvfd.c: In function 'test_family_opens':\nvfd.c:611:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(first_name, sizeof(first_name), fname, 0);\n     ^\nvfd.c:611:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mvfd.c: In function 'test_family':\n\u001b[0m\u001b[91mvfd.c:682:17: warning: size of 'buf' is 16384 bytes [-Wlarger-than=]\n     int         buf[FAMILY_NUMBER][FAMILY_SIZE];\n                 ^\n\u001b[0m\u001b[91mvfd.c: In function 'test_family_compat':\n\u001b[0m\u001b[91mvfd.c:865:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(newname_individual, sizeof(newname_individual), newname, counter);\n     ^\nvfd.c:865:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mvfd.c:866:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(pathname_individual, sizeof(pathname_individual), pathname, counter);\n     ^\nvfd.c:866:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mvfd.c:870:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n         HDsnprintf(newname_individual, sizeof(newname_individual), newname, counter);\n         ^\nvfd.c:870:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mvfd.c:871:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n         HDsnprintf(pathname_individual, sizeof(pathname_individual), pathname, counter);\n         ^\nvfd.c:871:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mvfd.c: In function 'test_multi_opens':\n\u001b[0m\u001b[91mvfd.c:940:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(sf_name, sizeof(sf_name), super_name, fname);\n     ^\nvfd.c:940:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mvfd.c: In function 'test_multi':\n\u001b[0m\u001b[91mvfd.c:982:17: warning: size of 'buf' is 65536 bytes [-Wlarger-than=]\n     int         buf[MULTI_SIZE][MULTI_SIZE];\n                 ^\n\u001b[0m\u001b[91mvfd.c: In function 'test_multi_compat':\n\u001b[0m\u001b[91mvfd.c:1193:17: warning: size of 'buf' is 65536 bytes [-Wlarger-than=]\n     int         buf[MULTI_SIZE][MULTI_SIZE];\n                 ^\n\u001b[0m\u001b[91mvfd.c: In function 'test_family':\n\u001b[0m\u001b[91mvfd.c:674:1: warning: stack usage is 17600 bytes [-Wstack-usage=]\n test_family(void)\n ^\n\u001b[0m\u001b[91mvfd.c:815:1: warning: the frame size of 17540 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mvfd.c: In function 'test_multi_compat':\n\u001b[0m\u001b[91mvfd.c:1180:1: warning: stack usage is 71200 bytes [-Wstack-usage=]\n test_multi_compat(void)\n ^\n\u001b[0m\u001b[91mvfd.c:1322:1: warning: the frame size of 71140 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mvfd.c: In function 'test_multi':\n\u001b[0m\u001b[91mvfd.c:964:1: warning: stack usage is 68288 bytes [-Wstack-usage=]\n test_multi(void)\n ^\n\u001b[0m\u001b[91mvfd.c:1156:1: warning: the frame size of 68204 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m  CCLD     vfd\n  CC       ntypes.o\n\u001b[91mntypes.c:35:5: warning: size of 'ipoints2' is 80000 bytes [-Wlarger-than=]\n int ipoints2[DIM0][DIM1], icheck2[DIM0][DIM1];\n     ^\nntypes.c:35:27: warning: size of 'icheck2' is 80000 bytes [-Wlarger-than=]\n int ipoints2[DIM0][DIM1], icheck2[DIM0][DIM1];\n                           ^\nntypes.c:36:7: warning: size of 'spoints2' is 40000 bytes [-Wlarger-than=]\n short spoints2[DIM0][DIM1], scheck2[DIM0][DIM1];\n       ^\nntypes.c:36:29: warning: size of 'scheck2' is 40000 bytes [-Wlarger-than=]\n short spoints2[DIM0][DIM1], scheck2[DIM0][DIM1];\n                             ^\nntypes.c:37:5: warning: size of 'ipoints3' is 400000 bytes [-Wlarger-than=]\n int ipoints3[DIM0][DIM1][5], icheck3[DIM0][DIM1][5];\n     ^\n\u001b[0m\u001b[91mntypes.c:37:30: warning: size of 'icheck3' is 400000 bytes [-Wlarger-than=]\n int ipoints3[DIM0][DIM1][5], icheck3[DIM0][DIM1][5];\n                              ^\n\u001b[0m  CCLD     ntypes\n  CC       dangle.o\n  CCLD     dangle\n  CC       dtransform.o\n\u001b[91mdtransform.c: In function 'main':\ndtransform.c:291:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_utrans_inv, char, H5T_NATIVE_CHAR, \"char\", transformData, 0);\n     ^\ndtransform.c:291:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:291:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:291:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:292:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_utrans_inv, unsigned char, H5T_NATIVE_UCHAR, \"uchar\", transformData, 0);\n     ^\ndtransform.c:292:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:292:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:292:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:293:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_c_to_f, signed char, H5T_NATIVE_SCHAR, \"schar\", windchillFfloat, 1);\n     ^\ndtransform.c:293:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:293:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:293:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:294:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_c_to_f, short, H5T_NATIVE_SHORT, \"short\", windchillFfloat, 1);\n     ^\ndtransform.c:294:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:294:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:294:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:295:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_utrans_inv, unsigned short, H5T_NATIVE_USHORT, \"ushort\", transformData, 0);\n     ^\ndtransform.c:295:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:295:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:295:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:296:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_c_to_f, int, H5T_NATIVE_INT, \"int\", windchillFfloat, 1);\n     ^\ndtransform.c:296:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:296:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:296:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:298:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_c_to_f, long, H5T_NATIVE_LONG, \"long\", windchillFfloat, 1);\n     ^\ndtransform.c:298:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:298:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:298:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:303:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CONTIG(dxpl_id_c_to_f, long long, H5T_NATIVE_LLONG, \"llong\", windchillFfloat, 1);\n     ^\ndtransform.c:303:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:303:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\ndtransform.c:303:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:119:10: warning: size of 'array' is 3456 bytes [-Wlarger-than=]\n     TYPE array[ROWS][COLS];       \\\n          ^\ndtransform.c:322:5: note: in expansion of macro 'TEST_TYPE_CONTIG'\n     TEST_TYPE_CONTIG(dxpl_id_c_to_f, long double, H5T_NATIVE_LDOUBLE, \"ldouble\", windchillFfloat, 1);\n     ^\n\u001b[0m\u001b[91mdtransform.c:325:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_utrans_inv, char, H5T_NATIVE_CHAR, \"char\", transformData, 0);\n     ^\ndtransform.c:325:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:326:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_utrans_inv, unsigned char, H5T_NATIVE_UCHAR, \"uchar\", transformData, 0);\n     ^\ndtransform.c:326:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:327:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_c_to_f, signed char, H5T_NATIVE_SCHAR, \"schar\", windchillFfloat, 1);\n     ^\ndtransform.c:327:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:328:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_c_to_f, short, H5T_NATIVE_SHORT, \"short\", windchillFfloat, 1);\n     ^\ndtransform.c:328:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:329:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_utrans_inv, unsigned short, H5T_NATIVE_USHORT, \"ushort\", transformData, 0);\n     ^\ndtransform.c:329:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:330:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_c_to_f, int, H5T_NATIVE_INT, \"int\", windchillFfloat, 1);\n     ^\ndtransform.c:330:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:332:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_c_to_f, long, H5T_NATIVE_LONG, \"long\", windchillFfloat, 1);\n     ^\ndtransform.c:332:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:335:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n     TEST_TYPE_CHUNK(dxpl_id_c_to_f, long long, H5T_NATIVE_LLONG, \"llong\", windchillFfloat, 1);\n     ^\ndtransform.c:335:5: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\n\u001b[0m\u001b[91mdtransform.c:185:10: warning: size of 'array' is 3456 bytes [-Wlarger-than=]\n     TYPE array[ROWS][COLS];       \\\n          ^\ndtransform.c:350:5: note: in expansion of macro 'TEST_TYPE_CHUNK'\n     TEST_TYPE_CHUNK(dxpl_id_c_to_f, long double, H5T_NATIVE_LDOUBLE, \"ldouble\", windchillFfloat, 1);\n     ^\n\u001b[0m\u001b[91mdtransform.c: In function 'test_poly':\n\u001b[0m\u001b[91mdtransform.c:498:13: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n             polyflres[row][col] = (float) ((2.0f + windchillC) * ((windchillC - 8.0f) / 2.0f));\n             ^\ndtransform.c:498:13: warning: conversion to 'float' from 'int' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mdtransform.c: In function 'test_trivial':\n\u001b[0m\u001b[91mdtransform.c:729:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             if((windchillFfloatread[row][col] - 4.8f) > FLOAT_TOL) \n             ^\n\u001b[0m\u001b[91mdtransform.c:729:55: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n             if((windchillFfloatread[row][col] - 4.8f) > FLOAT_TOL) \n                                                       ^\n\u001b[0m\u001b[91mdtransform.c: In function 'test_getset':\n\u001b[0m\u001b[91mdtransform.c:788:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             if((windchillFfloatread[row][col] - 4.8f) > FLOAT_TOL) \n             ^\n\u001b[0m\u001b[91mdtransform.c:788:55: warning: implicit conversion from 'float' to 'double' to match other operand of binary expression [-Wdouble-promotion]\n             if((windchillFfloatread[row][col] - 4.8f) > FLOAT_TOL) \n                                                       ^\n\u001b[0m  CCLD     dtransform\n  CC       reserved.o\n  CCLD     reserved\n  CC       cross_read.o\n\u001b[91mcross_read.c: In function 'check_data':\ncross_read.c:110:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         data_in[NX][i] = -2.2;\n         ^\ncross_read.c:129:3: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n   if (!DBL_REL_EQUAL(data_out[j][i], data_in[j][i], 0.001)) {\n   ^\n\u001b[0m\u001b[91mcross_read.c: In function 'open_dataset':\ncross_read.c:210:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:213:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME1, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:217:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME2, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:225:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME3, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:233:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME4, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:241:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME5, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:249:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME6, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:257:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME7, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:265:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME8, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:273:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME9, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:281:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME10, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:289:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME11, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:297:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME12, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:305:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME13, file, FALSE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:313:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME14, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:321:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME15, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:329:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME16, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:337:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME17, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:361:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME20, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:369:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME21, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:377:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME22, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:385:26: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += check_data(DATASETNAME23, file, TRUE);\n                          ^\n\u001b[0m\u001b[91mcross_read.c:399:5: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n     return nerrors;\n     ^\n\u001b[0m\u001b[91mcross_read.c: In function 'main':\n\u001b[0m\u001b[91mcross_read.c:425:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += open_dataset(filename);\n                            ^\n\u001b[0m\u001b[91mcross_read.c:429:28: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += open_dataset(filename);\n                            ^\n\u001b[0m\u001b[91mIn file included from cross_read.c:25:0:\ncross_read.c: At top level:\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     cross_read\n  CC       freespace.o\n  CCLD     freespace\n  CC       mf.o\n  CCLD     mf\n  CC       btree2.o\n  CCLD     btree2\n  CC       fheap.o\n\u001b[91mfheap.c: In function 'begin_test':\n\u001b[0m\u001b[91mfheap.c:546:15: warning: request for implicit conversion from 'void *' to 'char *' not permitted in C++ [-Wc++-compat]\n     test_desc = H5MM_malloc(HDstrlen(del_str) + HDstrlen(base_desc));\n               ^\n\u001b[0m\u001b[91mfheap.c:547:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     sprintf(test_desc, base_desc, del_str);\n     ^\n\u001b[0m\u001b[91mfheap.c: In function 'reopen_file':\n\u001b[0m\u001b[91mfheap.c:597:24: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n         if(NULL == (*f = H5I_object(*file)))\n                        ^\n\u001b[0m\u001b[91mfheap.c: In function 'open_heap':\n\u001b[0m\u001b[91mfheap.c:644:24: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n         if(NULL == (*f = H5I_object(*file)))\n                        ^\n\u001b[0m\u001b[91mfheap.c:682:20: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (*f = H5I_object(*file)))\n                    ^\n\u001b[0m\u001b[91mfheap.c: In function 'fill_heap':\n\u001b[0m\u001b[91mfheap.c:1067:38: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (shared_ids_g = H5MM_realloc(shared_ids_g, id_len * shared_alloc_ids_g)))\n                                      ^\n\u001b[0m\u001b[91mfheap.c:1069:39: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (shared_lens_g = H5MM_realloc(shared_lens_g, sizeof(size_t) * shared_alloc_ids_g)))\n                                       ^\n\u001b[0m\u001b[91mfheap.c:1071:39: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (shared_offs_g = H5MM_realloc(shared_offs_g, sizeof(size_t) * shared_alloc_ids_g)))\n                                       ^\n\u001b[0m\u001b[91mfheap.c:1118:38: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (shared_ids_g = H5MM_realloc(shared_ids_g, id_len * shared_alloc_ids_g)))\n                                      ^\n\u001b[0m\u001b[91mfheap.c:1120:39: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (shared_lens_g = H5MM_realloc(shared_lens_g, sizeof(size_t) * shared_alloc_ids_g)))\n                                       ^\n\u001b[0m\u001b[91mfheap.c:1122:39: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (shared_offs_g = H5MM_realloc(shared_offs_g, sizeof(size_t) * shared_alloc_ids_g)))\n                                       ^\n\u001b[0m\u001b[91mfheap.c:1174:39: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (keep_ids->ids = H5MM_realloc(keep_ids->ids, id_len * keep_ids->alloc_ids)))\n                                       ^\n\u001b[0m\u001b[91mfheap.c:1176:40: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (keep_ids->lens = H5MM_realloc(keep_ids->lens, sizeof(size_t) * keep_ids->alloc_ids)))\n                                        ^\n\u001b[0m\u001b[91mfheap.c:1178:40: warning: request for implicit conversion from 'void *' to 'size_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (keep_ids->offs = H5MM_realloc(keep_ids->offs, sizeof(size_t) * keep_ids->alloc_ids)))\n                                        ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_create':\n\u001b[0m\u001b[91mfheap.c:1849:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_reopen':\n\u001b[0m\u001b[91mfheap.c:1949:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_open_twice':\n\u001b[0m\u001b[91mfheap.c:2048:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:2056:20: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f2 = H5I_object(file2)))\n                    ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_delete_open':\n\u001b[0m\u001b[91mfheap.c:2194:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_id_limits':\n\u001b[0m\u001b[91mfheap.c:2331:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_filtered_create':\n\u001b[0m\u001b[91mfheap.c:2670:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:2709:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\nfheap.c: In function 'test_size':\n\u001b[0m\u001b[91mfheap.c:2785:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:2835:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\nfheap.c: In function 'test_man_insert_weird':\nfheap.c:3051:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\nfheap.c: In function 'test_man_start_5th_recursive_indirect':\n\u001b[0m\u001b[91mfheap.c:6016:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_remove_bogus':\n\u001b[0m\u001b[91mfheap.c:6146:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6187:33: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n         heap_id[u] = HDrandom() + 1;\n                                 ^\n\u001b[0m\u001b[91mfheap.c:6209:37: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n             heap_id[u] = HDrandom() + 1;\n                                     ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_remove_one':\n\u001b[0m\u001b[91mfheap.c:6295:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6332:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6346:9: warning: conversion to 'unsigned char' from 'unsigned int' may alter its value [-Wconversion]\n         obj[u] = u;\n         ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_remove_two':\n\u001b[0m\u001b[91mfheap.c:6451:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6488:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6502:9: warning: conversion to 'unsigned char' from 'unsigned int' may alter its value [-Wconversion]\n         obj[u] = u;\n         ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_remove_one_larger':\n\u001b[0m\u001b[91mfheap.c:6636:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6673:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_remove_two_larger':\n\u001b[0m\u001b[91mfheap.c:6797:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:6834:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_remove_three_larger':\n\u001b[0m\u001b[91mfheap.c:7033:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:7070:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_man_incr_insert_remove':\n\u001b[0m\u001b[91mfheap.c:7307:19: warning: size of 'heap_id' is 6400 bytes [-Wlarger-than=]\n     unsigned char heap_id[100][MAX_HEAP_ID_LEN]; /* Heap ID for object inserted */\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_huge_insert_one':\n\u001b[0m\u001b[91mfheap.c:12331:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_huge_insert_two':\n\u001b[0m\u001b[91mfheap.c:12485:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c:12487:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id2 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_huge_insert_three':\n\u001b[0m\u001b[91mfheap.c:12719:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c:12721:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id2 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:12723:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id3 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_huge_insert_mix':\n\u001b[0m\u001b[91mfheap.c:13029:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c:13031:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id2 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:13033:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id3 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:13035:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id4 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:13037:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id5 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_filtered_huge':\n\u001b[0m\u001b[91mfheap.c:13456:35: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n         old_actual_id_len = tparam->actual_id_len;\n                                   ^\n\u001b[0m\u001b[91mfheap.c:13470:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_tiny_insert_one':\n\u001b[0m\u001b[91mfheap.c:13663:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_tiny_insert_two':\n\u001b[0m\u001b[91mfheap.c:13817:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c:13819:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id2 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_tiny_insert_mix':\n\u001b[0m\u001b[91mfheap.c:14056:25: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id = H5MM_malloc(tparam->actual_id_len)))\n                         ^\n\u001b[0m\u001b[91mfheap.c:14058:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id2 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:14060:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id3 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:14062:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id4 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:14064:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id5 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:14066:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id6 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c:14068:26: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (heap_id7 = H5MM_malloc(tparam->actual_id_len)))\n                          ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_filtered_man_root_direct':\n\u001b[0m\u001b[91mfheap.c:14699:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_filtered_man_root_indirect':\n\u001b[0m\u001b[91mfheap.c:14881:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:14941:27: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (f = H5I_object(file)))\n                           ^\n\u001b[0m\u001b[91mfheap.c:14973:27: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (f = H5I_object(file)))\n                           ^\n\u001b[0m\u001b[91mfheap.c:15006:27: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (f = H5I_object(file)))\n                           ^\n\u001b[0m\u001b[91mfheap.c:15038:27: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n             if(NULL == (f = H5I_object(file)))\n                           ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_random_pow2':\n\u001b[0m\u001b[91mfheap.c:15397:68: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n         unsigned size_range = (tmp_cparam.managed.start_block_size / 8);       /* Object size range */\n                                                                    ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_write':\n\u001b[0m\u001b[91mfheap.c:15683:17: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     rewrite_obj = H5MM_malloc(shared_obj_size_g);\n                 ^\n\u001b[0m\u001b[91mfheap.c:15685:43: warning: conversion to 'unsigned char' from 'int' may alter its value [-Wconversion]\n         rewrite_obj[u] = shared_wobj_g[u] * 2;\n                                           ^\n\u001b[0m\u001b[91mfheap.c:15713:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             obj_size *= 1.3;\n             ^\nfheap.c:15713:13: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mfheap.c:15713:22: warning: conversion to 'size_t' from 'double' may alter its value [-Wconversion]\n             obj_size *= 1.3;\n                      ^\n\u001b[0m\u001b[91mfheap.c:15715:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             obj_size /= 1.3;\n             ^\nfheap.c:15715:13: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mfheap.c:15715:22: warning: conversion to 'size_t' from 'double' may alter its value [-Wconversion]\n             obj_size /= 1.3;\n                      ^\n\u001b[0m\u001b[91mfheap.c:15738:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:15758:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             obj_size *= 1.3;\n             ^\nfheap.c:15758:13: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mfheap.c:15758:22: warning: conversion to 'size_t' from 'double' may alter its value [-Wconversion]\n             obj_size *= 1.3;\n                      ^\n\u001b[0m\u001b[91mfheap.c:15760:13: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n             obj_size /= 1.3;\n             ^\nfheap.c:15760:13: warning: conversion to 'double' from 'size_t' may alter its value [-Wconversion]\n\u001b[0m\u001b[91mfheap.c:15760:22: warning: conversion to 'size_t' from 'double' may alter its value [-Wconversion]\n             obj_size /= 1.3;\n                      ^\n\u001b[0m\u001b[91mfheap.c: In function 'test_bug1':\n\u001b[0m\u001b[91mfheap.c:15899:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c:15925:19: warning: request for implicit conversion from 'void *' to 'struct H5F_t *' not permitted in C++ [-Wc++-compat]\n     if(NULL == (f = H5I_object(file)))\n                   ^\n\u001b[0m\u001b[91mfheap.c: In function 'main':\n\u001b[0m\u001b[91mfheap.c:16011:19: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     shared_wobj_g = H5MM_malloc(shared_obj_size_g);\n                   ^\n\u001b[0m\u001b[91mfheap.c:16012:19: warning: request for implicit conversion from 'void *' to 'unsigned char *' not permitted in C++ [-Wc++-compat]\n     shared_robj_g = H5MM_malloc(shared_obj_size_g);\n                   ^\n\u001b[0m\u001b[91mfheap.c:16020:80: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n     for(curr_test = FHEAP_TEST_NORMAL; curr_test < FHEAP_TEST_NTESTS; curr_test++) {\n                                                                                ^\n\u001b[0m\u001b[91mfheap.c:16051:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_create(fapl, &small_cparam, &tparam);\n                               ^\n\u001b[0m\u001b[91mfheap.c:16052:31: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_reopen(fapl, &small_cparam, &tparam);\n                               ^\n\u001b[0m\u001b[91mfheap.c:16053:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_open_twice(fapl, &small_cparam, &tparam);\n                                   ^\n\u001b[0m\u001b[91mfheap.c:16054:36: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_delete_open(fapl, &small_cparam, &tparam);\n                                    ^\n\u001b[0m\u001b[91mfheap.c:16055:34: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_id_limits(fapl, &small_cparam);\n                                  ^\n\u001b[0m\u001b[91mfheap.c:16056:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_filtered_create(fapl, &small_cparam);\n                                        ^\n\u001b[0m\u001b[91mfheap.c:16057:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_size(fapl, &small_cparam);\n                             ^\n\u001b[0m\u001b[91mfheap.c:16072:73: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n         for(fill = FHEAP_TEST_FILL_LARGE; fill < FHEAP_TEST_FILL_N; fill++) {\n                                                                         ^\n\u001b[0m\u001b[91mfheap.c:16104:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_insert_weird(fapl, &small_cparam, &tparam);\n                                             ^\n\u001b[0m\u001b[91mfheap.c:16147:65: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_man_start_5th_recursive_indirect(fapl, &small_cparam, &tparam);\n                                                                 ^\n\u001b[0m\u001b[91mfheap.c:16157:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_bogus(fapl, &small_cparam, &tparam);\n                                             ^\n\u001b[0m\u001b[91mfheap.c:16158:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_one(fapl, &small_cparam, &tparam);\n                                           ^\n\u001b[0m\u001b[91mfheap.c:16159:43: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_two(fapl, &small_cparam, &tparam);\n                                           ^\n\u001b[0m\u001b[91mfheap.c:16160:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_one_larger(fapl, &small_cparam, &tparam);\n                                                  ^\n\u001b[0m\u001b[91mfheap.c:16162:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_two_larger(fapl, &small_cparam, &tparam);\n                                                  ^\n\u001b[0m\u001b[91mfheap.c:16164:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_two_larger(fapl, &small_cparam, &tparam);\n                                                  ^\n\u001b[0m\u001b[91mfheap.c:16166:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_three_larger(fapl, &small_cparam, &tparam);\n                                                    ^\n\u001b[0m\u001b[91mfheap.c:16168:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_man_remove_three_larger(fapl, &small_cparam, &tparam);\n                                                    ^\n\u001b[0m\u001b[91mfheap.c:16184:80: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n             for(del_dir = FHEAP_DEL_FORWARD; del_dir < FHEAP_DEL_NDIRS; del_dir++) {\n                                                                                ^\n\u001b[0m\u001b[91mfheap.c:16186:97: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n                 for(drain_half = FHEAP_DEL_DRAIN_ALL; drain_half < FHEAP_DEL_DRAIN_N; drain_half++) {\n                                                                                                 ^\n\u001b[0m\u001b[91mfheap.c:16202:59: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_remove_root_direct(fapl, &small_cparam, &tparam);\n                                                           ^\n\u001b[0m\u001b[91mfheap.c:16203:58: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_remove_two_direct(fapl, &small_cparam, &tparam);\n                                                          ^\n\u001b[0m\u001b[91mfheap.c:16204:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_remove_first_row(fapl, &small_cparam, &tparam);\n                                                         ^\n\u001b[0m\u001b[91mfheap.c:16205:62: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_remove_first_two_rows(fapl, &small_cparam, &tparam);\n                                                              ^\n\u001b[0m\u001b[91mfheap.c:16206:63: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_remove_first_four_rows(fapl, &small_cparam, &tparam);\n                                                               ^\n\u001b[0m\u001b[91mfheap.c:16210:67: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_remove_all_root_direct(fapl, &small_cparam, &tparam);\n                                                                   ^\n\u001b[0m\u001b[91mfheap.c:16211:64: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_remove_2nd_indirect(fapl, &small_cparam, &tparam);\n                                                                ^\n\u001b[0m\u001b[91mfheap.c:16212:64: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_remove_3rd_indirect(fapl, &small_cparam, &tparam);\n                                                                ^\n\u001b[0m\u001b[91mfheap.c:16221:57: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_skip_start_block(fapl, &small_cparam, &tparam);\n                                                         ^\n\u001b[0m\u001b[91mfheap.c:16222:66: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_skip_start_block_add_back(fapl, &small_cparam, &tparam);\n                                                                  ^\n\u001b[0m\u001b[91mfheap.c:16223:69: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_skip_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                     ^\n\u001b[0m\u001b[91mfheap.c:16224:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_skip_2nd_block(fapl, &small_cparam, &tparam);\n                                                       ^\n\u001b[0m\u001b[91mfheap.c:16225:67: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_skip_2nd_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                   ^\n\u001b[0m\u001b[91mfheap.c:16226:84: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_one_partial_skip_2nd_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                    ^\n\u001b[0m\u001b[91mfheap.c:16227:66: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_row_skip_add_skipped(fapl, &small_cparam, &tparam);\n                                                                  ^\n\u001b[0m\u001b[91mfheap.c:16228:87: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_skip_direct_skip_indirect_two_rows_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                       ^\n\u001b[0m\u001b[91mfheap.c:16229:90: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_direct_skip_indirect_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                          ^\n\u001b[0m\u001b[91mfheap.c:16230:94: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_direct_skip_2nd_indirect_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                              ^\n\u001b[0m\u001b[91mfheap.c:16231:94: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_2nd_direct_less_one_wrap_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                              ^\n\u001b[0m\u001b[91mfheap.c:16232:97: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_direct_skip_2nd_indirect_skip_2nd_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                 ^\n\u001b[0m\u001b[91mfheap.c:16233:87: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_direct_skip_indirect_two_rows_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                       ^\n\u001b[0m\u001b[91mfheap.c:16234:105: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_direct_skip_indirect_two_rows_skip_indirect_row_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                         ^\n\u001b[0m\u001b[91mfheap.c:16235:85: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_2nd_direct_skip_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                     ^\n\u001b[0m\u001b[91mfheap.c:16236:98: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_2nd_direct_skip_2nd_indirect_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                  ^\n\u001b[0m\u001b[91mfheap.c:16237:110: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_2nd_direct_fill_direct_skip_3rd_indirect_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                              ^\n\u001b[0m\u001b[91mfheap.c:16238:111: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_2nd_direct_fill_direct_skip2_3rd_indirect_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                               ^\n\u001b[0m\u001b[91mfheap.c:16239:106: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_3rd_direct_less_one_fill_direct_wrap_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                          ^\n\u001b[0m\u001b[91mfheap.c:16240:118: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_fill_1st_row_3rd_direct_fill_2nd_direct_less_one_wrap_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                                      ^\n\u001b[0m\u001b[91mfheap.c:16244:101: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_fill_3rd_direct_fill_direct_skip_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                     ^\n\u001b[0m\u001b[91mfheap.c:16245:130: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_fill_3rd_direct_fill_2nd_direct_fill_direct_skip_3rd_indirect_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                                                  ^\n\u001b[0m\u001b[91mfheap.c:16246:139: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_fill_3rd_direct_fill_2nd_direct_fill_direct_skip_3rd_indirect_two_rows_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                                                           ^\n\u001b[0m\u001b[91mfheap.c:16247:135: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_fill_3rd_direct_fill_2nd_direct_fill_direct_skip_3rd_indirect_wrap_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                                                       ^\n\u001b[0m\u001b[91mfheap.c:16248:144: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                         nerrors += test_man_fill_4th_direct_less_one_fill_2nd_direct_fill_direct_skip_3rd_indirect_wrap_start_block_add_skipped(fapl, &small_cparam, &tparam);\n                                                                                                                                                ^\n\u001b[0m\u001b[91mfheap.c:16257:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_frag_simple(fapl, &small_cparam, &tparam);\n                                                    ^\n\u001b[0m\u001b[91mfheap.c:16258:52: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_frag_direct(fapl, &small_cparam, &tparam);\n                                                    ^\n\u001b[0m\u001b[91mfheap.c:16259:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_frag_2nd_direct(fapl, &small_cparam, &tparam);\n                                                        ^\n\u001b[0m\u001b[91mfheap.c:16260:56: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nerrors += test_man_frag_3rd_direct(fapl, &small_cparam, &tparam);\n                                                        ^\n\u001b[0m\u001b[91mfheap.c:16295:13: warning: conversion to 'uint16_t' from 'unsigned int' may alter its value [-Wconversion]\n             small_cparam.id_len = id_len;\n             ^\n\u001b[0m\u001b[91mfheap.c:16325:80: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n             for(del_dir = FHEAP_DEL_FORWARD; del_dir < FHEAP_DEL_NDIRS; del_dir++) {\n                                                                                ^\n\u001b[0m\u001b[91mfheap.c:16330:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_huge_insert_one(fapl, &small_cparam, &tparam);\n                                                ^\n\u001b[0m\u001b[91mfheap.c:16331:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_huge_insert_two(fapl, &small_cparam, &tparam);\n                                                ^\n\u001b[0m\u001b[91mfheap.c:16332:50: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_huge_insert_three(fapl, &small_cparam, &tparam);\n                                                  ^\n\u001b[0m\u001b[91mfheap.c:16333:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_huge_insert_mix(fapl, &small_cparam, &tparam);\n                                                ^\n\u001b[0m\u001b[91mfheap.c:16334:46: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_filtered_huge(fapl, &small_cparam, &tparam);\n                                              ^\n\u001b[0m\u001b[91mfheap.c:16341:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_tiny_insert_one(fapl, &small_cparam, &tparam);\n                                                ^\n\u001b[0m\u001b[91mfheap.c:16342:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_tiny_insert_two(fapl, &small_cparam, &tparam);\n                                                ^\n\u001b[0m\u001b[91mfheap.c:16343:48: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                 nerrors += test_tiny_insert_mix(fapl, &small_cparam, &tparam);\n                                                ^\n\u001b[0m\u001b[91mfheap.c:16368:76: warning: increment of enumeration value is invalid in C++ [-Wc++-compat]\n         for(del_dir = FHEAP_DEL_FORWARD; del_dir < FHEAP_DEL_NDIRS; del_dir++) {\n                                                                            ^\n\u001b[0m\u001b[91mfheap.c:16373:53: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_filtered_man_root_direct(fapl, &small_cparam, &tparam);\n                                                     ^\n\u001b[0m\u001b[91mfheap.c:16374:55: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_filtered_man_root_indirect(fapl, &small_cparam, &tparam);\n                                                       ^\n\u001b[0m\u001b[91mfheap.c:16378:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(50*1000*1000) : (hsize_t)(25*1000*1000)), fapl, &small_cparam, &tparam);\n                                   ^\n\u001b[0m\u001b[91mfheap.c:16379:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random_pow2((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(50*1000*1000) : (hsize_t)(2*1000*1000)), fapl, &small_cparam, &tparam);\n                                        ^\n\u001b[0m\u001b[91mfheap.c:16401:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(50*1000*1000)), fapl, &small_cparam, &tparam);\n                                   ^\n\u001b[0m\u001b[91mfheap.c:16402:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random_pow2((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(4*1000*1000)), fapl, &small_cparam, &tparam);\n                                        ^\n\u001b[0m\u001b[91mfheap.c:16405:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(50*1000*1000)), fapl, &small_cparam, &tparam);\n                                   ^\n\u001b[0m\u001b[91mfheap.c:16406:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random_pow2((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(4*1000*1000)), fapl, &small_cparam, &tparam);\n                                        ^\n\u001b[0m\u001b[91mfheap.c:16419:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(50*1000*1000)), fapl, &large_cparam, &tparam);\n                                   ^\n\u001b[0m\u001b[91mfheap.c:16420:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random_pow2((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(4*1000*1000)), fapl, &large_cparam, &tparam);\n                                        ^\n\u001b[0m\u001b[91mfheap.c:16423:35: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(50*1000*1000)), fapl, &large_cparam, &tparam);\n                                   ^\n\u001b[0m\u001b[91mfheap.c:16424:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n             nerrors += test_random_pow2((curr_test == FHEAP_TEST_NORMAL ? (hsize_t)(100*1000*1000) : (hsize_t)(4*1000*1000)), fapl, &large_cparam, &tparam);\n                                        ^\n\u001b[0m\u001b[91mfheap.c:16440:30: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_write(fapl, &small_cparam, &tparam);\n                              ^\n\u001b[0m\u001b[91mfheap.c:16444:30: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n         nerrors += test_write(fapl, &small_cparam, &tparam);\n                              ^\n\u001b[0m\u001b[91mfheap.c:16457:25: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     nerrors += test_bug1(fapl, &small_cparam, &tparam);\n                         ^\n\u001b[0m  CCLD     fheap\n  CC       file_image.o\n\u001b[91mfile_image.c: In function 'test_get_file_image':\nfile_image.c:768:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n             HDsnprintf(member_file_name, 1024, file_name, i);\n             ^\nfile_image.c:768:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mfile_image.c:796:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n             HDsnprintf(member_file_name, 1024, file_name, i);\n             ^\nfile_image.c:796:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91mIn file included from file_image.c:25:0:\nfile_image.c: At top level:\nH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     file_image\n  CC       unregister.o\n\u001b[91munregister.c: In function 'test_unregister_filters':\nunregister.c:103:17: warning: size of 'points' is 80000 bytes [-Wlarger-than=]\n     int         points[DSET_DIM1][DSET_DIM2];\n                 ^\n\u001b[0m\u001b[91munregister.c:92:1: warning: stack usage is 81456 bytes [-Wstack-usage=]\n test_unregister_filters(hid_t my_fapl)\n ^\n\u001b[0m\u001b[91munregister.c:213:1: warning: the frame size of 81372 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m  CCLD     unregister\n  CC       error_test.o\n\u001b[91merror_test.c:43:5: warning: size of 'ipoints2' is 80000 bytes [-Wlarger-than=]\n int ipoints2[DIM0][DIM1], icheck2[DIM0][DIM1];\n     ^\nerror_test.c:43:27: warning: size of 'icheck2' is 80000 bytes [-Wlarger-than=]\n int ipoints2[DIM0][DIM1], icheck2[DIM0][DIM1];\n                           ^\n\u001b[0m\u001b[91merror_test.c: In function 'error_stack':\n\u001b[0m\u001b[91merror_test.c:276:29: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     if((err_num = H5Eget_num(H5E_DEFAULT)) < 0)\n                             ^\n\u001b[0m\u001b[91merror_test.c:285:29: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     if((err_num = H5Eget_num(ERR_STACK)) == 0) {\n                             ^\n\u001b[0m\u001b[91merror_test.c: In function 'test_long_desc':\n\u001b[0m\u001b[91merror_test.c:357:28: warning: conversion to 'char' from 'size_t' may alter its value [-Wconversion]\n         long_desc[u] = 'A' + (u % 26);\n                            ^\n\u001b[0m\u001b[91merror_test.c:368:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n     HDsnprintf(full_desc, (size_t)(LONG_DESC_SIZE + 128), format, long_desc);\n     ^\nerror_test.c:368:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]\n\u001b[0m\u001b[91merror_test.c: In function 'test_create':\n\u001b[0m\u001b[91merror_test.c:497:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(estack_id);\n                         ^\n\u001b[0m\u001b[91merror_test.c:504:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(estack_id);\n                         ^\n\u001b[0m\u001b[91merror_test.c:511:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(estack_id);\n                         ^\n\u001b[0m\u001b[91merror_test.c: In function 'test_copy':\n\u001b[0m\u001b[91merror_test.c:549:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(H5E_DEFAULT);\n                         ^\n\u001b[0m\u001b[91merror_test.c:556:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(estack_id);\n                         ^\n\u001b[0m\u001b[91merror_test.c:560:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(H5E_DEFAULT);\n                         ^\n\u001b[0m\u001b[91merror_test.c:567:25: warning: conversion to 'int' from 'ssize_t' may alter its value [-Wconversion]\n     err_num = H5Eget_num(H5E_DEFAULT);\n                         ^\n\u001b[0m\u001b[91mIn file included from error_test.c:23:0:\nerror_test.c: At top level:\nH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m  CCLD     error_test\n  CC       err_compat.o\n\u001b[91merr_compat.c:40:5: warning: size of 'ipoints2' is 80000 bytes [-Wlarger-than=]\n int ipoints2[DIM0][DIM1], icheck2[DIM0][DIM1];\n     ^\nerr_compat.c:40:27: warning: size of 'icheck2' is 80000 bytes [-Wlarger-than=]\n int ipoints2[DIM0][DIM1], icheck2[DIM0][DIM1];\n                           ^\n\u001b[0m  CCLD     err_compat\n  CC       tcheck_version.o\n\u001b[91mtcheck_version.c: In function 'abort_intercept':\ntcheck_version.c:108:1: warning: function might be candidate for attribute 'noreturn' [-Wsuggest-attribute=noreturn]\n abort_intercept (int UNUSED sig)\n ^\n\u001b[0m  CCLD     tcheck_version\n  CC       testmeta.o\n  CCLD     testmeta\n  CC       links_env.o\n  CCLD     links_env\n  CC       plugin.o\n\u001b[91mplugin.c:65:5: warning: size of 'points_deflate' is 80000 bytes [-Wlarger-than=]\n int points_deflate[DSET_DIM1][DSET_DIM2], \n     ^\nplugin.c:66:9: warning: size of 'points_dynlib1' is 80000 bytes [-Wlarger-than=]\n         points_dynlib1[DSET_DIM1][DSET_DIM2],\n         ^\n\u001b[0m\u001b[91mplugin.c:67:9: warning: size of 'points_dynlib2' is 80000 bytes [-Wlarger-than=]\n         points_dynlib2[DSET_DIM1][DSET_DIM2],\n         ^\nplugin.c:68:9: warning: size of 'points_bzip2' is 80000 bytes [-Wlarger-than=]\n         points_bzip2[DSET_DIM1][DSET_DIM2];\n         ^\nplugin.c: In function 'test_filter_internal':\n\u001b[0m\u001b[91mplugin.c:95:25: warning: size of 'points' is 80000 bytes [-Wlarger-than=]\n     int                 points[DSET_DIM1][DSET_DIM2], check[DSET_DIM1][DSET_DIM2];\n                         ^\nplugin.c:95:55: warning: size of 'check' is 80000 bytes [-Wlarger-than=]\n     int                 points[DSET_DIM1][DSET_DIM2], check[DSET_DIM1][DSET_DIM2];\n                                                       ^\n\u001b[0m\u001b[91mplugin.c: In function 'test_read_data':\n\u001b[0m\u001b[91mplugin.c:427:25: warning: size of 'check' is 80000 bytes [-Wlarger-than=]\n     int                 check[DSET_DIM1][DSET_DIM2];\n                         ^\n\u001b[0m\u001b[91mIn file included from plugin.c:24:0:\nplugin.c: At top level:\n\u001b[0m\u001b[91mH5srcdir.h:38:20: warning: 'H5_get_srcdir_filename' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir_filename(const char *filename)\n                    ^\n\u001b[0m\u001b[91mH5srcdir.h:69:20: warning: 'H5_get_srcdir' defined but not used [-Wunused-function]\n static const char *H5_get_srcdir(void)\n                    ^\n\u001b[0m\u001b[91mplugin.c: In function 'test_read_data':\nplugin.c:425:1: warning: stack usage is 80032 bytes [-Wstack-usage=]\n test_read_data(hid_t dataset, int *origin_data)\n ^\n\u001b[0m\u001b[91mplugin.c:456:1: warning: the frame size of 80000 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m\u001b[91mplugin.c: In function 'test_filter_internal':\nplugin.c:85:1: warning: stack usage is 160208 bytes [-Wstack-usage=]\n test_filter_internal(hid_t fid, const char *name, hid_t dcpl)\n ^\n\u001b[0m\u001b[91mplugin.c:325:1: warning: the frame size of 160128 bytes is larger than 16384 bytes [-Wframe-larger-than=]\n }\n ^\n\u001b[0m  CCLD     plugin\nmake[2]: Leaving directory `/nanopolish/hdf5-1.8.14/test'\nMaking all in tools\nmake[2]: Entering directory `/nanopolish/hdf5-1.8.14/tools'\nMaking all in lib\nmake[3]: Entering directory `/nanopolish/hdf5-1.8.14/tools/lib'\n  CC       h5tools.lo\n\u001b[91mh5tools.c: In function 'init_acc_pos':\n\u001b[0m\u001b[91mh5tools.c:1302:26: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n     for (i = (ctx->ndims - 2); i >= 0; i--) {\n                          ^\n\u001b[0m\u001b[91mh5tools.c: In function 'render_bin_output':\n\u001b[0m\u001b[91mh5tools.c:1333:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch (type_class) {\n     ^\nh5tools.c:1333:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nh5tools.c:1333:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nh5tools.c:1333:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nh5tools.c:1333:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5tools.c: At top level:\n\u001b[0m\u001b[91mh5tools.c:1528:1: warning: no previous prototype for 'render_bin_output_region_data_blocks' [-Wmissing-prototypes]\n render_bin_output_region_data_blocks(hid_t region_id, FILE *stream,\n ^\n\u001b[0m\u001b[91mh5tools.c: In function 'render_bin_output_region_data_blocks':\n\u001b[0m\u001b[91mh5tools.c:1549:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((dims1 = (hsize_t *) HDmalloc(sizeof(hsize_t) * ndims)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools.c:1571:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((start = (hsize_t *) HDmalloc(sizeof(hsize_t) * ndims)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools.c:1574:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((count = (hsize_t *) HDmalloc(sizeof(hsize_t) * ndims)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools.c: In function 'render_bin_output_region_blocks':\n\u001b[0m\u001b[91mh5tools.c:1638:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(FALSE, H5E_tools_min_id_g, \"H5Sget_select_hyper_nblocks failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1643:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(FALSE, H5E_tools_min_id_g, \"H5Sget_simple_extent_ndims failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1645:5: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n     alloc_size = nblocks * ndims * 2 * sizeof(ptdata[0]);\n     ^\n\u001b[0m\u001b[91mh5tools.c:1648:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(FALSE, H5E_tools_min_id_g, \"Could not allocate buffer for ptdata\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1652:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(FALSE, H5E_tools_min_id_g, \"H5Rget_select_hyper_blocklist failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1655:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(FALSE, H5E_tools_min_id_g, \"H5Dget_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1657:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(FALSE, H5E_tools_min_id_g, \"H5Tget_native_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1660:13: warning: conversion to 'hssize_t' from 'hsize_t' may change the sign of the result [-Wsign-conversion]\n             type_id, nblocks, ptdata);\n             ^\n\u001b[0m\u001b[91mh5tools.c:1666:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1669:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c: At top level:\n\u001b[0m\u001b[91mh5tools.c:1696:1: warning: no previous prototype for 'render_bin_output_region_data_points' [-Wmissing-prototypes]\n render_bin_output_region_data_points(hid_t region_space, hid_t region_id,\n ^\nh5tools.c: In function 'render_bin_output_region_data_points':\n\u001b[0m\u001b[91mh5tools.c:1706:32: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     if((type_size = H5Tget_size(type_id)) == 0)\n                                ^\n\u001b[0m\u001b[91mh5tools.c:1709:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((region_buf = HDmalloc(type_size * (size_t)npoints)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools.c:1713:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((dims1 = (hsize_t *) HDmalloc(sizeof(hsize_t) * ndims)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools.c:1716:5: warning: conversion to 'hsize_t' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n     dims1[0] = npoints;\n     ^\n\u001b[0m\u001b[91mh5tools.c:1725:5: warning: conversion to 'hsize_t' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n     if(render_bin_output(stream, container, type_id, (char*)region_buf, npoints) < 0)\n     ^\n\u001b[0m\u001b[91mh5tools.c: In function 'render_bin_output_region_points':\n\u001b[0m\u001b[91mh5tools.c:1762:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(FALSE, H5E_tools_min_id_g, \"H5Sget_select_elem_npoints failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1766:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(FALSE, H5E_tools_min_id_g, \"H5Sget_simple_extent_ndims failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1769:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(FALSE, H5E_tools_min_id_g, \"H5Dget_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1772:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(FALSE, H5E_tools_min_id_g, \"H5Tget_native_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1779:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c:1782:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools.c: In function 'h5tools_count_ncols':\n\u001b[0m\u001b[91mh5tools.c:673:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n h5tools_count_ncols(const char *s)\n ^\n\u001b[0m\u001b[91mh5tools.c: In function 'h5tools_is_zero':\n\u001b[0m\u001b[91mh5tools.c:1798:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n h5tools_is_zero(const void *_mem, size_t size)\n ^\n\u001b[0m\u001b[91mIn file included from h5tools.c:31:0:\nh5tools.c: In function 'h5tools_render_element':\n\u001b[0m\u001b[91m../../src/H5private.h:1260:36: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\n     #define HDstrtok(X,Y)    strtok(X,Y)\n                                    ^\nh5tools.c:1083:25: note: in expansion of macro 'HDstrtok'\n              (section = HDstrtok(secnum ? NULL : s, OPTIONAL_LINE_BREAK));\n                         ^\n\u001b[0m\u001b[91mh5tools.c: In function 'h5tools_render_region_element':\n\u001b[0m\u001b[91m../../src/H5private.h:1260:36: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\n     #define HDstrtok(X,Y)    strtok(X,Y)\n                                    ^\nh5tools.c:1236:48: note: in expansion of macro 'HDstrtok'\n     for (secnum = 0, multiline = 0; (section = HDstrtok(secnum ? NULL : s,\n                                                ^\n\u001b[0m\u001b[91mh5tools.c: In function 'render_bin_output_region_points':\n\u001b[0m\u001b[91mh5tools.c:1778:16: warning: 'type_id' may be used uninitialized in this function [-Wmaybe-uninitialized]\n     if(H5Tclose(type_id) < 0)\n                ^\n\u001b[0m\u001b[91mh5tools.c: In function 'render_bin_output_region_blocks':\n\u001b[0m\u001b[91mh5tools.c:1665:16: warning: 'type_id' may be used uninitialized in this function [-Wmaybe-uninitialized]\n     if(H5Tclose(type_id) < 0)\n                ^\n\u001b[0m\u001b[91mh5tools.c:1668:16: warning: 'dtype' may be used uninitialized in this function [-Wmaybe-uninitialized]\n     if(H5Tclose(dtype) < 0)\n                ^\n\u001b[0m  CC       h5tools_dump.lo\n\u001b[91mh5tools_dump.c: In function 'h5tools_dump_region_data_blocks':\nh5tools_dump.c:616:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(dimension_break, H5E_tools_min_id_g, \"H5Sget_select_hyper_nblocks failed\");\n         ^\nh5tools_dump.c:621:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(dimension_break, H5E_tools_min_id_g, \"H5Sget_simple_extent_ndims failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:642:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"Could not allocate buffer for ptdata\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:647:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"H5Rget_select_hyper_blocklist failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:673:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"H5Dget_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:675:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"H5Tget_native_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:736:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:739:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_print_region_data_points':\n\u001b[0m\u001b[91mh5tools_dump.c:813:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((dims1 = (hsize_t *) HDmalloc(sizeof(hsize_t) * ndims)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools_dump.c:816:5: warning: conversion to 'hsize_t' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n     dims1[0] = npoints;\n     ^\n\u001b[0m\u001b[91mh5tools_dump.c:822:32: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     if((type_size = H5Tget_size(type_id)) == 0)\n                                ^\n\u001b[0m\u001b[91mh5tools_dump.c:825:5: warning: conversion to 'long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     if((region_buf = HDmalloc(type_size * (size_t)npoints)) == NULL)\n     ^\n\u001b[0m\u001b[91mh5tools_dump.c:832:5: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     ctx.ndims = ndims;\n     ^\n\u001b[0m\u001b[91mh5tools_dump.c:838:25: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n     for (jndx = 0; jndx < npoints; jndx++, elmtno++) {\n                         ^\n\u001b[0m\u001b[91mh5tools_dump.c:853:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n         if (jndx == npoints - 1)\n                  ^\n\u001b[0m\u001b[91mh5tools_dump.c:859:9: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         ctx.sm_pos = jndx * ndims;\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:861:33: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             ctx.size_last_dim = (int) (ctx.p_max_idx[ctx.ndims - 1]);\n                                 ^\n\u001b[0m\u001b[91mh5tools_dump.c:874:32: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n                                ((char*)region_buf + jndx * type_size), &ctx);\n                                ^\n\u001b[0m\u001b[91mh5tools_dump.c:876:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n         if (jndx + 1 < npoints || (region_flags & END_OF_DATA) == 0)\n                      ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_dump_region_data_points':\n\u001b[0m\u001b[91mh5tools_dump.c:941:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(dimension_break, H5E_tools_min_id_g, \"H5Sget_select_elem_npoints failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:945:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         H5E_THROW(dimension_break, H5E_tools_min_id_g, \"H5Sget_simple_extent_ndims failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:961:26: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n     alloc_size = npoints * ndims * sizeof(ptdata[0]);\n                          ^\n\u001b[0m\u001b[91mh5tools_dump.c:964:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"Could not allocate buffer for ptdata\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:968:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"H5Sget_select_elem_pointlist failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:989:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"H5Dget_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:992:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HGOTO_ERROR(dimension_break, H5E_tools_min_id_g, \"H5Tget_native_type failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:1056:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c:1059:9: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]\n         HERROR(H5E_tools_g, H5E_tools_min_id_g, \"H5Tclose failed\");\n         ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_display_simple_subset':\n\u001b[0m\u001b[91mh5tools_dump.c:1381:50: warning: conversion to 'int' from 'unsigned int' may change the sign of the result [-Wsign-conversion]\n             current_outer_dim = (ctx->ndims - 2) - 1;\n                                                  ^\n\u001b[0m\u001b[91mh5tools_dump.c:1384:40: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             for (i = current_outer_dim + 1; i < ctx->ndims; i++) {\n                                        ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_dump_simple_dset':\n\u001b[0m\u001b[91mh5tools_dump.c:1539:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     ctx->ndims = H5Sget_simple_extent_ndims(f_space);\n                                            ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_dump_simple_mem':\n\u001b[0m\u001b[91mh5tools_dump.c:1688:44: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n     ctx->ndims = H5Sget_simple_extent_ndims(space);\n                                            ^\n\u001b[0m\u001b[91mh5tools_dump.c:1706:30: warning: conversion to 'hsize_t' from 'int' may change the sign of the result [-Wsign-conversion]\n         ctx->size_last_dim = (int) (ctx->p_max_idx[ctx->ndims - 1]);\n                              ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_print_datatype':\n\u001b[0m\u001b[91mh5tools_dump.c:1917:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch (type_class) {\n     ^\nh5tools_dump.c:1917:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mIn file included from h5tools_dump.c:31:0:\nh5tools_dump.c: In function 'h5tools_print_enum':\n\u001b[0m\u001b[91m../../src/H5private.h:1233:34: warning: conversion to 'int' from 'size_t' may alter its value [-Wconversion]\n     #define HDstrlen(S)    strlen(S)\n                                  ^\nh5tools_dump.c:2663:18: note: in expansion of macro 'HDstrlen'\n         nchars = HDstrlen(name[i]);\n                  ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_dump_dcpl':\n\u001b[0m\u001b[91mh5tools_dump.c:3354:5: warning: enumeration value 'H5D_FILL_TIME_ERROR' not handled in switch [-Wswitch-enum]\n     switch(ft) {\n     ^\n\u001b[0m\u001b[91mh5tools_dump.c:3411:5: warning: enumeration value 'H5D_ALLOC_TIME_ERROR' not handled in switch [-Wswitch-enum]\n     switch(at) {\n     ^\nh5tools_dump.c:3411:5: warning: enumeration value 'H5D_ALLOC_TIME_DEFAULT' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_dump_comment':\n\u001b[0m\u001b[91mh5tools_dump.c:3476:13: warning: conversion to 'size_t' from 'ssize_t' may change the sign of the result [-Wsign-conversion]\n             cmt_bufsize = H5Oget_comment(obj_id, comment, cmt_bufsize);\n             ^\n\u001b[0m\u001b[91mh5tools_dump.c: In function 'h5tools_dump_region_data_points':\n\u001b[0m\u001b[91mh5tools_dump.c:1055:16: warning: 'type_id' may be used uninitialized in this function [-Wmaybe-uninitialized]\n     if(H5Tclose(type_id) < 0)\n                ^\n\u001b[0m\u001b[91mh5tools_dump.c:1058:16: warning: 'dtype' may be used uninitialized in this function [-Wmaybe-uninitialized]\n     if(H5Tclose(dtype) < 0)\n                ^\n\u001b[0m  CC       h5tools_str.lo\n\u001b[91mh5tools_str.c: In function 'h5tools_str_append':\nh5tools_str.c:144:9: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n         nchars = HDvsnprintf(str->s + str->len, avail, fmt, ap);\n         ^\nh5tools_str.c:144:9: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n\u001b[0m\u001b[91mh5tools_str.c:174:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             size_t newsize = MAX(str->len + nchars + 1, 2 * str->nalloc);\n             ^\nh5tools_str.c:174:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mh5tools_str.c:182:13: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             str->len += nchars;\n             ^\n\u001b[0m\u001b[91mh5tools_str.c: In function 'h5tools_str_dump_region_blocks':\n\u001b[0m\u001b[91mh5tools_str.c:451:38: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         alloc_size = nblocks * ndims * 2 * sizeof(ptdata[0]);\n                                      ^\n\u001b[0m\u001b[91mh5tools_str.c: In function 'h5tools_str_dump_region_points':\n\u001b[0m\u001b[91mh5tools_str.c:512:30: warning: conversion to 'long long unsigned int' from 'hssize_t' may change the sign of the result [-Wsign-conversion]\n         alloc_size = npoints * ndims * sizeof(ptdata[0]);\n                              ^\n\u001b[0m\u001b[91mh5tools_str.c: At top level:\n\u001b[0m\u001b[91mh5tools_str.c:612:1: warning: no previous prototype for 'h5tools_str_indent' [-Wmissing-prototypes]\n h5tools_str_indent(h5tools_str_t *str, const h5tool_format_t *info,\n ^\n\u001b[0m\u001b[91mh5tools_str.c: In function 'h5tools_str_sprint':\n\u001b[0m\u001b[91mh5tools_str.c:743:21: warning: implicit conversion from 'float' to 'double' when passing argument to function [-Wdouble-promotion]\n                     h5tools_str_append(str, OPT(info->fmt_float, \"%g\"), tempfloat);\n                     ^\n\u001b[0m\u001b[91mh5tools_str.c:794:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                             if (info->str_repeat > 0) while (i + j < size && s[i] == s[i + j])\n                             ^\nh5tools_str.c:794:29: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n\u001b[0m\u001b[91mh5tools_str.c:825:40: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                                 i += j - 1;\n                                        ^\n\u001b[0m\u001b[91mh5tools_str.c:849:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(unsigned char))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:852:56: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                                 tempuchar = (tempuchar >> packed_data_offset) & packed_data_mask;\n                                                        ^\n\u001b[0m\u001b[91mh5tools_str.c:852:79: warning: conversion to 'unsigned char' from 'long long unsigned int' may alter its value [-Wconversion]\n                                 tempuchar = (tempuchar >> packed_data_offset) & packed_data_mask;\n                                                                               ^\n\u001b[0m\u001b[91mh5tools_str.c:861:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(char))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:864:54: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                                 tempchar = (tempchar >> packed_data_offset) & packed_data_mask;\n                                                      ^\n\u001b[0m\u001b[91mh5tools_str.c:864:77: warning: conversion to 'signed char' from 'long long unsigned int' may alter its value [-Wconversion]\n                                 tempchar = (tempchar >> packed_data_offset) & packed_data_mask;\n                                                                             ^\n\u001b[0m\u001b[91mh5tools_str.c:878:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(unsigned int))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:881:77: warning: conversion to 'unsigned int' from 'long long unsigned int' may alter its value [-Wconversion]\n                                 tempuint = (tempuint >> packed_data_offset) & packed_data_mask;\n                                                                             ^\n\u001b[0m\u001b[91mh5tools_str.c:889:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(int))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:892:52: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                                 tempint = (tempint >> packed_data_offset) & packed_data_mask;\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:892:75: warning: conversion to 'int' from 'long long unsigned int' may alter its value [-Wconversion]\n                                 tempint = (tempint >> packed_data_offset) & packed_data_mask;\n                                                                           ^\n\u001b[0m\u001b[91mh5tools_str.c:904:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(unsigned short))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:907:58: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                                 tempushort = (tempushort >> packed_data_offset) & packed_data_mask;\n                                                          ^\n\u001b[0m\u001b[91mh5tools_str.c:907:81: warning: conversion to 'short unsigned int' from 'long long unsigned int' may alter its value [-Wconversion]\n                                 tempushort = (tempushort >> packed_data_offset) & packed_data_mask;\n                                                                                 ^\n\u001b[0m\u001b[91mh5tools_str.c:917:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(short))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:920:56: warning: conversion to 'long long unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                                 tempshort = (tempshort >> packed_data_offset) & packed_data_mask;\n                                                        ^\n\u001b[0m\u001b[91mh5tools_str.c:920:79: warning: conversion to 'short int' from 'long long unsigned int' may alter its value [-Wconversion]\n                                 tempshort = (tempshort >> packed_data_offset) & packed_data_mask;\n                                                                               ^\n\u001b[0m\u001b[91mh5tools_str.c:930:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(unsigned long))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:941:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(long))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:944:54: warning: conversion to 'long long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]\n                                 templong = (templong >> packed_data_offset) & packed_data_mask;\n                                                      ^\n\u001b[0m\u001b[91mh5tools_str.c:944:77: warning: conversion to 'long int' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n                                 templong = (templong >> packed_data_offset) & packed_data_mask;\n                                                                             ^\n\u001b[0m\u001b[91mh5tools_str.c:954:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(unsigned long long))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:965:52: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n                             if (packed_data_offset >= 8 * sizeof(long long))\n                                                    ^\n\u001b[0m\u001b[91mh5tools_str.c:968:56: warning: conversion to 'long long unsigned int' from 'long long int' may change the sign of the result [-Wsign-conversion]\n                                 templlong = (templlong >> packed_data_offset) & packed_data_mask;\n                                                        ^\n\u001b[0m\u001b[91mh5tools_str.c:968:79: warning: conversion to 'long long int' from 'long long unsigned int' may change the sign of the result [-Wsign-conversion]\n                                 templlong = (templlong >> packed_data_offset) & packed_data_mask;\n                                                                               ^\n\u001b[0m\u001b[91mh5tools_str.c:978:45: warning: conversion to 'unsigned int' from 'int' may change the sign of the result [-Wsign-conversion]\n                     nmembs = H5Tget_nmembers(type);\n                                             ^\n\u001b[0m\u001b[91mh5tools_str.c:1055:29: warning: enumeration value 'H5O_TYPE_UNKNOWN' not handled in switch [-Wswitch-enum]\n                             switch (oi.type) {\n                             ^\nh5tools_str.c:1055:29: warning: enumeration value 'H5O_TYPE_NTYPES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5tools_str.c:736:9: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n         switch (type_class) {\n         ^\nh5tools_str.c:736:9: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nh5tools_str.c:736:9: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nh5tools_str.c:736:9: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nh5tools_str.c:736:9: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5tools_str.c: In function 'h5tools_str_replace':\n\u001b[0m\u001b[91mh5tools_str.c:1404:10: warning: request for implicit conversion from 'void *' to 'char *' not permitted in C++ [-Wc++-compat]\n   newstr = HDmalloc ( HDstrlen ( oldstr ) - HDstrlen ( substr ) + HDstrlen ( replacement ) + 1 );\n          ^\n\u001b[0m\u001b[91mIn file included from h5tools_str.c:27:0:\nh5tools_str.c:1410:40: warning: conversion to 'size_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n         HDmemcpy ( newstr, oldstr, tok - oldstr );\n                                        ^\n../../src/H5private.h:986:67: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                   ^\n\u001b[0m\u001b[91mh5tools_str.c:1412:148: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]\n         HDmemcpy ( newstr + (tok - oldstr) + HDstrlen( replacement ), tok + HDstrlen ( substr ), HDstrlen ( oldstr ) - HDstrlen ( substr ) - ( tok - oldstr ) );\n                                                                                                                                                    ^\n../../src/H5private.h:986:67: note: in definition of macro 'HDmemcpy'\n     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)\n                                                                   ^\n\u001b[0m\u001b[91mh5tools_str.c: In function 'h5tools_str_len':\nh5tools_str.c:94:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n h5tools_str_len(h5tools_str_t *str)\n ^\n\u001b[0m  CC       h5tools_utils.lo\n\u001b[91mh5tools_utils.c: In function 'parallel_print':\nh5tools_utils.c:89:9: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n         HDvprintf(format, ap);\n         ^\n\u001b[0m\u001b[91mIn file included from h5tools_utils.c:33:0:\nh5tools_utils.c:95:76: warning: conversion to 'size_t' from 'int' may change the sign of the result [-Wsign-conversion]\n             bytes_written = HDvsnprintf(outBuff+outBuffOffset, OUTBUFF_SIZE-outBuffOffset, format, ap);\n                                                                            ^\n../../src/H5private.h:1377:48: note: in definition of macro 'HDvsnprintf'\n     #define HDvsnprintf(S,N,FMT,A) vsnprintf(S,N,FMT,A)\n                                                ^\nh5tools_utils.c:95:13: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n             bytes_written = HDvsnprintf(outBuff+outBuffOffset, OUTBUFF_SIZE-outBuffOffset, format, ap);\n             ^\nh5tools_utils.c:95:13: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n\u001b[0m\u001b[91mh5tools_utils.c:121:21: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n                     bytes_written = HDvfprintf(overflow_file, format, ap);\n                     ^\nh5tools_utils.c:127:13: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n             bytes_written = HDvfprintf(overflow_file, format, ap);\n             ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'error_msg':\n\u001b[0m\u001b[91mh5tools_utils.c:159:5: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n     HDvfprintf(rawerrorstream, fmt, ap);\n     ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'warn_msg':\n\u001b[0m\u001b[91mh5tools_utils.c:190:5: warning: function might be possible candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]\n     HDvfprintf(rawerrorstream, fmt, ap);\n     ^\n\u001b[0m\u001b[91mIn file included from h5tools_utils.c:31:0:\nh5tools_utils.c: In function 'print_version':\n\u001b[0m\u001b[91mh5tools_utils.c:423:13: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n            ((char *)H5_VERS_SUBRELEASE)[0] ? \"-\" : \"\", H5_VERS_SUBRELEASE);\n             ^\nh5tools.h:41:64: note: in definition of macro 'PRINTSTREAM'\n #define PRINTSTREAM(S, F, ...)   if(S != NULL) HDfprintf(S, F, __VA_ARGS__)\n                                                                ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'find_objs_cb':\n\u001b[0m\u001b[91mh5tools_utils.c:582:5: warning: enumeration value 'H5O_TYPE_UNKNOWN' not handled in switch [-Wswitch-enum]\n     switch(oinfo->type) {\n     ^\nh5tools_utils.c:582:5: warning: enumeration value 'H5O_TYPE_NTYPES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'add_obj':\n\u001b[0m\u001b[91mh5tools_utils.c:701:21: warning: conversion to 'unsigned int' from 'size_t' may alter its value [-Wconversion]\n     u = table->nobjs++;\n                     ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'h5tools_getenv_update_hyperslab_bufsize':\n\u001b[0m\u001b[91mh5tools_utils.c:934:55: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n         H5TOOLS_BUFSIZE = hyperslab_bufsize_mb * 1024 * 1024;\n                                                       ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'search_obj':\n\u001b[0m\u001b[91mh5tools_utils.c:548:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n search_obj(table_t *table, haddr_t objno)\n ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'h5tools_getprogname':\n\u001b[0m\u001b[91mh5tools_utils.c:895:12: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n const char*h5tools_getprogname(void)\n            ^\n\u001b[0m\u001b[91mh5tools_utils.c: In function 'h5tools_getstatus':\n\u001b[0m\u001b[91mh5tools_utils.c:900:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int h5tools_getstatus(void)\n     ^\n\u001b[0m  CC       h5diff.lo\n\u001b[91mh5diff.c: In function 'h5diff':\n\u001b[0m\u001b[91mh5diff.c:662:13: warning: implicit declaration of function 'asprintf' [-Wimplicit-function-declaration]\n             HDasprintf(&obj1fullname, \"/%s\", objname1);\n             ^\nh5diff.c:662:13: warning: nested extern declaration of 'asprintf' [-Wnested-externs]\n\u001b[0m\u001b[91mh5diff.c: In function 'print_objname':\nh5diff.c:33:5: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n int print_objname (diff_opt_t * options, hsize_t nfound)\n     ^\n\u001b[0m\u001b[91mh5diff.c: In function 'h5diff':\n\u001b[0m\u001b[91mh5diff.c:912:38: warning: 'info2_lp' may be used uninitialized in this function [-Wmaybe-uninitialized]\n                 size_t idx = info2_lp->nused - 1;\n                                      ^\n\u001b[0m\u001b[91mh5diff.c:867:38: warning: 'info1_lp' may be used uninitialized in this function [-Wmaybe-uninitialized]\n                 size_t idx = info1_lp->nused - 1;\n                                      ^\n\u001b[0m  CC       h5diff_array.lo\n\u001b[91mh5diff_array.c: In function 'diff_datum':\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:1986:17: note: in expansion of macro 'PER'\n                 PER(f1,f2);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:1986:17: note: in expansion of macro 'PER'\n                 PER(f1,f2);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:1986:17: note: in expansion of macro 'PER'\n                 PER(f1,f2);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2018:17: note: in expansion of macro 'PER'\n                 PER(f1,f2);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2018:17: note: in expansion of macro 'PER'\n                 PER(f1,f2);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2018:17: note: in expansion of macro 'PER'\n                 PER(f1,f2);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2158:21: note: in expansion of macro 'PER'\n                     PER(temp1_float,temp2_float);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2158:21: note: in expansion of macro 'PER'\n                     PER(temp1_float,temp2_float);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2158:21: note: in expansion of macro 'PER'\n                     PER(temp1_float,temp2_float);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2223:21: note: in expansion of macro 'PER'\n                     PER(temp1_float,temp2_float);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2223:21: note: in expansion of macro 'PER'\n                     PER(temp1_float,temp2_float);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2223:21: note: in expansion of macro 'PER'\n                     PER(temp1_float,temp2_float);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2370:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2370:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2370:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2435:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2435:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2435:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2584:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2584:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2584:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:2648:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:2648:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:2648:21: note: in expansion of macro 'PER'\n                     PER(temp1_double,temp2_double);\n                     ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'character_compare_opt':\n\u001b[0m\u001b[91mh5diff_array.c:3047:24: warning: variable 'both_zero' set but not used [-Wunused-but-set-variable]\n     hbool_t            both_zero;\n                        ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'diff_float':\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:3225:17: note: in expansion of macro 'PER'\n                 PER(temp1_float,temp2_float);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:3225:17: note: in expansion of macro 'PER'\n                 PER(temp1_float,temp2_float);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:3225:17: note: in expansion of macro 'PER'\n                 PER(temp1_float,temp2_float);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:3299:17: note: in expansion of macro 'PER'\n                 PER(temp1_float,temp2_float);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:3299:17: note: in expansion of macro 'PER'\n                 PER(temp1_float,temp2_float);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:3299:17: note: in expansion of macro 'PER'\n                 PER(temp1_float,temp2_float);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'diff_double':\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:3498:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:3498:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:3498:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:3572:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:3572:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:3572:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'diff_ldouble':\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:3781:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:3781:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:3781:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:3855:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:3855:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:3855:17: note: in expansion of macro 'PER'\n                 PER(temp1_double,temp2_double);\n                 ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'diff_ullong':\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:5626:10: note: in expansion of macro 'PER'\n          PER(f1,f2);\n          ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:5626:10: note: in expansion of macro 'PER'\n          PER(f1,f2);\n          ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:5626:10: note: in expansion of macro 'PER'\n          PER(f1,f2);\n          ^\n\u001b[0m\u001b[91mh5diff_array.c:109:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n          ^\nh5diff_array.c:5671:10: note: in expansion of macro 'PER'\n          PER(f1,f2);\n          ^\n\u001b[0m\u001b[91mh5diff_array.c:109:22: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 == (A) && 0 == (B))                         \\\n                      ^\nh5diff_array.c:5671:10: note: in expansion of macro 'PER'\n          PER(f1,f2);\n          ^\n\u001b[0m\u001b[91mh5diff_array.c:111:10: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if(0 != (A))                                     \\\n          ^\nh5diff_array.c:5671:10: note: in expansion of macro 'PER'\n          PER(f1,f2);\n          ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'equal_double':\n\u001b[0m\u001b[91mh5diff_array.c:5831:15: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if (value == expected)\n               ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'equal_ldouble':\n\u001b[0m\u001b[91mh5diff_array.c:5884:15: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if (value == expected)\n               ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'equal_float':\n\u001b[0m\u001b[91mh5diff_array.c:5941:15: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n     if (value == expected)\n               ^\n\u001b[0m\u001b[91mh5diff_array.c: In function 'my_isnan':\n\u001b[0m\u001b[91mh5diff_array.c:5982:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         retval = (x!=x);\n                    ^\n\u001b[0m\u001b[91mh5diff_array.c:5989:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         retval = (x!=x);\n                    ^\n\u001b[0m\u001b[91mh5diff_array.c:5997:20: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n         retval = (x!=x);\n                    ^\n\u001b[0m  CC       h5diff_attr.lo\n  CC       h5diff_dset.lo\n\u001b[91mh5diff_dset.c: In function 'diff_can_type':\nh5diff_dset.c:677:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch (tclass1)\n     ^\nh5diff_dset.c:677:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nh5diff_dset.c:677:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m  CC       h5diff_util.lo\n\u001b[91mh5diff_util.c: In function 'print_type':\nh5diff_util.c:79:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch (H5Tget_class(type))\n     ^\nh5diff_util.c:79:5: warning: enumeration value 'H5T_TIME' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_STRING' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_BITFIELD' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_OPAQUE' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_COMPOUND' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_REFERENCE' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_ENUM' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_VLEN' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_ARRAY' not handled in switch [-Wswitch-enum]\nh5diff_util.c:79:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\nh5diff_util.c: In function 'get_type':\nh5diff_util.c:211:5: warning: enumeration value 'H5TRAV_TYPE_UNKNOWN' not handled in switch [-Wswitch-enum]\n     switch(type) {\n     ^\nh5diff_util.c: In function 'get_sign':\nh5diff_util.c:243:5: warning: enumeration value 'H5T_SGN_ERROR' not handled in switch [-Wswitch-enum]\n     switch (sign)\n     ^\nh5diff_util.c:243:5: warning: enumeration value 'H5T_NSGN' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5diff_util.c: In function 'get_class':\nh5diff_util.c:269:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch (tclass)\n     ^\nh5diff_util.c:269:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5diff_util.c: In function 'diff_basename':\nh5diff_util.c:178:1: warning: function might be candidate for attribute 'pure' [-Wsuggest-attribute=pure]\n diff_basename(const char *name)\n ^\n\u001b[0m\u001b[91mh5diff_util.c: In function 'get_type':\nh5diff_util.c:209:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n get_type(h5trav_type_t type)\n ^\n\u001b[0m\u001b[91mh5diff_util.c: In function 'get_sign':\n\u001b[0m\u001b[91mh5diff_util.c:241:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n get_sign(H5T_sign_t sign)\n ^\n\u001b[0m\u001b[91mh5diff_util.c: In function 'get_class':\n\u001b[0m\u001b[91mh5diff_util.c:267:1: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n get_class(H5T_class_t tclass)\n ^\n\u001b[0m  CC       h5trav.lo\n\u001b[91mh5trav.c: In function 'trav_print_visit_obj':\n\u001b[0m\u001b[91mh5trav.c:1015:106: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             H5Aiterate_by_name(print_udata->fid, path, trav_index_by, trav_index_order, NULL, trav_attr, (void *)path, H5P_DEFAULT);\n                                                                                                          ^\n\u001b[0m\u001b[91mh5trav.c: In function 'h5trav_getindex':\n\u001b[0m\u001b[91mh5trav.c:490:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n h5trav_getindex(const trav_info_t *info, const char *obj)\n ^\n\u001b[0m\u001b[91mh5trav.c: In function 'h5trav_getindext':\n\u001b[0m\u001b[91mh5trav.c:681:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n h5trav_getindext(const char *name, const trav_table_t *table)\n ^\n\u001b[0m\u001b[91mh5trav.c: In function 'symlink_is_visited':\n\u001b[0m\u001b[91mh5trav.c:1231:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n symlink_is_visited(symlink_trav_t *visited, H5L_type_t type, const char *file, const char *path)\n ^\n\u001b[0m  CC       h5tools_filters.lo\n\u001b[91mh5tools_filters.c: In function 'h5tools_can_encode':\n\u001b[0m\u001b[91mh5tools_filters.c:170:5: warning: function might be candidate for attribute 'const' [-Wsuggest-attribute=const]\n int h5tools_can_encode(H5Z_filter_t filtn) {\n     ^\n\u001b[0m  CC       h5tools_ref.lo\n\u001b[91mIn file included from h5tools_ref.c:19:0:\nh5tools_ref.c: In function 'free_ref_path_info':\n\u001b[0m\u001b[91mh5tools_ref.c:68:12: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n     HDfree((void *)node->path);\n            ^\n../../src/H5private.h:731:31: note: in definition of macro 'HDfree'\n     #define HDfree(M)    free(M)\n                               ^\n\u001b[0m\u001b[91mh5tools_ref.c: In function 'ref_path_table_put':\n\u001b[0m\u001b[91mh5tools_ref.c:221:18: warning: request for implicit conversion from 'void *' to 'struct ref_path_node_t *' not permitted in C++ [-Wc++-compat]\n     if((new_node = HDmalloc(sizeof(ref_path_node_t))) == NULL)\n                  ^\n\u001b[0m\u001b[91mh5tools_ref.c: In function 'lookup_ref_path':\n\u001b[0m\u001b[91mh5tools_ref.c:303:10: warning: request for implicit conversion from 'void *' to 'struct ref_path_node_t *' not permitted in C++ [-Wc++-compat]\n     node = H5SL_search(ref_path_table, &ref);\n          ^\n\u001b[0m  CC       h5tools_type.lo\n\u001b[91mh5tools_type.c: In function 'h5tools_get_little_endian_type':\nh5tools_type.c:78:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch( type_class )\n     ^\nh5tools_type.c:78:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m\u001b[91mh5tools_type.c: In function 'h5tools_get_big_endian_type':\n\u001b[0m\u001b[91mh5tools_type.c:155:5: warning: enumeration value 'H5T_NO_CLASS' not handled in switch [-Wswitch-enum]\n     switch( type_class )\n     ^\nh5tools_type.c:155:5: warning: enumeration value 'H5T_NCLASSES' not handled in switch [-Wswitch-enum]\n\u001b[0m  CCLD     libh5tools.la\nmake[3]: Leaving directory `/nanopolish/hdf5-1.8.14/tools/lib'\nMaking all in h5diff\nmake[3]: Entering directory `/nanopolish/hdf5-1.8.14/tools/h5diff'\n  CC       h5diff_main.o\n\u001b[91mh5diff_main.c: In function 'h5diff_exit':\n\u001b[0m\u001b[91mh5diff_main.c:139:6: warning: function might be candidate for attribute 'noreturn' [-Wsuggest-attribute=noreturn]\n void h5diff_exit(int status)\n      ^\n\u001b[0m  CC       h5diff_common.o\n\u001b[91mh5diff_common.c: In function 'parse_command_line':\n\u001b[0m\u001b[91mh5diff_common.c:191:38: warning: cast discards '__attribute__((const))' qualifier from pointer target type [-Wcast-qual]\n             exclude_node->obj_path = (char*)opt_arg;\n                                      ^\n\u001b[0m\u001b[91mh5diff_common.c:221:32: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if (options->delta == 0)\n                                ^\n\u001b[0m\u001b[91mh5diff_common.c:238:34: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\n             if (options->percent == 0)\n                                  ^\n\u001b[0m\u001b[91mh5diff_common.c:252:34: warning: conversion to 'hsize_t' from 'long int' may change the sign of the result [-Wsign-conversion]\n             options->count = atol( opt_arg );\n                                  ^\n\u001b[0m\u001b[91mh5diff_common.c: In function 'check_n_input':\n\u001b[0m\u001b[91mh5diff_common.c:362:1: warning: function might be candidate for attribute 'pure' if it is known to return normally [-Wsuggest-attribute=pure]\n check_n_input( const char *str )\n ^\n\u001b[0m  CCLD     h5diff\n  CC       h5diffgentest.o\n\u001b[91mh5diffgentest.c: In function 'test_basic':\n\u001b[0m\u001b[91mh5diffgentest.c:321:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         double data2[3][2] = {{0,1.1},{1.01,1.001},{0,1}};\n         ^\nh5diffgentest.c:321:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:321:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mh5diffgentest.c:396:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         double data13[3][2] ={{0.0000000000000000, 0.0000000000000001},{0.0000000000000001, 0.0000000000000000},{0.00000000000000033, 0.0000000000000001}};\n         ^\nh5diffgentest.c:396:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:396:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:396:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:396:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:396:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mh5diffgentest.c:397:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n         double data14[3][2] ={{0.0000000000000000, 0.0000000000000004},{0.0000000000000002, 0.0000000000000001},{0.0000000000000001, 0.00000000000000000}};\n         ^\nh5diffgentest.c:397:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:397:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:397:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:397:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mh5diffgentest.c:397:9: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n\u001b[0m\u001b[91mh5diffgentest.c:488:48: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n         data19[0] = data19[1] = data19[2] = log(0);\n                                                ^\n\u001b[0m\u001b[91mh5diffgentest.c:489:45: warning: conversion to 'float' from 'double' may alter its value [-Wconversion]\n         data19[3] = data19[4] = data19[5] = -log(0);\n                                             ^\n\u001b[0m\u001b[91mh5diffgentest.c: In function 'test_attributes_verbose_level':\n\u001b[0m\u001b[91mh5diffgentest.c:1028:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     float  f1_attr_fdata[2]= {1.1,2.2};    /* float */\n     ^\nh5diffgentest.c:1028:5: warning: conversion to 'float' alters 'double' constant value [-Wconversion]\nh5diffgentest.c:1028:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:1028:5: warning: conversion to 'float' alters 'double' constant value [-Wconversion]\n\u001b[0m\u001b[91mh5diffgentest.c:1031:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\n     float  f2_attr_fdata[2]= {2.1,3.2};    /* float */\n     ^\nh5diffgentest.c:1031:5: warning: conversion to 'float' alters 'double' constant value [-Wconversion]\nh5diffgentest.c:1031:5: warning: unsuffixed float constant [-Wunsuffixed-float-constants]\nh5diffgentest.c:1031:5: warning: conversion to 'float' alters 'double' constant value [-Wconversion]\n\u001b[0m\u001b[91mh5diffgentest.c: In function 'test_comp_vlen_strings':\n\u001b[0m\u001b[91mh5diffgentest.c:3696:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp1_buf.str_vlen = comp1_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3697:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp2_buf.str_vlen = comp2_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3698:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp3_buf.str_vlen = comp3_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3699:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp4_buf.str_vlen = comp4_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3700:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp5_buf.str_vlen = comp5_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3701:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp6_buf.str_vlen = comp6_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3702:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp7_buf.str_vlen = comp7_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3703:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp8_buf.str_vlen = comp8_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3704:52: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n     comp9_buf.str_vlen = comp9_buf.str_vlen_repeat = vlen_str_buf;\n                                                    ^\n\u001b[0m\u001b[91mh5diffgentest.c:3740:73: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n         comp1_buf.str_array_vlen[i] = comp1_buf.str_vlen_array_again[i] = vlen_str_array_buf[i];\n                                                                         ^\n\u001b[0m\u001b[91mh5diffgentest.c:3741:73: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n         comp2_buf.str_array_vlen[i] = comp2_buf.str_vlen_array_again[i] = vlen_str_array_buf[i];\n                                                                         ^\n\u001b[0m\u001b[91mh5diffgentest.c:3742:73: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n         comp3_buf.str_array_vlen[i] = comp3_buf.str_vlen_array_again[i] = vlen_str_array_buf[i];\n                                                                         ^\n\u001b[0m\u001b[91mh5diffgentest.c:3743:73: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n         comp4_buf.str_array_vlen[i] = comp4_buf.str_vlen_array_again[i] = vlen_str_array_buf[i];\n                                                                         ^\n\u001b[0m\u001b[91mh5diffgentest.c:3744:73: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n         comp5_buf.str_array_vlen[i] = comp5_buf.str_vlen_array_again[i] = vlen_str_array_buf[i];\n                                                                         ^\n\u001b[0m\u001b[91mh5diffgentest.c:3745:73: warning: assignment discards 'const' qualifier from pointer target type [enabled by default]\n         comp6_buf.str_array_vlen[i] = comp6_buf.str_vlen_array_again[i] = vlen_str_array_buf[i];\n                          ","stderr":""},"endTime":1672006719430}