{"repository":"https://github.com/dials/dials","dockerfilePath":"Dockerfile","startTime":1672265074807,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/dials/dials'...\n","error":null,"commit":"5bf004bf8f92e891d0008d27b747578f0d35e827"},"originalBuild":{"startTimestamp":1672265076872,"endTimestamp":1672265240897,"error":{"code":"ERR_CHILD_PROCESS_STDIO_MAXBUFFER","cmd":"docker build --no-cache --force-rm -t dials:latest -f /tmp/dinghy-analysis/dials/dials/Dockerfile ."},"stdout":"Sending build context to Docker daemon  32.59MB\r\r\nStep 1/11 : FROM centos:7 as builder\n ---> eeb6ee3f44bd\nStep 2/11 : RUN yum install -y git\n ---> Running in 4dbb5918551f\nLoaded plugins: fastestmirror, ovl\nDetermining fastest mirrors\n * base: mirror.nsc.liu.se\n * extras: mirror.nsc.liu.se\n * updates: mirror.nsc.liu.se\nResolving Dependencies\n--> Running transaction check\n---> Package git.x86_64 0:1.8.3.1-23.el7_8 will be installed\n--> Processing Dependency: perl-Git = 1.8.3.1-23.el7_8 for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl >= 5.008 for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: rsync for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(warnings) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(vars) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(strict) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(lib) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Term::ReadKey) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Git) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Getopt::Long) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::stat) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Temp) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Spec) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Path) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Find) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Copy) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(File::Basename) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Exporter) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: perl(Error) for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: openssh-clients for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: less for package: git-1.8.3.1-23.el7_8.x86_64\n--> Processing Dependency: /usr/bin/perl for package: git-1.8.3.1-23.el7_8.x86_64\n--> Running transaction check\n---> Package less.x86_64 0:458-9.el7 will be installed\n--> Processing Dependency: groff-base for package: less-458-9.el7.x86_64\n---> Package openssh-clients.x86_64 0:7.4p1-22.el7_9 will be installed\n--> Processing Dependency: openssh = 7.4p1-22.el7_9 for package: openssh-clients-7.4p1-22.el7_9.x86_64\n--> Processing Dependency: fipscheck-lib(x86-64) >= 1.3.0 for package: openssh-clients-7.4p1-22.el7_9.x86_64\n--> Processing Dependency: libfipscheck.so.1()(64bit) for package: openssh-clients-7.4p1-22.el7_9.x86_64\n--> Processing Dependency: libedit.so.0()(64bit) for package: openssh-clients-7.4p1-22.el7_9.x86_64\n---> Package perl.x86_64 4:5.16.3-299.el7_9 will be installed\n--> Processing Dependency: perl-libs = 4:5.16.3-299.el7_9 for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Socket) >= 1.3 for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Scalar::Util) >= 1.10 for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl-macros for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl-libs for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(threads::shared) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(threads) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(constant) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Time::Local) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Time::HiRes) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Storable) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Socket) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Scalar::Util) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Pod::Simple::XHTML) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Pod::Simple::Search) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Filter::Util::Call) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: perl(Carp) for package: 4:perl-5.16.3-299.el7_9.x86_64\n--> Processing Dependency: libperl.so()(64bit) for package: 4:perl-5.16.3-299.el7_9.x86_64\n---> Package perl-Error.noarch 1:0.17020-2.el7 will be installed\n---> Package perl-Exporter.noarch 0:5.68-3.el7 will be installed\n---> Package perl-File-Path.noarch 0:2.09-2.el7 will be installed\n---> Package perl-File-Temp.noarch 0:0.23.01-3.el7 will be installed\n---> Package perl-Getopt-Long.noarch 0:2.40-3.el7 will be installed\n--> Processing Dependency: perl(Pod::Usage) >= 1.14 for package: perl-Getopt-Long-2.40-3.el7.noarch\n--> Processing Dependency: perl(Text::ParseWords) for package: perl-Getopt-Long-2.40-3.el7.noarch\n---> Package perl-Git.noarch 0:1.8.3.1-23.el7_8 will be installed\n---> Package perl-PathTools.x86_64 0:3.40-5.el7 will be installed\n---> Package perl-TermReadKey.x86_64 0:2.30-20.el7 will be installed\n---> Package rsync.x86_64 0:3.1.2-12.el7_9 will be installed\n--> Running transaction check\n---> Package fipscheck-lib.x86_64 0:1.4.1-6.el7 will be installed\n--> Processing Dependency: /usr/bin/fipscheck for package: fipscheck-lib-1.4.1-6.el7.x86_64\n---> Package groff-base.x86_64 0:1.22.2-8.el7 will be installed\n---> Package libedit.x86_64 0:3.0-12.20121213cvs.el7 will be installed\n---> Package openssh.x86_64 0:7.4p1-22.el7_9 will be installed\n---> Package perl-Carp.noarch 0:1.26-244.el7 will be installed\n---> Package perl-Filter.x86_64 0:1.49-3.el7 will be installed\n---> Package perl-Pod-Simple.noarch 1:3.28-4.el7 will be installed\n--> Processing Dependency: perl(Pod::Escapes) >= 1.04 for package: 1:perl-Pod-Simple-3.28-4.el7.noarch\n--> Processing Dependency: perl(Encode) for package: 1:perl-Pod-Simple-3.28-4.el7.noarch\n---> Package perl-Pod-Usage.noarch 0:1.63-3.el7 will be installed\n--> Processing Dependency: perl(Pod::Text) >= 3.15 for package: perl-Pod-Usage-1.63-3.el7.noarch\n--> Processing Dependency: perl-Pod-Perldoc for package: perl-Pod-Usage-1.63-3.el7.noarch\n---> Package perl-Scalar-List-Utils.x86_64 0:1.27-248.el7 will be installed\n---> Package perl-Socket.x86_64 0:2.010-5.el7 will be installed\n---> Package perl-Storable.x86_64 0:2.45-3.el7 will be installed\n---> Package perl-Text-ParseWords.noarch 0:3.29-4.el7 will be installed\n---> Package perl-Time-HiRes.x86_64 4:1.9725-3.el7 will be installed\n---> Package perl-Time-Local.noarch 0:1.2300-2.el7 will be installed\n---> Package perl-constant.noarch 0:1.27-2.el7 will be installed\n---> Package perl-libs.x86_64 4:5.16.3-299.el7_9 will be installed\n---> Package perl-macros.x86_64 4:5.16.3-299.el7_9 will be installed\n---> Package perl-threads.x86_64 0:1.87-4.el7 will be installed\n---> Package perl-threads-shared.x86_64 0:1.43-6.el7 will be installed\n--> Running transaction check\n---> Package fipscheck.x86_64 0:1.4.1-6.el7 will be installed\n---> Package perl-Encode.x86_64 0:2.51-7.el7 will be installed\n---> Package perl-Pod-Escapes.noarch 1:1.04-299.el7_9 will be installed\n---> Package perl-Pod-Perldoc.noarch 0:3.20-4.el7 will be installed\n--> Processing Dependency: perl(parent) for package: perl-Pod-Perldoc-3.20-4.el7.noarch\n--> Processing Dependency: perl(HTTP::Tiny) for package: perl-Pod-Perldoc-3.20-4.el7.noarch\n---> Package perl-podlators.noarch 0:2.5.1-3.el7 will be installed\n--> Running transaction check\n---> Package perl-HTTP-Tiny.noarch 0:0.033-3.el7 will be installed\n---> Package perl-parent.noarch 1:0.225-244.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package                   Arch      Version                   Repository  Size\n================================================================================\nInstalling:\n git                       x86_64    1.8.3.1-23.el7_8          base       4.4 M\nInstalling for dependencies:\n fipscheck                 x86_64    1.4.1-6.el7               base        21 k\n fipscheck-lib             x86_64    1.4.1-6.el7               base        11 k\n groff-base                x86_64    1.22.2-8.el7              base       942 k\n less                      x86_64    458-9.el7                 base       120 k\n libedit                   x86_64    3.0-12.20121213cvs.el7    base        92 k\n openssh                   x86_64    7.4p1-22.el7_9            updates    510 k\n openssh-clients           x86_64    7.4p1-22.el7_9            updates    655 k\n perl                      x86_64    4:5.16.3-299.el7_9        updates    8.0 M\n perl-Carp                 noarch    1.26-244.el7              base        19 k\n perl-Encode               x86_64    2.51-7.el7                base       1.5 M\n perl-Error                noarch    1:0.17020-2.el7           base        32 k\n perl-Exporter             noarch    5.68-3.el7                base        28 k\n perl-File-Path            noarch    2.09-2.el7                base        26 k\n perl-File-Temp            noarch    0.23.01-3.el7             base        56 k\n perl-Filter               x86_64    1.49-3.el7                base        76 k\n perl-Getopt-Long          noarch    2.40-3.el7                base        56 k\n perl-Git                  noarch    1.8.3.1-23.el7_8          base        56 k\n perl-HTTP-Tiny            noarch    0.033-3.el7               base        38 k\n perl-PathTools            x86_64    3.40-5.el7                base        82 k\n perl-Pod-Escapes          noarch    1:1.04-299.el7_9          updates     52 k\n perl-Pod-Perldoc          noarch    3.20-4.el7                base        87 k\n perl-Pod-Simple           noarch    1:3.28-4.el7              base       216 k\n perl-Pod-Usage            noarch    1.63-3.el7                base        27 k\n perl-Scalar-List-Utils    x86_64    1.27-248.el7              base        36 k\n perl-Socket               x86_64    2.010-5.el7               base        49 k\n perl-Storable             x86_64    2.45-3.el7                base        77 k\n perl-TermReadKey          x86_64    2.30-20.el7               base        31 k\n perl-Text-ParseWords      noarch    3.29-4.el7                base        14 k\n perl-Time-HiRes           x86_64    4:1.9725-3.el7            base        45 k\n perl-Time-Local           noarch    1.2300-2.el7              base        24 k\n perl-constant             noarch    1.27-2.el7                base        19 k\n perl-libs                 x86_64    4:5.16.3-299.el7_9        updates    690 k\n perl-macros               x86_64    4:5.16.3-299.el7_9        updates     44 k\n perl-parent               noarch    1:0.225-244.el7           base        12 k\n perl-podlators            noarch    2.5.1-3.el7               base       112 k\n perl-threads              x86_64    1.87-4.el7                base        49 k\n perl-threads-shared       x86_64    1.43-6.el7                base        39 k\n rsync                     x86_64    3.1.2-12.el7_9            updates    408 k\n\nTransaction Summary\n================================================================================\nInstall  1 Package (+38 Dependent packages)\n\nTotal download size: 19 M\nInstalled size: 68 M\nDownloading packages:\n\u001b[91mwarning: /var/cache/yum/x86_64/7/base/packages/fipscheck-lib-1.4.1-6.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID f4a80eb5: NOKEY\n\u001b[0mPublic key for fipscheck-lib-1.4.1-6.el7.x86_64.rpm is not installed\nPublic key for openssh-7.4p1-22.el7_9.x86_64.rpm is not installed\n--------------------------------------------------------------------------------\nTotal                                               17 MB/s |  19 MB  00:01     \nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\u001b[91mImporting GPG key 0xF4A80EB5:\n Userid     : \"CentOS-7 Key (CentOS 7 Official Signing Key) <security@centos.org>\"\n Fingerprint: 6341 ab27 53d7 8a78 a7c2 7bb1 24c6 a8a7 f4a8 0eb5\n Package    : centos-release-7-9.2009.0.el7.centos.x86_64 (@CentOS)\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\u001b[0mRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : fipscheck-1.4.1-6.el7.x86_64                                1/39 \n  Installing : fipscheck-lib-1.4.1-6.el7.x86_64                            2/39 \n  Installing : groff-base-1.22.2-8.el7.x86_64                              3/39 \n  Installing : 1:perl-parent-0.225-244.el7.noarch                          4/39 \n  Installing : perl-HTTP-Tiny-0.033-3.el7.noarch                           5/39 \n  Installing : perl-podlators-2.5.1-3.el7.noarch                           6/39 \n  Installing : perl-Pod-Perldoc-3.20-4.el7.noarch                          7/39 \n  Installing : 1:perl-Pod-Escapes-1.04-299.el7_9.noarch                    8/39 \n  Installing : perl-Encode-2.51-7.el7.x86_64                               9/39 \n  Installing : perl-Text-ParseWords-3.29-4.el7.noarch                     10/39 \n  Installing : perl-Pod-Usage-1.63-3.el7.noarch                           11/39 \n  Installing : 4:perl-macros-5.16.3-299.el7_9.x86_64                      12/39 \n  Installing : 4:perl-Time-HiRes-1.9725-3.el7.x86_64                      13/39 \n  Installing : perl-Exporter-5.68-3.el7.noarch                            14/39 \n  Installing : perl-constant-1.27-2.el7.noarch                            15/39 \n  Installing : perl-Socket-2.010-5.el7.x86_64                             16/39 \n  Installing : perl-Time-Local-1.2300-2.el7.noarch                        17/39 \n  Installing : perl-Carp-1.26-244.el7.noarch                              18/39 \n  Installing : perl-Storable-2.45-3.el7.x86_64                            19/39 \n  Installing : perl-PathTools-3.40-5.el7.x86_64                           20/39 \n  Installing : perl-Scalar-List-Utils-1.27-248.el7.x86_64                 21/39 \n  Installing : 1:perl-Pod-Simple-3.28-4.el7.noarch                        22/39 \n  Installing : perl-File-Temp-0.23.01-3.el7.noarch                        23/39 \n  Installing : perl-File-Path-2.09-2.el7.noarch                           24/39 \n  Installing : perl-threads-shared-1.43-6.el7.x86_64                      25/39 \n  Installing : perl-threads-1.87-4.el7.x86_64                             26/39 \n  Installing : perl-Filter-1.49-3.el7.x86_64                              27/39 \n  Installing : 4:perl-libs-5.16.3-299.el7_9.x86_64                        28/39 \n  Installing : perl-Getopt-Long-2.40-3.el7.noarch                         29/39 \n  Installing : 4:perl-5.16.3-299.el7_9.x86_64                             30/39 \n  Installing : 1:perl-Error-0.17020-2.el7.noarch                          31/39 \n  Installing : perl-TermReadKey-2.30-20.el7.x86_64                        32/39 \n  Installing : less-458-9.el7.x86_64                                      33/39 \n  Installing : openssh-7.4p1-22.el7_9.x86_64                              34/39 \n  Installing : libedit-3.0-12.20121213cvs.el7.x86_64                      35/39 \n  Installing : openssh-clients-7.4p1-22.el7_9.x86_64                      36/39 \n  Installing : rsync-3.1.2-12.el7_9.x86_64                                37/39 \n  Installing : perl-Git-1.8.3.1-23.el7_8.noarch                           38/39 \n  Installing : git-1.8.3.1-23.el7_8.x86_64                                39/39 \n  Verifying  : fipscheck-lib-1.4.1-6.el7.x86_64                            1/39 \n  Verifying  : perl-HTTP-Tiny-0.033-3.el7.noarch                           2/39 \n  Verifying  : rsync-3.1.2-12.el7_9.x86_64                                 3/39 \n  Verifying  : perl-threads-shared-1.43-6.el7.x86_64                       4/39 \n  Verifying  : 4:perl-Time-HiRes-1.9725-3.el7.x86_64                       5/39 \n  Verifying  : openssh-clients-7.4p1-22.el7_9.x86_64                       6/39 \n  Verifying  : perl-Exporter-5.68-3.el7.noarch                             7/39 \n  Verifying  : perl-constant-1.27-2.el7.noarch                             8/39 \n  Verifying  : perl-PathTools-3.40-5.el7.x86_64                            9/39 \n  Verifying  : openssh-7.4p1-22.el7_9.x86_64                              10/39 \n  Verifying  : 4:perl-macros-5.16.3-299.el7_9.x86_64                      11/39 \n  Verifying  : git-1.8.3.1-23.el7_8.x86_64                                12/39 \n  Verifying  : 1:perl-parent-0.225-244.el7.noarch                         13/39 \n  Verifying  : perl-Socket-2.010-5.el7.x86_64                             14/39 \n  Verifying  : perl-TermReadKey-2.30-20.el7.x86_64                        15/39 \n  Verifying  : fipscheck-1.4.1-6.el7.x86_64                               16/39 \n  Verifying  : groff-base-1.22.2-8.el7.x86_64                             17/39 \n  Verifying  : perl-File-Temp-0.23.01-3.el7.noarch                        18/39 \n  Verifying  : 1:perl-Pod-Simple-3.28-4.el7.noarch                        19/39 \n  Verifying  : perl-Time-Local-1.2300-2.el7.noarch                        20/39 \n  Verifying  : 1:perl-Pod-Escapes-1.04-299.el7_9.noarch                   21/39 \n  Verifying  : perl-Git-1.8.3.1-23.el7_8.noarch                           22/39 \n  Verifying  : perl-Carp-1.26-244.el7.noarch                              23/39 \n  Verifying  : 1:perl-Error-0.17020-2.el7.noarch                          24/39 \n  Verifying  : perl-Storable-2.45-3.el7.x86_64                            25/39 \n  Verifying  : perl-Scalar-List-Utils-1.27-248.el7.x86_64                 26/39 \n  Verifying  : perl-Pod-Usage-1.63-3.el7.noarch                           27/39 \n  Verifying  : perl-Encode-2.51-7.el7.x86_64                              28/39 \n  Verifying  : perl-Pod-Perldoc-3.20-4.el7.noarch                         29/39 \n  Verifying  : perl-podlators-2.5.1-3.el7.noarch                          30/39 \n  Verifying  : 4:perl-5.16.3-299.el7_9.x86_64                             31/39 \n  Verifying  : perl-File-Path-2.09-2.el7.noarch                           32/39 \n  Verifying  : libedit-3.0-12.20121213cvs.el7.x86_64                      33/39 \n  Verifying  : perl-threads-1.87-4.el7.x86_64                             34/39 \n  Verifying  : perl-Filter-1.49-3.el7.x86_64                              35/39 \n  Verifying  : perl-Getopt-Long-2.40-3.el7.noarch                         36/39 \n  Verifying  : perl-Text-ParseWords-3.29-4.el7.noarch                     37/39 \n  Verifying  : 4:perl-libs-5.16.3-299.el7_9.x86_64                        38/39 \n  Verifying  : less-458-9.el7.x86_64                                      39/39 \n\nInstalled:\n  git.x86_64 0:1.8.3.1-23.el7_8                                                 \n\nDependency Installed:\n  fipscheck.x86_64 0:1.4.1-6.el7                                                \n  fipscheck-lib.x86_64 0:1.4.1-6.el7                                            \n  groff-base.x86_64 0:1.22.2-8.el7                                              \n  less.x86_64 0:458-9.el7                                                       \n  libedit.x86_64 0:3.0-12.20121213cvs.el7                                       \n  openssh.x86_64 0:7.4p1-22.el7_9                                               \n  openssh-clients.x86_64 0:7.4p1-22.el7_9                                       \n  perl.x86_64 4:5.16.3-299.el7_9                                                \n  perl-Carp.noarch 0:1.26-244.el7                                               \n  perl-Encode.x86_64 0:2.51-7.el7                                               \n  perl-Error.noarch 1:0.17020-2.el7                                             \n  perl-Exporter.noarch 0:5.68-3.el7                                             \n  perl-File-Path.noarch 0:2.09-2.el7                                            \n  perl-File-Temp.noarch 0:0.23.01-3.el7                                         \n  perl-Filter.x86_64 0:1.49-3.el7                                               \n  perl-Getopt-Long.noarch 0:2.40-3.el7                                          \n  perl-Git.noarch 0:1.8.3.1-23.el7_8                                            \n  perl-HTTP-Tiny.noarch 0:0.033-3.el7                                           \n  perl-PathTools.x86_64 0:3.40-5.el7                                            \n  perl-Pod-Escapes.noarch 1:1.04-299.el7_9                                      \n  perl-Pod-Perldoc.noarch 0:3.20-4.el7                                          \n  perl-Pod-Simple.noarch 1:3.28-4.el7                                           \n  perl-Pod-Usage.noarch 0:1.63-3.el7                                            \n  perl-Scalar-List-Utils.x86_64 0:1.27-248.el7                                  \n  perl-Socket.x86_64 0:2.010-5.el7                                              \n  perl-Storable.x86_64 0:2.45-3.el7                                             \n  perl-TermReadKey.x86_64 0:2.30-20.el7                                         \n  perl-Text-ParseWords.noarch 0:3.29-4.el7                                      \n  perl-Time-HiRes.x86_64 4:1.9725-3.el7                                         \n  perl-Time-Local.noarch 0:1.2300-2.el7                                         \n  perl-constant.noarch 0:1.27-2.el7                                             \n  perl-libs.x86_64 4:5.16.3-299.el7_9                                           \n  perl-macros.x86_64 4:5.16.3-299.el7_9                                         \n  perl-parent.noarch 1:0.225-244.el7                                            \n  perl-podlators.noarch 0:2.5.1-3.el7                                           \n  perl-threads.x86_64 0:1.87-4.el7                                              \n  perl-threads-shared.x86_64 0:1.43-6.el7                                       \n  rsync.x86_64 0:3.1.2-12.el7_9                                                 \n\nComplete!\nRemoving intermediate container 4dbb5918551f\n ---> d06c1ea720b0\nStep 3/11 : WORKDIR /dials\n ---> Running in 904ccb2d5f99\nRemoving intermediate container 904ccb2d5f99\n ---> 8ce27f304f9d\nStep 4/11 : COPY installer/bootstrap.py .\n ---> 1c140610cf8b\nStep 5/11 : RUN python bootstrap.py\n ---> Running in be8c2fda7764\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0  \u001b[0m\u001b[91m    0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0\u001b[0m\u001b[91m      0 --:--:\u001b[0m\u001b[91m-- --\u001b[0m\u001b[91m:--:--\u001b[0m\u001b[91m -\u001b[0m\u001b[91m-:--:\u001b[0m\u001b[91m--\u001b[0m\u001b[91m   \u001b[0m\u001b[91m  \u001b[0m\u001b[91m0\n\u001b[0m\u001b[91m\r  0     0    0     0    0    \u001b[0m\u001b[91m 0      0 \u001b[0m\u001b[91m     0\u001b[0m\u001b[91m --\u001b[0m\u001b[91m:--:-- --:--:-- --:\u001b[0m\u001b[91m--:--     0\u001b[0m\u001b[91m\r  0     0    0\u001b[0m\u001b[91m  3923    0 \u001b[0m\u001b[91m    0  \u001b[0m\u001b[91m 42\u001b[0m\u001b[91m46    \u001b[0m\u001b[91m  0 --:\u001b[0m\u001b[91m--:-- --:--:\u001b[0m\u001b[91m-- --:-\u001b[0m\u001b[91m-:-- 3831k\n\u001b[0m\u001b[91m\r  3 5547k    3  210k    0     0   110k      0  0:00:50  0:00\u001b[0m\u001b[91m:01  0:00:49  110k\u001b[0m\u001b[91m\r 77 5547k   77 4306k    0     0\u001b[0m\u001b[91m  1520k \u001b[0m\u001b[91m     0\u001b[0m\u001b[91m  0\u001b[0m\u001b[91m:00\u001b[0m\u001b[91m:03  0:00:02  0:\u001b[0m\u001b[91m00:01 4437k\u001b[0m\u001b[91m\r100 5547k  100 5547k    0\u001b[0m\u001b[91m     0 \u001b[0m\u001b[91m 1806\u001b[0m\u001b[91mk     \u001b[0m\u001b[91m 0\u001b[0m\u001b[91m  0:\u001b[0m\u001b[91m00:03\u001b[0m\u001b[91m  0\u001b[0m\u001b[91m:00:\u001b[0m\u001b[91m03 \u001b[0m\u001b[91m--:-\u001b[0m\u001b[91m-:-- \u001b[0m\u001b[91m4604k\n\u001b[0m\n                                           __\n          __  ______ ___  ____ _____ ___  / /_  ____ _\n         / / / / __ `__ \\/ __ `/ __ `__ \\/ __ \\/ __ `/\n        / /_/ / / / / / / /_/ / / / / / / /_/ / /_/ /\n       / .___/_/ /_/ /_/\\__,_/_/ /_/ /_/_.___/\\__,_/\n      /_/\n\n\nTransaction\n\n  Prefix: /dials/conda_base\n\n  Updating specs:\n\n   - conda-forge::python=3.10\n   - conda-forge::alabaster\n   - conda-forge::biopython\n   - conda-forge::boost[version='<=1.74']\n   - conda-forge::boost-cpp[version='<=1.74']\n   - conda-forge::bzip2\n   - conda-forge::c-compiler\n   - conda-forge::colorlog\n   - conda-forge::conda\n   - conda-forge::cxx-compiler\n   - conda-forge::dials-data\n   - conda-forge::docutils\n   - conda-forge::eigen\n   - conda-forge::future\n   - conda-forge::gemmi\n   - conda-forge::h5py[version='>=3.1.0']\n   - conda-forge::hdf5[version='<1.13']\n   - conda-forge::hdf5plugin\n   - conda-forge::iota\n   - conda-forge::jinja2\n   - conda-forge::jpeg\n   - conda-forge::matplotlib-base[version='>=3.0.2']\n   - conda-forge::mrcfile\n   - conda-forge::msgpack-c\n   - conda-forge::msgpack-python\n   - conda-forge::numpy[version='>=1.19,<1.21|>=1.21.5']\n   - conda-forge::nxmx\n   - conda-forge::orderedset\n   - conda-forge::pandas\n   - conda-forge::pillow[version='>=5.4.1']\n   - conda-forge::pint\n   - conda-forge::pip\n   - conda-forge::procrunner[version='>=2.2.0']\n   - conda-forge::psutil\n   - conda-forge::pybind11\n   - conda-forge::pyrtf\n   - conda-forge::pytest[version='>=4.5,<7.0']\n   - conda-forge::pytest-forked\n   - conda-forge::pytest-mock\n   - conda-forge::pytest-xdist\n   - conda-forge::python-dateutil[version='>=2.7.0']\n   - conda-forge::reportlab\n   - conda-forge::requests\n   - conda-forge::scikit-learn\n   - conda-forge::scipy\n   - conda-forge::scons\n   - conda-forge::setuptools[version='<60']\n   - conda-forge::six\n   - conda-forge::sphinx[version='>=4']\n   - conda-forge::sqlite\n   - conda-forge::tabulate\n   - conda-forge::tqdm\n   - conda-forge::urllib3\n   - conda-forge::wxpython[version='>=4.0.1']\n   - conda-forge::xz\n\n\n  Package                               Version  Build                    Channel                   Size\n──────────────────────────────────────────────────────────────────────────────────────────────────────────\n  Install:\n──────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n  + _libgcc_mutex                           0.1  conda_forge              conda-forge/linux-64       3kB\n  + _openmp_mutex                           4.5  2_gnu                    conda-forge/linux-64      24kB\n  + alabaster                            0.7.12  py_0                     conda-forge/noarch        15kB\n  + alsa-lib                              1.2.8  h166bdaf_0               conda-forge/linux-64     592kB\n  + atk-1.0                              2.38.0  hd4edc92_1               conda-forge/linux-64     552kB\n  + attrs                                22.2.0  pyh71513ae_0             conda-forge/noarch        54kB\n  + babel                                2.11.0  pyhd8ed1ab_0             conda-forge/noarch         7MB\n  + binutils                               2.39  hdd6e379_1               conda-forge/linux-64      30kB\n  + binutils_impl_linux-64                 2.39  he00db2b_1               conda-forge/linux-64       5MB\n  + binutils_linux-64                      2.39  h5fc0e48_11              conda-forge/linux-64      25kB\n  + biopython                              1.80  py310h5764c6d_0          conda-forge/linux-64       3MB\n  + boost                                1.74.0  py310h7c3ba0c_5          conda-forge/linux-64     384kB\n  + boost-cpp                            1.74.0  h75c5d50_8               conda-forge/linux-64      17MB\n  + brotli                                1.0.9  h166bdaf_8               conda-forge/linux-64      19kB\n  + brotli-bin                            1.0.9  h166bdaf_8               conda-forge/linux-64      20kB\n  + brotlipy                              0.7.0  py310h5764c6d_1005       conda-forge/linux-64     351kB\n  + bzip2                                 1.0.8  h7f98852_4               conda-forge/linux-64     496kB\n  + c-ares                               1.18.1  h7f98852_0               conda-forge/linux-64     115kB\n  + c-compiler                            1.5.2  h0b41bf4_0               conda-forge/linux-64       6kB\n  + ca-certificates                   2022.12.7  ha878542_0               conda-forge/linux-64     146kB\n  + cached-property                       1.5.2  hd8ed1ab_1               conda-forge/noarch         4kB\n  + cached_property                       1.5.2  pyha770c72_1             conda-forge/noarch        11kB\n  + cairo                                1.16.0  ha61ee94_1014            conda-forge/linux-64       2MB\n  + certifi                           2022.12.7  pyhd8ed1ab_0             conda-forge/noarch       151kB\n  + cffi                                 1.15.1  py310h255011f_3          conda-forge/linux-64     237kB\n  + charset-normalizer                    2.1.1  pyhd8ed1ab_0             conda-forge/noarch        36kB\n  + colorama                              0.4.6  pyhd8ed1ab_0             conda-forge/noarch        25kB\n  + colorlog                              6.7.0  py310hff52083_1          conda-forge/linux-64      18kB\n  + conda                               22.11.1  py310hff52083_1          conda-forge/linux-64     935kB\n  + conda-package-handling                2.0.2  pyh38be061_0             conda-forge/noarch       253kB\n  + conda-package-streaming               0.7.0  pyhd8ed1ab_1             conda-forge/noarch        17kB\n  + contourpy                             1.0.6  py310hbf28c38_0          conda-forge/linux-64     240kB\n  + cryptography                         38.0.4  py310h600f1e7_0          conda-forge/linux-64       1MB\n  + cxx-compiler                          1.5.2  hf52228f_0               conda-forge/linux-64       6kB\n  + cycler                               0.11.0  pyhd8ed1ab_0             conda-forge/noarch        10kB\n  + dials-data                           2.4.44  pyhd8ed1ab_0             conda-forge/noarch       121kB\n  + docutils                               0.19  py310hff52083_1          conda-forge/linux-64     780kB\n  + eigen                                 3.4.0  h4bd325d_0               conda-forge/linux-64       1MB\n  + execnet                               1.9.0  pyhd8ed1ab_0             conda-forge/noarch        33kB\n  + expat                                 2.5.0  h27087fc_0               conda-forge/linux-64     194kB\n  + font-ttf-dejavu-sans-mono              2.37  hab24e00_0               conda-forge/noarch       397kB\n  + font-ttf-inconsolata                  3.000  h77eed37_0               conda-forge/noarch        97kB\n  + font-ttf-source-code-pro              2.038  h77eed37_0               conda-forge/noarch       701kB\n  + font-ttf-ubuntu                        0.83  hab24e00_0               conda-forge/noarch         2MB\n  + fontconfig                           2.14.1  hc2a2eb6_0               conda-forge/linux-64     374kB\n  + fonts-conda-ecosystem                     1  0                        conda-forge/noarch         4kB\n  + fonts-conda-forge                         1  0                        conda-forge/noarch         4kB\n  + fonttools                            4.38.0  py310h5764c6d_1          conda-forge/linux-64       2MB\n  + freetype                             2.12.1  hca18f0e_1               conda-forge/linux-64     626kB\n  + fribidi                              1.0.10  h36c2ea0_0               conda-forge/linux-64     114kB\n  + future                               0.18.2  pyhd8ed1ab_6             conda-forge/noarch       365kB\n  + gcc                                  11.3.0  h02d0930_11              conda-forge/linux-64      25kB\n  + gcc_impl_linux-64                    11.3.0  hab1b70f_19              conda-forge/linux-64      52MB\n  + gcc_linux-64                         11.3.0  he6f903b_11              conda-forge/linux-64      25kB\n  + gdk-pixbuf                           2.42.8  h9fd3ed7_2               conda-forge/linux-64     573kB\n  + gemmi                                 0.5.8  py310h662bd17_0          conda-forge/linux-64       4MB\n  + gettext                              0.21.1  h27087fc_0               conda-forge/linux-64       4MB\n  + glib                                 2.74.1  h6239696_1               conda-forge/linux-64     486kB\n  + glib-tools                           2.74.1  h6239696_1               conda-forge/linux-64     109kB\n  + graphite2                            1.3.13  h58526e2_1001            conda-forge/linux-64     105kB\n  + gst-plugins-base                     1.21.3  h4243ec0_1               conda-forge/linux-64       3MB\n  + gstreamer                            1.21.3  h25f0c4b_1               conda-forge/linux-64       2MB\n  + gtk2                                2.24.33  h90689f9_2               conda-forge/linux-64       8MB\n  + gxx                                  11.3.0  h02d0930_11              conda-forge/linux-64      24kB\n  + gxx_impl_linux-64                    11.3.0  hab1b70f_19              conda-forge/linux-64      13MB\n  + gxx_linux-64                         11.3.0  hc203a17_11              conda-forge/linux-64      25kB\n  + h5py                                  3.7.0  nompi_py310h416281c_102  conda-forge/linux-64       1MB\n  + harfbuzz                              6.0.0  h8e241bc_0               conda-forge/linux-64       1MB\n  + hdf5                                 1.12.2  nompi_h4df4325_101       conda-forge/linux-64       3MB\n  + hdf5plugin                            4.0.1  py310h1d1c716_0          conda-forge/linux-64       2MB\n  + icu                                    70.1  h27087fc_0               conda-forge/linux-64      14MB\n  + idna                                    3.4  pyhd8ed1ab_0             conda-forge/noarch        57kB\n  + imagesize                             1.4.1  pyhd8ed1ab_0             conda-forge/noarch        10kB\n  + importlib-metadata                    5.2.0  pyha770c72_0             conda-forge/noarch        24kB\n  + importlib_resources                  5.10.1  pyhd8ed1ab_1             conda-forge/noarch        30kB\n  + iniconfig                             1.1.1  pyh9f0ad1d_0             conda-forge/noarch         8kB\n  + iota                                 1.4.20  pyh9f0ad1d_0             conda-forge/noarch       137kB\n  + jinja2                                3.1.2  pyhd8ed1ab_1             conda-forge/noarch       101kB\n  + joblib                                1.2.0  pyhd8ed1ab_0             conda-forge/noarch       210kB\n  + jpeg                                     9e  h166bdaf_2               conda-forge/linux-64     275kB\n  + kernel-headers_linux-64              2.6.32  he073ed8_15              conda-forge/noarch       724kB\n  + keyutils                              1.6.1  h166bdaf_0               conda-forge/linux-64     118kB\n  + kiwisolver                            1.4.4  py310hbf28c38_1          conda-forge/linux-64      77kB\n  + krb5                                 1.20.1  h81ceb04_0               conda-forge/linux-64       1MB\n  + lcms2                                  2.14  hfd0df8a_1               conda-forge/linux-64     241kB\n  + ld_impl_linux-64                       2.39  hcc3a1bd_1               conda-forge/linux-64     691kB\n  + lerc                                  4.0.0  h27087fc_0               conda-forge/linux-64     282kB\n  + libaec                                1.0.6  h9c3ff4c_0               conda-forge/linux-64      47kB\n  + libblas                               3.9.0  16_linux64_openblas      conda-forge/linux-64      13kB\n  + libbrotlicommon                       1.0.9  h166bdaf_8               conda-forge/linux-64      67kB\n  + libbrotlidec                          1.0.9  h166bdaf_8               conda-forge/linux-64      34kB\n  + libbrotlienc                          1.0.9  h166bdaf_8               conda-forge/linux-64     295kB\n  + libcblas                              3.9.0  16_linux64_openblas      conda-forge/linux-64      13kB\n  + libcurl                              7.87.0  hdc1c0ab_0               conda-forge/linux-64     349kB\n  + libdeflate                             1.14  h166bdaf_0               conda-forge/linux-64      83kB\n  + libedit                        3.1.20191231  he28a2e2_2               conda-forge/linux-64     124kB\n  + libev                                  4.33  h516909a_1               conda-forge/linux-64     106kB\n  + libffi                                3.4.2  h7f98852_5               conda-forge/linux-64      58kB\n  + libgcc-devel_linux-64                11.3.0  h210ce93_19              conda-forge/linux-64       3MB\n  + libgcc-ng                            12.2.0  h65d4601_19              conda-forge/linux-64     954kB\n  + libgfortran-ng                       12.2.0  h69a702a_19              conda-forge/linux-64      23kB\n  + libgfortran5                         12.2.0  h337968e_19              conda-forge/linux-64       2MB\n  + libglib                              2.74.1  h606061b_1               conda-forge/linux-64       3MB\n  + libglu                                9.0.0  he1b5a44_1001            conda-forge/linux-64     423kB\n  + libgomp                              12.2.0  h65d4601_19              conda-forge/linux-64     466kB\n  + libiconv                               1.17  h166bdaf_0               conda-forge/linux-64       1MB\n  + liblapack                             3.9.0  16_linux64_openblas      conda-forge/linux-64      13kB\n  + libnghttp2                           1.47.0  hff17c54_1               conda-forge/linux-64     844kB\n  + libnsl                                2.0.0  h7f98852_0               conda-forge/linux-64      31kB\n  + libogg                                1.3.4  h7f98852_1               conda-forge/linux-64     211kB\n  + libopenblas                          0.3.21  pthreads_h78a6416_3      conda-forge/linux-64      11MB\n  + libopus                               1.3.1  h7f98852_1               conda-forge/linux-64     261kB\n  + libpng                               1.6.39  h753d276_0               conda-forge/linux-64     283kB\n  + libsanitizer                         11.3.0  h239ccf8_19              conda-forge/linux-64       6MB\n  + libsqlite                            3.40.0  h753d276_0               conda-forge/linux-64     810kB\n  + libssh2                              1.10.0  hf14f497_3               conda-forge/linux-64     239kB\n  + libstdcxx-devel_linux-64             11.3.0  h210ce93_19              conda-forge/linux-64      10MB\n  + libstdcxx-ng                         12.2.0  h46fd767_19              conda-forge/linux-64       4MB\n  + libtiff                               4.5.0  h82bc61c_0               conda-forge/linux-64     407kB\n  + libuuid                              2.32.1  h7f98852_1000            conda-forge/linux-64      28kB\n  + libvorbis                             1.3.7  h9c3ff4c_0               conda-forge/linux-64     286kB\n  + libwebp-base                          1.2.4  h166bdaf_0               conda-forge/linux-64     413kB\n  + libxcb                                 1.13  h7f98852_1004            conda-forge/linux-64     400kB\n  + libxml2                              2.10.3  h7463322_0               conda-forge/linux-64     773kB\n  + libzlib                              1.2.13  h166bdaf_4               conda-forge/linux-64      66kB\n  + markupsafe                            2.1.1  py310h5764c6d_2          conda-forge/linux-64      23kB\n  + matplotlib-base                       3.6.2  py310h8d5ebf3_0          conda-forge/linux-64       8MB\n  + mrcfile                               1.4.3  pyhd8ed1ab_0             conda-forge/noarch        35kB\n  + msgpack-c                             3.3.0  h4c92fa2_4               conda-forge/linux-64     296kB\n  + msgpack-python                        1.0.4  py310hbf28c38_1          conda-forge/linux-64      91kB\n  + munkres                               1.1.4  pyh9f0ad1d_0             conda-forge/noarch        12kB\n  + ncurses                                 6.3  h27087fc_1               conda-forge/linux-64       1MB\n  + numpy                                1.24.0  py310h08bbf29_0          conda-forge/linux-64       7MB\n  + nxmx                                  0.0.2  pyhd8ed1ab_0             conda-forge/noarch        24kB\n  + openjpeg                              2.5.0  hfec8fc6_2               conda-forge/linux-64     352kB\n  + openssl                               3.0.7  h0b41bf4_1               conda-forge/linux-64       3MB\n  + orderedset                            2.0.3  py310h5764c6d_7          conda-forge/linux-64      77kB\n  + packaging                              22.0  pyhd8ed1ab_0             conda-forge/noarch        40kB\n  + pandas                                1.5.2  py310h769672d_0          conda-forge/linux-64      11MB\n  + pango                               1.50.12  hd33c08f_1               conda-forge/linux-64     437kB\n  + pathlib2                        2.3.7.post1  py310hff52083_2          conda-forge/linux-64      38kB\n  + pcre2                                 10.40  hc3806b6_0               conda-forge/linux-64       2MB\n  + pillow                                9.2.0  py310h023d228_4          conda-forge/linux-64      45MB\n  + pint                                 0.20.1  pyhd8ed1ab_0             conda-forge/noarch       212kB\n  + pip                                  22.3.1  pyhd8ed1ab_0             conda-forge/noarch         2MB\n  + pixman                               0.40.0  h36c2ea0_0               conda-forge/linux-64     643kB\n  + pluggy                                1.0.0  pyhd8ed1ab_5             conda-forge/noarch        16kB\n  + procrunner                            2.3.3  pyhd8ed1ab_0             conda-forge/noarch        14kB\n  + psutil                                5.9.4  py310h5764c6d_0          conda-forge/linux-64     361kB\n  + pthread-stubs                           0.4  h36c2ea0_1001            conda-forge/linux-64       6kB\n  + py                                   1.11.0  pyh6c4a22f_0             conda-forge/noarch        76kB\n  + pybind11                             2.10.2  py310hdf3cbec_0          conda-forge/linux-64     180kB\n  + pybind11-global                      2.10.2  py310hdf3cbec_0          conda-forge/linux-64     168kB\n  + pycosat                               0.6.4  py310h5764c6d_1          conda-forge/linux-64     111kB\n  + pycparser                              2.21  pyhd8ed1ab_0             conda-forge/noarch       103kB\n  + pygments                             2.13.0  pyhd8ed1ab_0             conda-forge/noarch       840kB\n  + pyopenssl                            22.1.0  pyhd8ed1ab_0             conda-forge/noarch       125kB\n  + pyparsing                             3.0.9  pyhd8ed1ab_0             conda-forge/noarch        81kB\n  + pyrtf                                  0.45  py_2                     conda-forge/noarch        29kB\n  + pysocks                               1.7.1  pyha2e5f31_6             conda-forge/noarch        19kB\n  + pytest                                6.2.5  py310hff52083_3          conda-forge/linux-64     448kB\n  + pytest-forked                         1.4.0  pyhd8ed1ab_1             conda-forge/noarch         9kB\n  + pytest-mock                          3.10.0  pyhd8ed1ab_0             conda-forge/noarch        19kB\n  + pytest-xdist                          3.1.0  pyhd8ed1ab_0             conda-forge/noarch        33kB\n  + python                               3.10.8  h4a9ceb5_0_cpython       conda-forge/linux-64      23MB\n  + python-dateutil                       2.8.2  pyhd8ed1ab_0             conda-forge/noarch       246kB\n  + python_abi                             3.10  3_cp310                  conda-forge/linux-64       6kB\n  + pytz                                 2022.7  pyhd8ed1ab_0             conda-forge/noarch       186kB\n  + pyyaml                                  6.0  py310h5764c6d_5          conda-forge/linux-64     176kB\n  + readline                              8.1.2  h0f457ee_0               conda-forge/linux-64     298kB\n  + reportlab                            3.6.12  py310h46e8714_2          conda-forge/linux-64       2MB\n  + requests                             2.28.1  pyhd8ed1ab_1             conda-forge/noarch        55kB\n  + ruamel.yaml                         0.17.21  py310h5764c6d_2          conda-forge/linux-64     180kB\n  + ruamel.yaml.clib                      0.2.7  py310h1fa729e_1          conda-forge/linux-64     135kB\n  + scikit-learn                          1.2.0  py310h209a8ca_0          conda-forge/linux-64       7MB\n  + scipy                                 1.9.3  py310hdfbd76f_2          conda-forge/linux-64      27MB\n  + scons                                 4.4.0  py310hff52083_1          conda-forge/linux-64       3MB\n  + setuptools                           59.8.0  py310hff52083_1          conda-forge/linux-64       1MB\n  + six                                  1.16.0  pyh6c4a22f_0             conda-forge/noarch        14kB\n  + snowballstemmer                       2.2.0  pyhd8ed1ab_0             conda-forge/noarch        59kB\n  + sphinx                                5.3.0  pyhd8ed1ab_0             conda-forge/noarch         2MB\n  + sphinxcontrib-applehelp               1.0.2  py_0                     conda-forge/noarch        29kB\n  + sphinxcontrib-devhelp                 1.0.2  py_0                     conda-forge/noarch        23kB\n  + sphinxcontrib-htmlhelp                2.0.0  pyhd8ed1ab_0             conda-forge/noarch        32kB\n  + sphinxcontrib-jsmath                  1.0.1  py_0                     conda-forge/noarch         7kB\n  + sphinxcontrib-qthelp                  1.0.3  py_0                     conda-forge/noarch        26kB\n  + sphinxcontrib-serializinghtml         1.1.5  pyhd8ed1ab_2             conda-forge/noarch        28kB\n  + sqlite                               3.40.0  h4ff8645_0               conda-forge/linux-64     820kB\n  + sysroot_linux-64                       2.12  he073ed8_15              conda-forge/noarch        33MB\n  + tabulate                              0.9.0  pyhd8ed1ab_1             conda-forge/noarch        36kB\n  + threadpoolctl                         3.1.0  pyh8a188c0_0             conda-forge/noarch        18kB\n  + tk                                   8.6.12  h27826a3_0               conda-forge/linux-64       3MB\n  + toml                                 0.10.2  pyhd8ed1ab_0             conda-forge/noarch        18kB\n  + toolz                                0.12.0  pyhd8ed1ab_0             conda-forge/noarch        49kB\n  + tqdm                                 4.64.1  pyhd8ed1ab_0             conda-forge/noarch        83kB\n  + tzdata                                2022g  h191b570_0               conda-forge/noarch       108kB\n  + unicodedata2                         15.0.0  py310h5764c6d_0          conda-forge/linux-64     512kB\n  + urllib3                             1.26.13  pyhd8ed1ab_0             conda-forge/noarch       111kB\n  + wheel                                0.38.4  pyhd8ed1ab_0             conda-forge/noarch        33kB\n  + wxpython                              4.2.0  py310ha9c1c7c_3          conda-forge/linux-64      20MB\n  + xorg-kbproto                          1.0.7  h7f98852_1002            conda-forge/linux-64      27kB\n  + xorg-libice                          1.0.10  h7f98852_0               conda-forge/linux-64      59kB\n  + xorg-libsm                            1.2.3  hd9c2040_1000            conda-forge/linux-64      26kB\n  + xorg-libx11                           1.7.2  h7f98852_0               conda-forge/linux-64     963kB\n  + xorg-libxau                           1.0.9  h7f98852_0               conda-forge/linux-64      13kB\n  + xorg-libxdmcp                         1.1.3  h7f98852_0               conda-forge/linux-64      19kB\n  + xorg-libxext                          1.3.4  h7f98852_1               conda-forge/linux-64      55kB\n  + xorg-libxrender                      0.9.10  h7f98852_1003            conda-forge/linux-64      33kB\n  + xorg-renderproto                     0.11.1  h7f98852_1002            conda-forge/linux-64      10kB\n  + xorg-xextproto                        7.3.0  h7f98852_1002            conda-forge/linux-64      28kB\n  + xorg-xproto                          7.0.31  h7f98852_1007            conda-forge/linux-64      75kB\n  + xz                                    5.2.6  h166bdaf_0               conda-forge/linux-64     418kB\n  + yaml                                  0.2.5  h7f98852_2               conda-forge/linux-64      89kB\n  + zipp                                 3.11.0  pyhd8ed1ab_0             conda-forge/noarch        16kB\n  + zlib                                 1.2.13  h166bdaf_4               conda-forge/linux-64      94kB\n  + zstandard                            0.19.0  py310hdeb6495_1          conda-forge/linux-64     382kB\n  + zstd                                  1.5.2  h6239696_4               conda-forge/linux-64     459kB\n\n  Summary:\n\n  Install: 217 packages\n\n  Total download: 422MB\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n\nTransaction starting\nLinking font-ttf-dejavu-sans-mono-2.37-hab24e00_0\nLinking font-ttf-ubuntu-0.83-hab24e00_0\nLinking kernel-headers_linux-64-2.6.32-he073ed8_15\nLinking font-ttf-inconsolata-3.000-h77eed37_0\nLinking font-ttf-source-code-pro-2.038-h77eed37_0\nLinking tzdata-2022g-h191b570_0\nLinking sysroot_linux-64-2.12-he073ed8_15\nLinking fonts-conda-forge-1-0\nLinking fonts-conda-ecosystem-1-0\nLinking _libgcc_mutex-0.1-conda_forge\nLinking libstdcxx-ng-12.2.0-h46fd767_19\nLinking python_abi-3.10-3_cp310\nLinking ld_impl_linux-64-2.39-hcc3a1bd_1\nLinking libgcc-devel_linux-64-11.3.0-h210ce93_19\nLinking libstdcxx-devel_linux-64-11.3.0-h210ce93_19\nLinking ca-certificates-2022.12.7-ha878542_0\nLinking libgfortran5-12.2.0-h337968e_19\nLinking libgomp-12.2.0-h65d4601_19\nLinking binutils_impl_linux-64-2.39-he00db2b_1\nLinking libgfortran-ng-12.2.0-h69a702a_19\nLinking _openmp_mutex-4.5-2_gnu\nLinking binutils-2.39-hdd6e379_1\nLinking binutils_linux-64-2.39-h5fc0e48_11\nLinking libgcc-ng-12.2.0-h65d4601_19\nLinking xorg-libice-1.0.10-h7f98852_0\nLinking libogg-1.3.4-h7f98852_1\nLinking xorg-libxdmcp-1.1.3-h7f98852_0\nLinking xorg-libxau-1.0.9-h7f98852_0\nLinking xorg-xproto-7.0.31-h7f98852_1007\nLinking xorg-kbproto-1.0.7-h7f98852_1002\nLinking xorg-xextproto-7.3.0-h7f98852_1002\nLinking xorg-renderproto-0.11.1-h7f98852_1002\nLinking graphite2-1.3.13-h58526e2_1001\nLinking fribidi-1.0.10-h36c2ea0_0\nLinking libuuid-2.32.1-h7f98852_1000\nLinking pthread-stubs-0.4-h36c2ea0_1001\nLinking libbrotlicommon-1.0.9-h166bdaf_8\nLinking libopenblas-0.3.21-pthreads_h78a6416_3\nLinking libev-4.33-h516909a_1\nLinking yaml-0.2.5-h7f98852_2\nLinking libopus-1.3.1-h7f98852_1\nLinking c-ares-1.18.1-h7f98852_0\nLinking keyutils-1.6.1-h166bdaf_0\nLinking openssl-3.0.7-h0b41bf4_1\nLinking ncurses-6.3-h27087fc_1\nLinking libffi-3.4.2-h7f98852_5\nLinking libsanitizer-11.3.0-h239ccf8_19\nLinking alsa-lib-1.2.8-h166bdaf_0\nLinking libglu-9.0.0-he1b5a44_1001\nLinking pixman-0.40.0-h36c2ea0_0\nLinking libiconv-1.17-h166bdaf_0\nLinking gettext-0.21.1-h27087fc_0\nLinking expat-2.5.0-h27087fc_0\nLinking libdeflate-1.14-h166bdaf_0\nLinking lerc-4.0.0-h27087fc_0\nLinking libwebp-base-1.2.4-h166bdaf_0\nLinking jpeg-9e-h166bdaf_2\nLinking libaec-1.0.6-h9c3ff4c_0\nLinking eigen-3.4.0-h4bd325d_0\nLinking bzip2-1.0.8-h7f98852_4\nLinking icu-70.1-h27087fc_0\nLinking xz-5.2.6-h166bdaf_0\nLinking libzlib-1.2.13-h166bdaf_4\nLinking libnsl-2.0.0-h7f98852_0\nLinking libvorbis-1.3.7-h9c3ff4c_0\nLinking xorg-libsm-1.2.3-hd9c2040_1000\nLinking libxcb-1.13-h7f98852_1004\nLinking libbrotlienc-1.0.9-h166bdaf_8\nLinking libbrotlidec-1.0.9-h166bdaf_8\nLinking libblas-3.9.0-16_linux64_openblas\nLinking libedit-3.1.20191231-he28a2e2_2\nLinking readline-8.1.2-h0f457ee_0\nLinking gcc_impl_linux-64-11.3.0-hab1b70f_19\nLinking zstd-1.5.2-h6239696_4\nLinking libssh2-1.10.0-hf14f497_3\nLinking libnghttp2-1.47.0-hff17c54_1\nLinking pcre2-10.40-hc3806b6_0\nLinking libxml2-2.10.3-h7463322_0\nLinking libpng-1.6.39-h753d276_0\nLinking zlib-1.2.13-h166bdaf_4\nLinking tk-8.6.12-h27826a3_0\nLinking libsqlite-3.40.0-h753d276_0\nLinking xorg-libx11-1.7.2-h7f98852_0\nLinking brotli-bin-1.0.9-h166bdaf_8\nLinking liblapack-3.9.0-16_linux64_openblas\nLinking libcblas-3.9.0-16_linux64_openblas\nLinking krb5-1.20.1-h81ceb04_0\nLinking gcc-11.3.0-h02d0930_11\nLinking gxx_impl_linux-64-11.3.0-hab1b70f_19\nLinking gcc_linux-64-11.3.0-he6f903b_11\nLinking libtiff-4.5.0-h82bc61c_0\nLinking boost-cpp-1.74.0-h75c5d50_8\nLinking libglib-2.74.1-h606061b_1\nLinking freetype-2.12.1-hca18f0e_1\nLinking sqlite-3.40.0-h4ff8645_0\nLinking python-3.10.8-h4a9ceb5_0_cpython\nLinking xorg-libxext-1.3.4-h7f98852_1\nLinking xorg-libxrender-0.9.10-h7f98852_1003\nLinking brotli-1.0.9-h166bdaf_8\nLinking libcurl-7.87.0-hdc1c0ab_0\nLinking gxx-11.3.0-h02d0930_11\nLinking gxx_linux-64-11.3.0-hc203a17_11\nLinking c-compiler-1.5.2-h0b41bf4_0\nLinking openjpeg-2.5.0-hfec8fc6_2\nLinking lcms2-2.14-hfd0df8a_1\nLinking msgpack-c-3.3.0-h4c92fa2_4\nLinking atk-1.0-2.38.0-hd4edc92_1\nLinking gdk-pixbuf-2.42.8-h9fd3ed7_2\n\nLinking glib-tools-2.74.1-h6239696_1\nLinking fontconfig-2.14.1-hc2a2eb6_0\nLinking setuptools-59.8.0-py310hff52083_1\nLinking hdf5-1.12.2-nompi_h4df4325_101\nLinking cxx-compiler-1.5.2-hf52228f_0\nLinking cairo-1.16.0-ha61ee94_1014\nLinking harfbuzz-6.0.0-h8e241bc_0\nLinking pango-1.50.12-hd33c08f_1\nLinking gtk2-2.24.33-h90689f9_2\nLinking wheel-0.38.4-pyhd8ed1ab_0\nLinking pip-22.3.1-pyhd8ed1ab_0\nLinking cached_property-1.5.2-pyha770c72_1\nLinking munkres-1.1.4-pyh9f0ad1d_0\nLinking pyparsing-3.0.9-pyhd8ed1ab_0\nLinking cycler-0.11.0-pyhd8ed1ab_0\nLinking iniconfig-1.1.1-pyh9f0ad1d_0\nLinking attrs-22.2.0-pyh71513ae_0\nLinking toml-0.10.2-pyhd8ed1ab_0\nLinking pycparser-2.21-pyhd8ed1ab_0\nLinking toolz-0.12.0-pyhd8ed1ab_0\nLinking pluggy-1.0.0-pyhd8ed1ab_5\nLinking zipp-3.11.0-pyhd8ed1ab_0\nLinking threadpoolctl-3.1.0-pyh8a188c0_0\nLinking joblib-1.2.0-pyhd8ed1ab_0\nLinking pytz-2022.7-pyhd8ed1ab_0\nLinking charset-normalizer-2.1.1-pyhd8ed1ab_0\nLinking sphinxcontrib-serializinghtml-1.1.5-pyhd8ed1ab_2\nLinking sphinxcontrib-qthelp-1.0.3-py_0\nLinking sphinxcontrib-devhelp-1.0.2-py_0\nLinking sphinxcontrib-applehelp-1.0.2-py_0\nLinking snowballstemmer-2.2.0-pyhd8ed1ab_0\nLinking pygments-2.13.0-pyhd8ed1ab_0\nLinking packaging-22.0-pyhd8ed1ab_0\nLinking imagesize-1.4.1-pyhd8ed1ab_0\nLinking colorama-0.4.6-pyhd8ed1ab_0\nLinking py-1.11.0-pyh6c4a22f_0\nLinking execnet-1.9.0-pyhd8ed1ab_0\nLinking pysocks-1.7.1-pyha2e5f31_6\nLinking idna-3.4-pyhd8ed1ab_0\nLinking certifi-2022.12.7-pyhd8ed1ab_0\nLinking tabulate-0.9.0-pyhd8ed1ab_1\nLinking sphinxcontrib-jsmath-1.0.1-py_0\nLinking sphinxcontrib-htmlhelp-2.0.0-pyhd8ed1ab_0\nLinking six-1.16.0-pyh6c4a22f_0\nLinking procrunner-2.3.3-pyhd8ed1ab_0\nLinking pint-0.20.1-pyhd8ed1ab_0\nLinking future-0.18.2-pyhd8ed1ab_6\nLinking alabaster-0.7.12-py_0\nLinking cached-property-1.5.2-hd8ed1ab_1\nLinking importlib-metadata-5.2.0-pyha770c72_0\nLinking importlib_resources-5.10.1-pyhd8ed1ab_1\nLinking babel-2.11.0-pyhd8ed1ab_0\nLinking tqdm-4.64.1-pyhd8ed1ab_0\nLinking python-dateutil-2.8.2-pyhd8ed1ab_0\nLinking pyrtf-0.45-py_2\nLinking unicodedata2-15.0.0-py310h5764c6d_0\nLinking kiwisolver-1.4.4-py310hbf28c38_1\nLinking ruamel.yaml.clib-0.2.7-py310h1fa729e_1\nLinking pycosat-0.6.4-py310h5764c6d_1\nLinking markupsafe-2.1.1-py310h5764c6d_2\nLinking pyyaml-6.0-py310h5764c6d_5\nLinking glib-2.74.1-h6239696_1\nLinking scons-4.4.0-py310hff52083_1\nLinking pybind11-global-2.10.2-py310hdf3cbec_0\nLinking psutil-5.9.4-py310h5764c6d_0\nLinking pillow-9.2.0-py310h023d228_4\nLinking orderedset-2.0.3-py310h5764c6d_7\nLinking numpy-1.24.0-py310h08bbf29_0\nLinking msgpack-python-1.0.4-py310hbf28c38_1\nLinking gemmi-0.5.8-py310h662bd17_0\nLinking docutils-0.19-py310hff52083_1\nLinking colorlog-6.7.0-py310hff52083_1\nLinking cffi-1.15.1-py310h255011f_3\nLinking pytest-6.2.5-py310hff52083_3\nLinking pathlib2-2.3.7.post1-py310hff52083_2\nLinking fonttools-4.38.0-py310h5764c6d_1\nLinking ruamel.yaml-0.17.21-py310h5764c6d_2\nLinking gstreamer-1.21.3-h25f0c4b_1\nLinking pybind11-2.10.2-py310hdf3cbec_0\nLinking reportlab-3.6.12-py310h46e8714_2\nLinking contourpy-1.0.6-py310hbf28c38_0\nLinking scipy-1.9.3-py310hdfbd76f_2\nLinking pandas-1.5.2-py310h769672d_0\nLinking h5py-3.7.0-nompi_py310h416281c_102\nLinking boost-1.74.0-py310h7c3ba0c_5\nLinking biopython-1.80-py310h5764c6d_0\nLinking zstandard-0.19.0-py310hdeb6495_1\nLinking cryptography-38.0.4-py310h600f1e7_0\nLinking brotlipy-0.7.0-py310h5764c6d_1005\nLinking gst-plugins-base-1.21.3-h4243ec0_1\nLinking matplotlib-base-3.6.2-py310h8d5ebf3_0\nLinking scikit-learn-1.2.0-py310h209a8ca_0\nLinking hdf5plugin-4.0.1-py310h1d1c716_0\nLinking jinja2-3.1.2-pyhd8ed1ab_1\nLinking mrcfile-1.4.3-pyhd8ed1ab_0\nLinking pytest-xdist-3.1.0-pyhd8ed1ab_0\nLinking pytest-mock-3.10.0-pyhd8ed1ab_0\nLinking pytest-forked-1.4.0-pyhd8ed1ab_1\nLinking nxmx-0.0.2-pyhd8ed1ab_0\nLinking conda-package-streaming-0.7.0-pyhd8ed1ab_1\nLinking pyopenssl-22.1.0-pyhd8ed1ab_0\nLinking conda-package-handling-2.0.2-pyh38be061_0\nLinking urllib3-1.26.13-pyhd8ed1ab_0\nLinking requests-2.28.1-pyhd8ed1ab_1\nLinking sphinx-5.3.0-pyhd8ed1ab_0\nLinking dials-data-2.4.44-pyhd8ed1ab_0\nLinking wxpython-4.2.0-py310ha9c1c7c_3\nLinking conda-22.11.1-py310hff52083_1\nLinking iota-1.4.20-pyh9f0ad1d_0\nTransaction finished\nPython: 3.10.8 \"/dials/build/../conda_base/bin/python\"\nCompiler: conda\nBuild mode: release\nWarning level: 0\nPrecompiled Headers: False\nStatic libraries: False\nStatic exe: False\nScan Boost headers: False\nWrite full flex_fwd.h files: False\nBuild Boost.Python extensions: True\nDefine BOOST_PYTHON_NO_PY_SIGNATURES: False\nDefine BOOST_PYTHON_BOOL_INT_STRICT: True\nEnable OpenMP if possible: False\nBoost threads enabled: True\nEnable CUDA: False\nEnable KOKKOS: False\nUse conda: True\nUse opt_resources if available: False\nUse environment flags: False\nEnable C++11: True\ncommand_version_suffix: None\nRelocatable paths anchored at: /dials/build\nTop-down list of all modules involved:\n  xia2            \"/dials/modules/xia2\"\n  xfel            \"/dials/modules/cctbx_project/xfel\"\n  prime           \"/dials/modules/cctbx_project/prime\"\n  simtbx          \"/dials/modules/cctbx_project/simtbx\"\n  dials           \"/dials/modules/dials\"\n  crys3d          \"/dials/modules/cctbx_project/crys3d\"\n  rstbx           \"/dials/modules/cctbx_project/rstbx\"\n  spotfinder      \"/dials/modules/cctbx_project/spotfinder\"\n  annlib+adaptbx  \"/dials/modules/annlib\"\n                  \"/dials/modules/annlib_adaptbx\"\n  cma_es          \"/dials/modules/cctbx_project/cma_es\"\n  wxtbx           \"/dials/modules/cctbx_project/wxtbx\"\n  gltbx           \"/dials/modules/cctbx_project/gltbx\"\n  mmtbx           \"/dials/modules/cctbx_project/mmtbx\"\n  iotbx           \"/dials/modules/cctbx_project/iotbx\"\n  dxtbx           \"/dials/modules/dxtbx\"\n  cbflib+adaptbx  \"/dials/modules/cbflib\"\n                  \"/dials/modules/cctbx_project/cbflib_adaptbx\"\n  ccp4io+adaptbx  \"/dials/modules/ccp4io\"\n                  \"/dials/modules/ccp4io_adaptbx\"\n  smtbx           \"/dials/modules/cctbx_project/smtbx\"\n  ucif            \"/dials/modules/cctbx_project/ucif\"\n  cctbx           \"/dials/modules/cctbx_project/cctbx\"\n  scitbx          \"/dials/modules/cctbx_project/scitbx\"\n  fable           \"/dials/modules/cctbx_project/fable\"\n  omptbx          \"/dials/modules/cctbx_project/omptbx\"\n  boost+adaptbx   \"/dials/modules/cctbx_project/boost\"\n                  \"/dials/modules/cctbx_project/boost_adaptbx\"\n  tbxx            \"/dials/modules/cctbx_project/tbxx\"\n  chiltbx         \"/dials/modules/cctbx_project/chiltbx\"\n  libtbx          \"/dials/modules/cctbx_project/libtbx\"\nCreating files in build directory: \"/dials/build\"\n    dispatcher_include_template.sh\n    dispatcher_head.sh\n    setpaths.sh\n    setpaths.csh\n    setpaths_all.sh\n    setpaths_all.csh\n    setpaths_debug.sh\n    unsetpaths.sh\n    setpaths_debug.csh\n    unsetpaths.csh\n    SConstruct\n    Makefile\n    run_tests.csh\nProcessing: \"/dials/modules/cctbx_project/libtbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/boost_adaptbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/fable/command_line\"\nProcessing: \"/dials/modules/cctbx_project/scitbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/cctbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/smtbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/cbflib_adaptbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/iotbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/mmtbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/gltbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/wxtbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/spotfinder/command_line\"\nProcessing: \"/dials/modules/cctbx_project/rstbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/crys3d/command_line\"\nProcessing: \"/dials/modules/dials/src/dials/command_line\"\nProcessing: \"/dials/modules/cctbx_project/simtbx/command_line\"\nProcessing: \"/dials/modules/cctbx_project/prime/command_line\"\nProcessing: \"/dials/modules/cctbx_project/xfel/command_line\"\nProcessing: \"/dials/modules/cctbx_project/xfel/ui/command_line\"\nProcessing: \"/dials/modules/cctbx_project/xfel/cxi/command_line\"\nProcessing: \"/dials/modules/cctbx_project/xfel/clustering/command_line\"\nProcessing: \"/dials/modules/cctbx_project/xfel/merging/command_line\"\nProcessing: \"/dials/modules/cctbx_project/xfel/small_cell/command_line\"\nProcessing: \"/dials/modules/cctbx_project/libtbx/libtbx_refresh.py\"\nProcessing: \"/dials/modules/cctbx_project/boost_adaptbx/libtbx_refresh.py\"\nProcessing: \"/dials/modules/cctbx_project/scitbx/libtbx_refresh.py\"\n  Generating C++ header files in:\n    \"/dials/build/include/scitbx/array_family\"\n  Generating C++ files in:\n    \"/dials/build/include/scitbx/array_family/boost_python\"\n  Using fable to convert scitbx/lbfgs.f\nUpdating entry points for scitbx\n  1 entries for entry point pytest_randomly.random_seeder\nObtaining file:///dials/modules/dxtbx\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nInstalling collected packages: dxtbx\n  Running setup.py develop for dxtbx\nSuccessfully installed dxtbx-3.13.dev0\n\u001b[91mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\u001b[0mProcessing: \"/dials/modules/cctbx_project/cctbx/libtbx_refresh.py\"\n  Generating C++ files in:\n    \"/dials/build/cctbx/eltbx\"\n  Generating C++ files in:\n    \"/dials/build/include/cctbx/boost_python\"\nProcessing: \"/dials/modules/cctbx_project/smtbx/libtbx_refresh.py\"\n  Generating C++ files in:\n    \"/dials/build/include/smtbx/boost_python\"\nProcessing: \"/dials/modules/cctbx_project/cbflib_adaptbx/libtbx_refresh.py\"\n  Copying to lib: \"/dials/modules/cbflib/pycbf/pycbf.py\"\nProcessing: \"/dials/modules/dxtbx/libtbx_refresh.py\"\nProcessing: \"/dials/modules/cctbx_project/iotbx/libtbx_refresh.py\"\n  Using fable to convert iotbx/pdb/hybrid_36_f.f\n    Writing: iotbx/pdb/hybrid_36_fem.cpp\nProcessing: \"/dials/modules/cctbx_project/mmtbx/libtbx_refresh.py\"\nProcessing: \"/dials/modules/cctbx_project/gltbx/libtbx_refresh.py\"\n  Generating C++ files in:\n    \"/dials/build/gltbx\"\n      fonts: 8x13 9x15 10x20 \nProcessing: \"/dials/modules/annlib_adaptbx/libtbx_refresh.py\"\n  Generating C++ files for self-inclusive approximate nearest neighbour\nProcessing: \"/dials/modules/cctbx_project/crys3d/libtbx_refresh.py\"\nProcessing: \"/dials/modules/dials/libtbx_refresh.py\"\nDIALS 3.dev.895-g5bf004b\nUpdating entry points for dials\nObtaining file:///dials/modules/dials\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nInstalling collected packages: dials\n  Running setup.py develop for dials\nSuccessfully installed dials-3.9.dev0\n\u001b[91mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\u001b[0mIdentified autocompletable commands: dials.find_spots dials.geometry_viewer dials.index dials.integrate dials.reciprocal_lattice_viewer dials.refine dials.reindex dials.rl_png\nProcessing: \"/dials/modules/cctbx_project/xfel/libtbx_refresh.py\"\n  Creating cxi_user directory\n  Creating cxi_user/__init__.py\nProcessing: \"/dials/modules/xia2/libtbx_refresh.py\"\nObtaining file:///dials/modules/xia2\n  Checking if build backend supports build_editable: started\n  Checking if build backend supports build_editable: finished with status 'done'\n  Preparing metadata (pyproject.toml): started\n  Preparing metadata (pyproject.toml): finished with status 'done'\nInstalling collected packages: xia2\n  Running setup.py develop for xia2\nSuccessfully installed xia2\n\u001b[91mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\u001b[0mXIA2 3.13.dev0\nDone.\nscons: Reading SConscript files ...\nCompiler settings:\n  CC:  /dials/conda_base/bin/x86_64-conda-linux-gnu-cc\n  CXX: /dials/conda_base/bin/x86_64-conda-linux-gnu-c++\nlibtbx.scons: OpenMP is disabled.\nBOOST_VERSION: 107400\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cctbx.getting_started'\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cctbx.sym_equiv_sites'\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cctbx.convert_ccp4_symop_lib'\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cctbx.lattice_symmetry'\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cctbx.find_distances'\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cctbx.sys_abs_equiv_space_groups'\n  Ignored: [Errno 2] No such file or directory: '/dials/build/exe_dev/cbflib.tst_memory'\ngltbx: Attempting to compile with system libraries\ngltbx: OpenGL headers and/or libraries not available.\ngltbx: Compilation skipped.\nscons: done reading SConscript files.\nscons: Building targets ...\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/ANN.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/ANN.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/bd_fix_rad_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/bd_fix_rad_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/bd_pr_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/bd_pr_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/bd_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/bd_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/bd_tree.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/bd_tree.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/brute.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/brute.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_dump.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_dump.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_fix_rad_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_fix_rad_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_pr_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_pr_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_split.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_split.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_tree.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_tree.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/kd_util.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/kd_util.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib/src/perf.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib/src/perf.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/ann/ann_adaptor.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include /dials/modules/annlib_adaptbx/ann/ann_adaptor.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/flex_types.h:6,\n                 from /dials/modules/annlib_adaptbx/include/annlib_adaptbx/ann_adaptor.h:4,\n                 from /dials/modules/annlib_adaptbx/ann/ann_adaptor.cpp:3:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/ann/boost_python/annlib_ext.o -c -std=c++11 -pthread -DBOOST_PYTHON_MAX_BASES=2 -DUSE_CONDA -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include -I/dials/conda_base/include/python3.10 /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/ANN.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/ANN.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/bd_fix_rad_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/bd_fix_rad_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/bd_pr_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/bd_pr_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/bd_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/bd_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/bd_tree.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/bd_tree.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/brute.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/brute.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_dump.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_dump.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_fix_rad_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_fix_rad_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_pr_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_pr_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_search.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_search.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_split.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_split.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_tree.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_tree.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/kd_util.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/kd_util.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o annlib_adaptbx/self_include/perf.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include -I/dials/modules/annlib -I/dials/modules/annlib/src -I/dials/modules/annlib/include -I/dials/modules/annlib_adaptbx/include -I/dials/build/annlib_adaptbx/include annlib_adaptbx/self_include/perf.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/maptbx/blobs_cmd.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/maptbx/asymmetric_map.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/maptbx/skeletons.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/maptbx/skeletons.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/maptbx/dijkstra.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o iotbx/xplor/map_reader.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/iotbx/xplor/map_reader.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o iotbx/xplor/map_writer.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/iotbx/xplor/map_writer.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/direct_space_asu/proto/cut.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/cut.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/direct_space_asu/proto/reference_table.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:9,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.h:18,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:21,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:1:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h: At global scope:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:18:18: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   18 |     typedef std::auto_ptr<facet_collection> pointer;\n      |                  ^~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/modules/cctbx_project/scitbx/array_family/detail/misc.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:1:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.cpp:12:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/basic.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/basic.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/xray_scattering/it1992.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/it1992.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/xray_scattering/wk1995.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/wk1995.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/xray_scattering/n_gaussian_raw.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/n_gaussian_raw.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/xray_scattering/n_gaussian.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/n_gaussian.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/fp_fdp.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/fp_fdp.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_01_12.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_01_12.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_13_24.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_13_24.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_25_36.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_25_36.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_37_48.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_37_48.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_49_60.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_49_60.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_61_72.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_61_72.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_73_84.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_73_84.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/henke_tables_85_92.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/henke_tables_85_92.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/icsd_radii.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/icsd_radii.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/covalent_radii.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/covalent_radii.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/neutron.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/neutron.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_01_12.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_01_12.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_13_24.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_13_24.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_25_36.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_25_36.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_37_48.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_37_48.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<const int*> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<const int*>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>'\n/dials/build/../conda_base/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]':\n/dials/build/../conda_base/include/boost/iterator/iterator_concepts.hpp:114:7:   required from 'struct boost::range_detail::IncrementableIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<const int*> >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<const int*>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<const int*> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<const int*>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:152:13:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:152:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<const int*> >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constrain\u001b[0m\u001b[91mts.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:278:9:   required from 'struct boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = const int*]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]':\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const scitbx::af::tiny<int, 3>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)\n      |         ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >)>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:278:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:278:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:318:12:   required from 'struct boost::ForwardRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n \u001b[0m\u001b[91m 158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >)>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:281:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n       \u001b[0m\u001b[91m          from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:281:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:318:12:   required from 'struct boost::ForwardRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:318:12:   required from 'struct boost::ForwardRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<long unsigned int> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:181:16:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>)>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:191:13:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:191:13:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:321:9:   required from 'struct boost::ForwardRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:181:16:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\nIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/range/concepts.hpp:322:9:   required from 'struct boost::ForwardRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRan\u001b[0m\u001b[91mgeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/concept_check.hpp:20,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]':\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/range/concepts.hpp:318:12: note: in a call to non-static member function 'boost::ForwardRangeConcept<std::vector<long unsigned int> >::~ForwardRangeConcept()'\n  318 |     struct ForwardRangeConcept : SinglePassRangeConcept<T>\n      |            ^~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_49_60.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_49_60.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_61_72.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_61_72.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/range/concepts.hpp:19,\n                 from /dials/build/../conda_base/include/boost/range/algorithm.hpp:29,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<const int*>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<const int*> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = const int*]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<const int*>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<const int*> >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = const int*]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<const int*>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<const int*> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<const int*>'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = const int*]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<const int*> >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<const int*>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<const int*>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<const int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = const int*]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const scitbx::af::tiny<int, 3> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/equal.hpp:174:13:   required from 'Value boost::accumulate(const SinglePassRange&, Value, BinaryOperation) [with SinglePassRange = scitbx::af::tiny<int, 3>; Value = long int; BinaryOperation = std::multiplies<long int>]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:59:30:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const scitbx::af::tiny<int, 3>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)\n      |         ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:125:16:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13:   required from 'struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:136:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:147:16:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13:   required from 'struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:158:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<long unsigned int> >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9:   required from 'struct boost::SinglePassRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:318:12:   required from 'struct boost::ForwardRangeConcept<std::vector<long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<long unsigned int>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:284:9: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)\n      |         ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:181:16:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:181:16:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >]'\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13:   required from 'struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> > > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<std::vector<long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<std::vector<long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ForwardRangeConcept<std::vector<long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/range/algorithm/adjacent_find.hpp:35:5:   required from 'typename boost::range_iterator<C>::type boost::range::max_element(ForwardRange&) [with ForwardRange = std::vector<long unsigned int>; typename boost::range_iterator<C>::type = std::vector<long unsigned int>::iterator]'\n/dials/modules/cctbx_project/cctbx/maptbx/blobs_cmd.cpp:94:32:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const long unsigned int*, std::vector<long unsigned int> >]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/range/concepts.hpp:197:13: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)\n      |             ^~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/sasaki_tables_73_82.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include cctbx/eltbx/sasaki_tables_73_82.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/tiny_pse.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/tiny_pse.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/wavelengths.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/wavelengths.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/electron_scattering/peng1996.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/electron_scattering/peng1996.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/eltbx/attenuation_coefficient.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/eltbx/attenuation_coefficient.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:9,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.cpp:12:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h: At global scope:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:18:18: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   18 |     typedef std::auto_ptr<facet_collection> pointer;\n      |                  ^~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/modules/cctbx_project/scitbx/array_family/detail/misc.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.cpp:12:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/asu.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/asu.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/bins.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/bins.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/index_generator.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/index_generator.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/index_span.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/index_span.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/flex_types.h:6,\n                 from /dials/modules/cctbx_project/iotbx/xplor/map_writer.h:5,\n                 from /dials/modules/cctbx_project/iotbx/xplor/map_writer.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/cctbx/maptbx/skeletons.cpp: In function 'cctbx::maptbx::skeleton cctbx::maptbx::swanson(const cctbx::maptbx::asymmetric_map&, double)':\n/dials/modules/cctbx_project/cctbx/maptbx/skeletons.cpp:117:25: warning: unused variable 'nbonds' [-Wunused-variable]\n  117 |   std::size_t nmarks=0, nbonds=0, min_count = 0, grows_count=0, join_count=0;\n      |                         ^~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/match_bijvoet_mates.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/match_bijvoet_mates.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/form_factor.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/gaussian.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering.h:5,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/it1992.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/form_factor.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/gaussian.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/n_gaussian.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/n_gaussian.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/structure_factors.h:4,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:3:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/match_indices.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/match_indices.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.cpp:4:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/form_factor.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/gaussian.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering.h:5,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/wk1995.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_types.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/cut.h:12,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:11,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.h:12,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.cpp:15:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/match_multi_indices.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/match_multi_indices.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/miller/sym_equiv.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/miller/sym_equiv.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/bricks.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/bricks.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/change_of_basis_op.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_types.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/cut.h:12,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/cut.cpp:3:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/find_affine.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/find_affine.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/flex_types.h:6,\n                 from /dials/modules/cctbx_project/iotbx/xplor/map_reader.h:7,\n                 from /dials/modules/cctbx_project/iotbx/xplor/map_reader.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/group_codes.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/group_codes.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/form_factor.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/gaussian.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/neutron.h:6,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/neutron.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/hall_in.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/hall_in.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/lattice_tr.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/lattice_tr.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/form_factor.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering/gaussian.h:4,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/xray_scattering.h:5,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/electron_scattering.h:5,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/electron_scattering/peng1996.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.h:12,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.cpp:15:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h: At global scope:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:18:18: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   18 |     typedef std::auto_ptr<facet_collection> pointer;\n      |                  ^~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:6,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.h:12,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/reference_table.cpp:15:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/lattice_symmetry.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/lattice_symmetry.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/flex_types.h:6,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/attenuation_coefficient.h:22,\n                 from /dials/modules/cctbx_project/cctbx/eltbx/attenuation_coefficient.cpp:13:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/miller.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/miller.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/reciprocal_space_asu.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_asu.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/reciprocal_space_ref_asu.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_ref_asu.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:9,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.cpp:4:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h: At global scope:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:18:18: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   18 |     typedef std::auto_ptr<facet_collection> pointer;\n      |                  ^~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/modules/cctbx_project/scitbx/array_family/detail/misc.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.cpp:4:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/rot_mx.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller.h:8,\n                 from /dials/modules/cctbx_project/cctbx/miller/bins.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/bins.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/rot_mx_info.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx_info.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx_info.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx_info.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.cpp: In member function 'int cctbx::sgtbx::rot_mx::order(int) const':\n/dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.cpp:96:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   96 |     if (type % 2) return -type * 2;\n      |     ^~\n/dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.cpp:97:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   97 |                   return -type;\n      |                   ^~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/row_echelon_solve.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/row_echelon_solve.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/rt_mx.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/index_generator.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/index_generator.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/select_generators.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/select_generators.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller.h:8,\n                 from /dials/modules/cctbx_project/cctbx/miller/index_span.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/index_span.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/seminvariant.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/seminvariant.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/site_symmetry.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/site_symmetry.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/space_group.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/space_group.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/space_group_type.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/python/detail/is_xxx.hpp:8,\n                 from /dials/build/../conda_base/include/boost/python/detail/is_auto_ptr.hpp:9,\n                 from /dials/build/../conda_base/include/boost/python/detail/copy_ctor_mutates_rhs.hpp:8,\n                 from /dials/build/../conda_base/include/boost/python/detail/value_arg.hpp:7,\n                 from /dials/build/../conda_base/include/boost/python/object/forward.hpp:10,\n                 from /dials/build/../conda_base/include/boost/python/object/pointer_holder.hpp:16,\n                 from /dials/build/../conda_base/include/boost/python/to_python_indirect.hpp:10,\n                 from /dials/build/../conda_base/include/boost/python/converter/arg_to_python.hpp:10,\n                 from /dials/build/../conda_base/include/boost/python/call.hpp:15,\n                 from /dials/build/../conda_base/include/boost/python/object_core.hpp:14,\n                 from /dials/build/../conda_base/include/boost/python/args.hpp:22,\n                 from /dials/build/../conda_base/include/boost/python.hpp:11,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:6:\n/dials/build/../conda_base/include/boost/python/detail/is_auto_ptr.hpp:17:40: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   17 | BOOST_PYTHON_IS_XXX_DEF(auto_ptr, std::auto_ptr, 1)\n      |                                        ^~~~~~~~\n/dials/build/../conda_base/include/boost/detail/is_xxx.hpp:20:4: note: in definition of macro 'BOOST_DETAIL_IS_XXX_DEF'\n   20 |    qualified_name< BOOST_PP_ENUM_PARAMS_Z(1, nargs, T) >        \\\n      |    ^~~~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/python/detail/is_auto_ptr.hpp:17:1: note: in expansion of macro 'BOOST_PYTHON_IS_XXX_DEF'\n   17 | BOOST_PYTHON_IS_XXX_DEF(auto_ptr, std::auto_ptr, 1)\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/sp_counted_impl.hpp:35,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/shared_count.hpp:27,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/shared_ptr.hpp:17,\n                 from /dials/build/../conda_base/include/boost/shared_ptr.hpp:17,\n                 from /dials/modules/annlib_adaptbx/include/annlib_adaptbx/ann_adaptor.h:3,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:2:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/symbols.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/symbols.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match_indices.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match_indices.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match_multi_indices.h:6,\n                 from /dials/modules/cctbx_project/cctbx/miller/match_multi_indices.cpp:3:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:31,\n                 from /dials/modules/cctbx_project/scitbx/array_family/shared.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match_bijvoet_mates.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/match_bijvoet_mates.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:47,\n                 from /dials/build/../conda_base/include/boost/python/call.hpp:33,\n                 from /dials/build/../conda_base/include/boost/python/object_core.hpp:14,\n                 from /dials/build/../conda_base/include/boost/python/args.hpp:22,\n                 from /dials/build/../conda_base/include/boost/python.hpp:11,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:6:\n/dials/build/../conda_base/include/boost/python/call.hpp: In function 'typename boost::python::detail::returnable<T>::type boost::python::call(PyObject*, boost::type<Target>*)':\n/dials/build/../conda_base/include/boost/python/call.hpp:62:28: warning: 'PyObject* PyEval_CallFunction(PyObject*, const char*, ...)' is deprecated [-Wdeprecated-declarations]\n   62 |     PyObject* const result =\n      |         ~~~~~~~~~~~~~~~~~~~^\n   63 |         PyEval_CallFunction(\n      |         ~~~~~~~~~~~~~~~~~~~~\n   64 |             callable\n      |             ~~~~~~~~        \n   65 |             , const_cast<char*>(\"(\" BOOST_PP_REPEAT_1ST(N, BOOST_PYTHON_FIXED, \"O\") \")\")\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   66 |             BOOST_PP_REPEAT_1ST(N, BOOST_PYTHON_FAST_ARG_TO_PYTHON_GET, nil)\n      |             ~               \n\u001b[0m\u001b[91mIn file included from /dials/conda_base/include/python3.10/Python.h:130,\n                 from /dials/build/../conda_base/include/boost/python/detail/wrap_python.hpp:178,\n                 from /dials/build/../conda_base/include/boost/python/detail/prefix.hpp:13,\n                 from /dials/build/include/scitbx/array_family/boost_python/flex_fwd.h:12,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:1:\n/dials/conda_base/include/python3.10/ceval.h:26:43: note: declared here\n   26 | Py_DEPRECATED(3.9) PyAPI_FUNC(PyObject *) PyEval_CallFunction(\n      |                                           ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/tensor_rank_2.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/tensor_rank_2.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:47,\n                 from /dials/build/../conda_base/include/boost/python/call_method.hpp:32,\n                 from /dials/build/../conda_base/include/boost/python.hpp:17,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:6:\n/dials/build/../conda_base/include/boost/python/call_method.hpp: In function 'typename boost::python::detail::returnable<T>::type boost::python::call_method(PyObject*, const char*, boost::type<Target>*)':\n/dials/build/../conda_base/include/boost/python/call_method.hpp:61:26: warning: 'PyObject* PyEval_CallMethod(PyObject*, const char*, const char*, ...)' is deprecated [-Wdeprecated-declarations]\n   61 |     PyObject* const result =\n      |         ~~~~~~~~~~~~~~~~~^~~\n   62 |         PyEval_CallMethod(\n      |         ~~~~~~~~~~~~~~~~~~\n   63 |             self\n      |             ~~~~          \n   64 |             , const_cast<char*>(name)\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~\n   65 |             , const_cast<char*>(\"(\" BOOST_PP_REPEAT_1ST(N, BOOST_PYTHON_FIXED, \"O\") \")\")\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   66 |             BOOST_PP_REPEAT_1ST(N, BOOST_PYTHON_FAST_ARG_TO_PYTHON_GET, nil)\n      |             ~             \nIn file included from /dials/conda_base/include/python3.10/Python.h:130,\n                 from /dials/build/../conda_base/include/boost/python/detail/wrap_python.hpp:178,\n                 from /dials/build/../conda_base/include/boost/python/detail/prefix.hpp:13,\n                 from /dials/build/include/scitbx/array_family/boost_python/flex_fwd.h:12,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:1:\n/dials/conda_base/include/python3.10/ceval.h:28:43: note: declared here\n   28 | Py_DEPRECATED(3.9) PyAPI_FUNC(PyObject *) PyEval_CallMethod(\n      |                                           ^~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/brick.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/bricks.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/tr_group.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/python/wrapper.hpp:8,\n                 from /dials/build/../conda_base/include/boost/python/object/value_holder.hpp:15,\n                 from /dials/build/../conda_base/include/boost/python/object/class_metadata.hpp:14,\n                 from /dials/build/../conda_base/include/boost/python/class.hpp:23,\n                 from /dials/build/../conda_base/include/boost/python.hpp:18,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:6:\n/dials/build/../conda_base/include/boost/python/override.hpp: In member function 'boost::python::detail::method_result boost::python::override::operator()() const':\n/dials/build/../conda_base/include/boost/python/override.hpp:100:32: warning: 'PyObject* PyEval_CallFunction(PyObject*, const char*, ...)' is deprecated [-Wdeprecated-declarations]\n  100 |             PyEval_CallFunction(\n      |             ~~~~~~~~~~~~~~~~~~~^\n  101 |                 this->ptr()\n      |                 ~~~~~~~~~~~     \n  102 |               , const_cast<char*>(\"()\")\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~\n  103 |             ));\n      |             ~                   \n\u001b[0m\u001b[91mIn file included from /dials/conda_base/include/python3.10/Python.h:130,\n                 from /dials/build/../conda_base/include/boost/python/detail/wrap_python.hpp:178,\n                 from /dials/build/../conda_base/include/boost/python/detail/prefix.hpp:13,\n                 from /dials/build/include/scitbx/array_family/boost_python/flex_fwd.h:12,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:1:\n/dials/conda_base/include/python3.10/ceval.h:26:43: note: declared here\n   26 | Py_DEPRECATED(3.9) PyAPI_FUNC(PyObject *) PyEval_CallFunction(\n      |                                           ^~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/tr_vec.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/tr_vec.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/lattice_tr.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/lattice_tr.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/hall_in.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/find_affine.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/find_affine.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/yield_k.hpp:23,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/spinlock.hpp:42,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/shared_ptr.hpp:29,\n                 from /dials/build/../conda_base/include/boost/shared_ptr.hpp:17,\n                 from /dials/modules/annlib_adaptbx/include/annlib_adaptbx/ann_adaptor.h:3,\n                 from /dials/modules/annlib_adaptbx/ann/boost_python/annlib_ext.cpp:2:\n/dials/build/../conda_base/include/boost/bind.hpp: At global scope:\n/dials/build/../conda_base/include/boost/config/pragma_message.hpp:24:34: note: '#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.'\n   24 | # define BOOST_PRAGMA_MESSAGE(x) _Pragma(BOOST_STRINGIZE(message(x)))\n      |                                  ^~~~~~~\n/dials/build/../conda_base/include/boost/bind.hpp:36:1: note: in expansion of macro 'BOOST_PRAGMA_MESSAGE'\n   36 | BOOST_PRAGMA_MESSAGE(\n      | ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/config/pragma_message.hpp:24:34: note: '#pragma message: This header is deprecated. Use <iterator> instead.'\n   24 | # define BOOST_PRAGMA_MESSAGE(x) _Pragma(BOOST_STRINGIZE(message(x)))\n      |                                  ^~~~~~~\n/dials/build/../conda_base/include/boost/config/header_deprecated.hpp:23:37: note: in expansion of macro 'BOOST_PRAGMA_MESSAGE'\n   23 | # define BOOST_HEADER_DEPRECATED(a) BOOST_PRAGMA_MESSAGE(\"This header is deprecated. Use \" a \" instead.\")\n      |                                     ^~~~~~~~~~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/detail/iterator.hpp:13:1: note: in expansion of macro 'BOOST_HEADER_DEPRECATED'\n   13 | BOOST_HEADER_DEPRECATED(\"<iterator>\")\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/lattice_symmetry.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/lattice_symmetry.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/miller.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller.h:8,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_reference_asu.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_ref_asu.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_asu.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/utils.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/utils.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/basic.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/row_echelon_solve.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/row_echelon_solve.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/cctbx/hendrickson_lattman.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/sym_equiv.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/asu.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/wyckoff.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/wyckoff.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/select_generators.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/select_generators.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/seminvariant.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/seminvariant.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /dials/modules/cctbx_project/cctbx/maptbx/utils.h:16,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/structure_factors.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:3:\n/dials/modules/cctbx_project/cctbx/maptbx/interpolation.h: In function 'scitbx::af::tiny<FloatType, 4> cctbx::maptbx::quadratic_interpolation_with_gradients(const scitbx::af::const_ref<MapFloatType, scitbx::af::c_grid_padded<3> >&, const scitbx::vec3<NumTypeRhs>&, const scitbx::vec3<NumTypeRhs>&)':\n/dials/modules/cctbx_project/cctbx/maptbx/interpolation.h:167:42: warning: typedef 'iv_t' locally defined but not used [-Wunused-local-typedefs]\n  167 |     typedef typename index_t::value_type iv_t;\n      |                                          ^~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/reference_settings/hall_symbol_table.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/hall_symbol_table.cpp\n\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/maptbx/structure_factors.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:3:\n/dials/modules/cctbx_project/cctbx/maptbx/utils.h: In constructor 'cctbx::maptbx::fit_point_3d_grid_search::fit_point_3d_grid_search(const cctbx::cartesian<>&, const scitbx::af::const_ref<double, scitbx::af::c_grid<3> >&, const double&, const cctbx::uctbx::unit_cell&, const double&, const double&)':\n/dials/modules/cctbx_project/cctbx/maptbx/utils.h:1192:22: warning: 'cctbx::maptbx::fit_point_3d_grid_search::site_cart_moved_' will be initialized after [-Wreorder]\n 1192 |   cctbx::cartesian<> site_cart_moved_;\n      |                      ^~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/cctbx/maptbx/utils.h:1191:10: warning:   'double cctbx::maptbx::fit_point_3d_grid_search::map_best_' [-Wreorder]\n 1191 |   double map_best_, map_start_;\n      |          ^~~~~~~~~\n/dials/modules/cctbx_project/cctbx/maptbx/utils.h:1193:3: warning:   when initialized here [-Wreorder]\n 1193 |   fit_point_3d_grid_search(\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:3:\n/dials/modules/cctbx_project/cctbx/maptbx/structure_factors.h: In constructor 'cctbx::maptbx::structure_factors::from_map<FloatType>::from_map(const cctbx::sgtbx::space_group&, bool, const scitbx::af::const_ref<cctbx::miller::index<> >&, const scitbx::af::const_ref<std::complex<_Up>, scitbx::af::c_grid_padded<3> >&, bool)':\n/dials/modules/cctbx_project/cctbx/maptbx/structure_factors.h:310:27: warning: typedef 'f_t' locally defined but not used [-Wunused-local-typedefs]\n  310 |         typedef FloatType f_t;\n      |                           ^~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o lib/libiotbx_xplor.so -shared -std=c++11 -std=c++11 iotbx/xplor/map_reader.o iotbx/xplor/map_writer.o -Llib -L/dials/modules/lib -L/dials/modules/cctbx_project/lib -L/dials/conda_base/lib -Llib -L/dials/modules/lib -L/dials/modules/cctbx_project/lib -lm\n\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_constraints.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_symmetry.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_symmetry_table.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_symmetry.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:9,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.h:18,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:21,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h: At global scope:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:18:18: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   18 |     typedef std::auto_ptr<facet_collection> pointer;\n      |                  ^~~~~~~~\nIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/modules/cctbx_project/scitbx/array_family/detail/misc.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:9,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.h:18,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:5:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h: At global scope:\n/dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/facet_collection.h:18:18: warning: 'template<class> class std::auto_ptr' is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]\n   18 |     typedef std::auto_ptr<facet_collection> pointer;\n      |                  ^~~~~~~~\nIn file included from /dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/memory:76,\n                 from /dials/modules/cctbx_project/scitbx/array_family/detail/misc.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reciprocal_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/structure_factors.h:4,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:3:\n/dials/conda_base/x86_64-conda-linux-gnu/include/c++/11.3.0/bits/unique_ptr.h:57:28: note: declared here\n   57 |   template<typename> class auto_ptr;\n      |                            ^~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/reference_settings/matrix_group_code_table.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/matrix_group_code_table.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/symbols.cpp:7:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group_type.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/reference_settings/normalizer.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/normalizer.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/basic.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_vec.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_vec.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/sgtbx/reference_settings/wyckoff.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/wyckoff.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/uctbx/uctbx.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/uctbx/uctbx.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/uctbx/spoil_optimization.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/uctbx/spoil_optimization.cpp\n\u001b[91m/dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp: In member function 'cctbx::maptbx::asymmetric_map::fft_map_t cctbx::maptbx::asymmetric_map::map_for_fft() const':\n/dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.cpp:77:18: warning: unused variable 'order' [-Wunused-variable]\n   77 |   unsigned short order = this->space_group().order_z();\n      |                  ^~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/cctbx/hendrickson_lattman.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/sym_equiv.h:4,\n                 from /dials/modules/cctbx_project/cctbx/miller/sym_equiv.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o cctbx/uctbx/crystal_orientation.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/modules/cctbx_project -I/dials/build/../conda_base/include /dials/modules/cctbx_project/cctbx/uctbx/crystal_orientation.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o omptbx/stubs.o -c -std=c++11 -pthread -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/modules/cctbx_project /dials/modules/cctbx_project/omptbx/stubs.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tensor_rank_2.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tensor_rank_2.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/hall_symbol_table.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/change_of_basis_op.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tr_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/space_group.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_constraints.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_symmetry.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/wyckoff.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/wyckoff.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/matrix_group_code_table.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/wyckoff.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rot_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/rt_mx.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/reference_settings/normalizer.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/yield_k.hpp:23,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/spinlock.hpp:42,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/shared_ptr.hpp:29,\n                 from /dials/build/../conda_base/include/boost/smart_ptr/shared_array.hpp:24,\n                 from /dials/build/../conda_base/include/boost/shared_array.hpp:17,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/tensor_rank_2.h:9,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/site_symmetry.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/wyckoff.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/sym_equiv_sites.h:5,\n                 from /dials/modules/cctbx_project/cctbx/crystal/direct_space_asu.h:4,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/direct_space_asu.h:5,\n                 from /dials/modules/cctbx_project/cctbx/sgtbx/direct_space_asu/proto/asymmetric_unit.h:6,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/asymmetric_map.h:18,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:21,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/build/../conda_base/include/boost/config/pragma_message.hpp:24:34: note: '#pragma message: This header is deprecated. Use <iterator> instead.'\n   24 | # define BOOST_PRAGMA_MESSAGE(x) _Pragma(BOOST_STRINGIZE(message(x)))\n      |                                  ^~~~~~~\n/dials/build/../conda_base/include/boost/config/header_deprecated.hpp:23:37: note: in expansion of macro 'BOOST_PRAGMA_MESSAGE'\n   23 | # define BOOST_HEADER_DEPRECATED(a) BOOST_PRAGMA_MESSAGE(\"This header is deprecated. Use \" a \" instead.\")\n      |                                     ^~~~~~~~~~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/detail/iterator.hpp:13:1: note: in expansion of macro 'BOOST_HEADER_DEPRECATED'\n   13 | BOOST_HEADER_DEPRECATED(\"<iterator>\")\n      | ^~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o boost_adaptbx/graph/breadth_first_search_ext.o -c -std=c++11 -pthread -DBOOST_PYTHON_MAX_BASES=2 -DUSE_CONDA -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules/cctbx_project -I/dials/build/include -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/build/../conda_base/include -I/dials/conda_base/include/python3.10 /dials/modules/cctbx_project/boost_adaptbx/graph/breadth_first_search_ext.cpp\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h: In member function 'const ElementType& scitbx::af::versa_plain<ElementType, AccessorType>::at(scitbx::af::versa_plain<ElementType, AccessorType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/versa_plain.h:161:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  161 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(versa_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o lib/libomptbx.so -shared -std=c++11 -std=c++11 omptbx/stubs.o -Llib -L/dials/modules/lib -L/dials/modules/cctbx_project/lib -L/dials/conda_base/lib -Llib -L/dials/modules/lib -L/dials/modules/cctbx_project/lib -lboost_thread -lboost_system\n\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/uctbx.h:8,\n                 from /dials/modules/cctbx_project/cctbx/crystal_orientation.h:4,\n                 from /dials/modules/cctbx_project/cctbx/uctbx/crystal_orientation.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/modules/cctbx_project/scitbx/array_family/ref.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:4,\n                 from /dials/modules/cctbx_project/scitbx/vec3.h:4,\n                 from /dials/modules/cctbx_project/scitbx/mat3.h:6,\n                 from /dials/modules/cctbx_project/scitbx/sym_mat3.h:4,\n                 from /dials/modules/cctbx_project/cctbx/uctbx.h:8,\n                 from /dials/modules/cctbx_project/cctbx/uctbx/fast_minimum_reduction.h:4,\n                 from /dials/modules/cctbx_project/cctbx/uctbx/uctbx.cpp:1:\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h: In member function 'const ElementType& scitbx::af::tiny_plain<ElementType, N>::at(scitbx::af::tiny_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/tiny_plain.h:48:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n   48 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(tiny_plain, elems, N)\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::WritablePropertyMapConcept<int*, long unsigned int>]':\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:76:5:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]\n   47 |     static void failed() { ((Model*)0)->constraints(); }\n      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:179:10: note: in a call to non-static member function 'void boost::WritablePropertyMapConcept<PMap, Key>::constraints() [with PMap = int*; Key = long unsigned int]'\n  179 |     void constraints() {\n      |          ^~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h: In member function 'const ElementType& scitbx::af::shared_plain<ElementType>::at(scitbx::af::shared_plain<ElementType>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/shared_plain.h:277:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  277 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(shared_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type)':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:62:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   62 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/modules/cctbx_project/scitbx/array_family/small_plain.h: In member function 'const ElementType& scitbx::af::small_plain<ElementType, N>::at(scitbx::af::small_plain<ElementType, N>::size_type) const':\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:3: warning: this 'if' clause does not guard... [-Wmisleading-indentation]\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |   ^~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/detail/ref_helpers.h:65:37: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\n   65 |   if (i >= sz) throw_range_error(); return beg[i]; \\\n      |                                     ^~~~~~\n/dials/modules/cctbx_project/scitbx/array_family/small_plain.h:107:7: note: in expansion of macro 'SCITBX_ARRAY_FAMILY_BEGIN_END_ETC'\n  107 |       SCITBX_ARRAY_FAMILY_BEGIN_END_ETC(small_plain,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::WritablePropertyMapConcept<int*, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<int*, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<int*, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::WritablePropertyMapConcept<int*, long unsigned int>)>'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:76:5:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]':\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:180:7:   required from 'void boost::WritablePropertyMapConcept<PMap, Key>::constraints() [with PMap = int*; Key = long unsigned int]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::WritablePropertyMapConcept<int*, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<int*, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<int*, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::WritablePropertyMapConcept<int*, long unsigned int>)>'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:76:5:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/utility/result_of.hpp:13,\n                 from /dials/build/../conda_base/include/boost/optional/optional.hpp:56,\n                 from /dials/build/../conda_base/include/boost/optional.hpp:15,\n                 from /dials/modules/cctbx_project/scitbx/array_family/ref_reductions.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:17: note: in a call to non-static member function 'boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>::~ConvertibleConcept()'\n  206 |   BOOST_concept(Convertible,(X)(Y))\n      |                 ^~~~~~~~~~~\n/dials/build/../conda_base/include/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'\n   29 | #    define BOOST_PP_CAT_I(a, b) a ## b\n      |                                  ^\n/dials/build/../conda_base/include/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'\n   23 |     struct BOOST_PP_CAT(name,Concept)                                           \\\n      |            ^~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:3: note: in expansion of macro 'BOOST_concept'\n  206 |   BOOST_concept(Convertible,(X)(Y))\n      |   ^~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o boost_adaptbx/graph/clustering_algorithm_ext.o -c -std=c++11 -pthread -DBOOST_PYTHON_MAX_BASES=2 -DUSE_CONDA -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules/cctbx_project -I/dials/build/include -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/build/../conda_base/include -I/dials/conda_base/include/python3.10 /dials/modules/cctbx_project/boost_adaptbx/graph/clustering_algorithm_ext.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::writable_property_map_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::WritablePropertyMapConcept<int*, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<int*, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::WritablePropertyMapConcept<int*, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::WritablePropertyMapConcept<int*, long unsigned int>)>'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:76:5:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::lvalue_property_map_tag; Y = boost::writable_property_map_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o boost_adaptbx/graph/connected_component_algorithm_ext.o -c -std=c++11 -pthread -DBOOST_PYTHON_MAX_BASES=2 -DUSE_CONDA -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules/cctbx_project -I/dials/build/include -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/build/../conda_base/include -I/dials/conda_base/include/python3.10 /dials/modules/cctbx_project/boost_adaptbx/graph/connected_component_algorithm_ext.cpp\n/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o boost_adaptbx/graph/graph_ext.o -c -std=c++11 -pthread -DBOOST_PYTHON_MAX_BASES=2 -DUSE_CONDA -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules/cctbx_project -I/dials/build/include -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/build/../conda_base/include -I/dials/conda_base/include/python3.10 /dials/modules/cctbx_project/boost_adaptbx/graph/graph_ext.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::DFSVisitorConcept<boost::detail::components_recorder<int*>, boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]':\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:130:9:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]\n   47 |     static void failed() { ((Model*)0)->constraints(); }\n      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:39:10: note: in a call to non-static member function 'void boost::DFSVisitorConcept<Visitor, Graph>::constraints() [with Visitor = boost::detail::components_recorder<int*>; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n   39 |     void constraints()\n      |          ^~~~~~~~~~~\n\u001b[0m/dials/conda_base/bin/x86_64-conda-linux-gnu-c++ -o boost_adaptbx/graph/graph_structure_comparison_ext.o -c -std=c++11 -pthread -DBOOST_PYTHON_MAX_BASES=2 -DUSE_CONDA -fPIC -fno-strict-aliasing -Wall -Wno-sign-compare -Wno-unknown-pragmas -Wno-parentheses -DNDEBUG -O3 -funroll-loops -DBOOST_ALL_NO_LIB -ffast-math -I/dials/modules/cctbx_project -I/dials/build/include -I/dials/modules -I/dials/modules/cctbx_project -I/dials/build/annlib_adaptbx/include -I/dials/build/../conda_base/include -I/dials/build/include -I/dials/build/../conda_base/include -I/dials/conda_base/include/python3.10 /dials/modules/cctbx_project/boost_adaptbx/graph/graph_structure_comparison_ext.cpp\n\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::detail::components_recorder<int*> > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::detail::components_recorder<int*> >'\n/dials/build/../conda_base/include/boost/concept_check.hpp:165:3:   required from 'struct boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:130:9:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::detail::components_recorder<int*> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> >]':\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:41:9:   required from 'void boost::DFSVisitorConcept<Visitor, Graph>::constraints() [with Visitor = boost::detail::components_recorder<int*>; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DFSVisitorConcept<boost::detail::components_recorder<int*>, boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DFSVisitorConcept<boost::detail::components_recorder<int*>, boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DFSVisitorConcept<boost::detail::components_recorder<int*>, boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DFSVisitorConcept<boost::detail::components_recorder<int*>, boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >)>'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:130:9:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/utility/result_of.hpp:13,\n                 from /dials/build/../conda_base/include/boost/optional/optional.hpp:56,\n                 from /dials/build/../conda_base/include/boost/optional.hpp:15,\n                 from /dials/modules/cctbx_project/scitbx/array_family/ref_reductions.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/build/../conda_base/include/boost/concept_check.hpp:165:17: note: in a call to non-static member function 'boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> >::~CopyConstructibleConcept()'\n  165 |   BOOST_concept(CopyConstructible,(TT))\n      |                 ^~~~~~~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'\n   29 | #    define BOOST_PP_CAT_I(a, b) a ## b\n      |                                  ^\n/dials/build/../conda_base/include/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'\n   23 |     struct BOOST_PP_CAT(name,Concept)                                           \\\n      |            ^~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/concept_check.hpp:165:3: note: in expansion of macro 'BOOST_concept'\n  165 |   BOOST_concept(CopyConstructible,(TT))\n      |   ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:66:5:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:87:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]':\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:129:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/utility/result_of.hpp:13,\n                 from /dials/build/../conda_base/include/boost/optional/optional.hpp:56,\n                 from /dials/build/../conda_base/include/boost/optional.hpp:15,\n                 from /dials/modules/cctbx_project/scitbx/array_family/ref_reductions.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:15: note: in a call to non-static member function 'boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >::~IncidenceGraphConcept()'\n   75 | BOOST_concept(IncidenceGraph, (G)) : Graph< G >\n      |               ^~~~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'\n   29 | #    define BOOST_PP_CAT_I(a, b) a ## b\n      |                                  ^\n/dials/build/../conda_base/include/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'\n   23 |     struct BOOST_PP_CAT(name,Concept)                                           \\\n      |            ^~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1: note: in expansion of macro 'BOOST_concept'\n   75 | BOOST_concept(IncidenceGraph, (G)) : Graph< G >\n      | ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]':\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:134:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]\n   47 |     static void failed() { ((Model*)0)->constraints(); }\n      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:205:10: note: in a call to non-static member function 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n  205 |     void constraints() {\n      |          ^~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::default_color_type> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::default_color_type>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::default_color_type> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::default_color_type>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::ColorValue<boost::default_color_type> >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:505:5:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::ColorValue<boost::default_color_type>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]':\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:136:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/utility/result_of.hpp:13,\n                 from /dials/build/../conda_base/include/boost/optional/optional.hpp:56,\n                 from /dials/build/../conda_base/include/boost/optional.hpp:15,\n                 from /dials/modules/cctbx_project/scitbx/array_family/ref_reductions.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:15: note: in a call to non-static member function 'boost::concepts::ColorValueConcept<boost::default_color_type>::~ColorValueConcept()'\n  502 | BOOST_concept(ColorValue, (C))\n      |               ^~~~~~~~~~\n/dials/build/../conda_base/include/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'\n   29 | #    define BOOST_PP_CAT_I(a, b) a ## b\n      |                                  ^\n/dials/build/../conda_base/include/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'\n   23 |     struct BOOST_PP_CAT(name,Concept)                                           \\\n      |            ^~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1: note: in expansion of macro 'BOOST_concept'\n  502 | BOOST_concept(ColorValue, (C))\n      | ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<boost::detail::components_recorder<int*> >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<boost::detail::components_recorder<int*> > >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5:   required from 'struct boost::CopyConstructible<boost::detail::components_recorder<int*> >'\n/dials/build/../conda_base/include/boost/concept_check.hpp:165:3:   required from 'struct boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::CopyConstructibleConcept<boost::detail::components_recorder<int*> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:130:9:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::CopyConstructible<TT>::~CopyConstructible() [with TT = boost::detail::components_recorder<int*>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:167:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::Graph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::Graph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:66:5:   required from 'struct boost::concepts::Graph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::Graph<G>::~Graph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:66:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n   66 |     BOOST_CONCEPT_USAGE(Graph)\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:87:5:   required from 'struct boost::concepts::IncidenceGraph<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'struct boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:87:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n   87 |     BOOST_CONCEPT_USAGE(IncidenceGraph)\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]':\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:206:7:   required from 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]\n   47 |     static void failed() { ((Model*)0)->constraints(); }\n      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:147:10: note: in a call to non-static member function 'void boost::ReadablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n  147 |     void constraints() {\n      |          ^~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::constraint<Model>::failed() [with Model = boost::WritablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]':\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:207:7:   required from 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:47:52: warning: 'this' pointer is null [-Wnonnull]\n   47 |     static void failed() { ((Model*)0)->constraints(); }\n      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:179:10: note: in a call to non-static member function 'void boost::WritablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n  179 |     void constraints() {\n      |          ^~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>]':\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:208:7:   required from 'void boost::ReadWritePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadWritePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/utility/result_of.hpp:13,\n                 from /dials/build/../conda_base/include/boost/optional/optional.hpp:56,\n                 from /dials/build/../conda_base/include/boost/optional.hpp:15,\n                 from /dials/modules/cctbx_project/scitbx/array_family/ref_reductions.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small.h:4,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/flex_grid.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/accessors/c_grid_padded.h:8,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/skeletons.h:13,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:4:\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:17: note: in a call to non-static member function 'boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::read_write_property_map_tag>::~ConvertibleConcept()'\n  206 |   BOOST_concept(Convertible,(X)(Y))\n      |                 ^~~~~~~~~~~\n/dials/build/../conda_base/include/boost/preprocessor/cat.hpp:29:34: note: in definition of macro 'BOOST_PP_CAT_I'\n   29 | #    define BOOST_PP_CAT_I(a, b) a ## b\n      |                                  ^\n/dials/build/../conda_base/include/boost/concept/detail/concept_def.hpp:23:12: note: in expansion of macro 'BOOST_PP_CAT'\n   23 |     struct BOOST_PP_CAT(name,Concept)                                           \\\n      |            ^~~~~~~~~~~~\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:3: note: in expansion of macro 'BOOST_concept'\n  206 |   BOOST_concept(Convertible,(X)(Y))\n      |   ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::default_color_type>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::default_color_type> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::default_color_type]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::default_color_type>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::default_color_type> >]'\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = boost::default_color_type]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp: In instantiation of 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::ColorValue<boost::default_color_type>]':\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::ColorValue<boost::default_color_type> >]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:505:5:   required from 'struct boost::concepts::ColorValue<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:502:1:   required from 'struct boost::concepts::ColorValueConcept<boost::default_color_type>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::ColorValueConcept<boost::default_color_type>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::ColorValueConcept<boost::default_color_type> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:48: warning: 'this' pointer is null [-Wnonnull]\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |                             ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91m/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::ColorValue<C>::~ColorValue() [with C = boost::default_color_type]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:505:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  505 |     BOOST_CONCEPT_USAGE(ColorValue)\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> > >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:52:50:   required from 'struct boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> >)>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:89:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::MultiPassInputIterator<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int> >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:89:9:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:129:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::concepts::MultiPassInputIterator<T>::~MultiPassInputIterator() [with T = boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property>, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::no_property> >, boost::no_property> > > >, long unsigned int, boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>, long int>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:52:50: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n   52 |     BOOST_concept(MultiPassInputIterator, (T)) { BOOST_CONCEPT_USAGE(\n      |                                                  ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5:   required from 'struct boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:90:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::DefaultConstructible<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:90:9:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:129:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:137:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5:   required from 'struct boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:91:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::EqualityComparable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:91:9:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:129:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::EqualityComparable<TT>::~EqualityComparable() [with TT = boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:233:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:145:5:   required from 'struct boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> > >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >)>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:92:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Assignable<boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int> >]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:92:9:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:129:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Assignable<TT>::~Assignable() [with TT = boost::detail::edge_desc_impl<boost::undirected_tag, long unsigned int>]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:145:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  145 |     BOOST_CONCEPT_USAGE(Assignable) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag>)>'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:93:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::undir_adj_list_traversal_tag, boost::incidence_graph_tag>]':\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:93:9:   required from 'boost::concepts::IncidenceGraph<G>::~IncidenceGraph() [with G = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:75:1:   required from 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::IncidenceGraphConcept<boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> >]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:129:9:   required from 'void boost::detail::depth_first_visit_impl(const IncidenceGraph&, typename boost::graph_traits<Graph>::vertex_descriptor, DFSVisitor&, ColorMap, TerminatorFunc) [with IncidenceGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; TerminatorFunc = boost::detail::nontruth2; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:30:7: note: in a call to non-static member function 'boost::Convertible<X, Y>::~Convertible() [with X = boost::undir_adj_list_traversal_tag; Y = boost::incidence_graph_tag]'\n   30 |       ~model()\n      |       ^\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5: note: in expansion of macro 'BOOST_CONCEPT_USAGE'\n  208 |     BOOST_CONCEPT_USAGE(Convertible) {\n      |     ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >]':\n/dials/build/../conda_base/include/boost/concept_check.hpp:208:5:   required from 'struct boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept_check.hpp:206:3:   required from 'struct boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\nIn file included from /dials/build/../conda_base/include/boost/concept_check.hpp:31,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:20,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/usage.hpp:16:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]'\n   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }\n      |     ^\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/concept/assert.hpp:35,\n                 from /dials/build/../conda_base/include/boost/property_map/property_map.hpp:19,\n                 from /dials/build/../conda_base/include/boost/graph/graph_concepts.hpp:17,\n                 from /dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:18,\n                 from /dials/build/../conda_base/include/boost/graph/connected_components.hpp:15,\n                 from /dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:5:\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp: In instantiation of 'static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ConvertibleConcept<boost::lvalue_property_map_tag, boost::readable_property_map_tag>]':\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:148:7:   required from 'void boost::ReadablePropertyMapConcept<PMap, Key>::constraints() [with PMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; Key = long unsigned int]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of 'template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>]'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:42:5:   required from 'const bool boost::concepts::not_satisfied<boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >::value'\n/dials/build/../conda_base/include/boost/concept/detail/has_constraints.hpp:45:51:   required from 'struct boost::concepts::not_satisfied<boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int> >'\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:51:8:   required from 'struct boost::concepts::requirement_<void (*)(boost::ReadablePropertyMapConcept<boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >, long unsigned int>)>'\n/dials/build/../conda_base/include/boost/property_map/property_map.hpp:206:7:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:286:39:   required from 'void boost::depth_first_search(const VertexListGraph&, DFSVisitor, ColorMap, typename boost::graph_traits<Graph>::vertex_descriptor) [with VertexListGraph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; DFSVisitor = boost::detail::components_recorder<int*>; ColorMap = boost::shared_array_property_map<boost::default_color_type, boost::vec_adj_list_vertex_id_map<boost::no_property, long unsigned int> >; typename boost::graph_traits<Graph>::vertex_descriptor = long unsigned int]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:397:42:   required from 'void boost::graph::detail::depth_first_search_impl<Graph>::operator()(const Graph&, const ArgPack&) const [with ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:406:5:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type boost::graph::depth_first_search_with_named_params(const Param0&, const ArgPack&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ArgPack = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const ArgPack&)>::type = void]'\n/dials/build/../conda_base/include/boost/graph/depth_first_search.hpp:409:1:   required from 'typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type boost::depth_first_search(const Param0&, const boost::bgl_named_params<T, Tag, Base>&) [with Param0 = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; P = boost::detail::components_recorder<int*>; T = boost::graph_visitor_t; R = boost::no_property; typename boost::result_of<boost::graph::detail::depth_first_search_impl<Param0>(Param0, const typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type&)>::type = void; typename boost::detail::convert_bgl_params_to_boost_parameter<boost::bgl_named_params<T, Tag, Base> >::type = boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::graph::keywords::tag::visitor, const boost::detail::components_recorder<int*> >, boost::parameter::aux::empty_arg_list, std::integral_constant<bool, true> >]'\n/dials/build/../conda_base/include/boost/graph/connected_components.hpp:106:23:   required from 'typename boost::property_traits<IndexMap>::value_type boost::connected_components(const Graph&, ComponentMap, typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type) [with Graph = boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS>; ComponentMap = int*; typename boost::property_traits<IndexMap>::value_type = int; typename boost::enable_if_c<boost::is_base_and_derived<boost::vertex_list_graph_tag, typename boost::graph_traits<Graph>::traversal_category>::value, boost::graph::detail::no_parameter>::type = boost::graph::detail::no_parameter; typename boost::graph_traits<Graph>::traversal_category = boost::undir_adj_list_traversal_tag]'\n/dials/modules/cctbx_project/cctbx/maptbx/dijkstra.cpp:27:37:   required from here\n/dials/build/../conda_base/include/boost/concept/detail/general.hpp:39:47: warning: 'this' pointer is null [-Wnonnull]\n   39 |     static void failed() { ((Model*)0)->~Model(); }\n      |                            ~~~~~~~~~~~~~~~~~~~^~\n\u001b[0m\u001b[91mIn file included from /dials/build/../conda_base/include/boost/utility/result_of.hpp:13,\n                 from /dials/build/../conda_base/include/boost/optional/optional.hpp:56,\n                 from /dials/build/../conda_base/include/boost/optional.hpp:15,\n                 from /dials/modules/cctbx_project/scitbx/array_family/ref_reductions.h:8,\n                 from /dials/modules/cctbx_project/scitbx/array_family/tiny.h:5,\n                 from /dials/modules/cctbx_project/scitbx/array_family/small_plain.h:4,\n                 from /dials/modul","stderr":""},"endTime":1672265240996}