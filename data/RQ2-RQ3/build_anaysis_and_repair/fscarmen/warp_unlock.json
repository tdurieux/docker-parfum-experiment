{"repository":"https://github.com/fscarmen/warp_unlock","dockerfilePath":"Dockerfile","startTime":1672566064561,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/fscarmen/warp_unlock'...\n","error":null,"commit":"2423c31e9e99c41d5e2be669d85df28384297912"},"originalBuild":{"startTimestamp":1672566065358,"endTimestamp":1672566075116,"error":null,"stdout":"Sending build context to Docker daemon  157.2kB\r\r\nStep 1/5 : FROM alpine\n ---> 49176f190c7e\nStep 2/5 : ENV DIR=/unlock\n ---> Running in f4891775fb3c\nRemoving intermediate container f4891775fb3c\n ---> 365d4c72572b\nStep 3/5 : WORKDIR $DIR\n ---> Running in 1f8739eff0dc\nRemoving intermediate container 1f8739eff0dc\n ---> 0cce4ca0de33\nStep 4/5 : RUN apk add --no-cache tzdata wireguard-tools curl  && rm -rf /var/cache/apk/*  && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  && echo \"Asia/Shanghai\" > /etc/timezone  && arch=$(arch | sed s/aarch64/armv8/ | sed s/x86_64/amd64/)  && latest=$(curl -sSL \"https://api.github.com/repos/ginuerzh/gost/releases/latest\" | grep \"tag_name\" | head -n 1 | cut -d : -f2 | sed 's/[ \\\"v,]//g')  && wget -O gost.gz https://github.com/ginuerzh/gost/releases/download/v$latest/gost-linux-$arch-$latest.gz  && gzip -d gost.gz  && echo \"*/5 * * * * nohup bash /etc/wireguard/warp_unlock.sh >/dev/null 2>&1 &\" >> /etc/crontabs/root  && echo 'null' > status.log  && echo -e \"wg-quick up wgcf\\ncrond\\n./gost -L :40000\" > run.sh  && chmod +x gost run.sh\n ---> Running in 4ff7ffd24f32\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/27) Installing ca-certificates (20220614-r3)\n(2/27) Installing brotli-libs (1.0.9-r9)\n(3/27) Installing nghttp2-libs (1.51.0-r0)\n(4/27) Installing libcurl (7.87.0-r0)\n(5/27) Installing curl (7.87.0-r0)\n(6/27) Installing tzdata (2022f-r1)\n(7/27) Installing wireguard-tools-wg (1.0.20210914-r1)\n(8/27) Installing libcap2 (2.66-r0)\n(9/27) Installing libbz2 (1.0.8-r4)\n(10/27) Installing musl-fts (1.2.7-r3)\n(11/27) Installing xz-libs (5.2.9-r0)\n(12/27) Installing libelf (0.187-r2)\n(13/27) Installing libmnl (1.0.5-r0)\n(14/27) Installing iproute2-minimal (6.0.0-r1)\n(15/27) Installing libnftnl (1.2.4-r0)\n(16/27) Installing iptables (1.8.8-r2)\n(17/27) Installing iproute2-tc (6.0.0-r1)\n(18/27) Installing iproute2-ss (6.0.0-r1)\n(19/27) Installing iproute2 (6.0.0-r1)\nExecuting iproute2-6.0.0-r1.post-install\n(20/27) Installing ip6tables (1.8.8-r2)\n(21/27) Installing ncurses-terminfo-base (6.3_p20221119-r0)\n(22/27) Installing ncurses-libs (6.3_p20221119-r0)\n(23/27) Installing readline (8.2.0-r0)\n(24/27) Installing bash (5.2.15-r0)\nExecuting bash-5.2.15-r0.post-install\n(25/27) Installing openresolv (3.12.0-r1)\n(26/27) Installing wireguard-tools-wg-quick (1.0.20210914-r1)\n(27/27) Installing wireguard-tools (1.0.20210914-r1)\nExecuting busybox-1.35.0-r29.trigger\nExecuting ca-certificates-20220614-r3.trigger\nOK: 21 MiB in 42 packages\n\u001b[91mConnecting to github.com (140.82.121.3:443)\n\u001b[0m\u001b[91mConnecting to objects.githubusercontent.com (185.199.108.133:443)\n\u001b[0m\u001b[91msaving to 'gost.gz'\n\u001b[0m\u001b[91mgost.gz              100% |********************************| 5153k  0:00:00 ETA\n'gost.gz' saved\n\u001b[0mRemoving intermediate container 4ff7ffd24f32\n ---> 8cfcee96a9cc\nStep 5/5 : ENTRYPOINT ./run.sh\n ---> Running in 74e97c24b7d9\nRemoving intermediate container 74e97c24b7d9\n ---> acffea93be06\nSuccessfully built acffea93be06\nSuccessfully tagged warp_unlock:latest\n","stderr":"","imageSize":31815648},"repair":{"violations":[{"name":"curlUseFlagF","position":{"start":11,"end":11,"columnStart":13,"columnEnd":83}}],"repairedDockerfile":"FROM alpine\n\nENV DIR=/unlock\n\nWORKDIR $DIR\n\nRUN apk add --no-cache tzdata wireguard-tools curl \\\n && rm -rf /var/cache/apk/* \\\n && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n && echo \"Asia/Shanghai\" > /etc/timezone \\\n && arch=$(arch | sed s/aarch64/armv8/ | sed s/x86_64/amd64/) \\\n && latest=$( curl -f -sSL \"https://api.github.com/repos/ginuerzh/gost/releases/latest\" | grep \"tag_name\" | head -n 1 | cut -d : -f2 | sed 's/[ \\\"v,]//g') \\\n && wget -O gost.gz https://github.com/ginuerzh/gost/releases/download/v$latest/gost-linux-$arch-$latest.gz \\\n && gzip -d gost.gz \\\n && echo \"*/5 * * * * nohup bash /etc/wireguard/warp_unlock.sh >/dev/null 2>&1 &\" >> /etc/crontabs/root \\\n && echo 'null' > status.log \\\n && echo -e \"wg-quick up wgcf\\ncrond\\n./gost -L :40000\" > run.sh \\\n && chmod +x gost run.sh\n\nENTRYPOINT ./run.sh\n"},"repairedBuild":{"startTimestamp":1672566075539,"endTimestamp":1672566082540,"error":null,"stdout":"Sending build context to Docker daemon  157.2kB\r\r\nStep 1/5 : FROM alpine\n ---> 49176f190c7e\nStep 2/5 : ENV DIR=/unlock\n ---> Running in 7dcf9e3a780c\nRemoving intermediate container 7dcf9e3a780c\n ---> f46c3bce07ee\nStep 3/5 : WORKDIR $DIR\n ---> Running in 09ad43911ee3\nRemoving intermediate container 09ad43911ee3\n ---> 7d110e896268\nStep 4/5 : RUN apk add --no-cache tzdata wireguard-tools curl  && rm -rf /var/cache/apk/*  && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  && echo \"Asia/Shanghai\" > /etc/timezone  && arch=$(arch | sed s/aarch64/armv8/ | sed s/x86_64/amd64/)  && latest=$( curl -f -sSL \"https://api.github.com/repos/ginuerzh/gost/releases/latest\" | grep \"tag_name\" | head -n 1 | cut -d : -f2 | sed 's/[ \\\"v,]//g')  && wget -O gost.gz https://github.com/ginuerzh/gost/releases/download/v$latest/gost-linux-$arch-$latest.gz  && gzip -d gost.gz  && echo \"*/5 * * * * nohup bash /etc/wireguard/warp_unlock.sh >/dev/null 2>&1 &\" >> /etc/crontabs/root  && echo 'null' > status.log  && echo -e \"wg-quick up wgcf\\ncrond\\n./gost -L :40000\" > run.sh  && chmod +x gost run.sh\n ---> Running in 10a0ab3b6eae\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/27) Installing ca-certificates (20220614-r3)\n(2/27) Installing brotli-libs (1.0.9-r9)\n(3/27) Installing nghttp2-libs (1.51.0-r0)\n(4/27) Installing libcurl (7.87.0-r0)\n(5/27) Installing curl (7.87.0-r0)\n(6/27) Installing tzdata (2022f-r1)\n(7/27) Installing wireguard-tools-wg (1.0.20210914-r1)\n(8/27) Installing libcap2 (2.66-r0)\n(9/27) Installing libbz2 (1.0.8-r4)\n(10/27) Installing musl-fts (1.2.7-r3)\n(11/27) Installing xz-libs (5.2.9-r0)\n(12/27) Installing libelf (0.187-r2)\n(13/27) Installing libmnl (1.0.5-r0)\n(14/27) Installing iproute2-minimal (6.0.0-r1)\n(15/27) Installing libnftnl (1.2.4-r0)\n(16/27) Installing iptables (1.8.8-r2)\n(17/27) Installing iproute2-tc (6.0.0-r1)\n(18/27) Installing iproute2-ss (6.0.0-r1)\n(19/27) Installing iproute2 (6.0.0-r1)\nExecuting iproute2-6.0.0-r1.post-install\n(20/27) Installing ip6tables (1.8.8-r2)\n(21/27) Installing ncurses-terminfo-base (6.3_p20221119-r0)\n(22/27) Installing ncurses-libs (6.3_p20221119-r0)\n(23/27) Installing readline (8.2.0-r0)\n(24/27) Installing bash (5.2.15-r0)\nExecuting bash-5.2.15-r0.post-install\n(25/27) Installing openresolv (3.12.0-r1)\n(26/27) Installing wireguard-tools-wg-quick (1.0.20210914-r1)\n(27/27) Installing wireguard-tools (1.0.20210914-r1)\nExecuting busybox-1.35.0-r29.trigger\nExecuting ca-certificates-20220614-r3.trigger\nOK: 21 MiB in 42 packages\n\u001b[91mConnecting to github.com (140.82.121.3:443)\n\u001b[0m\u001b[91mConnecting to objects.githubusercontent.com (185.199.111.133:443)\n\u001b[0m\u001b[91msaving to 'gost.gz'\n\u001b[0m\u001b[91mgost.gz              100% |********************************| 5153k  0:00:00 ETA\n'gost.gz' saved\n\u001b[0mRemoving intermediate container 10a0ab3b6eae\n ---> b1ff7f733081\nStep 5/5 : ENTRYPOINT ./run.sh\n ---> Running in b6b19db6591a\nRemoving intermediate container b6b19db6591a\n ---> 7b148f3935ae\nSuccessfully built 7b148f3935ae\nSuccessfully tagged warp_unlock:latest\n","stderr":"","imageSize":31815648},"endTime":1672566082775}