{"repository":"https://github.com/confio/tgrade","dockerfilePath":"Dockerfile","startTime":1672335848179,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/confio/tgrade'...\n","error":null,"commit":"7cf259df4db249d0f8ce032efded6550e9aa283a"},"originalBuild":{"startTimestamp":1672335849539,"endTimestamp":1672336124349,"error":null,"stdout":"Sending build context to Docker daemon  10.36MB\r\r\nStep 1/23 : FROM golang:1.18-alpine3.15 AS go-builder\n1.18-alpine3.15: Pulling from library/golang\n9621f1afde84: Already exists\na2b0fab95789: Pulling fs layer\n77b50bae27c3: Pulling fs layer\nce446ea3b4cb: Pulling fs layer\n264fb3794e1e: Pulling fs layer\n264fb3794e1e: Waiting\n77b50bae27c3: Verifying Checksum\n77b50bae27c3: Download complete\na2b0fab95789: Download complete\na2b0fab95789: Pull complete\n77b50bae27c3: Pull complete\n264fb3794e1e: Verifying Checksum\n264fb3794e1e: Download complete\nce446ea3b4cb: Verifying Checksum\nce446ea3b4cb: Download complete\nce446ea3b4cb: Pull complete\n264fb3794e1e: Pull complete\nDigest: sha256:a94d2c2d687adc28a70ca4ae4ca06f6b4b17e498e93069027ee32e15d4e0fb64\nStatus: Downloaded newer image for golang:1.18-alpine3.15\n ---> 92701df9213e\nStep 2/23 : ARG arch=x86_64\n ---> Running in a6bebd0a4e27\nRemoving intermediate container a6bebd0a4e27\n ---> 81fa3d3bbd09\nStep 3/23 : RUN set -eux; apk add --no-cache ca-certificates build-base;\n ---> Running in 71916560dd72\n\u001b[91m+ apk add --no-cache ca-certificates build-base\n\u001b[0mfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/20) Installing libgcc (10.3.1_git20211027-r0)\n(2/20) Installing libstdc++ (10.3.1_git20211027-r0)\n(3/20) Installing binutils (2.37-r3)\n(4/20) Installing libmagic (5.41-r0)\n(5/20) Installing file (5.41-r0)\n(6/20) Installing libgomp (10.3.1_git20211027-r0)\n(7/20) Installing libatomic (10.3.1_git20211027-r0)\n(8/20) Installing libgphobos (10.3.1_git20211027-r0)\n(9/20) Installing gmp (6.2.1-r1)\n(10/20) Installing isl22 (0.22-r0)\n(11/20) Installing mpfr4 (4.1.0-r0)\n(12/20) Installing mpc1 (1.2.1-r0)\n(13/20) Installing gcc (10.3.1_git20211027-r0)\n(14/20) Installing musl-dev (1.2.2-r7)\n(15/20) Installing libc-dev (0.7.2-r3)\n(16/20) Installing g++ (10.3.1_git20211027-r0)\n(17/20) Installing make (4.3-r0)\n(18/20) Installing fortify-headers (1.1-r1)\n(19/20) Installing patch (2.7.6-r7)\n(20/20) Installing build-base (0.5-r3)\nExecuting busybox-1.34.1-r7.trigger\nOK: 197 MiB in 35 packages\nRemoving intermediate container 71916560dd72\n ---> 9e760ed2af67\nStep 4/23 : RUN apk add git\n ---> Running in 4f526a2f10e4\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/6) Installing brotli-libs (1.0.9-r5)\n(2/6) Installing nghttp2-libs (1.46.0-r0)\n(3/6) Installing libcurl (7.80.0-r5)\n(4/6) Installing expat (2.5.0-r0)\n(5/6) Installing pcre2 (10.40-r0)\n(6/6) Installing git (2.34.5-r0)\nExecuting busybox-1.34.1-r7.trigger\nOK: 210 MiB in 41 packages\nRemoving intermediate container 4f526a2f10e4\n ---> 147f923287a9\nStep 5/23 : ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a\n\n\n ---> 2fee81fbda68\nStep 6/23 : ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a\n\n\n ---> ae6c269f30b2\nStep 7/23 : RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a\n ---> Running in 475d74cc7aeb\n9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a  /lib/libwasmvm_muslc.aarch64.a\nRemoving intermediate container 475d74cc7aeb\n ---> c57e3f76dca9\nStep 8/23 : RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep 6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f32\n ---> Running in ebe00ad7c430\n6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f32  /lib/libwasmvm_muslc.x86_64.a\nRemoving intermediate container ebe00ad7c430\n ---> 0cf9d7943bfe\nStep 9/23 : WORKDIR /code\n ---> Running in 72c1ba0d5b1e\nRemoving intermediate container 72c1ba0d5b1e\n ---> 50d87abca03a\nStep 10/23 : COPY go.mod .\n ---> 50e1df0d2bc7\nStep 11/23 : COPY go.sum .\n ---> fdb2e33f08ee\nStep 12/23 : RUN go mod download\n ---> Running in 4d41b6589ef7\nRemoving intermediate container 4d41b6589ef7\n ---> a507e0758a4c\nStep 13/23 : COPY . /code/\n ---> 61d9d0158f8e\nStep 14/23 : RUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a\n ---> Running in 075b5ddf45a2\nRemoving intermediate container 075b5ddf45a2\n ---> 743b4aa161a0\nStep 15/23 : RUN LEDGER_ENABLED=false BUILD_TAGS=muslc LINK_STATICALLY=true make build\n ---> Running in 1614d3f727eb\ngo build -mod=readonly -tags \"netgo,muslc\" -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=tgrade -X github.com/cosmos/cosmos-sdk/version.AppName=tgrade -X github.com/cosmos/cosmos-sdk/version.Version=3.0.0-rc0 -X github.com/cosmos/cosmos-sdk/version.Commit=7cf259df4db249d0f8ce032efded6550e9aa283a -X \"github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,muslc\" -linkmode=external -extldflags \"-Wl,-z,muldefs -static\"' -trimpath -o build/tgrade ./cmd/tgrade\nRemoving intermediate container 1614d3f727eb\n ---> d801d905f19f\nStep 16/23 : RUN echo \"Ensuring binary is statically linked ...\"   && (file /code/build/tgrade | grep \"statically linked\")\n ---> Running in e00718cc8987\nEnsuring binary is statically linked ...\n/code/build/tgrade: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, Go BuildID=nkMVfB9GEIXcWzWH9v2Q/7rdo4nzD7MpRJNQGMzc5/NXzzpy2RFQHvGaG9mdXz/GZOhLxCcufCFFdhYzZDV, not stripped\nRemoving intermediate container e00718cc8987\n ---> 466985c43d4f\nStep 17/23 : FROM alpine:3.15\n3.15: Pulling from library/alpine\n9621f1afde84: Already exists\nDigest: sha256:cf34c62ee8eb3fe8aa24c1fab45d7e9d12768d945c3f5a6fd6a63d901e898479\nStatus: Downloaded newer image for alpine:3.15\n ---> c4fc93816858\nStep 18/23 : COPY --from=go-builder /code/build/tgrade /usr/bin/tgrade\n ---> 6a5fba958fd2\nStep 19/23 : WORKDIR /opt\n ---> Running in f1da51208597\nRemoving intermediate container f1da51208597\n ---> d892ceabce51\nStep 20/23 : EXPOSE 1317\n ---> Running in 04dc21e80625\nRemoving intermediate container 04dc21e80625\n ---> b05fc3d2e930\nStep 21/23 : EXPOSE 26656\n ---> Running in 29197c77982d\nRemoving intermediate container 29197c77982d\n ---> 729d1cfe46b9\nStep 22/23 : EXPOSE 26657\n ---> Running in bca6c201aef6\nRemoving intermediate container bca6c201aef6\n ---> 4a2c8e6bc759\nStep 23/23 : CMD [\"/usr/bin/tgrade\", \"version\"]\n ---> Running in bd97da0b5fae\nRemoving intermediate container bd97da0b5fae\n ---> 02bbc276e2ba\nSuccessfully built 02bbc276e2ba\nSuccessfully tagged tgrade:latest\n","stderr":"","imageSize":90888467},"repair":{"violations":[{"name":"apkAddUseNoCache","position":{"start":8,"end":8,"columnStart":4,"columnEnd":15}}],"repairedDockerfile":"FROM golang:1.18-alpine3.15 AS go-builder\nARG arch=x86_64\n\n# this comes from standard alpine nightly file\n#  https://github.com/rust-lang/docker-rust-nightly/blob/master/alpine3.12/Dockerfile\n# with some changes to support our toolchain, etc\nRUN set -eux; apk add --no-cache ca-certificates build-base;\n\nRUN apk add --no-cache git\n# NOTE: add these to run with LEDGER_ENABLED=true\n# RUN apk add libusb-dev linux-headers\n\n# See https://github.com/CosmWasm/wasmvm/releases\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a\nRUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a\nRUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep 6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f32\n\nWORKDIR /code\n# Speed up build by caching Go dependencies as a separate step\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\nCOPY . /code/\n\n# Copy the library you want to the final location that will be found by the linker flag `-lwasmvm_muslc`\nRUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a\n\n# force it to use static lib (from above) not standard libgo_cosmwasm.so file\nRUN LEDGER_ENABLED=false BUILD_TAGS=muslc LINK_STATICALLY=true make build\nRUN echo \"Ensuring binary is statically linked ...\" \\\n  && (file /code/build/tgrade | grep \"statically linked\")\n\n\n# --------------------------------------------------------\nFROM alpine:3.15\n\nCOPY --from=go-builder /code/build/tgrade /usr/bin/tgrade\n\nWORKDIR /opt\n\n# rest server\nEXPOSE 1317\n# tendermint p2p\nEXPOSE 26656\n# tendermint rpc\nEXPOSE 26657\n\nCMD [\"/usr/bin/tgrade\", \"version\"]\n"},"repairedBuild":{"startTimestamp":1672336124663,"endTimestamp":1672336326586,"error":null,"stdout":"Sending build context to Docker daemon  10.36MB\r\r\nStep 1/23 : FROM golang:1.18-alpine3.15 AS go-builder\n ---> 92701df9213e\nStep 2/23 : ARG arch=x86_64\n ---> Running in 25f1e699ca81\nRemoving intermediate container 25f1e699ca81\n ---> 972ce9e033d5\nStep 3/23 : RUN set -eux; apk add --no-cache ca-certificates build-base;\n ---> Running in 971d6f6bed23\n\u001b[91m+ apk add --no-cache ca-certificates build-base\n\u001b[0mfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/20) Installing libgcc (10.3.1_git20211027-r0)\n(2/20) Installing libstdc++ (10.3.1_git20211027-r0)\n(3/20) Installing binutils (2.37-r3)\n(4/20) Installing libmagic (5.41-r0)\n(5/20) Installing file (5.41-r0)\n(6/20) Installing libgomp (10.3.1_git20211027-r0)\n(7/20) Installing libatomic (10.3.1_git20211027-r0)\n(8/20) Installing libgphobos (10.3.1_git20211027-r0)\n(9/20) Installing gmp (6.2.1-r1)\n(10/20) Installing isl22 (0.22-r0)\n(11/20) Installing mpfr4 (4.1.0-r0)\n(12/20) Installing mpc1 (1.2.1-r0)\n(13/20) Installing gcc (10.3.1_git20211027-r0)\n(14/20) Installing musl-dev (1.2.2-r7)\n(15/20) Installing libc-dev (0.7.2-r3)\n(16/20) Installing g++ (10.3.1_git20211027-r0)\n(17/20) Installing make (4.3-r0)\n(18/20) Installing fortify-headers (1.1-r1)\n(19/20) Installing patch (2.7.6-r7)\n(20/20) Installing build-base (0.5-r3)\nExecuting busybox-1.34.1-r7.trigger\nOK: 197 MiB in 35 packages\nRemoving intermediate container 971d6f6bed23\n ---> 1295b84d5c60\nStep 4/23 : RUN apk add --no-cache git\n ---> Running in 4bd7f409aa31\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/6) Installing brotli-libs (1.0.9-r5)\n(2/6) Installing nghttp2-libs (1.46.0-r0)\n(3/6) Installing libcurl (7.80.0-r5)\n(4/6) Installing expat (2.5.0-r0)\n(5/6) Installing pcre2 (10.40-r0)\n(6/6) Installing git (2.34.5-r0)\nExecuting busybox-1.34.1-r7.trigger\nOK: 210 MiB in 41 packages\nRemoving intermediate container 4bd7f409aa31\n ---> a4270cd0f453\nStep 5/23 : ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a\n\n\n ---> 346681556189\nStep 6/23 : ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a\n\n\n ---> 7e1dc4eb9981\nStep 7/23 : RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a\n ---> Running in 2904d6606300\n9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a  /lib/libwasmvm_muslc.aarch64.a\nRemoving intermediate container 2904d6606300\n ---> 822881932f70\nStep 8/23 : RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep 6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f32\n ---> Running in 8c6e56881e8c\n6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f32  /lib/libwasmvm_muslc.x86_64.a\nRemoving intermediate container 8c6e56881e8c\n ---> 5d60ecd304cf\nStep 9/23 : WORKDIR /code\n ---> Running in 47c290151803\nRemoving intermediate container 47c290151803\n ---> 7e17353f21af\nStep 10/23 : COPY go.mod .\n ---> 8f465484047d\nStep 11/23 : COPY go.sum .\n ---> e05f45bf43aa\nStep 12/23 : RUN go mod download\n ---> Running in 7a4b948cce1a\nRemoving intermediate container 7a4b948cce1a\n ---> 15020886107c\nStep 13/23 : COPY . /code/\n ---> b16f7d418899\nStep 14/23 : RUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a\n ---> Running in 480fd2802b45\nRemoving intermediate container 480fd2802b45\n ---> 57555019bee9\nStep 15/23 : RUN LEDGER_ENABLED=false BUILD_TAGS=muslc LINK_STATICALLY=true make build\n ---> Running in b41da438afd0\ngo build -mod=readonly -tags \"netgo,muslc\" -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=tgrade -X github.com/cosmos/cosmos-sdk/version.AppName=tgrade -X github.com/cosmos/cosmos-sdk/version.Version=3.0.0-rc0 -X github.com/cosmos/cosmos-sdk/version.Commit=7cf259df4db249d0f8ce032efded6550e9aa283a -X \"github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,muslc\" -linkmode=external -extldflags \"-Wl,-z,muldefs -static\"' -trimpath -o build/tgrade ./cmd/tgrade\nRemoving intermediate container b41da438afd0\n ---> c85db513e4cc\nStep 16/23 : RUN echo \"Ensuring binary is statically linked ...\"   && (file /code/build/tgrade | grep \"statically linked\")\n ---> Running in 873750e56dcd\nEnsuring binary is statically linked ...\n/code/build/tgrade: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, Go BuildID=h6WBMTvMiWv3hE0iyiU-/K6HLdLN790XcOjhqeGip/NXzzpy2RFQHvGaG9mdXz/gjX69_IA6bI_iG5sdjb6, not stripped\nRemoving intermediate container 873750e56dcd\n ---> 37fdd8e33801\nStep 17/23 : FROM alpine:3.15\n ---> c4fc93816858\nStep 18/23 : COPY --from=go-builder /code/build/tgrade /usr/bin/tgrade\n ---> b178908ede34\nStep 19/23 : WORKDIR /opt\n ---> Running in 4db76e452f3e\nRemoving intermediate container 4db76e452f3e\n ---> 2a1f1367218c\nStep 20/23 : EXPOSE 1317\n ---> Running in bad8c6ec9347\nRemoving intermediate container bad8c6ec9347\n ---> f485816e6055\nStep 21/23 : EXPOSE 26656\n ---> Running in 3f00f0fe960e\nRemoving intermediate container 3f00f0fe960e\n ---> e591542b2378\nStep 22/23 : EXPOSE 26657\n ---> Running in 8b17b28563ed\nRemoving intermediate container 8b17b28563ed\n ---> 1e4a0d0f9ac0\nStep 23/23 : CMD [\"/usr/bin/tgrade\", \"version\"]\n ---> Running in bdc0f0c0541a\nRemoving intermediate container bdc0f0c0541a\n ---> 38dec4088d7b\nSuccessfully built 38dec4088d7b\nSuccessfully tagged tgrade:latest\n","stderr":"","imageSize":90888467},"endTime":1672336326843}