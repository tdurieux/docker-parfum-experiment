{"repository":"https://github.com/hardware/nsd-dnssec","dockerfilePath":"Dockerfile","startTime":1672906493140,"endTime":1672906672133,"clone":{"startTime":1672906493141,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/hardware/nsd-dnssec'...\n","error":null,"endTime":1672906493879,"commit":"9494b92a593e3b2530bdb9848b33b6752f1ff7f1"},"originalBuild":{"startTime":1672906493970,"endTime":1672906672045,"error":{"code":2,"killed":false,"signal":null,"cmd":"docker build --no-cache --force-rm -t nsd-dnssec:latest -f /tmp/dinghy-analysis/hardware/nsd-dnssec/Dockerfile ."},"stdout":"Sending build context to Docker daemon  10.75kB\r\r\nStep 1/12 : FROM alpine:3.10\n3.10: Pulling from library/alpine\n396c31837116: Pulling fs layer\n396c31837116: Verifying Checksum\n396c31837116: Download complete\n396c31837116: Pull complete\nDigest: sha256:451eee8bedcb2f029756dc3e9d73bab0e7943c1ac55cff3a4861c52a0fdd3e98\nStatus: Downloaded newer image for alpine:3.10\n ---> e7b300aee9f9\nStep 2/12 : LABEL description \"Simple DNS authoritative server with DNSSEC support\"       maintainer=\"Hardware <contact@meshup.net>\"\n ---> Running in e6389781f303\nRemoving intermediate container e6389781f303\n ---> 006bcc2b2896\nStep 3/12 : ARG NSD_VERSION=4.2.1\n ---> Running in 221d5784dd88\nRemoving intermediate container 221d5784dd88\n ---> 94d53c239646\nStep 4/12 : ARG GPG_SHORTID=\"0x7E045F8D\"\n ---> Running in c1f3b7df7a03\nRemoving intermediate container c1f3b7df7a03\n ---> 9133481f1910\nStep 5/12 : ARG GPG_FINGERPRINT=\"EDFA A3F2 CA4E 6EB0 5681  AF8E 9F6F 1C2D 7E04 5F8D\"\n ---> Running in 66f46970136b\nRemoving intermediate container 66f46970136b\n ---> 1a779a362a88\nStep 6/12 : ARG SHA256_HASH=\"d17c0ea3968cb0eb2be79f2f83eb299b7bfcc554b784007616eed6ece828871f\"\n ---> Running in be28b06e28df\nRemoving intermediate container be28b06e28df\n ---> 68daf50a7876\nStep 7/12 : ENV UID=991 GID=991\n ---> Running in f32f17a4e01f\nRemoving intermediate container f32f17a4e01f\n ---> af5289999d32\nStep 8/12 : RUN apk add --no-cache --virtual build-dependencies       gnupg       build-base       libevent-dev       openssl-dev       ca-certificates  && apk add --no-cache       ldns       ldns-tools       libevent       openssl       tini  && cd /tmp  && wget -q https://www.nlnetlabs.nl/downloads/nsd/nsd-${NSD_VERSION}.tar.gz  && wget -q https://www.nlnetlabs.nl/downloads/nsd/nsd-${NSD_VERSION}.tar.gz.asc  && echo \"Verifying both integrity and authenticity of nsd-${NSD_VERSION}.tar.gz...\"  && CHECKSUM=$(sha256sum nsd-${NSD_VERSION}.tar.gz | awk '{print $1}')  && if [ \"${CHECKSUM}\" != \"${SHA256_HASH}\" ]; then echo \"ERROR: Checksum does not match!\" && exit 1; fi  && (     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ${GPG_SHORTID} ||     gpg --keyserver keyserver.pgp.com --recv-keys ${GPG_SHORTID} ||     gpg --keyserver pgp.mit.edu --recv-keys ${GPG_SHORTID}     )  && FINGERPRINT=\"$(LANG=C gpg --verify nsd-${NSD_VERSION}.tar.gz.asc nsd-${NSD_VERSION}.tar.gz 2>&1   | sed -n \"s#Primary key fingerprint: \\(.*\\)#\\1#p\")\"  && if [ -z \"${FINGERPRINT}\" ]; then echo \"ERROR: Invalid GPG signature!\" && exit 1; fi  && if [ \"${FINGERPRINT}\" != \"${GPG_FINGERPRINT}\" ]; then echo \"ERROR: Wrong GPG fingerprint!\" && exit 1; fi  && echo \"All seems good, now unpacking nsd-${NSD_VERSION}.tar.gz...\"  && tar xzf nsd-${NSD_VERSION}.tar.gz && cd nsd-${NSD_VERSION}  && ./configure     CFLAGS=\"-O2 -flto -fPIE -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -fstack-protector-strong -Wformat -Werror=format-security\"     LDFLAGS=\"-Wl,-z,now -Wl,-z,relro\"  && make && make install  && apk del build-dependencies  && rm -rf /var/cache/apk/* /tmp/* /root/.gnupg\n ---> Running in e18c60aec995\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.10/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.10/community/x86_64/APKINDEX.tar.gz\n(1/56) Installing libgpg-error (1.36-r2)\n(2/56) Installing libassuan (2.5.3-r0)\n(3/56) Installing libcap (2.27-r0)\n(4/56) Installing libffi (3.2.1-r6)\n(5/56) Installing libintl (0.19.8.1-r4)\n(6/56) Installing libuuid (2.33.2-r0)\n(7/56) Installing libblkid (2.33.2-r0)\n(8/56) Installing libmount (2.33.2-r0)\n(9/56) Installing pcre (8.43-r1)\n(10/56) Installing glib (2.60.4-r0)\n(11/56) Installing ncurses-terminfo-base (6.1_p20190518-r2)\n(12/56) Installing ncurses-libs (6.1_p20190518-r2)\n(13/56) Installing libgcrypt (1.8.5-r0)\n(14/56) Installing libsecret (0.18.8-r0)\n(15/56) Installing pinentry (1.1.0-r1)\nExecuting pinentry-1.1.0-r1.post-install\n(16/56) Installing libbz2 (1.0.6-r7)\n(17/56) Installing gmp (6.1.2-r1)\n(18/56) Installing nettle (3.4.1-r1)\n(19/56) Installing p11-kit (0.23.16.1-r1)\n(20/56) Installing libtasn1 (4.14-r0)\n(21/56) Installing libunistring (0.9.10-r0)\n(22/56) Installing gnutls (3.6.15-r1)\n(23/56) Installing libksba (1.3.5-r0)\n(24/56) Installing db (5.3.28-r1)\n(25/56) Installing libsasl (2.1.27-r4)\n(26/56) Installing libldap (2.4.48-r2)\n(27/56) Installing npth (1.6-r0)\n(28/56) Installing sqlite-libs (3.28.0-r3)\n(29/56) Installing gnupg (2.2.19-r0)\n(30/56) Installing binutils (2.32-r1)\n(31/56) Installing libmagic (5.37-r1)\n(32/56) Installing file (5.37-r1)\n(33/56) Installing isl (0.18-r0)\n(34/56) Installing libgomp (8.3.0-r0)\n(35/56) Installing libatomic (8.3.0-r0)\n(36/56) Installing libgcc (8.3.0-r0)\n(37/56) Installing mpfr3 (3.1.5-r1)\n(38/56) Installing mpc1 (1.1.0-r0)\n(39/56) Installing libstdc++ (8.3.0-r0)\n(40/56) Installing gcc (8.3.0-r0)\n(41/56) Installing musl-dev (1.1.22-r4)\n(42/56) Installing libc-dev (0.7.1-r0)\n(43/56) Installing g++ (8.3.0-r0)\n(44/56) Installing make (4.2.1-r2)\n(45/56) Installing fortify-headers (1.1-r0)\n(46/56) Installing build-base (0.5-r1)\n(47/56) Installing expat (2.2.8-r0)\n(48/56) Installing gdbm (1.13-r1)\n(49/56) Installing readline (8.0.0-r0)\n(50/56) Installing python2 (2.7.18-r0)\n(51/56) Installing libevent (2.1.10-r0)\n(52/56) Installing pkgconf (1.6.1-r1)\n(53/56) Installing libevent-dev (2.1.10-r0)\n(54/56) Installing openssl-dev (1.1.1k-r0)\n(55/56) Installing ca-certificates (20191127-r2)\n(56/56) Installing build-dependencies (20230105.081458)\nExecuting busybox-1.30.1-r5.trigger\nExecuting ca-certificates-20191127-r2.trigger\nOK: 243 MiB in 70 packages\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.10/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.10/community/x86_64/APKINDEX.tar.gz\n(1/5) Installing ldns (1.7.0-r2)\n(2/5) Installing libpcap (1.9.1-r0)\n(3/5) Installing ldns-tools (1.7.0-r2)\n(4/5) Installing openssl (1.1.1k-r0)\n(5/5) Installing tini (0.18.0-r0)\nExecuting busybox-1.30.1-r5.trigger\nOK: 245 MiB in 75 packages\nVerifying both integrity and authenticity of nsd-4.2.1.tar.gz...\n\u001b[91mgpg: directory '/root/.gnupg' created\n\u001b[0m\u001b[91mgpg: keybox '/root/.gnupg/pubring.kbx' created\n\u001b[0m\u001b[91mgpg: keyserver receive failed: Server indicated a failure\n\u001b[0m\u001b[91mgpg: keyserver receive failed: Operation timed out\n\u001b[0m\u001b[91mgpg: keyserver receive failed: No keyserver available\n\u001b[0mRemoving intermediate container e18c60aec995\n","stderr":"The command '/bin/sh -c apk add --no-cache --virtual build-dependencies       gnupg       build-base       libevent-dev       openssl-dev       ca-certificates  && apk add --no-cache       ldns       ldns-tools       libevent       openssl       tini  && cd /tmp  && wget -q https://www.nlnetlabs.nl/downloads/nsd/nsd-${NSD_VERSION}.tar.gz  && wget -q https://www.nlnetlabs.nl/downloads/nsd/nsd-${NSD_VERSION}.tar.gz.asc  && echo \"Verifying both integrity and authenticity of nsd-${NSD_VERSION}.tar.gz...\"  && CHECKSUM=$(sha256sum nsd-${NSD_VERSION}.tar.gz | awk '{print $1}')  && if [ \"${CHECKSUM}\" != \"${SHA256_HASH}\" ]; then echo \"ERROR: Checksum does not match!\" && exit 1; fi  && (     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ${GPG_SHORTID} ||     gpg --keyserver keyserver.pgp.com --recv-keys ${GPG_SHORTID} ||     gpg --keyserver pgp.mit.edu --recv-keys ${GPG_SHORTID}     )  && FINGERPRINT=\"$(LANG=C gpg --verify nsd-${NSD_VERSION}.tar.gz.asc nsd-${NSD_VERSION}.tar.gz 2>&1   | sed -n \"s#Primary key fingerprint: \\(.*\\)#\\1#p\")\"  && if [ -z \"${FINGERPRINT}\" ]; then echo \"ERROR: Invalid GPG signature!\" && exit 1; fi  && if [ \"${FINGERPRINT}\" != \"${GPG_FINGERPRINT}\" ]; then echo \"ERROR: Wrong GPG fingerprint!\" && exit 1; fi  && echo \"All seems good, now unpacking nsd-${NSD_VERSION}.tar.gz...\"  && tar xzf nsd-${NSD_VERSION}.tar.gz && cd nsd-${NSD_VERSION}  && ./configure     CFLAGS=\"-O2 -flto -fPIE -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -fstack-protector-strong -Wformat -Werror=format-security\"     LDFLAGS=\"-Wl,-z,now -Wl,-z,relro\"  && make && make install  && apk del build-dependencies  && rm -rf /var/cache/apk/* /tmp/* /root/.gnupg' returned a non-zero code: 2\n"}}