{"repository":"https://github.com/mrvautin/adminmongo","dockerfilePath":"Dockerfile","startTime":1672394133375,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/mrvautin/adminmongo'...\n","error":null,"commit":"9ab2e989e90c477d395b2327b6eaa238f08d03b7"},"originalBuild":{"startTimestamp":1672394134533,"endTimestamp":1672394151891,"error":{"code":1,"killed":false,"signal":null,"cmd":"docker build --no-cache --force-rm -t adminmongo:latest -f /tmp/dinghy-analysis/mrvautin/adminmongo/Dockerfile ."},"stdout":"Sending build context to Docker daemon  10.15MB\r\r\nStep 1/6 : FROM node:alpine\nalpine: Pulling from library/node\nDigest: sha256:3ed634e0f15d3e05a1918c3949963508f7ed56350cf94156e6d804ae577849fa\nStatus: Downloaded newer image for node:alpine\n ---> f01bef8b5e92\nStep 2/6 : WORKDIR /app/user\n ---> Running in 2aa78abeeda9\nRemoving intermediate container 2aa78abeeda9\n ---> 1876d935cac5\nStep 3/6 : COPY package.json .\n ---> 89086b72b4a4\nStep 4/6 : RUN npm install --production\n ---> Running in 62e2dc90bc34\n\u001b[91mnpm\u001b[0m\u001b[91m WARN \u001b[0m\u001b[91mconfig production Use `--omit=dev` instead.\n\u001b[0m\u001b[91mnpm ERR! code ERESOLVE\n\u001b[0m\u001b[91mnpm ERR! ERESOLVE unable to resolve dependency tree\n\u001b[0m\u001b[91mnpm ERR! \n\u001b[0m\u001b[91mnpm ERR! While resolving: admin-mongo@0.0.23\nnpm\u001b[0m\u001b[91m ERR! Found: jsdom@9.12.0\n\u001b[0m\u001b[91mnpm ERR!\u001b[0m\u001b[91m node_modules/jsdom\nnpm ERR!\u001b[0m\u001b[91m   dev jsdom@\"^9.4.1\" from the root project\n\u001b[0m\u001b[91mnpm ERR! \n\u001b[0m\u001b[91mnpm ERR!\u001b[0m\u001b[91m Could not resolve dependency:\nnpm ERR! peer jsdom@\">10.0.0\" from mocha-jsdom@1.2.0\nnpm\u001b[0m\u001b[91m ERR!\u001b[0m\u001b[91m node_modules/mocha-jsdom\n\u001b[0m\u001b[91mnpm\u001b[0m\u001b[91m ERR!\u001b[0m\u001b[91m   dev mocha-jsdom@\"^1.1.0\" from the root project\nnpm \u001b[0m\u001b[91mERR! \n\u001b[0m\u001b[91mnpm\u001b[0m\u001b[91m ERR!\u001b[0m\u001b[91m Fix the upstream dependency conflict, or retry\nnpm ERR!\u001b[0m\u001b[91m this command with --force or --legacy-peer-deps\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\n\u001b[0m\u001b[91mnpm ERR! \nnpm ERR!\u001b[0m\u001b[91m \nnpm \u001b[0m\u001b[91mERR!\u001b[0m\u001b[91m For a full report see:\nnpm ERR! /root/.npm/_logs/2022-12-30T09_55_40_569Z-eresolve-report.txt\n\u001b[0m\u001b[91m\n\u001b[0m\u001b[91mnpm ERR! A complete log of this run can be found in:\nnpm ERR!\u001b[0m\u001b[91m     /root/.npm/_logs/2022-12-30T09_55_40_569Z-debug-0.log\n\u001b[0mRemoving intermediate container 62e2dc90bc34\n","stderr":"The command '/bin/sh -c npm install --production' returned a non-zero code: 1\n"},"endTime":1672394151961}