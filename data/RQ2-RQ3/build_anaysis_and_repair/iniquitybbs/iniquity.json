{"repository":"https://github.com/iniquitybbs/iniquity","dockerfilePath":"Dockerfile","startTime":1673051976818,"endTime":1673052203325,"clone":{"startTime":1673051976818,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/iniquitybbs/iniquity'...\n","error":null,"endTime":1673051977718,"commit":"c03469f0c0a20ab4389c8f9034aea9173ede25b2"},"originalBuild":{"startTime":1673051977808,"endTime":1673052203214,"error":{"code":"ERR_CHILD_PROCESS_STDIO_MAXBUFFER","cmd":"docker build --no-cache --force-rm -t iniquity:latest -f /tmp/dinghy-analysis/iniquitybbs/iniquity/Dockerfile ."},"stdout":"Sending build context to Docker daemon  3.047MB\r\r\nStep 1/18 : FROM ubuntu:bionic as synchronet\nbionic: Pulling from library/ubuntu\nDigest: sha256:c1d0baf2425ecef88a2f0c3543ec43690dc16cc80d3c4e593bb95e4f45390e45\nStatus: Downloaded newer image for ubuntu:bionic\n ---> e28a50f651f9\nStep 2/18 : LABEL name=\"synchronet\"\n ---> Running in 64da42ed74e8\nRemoving intermediate container 64da42ed74e8\n ---> 05f4bbc0ed70\nStep 3/18 : LABEL version=\"latest\"\n ---> Running in 2f6084b95bb6\nRemoving intermediate container 2f6084b95bb6\n ---> 5c641611cc1e\nStep 4/18 : WORKDIR /sbbs\n ---> Running in 8ae3bb67ea35\nRemoving intermediate container 8ae3bb67ea35\n ---> fc01de575c1f\nStep 5/18 : ENV SBBSCTRL=/sbbs/ctrl\n ---> Running in 3f6a3578f55f\nRemoving intermediate container 3f6a3578f55f\n ---> 69272f337b2f\nStep 6/18 : ENV SBBSEXEC=/sbbs/exec\n ---> Running in e0270aa41b59\nRemoving intermediate container e0270aa41b59\n ---> 976793c0c9e1\nStep 7/18 : RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get -y install build-essential python ruby wget     && apt-get -y install libncurses5-dev libncursesw5-dev libc6-dev libc-dev g++ libnspr4-dev git dosemu libarchive-dev     && apt-get -y install pkg-config libzip-dev libsdl-kitchensink-dev zip unzip apt-utils     && apt-get -y install libcap2-dev libcap2-bin sudo lrzsz vim     && cd ~/     && git clone https://github.com/iniquitybbs/sbbs.git     && cd ~/sbbs/install     && make install SYMLINK=1 NOCAP=1 USE_DOSEMU=1 OS=iq3os SBBSDIR=/sbbs REPODIR=/root/sbbs     ; apt-get -y autoremove\n ---> Running in 14d2a3f5262c\nGet:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\nGet:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]\nGet:3 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1573 kB]\nGet:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [22.9 kB]\nGet:5 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [3127 kB]\nGet:6 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [1349 kB]\nGet:7 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\nGet:8 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [83.3 kB]\nGet:9 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]\nGet:10 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]\nGet:11 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]\nGet:12 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]\nGet:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [1389 kB]\nGet:14 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [3549 kB]\nGet:15 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [30.9 kB]\nGet:16 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2348 kB]\nGet:17 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [64.0 kB]\nGet:18 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [20.5 kB]\nFetched 26.9 MB in 3s (8769 kB/s)\nReading package lists...\nReading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  binutils binutils-common binutils-x86-64-linux-gnu ca-certificates cpp cpp-7\n  dirmngr dpkg-dev fakeroot file fonts-lato g++ g++-7 gcc gcc-7 gcc-7-base\n  gnupg gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client gpg-wks-server\n  gpgconf gpgsm javascript-common libalgorithm-diff-perl\n  libalgorithm-diff-xs-perl libalgorithm-merge-perl libasan4 libasn1-8-heimdal\n  libassuan0 libatomic1 libbinutils libc-dev-bin libc6-dev libcc1-0\n  libcilkrts5 libdpkg-perl libexpat1 libfakeroot libfile-fcntllock-perl\n  libgcc-7-dev libgdbm-compat4 libgdbm5 libgomp1 libgssapi3-heimdal\n  libhcrypto4-heimdal libheimbase1-heimdal libheimntlm0-heimdal\n  libhx509-5-heimdal libisl19 libitm1 libjs-jquery libkrb5-26-heimdal libksba8\n  libldap-2.4-2 libldap-common liblocale-gettext-perl liblsan0 libmagic-mgc\n  libmagic1 libmpc3 libmpfr6 libmpx2 libnpth0 libperl5.26 libpsl5\n  libpython-stdlib libpython2.7-minimal libpython2.7-stdlib libquadmath0\n  libreadline7 libroken18-heimdal libruby2.5 libsasl2-2 libsasl2-modules\n  libsasl2-modules-db libsqlite3-0 libssl1.1 libstdc++-7-dev libtsan0\n  libubsan0 libwind0-heimdal libyaml-0-2 linux-libc-dev make manpages\n  manpages-dev mime-support netbase openssl patch perl perl-modules-5.26\n  pinentry-curses publicsuffix python-minimal python2.7 python2.7-minimal rake\n  readline-common ruby-did-you-mean ruby-minitest ruby-net-telnet\n  ruby-power-assert ruby-test-unit ruby2.5 rubygems-integration unzip xz-utils\n  zip\nSuggested packages:\n  binutils-doc cpp-doc gcc-7-locales dbus-user-session libpam-systemd\n  pinentry-gnome3 tor debian-keyring g++-multilib g++-7-multilib gcc-7-doc\n  libstdc++6-7-dbg gcc-multilib autoconf automake libtool flex bison gdb\n  gcc-doc gcc-7-multilib libgcc1-dbg libgomp1-dbg libitm1-dbg libatomic1-dbg\n  libasan4-dbg liblsan0-dbg libtsan0-dbg libubsan0-dbg libcilkrts5-dbg\n  libmpx2-dbg libquadmath0-dbg parcimonie xloadimage scdaemon apache2\n  | lighttpd | httpd glibc-doc git bzr gdbm-l10n libsasl2-modules-gssapi-mit\n  | libsasl2-modules-gssapi-heimdal libsasl2-modules-ldap libsasl2-modules-otp\n  libsasl2-modules-sql libstdc++-7-doc make-doc man-browser ed diffutils-doc\n  perl-doc libterm-readline-gnu-perl | libterm-readline-perl-perl pinentry-doc\n  python-doc python-tk python2.7-doc binfmt-support readline-doc ri ruby-dev\n  bundler\nThe following NEW packages will be installed:\n  binutils binutils-common binutils-x86-64-linux-gnu build-essential\n  ca-certificates cpp cpp-7 dirmngr dpkg-dev fakeroot file fonts-lato g++\n  g++-7 gcc gcc-7 gcc-7-base gnupg gnupg-l10n gnupg-utils gpg gpg-agent\n  gpg-wks-client gpg-wks-server gpgconf gpgsm javascript-common\n  libalgorithm-diff-perl libalgorithm-diff-xs-perl libalgorithm-merge-perl\n  libasan4 libasn1-8-heimdal libassuan0 libatomic1 libbinutils libc-dev-bin\n  libc6-dev libcc1-0 libcilkrts5 libdpkg-perl libexpat1 libfakeroot\n  libfile-fcntllock-perl libgcc-7-dev libgdbm-compat4 libgdbm5 libgomp1\n  libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal\n  libheimntlm0-heimdal libhx509-5-heimdal libisl19 libitm1 libjs-jquery\n  libkrb5-26-heimdal libksba8 libldap-2.4-2 libldap-common\n  liblocale-gettext-perl liblsan0 libmagic-mgc libmagic1 libmpc3 libmpfr6\n  libmpx2 libnpth0 libperl5.26 libpsl5 libpython-stdlib libpython2.7-minimal\n  libpython2.7-stdlib libquadmath0 libreadline7 libroken18-heimdal libruby2.5\n  libsasl2-2 libsasl2-modules libsasl2-modules-db libsqlite3-0 libssl1.1\n  libstdc++-7-dev libtsan0 libubsan0 libwind0-heimdal libyaml-0-2\n  linux-libc-dev make manpages manpages-dev mime-support netbase openssl patch\n  perl perl-modules-5.26 pinentry-curses publicsuffix python python-minimal\n  python2.7 python2.7-minimal rake readline-common ruby ruby-did-you-mean\n  ruby-minitest ruby-net-telnet ruby-power-assert ruby-test-unit ruby2.5\n  rubygems-integration unzip wget xz-utils zip\n0 upgraded, 116 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 68.5 MB of archives.\nAfter this operation, 281 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 liblocale-gettext-perl amd64 1.07-3build2 [16.6 kB]\nGet:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 fonts-lato all 2.0-2 [2698 kB]\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 perl-modules-5.26 all 5.26.1-6ubuntu0.6 [2764 kB]\nGet:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgdbm5 amd64 1.14.1-6 [26.0 kB]\nGet:5 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgdbm-compat4 amd64 1.14.1-6 [6084 B]\nGet:6 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libperl5.26 amd64 5.26.1-6ubuntu0.6 [3556 kB]\nGet:7 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 perl amd64 5.26.1-6ubuntu0.6 [201 kB]\nGet:8 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpython2.7-minimal amd64 2.7.17-1~18.04ubuntu1.10 [336 kB]\nGet:9 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 python2.7-minimal amd64 2.7.17-1~18.04ubuntu1.10 [1290 kB]\nGet:10 http://archive.ubuntu.com/ubuntu bionic/main amd64 python-minimal amd64 2.7.15~rc1-1 [28.1 kB]\nGet:11 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libssl1.1 amd64 1.1.1-1ubuntu2.1~18.04.20 [1302 kB]\nGet:12 http://archive.ubuntu.com/ubuntu bionic/main amd64 mime-support all 3.60ubuntu1 [30.1 kB]\nGet:13 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libexpat1 amd64 2.2.5-3ubuntu0.9 [82.8 kB]\nGet:14 http://archive.ubuntu.com/ubuntu bionic/main amd64 readline-common all 7.0-3 [52.9 kB]\nGet:15 http://archive.ubuntu.com/ubuntu bionic/main amd64 libreadline7 amd64 7.0-3 [124 kB]\nGet:16 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libsqlite3-0 amd64 3.22.0-1ubuntu0.7 [499 kB]\nGet:17 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpython2.7-stdlib amd64 2.7.17-1~18.04ubuntu1.10 [1917 kB]\nGet:18 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 python2.7 amd64 2.7.17-1~18.04ubuntu1.10 [248 kB]\nGet:19 http://archive.ubuntu.com/ubuntu bionic/main amd64 libpython-stdlib amd64 2.7.15~rc1-1 [7620 B]\nGet:20 http://archive.ubuntu.com/ubuntu bionic/main amd64 python amd64 2.7.15~rc1-1 [140 kB]\nGet:21 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 openssl amd64 1.1.1-1ubuntu2.1~18.04.20 [614 kB]\nGet:22 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 ca-certificates all 20211016ubuntu0.18.04.1 [140 kB]\nGet:23 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libmagic-mgc amd64 1:5.32-2ubuntu0.4 [184 kB]\nGet:24 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libmagic1 amd64 1:5.32-2ubuntu0.4 [68.6 kB]\nGet:25 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 file amd64 1:5.32-2ubuntu0.4 [22.1 kB]\nGet:26 http://archive.ubuntu.com/ubuntu bionic/main amd64 libyaml-0-2 amd64 0.1.7-2ubuntu3 [47.2 kB]\nGet:27 http://archive.ubuntu.com/ubuntu bionic/main amd64 netbase all 5.4 [12.7 kB]\nGet:28 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 xz-utils amd64 5.2.2-1.3ubuntu0.1 [83.8 kB]\nGet:29 http://archive.ubuntu.com/ubuntu bionic/main amd64 libpsl5 amd64 0.19.1-5build1 [41.8 kB]\nGet:30 http://archive.ubuntu.com/ubuntu bionic/main amd64 manpages all 4.15-1 [1234 kB]\nGet:31 http://archive.ubuntu.com/ubuntu bionic/main amd64 publicsuffix all 20180223.1310-1 [97.6 kB]\nGet:32 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 wget amd64 1.19.4-1ubuntu2.2 [316 kB]\nGet:33 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 binutils-common amd64 2.30-21ubuntu1~18.04.8 [197 kB]\nGet:34 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libbinutils amd64 2.30-21ubuntu1~18.04.8 [488 kB]\nGet:35 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 binutils-x86-64-linux-gnu amd64 2.30-21ubuntu1~18.04.8 [1839 kB]\nGet:36 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 binutils amd64 2.30-21ubuntu1~18.04.8 [3388 B]\nGet:37 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libc-dev-bin amd64 2.27-3ubuntu1.6 [71.9 kB]\nGet:38 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 linux-libc-dev amd64 4.15.0-201.212 [1000 kB]\nGet:39 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libc6-dev amd64 2.27-3ubuntu1.6 [2587 kB]\nGet:40 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gcc-7-base amd64 7.5.0-3ubuntu1~18.04 [18.3 kB]\nGet:41 http://archive.ubuntu.com/ubuntu bionic/main amd64 libisl19 amd64 0.19-1 [551 kB]\nGet:42 http://archive.ubuntu.com/ubuntu bionic/main amd64 libmpfr6 amd64 4.0.1-1 [243 kB]\nGet:43 http://archive.ubuntu.com/ubuntu bionic/main amd64 libmpc3 amd64 1.1.0-1 [40.8 kB]\nGet:44 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 cpp-7 amd64 7.5.0-3ubuntu1~18.04 [8591 kB]\nGet:45 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 cpp amd64 4:7.4.0-1ubuntu2.3 [27.7 kB]\nGet:46 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libcc1-0 amd64 8.4.0-1ubuntu1~18.04 [39.4 kB]\nGet:47 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgomp1 amd64 8.4.0-1ubuntu1~18.04 [76.5 kB]\nGet:48 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libitm1 amd64 8.4.0-1ubuntu1~18.04 [27.9 kB]\nGet:49 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libatomic1 amd64 8.4.0-1ubuntu1~18.04 [9192 B]\nGet:50 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libasan4 amd64 7.5.0-3ubuntu1~18.04 [358 kB]\nGet:51 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 liblsan0 amd64 8.4.0-1ubuntu1~18.04 [133 kB]\nGet:52 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtsan0 amd64 8.4.0-1ubuntu1~18.04 [288 kB]\nGet:53 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libubsan0 amd64 7.5.0-3ubuntu1~18.04 [126 kB]\nGet:54 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libcilkrts5 amd64 7.5.0-3ubuntu1~18.04 [42.5 kB]\nGet:55 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libmpx2 amd64 8.4.0-1ubuntu1~18.04 [11.6 kB]\nGet:56 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libquadmath0 amd64 8.4.0-1ubuntu1~18.04 [134 kB]\nGet:57 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgcc-7-dev amd64 7.5.0-3ubuntu1~18.04 [2378 kB]\nGet:58 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gcc-7 amd64 7.5.0-3ubuntu1~18.04 [9381 kB]\nGet:59 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gcc amd64 4:7.4.0-1ubuntu2.3 [5184 B]\nGet:60 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libstdc++-7-dev amd64 7.5.0-3ubuntu1~18.04 [1471 kB]\nGet:61 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 g++-7 amd64 7.5.0-3ubuntu1~18.04 [9697 kB]\nGet:62 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 g++ amd64 4:7.4.0-1ubuntu2.3 [1568 B]\nGet:63 http://archive.ubuntu.com/ubuntu bionic/main amd64 make amd64 4.1-9.1ubuntu1 [154 kB]\nGet:64 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdpkg-perl all 1.19.0.5ubuntu2.4 [212 kB]\nGet:65 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 patch amd64 2.7.6-2ubuntu1.1 [102 kB]\nGet:66 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 dpkg-dev all 1.19.0.5ubuntu2.4 [607 kB]\nGet:67 http://archive.ubuntu.com/ubuntu bionic/main amd64 build-essential amd64 12.4ubuntu1 [4758 B]\nGet:68 http://archive.ubuntu.com/ubuntu bionic/main amd64 libassuan0 amd64 2.5.1-2 [35.0 kB]\nGet:69 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gpgconf amd64 2.2.4-1ubuntu1.6 [124 kB]\nGet:70 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libksba8 amd64 1.3.5-2ubuntu0.18.04.2 [94.6 kB]\nGet:71 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libroken18-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [41.8 kB]\nGet:72 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libasn1-8-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [174 kB]\nGet:73 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libheimbase1-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [29.9 kB]\nGet:74 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libhcrypto4-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [85.9 kB]\nGet:75 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwind0-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [48.0 kB]\nGet:76 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libhx509-5-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [108 kB]\nGet:77 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libkrb5-26-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [207 kB]\nGet:78 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libheimntlm0-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [14.7 kB]\nGet:79 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgssapi3-heimdal amd64 7.5.0+dfsg-1ubuntu0.2 [96.3 kB]\nGet:80 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libsasl2-modules-db amd64 2.1.27~101-g0780600+dfsg-3ubuntu2.4 [15.0 kB]\nGet:81 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libsasl2-2 amd64 2.1.27~101-g0780600+dfsg-3ubuntu2.4 [49.2 kB]\nGet:82 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libldap-common all 2.4.45+dfsg-1ubuntu1.11 [15.8 kB]\nGet:83 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libldap-2.4-2 amd64 2.4.45+dfsg-1ubuntu1.11 [154 kB]\nGet:84 http://archive.ubuntu.com/ubuntu bionic/main amd64 libnpth0 amd64 1.5-3 [7668 B]\nGet:85 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 dirmngr amd64 2.2.4-1ubuntu1.6 [317 kB]\nGet:86 http://archive.ubuntu.com/ubuntu bionic/main amd64 libfakeroot amd64 1.22-2ubuntu1 [25.9 kB]\nGet:87 http://archive.ubuntu.com/ubuntu bionic/main amd64 fakeroot amd64 1.22-2ubuntu1 [62.3 kB]\nGet:88 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gnupg-l10n all 2.2.4-1ubuntu1.6 [50.1 kB]\nGet:89 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gnupg-utils amd64 2.2.4-1ubuntu1.6 [128 kB]\nGet:90 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gpg amd64 2.2.4-1ubuntu1.6 [468 kB]\nGet:91 http://archive.ubuntu.com/ubuntu bionic/main amd64 pinentry-curses amd64 1.1.0-1 [35.8 kB]\nGet:92 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gpg-agent amd64 2.2.4-1ubuntu1.6 [227 kB]\nGet:93 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gpg-wks-client amd64 2.2.4-1ubuntu1.6 [91.8 kB]\nGet:94 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gpg-wks-server amd64 2.2.4-1ubuntu1.6 [85.0 kB]\nGet:95 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gpgsm amd64 2.2.4-1ubuntu1.6 [215 kB]\nGet:96 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 gnupg amd64 2.2.4-1ubuntu1.6 [249 kB]\nGet:97 http://archive.ubuntu.com/ubuntu bionic/main amd64 javascript-common all 11 [6066 B]\nGet:98 http://archive.ubuntu.com/ubuntu bionic/main amd64 libalgorithm-diff-perl all 1.19.03-1 [47.6 kB]\nGet:99 http://archive.ubuntu.com/ubuntu bionic/main amd64 libalgorithm-diff-xs-perl amd64 0.04-5 [11.1 kB]\nGet:100 http://archive.ubuntu.com/ubuntu bionic/main amd64 libalgorithm-merge-perl all 0.08-3 [12.0 kB]\nGet:101 http://archive.ubuntu.com/ubuntu bionic/main amd64 libfile-fcntllock-perl amd64 0.22-3build2 [33.2 kB]\nGet:102 http://archive.ubuntu.com/ubuntu bionic/main amd64 libjs-jquery all 3.2.1-1 [152 kB]\nGet:103 http://archive.ubuntu.com/ubuntu bionic/main amd64 rubygems-integration all 1.11 [4994 B]\nGet:104 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 ruby2.5 amd64 2.5.1-1ubuntu1.12 [48.6 kB]\nGet:105 http://archive.ubuntu.com/ubuntu bionic/main amd64 ruby amd64 1:2.5.1 [5712 B]\nGet:106 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 rake all 12.3.1-1ubuntu0.1 [44.9 kB]\nGet:107 http://archive.ubuntu.com/ubuntu bionic/main amd64 ruby-did-you-mean all 1.2.0-2 [9700 B]\nGet:108 http://archive.ubuntu.com/ubuntu bionic/main amd64 ruby-minitest all 5.10.3-1 [38.6 kB]\nGet:109 http://archive.ubuntu.com/ubuntu bionic/main amd64 ruby-net-telnet all 0.1.1-2 [12.6 kB]\nGet:110 http://archive.ubuntu.com/ubuntu bionic/main amd64 ruby-power-assert all 0.3.0-1 [7952 B]\nGet:111 http://archive.ubuntu.com/ubuntu bionic/main amd64 ruby-test-unit all 3.2.5-1 [61.1 kB]\nGet:112 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libruby2.5 amd64 2.5.1-1ubuntu1.12 [3073 kB]\nGet:113 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libsasl2-modules amd64 2.1.27~101-g0780600+dfsg-3ubuntu2.4 [48.9 kB]\nGet:114 http://archive.ubuntu.com/ubuntu bionic/main amd64 manpages-dev all 4.15-1 [2217 kB]\nGet:115 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 unzip amd64 6.0-21ubuntu1.2 [168 kB]\nGet:116 http://archive.ubuntu.com/ubuntu bionic/main amd64 zip amd64 3.0-11build1 [167 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 68.5 MB in 6s (11.6 MB/s)\nSelecting previously unselected package liblocale-gettext-perl.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 4051 files and directories currently installed.)\r\nPreparing to unpack .../00-liblocale-gettext-perl_1.07-3build2_amd64.deb ...\r\nUnpacking liblocale-gettext-perl (1.07-3build2) ...\r\nSelecting previously unselected package fonts-lato.\r\nPreparing to unpack .../01-fonts-lato_2.0-2_all.deb ...\r\nUnpacking fonts-lato (2.0-2) ...\r\nSelecting previously unselected package perl-modules-5.26.\r\nPreparing to unpack .../02-perl-modules-5.26_5.26.1-6ubuntu0.6_all.deb ...\r\nUnpacking perl-modules-5.26 (5.26.1-6ubuntu0.6) ...\r\nSelecting previously unselected package libgdbm5:amd64.\r\nPreparing to unpack .../03-libgdbm5_1.14.1-6_amd64.deb ...\r\nUnpacking libgdbm5:amd64 (1.14.1-6) ...\r\nSelecting previously unselected package libgdbm-compat4:amd64.\r\nPreparing to unpack .../04-libgdbm-compat4_1.14.1-6_amd64.deb ...\r\nUnpacking libgdbm-compat4:amd64 (1.14.1-6) ...\r\nSelecting previously unselected package libperl5.26:amd64.\r\nPreparing to unpack .../05-libperl5.26_5.26.1-6ubuntu0.6_amd64.deb ...\r\nUnpacking libperl5.26:amd64 (5.26.1-6ubuntu0.6) ...\r\nSelecting previously unselected package perl.\r\nPreparing to unpack .../06-perl_5.26.1-6ubuntu0.6_amd64.deb ...\r\nUnpacking perl (5.26.1-6ubuntu0.6) ...\r\nSelecting previously unselected package libpython2.7-minimal:amd64.\r\nPreparing to unpack .../07-libpython2.7-minimal_2.7.17-1~18.04ubuntu1.10_amd64.deb ...\r\nUnpacking libpython2.7-minimal:amd64 (2.7.17-1~18.04ubuntu1.10) ...\r\nSelecting previously unselected package python2.7-minimal.\r\nPreparing to unpack .../08-python2.7-minimal_2.7.17-1~18.04ubuntu1.10_amd64.deb ...\r\nUnpacking python2.7-minimal (2.7.17-1~18.04ubuntu1.10) ...\r\nSelecting previously unselected package python-minimal.\r\nPreparing to unpack .../09-python-minimal_2.7.15~rc1-1_amd64.deb ...\r\nUnpacking python-minimal (2.7.15~rc1-1) ...\r\nSelecting previously unselected package libssl1.1:amd64.\r\nPreparing to unpack .../10-libssl1.1_1.1.1-1ubuntu2.1~18.04.20_amd64.deb ...\r\nUnpacking libssl1.1:amd64 (1.1.1-1ubuntu2.1~18.04.20) ...\r\nSelecting previously unselected package mime-support.\r\nPreparing to unpack .../11-mime-support_3.60ubuntu1_all.deb ...\r\nUnpacking mime-support (3.60ubuntu1) ...\r\nSelecting previously unselected package libexpat1:amd64.\r\nPreparing to unpack .../12-libexpat1_2.2.5-3ubuntu0.9_amd64.deb ...\r\nUnpacking libexpat1:amd64 (2.2.5-3ubuntu0.9) ...\r\nSelecting previously unselected package readline-common.\r\nPreparing to unpack .../13-readline-common_7.0-3_all.deb ...\r\nUnpacking readline-common (7.0-3) ...\r\nSelecting previously unselected package libreadline7:amd64.\r\nPreparing to unpack .../14-libreadline7_7.0-3_amd64.deb ...\r\nUnpacking libreadline7:amd64 (7.0-3) ...\r\nSelecting previously unselected package libsqlite3-0:amd64.\r\nPreparing to unpack .../15-libsqlite3-0_3.22.0-1ubuntu0.7_amd64.deb ...\r\nUnpacking libsqlite3-0:amd64 (3.22.0-1ubuntu0.7) ...\r\nSelecting previously unselected package libpython2.7-stdlib:amd64.\r\nPreparing to unpack .../16-libpython2.7-stdlib_2.7.17-1~18.04ubuntu1.10_amd64.deb ...\r\nUnpacking libpython2.7-stdlib:amd64 (2.7.17-1~18.04ubuntu1.10) ...\r\nSelecting previously unselected package python2.7.\r\nPreparing to unpack .../17-python2.7_2.7.17-1~18.04ubuntu1.10_amd64.deb ...\r\nUnpacking python2.7 (2.7.17-1~18.04ubuntu1.10) ...\r\nSelecting previously unselected package libpython-stdlib:amd64.\r\nPreparing to unpack .../18-libpython-stdlib_2.7.15~rc1-1_amd64.deb ...\r\nUnpacking libpython-stdlib:amd64 (2.7.15~rc1-1) ...\r\nSetting up libpython2.7-minimal:amd64 (2.7.17-1~18.04ubuntu1.10) ...\r\nSetting up python2.7-minimal (2.7.17-1~18.04ubuntu1.10) ...\r\nLinking and byte-compiling packages for runtime python2.7...\r\nSetting up python-minimal (2.7.15~rc1-1) ...\r\nSelecting previously unselected package python.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 6824 files and directories currently installed.)\r\nPreparing to unpack .../00-python_2.7.15~rc1-1_amd64.deb ...\r\nUnpacking python (2.7.15~rc1-1) ...\r\nSelecting previously unselected package openssl.\r\nPreparing to unpack .../01-openssl_1.1.1-1ubuntu2.1~18.04.20_amd64.deb ...\r\nUnpacking openssl (1.1.1-1ubuntu2.1~18.04.20) ...\r\nSelecting previously unselected package ca-certificates.\r\nPreparing to unpack .../02-ca-certificates_20211016ubuntu0.18.04.1_all.deb ...\r\nUnpacking ca-certificates (20211016ubuntu0.18.04.1) ...\r\nSelecting previously unselected package libmagic-mgc.\r\nPreparing to unpack .../03-libmagic-mgc_1%3a5.32-2ubuntu0.4_amd64.deb ...\r\nUnpacking libmagic-mgc (1:5.32-2ubuntu0.4) ...\r\nSelecting previously unselected package libmagic1:amd64.\r\nPreparing to unpack .../04-libmagic1_1%3a5.32-2ubuntu0.4_amd64.deb ...\r\nUnpacking libmagic1:amd64 (1:5.32-2ubuntu0.4) ...\r\nSelecting previously unselected package file.\r\nPreparing to unpack .../05-file_1%3a5.32-2ubuntu0.4_amd64.deb ...\r\nUnpacking file (1:5.32-2ubuntu0.4) ...\r\nSelecting previously unselected package libyaml-0-2:amd64.\r\nPreparing to unpack .../06-libyaml-0-2_0.1.7-2ubuntu3_amd64.deb ...\r\nUnpacking libyaml-0-2:amd64 (0.1.7-2ubuntu3) ...\r\nSelecting previously unselected package netbase.\r\nPreparing to unpack .../07-netbase_5.4_all.deb ...\r\nUnpacking netbase (5.4) ...\r\nSelecting previously unselected package xz-utils.\r\nPreparing to unpack .../08-xz-utils_5.2.2-1.3ubuntu0.1_amd64.deb ...\r\nUnpacking xz-utils (5.2.2-1.3ubuntu0.1) ...\r\nSelecting previously unselected package libpsl5:amd64.\r\nPreparing to unpack .../09-libpsl5_0.19.1-5build1_amd64.deb ...\r\nUnpacking libpsl5:amd64 (0.19.1-5build1) ...\r\nSelecting previously unselected package manpages.\r\nPreparing to unpack .../10-manpages_4.15-1_all.deb ...\r\nUnpacking manpages (4.15-1) ...\r\nSelecting previously unselected package publicsuffix.\r\nPreparing to unpack .../11-publicsuffix_20180223.1310-1_all.deb ...\r\nUnpacking publicsuffix (20180223.1310-1) ...\r\nSelecting previously unselected package wget.\r\nPreparing to unpack .../12-wget_1.19.4-1ubuntu2.2_amd64.deb ...\r\nUnpacking wget (1.19.4-1ubuntu2.2) ...\r\nSelecting previously unselected package binutils-common:amd64.\r\nPreparing to unpack .../13-binutils-common_2.30-21ubuntu1~18.04.8_amd64.deb ...\r\nUnpacking binutils-common:amd64 (2.30-21ubuntu1~18.04.8) ...\r\nSelecting previously unselected package libbinutils:amd64.\r\nPreparing to unpack .../14-libbinutils_2.30-21ubuntu1~18.04.8_amd64.deb ...\r\nUnpacking libbinutils:amd64 (2.30-21ubuntu1~18.04.8) ...\r\nSelecting previously unselected package binutils-x86-64-linux-gnu.\r\nPreparing to unpack .../15-binutils-x86-64-linux-gnu_2.30-21ubuntu1~18.04.8_amd64.deb ...\r\nUnpacking binutils-x86-64-linux-gnu (2.30-21ubuntu1~18.04.8) ...\r\nSelecting previously unselected package binutils.\r\nPreparing to unpack .../16-binutils_2.30-21ubuntu1~18.04.8_amd64.deb ...\r\nUnpacking binutils (2.30-21ubuntu1~18.04.8) ...\r\nSelecting previously unselected package libc-dev-bin.\r\nPreparing to unpack .../17-libc-dev-bin_2.27-3ubuntu1.6_amd64.deb ...\r\nUnpacking libc-dev-bin (2.27-3ubuntu1.6) ...\r\nSelecting previously unselected package linux-libc-dev:amd64.\r\nPreparing to unpack .../18-linux-libc-dev_4.15.0-201.212_amd64.deb ...\r\nUnpacking linux-libc-dev:amd64 (4.15.0-201.212) ...\r\nSelecting previously unselected package libc6-dev:amd64.\r\nPreparing to unpack .../19-libc6-dev_2.27-3ubuntu1.6_amd64.deb ...\r\nUnpacking libc6-dev:amd64 (2.27-3ubuntu1.6) ...\r\nSelecting previously unselected package gcc-7-base:amd64.\r\nPreparing to unpack .../20-gcc-7-base_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking gcc-7-base:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package libisl19:amd64.\r\nPreparing to unpack .../21-libisl19_0.19-1_amd64.deb ...\r\nUnpacking libisl19:amd64 (0.19-1) ...\r\nSelecting previously unselected package libmpfr6:amd64.\r\nPreparing to unpack .../22-libmpfr6_4.0.1-1_amd64.deb ...\r\nUnpacking libmpfr6:amd64 (4.0.1-1) ...\r\nSelecting previously unselected package libmpc3:amd64.\r\nPreparing to unpack .../23-libmpc3_1.1.0-1_amd64.deb ...\r\nUnpacking libmpc3:amd64 (1.1.0-1) ...\r\nSelecting previously unselected package cpp-7.\r\nPreparing to unpack .../24-cpp-7_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking cpp-7 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package cpp.\r\nPreparing to unpack .../25-cpp_4%3a7.4.0-1ubuntu2.3_amd64.deb ...\r\nUnpacking cpp (4:7.4.0-1ubuntu2.3) ...\r\nSelecting previously unselected package libcc1-0:amd64.\r\nPreparing to unpack .../26-libcc1-0_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libcc1-0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libgomp1:amd64.\r\nPreparing to unpack .../27-libgomp1_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libgomp1:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libitm1:amd64.\r\nPreparing to unpack .../28-libitm1_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libitm1:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libatomic1:amd64.\r\nPreparing to unpack .../29-libatomic1_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libatomic1:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libasan4:amd64.\r\nPreparing to unpack .../30-libasan4_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking libasan4:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package liblsan0:amd64.\r\nPreparing to unpack .../31-liblsan0_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking liblsan0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libtsan0:amd64.\r\nPreparing to unpack .../32-libtsan0_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libtsan0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libubsan0:amd64.\r\nPreparing to unpack .../33-libubsan0_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking libubsan0:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package libcilkrts5:amd64.\r\nPreparing to unpack .../34-libcilkrts5_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking libcilkrts5:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package libmpx2:amd64.\r\nPreparing to unpack .../35-libmpx2_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libmpx2:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libquadmath0:amd64.\r\nPreparing to unpack .../36-libquadmath0_8.4.0-1ubuntu1~18.04_amd64.deb ...\r\nUnpacking libquadmath0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSelecting previously unselected package libgcc-7-dev:amd64.\r\nPreparing to unpack .../37-libgcc-7-dev_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking libgcc-7-dev:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package gcc-7.\r\nPreparing to unpack .../38-gcc-7_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking gcc-7 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package gcc.\r\nPreparing to unpack .../39-gcc_4%3a7.4.0-1ubuntu2.3_amd64.deb ...\r\nUnpacking gcc (4:7.4.0-1ubuntu2.3) ...\r\nSelecting previously unselected package libstdc++-7-dev:amd64.\r\nPreparing to unpack .../40-libstdc++-7-dev_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking libstdc++-7-dev:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package g++-7.\r\nPreparing to unpack .../41-g++-7_7.5.0-3ubuntu1~18.04_amd64.deb ...\r\nUnpacking g++-7 (7.5.0-3ubuntu1~18.04) ...\r\nSelecting previously unselected package g++.\r\nPreparing to unpack .../42-g++_4%3a7.4.0-1ubuntu2.3_amd64.deb ...\r\nUnpacking g++ (4:7.4.0-1ubuntu2.3) ...\r\nSelecting previously unselected package make.\r\nPreparing to unpack .../43-make_4.1-9.1ubuntu1_amd64.deb ...\r\nUnpacking make (4.1-9.1ubuntu1) ...\r\nSelecting previously unselected package libdpkg-perl.\r\nPreparing to unpack .../44-libdpkg-perl_1.19.0.5ubuntu2.4_all.deb ...\r\nUnpacking libdpkg-perl (1.19.0.5ubuntu2.4) ...\r\nSelecting previously unselected package patch.\r\nPreparing to unpack .../45-patch_2.7.6-2ubuntu1.1_amd64.deb ...\r\nUnpacking patch (2.7.6-2ubuntu1.1) ...\r\nSelecting previously unselected package dpkg-dev.\r\nPreparing to unpack .../46-dpkg-dev_1.19.0.5ubuntu2.4_all.deb ...\r\nUnpacking dpkg-dev (1.19.0.5ubuntu2.4) ...\r\nSelecting previously unselected package build-essential.\r\nPreparing to unpack .../47-build-essential_12.4ubuntu1_amd64.deb ...\r\nUnpacking build-essential (12.4ubuntu1) ...\r\nSelecting previously unselected package libassuan0:amd64.\r\nPreparing to unpack .../48-libassuan0_2.5.1-2_amd64.deb ...\r\nUnpacking libassuan0:amd64 (2.5.1-2) ...\r\nSelecting previously unselected package gpgconf.\r\nPreparing to unpack .../49-gpgconf_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gpgconf (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package libksba8:amd64.\r\nPreparing to unpack .../50-libksba8_1.3.5-2ubuntu0.18.04.2_amd64.deb ...\r\nUnpacking libksba8:amd64 (1.3.5-2ubuntu0.18.04.2) ...\r\nSelecting previously unselected package libroken18-heimdal:amd64.\r\nPreparing to unpack .../51-libroken18-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libroken18-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libasn1-8-heimdal:amd64.\r\nPreparing to unpack .../52-libasn1-8-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libasn1-8-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libheimbase1-heimdal:amd64.\r\nPreparing to unpack .../53-libheimbase1-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libheimbase1-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libhcrypto4-heimdal:amd64.\r\nPreparing to unpack .../54-libhcrypto4-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libhcrypto4-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libwind0-heimdal:amd64.\r\nPreparing to unpack .../55-libwind0-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libwind0-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libhx509-5-heimdal:amd64.\r\nPreparing to unpack .../56-libhx509-5-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libhx509-5-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libkrb5-26-heimdal:amd64.\r\nPreparing to unpack .../57-libkrb5-26-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libkrb5-26-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libheimntlm0-heimdal:amd64.\r\nPreparing to unpack .../58-libheimntlm0-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libheimntlm0-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libgssapi3-heimdal:amd64.\r\nPreparing to unpack .../59-libgssapi3-heimdal_7.5.0+dfsg-1ubuntu0.2_amd64.deb ...\r\nUnpacking libgssapi3-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSelecting previously unselected package libsasl2-modules-db:amd64.\r\nPreparing to unpack .../60-libsasl2-modules-db_2.1.27~101-g0780600+dfsg-3ubuntu2.4_amd64.deb ...\r\nUnpacking libsasl2-modules-db:amd64 (2.1.27~101-g0780600+dfsg-3ubuntu2.4) ...\r\nSelecting previously unselected package libsasl2-2:amd64.\r\nPreparing to unpack .../61-libsasl2-2_2.1.27~101-g0780600+dfsg-3ubuntu2.4_amd64.deb ...\r\nUnpacking libsasl2-2:amd64 (2.1.27~101-g0780600+dfsg-3ubuntu2.4) ...\r\nSelecting previously unselected package libldap-common.\r\nPreparing to unpack .../62-libldap-common_2.4.45+dfsg-1ubuntu1.11_all.deb ...\r\nUnpacking libldap-common (2.4.45+dfsg-1ubuntu1.11) ...\r\nSelecting previously unselected package libldap-2.4-2:amd64.\r\nPreparing to unpack .../63-libldap-2.4-2_2.4.45+dfsg-1ubuntu1.11_amd64.deb ...\r\nUnpacking libldap-2.4-2:amd64 (2.4.45+dfsg-1ubuntu1.11) ...\r\nSelecting previously unselected package libnpth0:amd64.\r\nPreparing to unpack .../64-libnpth0_1.5-3_amd64.deb ...\r\nUnpacking libnpth0:amd64 (1.5-3) ...\r\nSelecting previously unselected package dirmngr.\r\nPreparing to unpack .../65-dirmngr_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking dirmngr (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package libfakeroot:amd64.\r\nPreparing to unpack .../66-libfakeroot_1.22-2ubuntu1_amd64.deb ...\r\nUnpacking libfakeroot:amd64 (1.22-2ubuntu1) ...\r\nSelecting previously unselected package fakeroot.\r\nPreparing to unpack .../67-fakeroot_1.22-2ubuntu1_amd64.deb ...\r\nUnpacking fakeroot (1.22-2ubuntu1) ...\r\nSelecting previously unselected package gnupg-l10n.\r\nPreparing to unpack .../68-gnupg-l10n_2.2.4-1ubuntu1.6_all.deb ...\r\nUnpacking gnupg-l10n (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package gnupg-utils.\r\nPreparing to unpack .../69-gnupg-utils_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gnupg-utils (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package gpg.\r\nPreparing to unpack .../70-gpg_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gpg (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package pinentry-curses.\r\nPreparing to unpack .../71-pinentry-curses_1.1.0-1_amd64.deb ...\r\nUnpacking pinentry-curses (1.1.0-1) ...\r\nSelecting previously unselected package gpg-agent.\r\nPreparing to unpack .../72-gpg-agent_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gpg-agent (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package gpg-wks-client.\r\nPreparing to unpack .../73-gpg-wks-client_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gpg-wks-client (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package gpg-wks-server.\r\nPreparing to unpack .../74-gpg-wks-server_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gpg-wks-server (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package gpgsm.\r\nPreparing to unpack .../75-gpgsm_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gpgsm (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package gnupg.\r\nPreparing to unpack .../76-gnupg_2.2.4-1ubuntu1.6_amd64.deb ...\r\nUnpacking gnupg (2.2.4-1ubuntu1.6) ...\r\nSelecting previously unselected package javascript-common.\r\nPreparing to unpack .../77-javascript-common_11_all.deb ...\r\nUnpacking javascript-common (11) ...\r\nSelecting previously unselected package libalgorithm-diff-perl.\r\nPreparing to unpack .../78-libalgorithm-diff-perl_1.19.03-1_all.deb ...\r\nUnpacking libalgorithm-diff-perl (1.19.03-1) ...\r\nSelecting previously unselected package libalgorithm-diff-xs-perl.\r\nPreparing to unpack .../79-libalgorithm-diff-xs-perl_0.04-5_amd64.deb ...\r\nUnpacking libalgorithm-diff-xs-perl (0.04-5) ...\r\nSelecting previously unselected package libalgorithm-merge-perl.\r\nPreparing to unpack .../80-libalgorithm-merge-perl_0.08-3_all.deb ...\r\nUnpacking libalgorithm-merge-perl (0.08-3) ...\r\nSelecting previously unselected package libfile-fcntllock-perl.\r\nPreparing to unpack .../81-libfile-fcntllock-perl_0.22-3build2_amd64.deb ...\r\nUnpacking libfile-fcntllock-perl (0.22-3build2) ...\r\nSelecting previously unselected package libjs-jquery.\r\nPreparing to unpack .../82-libjs-jquery_3.2.1-1_all.deb ...\r\nUnpacking libjs-jquery (3.2.1-1) ...\r\nSelecting previously unselected package rubygems-integration.\r\nPreparing to unpack .../83-rubygems-integration_1.11_all.deb ...\r\nUnpacking rubygems-integration (1.11) ...\r\nSelecting previously unselected package ruby2.5.\r\nPreparing to unpack .../84-ruby2.5_2.5.1-1ubuntu1.12_amd64.deb ...\r\nUnpacking ruby2.5 (2.5.1-1ubuntu1.12) ...\r\nSelecting previously unselected package ruby.\r\nPreparing to unpack .../85-ruby_1%3a2.5.1_amd64.deb ...\r\nUnpacking ruby (1:2.5.1) ...\r\nSelecting previously unselected package rake.\r\nPreparing to unpack .../86-rake_12.3.1-1ubuntu0.1_all.deb ...\r\nUnpacking rake (12.3.1-1ubuntu0.1) ...\r\nSelecting previously unselected package ruby-did-you-mean.\r\nPreparing to unpack .../87-ruby-did-you-mean_1.2.0-2_all.deb ...\r\nUnpacking ruby-did-you-mean (1.2.0-2) ...\r\nSelecting previously unselected package ruby-minitest.\r\nPreparing to unpack .../88-ruby-minitest_5.10.3-1_all.deb ...\r\nUnpacking ruby-minitest (5.10.3-1) ...\r\nSelecting previously unselected package ruby-net-telnet.\r\nPreparing to unpack .../89-ruby-net-telnet_0.1.1-2_all.deb ...\r\nUnpacking ruby-net-telnet (0.1.1-2) ...\r\nSelecting previously unselected package ruby-power-assert.\r\nPreparing to unpack .../90-ruby-power-assert_0.3.0-1_all.deb ...\r\nUnpacking ruby-power-assert (0.3.0-1) ...\r\nSelecting previously unselected package ruby-test-unit.\r\nPreparing to unpack .../91-ruby-test-unit_3.2.5-1_all.deb ...\r\nUnpacking ruby-test-unit (3.2.5-1) ...\r\nSelecting previously unselected package libruby2.5:amd64.\r\nPreparing to unpack .../92-libruby2.5_2.5.1-1ubuntu1.12_amd64.deb ...\r\nUnpacking libruby2.5:amd64 (2.5.1-1ubuntu1.12) ...\r\nSelecting previously unselected package libsasl2-modules:amd64.\r\nPreparing to unpack .../93-libsasl2-modules_2.1.27~101-g0780600+dfsg-3ubuntu2.4_amd64.deb ...\r\nUnpacking libsasl2-modules:amd64 (2.1.27~101-g0780600+dfsg-3ubuntu2.4) ...\r\nSelecting previously unselected package manpages-dev.\r\nPreparing to unpack .../94-manpages-dev_4.15-1_all.deb ...\r\nUnpacking manpages-dev (4.15-1) ...\r\nSelecting previously unselected package unzip.\r\nPreparing to unpack .../95-unzip_6.0-21ubuntu1.2_amd64.deb ...\r\nUnpacking unzip (6.0-21ubuntu1.2) ...\r\nSelecting previously unselected package zip.\r\nPreparing to unpack .../96-zip_3.0-11build1_amd64.deb ...\r\nUnpacking zip (3.0-11build1) ...\r\nSetting up libquadmath0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up libnpth0:amd64 (1.5-3) ...\r\nSetting up libgomp1:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up libjs-jquery (3.2.1-1) ...\r\nSetting up libatomic1:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up readline-common (7.0-3) ...\r\nSetting up manpages (4.15-1) ...\r\nSetting up libexpat1:amd64 (2.2.5-3ubuntu0.9) ...\r\nSetting up libcc1-0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up make (4.1-9.1ubuntu1) ...\r\nSetting up mime-support (3.60ubuntu1) ...\r\nSetting up libldap-common (2.4.45+dfsg-1ubuntu1.11) ...\r\nSetting up libreadline7:amd64 (7.0-3) ...\r\nSetting up libpsl5:amd64 (0.19.1-5build1) ...\r\nSetting up libtsan0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up libsasl2-modules-db:amd64 (2.1.27~101-g0780600+dfsg-3ubuntu2.4) ...\r\nSetting up unzip (6.0-21ubuntu1.2) ...\r\nSetting up linux-libc-dev:amd64 (4.15.0-201.212) ...\r\nSetting up libmpfr6:amd64 (4.0.1-1) ...\r\nSetting up libsasl2-2:amd64 (2.1.27~101-g0780600+dfsg-3ubuntu2.4) ...\r\nSetting up libroken18-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up libksba8:amd64 (1.3.5-2ubuntu0.18.04.2) ...\r\nSetting up perl-modules-5.26 (5.26.1-6ubuntu0.6) ...\r\nSetting up libgdbm5:amd64 (1.14.1-6) ...\r\nSetting up zip (3.0-11build1) ...\r\nSetting up libmagic-mgc (1:5.32-2ubuntu0.4) ...\r\nSetting up gnupg-l10n (2.2.4-1ubuntu1.6) ...\r\nSetting up libmagic1:amd64 (1:5.32-2ubuntu0.4) ...\r\nSetting up liblsan0:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up fonts-lato (2.0-2) ...\r\nSetting up gcc-7-base:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up binutils-common:amd64 (2.30-21ubuntu1~18.04.8) ...\r\nSetting up ruby-did-you-mean (1.2.0-2) ...\r\nSetting up libmpx2:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up libyaml-0-2:amd64 (0.1.7-2ubuntu3) ...\r\nSetting up patch (2.7.6-2ubuntu1.1) ...\r\nSetting up publicsuffix (20180223.1310-1) ...\r\nSetting up libssl1.1:amd64 (1.1.1-1ubuntu2.1~18.04.20) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up xz-utils (5.2.2-1.3ubuntu0.1) ...\r\nupdate-alternatives: using /usr/bin/xz to provide /usr/bin/lzma (lzma) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzma.1.gz because associated file /usr/share/man/man1/xz.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/unlzma.1.gz because associated file /usr/share/man/man1/unxz.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzcat.1.gz because associated file /usr/share/man/man1/xzcat.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzmore.1.gz because associated file /usr/share/man/man1/xzmore.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzless.1.gz because associated file /usr/share/man/man1/xzless.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzdiff.1.gz because associated file /usr/share/man/man1/xzdiff.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzcmp.1.gz because associated file /usr/share/man/man1/xzcmp.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzgrep.1.gz because associated file /usr/share/man/man1/xzgrep.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzegrep.1.gz because associated file /usr/share/man/man1/xzegrep.1.gz (of link group lzma) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/lzfgrep.1.gz because associated file /usr/share/man/man1/xzfgrep.1.gz (of link group lzma) doesn't exist\r\nSetting up libheimbase1-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up libfakeroot:amd64 (1.22-2ubuntu1) ...\r\nSetting up openssl (1.1.1-1ubuntu2.1~18.04.20) ...\r\nSetting up wget (1.19.4-1ubuntu2.2) ...\r\nSetting up ruby-net-telnet (0.1.1-2) ...\r\nSetting up libsqlite3-0:amd64 (3.22.0-1ubuntu0.7) ...\r\nSetting up liblocale-gettext-perl (1.07-3build2) ...\r\nSetting up libmpc3:amd64 (1.1.0-1) ...\r\nSetting up libc-dev-bin (2.27-3ubuntu1.6) ...\r\nSetting up libgdbm-compat4:amd64 (1.14.1-6) ...\r\nSetting up javascript-common (11) ...\r\nSetting up libsasl2-modules:amd64 (2.1.27~101-g0780600+dfsg-3ubuntu2.4) ...\r\nSetting up ruby-minitest (5.10.3-1) ...\r\nSetting up ca-certificates (20211016ubuntu0.18.04.1) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nUpdating certificates in /etc/ssl/certs...\r\n124 added, 0 removed; done.\r\nSetting up manpages-dev (4.15-1) ...\r\nSetting up libc6-dev:amd64 (2.27-3ubuntu1.6) ...\r\nSetting up libassuan0:amd64 (2.5.1-2) ...\r\nSetting up libitm1:amd64 (8.4.0-1ubuntu1~18.04) ...\r\nSetting up libpython2.7-stdlib:amd64 (2.7.17-1~18.04ubuntu1.10) ...\r\nSetting up ruby-power-assert (0.3.0-1) ...\r\nSetting up netbase (5.4) ...\r\nSetting up libisl19:amd64 (0.19-1) ...\r\nSetting up libwind0-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up libasan4:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up libbinutils:amd64 (2.30-21ubuntu1~18.04.8) ...\r\nSetting up libcilkrts5:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up libasn1-8-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up libubsan0:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up gpgconf (2.2.4-1ubuntu1.6) ...\r\nSetting up libhcrypto4-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up python2.7 (2.7.17-1~18.04ubuntu1.10) ...\r\nSetting up file (1:5.32-2ubuntu0.4) ...\r\nSetting up fakeroot (1.22-2ubuntu1) ...\r\nupdate-alternatives: using /usr/bin/fakeroot-sysv to provide /usr/bin/fakeroot (fakeroot) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/fakeroot.1.gz because associated file /usr/share/man/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/faked.1.gz because associated file /usr/share/man/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/es/man1/fakeroot.1.gz because associated file /usr/share/man/es/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/es/man1/faked.1.gz because associated file /usr/share/man/es/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/fakeroot.1.gz because associated file /usr/share/man/fr/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/faked.1.gz because associated file /usr/share/man/fr/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/sv/man1/fakeroot.1.gz because associated file /usr/share/man/sv/man1/fakeroot-sysv.1.gz (of link group fakeroot) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/sv/man1/faked.1.gz because associated file /usr/share/man/sv/man1/faked-sysv.1.gz (of link group fakeroot) doesn't exist\r\nSetting up libhx509-5-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up libgcc-7-dev:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up cpp-7 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up libstdc++-7-dev:amd64 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up libpython-stdlib:amd64 (2.7.15~rc1-1) ...\r\nSetting up libperl5.26:amd64 (5.26.1-6ubuntu0.6) ...\r\nSetting up gpgsm (2.2.4-1ubuntu1.6) ...\r\nSetting up gnupg-utils (2.2.4-1ubuntu1.6) ...\r\nSetting up rubygems-integration (1.11) ...\r\nSetting up pinentry-curses (1.1.0-1) ...\r\nSetting up libkrb5-26-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up libheimntlm0-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up python (2.7.15~rc1-1) ...\r\nSetting up gpg (2.2.4-1ubuntu1.6) ...\r\nSetting up binutils-x86-64-linux-gnu (2.30-21ubuntu1~18.04.8) ...\r\nSetting up cpp (4:7.4.0-1ubuntu2.3) ...\r\nSetting up gpg-agent (2.2.4-1ubuntu1.6) ...\r\nSetting up gpg-wks-server (2.2.4-1ubuntu1.6) ...\r\nSetting up perl (5.26.1-6ubuntu0.6) ...\r\nSetting up libfile-fcntllock-perl (0.22-3build2) ...\r\nSetting up libalgorithm-diff-perl (1.19.03-1) ...\r\nSetting up binutils (2.30-21ubuntu1~18.04.8) ...\r\nSetting up libgssapi3-heimdal:amd64 (7.5.0+dfsg-1ubuntu0.2) ...\r\nSetting up gcc-7 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up g++-7 (7.5.0-3ubuntu1~18.04) ...\r\nSetting up libdpkg-perl (1.19.0.5ubuntu2.4) ...\r\nSetting up gcc (4:7.4.0-1ubuntu2.3) ...\r\nSetting up libalgorithm-merge-perl (0.08-3) ...\r\nSetting up dpkg-dev (1.19.0.5ubuntu2.4) ...\r\nSetting up libalgorithm-diff-xs-perl (0.04-5) ...\r\nSetting up libldap-2.4-2:amd64 (2.4.45+dfsg-1ubuntu1.11) ...\r\nSetting up g++ (4:7.4.0-1ubuntu2.3) ...\r\nupdate-alternatives: using /usr/bin/g++ to provide /usr/bin/c++ (c++) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/c++.1.gz because associated file /usr/share/man/man1/g++.1.gz (of link group c++) doesn't exist\r\nSetting up dirmngr (2.2.4-1ubuntu1.6) ...\r\nSetting up build-essential (12.4ubuntu1) ...\r\nSetting up gpg-wks-client (2.2.4-1ubuntu1.6) ...\r\nSetting up gnupg (2.2.4-1ubuntu1.6) ...\r\nSetting up rake (12.3.1-1ubuntu0.1) ...\r\nSetting up ruby2.5 (2.5.1-1ubuntu1.12) ...\r\nSetting up ruby (1:2.5.1) ...\r\nSetting up ruby-test-unit (3.2.5-1) ...\r\nSetting up libruby2.5:amd64 (2.5.1-1ubuntu1.12) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ...\r\nProcessing triggers for ca-certificates (20211016ubuntu0.18.04.1) ...\r\nUpdating certificates in /etc/ssl/certs...\r\n0 added, 0 removed; done.\r\nRunning hooks in /etc/ca-certificates/update.d...\r\ndone.\r\nReading package lists...\nBuilding dependency tree...\nReading state information...\ng++ is already the newest version (4:7.4.0-1ubuntu2.3).\ng++ set to manually installed.\nlibc6-dev is already the newest version (2.27-3ubuntu1.6).\nlibc6-dev set to manually installed.\nThe following additional packages will be installed:\n  dbus git-man krb5-locales less libapparmor1 libarchive13 libasound2\n  libasound2-data libasyncns0 libbsd0 libcaca0 libcurl3-gnutls libdbus-1-3\n  libedit2 liberror-perl libflac8 libfontenc1 libfreetype6 libgpm2\n  libgssapi-krb5-2 libicu60 libk5crypto3 libkeyutils1 libkrb5-3\n  libkrb5support0 liblzo2-2 libnghttp2-14 libnspr4 libogg0 libpng16-16\n  libpulse0 librtmp1 libsdl1.2debian libslang2 libsndfile1 libssl1.0.0\n  libtinfo-dev libvorbis0a libvorbisenc2 libwrap0 libx11-6 libx11-data libxau6\n  libxcb1 libxdmcp6 libxext6 libxml2 libxmuu1 libxxf86vm1 multiarch-support\n  openssh-client x11-common xauth xfonts-encodings xfonts-utils\nSuggested packages:\n  default-dbus-session-bus | dbus-session-bus gettext-base git-daemon-run\n  | git-daemon-sysvinit git-doc git-el git-email git-gui gitk gitweb git-cvs\n  git-mediawiki git-svn lrzip libasound2-plugins alsa-utils gpm krb5-doc\n  krb5-user ncurses-doc pulseaudio keychain libpam-ssh monkeysphere\n  ssh-askpass\nThe following NEW packages will be installed:\n  dbus dosemu git git-man krb5-locales less libapparmor1 libarchive-dev\n  libarchive13 libasound2 libasound2-data libasyncns0 libbsd0 libcaca0\n  libcurl3-gnutls libdbus-1-3 libedit2 liberror-perl libflac8 libfontenc1\n  libfreetype6 libgpm2 libgssapi-krb5-2 libicu60 libk5crypto3 libkeyutils1\n  libkrb5-3 libkrb5support0 liblzo2-2 libncurses5-dev libncursesw5-dev\n  libnghttp2-14 libnspr4 libnspr4-dev libogg0 libpng16-16 libpulse0 librtmp1\n  libsdl1.2debian libslang2 libsndfile1 libssl1.0.0 libtinfo-dev libvorbis0a\n  libvorbisenc2 libwrap0 libx11-6 libx11-data libxau6 libxcb1 libxdmcp6\n  libxext6 libxml2 libxmuu1 libxxf86vm1 multiarch-support openssh-client\n  x11-common xauth xfonts-encodings xfonts-utils\n0 upgraded, 61 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 24.5 MB of archives.\nAfter this operation, 107 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 multiarch-support amd64 2.27-3ubuntu1.6 [6960 B]\nGet:2 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxau6 amd64 1:1.0.8-1ubuntu1 [7556 B]\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libbsd0 amd64 0.8.7-1ubuntu0.1 [41.6 kB]\nGet:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxdmcp6 amd64 1:1.1.2-3 [10.7 kB]\nGet:5 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb1 amd64 1.13-2~ubuntu18.04 [45.5 kB]\nGet:6 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libx11-data all 2:1.6.4-3ubuntu0.4 [114 kB]\nGet:7 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libx11-6 amd64 2:1.6.4-3ubuntu0.4 [572 kB]\nGet:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxext6 amd64 2:1.3.3-1 [29.4 kB]\nGet:9 http://archive.ubuntu.com/ubuntu bionic/main amd64 liblzo2-2 amd64 2.08-1.2 [48.7 kB]\nGet:10 http://archive.ubuntu.com/ubuntu bionic/main amd64 libogg0 amd64 1.3.2-1 [17.2 kB]\nGet:11 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxxf86vm1 amd64 1:1.1.4-1 [10.6 kB]\nGet:12 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libapparmor1 amd64 2.12-4ubuntu5.1 [31.3 kB]\nGet:13 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdbus-1-3 amd64 1.12.2-1ubuntu1.4 [175 kB]\nGet:14 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 dbus amd64 1.12.2-1ubuntu1.4 [150 kB]\nGet:15 http://archive.ubuntu.com/ubuntu bionic/main amd64 less amd64 487-0.1 [112 kB]\nGet:16 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libicu60 amd64 60.2-3ubuntu3.2 [8050 kB]\nGet:17 http://archive.ubuntu.com/ubuntu bionic/main amd64 libslang2 amd64 2.3.1a-3ubuntu1 [424 kB]\nGet:18 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxml2 amd64 2.9.4+dfsg1-6.1ubuntu1.8 [664 kB]\nGet:19 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 krb5-locales all 1.16-2ubuntu0.2 [13.4 kB]\nGet:20 http://archive.ubuntu.com/ubuntu bionic/main amd64 libedit2 amd64 3.1-20170329-1 [76.9 kB]\nGet:21 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libkrb5support0 amd64 1.16-2ubuntu0.2 [30.8 kB]\nGet:22 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libk5crypto3 amd64 1.16-2ubuntu0.2 [85.5 kB]\nGet:23 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libkeyutils1 amd64 1.5.9-9.2ubuntu2.1 [8764 B]\nGet:24 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libkrb5-3 amd64 1.16-2ubuntu0.2 [279 kB]\nGet:25 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgssapi-krb5-2 amd64 1.16-2ubuntu0.2 [122 kB]\nGet:26 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpng16-16 amd64 1.6.34-1ubuntu0.18.04.2 [176 kB]\nGet:27 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libssl1.0.0 amd64 1.0.2n-1ubuntu5.10 [1089 kB]\nGet:28 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxmuu1 amd64 2:1.1.2-2 [9674 B]\nGet:29 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 openssh-client amd64 1:7.6p1-4ubuntu0.7 [610 kB]\nGet:30 http://archive.ubuntu.com/ubuntu bionic/main amd64 xauth amd64 1:1.0.10-1 [24.6 kB]\nGet:31 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libasound2-data all 1.1.3-5ubuntu0.6 [38.5 kB]\nGet:32 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libasound2 amd64 1.1.3-5ubuntu0.6 [360 kB]\nGet:33 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgpm2 amd64 1.20.7-5 [15.1 kB]\nGet:34 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libcaca0 amd64 0.99.beta19-2ubuntu0.18.04.3 [203 kB]\nGet:35 http://archive.ubuntu.com/ubuntu bionic/main amd64 libasyncns0 amd64 0.8-6 [12.1 kB]\nGet:36 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libflac8 amd64 1.3.2-1ubuntu0.1 [213 kB]\nGet:37 http://archive.ubuntu.com/ubuntu bionic/main amd64 libvorbis0a amd64 1.3.5-4.2 [86.4 kB]\nGet:38 http://archive.ubuntu.com/ubuntu bionic/main amd64 libvorbisenc2 amd64 1.3.5-4.2 [70.7 kB]\nGet:39 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libsndfile1 amd64 1.0.28-4ubuntu0.18.04.2 [170 kB]\nGet:40 http://archive.ubuntu.com/ubuntu bionic/main amd64 libwrap0 amd64 7.6.q-27 [46.3 kB]\nGet:41 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpulse0 amd64 1:11.1-1ubuntu7.11 [266 kB]\nGet:42 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libsdl1.2debian amd64 1.2.15+dfsg2-0.1ubuntu0.2 [175 kB]\nGet:43 http://archive.ubuntu.com/ubuntu bionic/main amd64 libfontenc1 amd64 1:1.1.3-1 [13.9 kB]\nGet:44 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libfreetype6 amd64 2.8.1-2ubuntu2.2 [335 kB]\nGet:45 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 x11-common all 1:7.7+19ubuntu7.1 [22.5 kB]\nGet:46 http://archive.ubuntu.com/ubuntu bionic/main amd64 xfonts-encodings all 1:1.0.4-2 [573 kB]\nGet:47 http://archive.ubuntu.com/ubuntu bionic/main amd64 xfonts-utils amd64 1:7.7+6 [91.5 kB]\nGet:48 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 dosemu amd64 1.4.0.7+20130105+b028d3f-2build1 [2128 kB]\nGet:49 http://archive.ubuntu.com/ubuntu bionic/main amd64 libnghttp2-14 amd64 1.30.0-1ubuntu1 [77.8 kB]\nGet:50 http://archive.ubuntu.com/ubuntu bionic/main amd64 librtmp1 amd64 2.4+20151223.gitfa8646d.1-1 [54.2 kB]\nGet:51 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libcurl3-gnutls amd64 7.58.0-2ubuntu3.22 [218 kB]\nGet:52 http://archive.ubuntu.com/ubuntu bionic/main amd64 liberror-perl all 0.17025-1 [22.8 kB]\nGet:53 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 git-man all 1:2.17.1-1ubuntu0.13 [805 kB]\nGet:54 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 git amd64 1:2.17.1-1ubuntu0.13 [3923 kB]\nGet:55 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libarchive13 amd64 3.2.2-3.1ubuntu0.7 [288 kB]\nGet:56 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libarchive-dev amd64 3.2.2-3.1ubuntu0.7 [470 kB]\nGet:57 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtinfo-dev amd64 6.1-1ubuntu1.18.04 [81.3 kB]\nGet:58 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libncurses5-dev amd64 6.1-1ubuntu1.18.04 [174 kB]\nGet:59 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libncursesw5-dev amd64 6.1-1ubuntu1.18.04 [199 kB]\nGet:60 http://archive.ubuntu.com/ubuntu bionic/main amd64 libnspr4 amd64 2:4.18-1ubuntu1 [112 kB]\nGet:61 http://archive.ubuntu.com/ubuntu bionic/main amd64 libnspr4-dev amd64 2:4.18-1ubuntu1 [211 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 24.5 MB in 1s (17.2 MB/s)\nSelecting previously unselected package multiarch-support.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 14645 files and directories currently installed.)\r\nPreparing to unpack .../0-multiarch-support_2.27-3ubuntu1.6_amd64.deb ...\r\nUnpacking multiarch-support (2.27-3ubuntu1.6) ...\r\nSelecting previously unselected package libxau6:amd64.\r\nPreparing to unpack .../1-libxau6_1%3a1.0.8-1ubuntu1_amd64.deb ...\r\nUnpacking libxau6:amd64 (1:1.0.8-1ubuntu1) ...\r\nSelecting previously unselected package libbsd0:amd64.\r\nPreparing to unpack .../2-libbsd0_0.8.7-1ubuntu0.1_amd64.deb ...\r\nUnpacking libbsd0:amd64 (0.8.7-1ubuntu0.1) ...\r\nSelecting previously unselected package libxdmcp6:amd64.\r\nPreparing to unpack .../3-libxdmcp6_1%3a1.1.2-3_amd64.deb ...\r\nUnpacking libxdmcp6:amd64 (1:1.1.2-3) ...\r\nSelecting previously unselected package libxcb1:amd64.\r\nPreparing to unpack .../4-libxcb1_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb1:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libx11-data.\r\nPreparing to unpack .../5-libx11-data_2%3a1.6.4-3ubuntu0.4_all.deb ...\r\nUnpacking libx11-data (2:1.6.4-3ubuntu0.4) ...\r\nSelecting previously unselected package libx11-6:amd64.\r\nPreparing to unpack .../6-libx11-6_2%3a1.6.4-3ubuntu0.4_amd64.deb ...\r\nUnpacking libx11-6:amd64 (2:1.6.4-3ubuntu0.4) ...\r\nSetting up multiarch-support (2.27-3ubuntu1.6) ...\r\nSelecting previously unselected package libxext6:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 14935 files and directories currently installed.)\r\nPreparing to unpack .../00-libxext6_2%3a1.3.3-1_amd64.deb ...\r\nUnpacking libxext6:amd64 (2:1.3.3-1) ...\r\nSelecting previously unselected package liblzo2-2:amd64.\r\nPreparing to unpack .../01-liblzo2-2_2.08-1.2_amd64.deb ...\r\nUnpacking liblzo2-2:amd64 (2.08-1.2) ...\r\nSelecting previously unselected package libogg0:amd64.\r\nPreparing to unpack .../02-libogg0_1.3.2-1_amd64.deb ...\r\nUnpacking libogg0:amd64 (1.3.2-1) ...\r\nSelecting previously unselected package libxxf86vm1:amd64.\r\nPreparing to unpack .../03-libxxf86vm1_1%3a1.1.4-1_amd64.deb ...\r\nUnpacking libxxf86vm1:amd64 (1:1.1.4-1) ...\r\nSelecting previously unselected package libapparmor1:amd64.\r\nPreparing to unpack .../04-libapparmor1_2.12-4ubuntu5.1_amd64.deb ...\r\nUnpacking libapparmor1:amd64 (2.12-4ubuntu5.1) ...\r\nSelecting previously unselected package libdbus-1-3:amd64.\r\nPreparing to unpack .../05-libdbus-1-3_1.12.2-1ubuntu1.4_amd64.deb ...\r\nUnpacking libdbus-1-3:amd64 (1.12.2-1ubuntu1.4) ...\r\nSelecting previously unselected package dbus.\r\nPreparing to unpack .../06-dbus_1.12.2-1ubuntu1.4_amd64.deb ...\r\nUnpacking dbus (1.12.2-1ubuntu1.4) ...\r\nSelecting previously unselected package less.\r\nPreparing to unpack .../07-less_487-0.1_amd64.deb ...\r\nUnpacking less (487-0.1) ...\r\nSelecting previously unselected package libicu60:amd64.\r\nPreparing to unpack .../08-libicu60_60.2-3ubuntu3.2_amd64.deb ...\r\nUnpacking libicu60:amd64 (60.2-3ubuntu3.2) ...\r\nSelecting previously unselected package libslang2:amd64.\r\nPreparing to unpack .../09-libslang2_2.3.1a-3ubuntu1_amd64.deb ...\r\nUnpacking libslang2:amd64 (2.3.1a-3ubuntu1) ...\r\nSelecting previously unselected package libxml2:amd64.\r\nPreparing to unpack .../10-libxml2_2.9.4+dfsg1-6.1ubuntu1.8_amd64.deb ...\r\nUnpacking libxml2:amd64 (2.9.4+dfsg1-6.1ubuntu1.8) ...\r\nSelecting previously unselected package krb5-locales.\r\nPreparing to unpack .../11-krb5-locales_1.16-2ubuntu0.2_all.deb ...\r\nUnpacking krb5-locales (1.16-2ubuntu0.2) ...\r\nSelecting previously unselected package libedit2:amd64.\r\nPreparing to unpack .../12-libedit2_3.1-20170329-1_amd64.deb ...\r\nUnpacking libedit2:amd64 (3.1-20170329-1) ...\r\nSelecting previously unselected package libkrb5support0:amd64.\r\nPreparing to unpack .../13-libkrb5support0_1.16-2ubuntu0.2_amd64.deb ...\r\nUnpacking libkrb5support0:amd64 (1.16-2ubuntu0.2) ...\r\nSelecting previously unselected package libk5crypto3:amd64.\r\nPreparing to unpack .../14-libk5crypto3_1.16-2ubuntu0.2_amd64.deb ...\r\nUnpacking libk5crypto3:amd64 (1.16-2ubuntu0.2) ...\r\nSelecting previously unselected package libkeyutils1:amd64.\r\nPreparing to unpack .../15-libkeyutils1_1.5.9-9.2ubuntu2.1_amd64.deb ...\r\nUnpacking libkeyutils1:amd64 (1.5.9-9.2ubuntu2.1) ...\r\nSelecting previously unselected package libkrb5-3:amd64.\r\nPreparing to unpack .../16-libkrb5-3_1.16-2ubuntu0.2_amd64.deb ...\r\nUnpacking libkrb5-3:amd64 (1.16-2ubuntu0.2) ...\r\nSelecting previously unselected package libgssapi-krb5-2:amd64.\r\nPreparing to unpack .../17-libgssapi-krb5-2_1.16-2ubuntu0.2_amd64.deb ...\r\nUnpacking libgssapi-krb5-2:amd64 (1.16-2ubuntu0.2) ...\r\nSelecting previously unselected package libpng16-16:amd64.\r\nPreparing to unpack .../18-libpng16-16_1.6.34-1ubuntu0.18.04.2_amd64.deb ...\r\nUnpacking libpng16-16:amd64 (1.6.34-1ubuntu0.18.04.2) ...\r\nSelecting previously unselected package libssl1.0.0:amd64.\r\nPreparing to unpack .../19-libssl1.0.0_1.0.2n-1ubuntu5.10_amd64.deb ...\r\nUnpacking libssl1.0.0:amd64 (1.0.2n-1ubuntu5.10) ...\r\nSelecting previously unselected package libxmuu1:amd64.\r\nPreparing to unpack .../20-libxmuu1_2%3a1.1.2-2_amd64.deb ...\r\nUnpacking libxmuu1:amd64 (2:1.1.2-2) ...\r\nSelecting previously unselected package openssh-client.\r\nPreparing to unpack .../21-openssh-client_1%3a7.6p1-4ubuntu0.7_amd64.deb ...\r\nUnpacking openssh-client (1:7.6p1-4ubuntu0.7) ...\r\nSelecting previously unselected package xauth.\r\nPreparing to unpack .../22-xauth_1%3a1.0.10-1_amd64.deb ...\r\nUnpacking xauth (1:1.0.10-1) ...\r\nSelecting previously unselected package libasound2-data.\r\nPreparing to unpack .../23-libasound2-data_1.1.3-5ubuntu0.6_all.deb ...\r\nUnpacking libasound2-data (1.1.3-5ubuntu0.6) ...\r\nSelecting previously unselected package libasound2:amd64.\r\nPreparing to unpack .../24-libasound2_1.1.3-5ubuntu0.6_amd64.deb ...\r\nUnpacking libasound2:amd64 (1.1.3-5ubuntu0.6) ...\r\nSelecting previously unselected package libgpm2:amd64.\r\nPreparing to unpack .../25-libgpm2_1.20.7-5_amd64.deb ...\r\nUnpacking libgpm2:amd64 (1.20.7-5) ...\r\nSelecting previously unselected package libcaca0:amd64.\r\nPreparing to unpack .../26-libcaca0_0.99.beta19-2ubuntu0.18.04.3_amd64.deb ...\r\nUnpacking libcaca0:amd64 (0.99.beta19-2ubuntu0.18.04.3) ...\r\nSelecting previously unselected package libasyncns0:amd64.\r\nPreparing to unpack .../27-libasyncns0_0.8-6_amd64.deb ...\r\nUnpacking libasyncns0:amd64 (0.8-6) ...\r\nSelecting previously unselected package libflac8:amd64.\r\nPreparing to unpack .../28-libflac8_1.3.2-1ubuntu0.1_amd64.deb ...\r\nUnpacking libflac8:amd64 (1.3.2-1ubuntu0.1) ...\r\nSelecting previously unselected package libvorbis0a:amd64.\r\nPreparing to unpack .../29-libvorbis0a_1.3.5-4.2_amd64.deb ...\r\nUnpacking libvorbis0a:amd64 (1.3.5-4.2) ...\r\nSelecting previously unselected package libvorbisenc2:amd64.\r\nPreparing to unpack .../30-libvorbisenc2_1.3.5-4.2_amd64.deb ...\r\nUnpacking libvorbisenc2:amd64 (1.3.5-4.2) ...\r\nSelecting previously unselected package libsndfile1:amd64.\r\nPreparing to unpack .../31-libsndfile1_1.0.28-4ubuntu0.18.04.2_amd64.deb ...\r\nUnpacking libsndfile1:amd64 (1.0.28-4ubuntu0.18.04.2) ...\r\nSelecting previously unselected package libwrap0:amd64.\r\nPreparing to unpack .../32-libwrap0_7.6.q-27_amd64.deb ...\r\nUnpacking libwrap0:amd64 (7.6.q-27) ...\r\nSelecting previously unselected package libpulse0:amd64.\r\nPreparing to unpack .../33-libpulse0_1%3a11.1-1ubuntu7.11_amd64.deb ...\r\nUnpacking libpulse0:amd64 (1:11.1-1ubuntu7.11) ...\r\nSelecting previously unselected package libsdl1.2debian:amd64.\r\nPreparing to unpack .../34-libsdl1.2debian_1.2.15+dfsg2-0.1ubuntu0.2_amd64.deb ...\r\nUnpacking libsdl1.2debian:amd64 (1.2.15+dfsg2-0.1ubuntu0.2) ...\r\nSelecting previously unselected package libfontenc1:amd64.\r\nPreparing to unpack .../35-libfontenc1_1%3a1.1.3-1_amd64.deb ...\r\nUnpacking libfontenc1:amd64 (1:1.1.3-1) ...\r\nSelecting previously unselected package libfreetype6:amd64.\r\nPreparing to unpack .../36-libfreetype6_2.8.1-2ubuntu2.2_amd64.deb ...\r\nUnpacking libfreetype6:amd64 (2.8.1-2ubuntu2.2) ...\r\nSelecting previously unselected package x11-common.\r\nPreparing to unpack .../37-x11-common_1%3a7.7+19ubuntu7.1_all.deb ...\r\ndpkg-query: no packages found matching nux-tools\r\nUnpacking x11-common (1:7.7+19ubuntu7.1) ...\r\nSelecting previously unselected package xfonts-encodings.\r\nPreparing to unpack .../38-xfonts-encodings_1%3a1.0.4-2_all.deb ...\r\nUnpacking xfonts-encodings (1:1.0.4-2) ...\r\nSelecting previously unselected package xfonts-utils.\r\nPreparing to unpack .../39-xfonts-utils_1%3a7.7+6_amd64.deb ...\r\nUnpacking xfonts-utils (1:7.7+6) ...\r\nSelecting previously unselected package dosemu.\r\nPreparing to unpack .../40-dosemu_1.4.0.7+20130105+b028d3f-2build1_amd64.deb ...\r\nUnpacking dosemu (1.4.0.7+20130105+b028d3f-2build1) ...\r\nSelecting previously unselected package libnghttp2-14:amd64.\r\nPreparing to unpack .../41-libnghttp2-14_1.30.0-1ubuntu1_amd64.deb ...\r\nUnpacking libnghttp2-14:amd64 (1.30.0-1ubuntu1) ...\r\nSelecting previously unselected package librtmp1:amd64.\r\nPreparing to unpack .../42-librtmp1_2.4+20151223.gitfa8646d.1-1_amd64.deb ...\r\nUnpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-1) ...\r\nSelecting previously unselected package libcurl3-gnutls:amd64.\r\nPreparing to unpack .../43-libcurl3-gnutls_7.58.0-2ubuntu3.22_amd64.deb ...\r\nUnpacking libcurl3-gnutls:amd64 (7.58.0-2ubuntu3.22) ...\r\nSelecting previously unselected package liberror-perl.\r\nPreparing to unpack .../44-liberror-perl_0.17025-1_all.deb ...\r\nUnpacking liberror-perl (0.17025-1) ...\r\nSelecting previously unselected package git-man.\r\nPreparing to unpack .../45-git-man_1%3a2.17.1-1ubuntu0.13_all.deb ...\r\nUnpacking git-man (1:2.17.1-1ubuntu0.13) ...\r\nSelecting previously unselected package git.\r\nPreparing to unpack .../46-git_1%3a2.17.1-1ubuntu0.13_amd64.deb ...\r\nUnpacking git (1:2.17.1-1ubuntu0.13) ...\r\nSelecting previously unselected package libarchive13:amd64.\r\nPreparing to unpack .../47-libarchive13_3.2.2-3.1ubuntu0.7_amd64.deb ...\r\nUnpacking libarchive13:amd64 (3.2.2-3.1ubuntu0.7) ...\r\nSelecting previously unselected package libarchive-dev:amd64.\r\nPreparing to unpack .../48-libarchive-dev_3.2.2-3.1ubuntu0.7_amd64.deb ...\r\nUnpacking libarchive-dev:amd64 (3.2.2-3.1ubuntu0.7) ...\r\nSelecting previously unselected package libtinfo-dev:amd64.\r\nPreparing to unpack .../49-libtinfo-dev_6.1-1ubuntu1.18.04_amd64.deb ...\r\nUnpacking libtinfo-dev:amd64 (6.1-1ubuntu1.18.04) ...\r\nSelecting previously unselected package libncurses5-dev:amd64.\r\nPreparing to unpack .../50-libncurses5-dev_6.1-1ubuntu1.18.04_amd64.deb ...\r\nUnpacking libncurses5-dev:amd64 (6.1-1ubuntu1.18.04) ...\r\nSelecting previously unselected package libncursesw5-dev:amd64.\r\nPreparing to unpack .../51-libncursesw5-dev_6.1-1ubuntu1.18.04_amd64.deb ...\r\nUnpacking libncursesw5-dev:amd64 (6.1-1ubuntu1.18.04) ...\r\nSelecting previously unselected package libnspr4:amd64.\r\nPreparing to unpack .../52-libnspr4_2%3a4.18-1ubuntu1_amd64.deb ...\r\nUnpacking libnspr4:amd64 (2:4.18-1ubuntu1) ...\r\nSelecting previously unselected package libnspr4-dev.\r\nPreparing to unpack .../53-libnspr4-dev_2%3a4.18-1ubuntu1_amd64.deb ...\r\nUnpacking libnspr4-dev (2:4.18-1ubuntu1) ...\r\nSetting up libedit2:amd64 (3.1-20170329-1) ...\r\nSetting up git-man (1:2.17.1-1ubuntu0.13) ...\r\nSetting up libicu60:amd64 (60.2-3ubuntu3.2) ...\r\nSetting up less (487-0.1) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up libasyncns0:amd64 (0.8-6) ...\r\nSetting up libssl1.0.0:amd64 (1.0.2n-1ubuntu5.10) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up libnghttp2-14:amd64 (1.30.0-1ubuntu1) ...\r\nSetting up libpng16-16:amd64 (1.6.34-1ubuntu0.18.04.2) ...\r\nSetting up liberror-perl (0.17025-1) ...\r\nSetting up libgpm2:amd64 (1.20.7-5) ...\r\nSetting up libasound2-data (1.1.3-5ubuntu0.6) ...\r\nSetting up libtinfo-dev:amd64 (6.1-1ubuntu1.18.04) ...\r\nSetting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-1) ...\r\nSetting up libbsd0:amd64 (0.8.7-1ubuntu0.1) ...\r\nSetting up libkrb5support0:amd64 (1.16-2ubuntu0.2) ...\r\nSetting up libnspr4:amd64 (2:4.18-1ubuntu1) ...\r\nSetting up libxml2:amd64 (2.9.4+dfsg1-6.1ubuntu1.8) ...\r\nSetting up libfreetype6:amd64 (2.8.1-2ubuntu2.2) ...\r\nSetting up libnspr4-dev (2:4.18-1ubuntu1) ...\r\nSetting up libasound2:amd64 (1.1.3-5ubuntu0.6) ...\r\nSetting up libogg0:amd64 (1.3.2-1) ...\r\nSetting up libncurses5-dev:amd64 (6.1-1ubuntu1.18.04) ...\r\nSetting up krb5-locales (1.16-2ubuntu0.2) ...\r\nSetting up libapparmor1:amd64 (2.12-4ubuntu5.1) ...\r\nSetting up libncursesw5-dev:amd64 (6.1-1ubuntu1.18.04) ...\r\nSetting up libfontenc1:amd64 (1:1.1.3-1) ...\r\nSetting up libxdmcp6:amd64 (1:1.1.2-3) ...\r\nSetting up libkeyutils1:amd64 (1.5.9-9.2ubuntu2.1) ...\r\nSetting up libvorbis0a:amd64 (1.3.5-4.2) ...\r\nSetting up x11-common (1:7.7+19ubuntu7.1) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nupdate-rc.d: warning: start and stop actions are no longer supported; falling back to defaults\r\ninvoke-rc.d: could not determine current runlevel\r\ninvoke-rc.d: policy-rc.d denied execution of start.\r\nSetting up libslang2:amd64 (2.3.1a-3ubuntu1) ...\r\nSetting up libx11-data (2:1.6.4-3ubuntu0.4) ...\r\nSetting up libxau6:amd64 (1:1.0.8-1ubuntu1) ...\r\nSetting up libdbus-1-3:amd64 (1.12.2-1ubuntu1.4) ...\r\nSetting up liblzo2-2:amd64 (2.08-1.2) ...\r\nSetting up libwrap0:amd64 (7.6.q-27) ...\r\nSetting up libk5crypto3:amd64 (1.16-2ubuntu0.2) ...\r\nSetting up libarchive13:amd64 (3.2.2-3.1ubuntu0.7) ...\r\nSetting up libflac8:amd64 (1.3.2-1ubuntu0.1) ...\r\nSetting up xfonts-encodings (1:1.0.4-2) ...\r\nSetting up libkrb5-3:amd64 (1.16-2ubuntu0.2) ...\r\nSetting up dbus (1.12.2-1ubuntu1.4) ...\r\nSetting up libvorbisenc2:amd64 (1.3.5-4.2) ...\r\nSetting up libcaca0:amd64 (0.99.beta19-2ubuntu0.18.04.3) ...\r\nSetting up libxcb1:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libarchive-dev:amd64 (3.2.2-3.1ubuntu0.7) ...\r\nSetting up libx11-6:amd64 (2:1.6.4-3ubuntu0.4) ...\r\nSetting up xfonts-utils (1:7.7+6) ...\r\nSetting up libxmuu1:amd64 (2:1.1.2-2) ...\r\nSetting up libgssapi-krb5-2:amd64 (1.16-2ubuntu0.2) ...\r\nSetting up libsndfile1:amd64 (1.0.28-4ubuntu0.18.04.2) ...\r\nSetting up openssh-client (1:7.6p1-4ubuntu0.7) ...\r\nSetting up libxext6:amd64 (2:1.3.3-1) ...\r\nSetting up libcurl3-gnutls:amd64 (7.58.0-2ubuntu3.22) ...\r\nSetting up libpulse0:amd64 (1:11.1-1ubuntu7.11) ...\r\nSetting up xauth (1:1.0.10-1) ...\r\nSetting up libxxf86vm1:amd64 (1:1.1.4-1) ...\r\nSetting up git (1:2.17.1-1ubuntu0.13) ...\r\nSetting up libsdl1.2debian:amd64 (1.2.15+dfsg2-0.1ubuntu0.2) ...\r\nSetting up dosemu (1.4.0.7+20130105+b028d3f-2build1) ...\r\nProcessing triggers for mime-support (3.60ubuntu1) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ...\r\nReading package lists...\nBuilding dependency tree...\nReading state information...\nzip is already the newest version (3.0-11build1).\nzip set to manually installed.\nunzip is already the newest version (6.0-21ubuntu1.2).\nunzip set to manually installed.\nThe following additional packages will be installed:\n  fontconfig fontconfig-config fonts-dejavu-core i965-va-driver libaacs0\n  libapt-inst2.0 libass9 libavcodec57 libavformat57 libavutil55 libbdplus0\n  libbluray2 libcairo2 libchromaprint1 libcroco3 libcrystalhd3 libdatrie1\n  libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2 libdrm-radeon1\n  libdrm2 libegl-mesa0 libegl1 libelf1 libfontconfig1 libfribidi0 libgbm1\n  libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-bin libgdk-pixbuf2.0-common\n  libglapi-mesa libglib2.0-0 libglib2.0-data libglvnd0 libgme0 libgraphite2-3\n  libgsm1 libharfbuzz0b libjbig0 libjpeg-turbo8 libjpeg8 libllvm10 libmp3lame0\n  libmpg123-0 libnuma1 libopenjp2-7 libopenmpt0 libopus0 libpango-1.0-0\n  libpangocairo-1.0-0 libpangoft2-1.0-0 libpciaccess0 libpixman-1-0 librsvg2-2\n  librsvg2-common libsdl-kitchensink0 libsdl2-2.0-0 libshine3 libsnappy1v5\n  libsndio6.1 libsoxr0 libspeex1 libssh-gcrypt-4 libswresample2 libswscale4\n  libthai-data libthai0 libtheora0 libtiff5 libtwolame0 libva-drm2 libva-x11-2\n  libva2 libvdpau1 libvorbisfile3 libvpx5 libwavpack1 libwayland-client0\n  libwayland-cursor0 libwayland-egl1 libwayland-egl1-mesa libwayland-server0\n  libwebp6 libwebpmux3 libx11-xcb1 libx264-152 libx265-146 libxcb-dri2-0\n  libxcb-dri3-0 libxcb-present0 libxcb-render0 libxcb-shm0 libxcb-sync1\n  libxcb-xfixes0 libxcursor1 libxfixes3 libxi6 libxinerama1 libxkbcommon0\n  libxrandr2 libxrender1 libxshmfence1 libxss1 libxvidcore4 libzip4\n  libzvbi-common libzvbi0 mesa-va-drivers mesa-vdpau-drivers shared-mime-info\n  ucf va-driver-all vdpau-driver-all xdg-user-dirs xkb-data zlib1g-dev\nSuggested packages:\n  i965-va-driver-shaders libbluray-bdj firmware-crystalhd opus-tools pciutils\n  librsvg2-bin sndiod speex libvdpau-va-gl1 nvidia-vdpau-driver\n  nvidia-legacy-340xx-vdpau-driver\nThe following NEW packages will be installed:\n  apt-utils fontconfig fontconfig-config fonts-dejavu-core i965-va-driver\n  libaacs0 libapt-inst2.0 libass9 libavcodec57 libavformat57 libavutil55\n  libbdplus0 libbluray2 libcairo2 libchromaprint1 libcroco3 libcrystalhd3\n  libdatrie1 libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2\n  libdrm-radeon1 libdrm2 libegl-mesa0 libegl1 libelf1 libfontconfig1\n  libfribidi0 libgbm1 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-bin\n  libgdk-pixbuf2.0-common libglapi-mesa libglib2.0-0 libglib2.0-data libglvnd0\n  libgme0 libgraphite2-3 libgsm1 libharfbuzz0b libjbig0 libjpeg-turbo8\n  libjpeg8 libllvm10 libmp3lame0 libmpg123-0 libnuma1 libopenjp2-7 libopenmpt0\n  libopus0 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpciaccess0\n  libpixman-1-0 librsvg2-2 librsvg2-common libsdl-kitchensink-dev\n  libsdl-kitchensink0 libsdl2-2.0-0 libshine3 libsnappy1v5 libsndio6.1\n  libsoxr0 libspeex1 libssh-gcrypt-4 libswresample2 libswscale4 libthai-data\n  libthai0 libtheora0 libtiff5 libtwolame0 libva-drm2 libva-x11-2 libva2\n  libvdpau1 libvorbisfile3 libvpx5 libwavpack1 libwayland-client0\n  libwayland-cursor0 libwayland-egl1 libwayland-egl1-mesa libwayland-server0\n  libwebp6 libwebpmux3 libx11-xcb1 libx264-152 libx265-146 libxcb-dri2-0\n  libxcb-dri3-0 libxcb-present0 libxcb-render0 libxcb-shm0 libxcb-sync1\n  libxcb-xfixes0 libxcursor1 libxfixes3 libxi6 libxinerama1 libxkbcommon0\n  libxrandr2 libxrender1 libxshmfence1 libxss1 libxvidcore4 libzip-dev libzip4\n  libzvbi-common libzvbi0 mesa-va-drivers mesa-vdpau-drivers pkg-config\n  shared-mime-info ucf va-driver-all vdpau-driver-all xdg-user-dirs xkb-data\n  zlib1g-dev\n0 upgraded, 122 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 40.1 MB of archives.\nAfter this operation, 219 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 ucf all 3.0038 [50.5 kB]\nGet:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 fonts-dejavu-core all 2.37-1 [1041 kB]\nGet:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 fontconfig-config all 2.12.6-0ubuntu2 [55.8 kB]\nGet:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 libfontconfig1 amd64 2.12.6-0ubuntu2 [137 kB]\nGet:5 http://archive.ubuntu.com/ubuntu bionic/main amd64 fontconfig amd64 2.12.6-0ubuntu2 [169 kB]\nGet:6 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libjpeg-turbo8 amd64 1.5.2-0ubuntu5.18.04.6 [111 kB]\nGet:7 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxinerama1 amd64 2:1.1.3-1 [7908 B]\nGet:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxss1 amd64 1:1.2.2-1 [8582 B]\nGet:9 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libapt-inst2.0 amd64 1.6.14 [57.3 kB]\nGet:10 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 apt-utils amd64 1.6.14 [209 kB]\nGet:11 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libelf1 amd64 0.170-0.4ubuntu0.1 [44.8 kB]\nGet:12 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libfribidi0 amd64 0.19.7-2ubuntu0.1 [25.2 kB]\nGet:13 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libglib2.0-0 amd64 2.56.4-0ubuntu0.18.04.9 [1169 kB]\nGet:14 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libglib2.0-data all 2.56.4-0ubuntu0.18.04.9 [4728 B]\nGet:15 http://archive.ubuntu.com/ubuntu bionic/main amd64 shared-mime-info amd64 1.9-2 [426 kB]\nGet:16 http://archive.ubuntu.com/ubuntu bionic/main amd64 xdg-user-dirs amd64 0.17-1ubuntu1 [48.0 kB]\nGet:17 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 xkb-data all 2.23.1-1ubuntu1.18.04.1 [325 kB]\nGet:18 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdrm-common all 2.4.101-2~18.04.1 [5560 B]\nGet:19 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdrm2 amd64 2.4.101-2~18.04.1 [32.3 kB]\nGet:20 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnuma1 amd64 2.0.11-2.1ubuntu0.1 [22.0 kB]\nGet:21 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libaacs0 amd64 0.9.0-1 [51.4 kB]\nGet:22 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgraphite2-3 amd64 1.3.11-2 [78.7 kB]\nGet:23 http://archive.ubuntu.com/ubuntu bionic/main amd64 libharfbuzz0b amd64 1.7.2-1ubuntu1 [232 kB]\nGet:24 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libass9 amd64 1:0.14.0-1 [88.2 kB]\nGet:25 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libva2 amd64 2.1.0-3 [47.6 kB]\nGet:26 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libva-drm2 amd64 2.1.0-3 [6880 B]\nGet:27 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxfixes3 amd64 1:5.0.3-1 [10.8 kB]\nGet:28 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libva-x11-2 amd64 2.1.0-3 [11.5 kB]\nGet:29 http://archive.ubuntu.com/ubuntu bionic/main amd64 libvdpau1 amd64 1.1.1-3ubuntu1 [25.5 kB]\nGet:30 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libavutil55 amd64 7:3.4.11-0ubuntu0.1 [191 kB]\nGet:31 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpixman-1-0 amd64 0.34.0-2ubuntu0.1 [229 kB]\nGet:32 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-render0 amd64 1.13-2~ubuntu18.04 [14.7 kB]\nGet:33 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-shm0 amd64 1.13-2~ubuntu18.04 [5600 B]\nGet:34 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxrender1 amd64 1:0.9.10-1 [18.7 kB]\nGet:35 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libcairo2 amd64 1.15.10-2ubuntu0.1 [580 kB]\nGet:36 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libcrystalhd3 amd64 1:0.0~git20110715.fdd2f19-12 [45.8 kB]\nGet:37 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libgsm1 amd64 1.0.13-4build1 [22.4 kB]\nGet:38 http://archive.ubuntu.com/ubuntu bionic/main amd64 libmp3lame0 amd64 3.100-2 [136 kB]\nGet:39 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libopenjp2-7 amd64 2.3.0-2build0.18.04.1 [145 kB]\nGet:40 http://archive.ubuntu.com/ubuntu bionic/main amd64 libopus0 amd64 1.1.2-1ubuntu1 [159 kB]\nGet:41 http://archive.ubuntu.com/ubuntu bionic/main amd64 libcroco3 amd64 0.6.12-2 [81.3 kB]\nGet:42 http://archive.ubuntu.com/ubuntu bionic/main amd64 libjpeg8 amd64 8c-2ubuntu8 [2194 B]\nGet:43 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libjbig0 amd64 2.1-3.1ubuntu0.18.04.1 [27.0 kB]\nGet:44 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtiff5 amd64 4.0.9-5ubuntu0.9 [154 kB]\nGet:45 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgdk-pixbuf2.0-common all 2.36.11-2 [4536 B]\nGet:46 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgdk-pixbuf2.0-0 amd64 2.36.11-2 [165 kB]\nGet:47 http://archive.ubuntu.com/ubuntu bionic/main amd64 libthai-data all 0.1.27-2 [133 kB]\nGet:48 http://archive.ubuntu.com/ubuntu bionic/main amd64 libdatrie1 amd64 0.2.10-7 [17.8 kB]\nGet:49 http://archive.ubuntu.com/ubuntu bionic/main amd64 libthai0 amd64 0.1.27-2 [18.0 kB]\nGet:50 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpango-1.0-0 amd64 1.40.14-1ubuntu0.1 [153 kB]\nGet:51 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpangoft2-1.0-0 amd64 1.40.14-1ubuntu0.1 [33.2 kB]\nGet:52 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpangocairo-1.0-0 amd64 1.40.14-1ubuntu0.1 [20.8 kB]\nGet:53 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 librsvg2-2 amd64 2.40.20-2ubuntu0.2 [98.6 kB]\nGet:54 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libshine3 amd64 3.1.1-1 [22.9 kB]\nGet:55 http://archive.ubuntu.com/ubuntu bionic/main amd64 libsnappy1v5 amd64 1.1.7-1 [16.0 kB]\nGet:56 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libspeex1 amd64 1.2~rc1.2-1ubuntu2.1 [52.1 kB]\nGet:57 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libsoxr0 amd64 0.1.2-3 [65.9 kB]\nGet:58 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libswresample2 amd64 7:3.4.11-0ubuntu0.1 [55.2 kB]\nGet:59 http://archive.ubuntu.com/ubuntu bionic/main amd64 libtheora0 amd64 1.1.1+dfsg.1-14 [170 kB]\nGet:60 http://archive.ubuntu.com/ubuntu bionic/main amd64 libtwolame0 amd64 0.3.13-3 [46.7 kB]\nGet:61 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libvpx5 amd64 1.7.0-3ubuntu0.18.04.1 [796 kB]\nGet:62 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwavpack1 amd64 5.1.0-2ubuntu1.5 [76.8 kB]\nGet:63 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwebp6 amd64 0.6.1-2ubuntu0.18.04.1 [186 kB]\nGet:64 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwebpmux3 amd64 0.6.1-2ubuntu0.18.04.1 [19.6 kB]\nGet:65 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libx264-152 amd64 2:0.152.2854+gite9a5903-2 [609 kB]\nGet:66 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libx265-146 amd64 2.6-3 [1026 kB]\nGet:67 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libxvidcore4 amd64 2:1.3.5-1 [200 kB]\nGet:68 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libzvbi-common all 0.2.35-13 [32.1 kB]\nGet:69 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libzvbi0 amd64 0.2.35-13 [235 kB]\nGet:70 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libavcodec57 amd64 7:3.4.11-0ubuntu0.1 [4600 kB]\nGet:71 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libbluray2 amd64 1:1.0.2-3 [141 kB]\nGet:72 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libchromaprint1 amd64 1.4.3-1 [36.8 kB]\nGet:73 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libgme0 amd64 0.6.2-1 [121 kB]\nGet:74 http://archive.ubuntu.com/ubuntu bionic/main amd64 libmpg123-0 amd64 1.25.10-1 [125 kB]\nGet:75 http://archive.ubuntu.com/ubuntu bionic/main amd64 libvorbisfile3 amd64 1.3.5-4.2 [16.0 kB]\nGet:76 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libopenmpt0 amd64 0.3.6-1 [561 kB]\nGet:77 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libssh-gcrypt-4 amd64 0.8.0~20170825.94fa1e38-1ubuntu0.7 [172 kB]\nGet:78 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libavformat57 amd64 7:3.4.11-0ubuntu0.1 [953 kB]\nGet:79 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libbdplus0 amd64 0.1.2-2 [46.6 kB]\nGet:80 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdrm-amdgpu1 amd64 2.4.101-2~18.04.1 [18.2 kB]\nGet:81 http://archive.ubuntu.com/ubuntu bionic/main amd64 libpciaccess0 amd64 0.14-1 [17.9 kB]\nGet:82 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdrm-intel1 amd64 2.4.101-2~18.04.1 [60.0 kB]\nGet:83 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdrm-nouveau2 amd64 2.4.101-2~18.04.1 [16.5 kB]\nGet:84 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libdrm-radeon1 amd64 2.4.101-2~18.04.1 [21.7 kB]\nGet:85 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwayland-server0 amd64 1.16.0-1ubuntu1.1~18.04.4 [29.6 kB]\nGet:86 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgbm1 amd64 20.0.8-0ubuntu1~18.04.1 [27.6 kB]\nGet:87 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libglapi-mesa amd64 20.0.8-0ubuntu1~18.04.1 [26.6 kB]\nGet:88 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwayland-client0 amd64 1.16.0-1ubuntu1.1~18.04.4 [23.6 kB]\nGet:89 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libx11-xcb1 amd64 2:1.6.4-3ubuntu0.4 [9720 B]\nGet:90 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-dri2-0 amd64 1.13-2~ubuntu18.04 [6920 B]\nGet:91 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-dri3-0 amd64 1.13-2~ubuntu18.04 [6568 B]\nGet:92 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-present0 amd64 1.13-2~ubuntu18.04 [5552 B]\nGet:93 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-sync1 amd64 1.13-2~ubuntu18.04 [8808 B]\nGet:94 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxcb-xfixes0 amd64 1.13-2~ubuntu18.04 [9352 B]\nGet:95 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxshmfence1 amd64 1.3-1 [5028 B]\nGet:96 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libegl-mesa0 amd64 20.0.8-0ubuntu1~18.04.1 [96.3 kB]\nGet:97 http://archive.ubuntu.com/ubuntu bionic/main amd64 libgdk-pixbuf2.0-bin amd64 2.36.11-2 [7864 B]\nGet:98 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libllvm10 amd64 1:10.0.0-4ubuntu1~18.04.2 [15.4 MB]\nGet:99 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 librsvg2-common amd64 2.40.20-2ubuntu0.2 [5064 B]\nGet:100 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libsndio6.1 amd64 1.1.0-3 [23.4 kB]\nGet:101 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwayland-cursor0 amd64 1.16.0-1ubuntu1.1~18.04.4 [10.2 kB]\nGet:102 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libglvnd0 amd64 1.0.0-2ubuntu2.3 [47.0 kB]\nGet:103 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libegl1 amd64 1.0.0-2ubuntu2.3 [32.0 kB]\nGet:104 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwayland-egl1 amd64 1.16.0-1ubuntu1.1~18.04.4 [5424 B]\nGet:105 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwayland-egl1-mesa amd64 20.0.8-0ubuntu1~18.04.1 [6444 B]\nGet:106 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxcursor1 amd64 1:1.1.15-1 [19.8 kB]\nGet:107 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxi6 amd64 2:1.7.9-1 [29.2 kB]\nGet:108 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxkbcommon0 amd64 0.8.2-1~ubuntu18.04.1 [97.8 kB]\nGet:109 http://archive.ubuntu.com/ubuntu bionic/main amd64 libxrandr2 amd64 2:1.5.1-1 [18.1 kB]\nGet:110 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libsdl2-2.0-0 amd64 2.0.8+dfsg1-1ubuntu1.18.04.4 [382 kB]\nGet:111 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 libswscale4 amd64 7:3.4.11-0ubuntu0.1 [150 kB]\nGet:112 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libsdl-kitchensink0 amd64 0.0.7-3 [16.3 kB]\nGet:113 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libsdl-kitchensink-dev amd64 0.0.7-3 [18.3 kB]\nGet:114 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libzip4 amd64 1.1.2-1.1 [37.8 kB]\nGet:115 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-0ubuntu2.2 [176 kB]\nGet:116 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libzip-dev amd64 1.1.2-1.1 [113 kB]\nGet:117 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 mesa-va-drivers amd64 20.0.8-0ubuntu1~18.04.1 [2376 kB]\nGet:118 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 mesa-vdpau-drivers amd64 20.0.8-0ubuntu1~18.04.1 [2496 kB]\nGet:119 http://archive.ubuntu.com/ubuntu bionic/main amd64 pkg-config amd64 0.29.1-0ubuntu2 [45.0 kB]\nGet:120 http://archive.ubuntu.com/ubuntu bionic/universe amd64 i965-va-driver amd64 2.1.0-0ubuntu1 [925 kB]\nGet:121 http://archive.ubuntu.com/ubuntu bionic/universe amd64 va-driver-all amd64 2.1.0-3 [4376 B]\nGet:122 http://archive.ubuntu.com/ubuntu bionic/main amd64 vdpau-driver-all amd64 1.1.1-3ubuntu1 [4674 B]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 40.1 MB in 5s (7940 kB/s)\nSelecting previously unselected package ucf.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 17361 files and directories currently installed.)\r\nPreparing to unpack .../000-ucf_3.0038_all.deb ...\r\nMoving old data out of the way\r\nUnpacking ucf (3.0038) ...\r\nSelecting previously unselected package fonts-dejavu-core.\r\nPreparing to unpack .../001-fonts-dejavu-core_2.37-1_all.deb ...\r\nUnpacking fonts-dejavu-core (2.37-1) ...\r\nSelecting previously unselected package fontconfig-config.\r\nPreparing to unpack .../002-fontconfig-config_2.12.6-0ubuntu2_all.deb ...\r\nUnpacking fontconfig-config (2.12.6-0ubuntu2) ...\r\nSelecting previously unselected package libfontconfig1:amd64.\r\nPreparing to unpack .../003-libfontconfig1_2.12.6-0ubuntu2_amd64.deb ...\r\nUnpacking libfontconfig1:amd64 (2.12.6-0ubuntu2) ...\r\nSelecting previously unselected package fontconfig.\r\nPreparing to unpack .../004-fontconfig_2.12.6-0ubuntu2_amd64.deb ...\r\nUnpacking fontconfig (2.12.6-0ubuntu2) ...\r\nSelecting previously unselected package libjpeg-turbo8:amd64.\r\nPreparing to unpack .../005-libjpeg-turbo8_1.5.2-0ubuntu5.18.04.6_amd64.deb ...\r\nUnpacking libjpeg-turbo8:amd64 (1.5.2-0ubuntu5.18.04.6) ...\r\nSelecting previously unselected package libxinerama1:amd64.\r\nPreparing to unpack .../006-libxinerama1_2%3a1.1.3-1_amd64.deb ...\r\nUnpacking libxinerama1:amd64 (2:1.1.3-1) ...\r\nSelecting previously unselected package libxss1:amd64.\r\nPreparing to unpack .../007-libxss1_1%3a1.2.2-1_amd64.deb ...\r\nUnpacking libxss1:amd64 (1:1.2.2-1) ...\r\nSelecting previously unselected package libapt-inst2.0:amd64.\r\nPreparing to unpack .../008-libapt-inst2.0_1.6.14_amd64.deb ...\r\nUnpacking libapt-inst2.0:amd64 (1.6.14) ...\r\nSelecting previously unselected package apt-utils.\r\nPreparing to unpack .../009-apt-utils_1.6.14_amd64.deb ...\r\nUnpacking apt-utils (1.6.14) ...\r\nSelecting previously unselected package libelf1:amd64.\r\nPreparing to unpack .../010-libelf1_0.170-0.4ubuntu0.1_amd64.deb ...\r\nUnpacking libelf1:amd64 (0.170-0.4ubuntu0.1) ...\r\nSelecting previously unselected package libfribidi0:amd64.\r\nPreparing to unpack .../011-libfribidi0_0.19.7-2ubuntu0.1_amd64.deb ...\r\nUnpacking libfribidi0:amd64 (0.19.7-2ubuntu0.1) ...\r\nSelecting previously unselected package libglib2.0-0:amd64.\r\nPreparing to unpack .../012-libglib2.0-0_2.56.4-0ubuntu0.18.04.9_amd64.deb ...\r\nUnpacking libglib2.0-0:amd64 (2.56.4-0ubuntu0.18.04.9) ...\r\nSelecting previously unselected package libglib2.0-data.\r\nPreparing to unpack .../013-libglib2.0-data_2.56.4-0ubuntu0.18.04.9_all.deb ...\r\nUnpacking libglib2.0-data (2.56.4-0ubuntu0.18.04.9) ...\r\nSelecting previously unselected package shared-mime-info.\r\nPreparing to unpack .../014-shared-mime-info_1.9-2_amd64.deb ...\r\nUnpacking shared-mime-info (1.9-2) ...\r\nSelecting previously unselected package xdg-user-dirs.\r\nPreparing to unpack .../015-xdg-user-dirs_0.17-1ubuntu1_amd64.deb ...\r\nUnpacking xdg-user-dirs (0.17-1ubuntu1) ...\r\nSelecting previously unselected package xkb-data.\r\nPreparing to unpack .../016-xkb-data_2.23.1-1ubuntu1.18.04.1_all.deb ...\r\nUnpacking xkb-data (2.23.1-1ubuntu1.18.04.1) ...\r\nSelecting previously unselected package libdrm-common.\r\nPreparing to unpack .../017-libdrm-common_2.4.101-2~18.04.1_all.deb ...\r\nUnpacking libdrm-common (2.4.101-2~18.04.1) ...\r\nSelecting previously unselected package libdrm2:amd64.\r\nPreparing to unpack .../018-libdrm2_2.4.101-2~18.04.1_amd64.deb ...\r\nUnpacking libdrm2:amd64 (2.4.101-2~18.04.1) ...\r\nSelecting previously unselected package libnuma1:amd64.\r\nPreparing to unpack .../019-libnuma1_2.0.11-2.1ubuntu0.1_amd64.deb ...\r\nUnpacking libnuma1:amd64 (2.0.11-2.1ubuntu0.1) ...\r\nSelecting previously unselected package libaacs0:amd64.\r\nPreparing to unpack .../020-libaacs0_0.9.0-1_amd64.deb ...\r\nUnpacking libaacs0:amd64 (0.9.0-1) ...\r\nSelecting previously unselected package libgraphite2-3:amd64.\r\nPreparing to unpack .../021-libgraphite2-3_1.3.11-2_amd64.deb ...\r\nUnpacking libgraphite2-3:amd64 (1.3.11-2) ...\r\nSelecting previously unselected package libharfbuzz0b:amd64.\r\nPreparing to unpack .../022-libharfbuzz0b_1.7.2-1ubuntu1_amd64.deb ...\r\nUnpacking libharfbuzz0b:amd64 (1.7.2-1ubuntu1) ...\r\nSelecting previously unselected package libass9:amd64.\r\nPreparing to unpack .../023-libass9_1%3a0.14.0-1_amd64.deb ...\r\nUnpacking libass9:amd64 (1:0.14.0-1) ...\r\nSelecting previously unselected package libva2:amd64.\r\nPreparing to unpack .../024-libva2_2.1.0-3_amd64.deb ...\r\nUnpacking libva2:amd64 (2.1.0-3) ...\r\nSelecting previously unselected package libva-drm2:amd64.\r\nPreparing to unpack .../025-libva-drm2_2.1.0-3_amd64.deb ...\r\nUnpacking libva-drm2:amd64 (2.1.0-3) ...\r\nSelecting previously unselected package libxfixes3:amd64.\r\nPreparing to unpack .../026-libxfixes3_1%3a5.0.3-1_amd64.deb ...\r\nUnpacking libxfixes3:amd64 (1:5.0.3-1) ...\r\nSelecting previously unselected package libva-x11-2:amd64.\r\nPreparing to unpack .../027-libva-x11-2_2.1.0-3_amd64.deb ...\r\nUnpacking libva-x11-2:amd64 (2.1.0-3) ...\r\nSelecting previously unselected package libvdpau1:amd64.\r\nPreparing to unpack .../028-libvdpau1_1.1.1-3ubuntu1_amd64.deb ...\r\nUnpacking libvdpau1:amd64 (1.1.1-3ubuntu1) ...\r\nSelecting previously unselected package libavutil55:amd64.\r\nPreparing to unpack .../029-libavutil55_7%3a3.4.11-0ubuntu0.1_amd64.deb ...\r\nUnpacking libavutil55:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSelecting previously unselected package libpixman-1-0:amd64.\r\nPreparing to unpack .../030-libpixman-1-0_0.34.0-2ubuntu0.1_amd64.deb ...\r\nUnpacking libpixman-1-0:amd64 (0.34.0-2ubuntu0.1) ...\r\nSelecting previously unselected package libxcb-render0:amd64.\r\nPreparing to unpack .../031-libxcb-render0_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-render0:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxcb-shm0:amd64.\r\nPreparing to unpack .../032-libxcb-shm0_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-shm0:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxrender1:amd64.\r\nPreparing to unpack .../033-libxrender1_1%3a0.9.10-1_amd64.deb ...\r\nUnpacking libxrender1:amd64 (1:0.9.10-1) ...\r\nSelecting previously unselected package libcairo2:amd64.\r\nPreparing to unpack .../034-libcairo2_1.15.10-2ubuntu0.1_amd64.deb ...\r\nUnpacking libcairo2:amd64 (1.15.10-2ubuntu0.1) ...\r\nSelecting previously unselected package libcrystalhd3:amd64.\r\nPreparing to unpack .../035-libcrystalhd3_1%3a0.0~git20110715.fdd2f19-12_amd64.deb ...\r\nUnpacking libcrystalhd3:amd64 (1:0.0~git20110715.fdd2f19-12) ...\r\nSelecting previously unselected package libgsm1:amd64.\r\nPreparing to unpack .../036-libgsm1_1.0.13-4build1_amd64.deb ...\r\nUnpacking libgsm1:amd64 (1.0.13-4build1) ...\r\nSelecting previously unselected package libmp3lame0:amd64.\r\nPreparing to unpack .../037-libmp3lame0_3.100-2_amd64.deb ...\r\nUnpacking libmp3lame0:amd64 (3.100-2) ...\r\nSelecting previously unselected package libopenjp2-7:amd64.\r\nPreparing to unpack .../038-libopenjp2-7_2.3.0-2build0.18.04.1_amd64.deb ...\r\nUnpacking libopenjp2-7:amd64 (2.3.0-2build0.18.04.1) ...\r\nSelecting previously unselected package libopus0:amd64.\r\nPreparing to unpack .../039-libopus0_1.1.2-1ubuntu1_amd64.deb ...\r\nUnpacking libopus0:amd64 (1.1.2-1ubuntu1) ...\r\nSelecting previously unselected package libcroco3:amd64.\r\nPreparing to unpack .../040-libcroco3_0.6.12-2_amd64.deb ...\r\nUnpacking libcroco3:amd64 (0.6.12-2) ...\r\nSelecting previously unselected package libjpeg8:amd64.\r\nPreparing to unpack .../041-libjpeg8_8c-2ubuntu8_amd64.deb ...\r\nUnpacking libjpeg8:amd64 (8c-2ubuntu8) ...\r\nSelecting previously unselected package libjbig0:amd64.\r\nPreparing to unpack .../042-libjbig0_2.1-3.1ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking libjbig0:amd64 (2.1-3.1ubuntu0.18.04.1) ...\r\nSelecting previously unselected package libtiff5:amd64.\r\nPreparing to unpack .../043-libtiff5_4.0.9-5ubuntu0.9_amd64.deb ...\r\nUnpacking libtiff5:amd64 (4.0.9-5ubuntu0.9) ...\r\nSelecting previously unselected package libgdk-pixbuf2.0-common.\r\nPreparing to unpack .../044-libgdk-pixbuf2.0-common_2.36.11-2_all.deb ...\r\nUnpacking libgdk-pixbuf2.0-common (2.36.11-2) ...\r\nSelecting previously unselected package libgdk-pixbuf2.0-0:amd64.\r\nPreparing to unpack .../045-libgdk-pixbuf2.0-0_2.36.11-2_amd64.deb ...\r\nUnpacking libgdk-pixbuf2.0-0:amd64 (2.36.11-2) ...\r\nSelecting previously unselected package libthai-data.\r\nPreparing to unpack .../046-libthai-data_0.1.27-2_all.deb ...\r\nUnpacking libthai-data (0.1.27-2) ...\r\nSelecting previously unselected package libdatrie1:amd64.\r\nPreparing to unpack .../047-libdatrie1_0.2.10-7_amd64.deb ...\r\nUnpacking libdatrie1:amd64 (0.2.10-7) ...\r\nSelecting previously unselected package libthai0:amd64.\r\nPreparing to unpack .../048-libthai0_0.1.27-2_amd64.deb ...\r\nUnpacking libthai0:amd64 (0.1.27-2) ...\r\nSelecting previously unselected package libpango-1.0-0:amd64.\r\nPreparing to unpack .../049-libpango-1.0-0_1.40.14-1ubuntu0.1_amd64.deb ...\r\nUnpacking libpango-1.0-0:amd64 (1.40.14-1ubuntu0.1) ...\r\nSelecting previously unselected package libpangoft2-1.0-0:amd64.\r\nPreparing to unpack .../050-libpangoft2-1.0-0_1.40.14-1ubuntu0.1_amd64.deb ...\r\nUnpacking libpangoft2-1.0-0:amd64 (1.40.14-1ubuntu0.1) ...\r\nSelecting previously unselected package libpangocairo-1.0-0:amd64.\r\nPreparing to unpack .../051-libpangocairo-1.0-0_1.40.14-1ubuntu0.1_amd64.deb ...\r\nUnpacking libpangocairo-1.0-0:amd64 (1.40.14-1ubuntu0.1) ...\r\nSelecting previously unselected package librsvg2-2:amd64.\r\nPreparing to unpack .../052-librsvg2-2_2.40.20-2ubuntu0.2_amd64.deb ...\r\nUnpacking librsvg2-2:amd64 (2.40.20-2ubuntu0.2) ...\r\nSelecting previously unselected package libshine3:amd64.\r\nPreparing to unpack .../053-libshine3_3.1.1-1_amd64.deb ...\r\nUnpacking libshine3:amd64 (3.1.1-1) ...\r\nSelecting previously unselected package libsnappy1v5:amd64.\r\nPreparing to unpack .../054-libsnappy1v5_1.1.7-1_amd64.deb ...\r\nUnpacking libsnappy1v5:amd64 (1.1.7-1) ...\r\nSelecting previously unselected package libspeex1:amd64.\r\nPreparing to unpack .../055-libspeex1_1.2~rc1.2-1ubuntu2.1_amd64.deb ...\r\nUnpacking libspeex1:amd64 (1.2~rc1.2-1ubuntu2.1) ...\r\nSelecting previously unselected package libsoxr0:amd64.\r\nPreparing to unpack .../056-libsoxr0_0.1.2-3_amd64.deb ...\r\nUnpacking libsoxr0:amd64 (0.1.2-3) ...\r\nSelecting previously unselected package libswresample2:amd64.\r\nPreparing to unpack .../057-libswresample2_7%3a3.4.11-0ubuntu0.1_amd64.deb ...\r\nUnpacking libswresample2:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSelecting previously unselected package libtheora0:amd64.\r\nPreparing to unpack .../058-libtheora0_1.1.1+dfsg.1-14_amd64.deb ...\r\nUnpacking libtheora0:amd64 (1.1.1+dfsg.1-14) ...\r\nSelecting previously unselected package libtwolame0:amd64.\r\nPreparing to unpack .../059-libtwolame0_0.3.13-3_amd64.deb ...\r\nUnpacking libtwolame0:amd64 (0.3.13-3) ...\r\nSelecting previously unselected package libvpx5:amd64.\r\nPreparing to unpack .../060-libvpx5_1.7.0-3ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking libvpx5:amd64 (1.7.0-3ubuntu0.18.04.1) ...\r\nSelecting previously unselected package libwavpack1:amd64.\r\nPreparing to unpack .../061-libwavpack1_5.1.0-2ubuntu1.5_amd64.deb ...\r\nUnpacking libwavpack1:amd64 (5.1.0-2ubuntu1.5) ...\r\nSelecting previously unselected package libwebp6:amd64.\r\nPreparing to unpack .../062-libwebp6_0.6.1-2ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking libwebp6:amd64 (0.6.1-2ubuntu0.18.04.1) ...\r\nSelecting previously unselected package libwebpmux3:amd64.\r\nPreparing to unpack .../063-libwebpmux3_0.6.1-2ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking libwebpmux3:amd64 (0.6.1-2ubuntu0.18.04.1) ...\r\nSelecting previously unselected package libx264-152:amd64.\r\nPreparing to unpack .../064-libx264-152_2%3a0.152.2854+gite9a5903-2_amd64.deb ...\r\nUnpacking libx264-152:amd64 (2:0.152.2854+gite9a5903-2) ...\r\nSelecting previously unselected package libx265-146:amd64.\r\nPreparing to unpack .../065-libx265-146_2.6-3_amd64.deb ...\r\nUnpacking libx265-146:amd64 (2.6-3) ...\r\nSelecting previously unselected package libxvidcore4:amd64.\r\nPreparing to unpack .../066-libxvidcore4_2%3a1.3.5-1_amd64.deb ...\r\nUnpacking libxvidcore4:amd64 (2:1.3.5-1) ...\r\nSelecting previously unselected package libzvbi-common.\r\nPreparing to unpack .../067-libzvbi-common_0.2.35-13_all.deb ...\r\nUnpacking libzvbi-common (0.2.35-13) ...\r\nSelecting previously unselected package libzvbi0:amd64.\r\nPreparing to unpack .../068-libzvbi0_0.2.35-13_amd64.deb ...\r\nUnpacking libzvbi0:amd64 (0.2.35-13) ...\r\nSelecting previously unselected package libavcodec57:amd64.\r\nPreparing to unpack .../069-libavcodec57_7%3a3.4.11-0ubuntu0.1_amd64.deb ...\r\nUnpacking libavcodec57:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSelecting previously unselected package libbluray2:amd64.\r\nPreparing to unpack .../070-libbluray2_1%3a1.0.2-3_amd64.deb ...\r\nUnpacking libbluray2:amd64 (1:1.0.2-3) ...\r\nSelecting previously unselected package libchromaprint1:amd64.\r\nPreparing to unpack .../071-libchromaprint1_1.4.3-1_amd64.deb ...\r\nUnpacking libchromaprint1:amd64 (1.4.3-1) ...\r\nSelecting previously unselected package libgme0:amd64.\r\nPreparing to unpack .../072-libgme0_0.6.2-1_amd64.deb ...\r\nUnpacking libgme0:amd64 (0.6.2-1) ...\r\nSelecting previously unselected package libmpg123-0:amd64.\r\nPreparing to unpack .../073-libmpg123-0_1.25.10-1_amd64.deb ...\r\nUnpacking libmpg123-0:amd64 (1.25.10-1) ...\r\nSelecting previously unselected package libvorbisfile3:amd64.\r\nPreparing to unpack .../074-libvorbisfile3_1.3.5-4.2_amd64.deb ...\r\nUnpacking libvorbisfile3:amd64 (1.3.5-4.2) ...\r\nSelecting previously unselected package libopenmpt0:amd64.\r\nPreparing to unpack .../075-libopenmpt0_0.3.6-1_amd64.deb ...\r\nUnpacking libopenmpt0:amd64 (0.3.6-1) ...\r\nSelecting previously unselected package libssh-gcrypt-4:amd64.\r\nPreparing to unpack .../076-libssh-gcrypt-4_0.8.0~20170825.94fa1e38-1ubuntu0.7_amd64.deb ...\r\nUnpacking libssh-gcrypt-4:amd64 (0.8.0~20170825.94fa1e38-1ubuntu0.7) ...\r\nSelecting previously unselected package libavformat57:amd64.\r\nPreparing to unpack .../077-libavformat57_7%3a3.4.11-0ubuntu0.1_amd64.deb ...\r\nUnpacking libavformat57:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSelecting previously unselected package libbdplus0:amd64.\r\nPreparing to unpack .../078-libbdplus0_0.1.2-2_amd64.deb ...\r\nUnpacking libbdplus0:amd64 (0.1.2-2) ...\r\nSelecting previously unselected package libdrm-amdgpu1:amd64.\r\nPreparing to unpack .../079-libdrm-amdgpu1_2.4.101-2~18.04.1_amd64.deb ...\r\nUnpacking libdrm-amdgpu1:amd64 (2.4.101-2~18.04.1) ...\r\nSelecting previously unselected package libpciaccess0:amd64.\r\nPreparing to unpack .../080-libpciaccess0_0.14-1_amd64.deb ...\r\nUnpacking libpciaccess0:amd64 (0.14-1) ...\r\nSelecting previously unselected package libdrm-intel1:amd64.\r\nPreparing to unpack .../081-libdrm-intel1_2.4.101-2~18.04.1_amd64.deb ...\r\nUnpacking libdrm-intel1:amd64 (2.4.101-2~18.04.1) ...\r\nSelecting previously unselected package libdrm-nouveau2:amd64.\r\nPreparing to unpack .../082-libdrm-nouveau2_2.4.101-2~18.04.1_amd64.deb ...\r\nUnpacking libdrm-nouveau2:amd64 (2.4.101-2~18.04.1) ...\r\nSelecting previously unselected package libdrm-radeon1:amd64.\r\nPreparing to unpack .../083-libdrm-radeon1_2.4.101-2~18.04.1_amd64.deb ...\r\nUnpacking libdrm-radeon1:amd64 (2.4.101-2~18.04.1) ...\r\nSelecting previously unselected package libwayland-server0:amd64.\r\nPreparing to unpack .../084-libwayland-server0_1.16.0-1ubuntu1.1~18.04.4_amd64.deb ...\r\nUnpacking libwayland-server0:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSelecting previously unselected package libgbm1:amd64.\r\nPreparing to unpack .../085-libgbm1_20.0.8-0ubuntu1~18.04.1_amd64.deb ...\r\nUnpacking libgbm1:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSelecting previously unselected package libglapi-mesa:amd64.\r\nPreparing to unpack .../086-libglapi-mesa_20.0.8-0ubuntu1~18.04.1_amd64.deb ...\r\nUnpacking libglapi-mesa:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSelecting previously unselected package libwayland-client0:amd64.\r\nPreparing to unpack .../087-libwayland-client0_1.16.0-1ubuntu1.1~18.04.4_amd64.deb ...\r\nUnpacking libwayland-client0:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSelecting previously unselected package libx11-xcb1:amd64.\r\nPreparing to unpack .../088-libx11-xcb1_2%3a1.6.4-3ubuntu0.4_amd64.deb ...\r\nUnpacking libx11-xcb1:amd64 (2:1.6.4-3ubuntu0.4) ...\r\nSelecting previously unselected package libxcb-dri2-0:amd64.\r\nPreparing to unpack .../089-libxcb-dri2-0_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-dri2-0:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxcb-dri3-0:amd64.\r\nPreparing to unpack .../090-libxcb-dri3-0_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-dri3-0:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxcb-present0:amd64.\r\nPreparing to unpack .../091-libxcb-present0_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-present0:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxcb-sync1:amd64.\r\nPreparing to unpack .../092-libxcb-sync1_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-sync1:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxcb-xfixes0:amd64.\r\nPreparing to unpack .../093-libxcb-xfixes0_1.13-2~ubuntu18.04_amd64.deb ...\r\nUnpacking libxcb-xfixes0:amd64 (1.13-2~ubuntu18.04) ...\r\nSelecting previously unselected package libxshmfence1:amd64.\r\nPreparing to unpack .../094-libxshmfence1_1.3-1_amd64.deb ...\r\nUnpacking libxshmfence1:amd64 (1.3-1) ...\r\nSelecting previously unselected package libegl-mesa0:amd64.\r\nPreparing to unpack .../095-libegl-mesa0_20.0.8-0ubuntu1~18.04.1_amd64.deb ...\r\nUnpacking libegl-mesa0:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSelecting previously unselected package libgdk-pixbuf2.0-bin.\r\nPreparing to unpack .../096-libgdk-pixbuf2.0-bin_2.36.11-2_amd64.deb ...\r\nUnpacking libgdk-pixbuf2.0-bin (2.36.11-2) ...\r\nSelecting previously unselected package libllvm10:amd64.\r\nPreparing to unpack .../097-libllvm10_1%3a10.0.0-4ubuntu1~18.04.2_amd64.deb ...\r\nUnpacking libllvm10:amd64 (1:10.0.0-4ubuntu1~18.04.2) ...\r\nSelecting previously unselected package librsvg2-common:amd64.\r\nPreparing to unpack .../098-librsvg2-common_2.40.20-2ubuntu0.2_amd64.deb ...\r\nUnpacking librsvg2-common:amd64 (2.40.20-2ubuntu0.2) ...\r\nSelecting previously unselected package libsndio6.1:amd64.\r\nPreparing to unpack .../099-libsndio6.1_1.1.0-3_amd64.deb ...\r\nUnpacking libsndio6.1:amd64 (1.1.0-3) ...\r\nSelecting previously unselected package libwayland-cursor0:amd64.\r\nPreparing to unpack .../100-libwayland-cursor0_1.16.0-1ubuntu1.1~18.04.4_amd64.deb ...\r\nUnpacking libwayland-cursor0:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSelecting previously unselected package libglvnd0:amd64.\r\nPreparing to unpack .../101-libglvnd0_1.0.0-2ubuntu2.3_amd64.deb ...\r\nUnpacking libglvnd0:amd64 (1.0.0-2ubuntu2.3) ...\r\nSelecting previously unselected package libegl1:amd64.\r\nPreparing to unpack .../102-libegl1_1.0.0-2ubuntu2.3_amd64.deb ...\r\nUnpacking libegl1:amd64 (1.0.0-2ubuntu2.3) ...\r\nSelecting previously unselected package libwayland-egl1:amd64.\r\nPreparing to unpack .../103-libwayland-egl1_1.16.0-1ubuntu1.1~18.04.4_amd64.deb ...\r\nUnpacking libwayland-egl1:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSelecting previously unselected package libwayland-egl1-mesa:amd64.\r\nPreparing to unpack .../104-libwayland-egl1-mesa_20.0.8-0ubuntu1~18.04.1_amd64.deb ...\r\nUnpacking libwayland-egl1-mesa:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSelecting previously unselected package libxcursor1:amd64.\r\nPreparing to unpack .../105-libxcursor1_1%3a1.1.15-1_amd64.deb ...\r\nUnpacking libxcursor1:amd64 (1:1.1.15-1) ...\r\nSelecting previously unselected package libxi6:amd64.\r\nPreparing to unpack .../106-libxi6_2%3a1.7.9-1_amd64.deb ...\r\nUnpacking libxi6:amd64 (2:1.7.9-1) ...\r\nSelecting previously unselected package libxkbcommon0:amd64.\r\nPreparing to unpack .../107-libxkbcommon0_0.8.2-1~ubuntu18.04.1_amd64.deb ...\r\nUnpacking libxkbcommon0:amd64 (0.8.2-1~ubuntu18.04.1) ...\r\nSelecting previously unselected package libxrandr2:amd64.\r\nPreparing to unpack .../108-libxrandr2_2%3a1.5.1-1_amd64.deb ...\r\nUnpacking libxrandr2:amd64 (2:1.5.1-1) ...\r\nSelecting previously unselected package libsdl2-2.0-0:amd64.\r\nPreparing to unpack .../109-libsdl2-2.0-0_2.0.8+dfsg1-1ubuntu1.18.04.4_amd64.deb ...\r\nUnpacking libsdl2-2.0-0:amd64 (2.0.8+dfsg1-1ubuntu1.18.04.4) ...\r\nSelecting previously unselected package libswscale4:amd64.\r\nPreparing to unpack .../110-libswscale4_7%3a3.4.11-0ubuntu0.1_amd64.deb ...\r\nUnpacking libswscale4:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSelecting previously unselected package libsdl-kitchensink0:amd64.\r\nPreparing to unpack .../111-libsdl-kitchensink0_0.0.7-3_amd64.deb ...\r\nUnpacking libsdl-kitchensink0:amd64 (0.0.7-3) ...\r\nSelecting previously unselected package libsdl-kitchensink-dev:amd64.\r\nPreparing to unpack .../112-libsdl-kitchensink-dev_0.0.7-3_amd64.deb ...\r\nUnpacking libsdl-kitchensink-dev:amd64 (0.0.7-3) ...\r\nSelecting previously unselected package libzip4:amd64.\r\nPreparing to unpack .../113-libzip4_1.1.2-1.1_amd64.deb ...\r\nUnpacking libzip4:amd64 (1.1.2-1.1) ...\r\nSelecting previously unselected package zlib1g-dev:amd64.\r\nPreparing to unpack .../114-zlib1g-dev_1%3a1.2.11.dfsg-0ubuntu2.2_amd64.deb ...\r\nUnpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-0ubuntu2.2) ...\r\nSelecting previously unselected package libzip-dev:amd64.\r\nPreparing to unpack .../115-libzip-dev_1.1.2-1.1_amd64.deb ...\r\nUnpacking libzip-dev:amd64 (1.1.2-1.1) ...\r\nSelecting previously unselected package mesa-va-drivers:amd64.\r\nPreparing to unpack .../116-mesa-va-drivers_20.0.8-0ubuntu1~18.04.1_amd64.deb ...\r\nUnpacking mesa-va-drivers:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSelecting previously unselected package mesa-vdpau-drivers:amd64.\r\nPreparing to unpack .../117-mesa-vdpau-drivers_20.0.8-0ubuntu1~18.04.1_amd64.deb ...\r\nUnpacking mesa-vdpau-drivers:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSelecting previously unselected package pkg-config.\r\nPreparing to unpack .../118-pkg-config_0.29.1-0ubuntu2_amd64.deb ...\r\nUnpacking pkg-config (0.29.1-0ubuntu2) ...\r\nSelecting previously unselected package i965-va-driver:amd64.\r\nPreparing to unpack .../119-i965-va-driver_2.1.0-0ubuntu1_amd64.deb ...\r\nUnpacking i965-va-driver:amd64 (2.1.0-0ubuntu1) ...\r\nSelecting previously unselected package va-driver-all:amd64.\r\nPreparing to unpack .../120-va-driver-all_2.1.0-3_amd64.deb ...\r\nUnpacking va-driver-all:amd64 (2.1.0-3) ...\r\nSelecting previously unselected package vdpau-driver-all:amd64.\r\nPreparing to unpack .../121-vdpau-driver-all_1.1.1-3ubuntu1_amd64.deb ...\r\nUnpacking vdpau-driver-all:amd64 (1.1.1-3ubuntu1) ...\r\nSetting up libvorbisfile3:amd64 (1.3.5-4.2) ...\r\nSetting up libxi6:amd64 (2:1.7.9-1) ...\r\nSetting up libxcb-present0:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libglvnd0:amd64 (1.0.0-2ubuntu2.3) ...\r\nSetting up libapt-inst2.0:amd64 (1.6.14) ...\r\nSetting up libxinerama1:amd64 (2:1.1.3-1) ...\r\nSetting up libxcb-dri2-0:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libxcb-dri3-0:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libtwolame0:amd64 (0.3.13-3) ...\r\nSetting up libx264-152:amd64 (2:0.152.2854+gite9a5903-2) ...\r\nSetting up libxcb-xfixes0:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libxcb-render0:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libopenjp2-7:amd64 (2.3.0-2build0.18.04.1) ...\r\nSetting up libllvm10:amd64 (1:10.0.0-4ubuntu1~18.04.2) ...\r\nSetting up libxfixes3:amd64 (1:5.0.3-1) ...\r\nSetting up libwavpack1:amd64 (5.1.0-2ubuntu1.5) ...\r\nSetting up libjbig0:amd64 (2.1-3.1ubuntu0.18.04.1) ...\r\nSetting up fonts-dejavu-core (2.37-1) ...\r\nSetting up apt-utils (1.6.14) ...\r\nSetting up libaacs0:amd64 (0.9.0-1) ...\r\nSetting up libnuma1:amd64 (2.0.11-2.1ubuntu0.1) ...\r\nSetting up libelf1:amd64 (0.170-0.4ubuntu0.1) ...\r\nSetting up libsoxr0:amd64 (0.1.2-3) ...\r\nSetting up libglib2.0-0:amd64 (2.56.4-0ubuntu0.18.04.9) ...\r\nNo schema files found: doing nothing.\r\nSetting up libssh-gcrypt-4:amd64 (0.8.0~20170825.94fa1e38-1ubuntu0.7) ...\r\nSetting up libxss1:amd64 (1:1.2.2-1) ...\r\nSetting up libxshmfence1:amd64 (1.3-1) ...\r\nSetting up libwayland-client0:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSetting up xkb-data (2.23.1-1ubuntu1.18.04.1) ...\r\nSetting up libvdpau1:amd64 (1.1.1-3ubuntu1) ...\r\nSetting up libgdk-pixbuf2.0-common (2.36.11-2) ...\r\nSetting up libdatrie1:amd64 (0.2.10-7) ...\r\nSetting up libshine3:amd64 (3.1.1-1) ...\r\nSetting up libva2:amd64 (2.1.0-3) ...\r\nSetting up libjpeg-turbo8:amd64 (1.5.2-0ubuntu5.18.04.6) ...\r\nSetting up libglapi-mesa:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSetting up libspeex1:amd64 (1.2~rc1.2-1ubuntu2.1) ...\r\nSetting up libxvidcore4:amd64 (2:1.3.5-1) ...\r\nSetting up ucf (3.0038) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up libopus0:amd64 (1.1.2-1ubuntu1) ...\r\nSetting up libx265-146:amd64 (2.6-3) ...\r\nSetting up libdrm-common (2.4.101-2~18.04.1) ...\r\nSetting up libgraphite2-3:amd64 (1.3.11-2) ...\r\nSetting up libcroco3:amd64 (0.6.12-2) ...\r\nSetting up libxcb-sync1:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libzip4:amd64 (1.1.2-1.1) ...\r\nSetting up pkg-config (0.29.1-0ubuntu2) ...\r\nSetting up libx11-xcb1:amd64 (2:1.6.4-3ubuntu0.4) ...\r\nSetting up libpixman-1-0:amd64 (0.34.0-2ubuntu0.1) ...\r\nSetting up libmp3lame0:amd64 (3.100-2) ...\r\nSetting up libglib2.0-data (2.56.4-0ubuntu0.18.04.9) ...\r\nSetting up libcrystalhd3:amd64 (1:0.0~git20110715.fdd2f19-12) ...\r\nSetting up libsnappy1v5:amd64 (1.1.7-1) ...\r\nSetting up libzvbi-common (0.2.35-13) ...\r\nSetting up libfribidi0:amd64 (0.19.7-2ubuntu0.1) ...\r\nSetting up libxcb-shm0:amd64 (1.13-2~ubuntu18.04) ...\r\nSetting up libpciaccess0:amd64 (0.14-1) ...\r\nSetting up libxrender1:amd64 (1:0.9.10-1) ...\r\nSetting up shared-mime-info (1.9-2) ...\r\nSetting up libxkbcommon0:amd64 (0.8.2-1~ubuntu18.04.1) ...\r\nSetting up libvpx5:amd64 (1.7.0-3ubuntu0.18.04.1) ...\r\nSetting up libgme0:amd64 (0.6.2-1) ...\r\nSetting up libthai-data (0.1.27-2) ...\r\nSetting up libbdplus0:amd64 (0.1.2-2) ...\r\nSetting up libzvbi0:amd64 (0.2.35-13) ...\r\nSetting up libsndio6.1:amd64 (1.1.0-3) ...\r\nSetting up libmpg123-0:amd64 (1.25.10-1) ...\r\nSetting up xdg-user-dirs (0.17-1ubuntu1) ...\r\nSetting up libwayland-cursor0:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSetting up libgsm1:amd64 (1.0.13-4build1) ...\r\nSetting up libwayland-egl1:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSetting up libxrandr2:amd64 (2:1.5.1-1) ...\r\nSetting up libwayland-server0:amd64 (1.16.0-1ubuntu1.1~18.04.4) ...\r\nSetting up libwebp6:amd64 (0.6.1-2ubuntu0.18.04.1) ...\r\nSetting up zlib1g-dev:amd64 (1:1.2.11.dfsg-0ubuntu2.2) ...\r\nSetting up libjpeg8:amd64 (8c-2ubuntu8) ...\r\nSetting up fontconfig-config (2.12.6-0ubuntu2) ...\r\nSetting up libopenmpt0:amd64 (0.3.6-1) ...\r\nSetting up libharfbuzz0b:amd64 (1.7.2-1ubuntu1) ...\r\nSetting up libtiff5:amd64 (4.0.9-5ubuntu0.9) ...\r\nSetting up libthai0:amd64 (0.1.27-2) ...\r\nSetting up libdrm2:amd64 (2.4.101-2~18.04.1) ...\r\nSetting up libdrm-intel1:amd64 (2.4.101-2~18.04.1) ...\r\nSetting up libxcursor1:amd64 (1:1.1.15-1) ...\r\nSetting up libzip-dev:amd64 (1.1.2-1.1) ...\r\nSetting up libsdl2-2.0-0:amd64 (2.0.8+dfsg1-1ubuntu1.18.04.4) ...\r\nSetting up libwebpmux3:amd64 (0.6.1-2ubuntu0.18.04.1) ...\r\nSetting up libva-drm2:amd64 (2.1.0-3) ...\r\nSetting up libdrm-radeon1:amd64 (2.4.101-2~18.04.1) ...\r\nSetting up libva-x11-2:amd64 (2.1.0-3) ...\r\nSetting up libdrm-nouveau2:amd64 (2.4.101-2~18.04.1) ...\r\nSetting up libfontconfig1:amd64 (2.12.6-0ubuntu2) ...\r\nSetting up libavutil55:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSetting up libdrm-amdgpu1:amd64 (2.4.101-2~18.04.1) ...\r\nSetting up mesa-vdpau-drivers:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSetting up libgdk-pixbuf2.0-0:amd64 (2.36.11-2) ...\r\nSetting up libgbm1:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSetting up libass9:amd64 (1:0.14.0-1) ...\r\nSetting up libgdk-pixbuf2.0-bin (2.36.11-2) ...\r\nSetting up libbluray2:amd64 (1:1.0.2-3) ...\r\nSetting up libswresample2:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSetting up i965-va-driver:amd64 (2.1.0-0ubuntu1) ...\r\nSetting up libswscale4:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSetting up mesa-va-drivers:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSetting up libegl-mesa0:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSetting up fontconfig (2.12.6-0ubuntu2) ...\r\nRegenerating fonts cache... done.\r\nSetting up vdpau-driver-all:amd64 (1.1.1-3ubuntu1) ...\r\nSetting up libcairo2:amd64 (1.15.10-2ubuntu0.1) ...\r\nSetting up libegl1:amd64 (1.0.0-2ubuntu2.3) ...\r\nSetting up va-driver-all:amd64 (2.1.0-3) ...\r\nSetting up libpango-1.0-0:amd64 (1.40.14-1ubuntu0.1) ...\r\nSetting up libwayland-egl1-mesa:amd64 (20.0.8-0ubuntu1~18.04.1) ...\r\nSetting up libtheora0:amd64 (1.1.1+dfsg.1-14) ...\r\nSetting up libpangoft2-1.0-0:amd64 (1.40.14-1ubuntu0.1) ...\r\nSetting up libpangocairo-1.0-0:amd64 (1.40.14-1ubuntu0.1) ...\r\nSetting up librsvg2-2:amd64 (2.40.20-2ubuntu0.2) ...\r\nSetting up libavcodec57:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSetting up librsvg2-common:amd64 (2.40.20-2ubuntu0.2) ...\r\nSetting up libchromaprint1:amd64 (1.4.3-1) ...\r\nSetting up libavformat57:amd64 (7:3.4.11-0ubuntu0.1) ...\r\nSetting up libsdl-kitchensink0:amd64 (0.0.7-3) ...\r\nSetting up libsdl-kitchensink-dev:amd64 (0.0.7-3) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ...\r\nProcessing triggers for libgdk-pixbuf2.0-0:amd64 (2.36.11-2) ...\r\nReading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  libcap2 libmpdec2 libpam-cap libpython3.6 libpython3.6-minimal\n  libpython3.6-stdlib vim-common vim-runtime xxd\nSuggested packages:\n  minicom ctags vim-doc vim-scripts\nThe following NEW packages will be installed:\n  libcap-dev libcap2 libcap2-bin libmpdec2 libpam-cap libpython3.6\n  libpython3.6-minimal libpython3.6-stdlib lrzsz sudo vim vim-common\n  vim-runtime xxd\n0 upgraded, 14 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 11.0 MB of archives.\nAfter this operation, 52.0 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 libcap2 amd64 1:2.25-1.2 [13.0 kB]\nGet:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 libcap2-bin amd64 1:2.25-1.2 [20.6 kB]\nGet:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 libmpdec2 amd64 2.4.2-1ubuntu1 [84.1 kB]\nGet:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 libpam-cap amd64 1:2.25-1.2 [7268 B]\nGet:5 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpython3.6-minimal amd64 3.6.9-1~18.04ubuntu1.9 [533 kB]\nGet:6 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpython3.6-stdlib amd64 3.6.9-1~18.04ubuntu1.9 [1712 kB]\nGet:7 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 sudo amd64 1.8.21p2-3ubuntu1.4 [428 kB]\nGet:8 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 xxd amd64 2:8.0.1453-1ubuntu1.9 [50.2 kB]\nGet:9 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 vim-common all 2:8.0.1453-1ubuntu1.9 [71.3 kB]\nGet:10 http://archive.ubuntu.com/ubuntu bionic/main amd64 libcap-dev amd64 1:2.25-1.2 [23.2 kB]\nGet:11 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpython3.6 amd64 3.6.9-1~18.04ubuntu1.9 [1414 kB]\nGet:12 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 lrzsz amd64 0.12.21-10~build0.18.04.1 [74.8 kB]\nGet:13 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 vim-runtime all 2:8.0.1453-1ubuntu1.9 [5436 kB]\nGet:14 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 vim amd64 2:8.0.1453-1ubuntu1.9 [1154 kB]\n\u001b[91mdebconf: unable to initialize frontend: Dialog\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\ndebconf: falling back to frontend: Readline\n\u001b[0m\u001b[91mdebconf: unable to initialize frontend: Readline\ndebconf: (This frontend requires a controlling tty.)\ndebconf: falling back to frontend: Teletype\n\u001b[0m\u001b[91mdpkg-preconfigure: unable to re-open stdin: \n\u001b[0mFetched 11.0 MB in 0s (25.4 MB/s)\nSelecting previously unselected package libcap2:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 19107 files and directories currently installed.)\r\nPreparing to unpack .../00-libcap2_1%3a2.25-1.2_amd64.deb ...\r\nUnpacking libcap2:amd64 (1:2.25-1.2) ...\r\nSelecting previously unselected package libcap2-bin.\r\nPreparing to unpack .../01-libcap2-bin_1%3a2.25-1.2_amd64.deb ...\r\nUnpacking libcap2-bin (1:2.25-1.2) ...\r\nSelecting previously unselected package libmpdec2:amd64.\r\nPreparing to unpack .../02-libmpdec2_2.4.2-1ubuntu1_amd64.deb ...\r\nUnpacking libmpdec2:amd64 (2.4.2-1ubuntu1) ...\r\nSelecting previously unselected package libpam-cap:amd64.\r\nPreparing to unpack .../03-libpam-cap_1%3a2.25-1.2_amd64.deb ...\r\nUnpacking libpam-cap:amd64 (1:2.25-1.2) ...\r\nSelecting previously unselected package libpython3.6-minimal:amd64.\r\nPreparing to unpack .../04-libpython3.6-minimal_3.6.9-1~18.04ubuntu1.9_amd64.deb ...\r\nUnpacking libpython3.6-minimal:amd64 (3.6.9-1~18.04ubuntu1.9) ...\r\nSelecting previously unselected package libpython3.6-stdlib:amd64.\r\nPreparing to unpack .../05-libpython3.6-stdlib_3.6.9-1~18.04ubuntu1.9_amd64.deb ...\r\nUnpacking libpython3.6-stdlib:amd64 (3.6.9-1~18.04ubuntu1.9) ...\r\nSelecting previously unselected package sudo.\r\nPreparing to unpack .../06-sudo_1.8.21p2-3ubuntu1.4_amd64.deb ...\r\nUnpacking sudo (1.8.21p2-3ubuntu1.4) ...\r\nSelecting previously unselected package xxd.\r\nPreparing to unpack .../07-xxd_2%3a8.0.1453-1ubuntu1.9_amd64.deb ...\r\nUnpacking xxd (2:8.0.1453-1ubuntu1.9) ...\r\nSelecting previously unselected package vim-common.\r\nPreparing to unpack .../08-vim-common_2%3a8.0.1453-1ubuntu1.9_all.deb ...\r\nUnpacking vim-common (2:8.0.1453-1ubuntu1.9) ...\r\nSelecting previously unselected package libcap-dev:amd64.\r\nPreparing to unpack .../09-libcap-dev_1%3a2.25-1.2_amd64.deb ...\r\nUnpacking libcap-dev:amd64 (1:2.25-1.2) ...\r\nSelecting previously unselected package libpython3.6:amd64.\r\nPreparing to unpack .../10-libpython3.6_3.6.9-1~18.04ubuntu1.9_amd64.deb ...\r\nUnpacking libpython3.6:amd64 (3.6.9-1~18.04ubuntu1.9) ...\r\nSelecting previously unselected package lrzsz.\r\nPreparing to unpack .../11-lrzsz_0.12.21-10~build0.18.04.1_amd64.deb ...\r\nUnpacking lrzsz (0.12.21-10~build0.18.04.1) ...\r\nSelecting previously unselected package vim-runtime.\r\nPreparing to unpack .../12-vim-runtime_2%3a8.0.1453-1ubuntu1.9_all.deb ...\r\nAdding 'diversion of /usr/share/vim/vim80/doc/help.txt to /usr/share/vim/vim80/doc/help.txt.vim-tiny by vim-runtime'\r\nAdding 'diversion of /usr/share/vim/vim80/doc/tags to /usr/share/vim/vim80/doc/tags.vim-tiny by vim-runtime'\r\nUnpacking vim-runtime (2:8.0.1453-1ubuntu1.9) ...\r\nSelecting previously unselected package vim.\r\nPreparing to unpack .../13-vim_2%3a8.0.1453-1ubuntu1.9_amd64.deb ...\r\nUnpacking vim (2:8.0.1453-1ubuntu1.9) ...\r\nSetting up xxd (2:8.0.1453-1ubuntu1.9) ...\r\nSetting up sudo (1.8.21p2-3ubuntu1.4) ...\r\nSetting up libcap2:amd64 (1:2.25-1.2) ...\r\nSetting up libpython3.6-minimal:amd64 (3.6.9-1~18.04ubuntu1.9) ...\r\nSetting up vim-common (2:8.0.1453-1ubuntu1.9) ...\r\nSetting up libcap-dev:amd64 (1:2.25-1.2) ...\r\nSetting up lrzsz (0.12.21-10~build0.18.04.1) ...\r\nSetting up vim-runtime (2:8.0.1453-1ubuntu1.9) ...\r\nSetting up libmpdec2:amd64 (2.4.2-1ubuntu1) ...\r\nSetting up libpython3.6-stdlib:amd64 (3.6.9-1~18.04ubuntu1.9) ...\r\nSetting up libpam-cap:amd64 (1:2.25-1.2) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\nSetting up libcap2-bin (1:2.25-1.2) ...\r\nSetting up libpython3.6:amd64 (3.6.9-1~18.04ubuntu1.9) ...\r\nSetting up vim (2:8.0.1453-1ubuntu1.9) ...\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/vim (vim) in auto mode\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/vimdiff (vimdiff) in auto mode\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/rvim (rvim) in auto mode\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/rview (rview) in auto mode\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/vi (vi) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/vi.1.gz because associated file /usr/share/man/fr/man1/vim.1.gz (of link group vi) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/it/man1/vi.1.gz because associated file /usr/share/man/it/man1/vim.1.gz (of link group vi) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/pl/man1/vi.1.gz because associated file /usr/share/man/pl/man1/vim.1.gz (of link group vi) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ru/man1/vi.1.gz because associated file /usr/share/man/ru/man1/vim.1.gz (of link group vi) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ja/man1/vi.1.gz because associated file /usr/share/man/ja/man1/vim.1.gz (of link group vi) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/vi.1.gz because associated file /usr/share/man/man1/vim.1.gz (of link group vi) doesn't exist\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/view (view) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/view.1.gz because associated file /usr/share/man/fr/man1/vim.1.gz (of link group view) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/it/man1/view.1.gz because associated file /usr/share/man/it/man1/vim.1.gz (of link group view) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/pl/man1/view.1.gz because associated file /usr/share/man/pl/man1/vim.1.gz (of link group view) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ru/man1/view.1.gz because associated file /usr/share/man/ru/man1/vim.1.gz (of link group view) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ja/man1/view.1.gz because associated file /usr/share/man/ja/man1/vim.1.gz (of link group view) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/view.1.gz because associated file /usr/share/man/man1/vim.1.gz (of link group view) doesn't exist\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/ex (ex) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/ex.1.gz because associated file /usr/share/man/fr/man1/vim.1.gz (of link group ex) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/it/man1/ex.1.gz because associated file /usr/share/man/it/man1/vim.1.gz (of link group ex) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/pl/man1/ex.1.gz because associated file /usr/share/man/pl/man1/vim.1.gz (of link group ex) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ru/man1/ex.1.gz because associated file /usr/share/man/ru/man1/vim.1.gz (of link group ex) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ja/man1/ex.1.gz because associated file /usr/share/man/ja/man1/vim.1.gz (of link group ex) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/ex.1.gz because associated file /usr/share/man/man1/vim.1.gz (of link group ex) doesn't exist\r\nupdate-alternatives: using /usr/bin/vim.basic to provide /usr/bin/editor (editor) in auto mode\r\nupdate-alternatives: warning: skip creation of /usr/share/man/fr/man1/editor.1.gz because associated file /usr/share/man/fr/man1/vim.1.gz (of link group editor) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/it/man1/editor.1.gz because associated file /usr/share/man/it/man1/vim.1.gz (of link group editor) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/pl/man1/editor.1.gz because associated file /usr/share/man/pl/man1/vim.1.gz (of link group editor) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ru/man1/editor.1.gz because associated file /usr/share/man/ru/man1/vim.1.gz (of link group editor) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/ja/man1/editor.1.gz because associated file /usr/share/man/ja/man1/vim.1.gz (of link group editor) doesn't exist\r\nupdate-alternatives: warning: skip creation of /usr/share/man/man1/editor.1.gz because associated file /usr/share/man/man1/vim.1.gz (of link group editor) doesn't exist\r\nProcessing triggers for mime-support (3.60ubuntu1) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ...\r\n\u001b[91mCloning into 'sbbs'...\n\u001b[0mecho MAKEFLAGS= os=linux RELEASE=1 | tr ' ' '\\n' > /root/sbbs/src/build/localdefs.mk\nmake -C /root/sbbs/src/sbbs3 MAKEFLAGS= os=linux RELEASE=1 \nmake[1]: Entering directory '/root/sbbs/src/sbbs3'\n\u001b[91mdiff: git_hash.h: No such file or directory\n\u001b[0m\u001b[91mdiff: git_branch.h: No such file or directory\n\u001b[0mmake -C /root/sbbs/src/sbbs3/../../3rdp/build jslib\nmake[2]: Entering directory '/root/sbbs/3rdp/build'\nCreating ../build/../../src/../3rdp/gcc.linux.x64.release/mozjs/lib/libmozjs185-1.0.a ...\npatching file js/src/jsnativestack.cpp\npatching file js-1.8.5/js/src/configure\npatching file js-1.8.5/js/src/configure.in\npatching file js-1.8.5/js/src/imacro_asm.py\npatching file ./js-1.8.5/js/src/methodjit/MethodJIT.cpp\npatching file js-1.8.5/js/src/jsutil.h\npatching file js-1.8.5/js/src/configure.in\npatching file js-1.8.5/js/src/build/autoconf/config.guess\npatching file js-1.8.5/js/src/Makefile.in\n\u001b[91m/bin/sh: 1: autoconf-2.13: not found\n\u001b[0mGNUmakefile:63: recipe for target '../build/../../src/../3rdp/gcc.linux.x64.release/mozjs/lib/libmozjs185-1.0.a' failed\n\u001b[91mmake[2]: [../build/../../src/../3rdp/gcc.linux.x64.release/mozjs/lib/libmozjs185-1.0.a] Error 127 (ignored)\n\u001b[0mcreating cache ./config.cache\nchecking host system type... x86_64-pc-linux-gnu\nchecking target system type... x86_64-pc-linux-gnu\nchecking build system type... x86_64-pc-linux-gnu\nchecking for mawk... mawk\nchecking for perl5... no\nchecking for perl... /usr/bin/perl\nchecking for gcc... gcc\nchecking whether the C compiler (gcc  ) works... yes\nchecking whether the C compiler (gcc  ) is a cross-compiler... no\nchecking whether we are using GNU C... yes\nchecking whether gcc accepts -g... yes\nchecking for c++... c++\nchecking whether the C++ compiler (c++ -std=gnu++98 ) works... yes\nchecking whether the C++ compiler (c++ -std=gnu++98 ) is a cross-compiler... no\nchecking whether we are using GNU C++... yes\nchecking whether c++ accepts -g... yes\nchecking for ranlib... ranlib\nchecking for as... /usr/bin/as\nchecking for ar... ar\nchecking for ld... ld\nchecking for strip... strip\nchecking for windres... no\nchecking whether gcc and cc understand -c and -o together... yes\nchecking how to run the C preprocessor... gcc -E\nchecking how to run the C++ preprocessor... c++ -E\nchecking for sb-conf... no\nchecking for ve... no\nchecking for a BSD compatible install... /usr/bin/install -c\nchecking whether ln -s works... yes\nchecking for minimum required perl version >= 5.006... 5.026001\nchecking for full perl installation... yes\nchecking for python2.7... /usr/bin/python2.7\nchecking for doxygen... :\nchecking for autoconf... :\nchecking for unzip... /usr/bin/unzip\nchecking for zip... /usr/bin/zip\nchecking for makedepend... no\nchecking for xargs... /usr/bin/xargs\nchecking for gmake... no\nchecking for make... /usr/bin/make\nchecking for X... no\nchecking whether the compiler supports -Wno-invalid-offsetof... yes\nchecking whether the compiler supports -Wno-variadic-macros... yes\nchecking whether the compiler supports -Werror=return-type... yes\nchecking whether ld has archive extraction flags... yes\nchecking that static assertion macros used in autoconf tests work... yes\nchecking for 64-bit OS... yes\nchecking for Python version >= 2.5 but not 3.x... yes\nchecking for ANSI C header files... yes\nchecking for working const... yes\nchecking for mode_t... yes\nchecking for off_t... yes\nchecking for pid_t... yes\nchecking for size_t... yes\nchecking for __stdcall... no\nchecking for ssize_t... yes\nchecking for st_blksize in struct stat... yes\nchecking for siginfo_t... yes\nchecking for stdint.h... yes\nchecking for the size of void*... 8\nchecking for the alignment of void*... 8\nchecking for the size of double... 8\nchecking for int16_t... yes\nchecking for int32_t... yes\nchecking for int64_t... yes\nchecking for int64... no\nchecking for uint... yes\nchecking for uint_t... no\nchecking for uint16_t... no\nchecking for uname.domainname... yes\nchecking for uname.__domainname... no\nchecking for visibility(hidden) attribute... yes\nchecking for visibility(default) attribute... yes\nchecking for visibility pragma support... yes\nchecking For gcc visibility bug with class-level attributes (GCC bug 26905)... no\nchecking For x86_64 gcc visibility bug with builtins (GCC bug 20297)... no\nchecking for __force_align_arg_pointer__ attribute... yes\nchecking for dirent.h that defines DIR... yes\nchecking for opendir in -ldir... no\nchecking for sys/byteorder.h... no\nchecking for compat.h... no\nchecking for getopt.h... yes\nchecking for sys/bitypes.h... yes\nchecking for memory.h... yes\nchecking for unistd.h... yes\nchecking for gnu/libc-version.h... yes\nchecking for nl_types.h... yes\nchecking for malloc.h... yes\nchecking for X11/XKBlib.h... no\nchecking for io.h... no\nchecking for sys/statvfs.h... yes\nchecking for sys/statfs.h... yes\nchecking for sys/vfs.h... yes\nchecking for sys/mount.h... yes\nchecking for sys/quota.h... yes\nchecking for linux/quota.h... yes\nchecking for mmintrin.h... yes\nchecking for new... yes\nchecking for sys/cdefs.h... yes\nchecking for linux/perf_event.h... yes\nchecking for gethostbyname_r in -lc_r... no\nchecking for library containing dlopen... -ldl\nchecking for dlfcn.h... yes\nchecking for dladdr... yes\nchecking for socket in -lsocket... no\nchecking for ARM SIMD support in compiler... no\nchecking for ARM NEON support in compiler... no\nchecking for pthread_create in -lpthreads... no\nchecking for pthread_create in -lpthread... yes\nchecking whether gcc accepts -pthread... yes\nchecking whether mmap() sees write()s... yes\nchecking whether gcc needs -traditional... no\nchecking for 8-bit clean memcmp... yes\nchecking for fchmod... yes\nchecking for flockfile... yes\nchecking for getc_unlocked... yes\nchecking for _getc_nolock... no\nchecking for getpagesize... yes\nchecking for lchown... yes\nchecking for localtime_r... yes\nchecking for lstat64... yes\nchecking for memmove... yes\nchecking for random... yes\nchecking for rint... no\nchecking for sbrk... yes\nchecking for snprintf... yes\nchecking for stat64... yes\nchecking for statvfs... yes\nchecking for statvfs64... yes\nchecking for strerror... yes\nchecking for strtok_r... yes\nchecking for truncate64... yes\nchecking for clock_gettime(CLOCK_MONOTONIC) and -lrt... yes\nchecking for wcrtomb... yes\nchecking for mbrtowc... yes\nchecking for res_ninit()... yes\nchecking for gnu_get_libc_version()... yes\nchecking for iconv in -lc... yes\nchecking for iconv()... yes\nchecking for iconv() with const input... no\nchecking for an implementation of va_copy()... yes\nchecking for an implementation of __va_copy()... yes\nchecking whether va_lists can be copied by value... no\nchecking for gcc 3.0 ABI... yes\nchecking for C++ \"explicit\" keyword... yes\nchecking for C++ \"typename\" keyword... yes\nchecking for modern C++ template specialization syntax support... yes\nchecking whether partial template specialization works... yes\nchecking whether operators must be re-defined for templates derived from templates... no\nchecking whether we need to cast a derived template to pass as its base class... no\nchecking whether the compiler can resolve const ambiguities for templates... yes\nchecking whether the C++ \"using\" keyword can change access... yes\nchecking whether the C++ \"using\" keyword resolves ambiguity... yes\nchecking for \"std::\" namespace... yes\nchecking whether standard template operator!=() is ambiguous... unambiguous\nchecking for C++ reinterpret_cast... yes\nchecking for C++ dynamic_cast to void*... yes\nchecking whether C++ requires implementation of unused virtual methods... yes\nchecking for trouble comparing to zero near std::operator!=()... no\nchecking for __thread keyword for TLS variables... yes\nchecking for malloc.h... (cached) yes\nchecking for strndup... yes\nchecking for posix_memalign... yes\nchecking for memalign... yes\nchecking for valloc... yes\nchecking for __attribute__((always_inline))... yes\nchecking for __attribute__((malloc))... yes\nchecking for __attribute__((warn_unused_result))... yes\nchecking for __attribute__((noreturn))... yes\nchecking for LC_MESSAGES... yes\nchecking for localeconv... yes\nchecking for nspr-config... /usr/bin/nspr-config\nchecking for NSPR - version >= 4.7.0... yes\nchecking for valid optimization flags... yes\nchecking for __cxa_demangle... yes\nchecking for unwind.h... yes\nchecking for _Unwind_Backtrace... yes\nchecking for gcc -pipe support... yes\nchecking whether C compiler supports -fprofile-generate... yes\nchecking whether C++ compiler has -pedantic long long bug... no\nchecking for correct temporary object destruction order... yes\nchecking for correct overload resolution with const and templates... no\nchecking for tm_zone tm_gmtoff in struct tm... yes\nchecking for posix_fallocate... yes\nchecking for setlocale... yes\nchecking for localeconv... (cached) yes\ncreating js-confdefs.h\n==== js-confdefs.h =================================\n/* List of defines generated by configure. Included with preprocessor flag,\n * -include, to avoid long list of -D defines on the compile command-line.\n * Do not edit.\n */\n\n#ifndef _JS_CONFDEFS_H_\n#define _JS_CONFDEFS_H_\n\n#define AVMPLUS_64BIT 1\n#define AVMPLUS_AMD64 1\n#define AVMPLUS_LINUX 1\n#define AVMPLUS_UNIX 1\n#define CPP_THROW_NEW throw()\n#define D_INO d_ino\n#define EDITLINE 1\n#define FEATURE_NANOJIT 1\n#define HAVE_64BIT_OS 1\n#define HAVE_CLOCK_MONOTONIC 1\n#define HAVE_CPP_ACCESS_CHANGING_USING 1\n#define HAVE_CPP_AMBIGUITY_RESOLVING_USING 1\n#define HAVE_CPP_DYNAMIC_CAST_TO_VOID_PTR 1\n#define HAVE_CPP_EXPLICIT 1\n#define HAVE_CPP_MODERN_SPECIALIZE_TEMPLATE_SYNTAX 1\n#define HAVE_CPP_NAMESPACE_STD 1\n#define HAVE_CPP_NEW_CASTS 1\n#define HAVE_CPP_PARTIAL_SPECIALIZATION 1\n#define HAVE_CPP_TYPENAME 1\n#define HAVE_CPP_UNAMBIGUOUS_STD_NOTEQUAL 1\n#define HAVE_DIRENT_H 1\n#define HAVE_DLADDR 1\n#define HAVE_DLOPEN 1\n#define HAVE_FCHMOD 1\n#define HAVE_FLOCKFILE 1\n#define HAVE_GETC_UNLOCKED 1\n#define HAVE_GETOPT_H 1\n#define HAVE_GETPAGESIZE 1\n#define HAVE_GNU_GET_LIBC_VERSION 1\n#define HAVE_GNU_LIBC_VERSION_H 1\n#define HAVE_I18N_LC_MESSAGES 1\n#define HAVE_ICONV 1\n#define HAVE_INT16_T 1\n#define HAVE_INT32_T 1\n#define HAVE_INT64_T 1\n#define HAVE_LCHOWN 1\n#define HAVE_LINUX_QUOTA_H 1\n#define HAVE_LOCALECONV 1\n#define HAVE_LOCALECONV 1\n#define HAVE_LOCALTIME_R 1\n#define HAVE_LSTAT64 1\n#define HAVE_MALLOC_H 1\n#define HAVE_MBRTOWC 1\n#define HAVE_MEMALIGN 1\n#define HAVE_MEMMOVE 1\n#define HAVE_MEMORY_H 1\n#define HAVE_MMINTRIN_H 1\n#define HAVE_NL_TYPES_H 1\n#define HAVE_POSIX_FALLOCATE 1\n#define HAVE_POSIX_MEMALIGN 1\n#define HAVE_RANDOM 1\n#define HAVE_RES_NINIT 1\n#define HAVE_SBRK 1\n#define HAVE_SETLOCALE 1\n#define HAVE_SIGINFO_T 1\n#define HAVE_SNPRINTF 1\n#define HAVE_SSIZE_T 1\n#define HAVE_STAT64 1\n#define HAVE_STATVFS 1\n#define HAVE_STATVFS64 1\n#define HAVE_STRERROR 1\n#define HAVE_STRNDUP 1\n#define HAVE_STRTOK_R 1\n#define HAVE_ST_BLKSIZE 1\n#define HAVE_SYS_BITYPES_H 1\n#define HAVE_SYS_CDEFS_H 1\n#define HAVE_SYS_MOUNT_H 1\n#define HAVE_SYS_QUOTA_H 1\n#define HAVE_SYS_STATFS_H 1\n#define HAVE_SYS_STATVFS_H 1\n#define HAVE_SYS_VFS_H 1\n#define HAVE_THREAD_TLS_KEYWORD 1\n#define HAVE_TM_ZONE_TM_GMTOFF 1\n#define HAVE_TRUNCATE64 1\n#define HAVE_UINT 1\n#define HAVE_UNAME_DOMAINNAME_FIELD 1\n#define HAVE_UNISTD_H 1\n#define HAVE_VALLOC 1\n#define HAVE_VA_COPY 1\n#define HAVE_VA_LIST_AS_ARRAY 1\n#define HAVE_VISIBILITY_ATTRIBUTE 1\n#define HAVE_VISIBILITY_HIDDEN_ATTRIBUTE 1\n#define HAVE_WCRTOMB 1\n#define HAVE__UNWIND_BACKTRACE 1\n#define HAVE___CXA_DEMANGLE 1\n#define JS_ALIGN_OF_POINTER 8\n#define JS_BITS_PER_WORD_LOG2 6\n#define JS_BYTES_PER_DOUBLE 8\n#define JS_BYTES_PER_WORD 8\n#define JS_CPU_X64 1\n#define JS_HAS_CTYPES 1\n#define JS_HAVE_STDINT_H 1\n#define JS_METHODJIT 1\n#define JS_MONOIC 1\n#define JS_POLYIC 1\n#define JS_POLYIC_TYPED_ARRAY 1\n#define JS_PUNBOX64 1\n#define JS_THREADSAFE 1\n#define JS_TRACER 1\n#define MALLOC_H <malloc.h>\n#define MOZ_DLL_SUFFIX \".so\"\n#define NEED_CPP_UNUSED_IMPLEMENTATIONS 1\n#define NEW_H <new>\n#define NS_ALWAYS_INLINE __attribute__((always_inline))\n#define NS_ATTR_MALLOC __attribute__((malloc))\n#define NS_NORETURN __attribute__((noreturn))\n#define NS_WARN_UNUSED_RESULT __attribute__((warn_unused_result))\n#define STATIC_EXPORTABLE_JS_API 1\n#define STDC_HEADERS 1\n#define UNIX_ASYNC_DNS 1\n#define VA_COPY va_copy\n#define XP_UNIX 1\n#define X_DISPLAY_MISSING 1\n#define _REENTRANT 1\n\n#endif /* _JS_CONFDEFS_H_ */\n\n\u001b[91mcreating Makefile\n\u001b[0m\u001b[91mcreating shell/Makefile\n\u001b[0m\u001b[91mcreating lirasm/Makefile\n\u001b[0m\u001b[91mcreating jsapi-tests/Makefile\n\u001b[0m\u001b[91mcreating tests/Makefile\n\u001b[0m\u001b[91mcreating config/Makefile\n\u001b[0m\u001b[91mcreating config/mkdepend/Makefile\n\u001b[0m\u001b[91mcreating editline/Makefile\n\u001b[0mupdating cache ./config.cache\ncreating ./config.status\ncreating config/autoconf.mk\ncreating js-config.h\ninvoking make to create js-config script\nmake[3]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src'\nrm -f js-config.tmp\nsed < js-config.in > js-config.tmp \\\n-e 's|@prefix@|/root/sbbs/3rdp/build/../../src/../3rdp/gcc.linux.x64.release/mozjs|' \\\n-e 's|@exec_prefix@|/root/sbbs/3rdp/build/../../src/../3rdp/gcc.linux.x64.release/mozjs|' \\\n-e 's|@includedir@|/root/sbbs/3rdp/build/../../src/../3rdp/gcc.linux.x64.release/mozjs/include|' \\\n-e 's|@libdir@|/root/sbbs/3rdp/build/../../src/../3rdp/gcc.linux.x64.release/mozjs/lib|' \\\n-e 's|@MOZILLA_VERSION@||' \\\n-e 's|@LIBRARY_NAME@|mozjs185|' \\\n-e 's|@NSPR_CFLAGS@|-I/usr/include/nspr|' \\\n-e 's|@JS_CONFIG_LIBS@|-Wl,--whole-archive ctypes/libffi/.libs/libffi.a  -Wl,--no-whole-archive -L/usr/lib/x86_64-linux-gnu -lplds4 -lplc4 -lnspr4 -lpthread -ldl -ldl  -lm -ldl |' \\\n-e 's|@MOZ_JS_LIBS@|-L/root/sbbs/3rdp/build/../../src/../3rdp/gcc.linux.x64.release/mozjs/lib -lmozjs185|' \\\n&& mv js-config.tmp js-config && chmod +x js-config\nmake[3]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src'\nconfiguring in ctypes/libffi\nrunning /bin/sh ./configure  --disable-shared --enable-static --disable-raw-api --with-pic --cache-file=/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/config.cache --srcdir=.\nconfigure: creating cache /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/config.cache\nchecking build system type... x86_64-unknown-linux-gnu\nchecking host system type... x86_64-unknown-linux-gnu\nchecking target system type... x86_64-unknown-linux-gnu\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\nchecking for gawk... no\nchecking for mawk... mawk\nchecking whether make sets $(MAKE)... yes\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... none needed\nchecking for style of include used by make... GNU\nchecking dependency style of gcc... gcc3\nchecking dependency style of gcc... gcc3\nchecking whether gcc and cc understand -c and -o together... yes\nchecking for a sed that does not truncate output... /bin/sed\nchecking for grep that handles long lines and -e... /bin/grep\nchecking for egrep... /bin/grep -E\nchecking for fgrep... /bin/grep -F\nchecking for ld used by gcc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 1572864\nchecking whether the shell understands some XSI constructs... yes\nchecking whether the shell understands \"+=\"... yes\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... pass_all\nchecking for ar... ar\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\nchecking how to run the C preprocessor... gcc -E\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if gcc supports -fno-rtti -fno-exceptions... no\nchecking for gcc option to produce PIC... -fPIC -DPIC\nchecking if gcc PIC flag -fPIC -DPIC works... yes\nchecking if gcc static flag -static works... yes\nchecking if gcc supports -c -o file.o... yes\nchecking if gcc supports -c -o file.o... (cached) yes\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... no\nchecking whether to build static libraries... yes\nchecking whether to enable maintainer-specific portions of Makefiles... no\nchecking sys/mman.h usability... yes\nchecking sys/mman.h presence... yes\nchecking for sys/mman.h... yes\nchecking for mmap... yes\nchecking for sys/mman.h... (cached) yes\nchecking for mmap... (cached) yes\nchecking whether read-only mmap of a plain file works... yes\nchecking whether mmap from /dev/zero works... yes\nchecking for MAP_ANON(YMOUS)... yes\nchecking whether mmap with MAP_ANON(YMOUS) works... yes\nchecking for ANSI C header files... (cached) yes\nchecking for memcpy... yes\nchecking for working alloca.h... yes\nchecking for alloca... yes\nchecking size of double... 8\nchecking size of long double... 16\nchecking whether byte ordering is bigendian... no\nchecking assembler .cfi pseudo-op support... yes\nchecking assembler supports pc related relocs... yes\nchecking assembler .ascii pseudo-op support... yes\nchecking assembler .string pseudo-op support... yes\nchecking assembler supports unwind section type... yes\nchecking whether .eh_frame section should be read-only... no\nchecking for __attribute__((visibility(\"hidden\")))... yes\nconfigure: updating cache /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/config.cache\nconfigure: creating ./config.status\nconfig.status: creating include/Makefile\nconfig.status: creating include/ffi.h\nconfig.status: creating Makefile\nconfig.status: creating testsuite/Makefile\nconfig.status: creating man/Makefile\nconfig.status: creating libffi.pc\nconfig.status: creating fficonfig.h\nconfig.status: linking src/x86/ffitarget.h to include/ffitarget.h\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\nconfig.status: executing include commands\nconfig.status: executing src commands\nmake[3]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src'\nmake export\nmake[4]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src'\nmake -C config/ nsinstall\nmake[5]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config'\nnsinstall.c\ngcc -o host_nsinstall.o -c  -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DXP_UNIX -O3  -DUNICODE -D_UNICODE  -I. -I. -I../dist/include -I../dist/include/nsprpub  -I/usr/include/nspr   -I/usr/include/nspr nsinstall.c\npathsub.c\ngcc -o host_pathsub.o -c  -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DXP_UNIX -O3  -DUNICODE -D_UNICODE  -I. -I. -I../dist/include -I../dist/include/nsprpub  -I/usr/include/nspr   -I/usr/include/nspr pathsub.c\ngcc -o nsinstall  -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DXP_UNIX -O3  -DUNICODE -D_UNICODE -lpthread   -Wl,-rpath-link,/bin -Wl,-rpath-link,/root/sbbs/3rdp/build/../../src/../3rdp/gcc.linux.x64.release/mozjs/lib  host_nsinstall.o host_pathsub.o  \nmake[5]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config'\nCreating /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/.deps\nmake[5]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config'\nrm -f nfspwd\ncp nfspwd.pl nfspwd\nchmod +x nfspwd\n/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config/nsinstall -R nsinstall ../dist/bin\nif test ! -d system_wrappers_js; then mkdir system_wrappers_js; fi\n/usr/bin/perl ./preprocessor.pl -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DSTATIC_EXPORTABLE_JS_API=1 -DX_DISPLAY_MISSING=1 -DHAVE_64BIT_OS=1 -DD_INO=d_ino -DJS_CPU_X64=1 -DJS_PUNBOX64=1 -DJS_METHODJIT=1 -DJS_MONOIC=1 -DJS_POLYIC=1 -DJS_POLYIC_TYPED_ARRAY=1 -DFEATURE_NANOJIT=1 -DJS_TRACER=1 -DAVMPLUS_AMD64=1 -DAVMPLUS_64BIT=1 -DAVMPLUS_UNIX=1 -DAVMPLUS_LINUX=1 -DSTDC_HEADERS=1 -DHAVE_SSIZE_T=1 -DHAVE_ST_BLKSIZE=1 -DHAVE_SIGINFO_T=1 -DJS_HAVE_STDINT_H=1 -DJS_BYTES_PER_WORD=8 -DJS_BITS_PER_WORD_LOG2=6 -DJS_ALIGN_OF_POINTER=8 -DJS_BYTES_PER_DOUBLE=8 -DHAVE_INT16_T=1 -DHAVE_INT32_T=1 -DHAVE_INT64_T=1 -DHAVE_UINT=1 -DHAVE_UNAME_DOMAINNAME_FIELD=1 -DHAVE_VISIBILITY_HIDDEN_ATTRIBUTE=1 -DHAVE_VISIBILITY_ATTRIBUTE=1 -DHAVE_DIRENT_H=1 -DHAVE_GETOPT_H=1 -DHAVE_SYS_BITYPES_H=1 -DHAVE_MEMORY_H=1 -DHAVE_UNISTD_H=1 -DHAVE_GNU_LIBC_VERSION_H=1 -DHAVE_NL_TYPES_H=1 -DHAVE_MALLOC_H=1 -DHAVE_SYS_STATVFS_H=1 -DHAVE_SYS_STATFS_H=1 -DHAVE_SYS_VFS_H=1 -DHAVE_SYS_MOUNT_H=1 -DHAVE_SYS_QUOTA_H=1 -DHAVE_LINUX_QUOTA_H=1 -DHAVE_MMINTRIN_H=1 -DNEW_H=\\<new\\> -DHAVE_SYS_CDEFS_H=1 -DHAVE_DLOPEN=1 -DHAVE_DLADDR=1 -D_REENTRANT=1 -DHAVE_FCHMOD=1 -DHAVE_FLOCKFILE=1 -DHAVE_GETC_UNLOCKED=1 -DHAVE_GETPAGESIZE=1 -DHAVE_LCHOWN=1 -DHAVE_LOCALTIME_R=1 -DHAVE_LSTAT64=1 -DHAVE_MEMMOVE=1 -DHAVE_RANDOM=1 -DHAVE_SBRK=1 -DHAVE_SNPRINTF=1 -DHAVE_STAT64=1 -DHAVE_STATVFS=1 -DHAVE_STATVFS64=1 -DHAVE_STRERROR=1 -DHAVE_STRTOK_R=1 -DHAVE_TRUNCATE64=1 -DHAVE_CLOCK_MONOTONIC=1 -DHAVE_WCRTOMB=1 -DHAVE_MBRTOWC=1 -DHAVE_RES_NINIT=1 -DHAVE_GNU_GET_LIBC_VERSION=1 -DHAVE_ICONV=1 -DVA_COPY=va_copy -DHAVE_VA_COPY=1 -DHAVE_VA_LIST_AS_ARRAY=1 -DHAVE_CPP_EXPLICIT=1 -DHAVE_CPP_TYPENAME=1 -DHAVE_CPP_MODERN_SPECIALIZE_TEMPLATE_SYNTAX=1 -DHAVE_CPP_PARTIAL_SPECIALIZATION=1 -DHAVE_CPP_ACCESS_CHANGING_USING=1 -DHAVE_CPP_AMBIGUITY_RESOLVING_USING=1 -DHAVE_CPP_NAMESPACE_STD=1 -DHAVE_CPP_UNAMBIGUOUS_STD_NOTEQUAL=1 -DHAVE_CPP_NEW_CASTS=1 -DHAVE_CPP_DYNAMIC_CAST_TO_VOID_PTR=1 -DNEED_CPP_UNUSED_IMPLEMENTATIONS=1 -DHAVE_THREAD_TLS_KEYWORD=1 -DMALLOC_H=\\<malloc.h\\> -DHAVE_STRNDUP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_MEMALIGN=1 -DHAVE_VALLOC=1 -DHAVE_I18N_LC_MESSAGES=1 -DHAVE_LOCALECONV=1 -DNS_ALWAYS_INLINE=__attribute__\\(\\(always_inline\\)\\) -DNS_ATTR_MALLOC=__attribute__\\(\\(malloc\\)\\) -DNS_WARN_UNUSED_RESULT=__attribute__\\(\\(warn_unused_result\\)\\) -DNS_NORETURN=__attribute__\\(\\(noreturn\\)\\) -DHAVE___CXA_DEMANGLE=1 -DHAVE__UNWIND_BACKTRACE=1 -DHAVE_TM_ZONE_TM_GMTOFF=1 -DCPP_THROW_NEW=throw\\(\\) -DEDITLINE=1 -DJS_HAS_CTYPES=1 -DMOZ_DLL_SUFFIX=\\\".so\\\" -DHAVE_POSIX_FALLOCATE=1 -DXP_UNIX=1 -DUNIX_ASYNC_DNS=1 -DJS_THREADSAFE=1 -DHAVE_SETLOCALE=1 -DHAVE_LOCALECONV=1  \\\n\t-DBUILD_STATIC_LIBS= \\\n\t./system-headers | /usr/bin/perl ./make-system-wrappers.pl system_wrappers_js\n/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config/nsinstall -R system_wrappers_js ../dist\nmake[5]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config'\nmake[5]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/editline'\nCreating /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/editline/.deps\nmake[5]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/editline'\nmake[5]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/shell'\nCreating /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/shell/.deps\nmake[5]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/shell'\nc++ -DMDCPUCFG=\\\"md/_linux.cfg\\\" -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -O3  -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -I/usr/include/nspr -o jscpucfg jscpucfg.cpp\n./jscpucfg > jsautocfg.tmp\nmv jsautocfg.tmp jsautocfg.h\njskwgen.cpp\nc++ -DMDCPUCFG=\\\"md/_linux.cfg\\\" -o host_jskwgen.o -c -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -O3 -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr -I/usr/include/nspr jskwgen.cpp\nc++ -DMDCPUCFG=\\\"md/_linux.cfg\\\" -o host_jskwgen -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -O3 -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr host_jskwgen.o  \n./host_jskwgen /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/jsautokw.h\n/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/config/nsinstall -R -m 644 js-config.h jsautocfg.h /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/jsautokw.h js.msg jsanalyze.h jsapi.h jsarray.h jsarena.h jsatom.h jsbit.h jsbool.h jsclist.h jsclone.h jscntxt.h jscompat.h jsdate.h jsdbgapi.h jsdhash.h jsdtoa.h jsemit.h jsfun.h jsfriendapi.h jsgc.h jscell.h jsgcchunk.h jsgcstats.h jscompartment.h jshash.h jsinterp.h jsinttypes.h jsiter.h jslock.h jslong.h jsmath.h jsobj.h jsobjinlines.h json.h jsopcode.tbl jsopcode.h jsopcodeinlines.h jsotypes.h jsparse.h jsproxy.h jsprf.h jsprobes.h jspropertycache.h jspropertycacheinlines.h jspropertytree.h jsproto.tbl jsprvtd.h jspubtd.h jsreflect.h jsregexp.h jsscan.h jsscope.h jsscript.h jsscriptinlines.h jsstaticcheck.h jsstdint.h jsstr.h jstracer.h jshotloop.h jstypedarray.h jstypes.h jsutil.h jsvector.h jstl.h jshashtable.h jsversion.h jswrapper.h jsxdrapi.h jsxml.h jsval.h jsvalue.h prmjtime.h jsbuiltins.h ./nanojit/Assembler.h ./nanojit/Allocator.h ./nanojit/CodeAlloc.h ./nanojit/Containers.h ./nanojit/LIR.h ./nanojit/LIRopcode.tbl ./nanojit/avmplus.h ./nanojit/Fragmento.h ./nanojit/Native.h ./nanojit/NativeCommon.h ./nanojit/NativeX64.h ./nanojit/njconfig.h ./nanojit/njcpudetect.h ./nanojit/RegAlloc.h ./nanojit/nanojit.h ./nanojit/VMPI.h ./tracejit/Writer.h ./perf/jsperf.h ./dist/include\nmake[5]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi'\nmake \"AR_FLAGS=\" \"CC_FOR_BUILD=\" \"CFLAGS=\" \"CXXFLAGS=\" \"CFLAGS_FOR_BUILD=\" \"CFLAGS_FOR_TARGET=\" \"INSTALL=/usr/bin/install -c\" \"INSTALL_DATA=/usr/bin/install -c -m 644\" \"INSTALL_PROGRAM=/usr/bin/install -c\" \"INSTALL_SCRIPT=/usr/bin/install -c\" \"JC1FLAGS=\" \"LDFLAGS=\" \"LIBCFLAGS=\" \"LIBCFLAGS_FOR_TARGET=\" \"MAKE=make\" \"MAKEINFO=/bin/bash /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/missing --run makeinfo \" \"PICFLAG=\" \"PICFLAG_FOR_TARGET=\" \"RUNTESTFLAGS=\" \"SHELL=/bin/bash\" \"exec_prefix=/usr/local\" \"infodir=/usr/local/share/info\" \"libdir=/usr/local/lib\" \"mandir=/usr/local/share/man\" \"prefix=/usr/local\" \"AR=ar\" \"AS=as\" \"CC=gcc\" \"CXX=g++\" \"LD=/usr/bin/ld -m elf_x86_64\" \"NM=/usr/bin/nm -B\" \"RANLIB=ranlib\" \"DESTDIR=\" all-recursive\nmake[6]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi'\nMaking all in include\nmake[7]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/include'\nmake[7]: Nothing to be done for 'all'.\nmake[7]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/include'\nMaking all in testsuite\nmake[7]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/testsuite'\nmake[7]: Nothing to be done for 'all'.\nmake[7]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/testsuite'\nMaking all in man\nmake[7]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/man'\nmake[7]: Nothing to be done for 'all'.\nmake[7]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi/man'\nmake[7]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi'\ndepbase=`echo src/debug.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/debug.lo -MD -MP -MF $depbase.Tpo -c -o src/debug.lo src/debug.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/debug.lo -MD -MP -MF src/.deps/debug.Tpo -c src/debug.c  -fPIC -DPIC -o src/debug.o\ndepbase=`echo src/prep_cif.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/prep_cif.lo -MD -MP -MF $depbase.Tpo -c -o src/prep_cif.lo src/prep_cif.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/prep_cif.lo -MD -MP -MF src/.deps/prep_cif.Tpo -c src/prep_cif.c  -fPIC -DPIC -o src/prep_cif.o\ndepbase=`echo src/types.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/types.lo -MD -MP -MF $depbase.Tpo -c -o src/types.lo src/types.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/types.lo -MD -MP -MF src/.deps/types.Tpo -c src/types.c  -fPIC -DPIC -o src/types.o\ndepbase=`echo src/raw_api.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/raw_api.lo -MD -MP -MF $depbase.Tpo -c -o src/raw_api.lo src/raw_api.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/raw_api.lo -MD -MP -MF src/.deps/raw_api.Tpo -c src/raw_api.c  -fPIC -DPIC -o src/raw_api.o\ndepbase=`echo src/java_raw_api.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/java_raw_api.lo -MD -MP -MF $depbase.Tpo -c -o src/java_raw_api.lo src/java_raw_api.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/java_raw_api.lo -MD -MP -MF src/.deps/java_raw_api.Tpo -c src/java_raw_api.c  -fPIC -DPIC -o src/java_raw_api.o\ndepbase=`echo src/closures.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/closures.lo -MD -MP -MF $depbase.Tpo -c -o src/closures.lo src/closures.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/closures.lo -MD -MP -MF src/.deps/closures.Tpo -c src/closures.c  -fPIC -DPIC -o src/closures.o\n\u001b[91msrc/closures.c: In function 'dlmmap_locked':\nsrc/closures.c:416:7: warning: ignoring return value of 'ftruncate', declared with attribute warn_unused_result [-Wunused-result]\n       ftruncate (execfd, offset);\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/closures.c:428:7: warning: ignoring return value of 'ftruncate', declared with attribute warn_unused_result [-Wunused-result]\n       ftruncate (execfd, offset);\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mdepbase=`echo src/x86/ffi64.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/x86/ffi64.lo -MD -MP -MF $depbase.Tpo -c -o src/x86/ffi64.lo src/x86/ffi64.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/x86/ffi64.lo -MD -MP -MF src/x86/.deps/ffi64.Tpo -c src/x86/ffi64.c  -fPIC -DPIC -o src/x86/ffi64.o\ndepbase=`echo src/x86/unix64.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -I. -I./include -Iinclude -I./src  -MT src/x86/unix64.lo -MD -MP -MF $depbase.Tpo -c -o src/x86/unix64.lo src/x86/unix64.S &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -I. -I./include -Iinclude -I./src -MT src/x86/unix64.lo -MD -MP -MF src/x86/.deps/unix64.Tpo -c src/x86/unix64.S  -fPIC -DPIC -o src/x86/unix64.o\ndepbase=`echo src/x86/ffi.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -Wall -g -fexceptions  -O2  -MT src/x86/ffi.lo -MD -MP -MF $depbase.Tpo -c -o src/x86/ffi.lo src/x86/ffi.c &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -Wall -g -fexceptions -O2 -MT src/x86/ffi.lo -MD -MP -MF src/x86/.deps/ffi.Tpo -c src/x86/ffi.c  -fPIC -DPIC -o src/x86/ffi.o\ndepbase=`echo src/x86/sysv.lo | sed 's|[^/]*$|.deps/&|;s|\\.lo$||'`;\\\n/bin/bash ./libtool   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I. -I./include -Iinclude -I./src  -I. -I./include -Iinclude -I./src  -MT src/x86/sysv.lo -MD -MP -MF $depbase.Tpo -c -o src/x86/sysv.lo src/x86/sysv.S &&\\\nmv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I. -I./include -Iinclude -I./src -I. -I./include -Iinclude -I./src -MT src/x86/sysv.lo -MD -MP -MF src/x86/.deps/sysv.Tpo -c src/x86/sysv.S  -fPIC -DPIC -o src/x86/sysv.o\n/bin/bash ./libtool --tag=CC   --mode=link gcc -Wall -g -fexceptions  -O2  -version-info `grep -v '^#' ./libtool-version`    -o libffi.la -rpath /usr/local/lib src/debug.lo src/prep_cif.lo src/types.lo src/raw_api.lo src/java_raw_api.lo src/closures.lo                      src/x86/ffi64.lo src/x86/unix64.lo src/x86/ffi.lo src/x86/sysv.lo      \nlibtool: link: ar cru .libs/libffi.a  src/debug.o src/prep_cif.o src/types.o src/raw_api.o src/java_raw_api.o src/closures.o src/x86/ffi64.o src/x86/unix64.o src/x86/ffi.o src/x86/sysv.o\n\u001b[91mar: `u' modifier ignored since `D' is the default (see `U')\n\u001b[0mlibtool: link: ranlib .libs/libffi.a\nlibtool: link: ( cd \".libs\" && rm -f \"libffi.la\" && ln -s \"../libffi.la\" \"libffi.la\" )\n/bin/bash ./libtool --tag=CC   --mode=link gcc -Wall -g -fexceptions  -O2    -o libffi_convenience.la  src/debug.lo src/prep_cif.lo src/types.lo src/raw_api.lo src/java_raw_api.lo src/closures.lo                      src/x86/ffi64.lo src/x86/unix64.lo src/x86/ffi.lo src/x86/sysv.lo      \nlibtool: link: ar cru .libs/libffi_convenience.a  src/debug.o src/prep_cif.o src/types.o src/raw_api.o src/java_raw_api.o src/closures.o src/x86/ffi64.o src/x86/unix64.o src/x86/ffi.o src/x86/sysv.o\n\u001b[91mar: `u' modifier ignored since `D' is the default (see `U')\n\u001b[0mlibtool: link: ranlib .libs/libffi_convenience.a\nlibtool: link: ( cd \".libs\" && rm -f \"libffi_convenience.la\" && ln -s \"../libffi_convenience.la\" \"libffi_convenience.la\" )\nmake[7]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi'\nmake[6]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi'\nmake[5]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/ctypes/libffi'\nmkdir -p nanojit\nmake[4]: Leaving directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src'\nmake libs\nmake[4]: Entering directory '/root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src'\njsoplengen.cpp\nc++ -DMDCPUCFG=\\\"md/_linux.cfg\\\" -o host_jsoplengen.o -c -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -O3 -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr -I/usr/include/nspr jsoplengen.cpp\nc++ -DMDCPUCFG=\\\"md/_linux.cfg\\\" -o host_jsoplengen -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -O3 -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr host_jsoplengen.o  \n./host_jsoplengen /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/jsautooplen.h\njsanalyze.cpp\nc++ -o jsanalyze.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsanalyze.pp jsanalyze.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jscntxt.h:59,\n                 from jsanalyze.h:45,\n                 from jsanalyze.cpp:40:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsprvtd.h:57,\n                 from jscntxt.h:55,\n                 from jsanalyze.h:45,\n                 from jsanalyze.cpp:40:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0mjsapi.cpp\nc++ -o jsapi.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsapi.pp jsapi.cpp\n\u001b[91mIn file included from jsapi.cpp:56:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsapi.cpp:52:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsapi.cpp:60:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsapi.cpp:52:0:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsclone.h: In member function 'void js::SCInput::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.h:100:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jschar) == 2);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.h:101:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(uint32_t) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.h:102:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsdouble) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsapi.cpp:94:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from yarr/yarr/RegexJIT.h:31,\n                 from jsregexpinlines.h:49,\n                 from jsapi.cpp:97:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mjsapi.cpp: In function 'JSIdArray* JS_Enumerate(JSContext*, JSObject*)':\njsapi.cpp:3988:16: warning: converting 'false' to pointer type 'JSIdArray*' [-Wconversion-null]\n         return false;\n                ^~~~~\n\u001b[0mjsarena.cpp\nc++ -o jsarena.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsarena.pp jsarena.cpp\njsarray.cpp\nc++ -o jsarray.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsarray.pp jsarray.cpp\n\u001b[91mIn file included from jsarray.cpp:85:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsarray.cpp:84:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsarray.cpp:90:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsarray.cpp:84:0:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsarray.cpp:110:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsarray.cpp:84:0:\njsarray.cpp: In function 'JSBool js_GetLengthProperty(JSContext*, JSObject*, jsuint*)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsarray.cpp:230:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(jsuint) == sizeof(uint32_t));\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsarray.cpp: In function 'JSBool BigIndexToId(JSContext*, JSObject*, jsuint, JSBool, jsid*)':\njsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsarray.cpp:256:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT((jsuint)-1 == 4294967295U);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstracer.h:48:0,\n                 from jsarray.cpp:90:\njsarray.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_EnsureDenseArrayCapacity' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsarray.cpp:497:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, BOOL, js_EnsureDenseArrayCapacity, CONTEXT, OBJECT, INT32,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_ArrayCompPush_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsarray.cpp:2110:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, BOOL_FAIL, js_ArrayCompPush_tn, CONTEXT, OBJECT,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::NewDenseEmptyArray' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsarray.cpp:3106:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n JS_DEFINE_CALLINFO_2(extern, OBJECT, NewDenseEmptyArray, CONTEXT, OBJECT, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::NewDenseAllocatedArray' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsarray.cpp:3108:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, OBJECT, NewDenseAllocatedArray, CONTEXT, UINT32, OBJECT, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::NewDenseUnallocatedArray' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsarray.cpp:3110:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, OBJECT, NewDenseUnallocatedArray, CONTEXT, UINT32, OBJECT, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0mjsatom.cpp\nc++ -o jsatom.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsatom.pp jsatom.cpp\n\u001b[91mIn file included from jsatom.cpp:50:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsatom.cpp:47:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsatom.cpp:65:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsatom.cpp:51:0:\njsatom.cpp: In member function 'JSAtomListElement* JSAtomList::add(js::Parser*, JSAtom*, JSAtomList::AddHow)':\njsatom.h:158:69: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n #define ALE_SET_INDEX(ale,index)((ale)->entry.value = (void *)(index))\n                                                                     ^\njsatom.cpp:862:9: note: in expansion of macro 'ALE_SET_INDEX'\n         ALE_SET_INDEX(ale, count++);\n         ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsatom.cpp: In function 'void js_InitAtomMap(JSContext*, JSAtomMap*, JSAtomList*)':\njsatom.cpp:954:12: warning: variable 'count' set but not used [-Wunused-but-set-variable]\n     uint32 count;\n            ^~~~~\n\u001b[0mjsbool.cpp\nc++ -o jsbool.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsbool.pp jsbool.cpp\n\u001b[91mIn file included from jsbool.cpp:46:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbool.cpp:45:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsbool.cpp:58:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsclone.cpp\nc++ -o jsclone.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsclone.pp jsclone.cpp\n\u001b[91mIn file included from jsclone.h:42:0,\n                 from jsclone.cpp:39:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsclone.h:42,\n                 from jsclone.cpp:39:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsclone.h: In member function 'void js::SCInput::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.h:100:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jschar) == 2);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.h:101:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(uint32_t) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.h:102:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsdouble) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsregexpinlines.h:45:0,\n                 from jsclone.cpp:44:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from yarr/yarr/RegexJIT.h:31,\n                 from jsregexpinlines.h:49,\n                 from jsclone.cpp:44:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsclone.h:42,\n                 from jsclone.cpp:39:\njsclone.cpp: In member function 'bool js::SCInput::readArray(T*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert73' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:203:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(uint64_t) % sizeof(T) == 0);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsclone.cpp: In function 'uint32_t ArrayTypeToTag(uint32_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert75' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:408:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_INT8 == 0);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert76' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:409:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_UINT8 == 1);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert77' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:410:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_INT16 == 2);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert78' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:411:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_UINT16 == 3);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert79' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:412:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_INT32 == 4);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert80' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:413:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_UINT32 == 5);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert81' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:414:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_FLOAT32 == 6);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert82' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:415:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_FLOAT64 == 7);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert83' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:416:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_UINT8_CLAMPED == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert84' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsclone.cpp:417:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(TypedArray::TYPE_MAX == TypedArray::TYPE_UINT8_CLAMPED + 1);\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjscntxt.cpp\nc++ -o jscntxt.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jscntxt.pp jscntxt.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jscntxt.cpp:61:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jscntxt.cpp:58:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jscntxt.cpp:81:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from assembler/assembler/MacroAssembler.h:54:0,\n                 from jscntxt.cpp:84:\nassembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\nassembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91massembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\nassembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91massembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\nassembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from jscntxt.cpp:90:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jscntxt.cpp:58:0:\njscntxt.cpp: In function 'JSContext* js_NewContext(JSRuntime*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njscntxt.cpp:746:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSVERSION_DEFAULT == 0);\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjscompartment.cpp\nc++ -o jscompartment.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jscompartment.pp jscompartment.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jscntxt.h:59,\n                 from jscompartment.cpp:41:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsprvtd.h:57,\n                 from jscntxt.h:55,\n                 from jscompartment.cpp:41:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jscompartment.cpp:47:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from methodjit/PolyIC.h:46,\n                 from jscompartment.cpp:51:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from methodjit/BaseAssembler.h:53:0,\n                 from methodjit/PolyIC.h:50,\n                 from jscompartment.cpp:51:\n./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\n./jsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsdate.cpp\nc++ -o jsdate.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdate.pp jsdate.cpp\n\u001b[91mIn file included from jsdate.cpp:64:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsdate.cpp:66:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsdate.cpp:63:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsdate.cpp:74:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsdate.cpp:66:0:\njsdate.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)date_now_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsdate.cpp:2459:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(date_now,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0mjsdbgapi.cpp\nc++ -o jsdbgapi.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdbgapi.pp jsdbgapi.cpp\n\u001b[91mIn file included from jsdbgapi.cpp:51:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsprvtd.h:57,\n                 from jsdbgapi.cpp:45:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsdbgapi.cpp:72:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from methodjit/PunboxAssembler.h:43,\n                 from methodjit/CodeGenIncludes.h:58,\n                 from methodjit/Compiler.h:47,\n                 from methodjit/Retcon.h:52,\n                 from jsdbgapi.cpp:79:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0mjsdhash.cpp\nc++ -o jsdhash.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdhash.pp jsdhash.cpp\njsdtoa.cpp\nc++ -o jsdtoa.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdtoa.pp jsdtoa.cpp\n\u001b[91mIn file included from jsdtoa.cpp:47:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsdtoa.cpp:47:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsdtoa.cpp:54:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsemit.cpp\nc++ -o jsemit.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsemit.pp jsemit.cpp\n\u001b[91mIn file included from jsemit.cpp:55:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsemit.cpp:52:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsemit.cpp:73:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsemit.cpp:52:0:\njsemit.cpp: In member function 'bool JSTreeContext::ensureSharpSlots()':\njsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsemit.cpp:1318:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(SHARP_NSLOTS == 2);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsemit.cpp: In function 'JSOp EmitBigIndexPrefix(JSContext*, JSCodeGenerator*, uintN)':\njsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsemit.cpp:1773:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INDEX_LIMIT <= JS_BIT(24));\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsemit.cpp:1774:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INDEX_LIMIT >=\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsemit.cpp:56:0:\njsemit.cpp: In member function 'bool JSCodeGenerator::addGlobalUse(JSAtom*, uint32, js::UpvarCookie*)':\njsatom.h:158:69: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n #define ALE_SET_INDEX(ale,index)((ale)->entry.value = (void *)(index))\n                                                                     ^\njsemit.cpp:2458:5: note: in expansion of macro 'ALE_SET_INDEX'\n     ALE_SET_INDEX(ale, cookie->asInteger());\n     ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsemit.cpp: In function 'JSBool EmitVariables(JSContext*, JSCodeGenerator*, JSParseNode*, JSBool, ptrdiff_t*)':\njsemit.cpp:4100:10: warning: variable 'forInLet' set but not used [-Wunused-but-set-variable]\n     bool forInLet, popScope;\n          ^~~~~~~~\n\u001b[0m\u001b[91mjsemit.cpp: In function 'JSBool js_EmitTree(JSContext*, JSCodeGenerator*, JSParseNode*)':\njsemit.cpp:5675:19: warning: variable 'blockObj' set but not used [-Wunused-but-set-variable]\n         JSObject *blockObj;\n                   ^~~~~~~~\n\u001b[0mjsexn.cpp\nc++ -o jsexn.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsexn.pp jsexn.cpp\n\u001b[91mIn file included from jsexn.cpp:51:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsexn.cpp:48:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsexn.cpp:67:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsexn.cpp:48:\njsexn.cpp: In function 'JSErrorReport* CopyErrorReport(JSContext*, JSErrorReport*)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsexn.cpp:146:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(JSErrorReport) % sizeof(const char *) == 0);\n     ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsexn.cpp:147:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(const char *) % sizeof(jschar) == 0);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsexn.cpp: In function 'jsval* GetStackTraceValueBuffer(JSExnPrivate*)':\njsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsexn.cpp:257:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(JSStackTraceElem) % sizeof(jsval) == 0);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsexn.cpp: In function 'JSBool exn_enumerate(JSContext*, JSObject*)':\njsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsexn.cpp:440:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(JSAtomState) <= (size_t)(uint16)-1);\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjsfriendapi.cpp\nc++ -o jsfriendapi.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsfriendapi.pp jsfriendapi.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jscntxt.h:59,\n                 from jsfriendapi.cpp:40:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsprvtd.h:57,\n                 from jscntxt.h:55,\n                 from jsfriendapi.cpp:40:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0mjsfun.cpp\nc++ -o jsfun.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsfun.pp jsfun.cpp\n\u001b[91mIn file included from jsfun.cpp:49:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsfun.cpp:47:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsfun.cpp:53:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsfun.cpp:47:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsfun.cpp:91:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsfun.cpp:47:\njsfun.cpp: In function 'JSObject* NewArguments(JSContext*, JSObject*, uint32, JSObject&)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.cpp:186:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSObject::ARGS_CLASS_RESERVED_SLOTS == 2);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsfun.cpp:53:0:\njsfun.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NewArgumentsOnTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:301:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'\n JS_DEFINE_CALLINFO_4(extern, OBJECT, js_NewArgumentsOnTrace, CONTEXT, OBJECT, UINT32, OBJECT,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_PutArgumentsOnTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:326:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, BOOL, js_PutArgumentsOnTrace, CONTEXT, OBJECT, VALUEPTR, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CreateCallObjectOnTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:1062:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'\n JS_DEFINE_CALLINFO_4(extern, OBJECT, js_CreateCallObjectOnTrace, CONTEXT, FUNCTION, OBJECT, OBJECT,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_PutCallObjectOnTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:389:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:1169:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_6'\n JS_DEFINE_CALLINFO_6(extern, BOOL, js_PutCallObjectOnTrace, CONTEXT, OBJECT, UINT32, VALUEPTR,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_SetCallArg' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:1317:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'\n JS_DEFINE_CALLINFO_4(extern, BOOL, js_SetCallArg, CONTEXT, OBJECT, JSID, VALUE, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_SetCallVar' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:1326:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'\n JS_DEFINE_CALLINFO_4(extern, BOOL, js_SetCallVar, CONTEXT, OBJECT, JSID, VALUE, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.cpp: In function 'JSString* fun_toStringHelper(JSContext*, JSObject*, uintN)':\njsfun.cpp:2054:16: warning: converting 'false' to pointer type 'JSString*' [-Wconversion-null]\n         return false;\n                ^~~~~\n\u001b[0m\u001b[91mjsfun.cpp: In function 'const js::Shape* js::LookupInterpretedFunctionPrototype(JSContext*, JSObject*)':\njsfun.cpp:2660:20: warning: converting 'false' to pointer type 'const js::Shape*' [-Wconversion-null]\n             return false;\n                    ^~~~~\n\u001b[0m\u001b[91mIn file included from jsfun.cpp:53:0:\njsfun.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CloneFunctionObject' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:2819:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'\n JS_DEFINE_CALLINFO_4(extern, OBJECT, js_CloneFunctionObject, CONTEXT, FUNCTION, OBJECT, OBJECT, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_AllocFlatClosure' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsfun.cpp:2853:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, OBJECT, js_AllocFlatClosure,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0mjsgc.cpp\nc++ -o jsgc.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsgc.pp jsgc.cpp\n\u001b[91mIn file included from jsgc.cpp:61:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsgc.cpp:56:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsgc.cpp:81:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsgc.cpp:91:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsgc.cpp:56:0:\njsgc.cpp: In function 'js::gc::ConservativeGCTest js::MarkIfGCThingWord(JSTracer*, jsuword, uint32&)':\njsutil.h:120:43: warning: typedef 'js_static_assert83' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.cpp:610:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSID_TYPE_STRING == 0 && JSID_TYPE_OBJECT == 4);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.cpp: In function 'void FinalizeArenaList(JSCompartment*, JSContext*, unsigned int)':\njsutil.h:120:43: warning: typedef 'js_static_assert84' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.cpp:1893:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(!(sizeof(T) & Cell::CellMask));\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjsgcchunk.cpp\nc++ -o jsgcchunk.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsgcchunk.pp jsgcchunk.cpp\njsgcstats.cpp\nc++ -o jsgcstats.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsgcstats.pp jsgcstats.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jscntxt.h:59,\n                 from jsgcstats.cpp:40:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsprvtd.h:57,\n                 from jscntxt.h:55,\n                 from jsgcstats.cpp:40:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsgcstats.cpp:44:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0mjshash.cpp\nc++ -o jshash.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jshash.pp jshash.cpp\njsinterp.cpp\nc++ -o jsinterp.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsinterp.pp jsinterp.cpp\n\u001b[91mIn file included from jsinterp.cpp:52:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsinterp.cpp:50:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsinterp.cpp:75:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsinterp.cpp:85:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from methodjit/MonoIC.h:44,\n                 from jsinterp.cpp:100:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0mjsinvoke.cpp\nc++ -o jsinvoke.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsinvoke.pp jsinvoke.cpp\n\u001b[91mIn file included from jsinterp.cpp:52:0,\n                 from jsinvoke.cpp:42:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsinterp.cpp:50:0,\n                 from jsinvoke.cpp:42:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsinterp.cpp:75,\n                 from jsinvoke.cpp:42:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsinterp.cpp:85:0,\n                 from jsinvoke.cpp:42:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from methodjit/MonoIC.h:44,\n                 from jsinterp.cpp:100,\n                 from jsinvoke.cpp:42:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from jsinterp.cpp:50:0,\n                 from jsinvoke.cpp:42:\njsinterp.cpp: In function 'bool js::Execute(JSContext*, JSObject*, JSScript*, JSStackFrame*, uintN, js::Value*)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.cpp:993:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(SHARP_NSLOTS == 2);\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjsiter.cpp\nc++ -o jsiter.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsiter.pp jsiter.cpp\n\u001b[91mIn file included from jsiter.cpp:49:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsiter.cpp:47:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsiter.cpp:53:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsiter.cpp:47:0:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsiter.cpp:80:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsiter.cpp:47:0:\njsiter.cpp: In function 'bool js::VectorToIdArray(JSContext*, js::AutoIdVector&, JSIdArray**)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsiter.cpp:339:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(JSIdArray) > sizeof(jsid));\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsiter.cpp: In function 'JSObject* NewIteratorObject(JSContext*, uintN)':\njsiter.cpp:428:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n             return false;\n                    ^~~~~\n\u001b[0mjslock.cpp\nc++ -o jslock.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jslock.pp jslock.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jscntxt.h:59,\n                 from jslock.cpp:52:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jslock.cpp:47:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjslock.cpp: In function 'int js_SuspendThread(JSThinLock*)':\njslock.cpp:585:14: warning: variable 'stat' set but not used [-Wunused-but-set-variable]\n     PRStatus stat;\n              ^~~~\n\u001b[0m\u001b[91mjslock.cpp: In function 'void js_ResumeThread(JSThinLock*)':\njslock.cpp:615:14: warning: variable 'stat' set but not used [-Wunused-but-set-variable]\n     PRStatus stat;\n              ^~~~\n\u001b[0mjslog2.cpp\nc++ -o jslog2.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jslog2.pp jslog2.cpp\njsmath.cpp\nc++ -o jsmath.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsmath.pp jsmath.cpp\n\u001b[91mIn file included from jsmath.cpp:48:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsmath.cpp:48:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsmath.cpp:50:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsmath.cpp:48:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsmath.cpp:50:0:\njsmath.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_math_abs_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n     JS_DEFINE_TRCINFO_1(name,                                                 \\\n     ^~~~~~~~~~~~~~~~~~~\njsmath.cpp:680:1: note: in expansion of macro 'MATH_BUILTIN_1'\n MATH_BUILTIN_1(js_math_abs, fabs)\n ^~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_atan_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n     JS_DEFINE_TRCINFO_1(name,                                                 \\\n     ^~~~~~~~~~~~~~~~~~~\njsmath.cpp:681:1: note: in expansion of macro 'MATH_BUILTIN_1'\n MATH_BUILTIN_1(math_atan, atan)\n ^~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_sin_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n     JS_DEFINE_TRCINFO_1(name,                                                 \\\n     ^~~~~~~~~~~~~~~~~~~\njsmath.cpp:682:1: note: in expansion of macro 'MATH_BUILTIN_1'\n MATH_BUILTIN_1(math_sin, sin)\n ^~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_cos_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n     JS_DEFINE_TRCINFO_1(name,                                                 \\\n     ^~~~~~~~~~~~~~~~~~~\njsmath.cpp:683:1: note: in expansion of macro 'MATH_BUILTIN_1'\n MATH_BUILTIN_1(math_cos, cos)\n ^~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_sqrt_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n     JS_DEFINE_TRCINFO_1(name,                                                 \\\n     ^~~~~~~~~~~~~~~~~~~\njsmath.cpp:684:1: note: in expansion of macro 'MATH_BUILTIN_1'\n MATH_BUILTIN_1(math_sqrt, sqrt)\n ^~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_tan_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n     JS_DEFINE_TRCINFO_1(name,                                                 \\\n     ^~~~~~~~~~~~~~~~~~~\njsmath.cpp:685:1: note: in expansion of macro 'MATH_BUILTIN_1'\n MATH_BUILTIN_1(math_tan, tan)\n ^~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_exp_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:715:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_exp,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_acos_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:807:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_acos,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_asin_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:809:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_asin,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_atan2_kernel' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:811:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_atan2,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_floor_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:813:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(js_math_floor,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_log_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:815:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_log,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_max_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:817:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(js_math_max,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_min_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:819:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(js_math_min,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_pow_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:821:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_pow,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_random_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:823:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(math_random,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_round_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:825:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(js_math_round,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_ceil_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsmath.cpp:827:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(js_math_ceil,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0mjsnativestack.cpp\nc++ -o jsnativestack.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsnativestack.pp jsnativestack.cpp\njsnum.cpp\nc++ -o jsnum.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsnum.pp jsnum.cpp\n\u001b[91mIn file included from jsnum.cpp:57:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsnum.cpp:56:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsnum.cpp:59:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsnum.cpp:56:0:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsnum.cpp:75:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsnum.cpp:59:0:\njsnum.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)ParseInt' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:516:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:513:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'\n JS_DEFINE_TRCINFO_2(num_parseInt,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)ParseIntDouble' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:517:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn1                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:513:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'\n JS_DEFINE_TRCINFO_2(num_parseInt,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)ParseFloat' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:517:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(num_parseFloat,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsnum.cpp:56:0:\njsnum.cpp: In constructor 'js::ToCStringBuf::ToCStringBuf()':\njsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:594:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sbufSize >= DTOSTR_STANDARD_BUFFER_SIZE);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsnum.cpp: In function 'JSString* js_IntToString(JSContext*, int32)':\njsutil.h:120:43: warning: typedef 'js_static_assert72' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:625:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSShortString::MAX_SHORT_STRING_LENGTH + 1 >= sizeof(\"-2147483648\"));\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsnum.cpp:59:0:\njsnum.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NumberToString' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:516:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:932:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'\n JS_DEFINE_TRCINFO_2(num_toString,\n ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NumberToStringWithBase' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:517:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn1                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsnum.cpp:932:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'\n JS_DEFINE_TRCINFO_2(num_toString,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0mjsobj.cpp\nc++ -o jsobj.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsobj.pp jsobj.cpp\n\u001b[91mIn file included from jsobj.cpp:54:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsobj.cpp:49:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsobj.cpp:58:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsobj.cpp:49:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsobj.cpp:85:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mjsobj.cpp: In function 'JSHashEntry* MarkSharpObjects(JSContext*, JSObject*, JSIdArray**)':\njsobj.cpp:221:65: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n         he = JS_HashTableRawAdd(table, hep, hash, obj, (void *) sharpid);\n                                                                 ^~~~~~~\n\u001b[0m\u001b[91mjsobj.cpp:280:34: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n             he->value = (void *) sharpid;\n                                  ^~~~~~~\n\u001b[0m\u001b[91mIn file included from jsobj.cpp:58:0:\njsobj.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_Object_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsobj.cpp:2968:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(js_Object,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_InitializerObject' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsobj.cpp:2983:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, OBJECT, js_InitializerObject, CONTEXT, OBJECT, OBJECT,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_String_tn' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsobj.cpp:2996:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, OBJECT, js_String_tn, CONTEXT, CALLEE_PROTOTYPE, STRING, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CreateThisFromTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsobj.cpp:3029:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, CONSTRUCTOR_RETRY, js_CreateThisFromTrace, CONTEXT, OBJECT, UINTN, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0mjson.cpp\nc++ -o json.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/json.pp json.cpp\n\u001b[91mIn file included from json.cpp:43:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from json.cpp:43:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from json.cpp:66:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsopcode.cpp\nc++ -o jsopcode.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsopcode.pp jsopcode.cpp\n\u001b[91mIn file included from jsopcode.cpp:56:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsopcode.cpp:54:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsopcode.cpp:73:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsopcode.cpp:77:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mjsopcode.cpp: In function 'jsbytecode* DecompileDestructuring(SprintStack*, jsbytecode*, jsbytecode*)':\njsopcode.cpp:1572:14: warning: variable 'saveop' set but not used [-Wunused-but-set-variable]\n     JSOp op, saveop;\n              ^~~~~~\n\u001b[0m\u001b[91mIn file included from jsopcode.cpp:54:0:\njsopcode.cpp: In function 'jsbytecode* Decompile(SprintStack*, jsbytecode*, intN, JSOp)':\njsutil.h:120:43: warning: typedef 'js_static_assert314' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsopcode.cpp:1891:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(ARGNO_LEN == SLOTNO_LEN);\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjsparse.cpp\nc++ -o jsparse.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsparse.pp jsparse.cpp\n\u001b[91mIn file included from jsparse.cpp:61:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsparse.cpp:60:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsparse.cpp:93:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from yarr/yarr/RegexJIT.h:31,\n                 from jsregexpinlines.h:49,\n                 from jsparse.cpp:94:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mjsparse.cpp: In member function 'JSParseNode* js::Parser::functionDef(JSAtom*, js::Parser::FunctionType, uintN)':\njsparse.cpp:3355:20: warning: converting 'false' to pointer type 'JSParseNode*' [-Wconversion-null]\n             return false;\n                    ^~~~~\n\u001b[0m\u001b[91mIn file included from jsarray.h:47:0,\n                 from jsparse.cpp:62:\njsparse.cpp: In member function 'JSParseNode* js::Parser::primaryExpr(js::TokenKind, JSBool)':\njsatom.h:158:69: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n #define ALE_SET_INDEX(ale,index)((ale)->entry.value = (void *)(index))\n                                                                     ^\njsparse.cpp:8697:17: note: in expansion of macro 'ALE_SET_INDEX'\n                 ALE_SET_INDEX(ale, assignType | oldAssignType);\n                 ^~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsparse.cpp:8540:16: warning: variable 'afterComma' set but not used [-Wunused-but-set-variable]\n         JSBool afterComma;\n                ^~~~~~~~~~\n\u001b[0mjsproxy.cpp\nc++ -o jsproxy.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsproxy.pp jsproxy.cpp\n\u001b[91mIn file included from jsproxy.cpp:43:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsproxy.cpp:43:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsproxy.cpp:51:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsprf.cpp\nc++ -o jsprf.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsprf.pp jsprf.cpp\n\u001b[91mIn file included from jsstr.h:52:0,\n                 from jsprf.cpp:53:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsprf.cpp:51:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0mjsprobes.cpp\nc++ -o jsprobes.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsprobes.pp jsprobes.cpp\n\u001b[91mIn file included from jsprobes.cpp:36:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jsprobes.cpp:36:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0mjspropertycache.cpp\nc++ -o jspropertycache.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jspropertycache.pp jspropertycache.cpp\n\u001b[91mIn file included from jspropertycache.h:44:0,\n                 from jspropertycache.cpp:41:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jspropertycache.h:44,\n                 from jspropertycache.cpp:41:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jspropertycache.cpp:44:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjspropertytree.cpp\nc++ -o jspropertytree.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jspropertytree.pp jspropertytree.cpp\n\u001b[91mIn file included from jspropertytree.cpp:45:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jspropertytree.cpp:45:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jspropertytree.cpp:51:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsreflect.cpp\nc++ -o jsreflect.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsreflect.pp jsreflect.cpp\n\u001b[91mIn file included from jsatom.h:47:0,\n                 from jsreflect.cpp:46:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsreflect.cpp:45:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsreflect.cpp:63:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsregexp.cpp\nc++ -o jsregexp.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsregexp.pp jsregexp.cpp\n\u001b[91mIn file included from jsregexp.cpp:49:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsregexp.cpp:48:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsregexp.cpp:58:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from yarr/yarr/RegexJIT.h:31,\n                 from jsregexpinlines.h:49,\n                 from jsregexp.cpp:59:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsregexp.cpp:64:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstracer.h:48:0,\n                 from jsregexp.cpp:64:\njsregexp.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CloneRegExpObject' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsregexp.cpp:178:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, OBJECT, js_CloneRegExpObject, CONTEXT, OBJECT, OBJECT, 0,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0mjsscan.cpp\nc++ -o jsscan.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsscan.pp jsscan.cpp\n\u001b[91mIn file included from jsscan.cpp:60:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsscan.cpp:57:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0mjsscope.cpp\nc++ -o jsscope.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsscope.pp jsscope.cpp\n\u001b[91mIn file included from jsscope.cpp:54:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsscope.cpp:50:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsscope.cpp:64:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsscope.cpp:67:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsscript.cpp\nc++ -o jsscript.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsscript.pp jsscript.cpp\n\u001b[91mIn file included from jsscript.cpp:49:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsscript.cpp:47:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstracer.h:48,\n                 from jsscript.cpp:63:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsscript.cpp:70:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mjsscript.cpp: In member function 'jsuword* js::Bindings::getLocalNameArray(JSContext*, JSArenaPool*)':\njsscript.cpp:193:17: warning: variable 'constFlag' set but not used [-Wunused-but-set-variable]\n         jsuword constFlag = 0;\n                 ^~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsscript.cpp:47:0:\njsscript.cpp: In function 'JSBool js_XDRScript(JSXDRState*, JSScript**, JSBool*)':\njsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.cpp:712:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(tn->kind) == sizeof(uint8));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.cpp:713:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(tn->stackDepth) == sizeof(uint16));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.cpp: In static member function 'static JSScript* JSScript::NewScript(JSContext*, uint32, uint32, uint32, uint32, uint32, uint32, uint32, uint32, uint32, uint16, uint16, JSVersion)':\njsutil.h:120:43: warning: typedef 'js_static_assert80' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.cpp:1289:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(JSObjectArray) +\n     ^~~~~~~~~~~~~~~~\n\u001b[0mjsstr.cpp\nc++ -o jsstr.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsstr.pp jsstr.cpp\n\u001b[91mIn file included from jsstr.cpp:58:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:55:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jsstr.cpp:62:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:55:0:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:81:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from yarr/yarr/RegexJIT.h:31,\n                 from jsregexpinlines.h:49,\n                 from jsstr.cpp:82:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91m./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:55:0:\njsstr.cpp: In function 'jschar* AllocChars(JSContext*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.cpp:119:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSString::MAX_LENGTH * sizeof(jschar) < UINT32_MAX);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:62:0:\njsstr.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_Flatten' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsstr.cpp:239:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n JS_DEFINE_CALLINFO_2(extern, BOOL, js_Flatten, CONTEXT, STRING, 0, nanojit::ACCSET_STORE_ANY)\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.cpp: In member function 'const RegExpPair* RegExpGuard::normalizeRegExp(bool, uintN, uintN, js::Value*)':\njsstr.cpp:1737:24: warning: converting 'false' to pointer type 'const RegExpPair*' [-Wconversion-null]\n                 return false;\n                        ^~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:62:0:\njsstr.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_ConcatStrings' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsstr.cpp:3063:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(str_concat,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)String_fromCharCode' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args\n                                         ^~~~~~~~~~~~~~~~~~~\njsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'\n     _JS_DEFINE_CALLINFO_n tn0                                                                     \\\n     ^~~~~~~~~~~~~~~~~~~~~\njsstr.cpp:3376:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'\n JS_DEFINE_TRCINFO_1(str_fromCharCode,\n ^~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:55:0:\njsstr.cpp: In member function 'JSFlatString* js::StringBuffer::finishString()':\njsutil.h:120:43: warning: typedef 'js_static_assert76' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.cpp:3501:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSShortString::MAX_SHORT_STRING_LENGTH < CharBuffer::InlineLength);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsstr.cpp:62:0:\njsstr.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_EqualStringsOnTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsstr.cpp:3823:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, BOOL, js_EqualStringsOnTrace,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CompareStringsOnTrace' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njsstr.cpp:3877:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'\n JS_DEFINE_CALLINFO_3(extern, INT32, js_CompareStringsOnTrace,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0mjstypedarray.cpp\nc++ -o jstypedarray.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jstypedarray.pp jstypedarray.cpp\n\u001b[91mIn file included from jstypedarray.cpp:47:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jstypedarray.cpp:44:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jsbuiltins.h:45,\n                 from jstypedarray.cpp:51:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstypedarray.cpp:44:0:\njsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstypedarray.cpp:64:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jstypedarray.cpp:51:0:\njstypedarray.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_TypedArray_uint8_clamp_double' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njstypedarray.cpp:387:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'\n JS_DEFINE_CALLINFO_1(extern, INT32, js_TypedArray_uint8_clamp_double, DOUBLE,\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstypedarray.cpp:44:0:\njstypedarray.cpp: In member function 'void TypedArrayTemplate<NativeType>::copyIndexToValue(JSContext*, uint32, js::Value*)':\njsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njstypedarray.cpp:1351:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(sizeof(NativeType) < 4);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjstypedarray.cpp: In function 'JSObject* TypedArrayConstruct(JSContext*, jsint, uintN, js::Value*)':\njstypedarray.cpp:1671:16: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n         return false;\n                ^~~~~\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = signed char; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = signed char; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1643:27:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n             return false;\n                    ^~~~~\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = unsigned char; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = unsigned char; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1646:28:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = short int; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = short int; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1649:28:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = short unsigned int; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = short unsigned int; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1652:29:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = int; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = int; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1655:28:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = unsigned int; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = unsigned int; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1658:29:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = float; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = float; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1661:30:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = double; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = double; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1664:30:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0m\u001b[91mjstypedarray.cpp: In instantiation of 'static JSObject* TypedArrayTemplate<NativeType>::createBufferWithSizeAndCount(JSContext*, uint32) [with NativeType = uint8_clamped; JSObject = JSObject; JSContext = JSContext; uint32 = unsigned int]':\njstypedarray.cpp:770:60:   required from 'static JSObject* TypedArrayTemplate<NativeType>::create(JSContext*, uintN, js::Value*) [with NativeType = uint8_clamped; JSObject = JSObject; JSContext = JSContext; uintN = unsigned int]'\njstypedarray.cpp:1667:35:   required from here\njstypedarray.cpp:1337:20: warning: converting 'false' to pointer type 'JSObject*' [-Wconversion-null]\n\u001b[0mjsutil.cpp\nc++ -o jsutil.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsutil.pp jsutil.cpp\njswrapper.cpp\nc++ -o jswrapper.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jswrapper.pp jswrapper.cpp\n\u001b[91mIn file included from jswrapper.cpp:42:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jswrapper.cpp:42:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from ./assembler/assembler/MacroAssembler.h:54:0,\n                 from methodjit/PolyIC.h:46,\n                 from jswrapper.cpp:48:\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':\n./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':\n./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':\n./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]\n         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);\n                      ^~~~~\n\u001b[0m\u001b[91mIn file included from jsval.h:48:0,\n                 from jspubtd.h:47,\n                 from jsapi.h:49,\n                 from jswrapper.cpp:42:\n./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\n./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\n./jsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\n./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from methodjit/BaseAssembler.h:53:0,\n                 from methodjit/PolyIC.h:50,\n                 from jswrapper.cpp:48:\n./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\n./jsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsxdrapi.cpp\nc++ -o jsxdrapi.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsxdrapi.pp jsxdrapi.cpp\n\u001b[91mIn file included from jsxdrapi.cpp:50:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsxdrapi.cpp:47:0:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsxdrapi.cpp:58:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mjsxml.cpp\nc++ -o jsxml.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsxml.pp jsxml.cpp\n\u001b[91mIn file included from jsxml.cpp:52:0:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jsxml.cpp:49:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsxml.cpp:76:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0mprmjtime.cpp\nc++ -o prmjtime.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/prmjtime.pp prmjtime.cpp\n\u001b[91mIn file included from jslock.h:43:0,\n                 from prmjtime.cpp:54:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0msharkctl.cpp\nc++ -o sharkctl.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/sharkctl.pp sharkctl.cpp\n/usr/bin/python2.7 imacro_asm.py ./imacros.jsasm /root/sbbs/3rdp/src/mozjs/js-1.8.5/js/src/imacros.c.out\njstracer.cpp\nc++ -o jstracer.o -c  -fvisibility=hidden -DOSTYPE=\\\"Linux5.4\\\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -DJS_HAS_CTYPES -DDLL_PREFIX=\\\"lib\\\" -DDLL_SUFFIX=\\\".so\\\" -Ictypes/libffi/include -I.  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -std=gnu++98 -fno-strict-aliasing -pthread -pipe  -DNDEBUG -DTRIMMED -O3 -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jstracer.pp jstracer.cpp\n\u001b[91mIn file included from nanojit/nanojit.h:377:0,\n                 from jstracer.cpp:58:\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':\nnanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register {aka unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstracer.cpp:59:0:\njsapi.h: At global scope:\njsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval {aka long unsigned int}' [-Wignored-attributes]\n template<> class AnchorPermitted<jsval> { };\n                                       ^\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jstracer.cpp:43:\njsvalue.h: In member function 'void js::Value::staticAssertions()':\njsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSBool) == 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(jsval) == 8);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:459:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstr.h: In static member function 'static void JSShortString::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:568:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:570:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstr.h:571:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':\njsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':\njsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);\n     ^~~~~~~~~~~~~~~~\njsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':\njsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsinterp.h: In member function 'void JSStackFrame::staticAsserts()':\njsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\njsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':\njsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':\njsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsstrinlines.h:280:5: note: in expansion of macro 'JS_STATIC_ASSERT'\n     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);\n     ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mjsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':\njsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstracer.cpp:87:0:\njsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':\njsobjinlines.h:316:24: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\n     setPrivate((void*) length);\n                        ^~~~~~\n\u001b[0m\u001b[91mIn file included from jstracer.h:48:0,\n                 from jstracer.cpp:78:\njstracer.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_IntToString' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njstracer.cpp:323:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'\n JS_DEFINE_CALLINFO_2(extern, STRING, js_IntToString, CONTEXT, INT32, 1, nanojit::ACCSET_NONE)\n ^~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jsbit.h:44:0,\n                 from jstracer.cpp:43:\njstracer.cpp: In function 'void js::NativeToValue(JSContext*, js::Value&, JSValueType, double*)':\njsutil.h:120:43: warning: typedef 'js_static_assert73' locally defined but not used [-Wunused-local-typedefs]\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                                           ^\njsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'\n     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y\n                                         ^\njsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'\n         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]\n                     ^~~~~~~~~~~~~~~~~~~~~\njstracer.cpp:2979:9: note: in expansion of macro 'JS_STATIC_ASSERT'\n         JS_STATIC_ASSERT(sizeof(Value) == sizeof(double));\n         ^~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from jstracer.h:48:0,\n                 from jstracer.cpp:78:\njstracer.cpp: At global scope:\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetClosureVar' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO(linkage, op,                                                              \\\n     ^~~~~~~~~~~~~~~~~~~\njstracer.cpp:8140:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'\n JS_DEFINE_CALLINFO_4(extern, UINT32, GetClosureVar, CONTEXT, OBJECT, CVIPTR, DOUBLEPTR,\n ^~~~~~~~~~~~~~~~~~~~\njsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetClosureArg' from 'intptr_t {aka long int}' to 'uintptr_t {aka long unsigned int}' inside { } is ill-formed in C++11 [-Wnarrowing]\n         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \\\njsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'\n     _JS_DEFINE_CALLINFO","stderr":""}}