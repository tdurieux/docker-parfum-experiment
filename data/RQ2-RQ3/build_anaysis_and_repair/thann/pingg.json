{"repository":"https://github.com/thann/pingg","dockerfilePath":"Dockerfile","startTime":1672361242221,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/thann/pingg'...\n","error":null,"commit":"39f27970c3fe3e3c0653c3fe56e8875254d17774"},"originalBuild":{"startTimestamp":1672361243049,"endTimestamp":1672361369723,"error":null,"stdout":"Sending build context to Docker daemon    193kB\r\r\nStep 1/17 : FROM node:alpine AS base\nalpine: Pulling from library/node\nc158987b0551: Already exists\n27ae9ce8b069: Pulling fs layer\nab5501735aae: Pulling fs layer\n9ce0a5833ea2: Pulling fs layer\n9ce0a5833ea2: Verifying Checksum\n9ce0a5833ea2: Download complete\nab5501735aae: Verifying Checksum\nab5501735aae: Download complete\n27ae9ce8b069: Verifying Checksum\n27ae9ce8b069: Download complete\n27ae9ce8b069: Pull complete\nab5501735aae: Pull complete\n9ce0a5833ea2: Pull complete\nDigest: sha256:3ed634e0f15d3e05a1918c3949963508f7ed56350cf94156e6d804ae577849fa\nStatus: Downloaded newer image for node:alpine\n ---> f01bef8b5e92\nStep 2/17 : ENV LANG en_US.UTF-8\n ---> Running in 728b352a555d\nRemoving intermediate container 728b352a555d\n ---> c52743b98044\nStep 3/17 : ENV LC_ALL en_US.UTF-8\n ---> Running in de3abcad1731\nRemoving intermediate container de3abcad1731\n ---> 0457c34455fd\nStep 4/17 : ENV PATH \"$PATH:/app\"\n ---> Running in 825906cc1130\nRemoving intermediate container 825906cc1130\n ---> 0fb429426cf5\nStep 5/17 : ENTRYPOINT [\"pingg\"]\n ---> Running in 1542823c781b\nRemoving intermediate container 1542823c781b\n ---> 307b1a6a7e46\nStep 6/17 : CMD [\"8.8.8.8\", \"1.1.1.1\"]\n ---> Running in 605bba833887\nRemoving intermediate container 605bba833887\n ---> f17e6d9c3d4c\nStep 7/17 : RUN mkdir /app\n ---> Running in 0d972746dd08\nRemoving intermediate container 0d972746dd08\n ---> bbb6fbd35bee\nStep 8/17 : WORKDIR /app\n ---> Running in 5750cbf3fae8\nRemoving intermediate container 5750cbf3fae8\n ---> 1b65923ea248\nStep 9/17 : RUN apk upgrade --no-cache\n ---> Running in 7d2a9e8d0408\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/1) Upgrading ca-certificates-bundle (20220614-r2 -> 20220614-r3)\nOK: 9 MiB in 17 packages\nRemoving intermediate container 7d2a9e8d0408\n ---> 1bf83e37c661\nStep 10/17 : COPY package.json      package-lock.json      /app/\n ---> 050566e955ca\nStep 11/17 : FROM base AS build\n ---> 050566e955ca\nStep 12/17 : RUN apk add --no-cache linux-headers git python3 make g++\n ---> Running in ae2161e48a71\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/31) Installing libstdc++-dev (12.2.1_git20220924-r4)\n(2/31) Installing binutils (2.39-r2)\n(3/31) Installing libgomp (12.2.1_git20220924-r4)\n(4/31) Installing libatomic (12.2.1_git20220924-r4)\n(5/31) Installing gmp (6.2.1-r2)\n(6/31) Installing isl25 (0.25-r0)\n(7/31) Installing mpfr4 (4.1.0-r0)\n(8/31) Installing mpc1 (1.2.1-r1)\n(9/31) Installing gcc (12.2.1_git20220924-r4)\n(10/31) Installing musl-dev (1.2.3-r4)\n(11/31) Installing libc-dev (0.7.2-r3)\n(12/31) Installing g++ (12.2.1_git20220924-r4)\n(13/31) Installing ca-certificates (20220614-r3)\n(14/31) Installing brotli-libs (1.0.9-r9)\n(15/31) Installing nghttp2-libs (1.51.0-r0)\n(16/31) Installing libcurl (7.87.0-r0)\n(17/31) Installing libexpat (2.5.0-r0)\n(18/31) Installing pcre2 (10.42-r0)\n(19/31) Installing git (2.38.2-r0)\n(20/31) Installing linux-headers (5.19.5-r0)\n(21/31) Installing make (4.3-r1)\n(22/31) Installing libbz2 (1.0.8-r4)\n(23/31) Installing libffi (3.4.4-r0)\n(24/31) Installing gdbm (1.23-r0)\n(25/31) Installing xz-libs (5.2.9-r0)\n(26/31) Installing mpdecimal (2.5.1-r1)\n(27/31) Installing ncurses-terminfo-base (6.3_p20221119-r0)\n(28/31) Installing ncurses-libs (6.3_p20221119-r0)\n(29/31) Installing readline (8.2.0-r0)\n(30/31) Installing sqlite-libs (3.40.1-r0)\n(31/31) Installing python3 (3.10.9-r1)\nExecuting busybox-1.35.0-r29.trigger\nExecuting ca-certificates-20220614-r3.trigger\nOK: 303 MiB in 48 packages\nRemoving intermediate container ae2161e48a71\n ---> bb2aba7acb70\nStep 13/17 : RUN ln -s /usr/include/linux/sysctl.h /usr/include/sys/\n ---> Running in aea9183adbe3\nRemoving intermediate container aea9183adbe3\n ---> 25e482dcff36\nStep 14/17 : RUN npm install  --production\n ---> Running in 3cdc1853732b\n\u001b[91mnpm\u001b[0m\u001b[91m WARN \u001b[0m\u001b[91mconfig\u001b[0m\u001b[91m production Use `--omit=dev` instead.\n\u001b[0m\u001b[91mnpm\u001b[0m\u001b[91m WARN old lockfile \nnpm\u001b[0m\u001b[91m WARN\u001b[0m\u001b[91m old lockfile The package-lock.json file was created with an old version of npm,\nnpm WARN old lockfile\u001b[0m\u001b[91m so supplemental metadata must be fetched from the registry.\nnpm WARN old lockfile \nnpm WARN old lockfile This is a one-time fix-up, please be patient...\nnpm WARN old lockfile \n\u001b[0m\nadded 64 packages, and audited 65 packages in 4s\n\n4 packages are looking for funding\n  run `npm fund` for details\n\n4 high severity vulnerabilities\n\nTo address all issues, run:\n  npm audit fix\n\nRun `npm audit` for details.\nRemoving intermediate container 3cdc1853732b\n ---> d66eb4ea1978\nStep 15/17 : FROM base\n ---> 050566e955ca\nStep 16/17 : COPY --from=build /app/node_modules /app/node_modules\n ---> 4fcd07fce2ba\nStep 17/17 : COPY pingg ts.js /app/\n ---> 0da27363f374\nSuccessfully built 0da27363f374\nSuccessfully tagged pingg:latest\n","stderr":"","imageSize":186951424},"repair":{"violations":[{"name":"npmCacheCleanAfterInstall","position":{"start":28,"end":28,"columnStart":4,"columnEnd":29}}],"repairedDockerfile":"FROM node:alpine AS base\n\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV PATH \"$PATH:/app\"\nENTRYPOINT [\"pingg\"]\n# Default-Gateway is hard to determine inside docker, so omit it by default\nCMD [\"8.8.8.8\", \"1.1.1.1\"]\n\n# Create app directory\nRUN mkdir /app\nWORKDIR /app\n\n# Install updates\nRUN apk upgrade --no-cache\n\nCOPY package.json \\\n     package-lock.json \\\n     /app/\n\n# Install build dependencies\nFROM base AS build\nRUN apk add --no-cache linux-headers git python3 make g++\n\n# HACK: to get netutils working\nRUN ln -s /usr/include/linux/sysctl.h /usr/include/sys/\n\n# Install app dependencies\nRUN npm install  --production\n\n# Make app image\nFROM base\nCOPY --from=build /app/node_modules /app/node_modules\nCOPY pingg ts.js /app/\n"},"repairedBuild":{"startTimestamp":1672361375029,"endTimestamp":1672361549224,"error":null,"stdout":"Sending build context to Docker daemon    193kB\r\r\nStep 1/17 : FROM node:alpine AS base\n ---> f01bef8b5e92\nStep 2/17 : ENV LANG en_US.UTF-8\n ---> Running in 60ac3ad3044a\nRemoving intermediate container 60ac3ad3044a\n ---> 929c6b577986\nStep 3/17 : ENV LC_ALL en_US.UTF-8\n ---> Running in c6273c6ef053\nRemoving intermediate container c6273c6ef053\n ---> 37575bb8338c\nStep 4/17 : ENV PATH \"$PATH:/app\"\n ---> Running in 3c3dc0aa0b70\nRemoving intermediate container 3c3dc0aa0b70\n ---> 409dc95f7c84\nStep 5/17 : ENTRYPOINT [\"pingg\"]\n ---> Running in dafe483aa62c\nRemoving intermediate container dafe483aa62c\n ---> 2efd83983e87\nStep 6/17 : CMD [\"8.8.8.8\", \"1.1.1.1\"]\n ---> Running in 903f6e0e89d7\nRemoving intermediate container 903f6e0e89d7\n ---> b8cbc03cd18b\nStep 7/17 : RUN mkdir /app\n ---> Running in 410f715a1d88\nRemoving intermediate container 410f715a1d88\n ---> c3cf6b0230f9\nStep 8/17 : WORKDIR /app\n ---> Running in 7ca33055d281\nRemoving intermediate container 7ca33055d281\n ---> de6ef94bcc8f\nStep 9/17 : RUN apk upgrade --no-cache\n ---> Running in 0abce5ecadd6\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/1) Upgrading ca-certificates-bundle (20220614-r2 -> 20220614-r3)\nOK: 9 MiB in 17 packages\nRemoving intermediate container 0abce5ecadd6\n ---> 64441db25c38\nStep 10/17 : COPY package.json      package-lock.json      /app/\n ---> 71883d27a886\nStep 11/17 : FROM base AS build\n ---> 71883d27a886\nStep 12/17 : RUN apk add --no-cache linux-headers git python3 make g++\n ---> Running in 74135e1a940b\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/31) Installing libstdc++-dev (12.2.1_git20220924-r4)\n(2/31) Installing binutils (2.39-r2)\n(3/31) Installing libgomp (12.2.1_git20220924-r4)\n(4/31) Installing libatomic (12.2.1_git20220924-r4)\n(5/31) Installing gmp (6.2.1-r2)\n(6/31) Installing isl25 (0.25-r0)\n(7/31) Installing mpfr4 (4.1.0-r0)\n(8/31) Installing mpc1 (1.2.1-r1)\n(9/31) Installing gcc (12.2.1_git20220924-r4)\n(10/31) Installing musl-dev (1.2.3-r4)\n(11/31) Installing libc-dev (0.7.2-r3)\n(12/31) Installing g++ (12.2.1_git20220924-r4)\n(13/31) Installing ca-certificates (20220614-r3)\n(14/31) Installing brotli-libs (1.0.9-r9)\n(15/31) Installing nghttp2-libs (1.51.0-r0)\n(16/31) Installing libcurl (7.87.0-r0)\n(17/31) Installing libexpat (2.5.0-r0)\n(18/31) Installing pcre2 (10.42-r0)\n(19/31) Installing git (2.38.2-r0)\n(20/31) Installing linux-headers (5.19.5-r0)\n(21/31) Installing make (4.3-r1)\n(22/31) Installing libbz2 (1.0.8-r4)\n(23/31) Installing libffi (3.4.4-r0)\n(24/31) Installing gdbm (1.23-r0)\n(25/31) Installing xz-libs (5.2.9-r0)\n(26/31) Installing mpdecimal (2.5.1-r1)\n(27/31) Installing ncurses-terminfo-base (6.3_p20221119-r0)\n(28/31) Installing ncurses-libs (6.3_p20221119-r0)\n(29/31) Installing readline (8.2.0-r0)\n(30/31) Installing sqlite-libs (3.40.1-r0)\n(31/31) Installing python3 (3.10.9-r1)\nExecuting busybox-1.35.0-r29.trigger\nExecuting ca-certificates-20220614-r3.trigger\nOK: 303 MiB in 48 packages\nRemoving intermediate container 74135e1a940b\n ---> 834375807baa\nStep 13/17 : RUN ln -s /usr/include/linux/sysctl.h /usr/include/sys/\n ---> Running in 2e1c6f2ec649\nRemoving intermediate container 2e1c6f2ec649\n ---> 98d0dbf8114b\nStep 14/17 : RUN npm install  --production\n ---> Running in 8a7a2c631aef\n\u001b[91mnpm\u001b[0m\u001b[91m WARN config production Use `--omit=dev` instead.\n\u001b[0m\u001b[91mnpm\u001b[0m\u001b[91m WARN old lockfile\u001b[0m\u001b[91m \n\u001b[0m\u001b[91mnpm\u001b[0m\u001b[91m WARN\u001b[0m\u001b[91m old lockfile The package-lock.json file was created with an old version of npm,\nnpm WARN old lockfile\u001b[0m\u001b[91m so supplemental metadata must be fetched from the registry.\nnpm WARN old lockfile \nnpm WARN old lockfile\u001b[0m\u001b[91m This is a one-time fix-up, please be patient...\nnpm WARN\u001b[0m\u001b[91m old lockfile\u001b[0m\u001b[91m \n\u001b[0m\nadded 64 packages, and audited 65 packages in 5s\n\n4 packages are looking for funding\n  run `npm fund` for details\n\n4 high severity vulnerabilities\n\nTo address all issues, run:\n  npm audit fix\n\nRun `npm audit` for details.\nRemoving intermediate container 8a7a2c631aef\n ---> d2b2a8280641\nStep 15/17 : FROM base\n ---> 71883d27a886\nStep 16/17 : COPY --from=build /app/node_modules /app/node_modules\n ---> 0dcdc52ec101\nStep 17/17 : COPY pingg ts.js /app/\n ---> 1063b23ae8ce\nSuccessfully built 1063b23ae8ce\nSuccessfully tagged pingg:latest\n","stderr":"","imageSize":186951424},"endTime":1672361551499}