{"repository":"https://github.com/1hive/assistant-bee","dockerfilePath":"Dockerfile","startTime":1672615774949,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/1hive/assistant-bee'...\n","error":null,"commit":"b8b5d9ea1f09560b3d2909928987f0c345c6f415"},"originalBuild":{"startTimestamp":1672615776052,"endTimestamp":1672615973321,"error":null,"stdout":"Sending build context to Docker daemon  1.478MB\r\r\nStep 1/7 : FROM node:14\n ---> 0f2c7f307e4d\nStep 2/7 : WORKDIR /usr/src/app\n ---> Running in 74139c50c623\nRemoving intermediate container 74139c50c623\n ---> b0ebafb5d71d\nStep 3/7 : COPY package*.json ./\n ---> f5c609be85d8\nStep 4/7 : RUN npm install\n ---> Running in f32312b2469f\n\u001b[91mnpm\u001b[0m\u001b[91m WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!\n\u001b[0m\n> better-sqlite3@7.1.5 install /usr/src/app/node_modules/better-sqlite3\n> prebuild-install || npm run build-release\n\n\u001b[91mprebuild-install\u001b[0m\u001b[91m WARN\u001b[0m\u001b[91m \u001b[0m\u001b[91minstall /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /usr/src/app/node_modules/better-sqlite3/build/Release/better_sqlite3.node)\n\u001b[0m\n> better-sqlite3@7.1.5 build-release /usr/src/app/node_modules/better-sqlite3\n> node-gyp rebuild --release\n\nmake: Entering directory '/usr/src/app/node_modules/better-sqlite3/build'\n  TOUCH b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  ACTION deps_sqlite3_gyp_locate_sqlite3_target_extract_sqlite3 b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  TOUCH Release/obj.target/deps/locate_sqlite3.stamp\n  CC(target) Release/obj.target/sqlite3/gen/sqlite3/sqlite3.o\n  AR(target) Release/obj.target/deps/sqlite3.a\n  COPY Release/sqlite3.a\n  CXX(target) Release/obj.target/better_sqlite3/src/better_sqlite3.o\n\u001b[91mIn file included from ./src/better_sqlite3.lzz:10,\n                 from ../src/better_sqlite3.cpp:4:\n/root/.cache/node-gyp/14.21.2/include/node/node.h:813:51: warning: cast between incompatible function types from 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>)' to 'node::addon_context_register_func' {aka 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)'} [-Wcast-function-type]\n       (node::addon_context_register_func) (regfunc),                  \\\n                                                   ^\n/root/.cache/node-gyp/14.21.2/include/node/node.h:831:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE_X'\n   NODE_MODULE_CONTEXT_AWARE_X(modname, regfunc, NULL, 0)\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/root/.cache/node-gyp/14.21.2/include/node/node.h:862:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE'\n   NODE_MODULE_CONTEXT_AWARE(NODE_GYP_MODULE_NAME,                     \\\n   ^~~~~~~~~~~~~~~~~~~~~~~~~\n./src/better_sqlite3.lzz:61:1: note: in expansion of macro 'NODE_MODULE_INIT'\n\u001b[0m\u001b[91m./src/objects/database.lzz: In static member function 'static void Database::JS_new(const v8::FunctionCallbackInfo<v8::Value>&)':\n./src/objects/database.lzz:171:21: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_stmt*, int, bool)':\n./src/util/data.lzz:75:92: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:75:197: note: here\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_value*, bool)':\n./src/util/data.lzz:79:81: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:79:175: note: here\n\u001b[0m  SOLINK_MODULE(target) Release/obj.target/better_sqlite3.node\n  COPY Release/better_sqlite3.node\n  CC(target) Release/obj.target/test_extension/deps/test_extension.o\n  SOLINK_MODULE(target) Release/obj.target/test_extension.node\n  COPY Release/test_extension.node\nrm b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\nmake: Leaving directory '/usr/src/app/node_modules/better-sqlite3/build'\n\n> husky@4.3.8 install /usr/src/app/node_modules/husky\n> node husky install\n\nhusky > Setting up git hooks\ngit rev-parse command failed. Got fatal: not a git repository (or any of the parent directories): .git\nhusky > Failed to install\n\n> core-js@2.6.12 postinstall /usr/src/app/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\u001b[96mThank you for using core-js (\u001b[94m https://github.com/zloirock/core-js \u001b[96m) for polyfilling JavaScript standard library!\u001b[0m\n\n\u001b[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \u001b[0m\n\u001b[96m>\u001b[94m https://opencollective.com/core-js \u001b[0m\n\u001b[96m>\u001b[94m https://www.patreon.com/zloirock \u001b[0m\n\n\u001b[96mAlso, the author of core-js (\u001b[94m https://github.com/zloirock \u001b[96m) is looking for a good job -)\u001b[0m\n\n\n> husky@4.3.8 postinstall /usr/src/app/node_modules/husky\n> opencollective-postinstall || exit 0\n\n\u001b[96m\u001b[1mThank you for using husky!\u001b[96m\u001b[1m\n\u001b[0m\u001b[96mIf you rely on this package, please consider supporting our open collective:\u001b[22m\u001b[39m\n> \u001b[94mhttps://opencollective.com/husky/donate\u001b[0m\n\n\u001b[91mnpm WARN assistant-bee@0.0.1 No repository field.\n\u001b[0m\u001b[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.3.2 (node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\u001b[0m\u001b[91m\n\u001b[0madded 1252 packages from 844 contributors and audited 1254 packages in 75.74s\n\n155 packages are looking for funding\n  run `npm fund` for details\n\nfound 163 vulnerabilities (16 low, 22 moderate, 104 high, 21 critical)\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container f32312b2469f\n ---> 070976d301b4\nStep 5/7 : RUN npm ci --only=production\n ---> Running in fb48668d5acd\n\u001b[91mnpm\u001b[0m\u001b[91m WARN prepare removing existing node_modules/ before installation\n\u001b[0m\n> core-js@2.6.12 postinstall /usr/src/app/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\u001b[96mThank you for using core-js (\u001b[94m https://github.com/zloirock/core-js \u001b[96m) for polyfilling JavaScript standard library!\u001b[0m\n\n\u001b[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \u001b[0m\n\u001b[96m>\u001b[94m https://opencollective.com/core-js \u001b[0m\n\u001b[96m>\u001b[94m https://www.patreon.com/zloirock \u001b[0m\n\n\u001b[96mAlso, the author of core-js (\u001b[94m https://github.com/zloirock \u001b[96m) is looking for a good job -)\u001b[0m\n\n\n> better-sqlite3@7.1.5 install /usr/src/app/node_modules/better-sqlite3\n> prebuild-install || npm run build-release\n\n\u001b[91mprebuild-install\u001b[0m\u001b[91m WARN \u001b[0m\u001b[91minstall\u001b[0m\u001b[91m /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /usr/src/app/node_modules/better-sqlite3/build/Release/better_sqlite3.node)\n\u001b[0m\n> better-sqlite3@7.1.5 build-release /usr/src/app/node_modules/better-sqlite3\n> node-gyp rebuild --release\n\nmake: Entering directory '/usr/src/app/node_modules/better-sqlite3/build'\n  TOUCH b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  ACTION deps_sqlite3_gyp_locate_sqlite3_target_extract_sqlite3 b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  TOUCH Release/obj.target/deps/locate_sqlite3.stamp\n  CC(target) Release/obj.target/sqlite3/gen/sqlite3/sqlite3.o\n  AR(target) Release/obj.target/deps/sqlite3.a\n  COPY Release/sqlite3.a\n  CXX(target) Release/obj.target/better_sqlite3/src/better_sqlite3.o\n\u001b[91mIn file included from ./src/better_sqlite3.lzz:10,\n                 from ../src/better_sqlite3.cpp:4:\n/root/.cache/node-gyp/14.21.2/include/node/node.h:813:51: warning: cast between incompatible function types from 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>)' to 'node::addon_context_register_func' {aka 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)'} [-Wcast-function-type]\n       (node::addon_context_register_func) (regfunc),                  \\\n                                                   ^\n/root/.cache/node-gyp/14.21.2/include/node/node.h:831:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE_X'\n   NODE_MODULE_CONTEXT_AWARE_X(modname, regfunc, NULL, 0)\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/root/.cache/node-gyp/14.21.2/include/node/node.h:862:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE'\n   NODE_MODULE_CONTEXT_AWARE(NODE_GYP_MODULE_NAME,                     \\\n   ^~~~~~~~~~~~~~~~~~~~~~~~~\n./src/better_sqlite3.lzz:61:1: note: in expansion of macro 'NODE_MODULE_INIT'\n\u001b[0m\u001b[91m./src/objects/database.lzz: In static member function 'static void Database::JS_new(const v8::FunctionCallbackInfo<v8::Value>&)':\n./src/objects/database.lzz:171:21: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_stmt*, int, bool)':\n./src/util/data.lzz:75:92: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:75:197: note: here\n./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_value*, bool)':\n./src/util/data.lzz:79:81: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:79:175: note: here\n\u001b[0m  SOLINK_MODULE(target) Release/obj.target/better_sqlite3.node\n  COPY Release/better_sqlite3.node\n  CC(target) Release/obj.target/test_extension/deps/test_extension.o\n  SOLINK_MODULE(target) Release/obj.target/test_extension.node\n  COPY Release/test_extension.node\nrm b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\nmake: Leaving directory '/usr/src/app/node_modules/better-sqlite3/build'\nadded 573 packages in 53.002s\nRemoving intermediate container fb48668d5acd\n ---> 954d510e698d\nStep 6/7 : COPY . .\n ---> 761ba033e480\nStep 7/7 : CMD [ \"npm\", \"start\" ]\n ---> Running in 2586712e9419\nRemoving intermediate container 2586712e9419\n ---> 08ef50fe2f67\nSuccessfully built 08ef50fe2f67\nSuccessfully tagged assistant-bee:latest\n","stderr":"","imageSize":1600969825},"repair":{"violations":[{"name":"npmCacheCleanAfterInstall","position":{"start":10,"end":10,"columnStart":4,"columnEnd":15}}],"repairedDockerfile":"FROM node:14\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\nRUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nCMD [ \"npm\", \"start\" ]"},"repairedBuild":{"startTimestamp":1672615976848,"endTimestamp":1672616143654,"error":null,"stdout":"Sending build context to Docker daemon  1.478MB\r\r\nStep 1/7 : FROM node:14\n ---> 0f2c7f307e4d\nStep 2/7 : WORKDIR /usr/src/app\n ---> Running in c48c05065967\nRemoving intermediate container c48c05065967\n ---> b07738fdba9e\nStep 3/7 : COPY package*.json ./\n ---> d7d5d08c653c\nStep 4/7 : RUN npm install\n ---> Running in 39469ec9f3b7\n\u001b[91mnpm\u001b[0m\u001b[91m WARN \u001b[0m\u001b[91mread-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!\n\u001b[0m\n> better-sqlite3@7.1.5 install /usr/src/app/node_modules/better-sqlite3\n> prebuild-install || npm run build-release\n\n\u001b[91mprebuild-install\u001b[0m\u001b[91m WARN\u001b[0m\u001b[91m \u001b[0m\u001b[91minstall /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /usr/src/app/node_modules/better-sqlite3/build/Release/better_sqlite3.node)\n\u001b[0m\n> better-sqlite3@7.1.5 build-release /usr/src/app/node_modules/better-sqlite3\n> node-gyp rebuild --release\n\nmake: Entering directory '/usr/src/app/node_modules/better-sqlite3/build'\n  TOUCH b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  ACTION deps_sqlite3_gyp_locate_sqlite3_target_extract_sqlite3 b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  TOUCH Release/obj.target/deps/locate_sqlite3.stamp\n  CC(target) Release/obj.target/sqlite3/gen/sqlite3/sqlite3.o\n  AR(target) Release/obj.target/deps/sqlite3.a\n  COPY Release/sqlite3.a\n  CXX(target) Release/obj.target/better_sqlite3/src/better_sqlite3.o\n\u001b[91mIn file included from ./src/better_sqlite3.lzz:10,\n                 from ../src/better_sqlite3.cpp:4:\n/root/.cache/node-gyp/14.21.2/include/node/node.h:813:51: warning: cast between incompatible function types from 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>)' to 'node::addon_context_register_func' {aka 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)'} [-Wcast-function-type]\n       (node::addon_context_register_func) (regfunc),                  \\\n                                                   ^\n/root/.cache/node-gyp/14.21.2/include/node/node.h:831:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE_X'\n   NODE_MODULE_CONTEXT_AWARE_X(modname, regfunc, NULL, 0)\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/root/.cache/node-gyp/14.21.2/include/node/node.h:862:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE'\n   NODE_MODULE_CONTEXT_AWARE(NODE_GYP_MODULE_NAME,                     \\\n   ^~~~~~~~~~~~~~~~~~~~~~~~~\n./src/better_sqlite3.lzz:61:1: note: in expansion of macro 'NODE_MODULE_INIT'\n\u001b[0m\u001b[91m./src/objects/database.lzz: In static member function 'static void Database::JS_new(const v8::FunctionCallbackInfo<v8::Value>&)':\n./src/objects/database.lzz:171:21: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_stmt*, int, bool)':\n./src/util/data.lzz:75:92: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:75:197: note: here\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_value*, bool)':\n./src/util/data.lzz:79:81: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:79:175: note: here\n\u001b[0m  SOLINK_MODULE(target) Release/obj.target/better_sqlite3.node\n  COPY Release/better_sqlite3.node\n  CC(target) Release/obj.target/test_extension/deps/test_extension.o\n  SOLINK_MODULE(target) Release/obj.target/test_extension.node\n  COPY Release/test_extension.node\nrm b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\nmake: Leaving directory '/usr/src/app/node_modules/better-sqlite3/build'\n\n> husky@4.3.8 install /usr/src/app/node_modules/husky\n> node husky install\n\nhusky > Setting up git hooks\ngit rev-parse command failed. Got fatal: not a git repository (or any of the parent directories): .git\nhusky > Failed to install\n\n> core-js@2.6.12 postinstall /usr/src/app/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\u001b[96mThank you for using core-js (\u001b[94m https://github.com/zloirock/core-js \u001b[96m) for polyfilling JavaScript standard library!\u001b[0m\n\n\u001b[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \u001b[0m\n\u001b[96m>\u001b[94m https://opencollective.com/core-js \u001b[0m\n\u001b[96m>\u001b[94m https://www.patreon.com/zloirock \u001b[0m\n\n\u001b[96mAlso, the author of core-js (\u001b[94m https://github.com/zloirock \u001b[96m) is looking for a good job -)\u001b[0m\n\n\n> husky@4.3.8 postinstall /usr/src/app/node_modules/husky\n> opencollective-postinstall || exit 0\n\n\u001b[96m\u001b[1mThank you for using husky!\u001b[96m\u001b[1m\n\u001b[0m\u001b[96mIf you rely on this package, please consider supporting our open collective:\u001b[22m\u001b[39m\n> \u001b[94mhttps://opencollective.com/husky/donate\u001b[0m\n\n\u001b[91mnpm WARN assistant-bee@0.0.1 No repository field.\n\u001b[0m\u001b[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.3.2 (node_modules/fsevents):\nnpm WARN \u001b[0m\u001b[91mnotsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\u001b[0m\u001b[91m\n\u001b[0madded 1252 packages from 844 contributors and audited 1254 packages in 65.978s\n\n155 packages are looking for funding\n  run `npm fund` for details\n\nfound 163 vulnerabilities (16 low, 22 moderate, 104 high, 21 critical)\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container 39469ec9f3b7\n ---> a6fa9fdce837\nStep 5/7 : RUN npm ci --only=production\n ---> Running in f3cf447bc2ea\n\u001b[91mnpm\u001b[0m\u001b[91m WARN prepare removing existing node_modules/ before installation\n\u001b[0m\n> core-js@2.6.12 postinstall /usr/src/app/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\u001b[96mThank you for using core-js (\u001b[94m https://github.com/zloirock/core-js \u001b[96m) for polyfilling JavaScript standard library!\u001b[0m\n\n\u001b[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \u001b[0m\n\u001b[96m>\u001b[94m https://opencollective.com/core-js \u001b[0m\n\u001b[96m>\u001b[94m https://www.patreon.com/zloirock \u001b[0m\n\n\u001b[96mAlso, the author of core-js (\u001b[94m https://github.com/zloirock \u001b[96m) is looking for a good job -)\u001b[0m\n\n\n> better-sqlite3@7.1.5 install /usr/src/app/node_modules/better-sqlite3\n> prebuild-install || npm run build-release\n\n\u001b[91mprebuild-install\u001b[0m\u001b[91m WARN install\u001b[0m\u001b[91m /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /usr/src/app/node_modules/better-sqlite3/build/Release/better_sqlite3.node)\n\u001b[0m\n> better-sqlite3@7.1.5 build-release /usr/src/app/node_modules/better-sqlite3\n> node-gyp rebuild --release\n\nmake: Entering directory '/usr/src/app/node_modules/better-sqlite3/build'\n  TOUCH b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  ACTION deps_sqlite3_gyp_locate_sqlite3_target_extract_sqlite3 b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\n  TOUCH Release/obj.target/deps/locate_sqlite3.stamp\n  CC(target) Release/obj.target/sqlite3/gen/sqlite3/sqlite3.o\n  AR(target) Release/obj.target/deps/sqlite3.a\n  COPY Release/sqlite3.a\n  CXX(target) Release/obj.target/better_sqlite3/src/better_sqlite3.o\n\u001b[91mIn file included from ./src/better_sqlite3.lzz:10,\n                 from ../src/better_sqlite3.cpp:4:\n/root/.cache/node-gyp/14.21.2/include/node/node.h:813:51: warning: cast between incompatible function types from 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>)' to 'node::addon_context_register_func' {aka 'void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)'} [-Wcast-function-type]\n       (node::addon_context_register_func) (regfunc),                  \\\n                                                   ^\n/root/.cache/node-gyp/14.21.2/include/node/node.h:831:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE_X'\n   NODE_MODULE_CONTEXT_AWARE_X(modname, regfunc, NULL, 0)\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/root/.cache/node-gyp/14.21.2/include/node/node.h:862:3: note: in expansion of macro 'NODE_MODULE_CONTEXT_AWARE'\n   NODE_MODULE_CONTEXT_AWARE(NODE_GYP_MODULE_NAME,                     \\\n   ^~~~~~~~~~~~~~~~~~~~~~~~~\n./src/better_sqlite3.lzz:61:1: note: in expansion of macro 'NODE_MODULE_INIT'\n\u001b[0m\u001b[91m./src/objects/database.lzz: In static member function 'static void Database::JS_new(const v8::FunctionCallbackInfo<v8::Value>&)':\n./src/objects/database.lzz:171:21: warning: variable 'status' set but not used [-Wunused-but-set-variable]\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_stmt*, int, bool)':\n./src/util/data.lzz:75:92: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:75:197: note: here\n\u001b[0m\u001b[91m./src/util/data.lzz: In function 'v8::Local<v8::Value> Data::GetValueJS(v8::Isolate*, sqlite3_value*, bool)':\n./src/util/data.lzz:79:81: warning: this statement may fall through [-Wimplicit-fallthrough=]\n./src/util/data.lzz:79:175: note: here\n\u001b[0m  SOLINK_MODULE(target) Release/obj.target/better_sqlite3.node\n  COPY Release/better_sqlite3.node\n  CC(target) Release/obj.target/test_extension/deps/test_extension.o\n  SOLINK_MODULE(target) Release/obj.target/test_extension.node\n  COPY Release/test_extension.node\nrm b857c92884e9598d609f6be182a2595df7a8e00f.intermediate\nmake: Leaving directory '/usr/src/app/node_modules/better-sqlite3/build'\nadded 573 packages in 52.981s\nRemoving intermediate container f3cf447bc2ea\n ---> f1efc5c5a7e4\nStep 6/7 : COPY . .\n ---> 1f27fb7eb905\nStep 7/7 : CMD [ \"npm\", \"start\" ]\n ---> Running in f4da43f9ac2c\nRemoving intermediate container f4da43f9ac2c\n ---> 8e40a505b3ab\nSuccessfully built 8e40a505b3ab\nSuccessfully tagged assistant-bee:latest\n","stderr":"","imageSize":1600968896},"endTime":1672616146163}