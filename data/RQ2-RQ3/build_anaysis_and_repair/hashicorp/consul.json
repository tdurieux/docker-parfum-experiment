{"repository":"https://github.com/hashicorp/consul","dockerfilePath":"Dockerfile","startTime":1672510306897,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/hashicorp/consul'...\n","error":null,"commit":"7747384f1f706746b42ef7edf0402b564b907b9a"},"originalBuild":{"startTimestamp":1672510311272,"endTimestamp":1672510339498,"error":{"code":2,"killed":false,"signal":null,"cmd":"docker build --no-cache --force-rm -t consul:latest -f /tmp/dinghy-analysis/hashicorp/consul/Dockerfile ."},"stdout":"Sending build context to Docker daemon   71.5MB\r\r\nStep 1/62 : FROM docker.mirror.hashicorp.services/alpine:3.15 as official\n3.15: Pulling from alpine\nDigest: sha256:cf34c62ee8eb3fe8aa24c1fab45d7e9d12768d945c3f5a6fd6a63d901e898479\nStatus: Downloaded newer image for docker.mirror.hashicorp.services/alpine:3.15\n ---> c4fc93816858\nStep 2/62 : ARG VERSION\n ---> Running in bc65a987c4a1\nRemoving intermediate container bc65a987c4a1\n ---> 10e322417eea\nStep 3/62 : LABEL org.opencontainers.image.authors=\"Consul Team <consul@hashicorp.com>\"       org.opencontainers.image.url=\"https://www.consul.io/\"       org.opencontainers.image.documentation=\"https://www.consul.io/docs\"       org.opencontainers.image.source=\"https://github.com/hashicorp/consul\"       org.opencontainers.image.version=${VERSION}       org.opencontainers.image.vendor=\"HashiCorp\"       org.opencontainers.image.title=\"consul\"       org.opencontainers.image.description=\"Consul is a datacenter runtime that provides service discovery, configuration, and orchestration.\"       version=${VERSION}\n ---> Running in fd3f53a9ac23\nRemoving intermediate container fd3f53a9ac23\n ---> b19854696002\nStep 4/62 : ENV HASHICORP_RELEASES=https://releases.hashicorp.com\n ---> Running in 7c132cc684dd\nRemoving intermediate container 7c132cc684dd\n ---> 6a7d5e44a9c3\nStep 5/62 : RUN addgroup consul &&     adduser -S -G consul consul\n ---> Running in 383fbe3589a0\nRemoving intermediate container 383fbe3589a0\n ---> c4ee3a5978fe\nStep 6/62 : RUN set -eux &&     apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec iputils jq libc6-compat iptables tzdata &&     gpg --keyserver keyserver.ubuntu.com --recv-keys C874011F0AB405110D02105534365D9472D7468F &&     mkdir -p /tmp/build &&     cd /tmp/build &&     apkArch=\"$(apk --print-arch)\" &&     case \"${apkArch}\" in         aarch64) consulArch='arm64' ;;         armhf) consulArch='arm' ;;         x86) consulArch='386' ;;         x86_64) consulArch='amd64' ;;         *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${VERSION}/)\" && exit 1 ;;     esac &&     wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_linux_${consulArch}.zip &&     wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_SHA256SUMS &&     wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_SHA256SUMS.sig &&     gpg --batch --verify consul_${VERSION}_SHA256SUMS.sig consul_${VERSION}_SHA256SUMS &&     grep consul_${VERSION}_linux_${consulArch}.zip consul_${VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build consul_${VERSION}_linux_${consulArch}.zip &&     cp /tmp/build/consul /bin/consul &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/consul; mv /tmp/build/EULA.txt /usr/share/doc/consul/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/consul; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/consul/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill all &&     apk del gnupg openssl &&     rm -rf /root/.gnupg &&     consul version\n ---> Running in 03f30dfa28e2\n\u001b[91m+ apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec iputils jq libc6-compat iptables tzdata\n\u001b[0mfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/47) Installing ca-certificates (20220614-r0)\n(2/47) Installing brotli-libs (1.0.9-r5)\n(3/47) Installing nghttp2-libs (1.46.0-r0)\n(4/47) Installing libcurl (7.80.0-r5)\n(5/47) Installing curl (7.80.0-r5)\n(6/47) Installing dumb-init (1.2.5-r1)\n(7/47) Installing libgpg-error (1.42-r1)\n(8/47) Installing libassuan (2.5.5-r0)\n(9/47) Installing libcap (2.61-r0)\n(10/47) Installing ncurses-terminfo-base (6.3_p20211120-r1)\n(11/47) Installing ncurses-libs (6.3_p20211120-r1)\n(12/47) Installing pinentry (1.2.0-r0)\nExecuting pinentry-1.2.0-r0.post-install\n(13/47) Installing libgcrypt (1.9.4-r0)\n(14/47) Installing gnupg-gpgconf (2.2.31-r2)\n(15/47) Installing libbz2 (1.0.8-r1)\n(16/47) Installing sqlite-libs (3.36.0-r0)\n(17/47) Installing gpg (2.2.31-r2)\n(18/47) Installing npth (1.6-r1)\n(19/47) Installing gpg-agent (2.2.31-r2)\n(20/47) Installing gpg-wks-server (2.2.31-r2)\n(21/47) Installing libksba (1.6.3-r0)\n(22/47) Installing gpgsm (2.2.31-r2)\n(23/47) Installing gpgv (2.2.31-r2)\n(24/47) Installing gmp (6.2.1-r1)\n(25/47) Installing nettle (3.7.3-r0)\n(26/47) Installing libffi (3.4.2-r1)\n(27/47) Installing p11-kit (0.24.0-r1)\n(28/47) Installing libtasn1 (4.18.0-r1)\n(29/47) Installing libunistring (0.9.10-r1)\n(30/47) Installing gnutls (3.7.1-r1)\n(31/47) Installing gdbm (1.22-r0)\n(32/47) Installing libsasl (2.1.28-r0)\n(33/47) Installing libldap (2.6.2-r0)\n(34/47) Installing gnupg-dirmngr (2.2.31-r2)\n(35/47) Installing gnupg-utils (2.2.31-r2)\n(36/47) Installing gnupg-wks-client (2.2.31-r2)\n(37/47) Installing gnupg (2.2.31-r2)\n(38/47) Installing libmnl (1.0.4-r2)\n(39/47) Installing libnftnl (1.2.1-r0)\n(40/47) Installing iptables (1.8.7-r1)\n(41/47) Installing iputils (20210722-r0)\n(42/47) Installing oniguruma (6.9.7.1-r0)\n(43/47) Installing jq (1.6-r1)\n(44/47) Installing libc6-compat (1.2.2-r7)\n(45/47) Installing openssl (1.1.1s-r1)\n(46/47) Installing su-exec (0.2-r1)\n(47/47) Installing tzdata (2022f-r1)\nExecuting busybox-1.34.1-r7.trigger\nExecuting ca-certificates-20220614-r0.trigger\nOK: 29 MiB in 61 packages\n\u001b[91m+ gpg --keyserver keyserver.ubuntu.com --recv-keys C874011F0AB405110D02105534365D9472D7468F\n\u001b[0m\u001b[91mgpg: directory '/root/.gnupg' created\n\u001b[0m\u001b[91mgpg: keybox '/root/.gnupg/pubring.kbx' created\n\u001b[0m\u001b[91mgpg: /root/.gnupg/trustdb.gpg: trustdb created\n\u001b[0m\u001b[91mgpg: key 34365D9472D7468F: public key \"HashiCorp Security (hashicorp.com/security) <security@hashicorp.com>\" imported\n\u001b[0m\u001b[91mgpg: Total number processed: 1\ngpg:               imported: 1\n\u001b[0m\u001b[91m+ mkdir -p /tmp/build\n\u001b[0m\u001b[91m+ cd /tmp/build\n\u001b[0m\u001b[91m+ apk --print-arch\n\u001b[0m\u001b[91m+ apkArch=x86_64\n\u001b[0m\u001b[91m+ consulArch=amd64\n/bin/sh: VERSION: parameter not set\n\u001b[0mRemoving intermediate container 03f30dfa28e2\n","stderr":"The command '/bin/sh -c set -eux &&     apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec iputils jq libc6-compat iptables tzdata &&     gpg --keyserver keyserver.ubuntu.com --recv-keys C874011F0AB405110D02105534365D9472D7468F &&     mkdir -p /tmp/build &&     cd /tmp/build &&     apkArch=\"$(apk --print-arch)\" &&     case \"${apkArch}\" in         aarch64) consulArch='arm64' ;;         armhf) consulArch='arm' ;;         x86) consulArch='386' ;;         x86_64) consulArch='amd64' ;;         *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${VERSION}/)\" && exit 1 ;;     esac &&     wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_linux_${consulArch}.zip &&     wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_SHA256SUMS &&     wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_SHA256SUMS.sig &&     gpg --batch --verify consul_${VERSION}_SHA256SUMS.sig consul_${VERSION}_SHA256SUMS &&     grep consul_${VERSION}_linux_${consulArch}.zip consul_${VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build consul_${VERSION}_linux_${consulArch}.zip &&     cp /tmp/build/consul /bin/consul &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/consul; mv /tmp/build/EULA.txt /usr/share/doc/consul/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/consul; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/consul/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill all &&     apk del gnupg openssl &&     rm -rf /root/.gnupg &&     consul version' returned a non-zero code: 2\n"},"endTime":1672510339763}