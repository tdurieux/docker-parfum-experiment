{"repository":"https://github.com/mhzed/wstunnel","dockerfilePath":"Dockerfile","startTime":1672067546160,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/mhzed/wstunnel'...\n","error":null,"commit":"736629a5a75aeaa81bc5b2391680425a8bff44b8"},"originalBuild":{"startTimestamp":1672067546985,"endTimestamp":1672067586366,"error":null,"stdout":"Sending build context to Docker daemon  157.2kB\r\r\nStep 1/7 : FROM node:10-stretch as build\n10-stretch: Pulling from library/node\n76b8ef87096f: Pulling fs layer\n2e2bafe8a0f4: Pulling fs layer\nb53ce1fd2746: Pulling fs layer\n84a8c1bd5887: Pulling fs layer\n7a803dc0b40f: Pulling fs layer\nb800e94e7303: Pulling fs layer\n0da9fbf60d48: Pulling fs layer\n04dccde934cf: Pulling fs layer\n73269890f6fd: Pulling fs layer\n84a8c1bd5887: Waiting\n0da9fbf60d48: Waiting\n7a803dc0b40f: Waiting\nb800e94e7303: Waiting\n04dccde934cf: Waiting\nb53ce1fd2746: Verifying Checksum\nb53ce1fd2746: Download complete\n76b8ef87096f: Verifying Checksum\n76b8ef87096f: Download complete\n2e2bafe8a0f4: Verifying Checksum\n2e2bafe8a0f4: Download complete\nb800e94e7303: Download complete\n84a8c1bd5887: Verifying Checksum\n84a8c1bd5887: Download complete\n04dccde934cf: Verifying Checksum\n04dccde934cf: Download complete\n73269890f6fd: Verifying Checksum\n73269890f6fd: Download complete\n0da9fbf60d48: Verifying Checksum\n0da9fbf60d48: Download complete\n76b8ef87096f: Pull complete\n7a803dc0b40f: Verifying Checksum\n7a803dc0b40f: Download complete\n2e2bafe8a0f4: Pull complete\nb53ce1fd2746: Pull complete\n84a8c1bd5887: Pull complete\n7a803dc0b40f: Pull complete\nb800e94e7303: Pull complete\n0da9fbf60d48: Pull complete\n04dccde934cf: Pull complete\n73269890f6fd: Pull complete\nDigest: sha256:59531d2835edd5161c8f9512f9e095b1836f7a1fcb0ab73e005ec46047384911\nStatus: Downloaded newer image for node:10-stretch\n ---> 28dca6642db8\nStep 2/7 : COPY . /wstunnel\n ---> d86c410c663c\nStep 3/7 : RUN cd /wstunnel && npm install --production\n ---> Running in 1687db533056\n\u001b[91mnpm\u001b[0m\u001b[91m \u001b[0m\u001b[91mWARN\u001b[0m\u001b[91m \u001b[0m\u001b[91mread-shrinkwrap\u001b[0m\u001b[91m This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!\n\u001b[0m\n> websocket@1.0.28 install /wstunnel/node_modules/websocket\n> (node-gyp rebuild 2> builderror.log) || (exit 0)\n\nmake: Entering directory '/wstunnel/node_modules/websocket/build'\n  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o\n  SOLINK_MODULE(target) Release/obj.target/bufferutil.node\n  COPY Release/bufferutil.node\n  CXX(target) Release/obj.target/validation/src/validation.o\n  SOLINK_MODULE(target) Release/obj.target/validation.node\n  COPY Release/validation.node\nmake: Leaving directory '/wstunnel/node_modules/websocket/build'\nadded 31 packages from 29 contributors and audited 125 packages in 4.379s\nfound 4 vulnerabilities (1 moderate, 3 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container 1687db533056\n ---> 862c32145457\nStep 4/7 : FROM node:10-alpine\n10-alpine: Pulling from library/node\nDigest: sha256:dc98dac24efd4254f75976c40bce46944697a110d06ce7fa47e7268470cf2e28\nStatus: Downloaded newer image for node:10-alpine\n ---> aa67ba258e18\nStep 5/7 : COPY --from=build /wstunnel /wstunnel\n ---> 9d2d7f959d71\nStep 6/7 : WORKDIR /wstunnel\n ---> Running in e472d1775c59\nRemoving intermediate container e472d1775c59\n ---> 97c0e16ad9ed\nStep 7/7 : ENTRYPOINT [\"node\", \"/wstunnel/bin/wstt.js\"]\n ---> Running in 840ab40fead8\nRemoving intermediate container 840ab40fead8\n ---> 5f62fcee7d7b\nSuccessfully built 5f62fcee7d7b\nSuccessfully tagged wstunnel:latest\n","stderr":"","imageSize":85802201},"repair":{"violations":[{"name":"npmCacheCleanAfterInstall","position":{"start":2,"end":2,"columnStart":20,"columnEnd":44}}],"repairedDockerfile":"FROM node:10-stretch as build\nCOPY . /wstunnel\nRUN cd /wstunnel && npm install --production\n\nFROM node:10-alpine\nCOPY --from=build /wstunnel /wstunnel\nWORKDIR /wstunnel\nENTRYPOINT [\"node\", \"/wstunnel/bin/wstt.js\"]\n"},"repairedBuild":{"startTimestamp":1672067586655,"endTimestamp":1672067596716,"error":null,"stdout":"Sending build context to Docker daemon  157.2kB\r\r\nStep 1/7 : FROM node:10-stretch as build\n ---> 28dca6642db8\nStep 2/7 : COPY . /wstunnel\n ---> 546b2eba947b\nStep 3/7 : RUN cd /wstunnel && npm install --production\n ---> Running in e8f041c769d1\n\u001b[91mnpm\u001b[0m\u001b[91m WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!\n\u001b[0m\n> websocket@1.0.28 install /wstunnel/node_modules/websocket\n> (node-gyp rebuild 2> builderror.log) || (exit 0)\n\nmake: Entering directory '/wstunnel/node_modules/websocket/build'\n  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o\n  SOLINK_MODULE(target) Release/obj.target/bufferutil.node\n  COPY Release/bufferutil.node\n  CXX(target) Release/obj.target/validation/src/validation.o\n  SOLINK_MODULE(target) Release/obj.target/validation.node\n  COPY Release/validation.node\nmake: Leaving directory '/wstunnel/node_modules/websocket/build'\nadded 31 packages from 29 contributors and audited 125 packages in 3.161s\nfound 4 vulnerabilities (1 moderate, 3 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container e8f041c769d1\n ---> 9a418491d0f7\nStep 4/7 : FROM node:10-alpine\n ---> aa67ba258e18\nStep 5/7 : COPY --from=build /wstunnel /wstunnel\n ---> e2d23f3e61f4\nStep 6/7 : WORKDIR /wstunnel\n ---> Running in ca4726b6f221\nRemoving intermediate container ca4726b6f221\n ---> 81dfb1c24ca6\nStep 7/7 : ENTRYPOINT [\"node\", \"/wstunnel/bin/wstt.js\"]\n ---> Running in 2a1515034dc8\nRemoving intermediate container 2a1515034dc8\n ---> 2e9ea17e5008\nSuccessfully built 2e9ea17e5008\nSuccessfully tagged wstunnel:latest\n","stderr":"","imageSize":85802201},"endTime":1672067597392}