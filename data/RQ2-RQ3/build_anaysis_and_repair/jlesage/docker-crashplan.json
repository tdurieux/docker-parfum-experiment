{"repository":"https://github.com/jlesage/docker-crashplan","dockerfilePath":"Dockerfile","startTime":1673018166563,"endTime":1673018205942,"clone":{"startTime":1673018166563,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/jlesage/docker-crashplan'...\n","error":null,"endTime":1673018167491,"commit":"f8e99e1ea73342b7239873a49200e85e2626e7df"},"originalBuild":{"startTime":1673018167567,"endTime":1673018205880,"error":{"code":1,"killed":false,"signal":null,"cmd":"docker build --no-cache --force-rm -t docker-crashplan:latest -f /tmp/dinghy-analysis/jlesage/docker-crashplan/Dockerfile ."},"stdout":"Sending build context to Docker daemon  4.697MB\r\r\nStep 1/21 : FROM jlesage/baseimage-gui:alpine-3.8-glibc-v3.5.2\nalpine-3.8-glibc-v3.5.2: Pulling from jlesage/baseimage-gui\nc87736221ed0: Pulling fs layer\n93f538eb69f5: Pulling fs layer\nfbb868b4a2c2: Pulling fs layer\n79aa016c20c9: Pulling fs layer\n13e664f3f627: Pulling fs layer\ne80186b5bfb0: Pulling fs layer\n8d1477d8be63: Pulling fs layer\ncaffdfb27353: Pulling fs layer\na491b08b8796: Pulling fs layer\n95f944bb0177: Pulling fs layer\n9baafaa3c99f: Pulling fs layer\n030d9792dd8a: Pulling fs layer\ndf5180ba12fa: Pulling fs layer\n79aa016c20c9: Waiting\na6b4ff31b3de: Pulling fs layer\n7928114a593e: Pulling fs layer\n13e664f3f627: Waiting\na491b08b8796: Waiting\n32b59715c971: Pulling fs layer\n95f944bb0177: Waiting\ncaffdfb27353: Waiting\ne80186b5bfb0: Waiting\n9baafaa3c99f: Waiting\n8d1477d8be63: Waiting\n7928114a593e: Waiting\na6b4ff31b3de: Waiting\ndf5180ba12fa: Waiting\nc87736221ed0: Download complete\n93f538eb69f5: Verifying Checksum\n93f538eb69f5: Download complete\nc87736221ed0: Pull complete\n13e664f3f627: Verifying Checksum\n13e664f3f627: Download complete\nfbb868b4a2c2: Download complete\n79aa016c20c9: Verifying Checksum\n79aa016c20c9: Download complete\n93f538eb69f5: Pull complete\ne80186b5bfb0: Download complete\n8d1477d8be63: Verifying Checksum\n8d1477d8be63: Download complete\ncaffdfb27353: Verifying Checksum\ncaffdfb27353: Download complete\na491b08b8796: Download complete\n030d9792dd8a: Verifying Checksum\n030d9792dd8a: Download complete\n9baafaa3c99f: Verifying Checksum\n9baafaa3c99f: Download complete\ndf5180ba12fa: Verifying Checksum\ndf5180ba12fa: Download complete\na6b4ff31b3de: Verifying Checksum\na6b4ff31b3de: Download complete\nfbb868b4a2c2: Pull complete\n7928114a593e: Verifying Checksum\n7928114a593e: Download complete\n32b59715c971: Verifying Checksum\n32b59715c971: Download complete\n79aa016c20c9: Pull complete\n95f944bb0177: Verifying Checksum\n95f944bb0177: Download complete\n13e664f3f627: Pull complete\ne80186b5bfb0: Pull complete\n8d1477d8be63: Pull complete\ncaffdfb27353: Pull complete\na491b08b8796: Pull complete\n95f944bb0177: Pull complete\n9baafaa3c99f: Pull complete\n030d9792dd8a: Pull complete\ndf5180ba12fa: Pull complete\na6b4ff31b3de: Pull complete\n7928114a593e: Pull complete\n32b59715c971: Pull complete\nDigest: sha256:f5c3de895a749f498975b4356d4d0b8619c728b4e13ae09fe5ab816257377bb7\nStatus: Downloaded newer image for jlesage/baseimage-gui:alpine-3.8-glibc-v3.5.2\n ---> d2da09bc111b\nStep 2/21 : ARG DOCKER_IMAGE_VERSION=unknown\n ---> Running in c72ed3766a65\nRemoving intermediate container c72ed3766a65\n ---> 55deabe44837\nStep 3/21 : ARG CRASHPLAN_VERSION=4.8.4\n ---> Running in 07de5cbd0ef3\nRemoving intermediate container 07de5cbd0ef3\n ---> 32f3cb60f63b\nStep 4/21 : ARG CRASHPLAN_JRE_VERSION=1.8.0_72\n ---> Running in f888c14340ad\nRemoving intermediate container f888c14340ad\n ---> d875d74d6cd6\nStep 5/21 : ARG CRASHPLAN_URL=https://download.code42.com/installs/linux/install/CrashPlan/CrashPlan_${CRASHPLAN_VERSION}_Linux.tgz\n ---> Running in a86e7eae56c1\nRemoving intermediate container a86e7eae56c1\n ---> 3f701644842b\nStep 6/21 : ARG CRASHPLAN_JRE_URL=http://download.code42.com/installs/proserver/jre/jre-linux-x64-${CRASHPLAN_JRE_VERSION}.tgz\n ---> Running in c9a87ae3d065\nRemoving intermediate container c9a87ae3d065\n ---> 0d067de74010\nStep 7/21 : ARG TARGETDIR=/usr/local/crashplan\n ---> Running in 9c2353c0d47b\nRemoving intermediate container 9c2353c0d47b\n ---> f9a31846a231\nStep 8/21 : ARG MANIFESTDIR=/backupArchives\n ---> Running in fba68d46bbe9\nRemoving intermediate container fba68d46bbe9\n ---> 408222cc7b75\nStep 9/21 : WORKDIR /tmp\n ---> Running in 0ff783c86281\nRemoving intermediate container 0ff783c86281\n ---> c7e5d0bb813f\nStep 10/21 : RUN     add-pkg --virtual build-dependencies cpio curl &&     echo \"Downloading CrashPlan...\" &&     curl -# -L ${CRASHPLAN_URL} | tar -xz &&     echo \"Installing CrashPlan...\" &&     mkdir -p ${TARGETDIR} &&     cat crashplan-install/CrashPlan_${CRASHPLAN_VERSION}.cpi | gzip -d -c - | cpio -i --no-preserve-owner --directory=${TARGETDIR} &&     mv ${TARGETDIR}/conf ${TARGETDIR}/conf.default &&     sed-patch '/<helpNovice>STILL_RUNNING<\\/helpNovice>/a \\\\t<serviceUIConfig>\\n\\t\\t<serviceHost>127.0.0.1<\\/serviceHost>\\n\\t<\\/serviceUIConfig>' ${TARGETDIR}/conf.default/default.service.xml &&     sed-patch \"s|<backupConfig>|<backupConfig>\\n\\t\\t\\t<manifestPath>${MANIFESTDIR}</manifestPath>|g\" ${TARGETDIR}/conf.default/default.service.xml &&     rm -r /usr/local/crashplan/upgrade &&     touch /usr/local/crashplan/upgrade && chmod 400 /usr/local/crashplan/upgrade &&     ln -s /config/conf $TARGETDIR/conf &&     cp crashplan-install/scripts/run.conf ${TARGETDIR}/bin/run.conf.default &&     ln -s /config/bin/run.conf $TARGETDIR/bin/run.conf &&     ln -s /config/cache $TARGETDIR/cache &&     rm -r $TARGETDIR/log &&     ln -s /config/log $TARGETDIR/log &&     ln -s /config/var /var/lib/crashplan &&     echo \"Downloading and installing JRE...\" &&     curl -# -L ${CRASHPLAN_JRE_URL} | tar -xz -C ${TARGETDIR} &&     chown -R root:root ${TARGETDIR}/jre &&     del-pkg build-dependencies &&     rm -rf /tmp/*\n ---> Running in bfea20602947\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/x86_64/APKINDEX.tar.gz\n(1/7) Installing cpio (2.12-r2)\n(2/7) Installing ca-certificates (20191127-r2)\n(3/7) Installing nghttp2-libs (1.39.2-r0)\n(4/7) Installing libssh2 (1.9.0-r1)\n(5/7) Installing libcurl (7.61.1-r3)\n(6/7) Installing curl (7.61.1-r3)\n(7/7) Installing build-dependencies (0)\nExecuting busybox-1.28.4-r3.trigger\nExecuting ca-certificates-20191127-r2.trigger\nExecuting glibc-ldconfig-trigger-1.0-r0.trigger\nOK: 60 MiB in 110 packages\nDownloading CrashPlan...\n\u001b[91m#=#=#                                                                         \r\u001b[0m\u001b[91m##O#- #                                                                       \r\u001b[0m\u001b[91m\ncurl: (6) Could not resolve host: downl\u001b[0m\u001b[91moad.code42.com\n\u001b[0m\u001b[91mtar: invalid magic\n\u001b[0m\u001b[91mtar: short read\n\u001b[0mRemoving intermediate container bfea20602947\n","stderr":"The command '/bin/sh -c add-pkg --virtual build-dependencies cpio curl &&     echo \"Downloading CrashPlan...\" &&     curl -# -L ${CRASHPLAN_URL} | tar -xz &&     echo \"Installing CrashPlan...\" &&     mkdir -p ${TARGETDIR} &&     cat crashplan-install/CrashPlan_${CRASHPLAN_VERSION}.cpi | gzip -d -c - | cpio -i --no-preserve-owner --directory=${TARGETDIR} &&     mv ${TARGETDIR}/conf ${TARGETDIR}/conf.default &&     sed-patch '/<helpNovice>STILL_RUNNING<\\/helpNovice>/a \\\\t<serviceUIConfig>\\n\\t\\t<serviceHost>127.0.0.1<\\/serviceHost>\\n\\t<\\/serviceUIConfig>' ${TARGETDIR}/conf.default/default.service.xml &&     sed-patch \"s|<backupConfig>|<backupConfig>\\n\\t\\t\\t<manifestPath>${MANIFESTDIR}</manifestPath>|g\" ${TARGETDIR}/conf.default/default.service.xml &&     rm -r /usr/local/crashplan/upgrade &&     touch /usr/local/crashplan/upgrade && chmod 400 /usr/local/crashplan/upgrade &&     ln -s /config/conf $TARGETDIR/conf &&     cp crashplan-install/scripts/run.conf ${TARGETDIR}/bin/run.conf.default &&     ln -s /config/bin/run.conf $TARGETDIR/bin/run.conf &&     ln -s /config/cache $TARGETDIR/cache &&     rm -r $TARGETDIR/log &&     ln -s /config/log $TARGETDIR/log &&     ln -s /config/var /var/lib/crashplan &&     echo \"Downloading and installing JRE...\" &&     curl -# -L ${CRASHPLAN_JRE_URL} | tar -xz -C ${TARGETDIR} &&     chown -R root:root ${TARGETDIR}/jre &&     del-pkg build-dependencies &&     rm -rf /tmp/*' returned a non-zero code: 1\n"}}