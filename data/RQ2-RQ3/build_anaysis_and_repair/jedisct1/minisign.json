{"repository":"https://github.com/jedisct1/minisign","dockerfilePath":"Dockerfile","startTime":1672640805564,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/jedisct1/minisign'...\n","error":null,"commit":"a2c8848418f58131ff6dbba6030768dab8555f16"},"originalBuild":{"startTimestamp":1672640806366,"endTimestamp":1672640854496,"error":null,"stdout":"Sending build context to Docker daemon  78.85kB\r\r\nStep 1/11 : FROM alpine:latest as build\n ---> 49176f190c7e\nStep 2/11 : WORKDIR /usr/src/minisign\n ---> Running in 5a975b5a3ce2\nRemoving intermediate container 5a975b5a3ce2\n ---> 4ab2702ab8f9\nStep 3/11 : RUN apk add --no-cache build-base cmake curl pkgconfig\n ---> Running in b809cf605186\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/38) Installing libgcc (12.2.1_git20220924-r4)\n(2/38) Installing libstdc++ (12.2.1_git20220924-r4)\n(3/38) Installing binutils (2.39-r2)\n(4/38) Installing libmagic (5.43-r0)\n(5/38) Installing file (5.43-r0)\n(6/38) Installing libgomp (12.2.1_git20220924-r4)\n(7/38) Installing libatomic (12.2.1_git20220924-r4)\n(8/38) Installing gmp (6.2.1-r2)\n(9/38) Installing isl25 (0.25-r0)\n(10/38) Installing mpfr4 (4.1.0-r0)\n(11/38) Installing mpc1 (1.2.1-r1)\n(12/38) Installing gcc (12.2.1_git20220924-r4)\n(13/38) Installing libstdc++-dev (12.2.1_git20220924-r4)\n(14/38) Installing musl-dev (1.2.3-r4)\n(15/38) Installing libc-dev (0.7.2-r3)\n(16/38) Installing g++ (12.2.1_git20220924-r4)\n(17/38) Installing make (4.3-r1)\n(18/38) Installing fortify-headers (1.1-r1)\n(19/38) Installing patch (2.7.6-r8)\n(20/38) Installing build-base (0.5-r3)\n(21/38) Installing libacl (2.3.1-r1)\n(22/38) Installing libbz2 (1.0.8-r4)\n(23/38) Installing libexpat (2.5.0-r0)\n(24/38) Installing lz4-libs (1.9.4-r1)\n(25/38) Installing xz-libs (5.2.9-r0)\n(26/38) Installing zstd-libs (1.5.2-r9)\n(27/38) Installing libarchive (3.6.1-r2)\n(28/38) Installing ca-certificates (20220614-r3)\n(29/38) Installing brotli-libs (1.0.9-r9)\n(30/38) Installing nghttp2-libs (1.51.0-r0)\n(31/38) Installing libcurl (7.87.0-r0)\n(32/38) Installing ncurses-terminfo-base (6.3_p20221119-r0)\n(33/38) Installing ncurses-libs (6.3_p20221119-r0)\n(34/38) Installing rhash-libs (1.4.3-r1)\n(35/38) Installing libuv (1.44.2-r0)\n(36/38) Installing cmake (3.24.3-r0)\n(37/38) Installing curl (7.87.0-r0)\n(38/38) Installing pkgconf (1.9.3-r0)\nExecuting busybox-1.35.0-r29.trigger\nExecuting ca-certificates-20220614-r3.trigger\nOK: 303 MiB in 53 packages\nRemoving intermediate container b809cf605186\n ---> 2b959e049810\nStep 4/11 : RUN apk add --no-cache upx ||:\n ---> Running in 5f0a40a0953f\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/1) Installing upx (4.0.1-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 305 MiB in 54 packages\nRemoving intermediate container 5f0a40a0953f\n ---> 834cf2428b45\nStep 5/11 : RUN curl https://download.libsodium.org/libsodium/releases/LATEST.tar.gz | tar xzvf - && cd libsodium-stable && env CFLAGS=\"-Os\" CPPFLAGS=\"-DED25519_NONDETERMINISTIC=1\" ./configure --disable-dependency-tracking && make -j$(nproc) check && make install && cd .. && rm -fr libsodium-stable\n ---> Running in 560371bdfe74\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time  \u001b[0m\u001b[91m  Time     Time  \u001b[0m\u001b[91mCurrent\n                       \u001b[0m\u001b[91m          Dload  U\u001b[0m\u001b[91mpload\u001b[0m\u001b[91m   Total \u001b[0m\u001b[91m  Spe\u001b[0m\u001b[91mnt    Lef\u001b[0m\u001b[91mt  Speed\n\u001b[0m\u001b[91m\r \u001b[0m\u001b[91m 0     0    0    \u001b[0m\u001b[91m 0    0     0      \u001b[0m\u001b[91m0      0 --:-\u001b[0m\u001b[91m-:--\u001b[0m\u001b[91m --:\u001b[0m\u001b[91m--:--\u001b[0m\u001b[91m --:-\u001b[0m\u001b[91m-:--\u001b[0m\u001b[91m     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0  \u001b[0m\u001b[91m    0      0\u001b[0m\u001b[91m --:--:--\u001b[0m\u001b[91m --:--\u001b[0m\u001b[91m:-- --:\u001b[0m\u001b[91m--:--     0\u001b[0mlibsodium-stable\nlibsodium-stable/.github\nlibsodium-stable/.github/workflows\nlibsodium-stable/.github/workflows/ci.yml\nlibsodium-stable/.github/workflows/codeql-analysis.yml\nlibsodium-stable/.github/workflows/dotnet-core.yml\nlibsodium-stable/.gitignore\nlibsodium-stable/AUTHORS\nlibsodium-stable/ChangeLog\nlibsodium-stable/LICENSE\nlibsodium-stable/Makefile.am\nlibsodium-stable/Makefile.in\nlibsodium-stable/README.markdown\nlibsodium-stable/THANKS\nlibsodium-stable/aclocal.m4\nlibsodium-stable/appveyor.yml\nlibsodium-stable/autogen.sh\nlibsodium-stable/azure-pipelines.yml\nlibsodium-stable/build-aux\nlibsodium-stable/build-aux/compile\nlibsodium-stable/build-aux/config.guess\nlibsodium-stable/build-aux/config.sub\nlibsodium-stable/build-aux/depcomp\nlibsodium-stable/build-aux/install-sh\nlibsodium-stable/build-aux/ltmain.sh\nlibsodium-stable/build-aux/missing\nlibsodium-stable/build-aux/test-driver\nlibsodium-stable/build.zig\nlibsodium-stable/builds\nlibsodium-stable/builds/.gitignore\nlibsodium-stable/builds/Makefile.am\nlibsodium-stable/builds/Makefile.in\nlibsodium-stable/builds/msvc\nlibsodium-stable/builds/msvc/build\nlibsodium-stable/builds/msvc/build/buildall.bat\nlibsodium-stable/builds/msvc/build/buildbase.bat\nlibsodium-stable/builds/msvc/properties\nlibsodium-stable/builds/msvc/properties/Common.props\nlibsodium-stable/builds/msvc/properties/DLL.props\nlibsodium-stable/builds/msvc/properties/Debug.props\nlibsodium-stable/builds/msvc/properties/DebugDEXE.props\nlibsodium-stable/builds/msvc/properties/DebugDLL.props\nlibsodium-stable/builds/msvc/properties/DebugLEXE.props\nlibsodium-stable/builds/msvc/properties/DebugLIB.props\nlibsodium-stable/builds/msvc/properties/DebugLTCG.props\nlibsodium-stable/builds/msvc/properties/DebugSEXE.props\nlibsodium-stable/builds/msvc/properties/EXE.props\nlibsodium-stable/builds/msvc/properties/LIB.props\nlibsodium-stable/builds/msvc/properties/LTCG.props\nlibsodium-stable/builds/msvc/properties/Link.props\nlibsodium-stable/builds/msvc/properties/Messages.props\nlibsodium-stable/builds/msvc/properties/Output.props\nlibsodium-stable/builds/msvc/properties/Release.props\nlibsodium-stable/builds/msvc/properties/ReleaseDEXE.props\nlibsodium-stable/builds/msvc/properties/ReleaseDLL.props\nlibsodium-stable/builds/msvc/properties/ReleaseLEXE.props\nlibsodium-stable/builds/msvc/properties/ReleaseLIB.props\nlibsodium-stable/builds/msvc/properties/ReleaseLTCG.props\nlibsodium-stable/builds/msvc/properties/ReleaseSEXE.props\nlibsodium-stable/builds/msvc/properties/Win32.props\nlibsodium-stable/builds/msvc/properties/x64.props\nlibsodium-stable/builds/msvc/resource.h\nlibsodium-stable/builds/msvc/resource.rc\nlibsodium-stable/builds/msvc/version.h\nlibsodium-stable/builds/msvc/vs2010\nlibsodium-stable/builds/msvc/vs2010/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2010/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2010/libsodium.sln\nlibsodium-stable/builds/msvc/vs2010/libsodium\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2012\nlibsodium-stable/builds/msvc/vs2012/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2012/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2012/libsodium.sln\nlibsodium-stable/builds/msvc/vs2012/libsodium\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2013\nlibsodium-stable/builds/msvc/vs2013/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2013/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2013/libsodium.sln\nlibsodium-stable/builds/msvc/vs2013/libsodium\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2015\nlibsodium-stable/builds/msvc/vs2015/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2015/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2015/libsodium.sln\nlibsodium-stable/builds/msvc/vs2015/libsodium\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2017\nlibsodium-stable/builds/msvc/vs2017/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2017/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2017/libsodium.sln\nlibsodium-stable/builds/msvc/vs2017/libsodium\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2019\nlibsodium-stable/builds/msvc/vs2019/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2019/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2019/libsodium.sln\nlibsodium-stable/builds/msvc/vs2019/libsodium\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2022\nlibsodium-stable/builds/msvc/vs2022/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2022/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2022/libsodium.sln\nlibsodium-stable/builds/msvc/vs2022/libsodium\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.xml\nlibsodium-stable/configure\nlibsodium-stable/configure.ac\nlibsodium-stable/contrib\nlibsodium-stable/contrib/Findsodium.cmake\nlibsodium-stable/contrib/Makefile.am\nlibsodium-stable/contrib/Makefile.in\nlibsodium-stable/dist-build\nlibsodium-stable/dist-build/Makefile.am\nlibsodium-stable/dist-build/Makefile.in\nlibsodium-stable/dist-build/android-aar.sh\nlibsodium-stable/dist-build/android-arm.sh\nlibsodium-stable/dist-build/android-armv7-a.sh\nlibsodium-stable/dist-build/android-armv8-a.sh\nlibsodium-stable/dist-build/android-build.sh\nlibsodium-stable/dist-build/android-mips32.sh\nlibsodium-stable/dist-build/android-mips64.sh\nlibsodium-stable/dist-build/android-x86.sh\nlibsodium-stable/dist-build/android-x86_64.sh\nlibsodium-stable/dist-build/apple-xcframework.sh\nlibsodium-stable/dist-build/emscripten-symbols.def\nlibsodium-stable/dist-build/emscripten.sh\nlibsodium-stable/dist-build/generate-emscripten-symbols.sh\nlibsodium-stable/dist-build/ios.sh\nlibsodium-stable/dist-build/msys2-win32.sh\nlibsodium-stable/dist-build/msys2-win64.sh\nlibsodium-stable/dist-build/osx.sh\nlibsodium-stable/dist-build/wasm32-wasi.sh\nlibsodium-stable/dist-build/watchos.sh\nlibsodium-stable/lgtm.yml\nlibsodium-stable/libsodium-uninstalled.pc.in\nlibsodium-stable/libsodium.pc.in\nlibsodium-stable/m4\nlibsodium-stable/m4/ax_add_fortify_source.m4\nlibsodium-stable/m4/ax_check_catchable_abrt.m4\nlibsodium-stable/m4/ax_check_catchable_segv.m4\nlibsodium-stable/m4/ax_check_compile_flag.m4\nlibsodium-stable/m4/ax_check_define.m4\nlibsodium-stable/m4/ax_check_gnu_make.m4\nlibsodium-stable/m4/ax_check_link_flag.m4\nlibsodium-stable/m4/ax_pthread.m4\nlibsodium-stable/m4/ax_tls.m4\nlibsodium-stable/m4/ax_valgrind_check.m4\nlibsodium-stable/m4/ld-output-def.m4\nlibsodium-stable/m4/libtool.m4\nlibsodium-stable/m4/ltoptions.m4\nlibsodium-stable/m4/ltsugar.m4\nlibsodium-stable/m4/ltversion.m4\nlibsodium-stable/m4/lt~obsolete.m4\nlibsodium-stable/libsodium.sln\nlibsodium-stable/libsodium.vcxproj\nlibsodium-stable/libsodium.vcxproj.filters\nlibsodium-stable/logo.png\nlibsodium-stable/msvc-scripts\nlibsodium-stable/msvc-scripts/Makefile.am\nlibsodium-stable/msvc-scripts/Makefile.in\nlibsodium-stable/msvc-scripts/process.bat\nlibsodium-stable/msvc-scripts/rep.vbs\nlibsodium-stable/msvc-scripts/sodium.props\nlibsodium-stable/packaging\nlibsodium-stable/packaging/dotnet-core\nlibsodium-stable/packaging/dotnet-core/libsodium.pkgproj\nlibsodium-stable/packaging/dotnet-core/test.cs\nlibsodium-stable/packaging/nuget\nlibsodium-stable/packaging/nuget/.gitignore\nlibsodium-stable/packaging/nuget/package.bat\nlibsodium-stable/packaging/nuget/package.config\nlibsodium-stable/packaging/nuget/package.gsl\nlibsodium-stable/regen-msvc\nlibsodium-stable/regen-msvc/libsodium.vcxproj\nlibsodium-stable/regen-msvc/libsodium.vcxproj.filters\nlibsodium-stable/regen-msvc/libsodium.vcxproj.filters.tpl\nlibsodium-stable/regen-msvc/libsodium.vcxproj.tpl\nlibsodium-stable/regen-msvc/regen-msvc.py\nlibsodium-stable/regen-msvc/tl_libsodium.vcxproj.filters.tpl\nlibsodium-stable/regen-msvc/tl_libsodium.vcxproj.tpl\nlibsodium-stable/src\nlibsodium-stable/src/Makefile.am\nlibsodium-stable/src/Makefile.in\nlibsodium-stable/src/libsodium\nlibsodium-stable/src/libsodium/Makefile.am\nlibsodium-stable/src/libsodium/Makefile.in\nlibsodium-stable/src/libsodium/crypto_aead\nlibsodium-stable/src/libsodium/crypto_aead/aes256gcm\nlibsodium-stable/src/libsodium/crypto_aead/aes256gcm/aesni\nlibsodium-stable/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c\nlibsodium-stable/src/libsodium/crypto_aead/chacha20poly1305\nlibsodium-stable/src/libsodium/crypto_aead/chacha20poly1305/sodium\nlibsodium-stable/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_aead/xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_aead/xchacha20poly1305/sodium\nlibsodium-stable/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_auth\nlibsodium-stable/src/libsodium/crypto_auth/crypto_auth.c\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha256\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512256\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c\nlibsodium-stable/src/libsodium/crypto_box\nlibsodium-stable/src/libsodium/crypto_box/crypto_box.c\nlibsodium-stable/src/libsodium/crypto_box/crypto_box_easy.c\nlibsodium-stable/src/libsodium/crypto_box/crypto_box_seal.c\nlibsodium-stable/src/libsodium/crypto_box/curve25519xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_box/curve25519xsalsa20poly1305\nlibsodium-stable/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c\nlibsodium-stable/src/libsodium/crypto_core\nlibsodium-stable/src/libsodium/crypto_core/ed25519\nlibsodium-stable/src/libsodium/crypto_core/ed25519/core_ed25519.c\nlibsodium-stable/src/libsodium/crypto_core/ed25519/core_ristretto255.c\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/ed25519_ref10.c\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/base.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/base2.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/constants.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/fe.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/base.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/base2.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/constants.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/fe.h\nlibsodium-stable/src/libsodium/crypto_core/hchacha20\nlibsodium-stable/src/libsodium/crypto_core/hchacha20/core_hchacha20.c\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20/ref2\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c\nlibsodium-stable/src/libsodium/crypto_core/salsa\nlibsodium-stable/src/libsodium/crypto_core/salsa/ref\nlibsodium-stable/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c\nlibsodium-stable/src/libsodium/crypto_generichash\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c\nlibsodium-stable/src/libsodium/crypto_generichash/crypto_generichash.c\nlibsodium-stable/src/libsodium/crypto_hash\nlibsodium-stable/src/libsodium/crypto_hash/crypto_hash.c\nlibsodium-stable/src/libsodium/crypto_hash/sha256\nlibsodium-stable/src/libsodium/crypto_hash/sha256/cp\nlibsodium-stable/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c\nlibsodium-stable/src/libsodium/crypto_hash/sha256/hash_sha256.c\nlibsodium-stable/src/libsodium/crypto_hash/sha512\nlibsodium-stable/src/libsodium/crypto_hash/sha512/cp\nlibsodium-stable/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c\nlibsodium-stable/src/libsodium/crypto_hash/sha512/hash_sha512.c\nlibsodium-stable/src/libsodium/crypto_kdf\nlibsodium-stable/src/libsodium/crypto_kdf/blake2b\nlibsodium-stable/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c\nlibsodium-stable/src/libsodium/crypto_kdf/crypto_kdf.c\nlibsodium-stable/src/libsodium/crypto_kx\nlibsodium-stable/src/libsodium/crypto_kx/crypto_kx.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth\nlibsodium-stable/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/sse2\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h\nlibsodium-stable/src/libsodium/crypto_pwhash\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-core.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-core.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-encoding.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx512f.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blake2b-long.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blake2b-long.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-avx512f.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c\nlibsodium-stable/src/libsodium/crypto_pwhash/crypto_pwhash.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c\nlibsodium-stable/src/libsodium/crypto_scalarmult\nlibsodium-stable/src/libsodium/crypto_scalarmult/crypto_scalarmult.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/ref10\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/sandy2x.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/ed25519\nlibsodium-stable/src/libsodium/crypto_scalarmult/ed25519/ref10\nlibsodium-stable/src/libsodium/crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/ristretto255\nlibsodium-stable/src/libsodium/crypto_scalarmult/ristretto255/ref10\nlibsodium-stable/src/libsodium/crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c\nlibsodium-stable/src/libsodium/crypto_secretbox\nlibsodium-stable/src/libsodium/crypto_secretbox/crypto_secretbox.c\nlibsodium-stable/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c\nlibsodium-stable/src/libsodium/crypto_secretbox/xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_secretbox/xsalsa20poly1305\nlibsodium-stable/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c\nlibsodium-stable/src/libsodium/crypto_secretstream\nlibsodium-stable/src/libsodium/crypto_secretstream/xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_shorthash\nlibsodium-stable/src/libsodium/crypto_shorthash/crypto_shorthash.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/shorthash_siphashx24.c\nlibsodium-stable/src/libsodium/crypto_sign\nlibsodium-stable/src/libsodium/crypto_sign/crypto_sign.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/keypair.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/open.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/sign.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/sign_ed25519.c\nlibsodium-stable/src/libsodium/crypto_stream\nlibsodium-stable/src/libsodium/crypto_stream/chacha20\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u0.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u1.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/ref\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/stream_chacha20.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/stream_chacha20.h\nlibsodium-stable/src/libsodium/crypto_stream/crypto_stream.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/ref\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/stream_salsa20.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/stream_salsa20.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u0.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u1.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012/ref\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012/stream_salsa2012.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa208\nlibsodium-stable/src/libsodium/crypto_stream/salsa208/ref\nlibsodium-stable/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa208/stream_salsa208.c\nlibsodium-stable/src/libsodium/crypto_stream/xchacha20\nlibsodium-stable/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c\nlibsodium-stable/src/libsodium/crypto_stream/xsalsa20\nlibsodium-stable/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c\nlibsodium-stable/src/libsodium/crypto_verify\nlibsodium-stable/src/libsodium/crypto_verify/sodium\nlibsodium-stable/src/libsodium/crypto_verify/sodium/verify.c\nlibsodium-stable/src/libsodium/include\nlibsodium-stable/src/libsodium/include/Makefile.am\nlibsodium-stable/src/libsodium/include/Makefile.in\nlibsodium-stable/src/libsodium/include/sodium.h\nlibsodium-stable/src/libsodium/include/sodium\nlibsodium-stable/src/libsodium/include/sodium/core.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_aead_aes256gcm.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth_hmacsha256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth_hmacsha512.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_box.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_ed25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_hchacha20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_hsalsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_ristretto255.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_salsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_salsa2012.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_salsa208.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_generichash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_generichash_blake2b.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_hash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_hash_sha256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_hash_sha512.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_kdf.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_kdf_blake2b.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_kx.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_onetimeauth.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash_argon2i.h\nlibsodium-stable/src/libsodium/include/sodium/private\nlibsodium-stable/src/libsodium/include/sodium/private/chacha20_ietf_ext.h\nlibsodium-stable/src/libsodium/include/sodium/private/common.h\nlibsodium-stable/src/libsodium/include/sodium/private/ed25519_ref10.h\nlibsodium-stable/src/libsodium/include/sodium/private/ed25519_ref10_fe_25_5.h\nlibsodium-stable/src/libsodium/include/sodium/private/ed25519_ref10_fe_51.h\nlibsodium-stable/src/libsodium/include/sodium/private/implementations.h\nlibsodium-stable/src/libsodium/include/sodium/private/mutex.h\nlibsodium-stable/src/libsodium/include/sodium/private/sse2_64_32.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash_argon2id.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult_ed25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult_ristretto255.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretbox.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretstream_xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_shorthash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_shorthash_siphash24.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_sign.h\nlibsodium-stable/src/libsodium/include/sodium/export.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_sign_ed25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_chacha20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_salsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_salsa2012.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_salsa208.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_xchacha20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_xsalsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_verify_16.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_verify_32.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_verify_64.h\nlibsodium-stable/src/libsodium/include/sodium/randombytes.h\nlibsodium-stable/src/libsodium/include/sodium/randombytes_internal_random.h\nlibsodium-stable/src/libsodium/include/sodium/randombytes_sysrandom.h\nlibsodium-stable/src/libsodium/include/sodium/utils.h\nlibsodium-stable/src/libsodium/include/sodium/runtime.h\nlibsodium-stable/src/libsodium/include/sodium/version.h.in\nlibsodium-stable/src/libsodium/randombytes\nlibsodium-stable/src/libsodium/randombytes/internal\nlibsodium-stable/src/libsodium/randombytes/internal/randombytes_internal_random.c\nlibsodium-stable/src/libsodium/randombytes/randombytes.c\nlibsodium-stable/src/libsodium/randombytes/sysrandom\nlibsodium-stable/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c\nlibsodium-stable/src/libsodium/sodium\nlibsodium-stable/src/libsodium/sodium/codecs.c\nlibsodium-stable/src/libsodium/sodium/core.c\nlibsodium-stable/src/libsodium/sodium/runtime.c\nlibsodium-stable/src/libsodium/sodium/utils.c\nlibsodium-stable/src/libsodium/sodium/version.c\nlibsodium-stable/test\nlibsodium-stable/test/Makefile.am\nlibsodium-stable/test/Makefile.in\nlibsodium-stable/test/constcheck.sh\nlibsodium-stable/test/default\nlibsodium-stable/test/default/Makefile.am\nlibsodium-stable/test/default/Makefile.in\nlibsodium-stable/test/default/aead_aes256gcm.c\nlibsodium-stable/test/default/aead_aes256gcm.exp\nlibsodium-stable/test/default/aead_aes256gcm2.c\nlibsodium-stable/test/default/aead_aes256gcm2.exp\nlibsodium-stable/test/default/aead_chacha20poly1305.c\nlibsodium-stable/test/default/aead_chacha20poly1305.exp\nlibsodium-stable/test/default/aead_chacha20poly13052.c\nlibsodium-stable/test/default/aead_chacha20poly13052.exp\nlibsodium-stable/test/default/aead_xchacha20poly1305.c\nlibsodium-stable/test/default/aead_xchacha20poly1305.exp\nlibsodium-stable/test/default/auth.c\nlibsodium-stable/test/default/auth.exp\nlibsodium-stable/test/default/auth2.c\nlibsodium-stable/test/default/auth2.exp\nlibsodium-stable/test/default/auth3.c\nlibsodium-stable/test/default/auth3.exp\nlibsodium-stable/test/default/auth5.c\nlibsodium-stable/test/default/auth5.exp\nlibsodium-stable/test/default/auth6.c\nlibsodium-stable/test/default/auth6.exp\nlibsodium-stable/test/default/auth7.c\nlibsodium-stable/test/default/auth7.exp\nlibsodium-stable/test/default/box.c\nlibsodium-stable/test/default/box.exp\nlibsodium-stable/test/default/box2.c\nlibsodium-stable/test/default/box2.exp\nlibsodium-stable/test/default/box7.c\nlibsodium-stable/test/default/box7.exp\nlibsodium-stable/test/default/box8.c\nlibsodium-stable/test/default/box8.exp\nlibsodium-stable/test/default/box_easy.c\nlibsodium-stable/test/default/box_easy.exp\nlibsodium-stable/test/default/box_easy2.c\nlibsodium-stable/test/default/box_easy2.exp\nlibsodium-stable/test/default/box_seal.c\nlibsodium-stable/test/default/box_seal.exp\nlibsodium-stable/test/default/box_seed.c\nlibsodium-stable/test/default/box_seed.exp\nlibsodium-stable/test/default/chacha20.c\nlibsodium-stable/test/default/chacha20.exp\nlibsodium-stable/test/default/cmptest.h\nlibsodium-stable/test/default/codecs.c\nlibsodium-stable/test/default/codecs.exp\nlibsodium-stable/test/default/core1.c\nlibsodium-stable/test/default/core1.exp\nlibsodium-stable/test/default/core2.c\nlibsodium-stable/test/default/core2.exp\nlibsodium-stable/test/default/core3.c\nlibsodium-stable/test/default/core3.exp\nlibsodium-stable/test/default/core4.c\nlibsodium-stable/test/default/core4.exp\nlibsodium-stable/test/default/core5.c\nlibsodium-stable/test/default/core5.exp\nlibsodium-stable/test/default/core6.c\nlibsodium-stable/test/default/core6.exp\nlibsodium-stable/test/default/core_ed25519.c\nlibsodium-stable/test/default/core_ed25519.exp\nlibsodium-stable/test/default/core_ristretto255.c\nlibsodium-stable/test/default/core_ristretto255.exp\nlibsodium-stable/test/default/ed25519_convert.c\nlibsodium-stable/test/default/ed25519_convert.exp\nlibsodium-stable/test/default/generichash.c\nlibsodium-stable/test/default/generichash.exp\nlibsodium-stable/test/default/generichash2.c\nlibsodium-stable/test/default/generichash2.exp\nlibsodium-stable/test/default/generichash3.c\nlibsodium-stable/test/default/generichash3.exp\nlibsodium-stable/test/default/hash.c\nlibsodium-stable/test/default/hash.exp\nlibsodium-stable/test/default/hash3.c\nlibsodium-stable/test/default/hash3.exp\nlibsodium-stable/test/default/index.html.tpl\nlibsodium-stable/test/default/kdf.c\nlibsodium-stable/test/default/kdf.exp\nlibsodium-stable/test/default/keygen.c\nlibsodium-stable/test/default/keygen.exp\nlibsodium-stable/test/default/kx.c\nlibsodium-stable/test/default/kx.exp\nlibsodium-stable/test/default/metamorphic.c\nlibsodium-stable/test/default/metamorphic.exp\nlibsodium-stable/test/default/misuse.c\nlibsodium-stable/test/default/misuse.exp\nlibsodium-stable/test/default/onetimeauth.c\nlibsodium-stable/test/default/onetimeauth.exp\nlibsodium-stable/test/default/onetimeauth2.c\nlibsodium-stable/test/default/onetimeauth2.exp\nlibsodium-stable/test/default/onetimeauth7.c\nlibsodium-stable/test/default/onetimeauth7.exp\nlibsodium-stable/test/default/pre.js.inc\nlibsodium-stable/test/default/pwhash_scrypt.c\nlibsodium-stable/test/default/pwhash_argon2i.c\nlibsodium-stable/test/default/pwhash_argon2i.exp\nlibsodium-stable/test/default/pwhash_argon2id.c\nlibsodium-stable/test/default/pwhash_argon2id.exp\nlibsodium-stable/test/default/pwhash_scrypt.exp\nlibsodium-stable/test/default/pwhash_scrypt_ll.c\nlibsodium-stable/test/default/pwhash_scrypt_ll.exp\nlibsodium-stable/test/default/randombytes.c\nlibsodium-stable/test/default/randombytes.exp\nlibsodium-stable/test/default/run.sh\nlibsodium-stable/test/default/scalarmult.c\nlibsodium-stable/test/default/scalarmult.exp\nlibsodium-stable/test/default/scalarmult2.c\nlibsodium-stable/test/default/scalarmult2.exp\nlibsodium-stable/test/default/scalarmult5.c\nlibsodium-stable/test/default/scalarmult5.exp\nlibsodium-stable/test/default/scalarmult6.c\nlibsodium-stable/test/default/scalarmult6.exp\nlibsodium-stable/test/default/scalarmult7.c\nlibsodium-stable/test/default/scalarmult7.exp\nlibsodium-stable/test/default/scalarmult8.c\nlibsodium-stable/test/default/scalarmult8.exp\nlibsodium-stable/test/default/scalarmult_ed25519.c\nlibsodium-stable/test/default/scalarmult_ed25519.exp\nlibsodium-stable/test/default/scalarmult_ristretto255.c\nlibsodium-stable/test/default/scalarmult_ristretto255.exp\nlibsodium-stable/test/default/secretbox.c\nlibsodium-stable/test/default/secretbox.exp\nlibsodium-stable/test/default/secretbox2.c\nlibsodium-stable/test/default/secretbox2.exp\nlibsodium-stable/test/default/secretbox7.c\nlibsodium-stable/test/default/secretbox7.exp\nlibsodium-stable/test/default/secretbox8.c\nlibsodium-stable/test/default/secretbox8.exp\nlibsodium-stable/test/default/secretbox_easy.c\nlibsodium-stable/test/default/secretbox_easy.exp\nlibsodium-stable/test/default/secretbox_easy2.c\nlibsodium-stable/test/default/secretbox_easy2.exp\nlibsodium-stable/test/default/secretstream.c\nlibsodium-stable/test/default/secretstream.exp\nlibsodium-stable/test/default/shorthash.c\nlibsodium-stable/test/default/shorthash.exp\nlibsodium-stable/test/default/sign.c\nlibsodium-stable/test/default/sign.exp\nlibsodium-stable/test/default/siphashx24.c\nlibsodium-stable/test/default/siphashx24.exp\nlibsodium-stable/test/default/sodium_core.c\nlibsodium-stable/test/default/sodium_core.exp\nlibsodium-stable/test/default/sodium_utils.c\nlibsodium-stable/test/default/sodium_utils.exp\nlibsodium-stable/test/default/sodium_utils2.c\nlibsodium-stable/test/default/sodium_utils2.exp\nlibsodium-stable/test/default/sodium_utils3.c\nlibsodium-stable/test/default/sodium_utils3.exp\nlibsodium-stable/test/default/sodium_version.c\nlibsodium-stable/test/default/sodium_version.exp\nlibsodium-stable/test/default/stream.c\u001b[91m\r100 1829k  100 1829k    0   \u001b[0m\u001b[91m  0  2188k   \u001b[0m\u001b[91m   \u001b[0m\u001b[91m0 --:-\u001b[0m\u001b[91m-:-\u001b[0m\u001b[91m- --:-\u001b[0m\u001b[91m-:-\u001b[0m\u001b[91m- -\u001b[0m\u001b[91m-:--:--\u001b[0m\u001b[91m 2188k\u001b[0m\u001b[91m\n\u001b[0m\nlibsodium-stable/test/default/stream.exp\nlibsodium-stable/test/default/stream2.c\nlibsodium-stable/test/default/stream2.exp\nlibsodium-stable/test/default/stream3.c\nlibsodium-stable/test/default/stream3.exp\nlibsodium-stable/test/default/stream4.c\nlibsodium-stable/test/default/stream4.exp\nlibsodium-stable/test/default/verify1.c\nlibsodium-stable/test/default/verify1.exp\nlibsodium-stable/test/default/wasi-test-wrapper.sh\nlibsodium-stable/test/default/wintest.bat\nlibsodium-stable/test/default/xchacha20.c\nlibsodium-stable/test/default/xchacha20.exp\nlibsodium-stable/test/quirks\nlibsodium-stable/test/quirks/quirks.h\nchecking build system type... x86_64-pc-linux-musl\nchecking host system type... x86_64-pc-linux-musl\nchecking target system type... x86_64-pc-linux-musl\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a race-free mkdir -p... ./build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking whether UID '0' is supported by ustar format... yes\nchecking whether GID '0' is supported by ustar format... yes\nchecking how to create a ustar tar archive... none\nchecking whether make supports nested variables... (cached) yes\nchecking whether to enable maintainer-specific portions of Makefiles... no\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether the compiler supports GNU C... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to enable C11 features... none needed\nchecking whether gcc understands -c and -o together... yes\nchecking whether make supports the include directive... yes (GNU style)\nchecking dependency style of gcc... none\nchecking dependency style of gcc... none\nchecking for stdio.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for strings.h... yes\nchecking for sys/stat.h... yes\nchecking for sys/types.h... yes\nchecking for unistd.h... yes\nchecking for wchar.h... yes\nchecking for minix/config.h... no\nchecking whether it is safe to define __EXTENSIONS__... yes\nchecking whether _XOPEN_SOURCE should be defined... no\nchecking for a sed that does not truncate output... /bin/sed\nchecking how to run the C preprocessor... gcc -E\nchecking for grep that handles long lines and -e... /bin/grep\nchecking for egrep... /bin/grep -E\nchecking whether gcc is Clang... no\nchecking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\nchecking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\nchecking whether more special flags are required for pthreads... no\nchecking for PTHREAD_PRIO_INHERIT... yes\nchecking for variable-length arrays... yes\nchecking for __wasi__ defined... no\nchecking whether C compiler accepts -fvisibility=hidden... yes\nchecking whether C compiler accepts -fPIC... yes\nchecking whether C compiler accepts -fPIE... yes\nchecking whether the linker accepts -pie... yes\nchecking whether C compiler accepts -fno-strict-aliasing... yes\nchecking whether C compiler accepts -fno-strict-overflow... yes\nchecking for a broken Xcode version... no\nchecking whether C compiler accepts -fstack-protector... yes\nchecking whether the linker accepts -fstack-protector... yes\nchecking whether C compiler accepts -Os -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wall... yes\nchecking whether C compiler accepts -Os -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wno-unknown-pragmas... yes\nchecking for clang... no\nchecking whether C compiler accepts -Os -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wall -Wextra... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wshorten-64-to-32... no\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wsometimes-uninitialized... no\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes -Wswitch-enum... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes -Wswitch-enum -Wvariable-decl... no\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes -Wswitch-enum -Wwrite-strings... yes\nchecking whether the linker accepts -Wl,-z,relro... yes\nchecking whether the linker accepts -Wl,-z,now... yes\nchecking whether the linker accepts -Wl,-z,noexecstack... yes\nchecking whether segmentation violations can be caught... yes\nchecking whether SIGABRT can be caught... no\n\u001b[91mconfigure: WARNING: On this platform, SIGABRT cannot be caught using signal handlers.\n\u001b[0mchecking for thread local storage (TLS) class... _Thread_local\nthread local storage is supported\nchecking whether C compiler accepts -ftls-model=local-dynamic... yes\nchecking how to print strings... printf\nchecking for a sed that does not truncate output... (cached) /bin/sed\nchecking for fgrep... /bin/grep -F\nchecking for ld used by gcc... /usr/x86_64-alpine-linux-musl/bin/ld\nchecking if the linker (/usr/x86_64-alpine-linux-musl/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 98304\nchecking how to convert x86_64-pc-linux-musl file names to x86_64-pc-linux-musl format... func_convert_file_noop\nchecking how to convert x86_64-pc-linux-musl file names to toolchain format... func_convert_file_noop\nchecking for /usr/x86_64-alpine-linux-musl/bin/ld option to reload object files... -r\nchecking for file... file\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... pass_all\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... printf %s\\n\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\nchecking for sysroot... no\nchecking for a working dd... /bin/dd\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\nchecking for mt... no\nchecking if : is a manifest tool... no\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if gcc supports -fno-rtti -fno-exceptions... no\nchecking for gcc option to produce PIC... -fPIC -DPIC\nchecking if gcc PIC flag -fPIC -DPIC works... yes\nchecking if gcc static flag -static works... yes\nchecking if gcc supports -c -o file.o... yes\nchecking if gcc supports -c -o file.o... (cached) yes\nchecking whether the gcc linker (/usr/x86_64-alpine-linux-musl/bin/ld -m elf_x86_64) supports shared libraries... yes\nchecking whether -lc should be explicitly linked in... no\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... yes\nchecking whether to build static libraries... yes\nchecking for ar... (cached) ar\nchecking whether C compiler accepts -mmmx... yes\nchecking for MMX instructions set... yes\nchecking whether C compiler accepts -mmmx... (cached) yes\nchecking whether C compiler accepts -msse2... yes\nchecking for SSE2 instructions set... yes\nchecking whether C compiler accepts -msse2... (cached) yes\nchecking whether C compiler accepts -msse3... yes\nchecking for SSE3 instructions set... yes\nchecking whether C compiler accepts -msse3... (cached) yes\nchecking whether C compiler accepts -mssse3... yes\nchecking for SSSE3 instructions set... yes\nchecking whether C compiler accepts -mssse3... (cached) yes\nchecking whether C compiler accepts -msse4.1... yes\nchecking for SSE4.1 instructions set... yes\nchecking whether C compiler accepts -msse4.1... (cached) yes\nchecking whether C compiler accepts -mavx... yes\nchecking for AVX instructions set... yes\nchecking whether C compiler accepts -mavx... (cached) yes\nchecking whether C compiler accepts -mavx2... yes\nchecking for AVX2 instructions set... yes\nchecking whether C compiler accepts -mavx2... (cached) yes\nchecking if _mm256_broadcastsi128_si256 is correctly defined... yes\nchecking whether C compiler accepts -mavx512f... yes\nchecking for AVX512F instructions set... yes\nchecking whether C compiler accepts -mavx512f... (cached) yes\nchecking whether C compiler accepts -maes... yes\nchecking whether C compiler accepts -mpclmul... yes\nchecking for AESNI instructions set and PCLMULQDQ... yes\nchecking whether C compiler accepts -maes... (cached) yes\nchecking whether C compiler accepts -mpclmul... (cached) yes\nchecking whether C compiler accepts -mrdrnd... yes\nchecking for RDRAND... yes\nchecking whether C compiler accepts -mrdrnd... (cached) yes\nchecking for sys/mman.h... yes\nchecking for sys/param.h... yes\nchecking for sys/random.h... yes\nchecking for intrin.h... no\nchecking if _xgetbv() is available... no\nchecking for inline... inline\nchecking whether byte ordering is bigendian... (cached) no\nchecking whether __STDC_LIMIT_MACROS is required... no\nchecking whether we can use inline asm code... yes\nno\nchecking whether we can use x86_64 asm code... yes\nchecking whether we can assemble AVX opcodes... yes\nchecking for 128-bit arithmetic... yes\nchecking for cpuid instruction... yes\nchecking if the .private_extern asm directive is supported... no\nchecking if the .hidden asm directive is supported... yes\nchecking if weak symbols are supported... yes\nchecking if data alignment is required... no\nchecking if atomic operations are supported... yes\nchecking for size_t... yes\nchecking for working alloca.h... yes\nchecking for alloca... yes\nchecking for arc4random... no\nchecking for arc4random_buf... no\nchecking for mmap... yes\nchecking for mlock... yes\nchecking for madvise... yes\nchecking for mprotect... yes\nchecking for raise... yes\nchecking for sysconf... yes\nchecking for getrandom with a standard API... yes\nchecking for getrandom... yes\nchecking for getentropy with a standard API... yes\nchecking for getentropy... yes\nchecking for getpid... yes\nchecking for getauxva... no\nchecking for elf_aux_info... no\nchecking for posix_memalign... yes\nchecking for nanosleep... yes\nchecking for memset_s... no\nchecking for explicit_bzero... yes\nchecking for memset_explicit... no\nchecking for explicit_memset... no\nchecking if gcc/ld supports -Wl,--output-def... no\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating builds/Makefile\nconfig.status: creating contrib/Makefile\nconfig.status: creating dist-build/Makefile\nconfig.status: creating libsodium.pc\nconfig.status: creating libsodium-uninstalled.pc\nconfig.status: creating msvc-scripts/Makefile\nconfig.status: creating src/Makefile\nconfig.status: creating src/libsodium/Makefile\nconfig.status: creating src/libsodium/include/Makefile\nconfig.status: creating src/libsodium/include/sodium/version.h\nconfig.status: creating test/default/Makefile\nconfig.status: creating test/Makefile\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\nMaking check in builds\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/builds'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/builds'\nMaking check in contrib\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/contrib'\nMaking check in dist-build\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/dist-build'\nMaking check in msvc-scripts\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nMaking check in src\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nMaking check in libsodium\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nMaking check in include\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Nothing to be done for 'check'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\n  CC       crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo\n  CC       crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo\n  CC       crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo\n  CC       crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo\n  CC       crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo\n  CC       crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo\n  CC       crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo\n  CC       crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo\n  CC       crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo\n  CC       crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo\n  CC       crypto_auth/libsodium_la-crypto_auth.lo\n  CC       crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo\n  CC       crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo\n  CC       crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo\n  CC       crypto_box/libsodium_la-crypto_box.lo\n  CC       crypto_box/libsodium_la-crypto_box_easy.lo\n  CC       crypto_box/libsodium_la-crypto_box_seal.lo\n  CC       crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo\n  CC       crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo\n  CC       crypto_core/hchacha20/libsodium_la-core_hchacha20.lo\n  CC       crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo\n  CC       crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo\n  CC       crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo\n  CC       crypto_generichash/libsodium_la-crypto_generichash.lo\n  CC       crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo\n  CC       crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo\n  CC       crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo\n  CC       crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo\n  CC       crypto_hash/libsodium_la-crypto_hash.lo\n  CC       crypto_hash/sha256/libsodium_la-hash_sha256.lo\n  CC       crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo\n  CC       crypto_hash/sha512/libsodium_la-hash_sha512.lo\n  CC       crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo\n  CC       crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo\n  CC       crypto_kdf/libsodium_la-crypto_kdf.lo\n  CC       crypto_kx/libsodium_la-crypto_kx.lo\n  CC       crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo\n  CC       crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo\n  CC       crypto_onetimeauth/poly1305/donna/libsodium_la-poly1305_donna.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2-core.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2.lo\n  CC       crypto_pwhash/argon2/libsodium_la-blake2b-long.lo\n  CC       crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo\n  CC       crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo\n  CC       crypto_pwhash/libsodium_la-crypto_pwhash.lo\n  CC       crypto_scalarmult/libsodium_la-crypto_scalarmult.lo\n  CC       crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo\n  CC       crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519.lo\n  CC       crypto_secretbox/libsodium_la-crypto_secretbox.lo\n  CC       crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo\n  CC       crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo\n  CC       crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo\n  CC       crypto_shorthash/libsodium_la-crypto_shorthash.lo\n  CC       crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo\n  CC       crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo\n  CC       crypto_sign/libsodium_la-crypto_sign.lo\n  CC       crypto_sign/ed25519/libsodium_la-sign_ed25519.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-keypair.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-open.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-sign.lo\n  CC       crypto_stream/chacha20/libsodium_la-stream_chacha20.lo\n  CC       crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo\n  CC       crypto_stream/libsodium_la-crypto_stream.lo\n  CC       crypto_stream/salsa20/libsodium_la-stream_salsa20.lo\n  CC       crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo\n  CC       crypto_verify/sodium/libsodium_la-verify.lo\n  CC       randombytes/libsodium_la-randombytes.lo\n  CC       sodium/libsodium_la-codecs.lo\n  CC       sodium/libsodium_la-core.lo\n  CC       sodium/libsodium_la-runtime.lo\n  CC       sodium/libsodium_la-utils.lo\n  CC       sodium/libsodium_la-version.lo\n  CPPAS    crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo\n  CC       crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo\n  CC       crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo\n  CC       crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe51_invert.lo\n  CC       crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe_frombytes_sandy2x.lo\n  CPPAS    crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo\n  CC       crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo\n  CC       crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo\n  CC       crypto_core/ed25519/libsodium_la-core_ed25519.lo\n  CC       crypto_core/ed25519/libsodium_la-core_ristretto255.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo\n  CC       crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo\n  CC       crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo\n  CC       crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo\n  CC       crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo\n  CC       crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo\n  CC       crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo\n  CC       crypto_stream/salsa208/libsodium_la-stream_salsa208.lo\n  CC       crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo\n  CC       randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo\n  CC       crypto_aead/aes256gcm/aesni/libaesni_la-aead_aes256gcm_aesni.lo\n  CC       crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo\n  CC       crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo\n  CCLD     libsse41.la\n  CC       crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo\n  CC       crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo\n  CC       randombytes/internal/librdrand_la-randombytes_internal_random.lo\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libssse3.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libavx512f.la\n  CCLD     libsse2.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libaesni.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     librdrand.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libavx2.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libsodium.la\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nmake[2]: Nothing to be done for 'check-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nMaking check in test\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nMaking check in default\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake  aead_aes256gcm aead_aes256gcm2 aead_chacha20poly1305 aead_chacha20poly13052 aead_xchacha20poly1305 auth auth2 auth3 auth5 auth6 auth7 box box2 box7 box8 box_easy box_easy2 box_seal box_seed chacha20 codecs core1 core2 core3 core4 core5 core6 ed25519_convert generichash generichash2 generichash3 hash hash3 kdf keygen kx metamorphic misuse onetimeauth onetimeauth2 onetimeauth7 pwhash_argon2i pwhash_argon2id randombytes scalarmult scalarmult2 scalarmult5 scalarmult6 scalarmult7 scalarmult8 secretbox secretbox2 secretbox7 secretbox8 secretbox_easy secretbox_easy2 secretstream shorthash sign sodium_core sodium_utils sodium_version stream stream2 stream3 stream4 verify1 sodium_utils2 sodium_utils3 core_ed25519 core_ristretto255 pwhash_scrypt pwhash_scrypt_ll scalarmult_ed25519 scalarmult_ristretto255 siphashx24 xchacha20\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\n  CC       aead_aes256gcm.o\n  CC       aead_aes256gcm2.o\n  CC       aead_chacha20poly1305.o\n  CC       aead_chacha20poly13052.o\n  CC       aead_xchacha20poly1305.o\n  CC       auth.o\n  CC       auth2.o\n  CC       auth3.o\n  CC       auth5.o\n  CC       auth6.o\n  CC       auth7.o\n  CC       box.o\n  CC       box2.o\n  CC       box7.o\n  CC       box8.o\n  CC       box_easy.o\n  CC       box_easy2.o\n  CC       box_seal.o\n  CC       box_seed.o\n  CC       chacha20.o\n  CC       codecs.o\n  CC       core1.o\n  CC       core2.o\n  CC       core3.o\n  CC       core5.o\n  CC       core4.o\n  CC       core6.o\n  CC       ed25519_convert.o\n  CC       generichash.o\n  CC       generichash2.o\n  CC       generichash3.o\n  CC       hash.o\n  CC       hash3.o\n  CC       kdf.o\n  CC       keygen.o\n  CC       kx.o\n  CC       metamorphic.o\n  CC       misuse.o\n  CC       onetimeauth.o\n  CC       onetimeauth2.o\n  CC       onetimeauth7.o\n  CC       pwhash_argon2i.o\n  CC       pwhash_argon2id.o\n  CC       randombytes.o\n  CC       scalarmult.o\n  CC       scalarmult2.o\n  CC       scalarmult5.o\n  CC       scalarmult6.o\n  CC       scalarmult7.o\n  CC       scalarmult8.o\n  CC       secretbox.o\n  CC       secretbox2.o\n  CC       secretbox7.o\n  CC       secretbox8.o\n  CC       secretbox_easy.o\n  CC       secretbox_easy2.o\n  CC       secretstream.o\n  CC       shorthash.o\n  CC       sign.o\n  CC       sodium_core.o\n\u001b[91mpwhash_argon2i.c: In function 'str_tests':\n\u001b[0m\u001b[91mpwhash_argon2i.c:293:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  293 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  294 |                                          \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  295 |                                          \"password\", 0x100000000ULL) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:293:9: note: referencing argument 1 of type 'const char[128]'\nIn file included from ../../src/libsodium/include/sodium/crypto_pwhash.h:6,\n                 from ../../src/libsodium/include/sodium.h:32,\n                 from cmptest.h:17,\n                 from pwhash_argon2i.c:3:\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:298:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  298 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  299 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  300 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:298:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  303 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  304 |                                          \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  305 |                                          \"password\", strlen(\"password\")) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:308:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  308 |     if (crypto_pwhash_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  310 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:308:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:313:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  313 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  315 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:313:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:318:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  318 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  320 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:318:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:323:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  323 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  325 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:323:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  328 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  330 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  331 |             \"password\", strlen(\"password\")) != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:328:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:334:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  334 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  335 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  336 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  337 |             \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:334:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:340:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  340 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  341 |             \"$Argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  342 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:340:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:346:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 95 [-Wstringop-overread]\n  346 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  347 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:346:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c: In function 'str_tests':\npwhash_argon2i.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVla~=mRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  355 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  358 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  360 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYI~=U+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  361 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:307:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  307 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  308 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"password\", 0x100000000ULL) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:307:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: note: referencing argument 1 of type 'const char[128]'\nIn file included from ../../src/libsodium/include/sodium.h:32,\n                 from cmptest.h:17,\n                 from pwhash_argon2id.c:3:\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:312:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  312 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  313 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:312:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  317 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  318 |                                  \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from cmptest.h:9:\npwhash_argon2i.c:378:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  378 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:378:12: note: referencing argument 1 of type 'const char[128]'\npwhash_argon2id.c:322:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 82 [-Wstringop-overread]\n  322 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  323 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:322:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from ../../src/libsodium/include/sodium/crypto_pwhash.h:7:\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  327 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  328 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:390:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  390 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:390:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  332 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  333 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  334 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:337:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 87 [-Wstringop-overread]\n  337 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  338 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  339 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:337:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  342 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  344 |                                  \"password\", strlen(\"password\")) != 0) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  347 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |                                  \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\"$Argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:357:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  357 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=2$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  358 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:357:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from cmptest.h:9:\npwhash_argon2id.c:376:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  376 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:376:12: note: referencing argument 1 of type 'const char[128]'\nIn file included from ../../src/libsodium/include/sodium/crypto_pwhash.h:6:\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:388:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  388 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:388:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CC       sodium_utils.o\n  CC       sodium_version.o\n  CC       stream.o\n  CC       stream2.o\n  CC       stream3.o\n  CC       stream4.o\n  CC       verify1.o\n  CC       sodium_utils2.o\n  CC       sodium_utils3.o\n  CC       core_ed25519.o\n  CC       core_ristretto255.o\n  CC       pwhash_scrypt.o\n  CC       pwhash_scrypt_ll.o\n  CC       scalarmult_ed25519.o\n  CC       scalarmult_ristretto255.o\n  CC       siphashx24.o\n  CC       xchacha20.o\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:293:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  293 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  294 |                                          \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  295 |                                          \"password\", 0x100000000ULL) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:293:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:298:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  298 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  299 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  300 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:298:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:303:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  303 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  304 |                                          \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  305 |                                          \"password\", strlen(\"password\")) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:303:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:308:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  308 |     if (crypto_pwhash_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  310 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:308:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:313:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  313 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  315 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:313:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:318:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  318 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  320 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:318:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:323:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  323 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  325 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:323:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  328 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  330 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  331 |             \"password\", strlen(\"password\")) != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:328:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:334:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  334 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  335 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  336 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  337 |             \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:334:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:340:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  340 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  341 |             \"$Argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  342 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:340:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:346:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 95 [-Wstringop-overread]\n  346 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  347 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:346:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVla~=mRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  355 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  358 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  360 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYI~=U+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  361 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:378:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  378 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:378:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:390:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  390 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:390:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:307:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  307 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  308 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"password\", 0x100000000ULL) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:307:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:312:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  312 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  313 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:312:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  317 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  318 |                                  \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:317:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:322:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 82 [-Wstringop-overread]\n  322 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  323 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:322:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:327:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  327 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  328 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:332:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  332 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  333 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  334 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:337:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 87 [-Wstringop-overread]\n  337 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  338 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  339 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:337:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:342:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  342 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  344 |                                  \"password\", strlen(\"password\")) != 0) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:347:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  347 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |                                  \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\"$Argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:357:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  357 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=2$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  358 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:357:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:376:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  376 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:376:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:388:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  388 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:388:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     aead_aes256gcm\n  CCLD     aead_aes256gcm2\n  CCLD     aead_chacha20poly13052\n  CCLD     aead_xchacha20poly1305\n  CCLD     auth\n  CCLD     auth2\n  CCLD     auth3\n  CCLD     auth5\n  CCLD     auth6\n  CCLD     auth7\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:293:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  293 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  294 |                                          \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  295 |                                          \"password\", 0x100000000ULL) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:293:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:298:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  298 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  299 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  300 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:298:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  303 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  304 |                                          \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  305 |                                          \"password\", strlen(\"password\")) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:303:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:308:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  308 |     if (crypto_pwhash_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  310 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:308:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:313:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  313 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  315 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:313:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:318:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  318 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  320 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:318:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:323:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  323 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  325 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:323:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:328:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  328 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  330 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  331 |             \"password\", strlen(\"password\")) != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:334:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  334 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  335 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  336 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  337 |             \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:334:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:340:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  340 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  341 |             \"$Argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  342 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:340:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:346:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 95 [-Wstringop-overread]\n  346 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  347 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:346:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVla~=mRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  355 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     box\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  358 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  360 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYI~=U+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  361 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:358:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:378:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  378 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:378:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:390:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  390 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:390:12: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     box2\n  CCLD     box7\n  CCLD     box8\n  CCLD     box_easy\n  CCLD     box_easy2\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:307:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  307 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  308 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"password\", 0x100000000ULL) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:307:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:312:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  312 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  313 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:312:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  317 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  318 |                                  \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:322:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 82 [-Wstringop-overread]\n  322 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  323 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:322:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:327:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  327 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  328 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:332:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  332 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  333 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  334 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:337:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 87 [-Wstringop-overread]\n  337 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  338 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  339 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:337:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:342:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  342 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  344 |                                  \"password\", strlen(\"password\")) != 0) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:347:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  347 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |                                  \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\"$Argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:357:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  357 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=2$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  358 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:357:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:376:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  376 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:376:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:388:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  388 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:388:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     box_seal\n\u001b[91mIn file included from cmptest.h:9,\n                 from pwhash_scrypt.c:3:\npwhash_scrypt.c: In function 'str_tests':\n\u001b[0m\u001b[91mpwhash_scrypt.c:356:12: warning: 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash' reading 102 bytes from a region of size 1 [-Wstringop-overread]\n  356 |     assert(crypto_pwhash_scryptsalsa208sha256_str_needs_rehash\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  357 |            (\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_scrypt.c:356:12: note: referencing argument 1 of type 'const char[102]'\n\u001b[0m  CCLD     box_seed\n\u001b[91mIn file included from ../../src/libsodium/include/sodium.h:63,\n                 from cmptest.h:17:\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h:111:5: note: in a call to function 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash'\n  111 | int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     chacha20\n  CCLD     codecs\n  CCLD     core1\n  CCLD     core2\n  CCLD     core3\n  CCLD     core4\n  CCLD     core5\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_scrypt.c:369:5:\npwhash_scrypt.c:356:12: warning: 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash' reading 102 bytes from a region of size 1 [-Wstringop-overread]\n  356 |     assert(crypto_pwhash_scryptsalsa208sha256_str_needs_rehash\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  357 |            (\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_scrypt.c:356:12: note: referencing argument 1 of type 'const char[102]'\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h:111:5: note: in a call to function 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash'\n  111 | int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     core6\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_scrypt.c:369:5:\npwhash_scrypt.c:356:12: warning: 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash' reading 102 bytes from a region of size 1 [-Wstringop-overread]\n  356 |     assert(crypto_pwhash_scryptsalsa208sha256_str_needs_rehash\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  357 |            (\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_scrypt.c:356:12: note: referencing argument 1 of type 'const char[102]'\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h:111:5: note: in a call to function 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash'\n  111 | int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     ed25519_convert\n  CCLD     generichash\n  CCLD     generichash2\n  CCLD     generichash3\n  CCLD     hash\n  CCLD     hash3\n  CCLD     kdf\n  CCLD     keygen\n  CCLD     kx\n  CCLD     metamorphic\n  CCLD     misuse\n  CCLD     onetimeauth\n  CCLD     onetimeauth2\n  CCLD     onetimeauth7\n  CCLD     pwhash_argon2i\n  CCLD     pwhash_argon2id\n  CCLD     randombytes\n  CCLD     scalarmult\n  CCLD     scalarmult2\n  CCLD     scalarmult5\n  CCLD     scalarmult6\n  CCLD     scalarmult7\n  CCLD     scalarmult8\n  CCLD     secretbox\n  CCLD     secretbox2\n  CCLD     secretbox7\n  CCLD     secretbox8\n  CCLD     secretbox_easy\n  CCLD     secretbox_easy2\n  CCLD     secretstream\n  CCLD     shorthash\n  CCLD     sodium_core\n  CCLD     sodium_utils\n  CCLD     sodium_version\n  CCLD     stream\n  CCLD     stream2\n  CCLD     stream3\n  CCLD     stream4\n  CCLD     verify1\n  CCLD     sodium_utils2\n  CCLD     sodium_utils3\n  CCLD     core_ed25519\n  CCLD     core_ristretto255\n  CCLD     pwhash_scrypt\n  CCLD     pwhash_scrypt_ll\n  CCLD     scalarmult_ed25519\n  CCLD     scalarmult_ristretto255\n  CCLD     siphashx24\n  CCLD     xchacha20\n  CCLD     aead_chacha20poly1305\n  CCLD     sign\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake  check-TESTS\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[4]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nPASS: aead_xchacha20poly1305\nPASS: aead_chacha20poly1305\nPASS: auth3\nPASS: auth2\nPASS: auth\nPASS: aead_aes256gcm2\nPASS: box2\nPASS: box\nPASS: box_easy\nPASS: auth6\nPASS: aead_chacha20poly13052\nPASS: core2\nPASS: box_seed\nPASS: auth7\nPASS: core1\nPASS: core5\nPASS: box_seal\nPASS: auth5\nPASS: generichash2\nPASS: core6\nPASS: kdf\nPASS: core4\nPASS: generichash\nPASS: hash\nPASS: hash3\nPASS: generichash3\nPASS: keygen\nPASS: kx\nPASS: misuse\nPASS: box_easy2\nPASS: onetimeauth\nPASS: chacha20\nPASS: codecs\nPASS: aead_aes256gcm\nPASS: scalarmult\nPASS: scalarmult5\nPASS: scalarmult6\nPASS: onetimeauth2\nPASS: scalarmult7\nPASS: scalarmult2\nPASS: shorthash\nPASS: scalarmult8\nPASS: secretbox\nPASS: secretbox_easy\nPASS: sodium_core\nPASS: secretbox_easy2\nPASS: secretbox2\nPASS: stream4\nPASS: sodium_version\nPASS: secretstream\nPASS: ed25519_convert\nPASS: onetimeauth7\nPASS: secretbox7\nPASS: stream3\nPASS: sodium_utils3\nPASS: scalarmult_ed25519\nPASS: siphashx24\nPASS: xchacha20\nPASS: box7\nPASS: scalarmult_ristretto255\nPASS: core3\nPASS: secretbox8\nPASS: stream2\nPASS: sign\nPASS: pwhash_scrypt_ll\nPASS: pwhash_argon2id\nPASS: randombytes\nPASS: sodium_utils\nPASS: pwhash_argon2i\nPASS: stream\nPASS: metamorphic\nPASS: box8\nPASS: sodium_utils2\nPASS: verify1\nPASS: core_ed25519\nPASS: core_ristretto255\nPASS: pwhash_scrypt\n============================================================================\nTestsuite summary for libsodium 1.0.18\n============================================================================\n# TOTAL: 77\n# PASS:  77\n# SKIP:  0\n# XFAIL: 0\n# FAIL:  0\n# XPASS: 0\n# ERROR: 0\n============================================================================\nmake[4]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nmake[2]: Nothing to be done for 'check-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable'\nmake[1]: Nothing to be done for 'check-am'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable'\nMaking install in builds\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/builds'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/builds'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/builds'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/builds'\nMaking install in contrib\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/contrib'\nMaking install in dist-build\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/dist-build'\nMaking install in msvc-scripts\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nMaking install in src\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nMaking install in libsodium\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nMaking install in include\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[4]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[4]: Nothing to be done for 'install-exec-am'.\n ../../.././build-aux/install-sh -c -d '/usr/local/include'\n ../../.././build-aux/install-sh -c -d '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium/core.h sodium/crypto_aead_aes256gcm.h sodium/crypto_aead_chacha20poly1305.h sodium/crypto_aead_xchacha20poly1305.h sodium/crypto_auth.h sodium/crypto_auth_hmacsha256.h sodium/crypto_auth_hmacsha512.h sodium/crypto_auth_hmacsha512256.h sodium/crypto_box.h sodium/crypto_box_curve25519xchacha20poly1305.h sodium/crypto_box_curve25519xsalsa20poly1305.h sodium/crypto_core_ed25519.h sodium/crypto_core_ristretto255.h sodium/crypto_core_hchacha20.h sodium/crypto_core_hsalsa20.h sodium/crypto_core_salsa20.h sodium/crypto_core_salsa2012.h sodium/crypto_core_salsa208.h sodium/crypto_generichash.h sodium/crypto_generichash_blake2b.h sodium/crypto_hash.h sodium/crypto_hash_sha256.h sodium/crypto_hash_sha512.h sodium/crypto_kdf.h sodium/crypto_kdf_blake2b.h sodium/crypto_kx.h sodium/crypto_onetimeauth.h sodium/crypto_onetimeauth_poly1305.h sodium/crypto_pwhash.h sodium/crypto_pwhash_argon2i.h sodium/crypto_pwhash_argon2id.h sodium/crypto_pwhash_scryptsalsa208sha256.h sodium/crypto_scalarmult.h sodium/crypto_scalarmult_curve25519.h sodium/crypto_scalarmult_ed25519.h sodium/crypto_scalarmult_ristretto255.h sodium/crypto_secretbox.h sodium/crypto_secretbox_xchacha20poly1305.h sodium/crypto_secretbox_xsalsa20poly1305.h sodium/crypto_secretstream_xchacha20poly1305.h '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium.h '/usr/local/include/.'\n ../../.././build-aux/install-sh -c -d '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium/crypto_shorthash.h sodium/crypto_shorthash_siphash24.h sodium/crypto_sign.h sodium/crypto_sign_ed25519.h sodium/crypto_sign_edwards25519sha512batch.h sodium/crypto_stream.h sodium/crypto_stream_chacha20.h sodium/crypto_stream_salsa20.h sodium/crypto_stream_salsa2012.h sodium/crypto_stream_salsa208.h sodium/crypto_stream_xchacha20.h sodium/crypto_stream_xsalsa20.h sodium/crypto_verify_16.h sodium/crypto_verify_32.h sodium/crypto_verify_64.h sodium/export.h sodium/randombytes.h sodium/randombytes_internal_random.h sodium/randombytes_sysrandom.h sodium/runtime.h sodium/utils.h '/usr/local/include/sodium'\n ../../.././build-aux/install-sh -c -d '/usr/local/include'\n ../../.././build-aux/install-sh -c -d '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium/version.h '/usr/local/include/sodium'\nmake[4]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[4]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\n ../.././build-aux/install-sh -c -d '/usr/local/lib'\n /bin/sh ../../libtool   --mode=install /usr/bin/install -c   libsodium.la '/usr/local/lib'\nlibtool: install: /usr/bin/install -c .libs/libsodium.so.23.3.0 /usr/local/lib/libsodium.so.23.3.0\nlibtool: install: (cd /usr/local/lib && { ln -s -f libsodium.so.23.3.0 libsodium.so.23 || { rm -f libsodium.so.23 && ln -s libsodium.so.23.3.0 libsodium.so.23; }; })\nlibtool: install: (cd /usr/local/lib && { ln -s -f libsodium.so.23.3.0 libsodium.so || { rm -f libsodium.so && ln -s libsodium.so.23.3.0 libsodium.so; }; })\nlibtool: install: /usr/bin/install -c .libs/libsodium.lai /usr/local/lib/libsodium.la\nlibtool: install: /usr/bin/install -c .libs/libsodium.a /usr/local/lib/libsodium.a\nlibtool: install: chmod 644 /usr/local/lib/libsodium.a\nlibtool: install: ranlib /usr/local/lib/libsodium.a\nlibtool: finish: PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin\" ldconfig -n /usr/local/lib\n----------------------------------------------------------------------\nLibraries have been installed in:\n   /usr/local/lib\n\nIf you ever happen to want to link against installed libraries\nin a given directory, LIBDIR, you must either use libtool, and\nspecify the full pathname of the library, or use the '-LLIBDIR'\nflag during linking and do at least one of the following:\n   - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable\n     during execution\n   - add LIBDIR to the 'LD_RUN_PATH' environment variable\n     during linking\n   - use the '-Wl,-rpath -Wl,LIBDIR' linker flag\n\nSee any operating system documentation about shared libraries for\nmore information, such as the ld(1) and ld.so(8) manual pages.\n----------------------------------------------------------------------\nmake[4]: Nothing to be done for 'install-data-am'.\nmake[4]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nmake[3]: Nothing to be done for 'install-exec-am'.\nmake[3]: Nothing to be done for 'install-data-am'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nMaking install in test\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nMaking install in default\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[3]: Nothing to be done for 'install-exec-am'.\nmake[3]: Nothing to be done for 'install-data-am'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nmake[3]: Nothing to be done for 'install-exec-am'.\nmake[3]: Nothing to be done for 'install-data-am'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable'\nmake[2]: Nothing to be done for 'install-exec-am'.\n ./build-aux/install-sh -c -d '/usr/local/lib/pkgconfig'\n /usr/bin/install -c -m 644 libsodium.pc '/usr/local/lib/pkgconfig'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable'\nRemoving intermediate container 560371bdfe74\n ---> d40a81842a37\nStep 6/11 : COPY ./ ./\n ---> 2bb0631263d3\nStep 7/11 : RUN mkdir build && cd build && cmake -D BUILD_STATIC_EXECUTABLES=1 .. && make -j$(nproc)\n ---> Running in 3cf9784ac9c7\n\u001b[91mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n  Compatibility with CMake < 2.8.12 will be removed from a future version of\n  CMake.\n\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n  CMake that the project does not need compatibility with older versions.\n\n\n\u001b[0m-- The C compiler identification is GNU 12.2.1\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"1.9.3\") \n-- Checking for module 'libsodium'\n--   Found libsodium, version 1.0.18\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n-- Found Threads: TRUE  \n-- Configuring done\n-- Generating done\n-- Build files have been written to: /usr/src/minisign/build\n[ 20%] Building C object CMakeFiles/minisign.dir/src/get_line.c.o\n[ 40%] Building C object CMakeFiles/minisign.dir/src/base64.c.o\n[ 60%] Building C object CMakeFiles/minisign.dir/src/helpers.c.o\n[ 80%] Building C object CMakeFiles/minisign.dir/src/minisign.c.o\n[100%] Linking C executable minisign\n[100%] Built target minisign\nRemoving intermediate container 3cf9784ac9c7\n ---> 69c9e31b03ec\nStep 8/11 : RUN upx --lzma build/minisign ||:\n ---> Running in 2eda956efe89\n                       Ultimate Packer for eXecutables\n                          Copyright (C) 1996 - 2022\nUPX 4.0.1       Markus Oberhumer, Laszlo Molnar & John Reiser   Nov 16th 2022\n\n        File size         Ratio      Format      Name\n   --------------------   ------   -----------   -----------\n    256560 ->    123992   48.33%   linux/amd64   minisign\n\nPacked 1 file.\nRemoving intermediate container 2eda956efe89\n ---> 2f1d81a6e01d\nStep 9/11 : FROM scratch\n ---> \nStep 10/11 : COPY --from=build /usr/src/minisign/build/minisign /usr/local/bin/\n ---> 930e81d91e0e\nStep 11/11 : ENTRYPOINT [\"/usr/local/bin/minisign\"]\n ---> Running in 7e97c4954a18\nRemoving intermediate container 7e97c4954a18\n ---> 8b03da718ba6\nSuccessfully built 8b03da718ba6\nSuccessfully tagged minisign:latest\n","stderr":"","imageSize":123992},"repair":{"violations":[{"name":"curlUseFlagF","position":{"start":6,"end":6,"columnStart":4,"columnEnd":72}}],"repairedDockerfile":"FROM alpine:latest as build\n\nWORKDIR /usr/src/minisign\n\nRUN apk add --no-cache build-base cmake curl pkgconfig\nRUN apk add --no-cache upx ||:\nRUN curl -f https://download.libsodium.org/libsodium/releases/LATEST.tar.gz | tar xzvf - && cd libsodium-stable && env CFLAGS=\"-Os\" CPPFLAGS=\"-DED25519_NONDETERMINISTIC=1\" ./configure --disable-dependency-tracking && make -j$(nproc) check && make install && cd .. && rm -fr libsodium-stable\n\nCOPY ./ ./\nRUN mkdir build && cd build && cmake -D BUILD_STATIC_EXECUTABLES=1 .. && make -j$(nproc)\nRUN upx --lzma build/minisign ||:\n\nFROM scratch\nCOPY --from=build /usr/src/minisign/build/minisign /usr/local/bin/\nENTRYPOINT [\"/usr/local/bin/minisign\"]\n"},"repairedBuild":{"startTimestamp":1672640854812,"endTimestamp":1672640909170,"error":null,"stdout":"Sending build context to Docker daemon  78.85kB\r\r\nStep 1/11 : FROM alpine:latest as build\n ---> 49176f190c7e\nStep 2/11 : WORKDIR /usr/src/minisign\n ---> Running in f2d61e1451c9\nRemoving intermediate container f2d61e1451c9\n ---> 53dc12e4e7f8\nStep 3/11 : RUN apk add --no-cache build-base cmake curl pkgconfig\n ---> Running in 55790c60f047\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/38) Installing libgcc (12.2.1_git20220924-r4)\n(2/38) Installing libstdc++ (12.2.1_git20220924-r4)\n(3/38) Installing binutils (2.39-r2)\n(4/38) Installing libmagic (5.43-r0)\n(5/38) Installing file (5.43-r0)\n(6/38) Installing libgomp (12.2.1_git20220924-r4)\n(7/38) Installing libatomic (12.2.1_git20220924-r4)\n(8/38) Installing gmp (6.2.1-r2)\n(9/38) Installing isl25 (0.25-r0)\n(10/38) Installing mpfr4 (4.1.0-r0)\n(11/38) Installing mpc1 (1.2.1-r1)\n(12/38) Installing gcc (12.2.1_git20220924-r4)\n(13/38) Installing libstdc++-dev (12.2.1_git20220924-r4)\n(14/38) Installing musl-dev (1.2.3-r4)\n(15/38) Installing libc-dev (0.7.2-r3)\n(16/38) Installing g++ (12.2.1_git20220924-r4)\n(17/38) Installing make (4.3-r1)\n(18/38) Installing fortify-headers (1.1-r1)\n(19/38) Installing patch (2.7.6-r8)\n(20/38) Installing build-base (0.5-r3)\n(21/38) Installing libacl (2.3.1-r1)\n(22/38) Installing libbz2 (1.0.8-r4)\n(23/38) Installing libexpat (2.5.0-r0)\n(24/38) Installing lz4-libs (1.9.4-r1)\n(25/38) Installing xz-libs (5.2.9-r0)\n(26/38) Installing zstd-libs (1.5.2-r9)\n(27/38) Installing libarchive (3.6.1-r2)\n(28/38) Installing ca-certificates (20220614-r3)\n(29/38) Installing brotli-libs (1.0.9-r9)\n(30/38) Installing nghttp2-libs (1.51.0-r0)\n(31/38) Installing libcurl (7.87.0-r0)\n(32/38) Installing ncurses-terminfo-base (6.3_p20221119-r0)\n(33/38) Installing ncurses-libs (6.3_p20221119-r0)\n(34/38) Installing rhash-libs (1.4.3-r1)\n(35/38) Installing libuv (1.44.2-r0)\n(36/38) Installing cmake (3.24.3-r0)\n(37/38) Installing curl (7.87.0-r0)\n(38/38) Installing pkgconf (1.9.3-r0)\nExecuting busybox-1.35.0-r29.trigger\nExecuting ca-certificates-20220614-r3.trigger\nOK: 303 MiB in 53 packages\nRemoving intermediate container 55790c60f047\n ---> f2b6d6c9c470\nStep 4/11 : RUN apk add --no-cache upx ||:\n ---> Running in 7ee976a0e093\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/1) Installing upx (4.0.1-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 305 MiB in 54 packages\nRemoving intermediate container 7ee976a0e093\n ---> 79a876b0ac7d\nStep 5/11 : RUN curl -f https://download.libsodium.org/libsodium/releases/LATEST.tar.gz | tar xzvf - && cd libsodium-stable && env CFLAGS=\"-Os\" CPPFLAGS=\"-DED25519_NONDETERMINISTIC=1\" ./configure --disable-dependency-tracking && make -j$(nproc) check && make install && cd .. && rm -fr libsodium-stable\n ---> Running in fa892bf927fc\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Uplo\u001b[0m\u001b[91mad   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0\u001b[0m\u001b[91m      0      0 --:--:-- --:--:-- --:-\u001b[0m\u001b[91m-:--     0\u001b[0mlibsodium-stable\nlibsodium-stable/.github\nlibsodium-stable/.github/workflows\nlibsodium-stable/.github/workflows/ci.yml\nlibsodium-stable/.github/workflows/codeql-analysis.yml\nlibsodium-stable/.github/workflows/dotnet-core.yml\nlibsodium-stable/.gitignore\nlibsodium-stable/AUTHORS\nlibsodium-stable/ChangeLog\nlibsodium-stable/LICENSE\nlibsodium-stable/Makefile.am\nlibsodium-stable/Makefile.in\nlibsodium-stable/README.markdown\nlibsodium-stable/THANKS\nlibsodium-stable/aclocal.m4\nlibsodium-stable/appveyor.yml\nlibsodium-stable/autogen.sh\nlibsodium-stable/azure-pipelines.yml\nlibsodium-stable/build-aux\nlibsodium-stable/build-aux/compile\nlibsodium-stable/build-aux/config.guess\nlibsodium-stable/build-aux/config.sub\nlibsodium-stable/build-aux/depcomp\nlibsodium-stable/build-aux/install-sh\nlibsodium-stable/build-aux/ltmain.sh\nlibsodium-stable/build-aux/missing\nlibsodium-stable/build-aux/test-driver\nlibsodium-stable/build.zig\nlibsodium-stable/builds\nlibsodium-stable/builds/.gitignore\nlibsodium-stable/builds/Makefile.am\nlibsodium-stable/builds/Makefile.in\nlibsodium-stable/builds/msvc\nlibsodium-stable/builds/msvc/build\nlibsodium-stable/builds/msvc/build/buildall.bat\nlibsodium-stable/builds/msvc/build/buildbase.bat\nlibsodium-stable/builds/msvc/properties\nlibsodium-stable/builds/msvc/properties/Common.props\nlibsodium-stable/builds/msvc/properties/DLL.props\nlibsodium-stable/builds/msvc/properties/Debug.props\nlibsodium-stable/builds/msvc/properties/DebugDEXE.props\nlibsodium-stable/builds/msvc/properties/DebugDLL.props\nlibsodium-stable/builds/msvc/properties/DebugLEXE.props\nlibsodium-stable/builds/msvc/properties/DebugLIB.props\nlibsodium-stable/builds/msvc/properties/DebugLTCG.props\nlibsodium-stable/builds/msvc/properties/DebugSEXE.props\nlibsodium-stable/builds/msvc/properties/EXE.props\nlibsodium-stable/builds/msvc/properties/LIB.props\nlibsodium-stable/builds/msvc/properties/LTCG.props\nlibsodium-stable/builds/msvc/properties/Link.props\nlibsodium-stable/builds/msvc/properties/Messages.props\nlibsodium-stable/builds/msvc/properties/Output.props\nlibsodium-stable/builds/msvc/properties/Release.props\nlibsodium-stable/builds/msvc/properties/ReleaseDEXE.props\nlibsodium-stable/builds/msvc/properties/ReleaseDLL.props\nlibsodium-stable/builds/msvc/properties/ReleaseLEXE.props\nlibsodium-stable/builds/msvc/properties/ReleaseLIB.props\nlibsodium-stable/builds/msvc/properties/ReleaseLTCG.props\nlibsodium-stable/builds/msvc/properties/ReleaseSEXE.props\nlibsodium-stable/builds/msvc/properties/Win32.props\nlibsodium-stable/builds/msvc/properties/x64.props\nlibsodium-stable/builds/msvc/resource.h\nlibsodium-stable/builds/msvc/resource.rc\nlibsodium-stable/builds/msvc/version.h\nlibsodium-stable/builds/msvc/vs2010\nlibsodium-stable/builds/msvc/vs2010/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2010/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2010/libsodium.sln\nlibsodium-stable/builds/msvc/vs2010/libsodium\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2010/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2012\nlibsodium-stable/builds/msvc/vs2012/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2012/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2012/libsodium.sln\nlibsodium-stable/builds/msvc/vs2012/libsodium\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2012/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2013\nlibsodium-stable/builds/msvc/vs2013/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2013/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2013/libsodium.sln\nlibsodium-stable/builds/msvc/vs2013/libsodium\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2013/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2015\nlibsodium-stable/builds/msvc/vs2015/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2015/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2015/libsodium.sln\nlibsodium-stable/builds/msvc/vs2015/libsodium\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2015/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2017\nlibsodium-stable/builds/msvc/vs2017/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2017/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2017/libsodium.sln\nlibsodium-stable/builds/msvc/vs2017/libsodium\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2017/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2019\nlibsodium-stable/builds/msvc/vs2019/libsodium.import.props\u001b[91m\r 13 1829k   13  239k    0     0   47\u001b[0m\u001b[91m7k      0  0\u001b[0m\u001b[91m:00:03\u001b[0m\u001b[91m --:--\u001b[0m\u001b[91m:--\u001b[0m\u001b[91m  0:00:\u001b[0m\u001b[91m03 \u001b[0m\u001b[91m 477k\u001b[0m\nlibsodium-stable/builds/msvc/vs2019/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2019/libsodium.sln\nlibsodium-stable/builds/msvc/vs2019/libsodium\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2019/libsodium/libsodium.xml\nlibsodium-stable/builds/msvc/vs2022\nlibsodium-stable/builds/msvc/vs2022/libsodium.import.props\nlibsodium-stable/builds/msvc/vs2022/libsodium.import.xml\nlibsodium-stable/builds/msvc/vs2022/libsodium.sln\nlibsodium-stable/builds/msvc/vs2022/libsodium\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.props\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.vcxproj\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.vcxproj.filters\nlibsodium-stable/builds/msvc/vs2022/libsodium/libsodium.xml\nlibsodium-stable/configure\nlibsodium-stable/configure.ac\nlibsodium-stable/contrib\nlibsodium-stable/contrib/Findsodium.cmake\nlibsodium-stable/contrib/Makefile.am\nlibsodium-stable/contrib/Makefile.in\nlibsodium-stable/dist-build\nlibsodium-stable/dist-build/Makefile.am\nlibsodium-stable/dist-build/Makefile.in\nlibsodium-stable/dist-build/android-aar.sh\nlibsodium-stable/dist-build/android-arm.sh\nlibsodium-stable/dist-build/android-armv7-a.sh\nlibsodium-stable/dist-build/android-armv8-a.sh\nlibsodium-stable/dist-build/android-build.sh\nlibsodium-stable/dist-build/android-mips32.sh\nlibsodium-stable/dist-build/android-mips64.sh\nlibsodium-stable/dist-build/android-x86.sh\nlibsodium-stable/dist-build/android-x86_64.sh\nlibsodium-stable/dist-build/apple-xcframework.sh\nlibsodium-stable/dist-build/emscripten-symbols.def\nlibsodium-stable/dist-build/emscripten.sh\nlibsodium-stable/dist-build/generate-emscripten-symbols.sh\nlibsodium-stable/dist-build/ios.sh\nlibsodium-stable/dist-build/msys2-win32.sh\nlibsodium-stable/dist-build/msys2-win64.sh\nlibsodium-stable/dist-build/osx.sh\nlibsodium-stable/dist-build/wasm32-wasi.sh\nlibsodium-stable/dist-build/watchos.sh\nlibsodium-stable/lgtm.yml\nlibsodium-stable/libsodium-uninstalled.pc.in\nlibsodium-stable/libsodium.pc.in\nlibsodium-stable/m4\nlibsodium-stable/m4/ax_add_fortify_source.m4\nlibsodium-stable/m4/ax_check_catchable_abrt.m4\nlibsodium-stable/m4/ax_check_catchable_segv.m4\nlibsodium-stable/m4/ax_check_compile_flag.m4\nlibsodium-stable/m4/ax_check_define.m4\nlibsodium-stable/m4/ax_check_gnu_make.m4\nlibsodium-stable/m4/ax_check_link_flag.m4\nlibsodium-stable/m4/ax_pthread.m4\nlibsodium-stable/m4/ax_tls.m4\nlibsodium-stable/m4/ax_valgrind_check.m4\nlibsodium-stable/m4/ld-output-def.m4\nlibsodium-stable/m4/libtool.m4\nlibsodium-stable/m4/ltoptions.m4\nlibsodium-stable/m4/ltsugar.m4\nlibsodium-stable/m4/ltversion.m4\nlibsodium-stable/m4/lt~obsolete.m4\nlibsodium-stable/libsodium.sln\nlibsodium-stable/libsodium.vcxproj\nlibsodium-stable/libsodium.vcxproj.filters\nlibsodium-stable/logo.png\nlibsodium-stable/msvc-scripts\nlibsodium-stable/msvc-scripts/Makefile.am\nlibsodium-stable/msvc-scripts/Makefile.in\nlibsodium-stable/msvc-scripts/process.bat\nlibsodium-stable/msvc-scripts/rep.vbs\nlibsodium-stable/msvc-scripts/sodium.props\nlibsodium-stable/packaging\nlibsodium-stable/packaging/dotnet-core\nlibsodium-stable/packaging/dotnet-core/libsodium.pkgproj\nlibsodium-stable/packaging/dotnet-core/test.cs\nlibsodium-stable/packaging/nuget\nlibsodium-stable/packaging/nuget/.gitignore\nlibsodium-stable/packaging/nuget/package.bat\nlibsodium-stable/packaging/nuget/package.config\nlibsodium-stable/packaging/nuget/package.gsl\nlibsodium-stable/regen-msvc\nlibsodium-stable/regen-msvc/libsodium.vcxproj\nlibsodium-stable/regen-msvc/libsodium.vcxproj.filters\nlibsodium-stable/regen-msvc/libsodium.vcxproj.filters.tpl\nlibsodium-stable/regen-msvc/libsodium.vcxproj.tpl\nlibsodium-stable/regen-msvc/regen-msvc.py\nlibsodium-stable/regen-msvc/tl_libsodium.vcxproj.filters.tpl\nlibsodium-stable/regen-msvc/tl_libsodium.vcxproj.tpl\nlibsodium-stable/src\nlibsodium-stable/src/Makefile.am\nlibsodium-stable/src/Makefile.in\nlibsodium-stable/src/libsodium\nlibsodium-stable/src/libsodium/Makefile.am\nlibsodium-stable/src/libsodium/Makefile.in\nlibsodium-stable/src/libsodium/crypto_aead\nlibsodium-stable/src/libsodium/crypto_aead/aes256gcm\nlibsodium-stable/src/libsodium/crypto_aead/aes256gcm/aesni\nlibsodium-stable/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c\nlibsodium-stable/src/libsodium/crypto_aead/chacha20poly1305\nlibsodium-stable/src/libsodium/crypto_aead/chacha20poly1305/sodium\nlibsodium-stable/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_aead/xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_aead/xchacha20poly1305/sodium\nlibsodium-stable/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_auth\nlibsodium-stable/src/libsodium/crypto_auth/crypto_auth.c\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha256\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512256\nlibsodium-stable/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c\nlibsodium-stable/src/libsodium/crypto_box\nlibsodium-stable/src/libsodium/crypto_box/crypto_box.c\nlibsodium-stable/src/libsodium/crypto_box/crypto_box_easy.c\nlibsodium-stable/src/libsodium/crypto_box/crypto_box_seal.c\nlibsodium-stable/src/libsodium/crypto_box/curve25519xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_box/curve25519xsalsa20poly1305\nlibsodium-stable/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c\nlibsodium-stable/src/libsodium/crypto_core\nlibsodium-stable/src/libsodium/crypto_core/ed25519\nlibsodium-stable/src/libsodium/crypto_core/ed25519/core_ed25519.c\nlibsodium-stable/src/libsodium/crypto_core/ed25519/core_ristretto255.c\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/ed25519_ref10.c\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/base.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/base2.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/constants.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_25_5/fe.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/base.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/base2.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/constants.h\nlibsodium-stable/src/libsodium/crypto_core/ed25519/ref10/fe_51/fe.h\nlibsodium-stable/src/libsodium/crypto_core/hchacha20\nlibsodium-stable/src/libsodium/crypto_core/hchacha20/core_hchacha20.c\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20/ref2\nlibsodium-stable/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c\nlibsodium-stable/src/libsodium/crypto_core/salsa\nlibsodium-stable/src/libsodium/crypto_core/salsa/ref\nlibsodium-stable/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c\nlibsodium-stable/src/libsodium/crypto_generichash\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c\nlibsodium-stable/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c\nlibsodium-stable/src/libsodium/crypto_generichash/crypto_generichash.c\nlibsodium-stable/src/libsodium/crypto_hash\nlibsodium-stable/src/libsodium/crypto_hash/crypto_hash.c\nlibsodium-stable/src/libsodium/crypto_hash/sha256\nlibsodium-stable/src/libsodium/crypto_hash/sha256/cp\nlibsodium-stable/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c\nlibsodium-stable/src/libsodium/crypto_hash/sha256/hash_sha256.c\nlibsodium-stable/src/libsodium/crypto_hash/sha512\nlibsodium-stable/src/libsodium/crypto_hash/sha512/cp\nlibsodium-stable/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c\nlibsodium-stable/src/libsodium/crypto_hash/sha512/hash_sha512.c\nlibsodium-stable/src/libsodium/crypto_kdf\nlibsodium-stable/src/libsodium/crypto_kdf/blake2b\nlibsodium-stable/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c\nlibsodium-stable/src/libsodium/crypto_kdf/crypto_kdf.c\nlibsodium-stable/src/libsodium/crypto_kx\nlibsodium-stable/src/libsodium/crypto_kx/crypto_kx.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth\nlibsodium-stable/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/sse2\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c\nlibsodium-stable/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h\nlibsodium-stable/src/libsodium/crypto_pwhash\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-core.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-core.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-encoding.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx512f.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/argon2.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blake2b-long.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blake2b-long.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-avx512f.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c\nlibsodium-stable/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c\nlibsodium-stable/src/libsodium/crypto_pwhash/crypto_pwhash.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse\nlibsodium-stable/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c\nlibsodium-stable/src/libsodium/crypto_scalarmult\nlibsodium-stable/src/libsodium/crypto_scalarmult/crypto_scalarmult.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/ref10\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/sandy2x/sandy2x.S\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h\nlibsodium-stable/src/libsodium/crypto_scalarmult/ed25519\nlibsodium-stable/src/libsodium/crypto_scalarmult/ed25519/ref10\nlibsodium-stable/src/libsodium/crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c\nlibsodium-stable/src/libsodium/crypto_scalarmult/ristretto255\nlibsodium-stable/src/libsodium/crypto_scalarmult/ristretto255/ref10\nlibsodium-stable/src/libsodium/crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c\nlibsodium-stable/src/libsodium/crypto_secretbox\nlibsodium-stable/src/libsodium/crypto_secretbox/crypto_secretbox.c\nlibsodium-stable/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c\nlibsodium-stable/src/libsodium/crypto_secretbox/xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_secretbox/xsalsa20poly1305\nlibsodium-stable/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c\nlibsodium-stable/src/libsodium/crypto_secretstream\nlibsodium-stable/src/libsodium/crypto_secretstream/xchacha20poly1305\nlibsodium-stable/src/libsodium/crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c\nlibsodium-stable/src/libsodium/crypto_shorthash\nlibsodium-stable/src/libsodium/crypto_shorthash/crypto_shorthash.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24.c\nlibsodium-stable/src/libsodium/crypto_shorthash/siphash24/shorthash_siphashx24.c\nlibsodium-stable/src/libsodium/crypto_sign\nlibsodium-stable/src/libsodium/crypto_sign/crypto_sign.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/keypair.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/open.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/sign.c\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\nlibsodium-stable/src/libsodium/crypto_sign/ed25519/sign_ed25519.c\nlibsodium-stable/src/libsodium/crypto_stream\nlibsodium-stable/src/libsodium/crypto_stream/chacha20\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u0.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u1.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/ref\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.h\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/stream_chacha20.c\nlibsodium-stable/src/libsodium/crypto_stream/chacha20/stream_chacha20.h\nlibsodium-stable/src/libsodium/crypto_stream/crypto_stream.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/ref\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/stream_salsa20.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/stream_salsa20.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u0.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u1.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012/ref\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa2012/stream_salsa2012.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa208\nlibsodium-stable/src/libsodium/crypto_stream/salsa208/ref\nlibsodium-stable/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208_ref.c\nlibsodium-stable/src/libsodium/crypto_stream/salsa208/stream_salsa208.c\nlibsodium-stable/src/libsodium/crypto_stream/xchacha20\nlibsodium-stable/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c\nlibsodium-stable/src/libsodium/crypto_stream/xsalsa20\nlibsodium-stable/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c\nlibsodium-stable/src/libsodium/crypto_verify\nlibsodium-stable/src/libsodium/crypto_verify/sodium\nlibsodium-stable/src/libsodium/crypto_verify/sodium/verify.c\nlibsodium-stable/src/libsodium/include\nlibsodium-stable/src/libsodium/include/Makefile.am\nlibsodium-stable/src/libsodium/include/Makefile.in\nlibsodium-stable/src/libsodium/include/sodium.h\nlibsodium-stable/src/libsodium/include/sodium\nlibsodium-stable/src/libsodium/include/sodium/core.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_aead_aes256gcm.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth_hmacsha256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth_hmacsha512.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_box.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_ed25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_hchacha20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_hsalsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_ristretto255.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_salsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_salsa2012.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_core_salsa208.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_generichash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_generichash_blake2b.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_hash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_hash_sha256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_hash_sha512.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_kdf.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_kdf_blake2b.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_kx.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_onetimeauth.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash_argon2i.h\nlibsodium-stable/src/libsodium/include/sodium/private\nlibsodium-stable/src/libsodium/include/sodium/private/chacha20_ietf_ext.h\nlibsodium-stable/src/libsodium/include/sodium/private/common.h\nlibsodium-stable/src/libsodium/include/sodium/private/ed25519_ref10.h\nlibsodium-stable/src/libsodium/include/sodium/private/ed25519_ref10_fe_25_5.h\nlibsodium-stable/src/libsodium/include/sodium/private/ed25519_ref10_fe_51.h\nlibsodium-stable/src/libsodium/include/sodium/private/implementations.h\nlibsodium-stable/src/libsodium/include/sodium/private/mutex.h\nlibsodium-stable/src/libsodium/include/sodium/private/sse2_64_32.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash_argon2id.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult_ed25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_scalarmult_ristretto255.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretbox.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_secretstream_xchacha20poly1305.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_shorthash.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_shorthash_siphash24.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_sign.h\nlibsodium-stable/src/libsodium/include/sodium/export.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_sign_ed25519.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_chacha20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_salsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_salsa2012.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_salsa208.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_xchacha20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_stream_xsalsa20.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_verify_16.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_verify_32.h\nlibsodium-stable/src/libsodium/include/sodium/crypto_verify_64.h\nlibsodium-stable/src/libsodium/include/sodium/randombytes.h\nlibsodium-stable/src/libsodium/include/sodium/randombytes_internal_random.h\nlibsodium-stable/src/libsodium/include/sodium/randombytes_sysrandom.h\nlibsodium-stable/src/libsodium/include/sodium/utils.h\nlibsodium-stable/src/libsodium/include/sodium/runtime.h\nlibsodium-stable/src/libsodium/include/sodium/version.h.in\nlibsodium-stable/src/libsodium/randombytes\nlibsodium-stable/src/libsodium/randombytes/internal\nlibsodium-stable/src/libsodium/randombytes/internal/randombytes_internal_random.c\nlibsodium-stable/src/libsodium/randombytes/randombytes.c\nlibsodium-stable/src/libsodium/randombytes/sysrandom\nlibsodium-stable/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c\nlibsodium-stable/src/libsodium/sodium\nlibsodium-stable/src/libsodium/sodium/codecs.c\nlibsodium-stable/src/libsodium/sodium/core.c\nlibsodium-stable/src/libsodium/sodium/runtime.c\nlibsodium-stable/src/libsodium/sodium/utils.c\nlibsodium-stable/src/libsodium/sodium/version.c\nlibsodium-stable/test\nlibsodium-stable/test/Makefile.am\nlibsodium-stable/test/Makefile.in\nlibsodium-stable/test/constcheck.sh\nlibsodium-stable/test/default\nlibsodium-stable/test/default/Makefile.am\nlibsodium-stable/test/default/Makefile.in\nlibsodium-stable/test/default/aead_aes256gcm.c\nlibsodium-stable/test/default/aead_aes256gcm.exp\nlibsodium-stable/test/default/aead_aes256gcm2.c\nlibsodium-stable/test/default/aead_aes256gcm2.exp\nlibsodium-stable/test/default/aead_chacha20poly1305.c\nlibsodium-stable/test/default/aead_chacha20poly1305.exp\nlibsodium-stable/test/default/aead_chacha20poly13052.c\nlibsodium-stable/test/default/aead_chacha20poly13052.exp\nlibsodium-stable/test/default/aead_xchacha20poly1305.c\nlibsodium-stable/test/default/aead_xchacha20poly1305.exp\nlibsodium-stable/test/default/auth.c\nlibsodium-stable/test/default/auth.exp\nlibsodium-stable/test/default/auth2.c\nlibsodium-stable/test/default/auth2.exp\nlibsodium-stable/test/default/auth3.c\nlibsodium-stable/test/default/auth3.exp\nlibsodium-stable/test/default/auth5.c\nlibsodium-stable/test/default/auth5.exp\nlibsodium-stable/test/default/auth6.c\nlibsodium-stable/test/default/auth6.exp\nlibsodium-stable/test/default/auth7.c\nlibsodium-stable/test/default/auth7.exp\nlibsodium-stable/test/default/box.c\nlibsodium-stable/test/default/box.exp\nlibsodium-stable/test/default/box2.c\nlibsodium-stable/test/default/box2.exp\nlibsodium-stable/test/default/box7.c\nlibsodium-stable/test/default/box7.exp\nlibsodium-stable/test/default/box8.c\nlibsodium-stable/test/default/box8.exp\nlibsodium-stable/test/default/box_easy.c\nlibsodium-stable/test/default/box_easy.exp\nlibsodium-stable/test/default/box_easy2.c\nlibsodium-stable/test/default/box_easy2.exp\nlibsodium-stable/test/default/box_seal.c\nlibsodium-stable/test/default/box_seal.exp\nlibsodium-stable/test/default/box_seed.c\nlibsodium-stable/test/default/box_seed.exp\nlibsodium-stable/test/default/chacha20.c\nlibsodium-stable/test/default/chacha20.exp\nlibsodium-stable/test/default/cmptest.h\nlibsodium-stable/test/default/codecs.c\nlibsodium-stable/test/default/codecs.exp\nlibsodium-stable/test/default/core1.c\nlibsodium-stable/test/default/core1.exp\nlibsodium-stable/test/default/core2.c\nlibsodium-stable/test/default/core2.exp\nlibsodium-stable/test/default/core3.c\nlibsodium-stable/test/default/core3.exp\nlibsodium-stable/test/default/core4.c\nlibsodium-stable/test/default/core4.exp\nlibsodium-stable/test/default/core5.c\nlibsodium-stable/test/default/core5.exp\nlibsodium-stable/test/default/core6.c\nlibsodium-stable/test/default/core6.exp\nlibsodium-stable/test/default/core_ed25519.c\nlibsodium-stable/test/default/core_ed25519.exp\nlibsodium-stable/test/default/core_ristretto255.c\nlibsodium-stable/test/default/core_ristretto255.exp\nlibsodium-stable/test/default/ed25519_convert.c\nlibsodium-stable/test/default/ed25519_convert.exp\nlibsodium-stable/test/default/generichash.c\nlibsodium-stable/test/default/generichash.exp\nlibsodium-stable/test/default/generichash2.c\nlibsodium-stable/test/default/generichash2.exp\nlibsodium-stable/test/default/generichash3.c\nlibsodium-stable/test/default/generichash3.exp\nlibsodium-stable/test/default/hash.c\nlibsodium-stable/test/default/hash.exp\nlibsodium-stable/test/default/hash3.c\nlibsodium-stable/test/default/hash3.exp\nlibsodium-stable/test/default/index.html.tpl\nlibsodium-stable/test/default/kdf.c\nlibsodium-stable/test/default/kdf.exp\nlibsodium-stable/test/default/keygen.c\nlibsodium-stable/test/default/keygen.exp\nlibsodium-stable/test/default/kx.c\nlibsodium-stable/test/default/kx.exp\nlibsodium-stable/test/default/metamorphic.c\nlibsodium-stable/test/default/metamorphic.exp\nlibsodium-stable/test/default/misuse.c\nlibsodium-stable/test/default/misuse.exp\nlibsodium-stable/test/default/onetimeauth.c\nlibsodium-stable/test/default/onetimeauth.exp\nlibsodium-stable/test/default/onetimeauth2.c\nlibsodium-stable/test/default/onetimeauth2.exp\nlibsodium-stable/test/default/onetimeauth7.c\nlibsodium-stable/test/default/onetimeauth7.exp\nlibsodium-stable/test/default/pre.js.inc\nlibsodium-stable/test/default/pwhash_scrypt.c\nlibsodium-stable/test/default/pwhash_argon2i.c\nlibsodium-stable/test/default/pwhash_argon2i.exp\nlibsodium-stable/test/default/pwhash_argon2id.c\nlibsodium-stable/test/default/pwhash_argon2id.exp\nlibsodium-stable/test/default/pwhash_scrypt.exp\nlibsodium-stable/test/default/pwhash_scrypt_ll.c\nlibsodium-stable/test/default/pwhash_scrypt_ll.exp\nlibsodium-stable/test/default/randombytes.c\nlibsodium-stable/test/default/randombytes.exp\nlibsodium-stable/test/default/run.sh\nlibsodium-stable/test/default/scalarmult.c\nlibsodium-stable/test/default/scalarmult.exp\nlibsodium-stable/test/default/scalarmult2.c\nlibsodium-stable/test/default/scalarmult2.exp\nlibsodium-stable/test/default/scalarmult5.c\nlibsodium-stable/test/default/scalarmult5.exp\nlibsodium-stable/test/default/scalarmult6.c\nlibsodium-stable/test/default/scalarmult6.exp\nlibsodium-stable/test/default/scalarmult7.c\nlibsodium-stable/test/default/scalarmult7.exp\nlibsodium-stable/test/default/scalarmult8.c\nlibsodium-stable/test/default/scalarmult8.exp\nlibsodium-stable/test/default/scalarmult_ed25519.c\nlibsodium-stable/test/default/scalarmult_ed25519.exp\nlibsodium-stable/test/default/scalarmult_ristretto255.c\nlibsodium-stable/test/default/scalarmult_ristretto255.exp\nlibsodium-stable/test/default/secretbox.c\nlibsodium-stable/test/default/secretbox.exp\nlibsodium-stable/test/default/secretbox2.c\nlibsodium-stable/test/default/secretbox2.exp\nlibsodium-stable/test/default/secretbox7.c\nlibsodium-stable/test/default/secretbox7.exp\nlibsodium-stable/test/default/secretbox8.c\nlibsodium-stable/test/default/secretbox8.exp\nlibsodium-stable/test/default/secretbox_easy.c\nlibsodium-stable/test/default/secretbox_easy.exp\nlibsodium-stable/test/default/secretbox_easy2.c\nlibsodium-stable/test/default/secretbox_easy2.exp\nlibsodium-stable/test/default/secretstream.c\nlibsodium-stable/test/default/secretstream.exp\nlibsodium-stable/test/default/shorthash.c\nlibsodium-stable/test/default/shorthash.exp\nlibsodium-stable/test/default/sign.c\nlibsodium-stable/test/default/sign.exp\nlibsodium-stable/test/default/siphashx24.c\nlibsodium-stable/test/default/siphashx24.exp\nlibsodium-stable/test/default/sodium_core.c\nlibsodium-stable/test/default/sodium_core.exp\nlibsodium-stable/test/default/sodium_utils.c\nlibsodium-stable/test/default/sodium_utils.exp\nlibsodium-stable/test/default/sodium_utils2.c\nlibsodium-stable/test/default/sodium_utils2.exp\nlibsodium-stable/test/default/sodium_utils3.c\nlibsodium-stable/test/default/sodium_utils3.exp\nlibsodium-stable/test/default/sodium_version.c\nlibsodium-stable/test/default/sodium_version.exp\nlibsodium-stable/test/default/stream.c\u001b[91m\r100 1829k  100 1829k    \u001b[0m\u001b[91m0     0  2615k \u001b[0m\u001b[91m     0 --:-\u001b[0m\u001b[91m-:-- -\u001b[0m\u001b[91m-:--:-- --:--:-- 2\u001b[0m\u001b[91m613k\n\u001b[0m\nlibsodium-stable/test/default/stream.exp\nlibsodium-stable/test/default/stream2.c\nlibsodium-stable/test/default/stream2.exp\nlibsodium-stable/test/default/stream3.c\nlibsodium-stable/test/default/stream3.exp\nlibsodium-stable/test/default/stream4.c\nlibsodium-stable/test/default/stream4.exp\nlibsodium-stable/test/default/verify1.c\nlibsodium-stable/test/default/verify1.exp\nlibsodium-stable/test/default/wasi-test-wrapper.sh\nlibsodium-stable/test/default/wintest.bat\nlibsodium-stable/test/default/xchacha20.c\nlibsodium-stable/test/default/xchacha20.exp\nlibsodium-stable/test/quirks\nlibsodium-stable/test/quirks/quirks.h\nchecking build system type... x86_64-pc-linux-musl\nchecking host system type... x86_64-pc-linux-musl\nchecking target system type... x86_64-pc-linux-musl\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a race-free mkdir -p... ./build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking whether UID '0' is supported by ustar format... yes\nchecking whether GID '0' is supported by ustar format... yes\nchecking how to create a ustar tar archive... none\nchecking whether make supports nested variables... (cached) yes\nchecking whether to enable maintainer-specific portions of Makefiles... no\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether the compiler supports GNU C... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to enable C11 features... none needed\nchecking whether gcc understands -c and -o together... yes\nchecking whether make supports the include directive... yes (GNU style)\nchecking dependency style of gcc... none\nchecking dependency style of gcc... none\nchecking for stdio.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for strings.h... yes\nchecking for sys/stat.h... yes\nchecking for sys/types.h... yes\nchecking for unistd.h... yes\nchecking for wchar.h... yes\nchecking for minix/config.h... no\nchecking whether it is safe to define __EXTENSIONS__... yes\nchecking whether _XOPEN_SOURCE should be defined... no\nchecking for a sed that does not truncate output... /bin/sed\nchecking how to run the C preprocessor... gcc -E\nchecking for grep that handles long lines and -e... /bin/grep\nchecking for egrep... /bin/grep -E\nchecking whether gcc is Clang... no\nchecking whether pthreads work with \"-pthread\" and \"-lpthread\"... yes\nchecking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\nchecking whether more special flags are required for pthreads... no\nchecking for PTHREAD_PRIO_INHERIT... yes\nchecking for variable-length arrays... yes\nchecking for __wasi__ defined... no\nchecking whether C compiler accepts -fvisibility=hidden... yes\nchecking whether C compiler accepts -fPIC... yes\nchecking whether C compiler accepts -fPIE... yes\nchecking whether the linker accepts -pie... yes\nchecking whether C compiler accepts -fno-strict-aliasing... yes\nchecking whether C compiler accepts -fno-strict-overflow... yes\nchecking for a broken Xcode version... no\nchecking whether C compiler accepts -fstack-protector... yes\nchecking whether the linker accepts -fstack-protector... yes\nchecking whether C compiler accepts -Os -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wall... yes\nchecking whether C compiler accepts -Os -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wno-unknown-pragmas... yes\nchecking for clang... no\nchecking whether C compiler accepts -Os -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wall -Wextra... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wshorten-64-to-32... no\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wsometimes-uninitialized... no\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes -Wswitch-enum... yes\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes -Wswitch-enum -Wvariable-decl... no\nchecking whether C compiler accepts  -Wextra -Warray-bounds -Wbad-function-cast -Wcast-qual -Wdiv-by-zero -Wduplicated-branches -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wlogical-op -Wmaybe-uninitialized -Wmisleading-indentation -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-type-limits -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wold-style-declaration -Wpointer-arith -Wredundant-decls -Wrestrict -Wstrict-prototypes -Wswitch-enum -Wwrite-strings... yes\nchecking whether the linker accepts -Wl,-z,relro... yes\nchecking whether the linker accepts -Wl,-z,now... yes\nchecking whether the linker accepts -Wl,-z,noexecstack... yes\nchecking whether segmentation violations can be caught... yes\nchecking whether SIGABRT can be caught... \u001b[91mconfigure: WARNING: On this platform, SIGABRT cannot be caught using signal handlers.\n\u001b[0mno\nchecking for thread local storage (TLS) class... _Thread_local\nthread local storage is supported\nchecking whether C compiler accepts -ftls-model=local-dynamic... yes\nchecking how to print strings... printf\nchecking for a sed that does not truncate output... (cached) /bin/sed\nchecking for fgrep... /bin/grep -F\nchecking for ld used by gcc... /usr/x86_64-alpine-linux-musl/bin/ld\nchecking if the linker (/usr/x86_64-alpine-linux-musl/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 98304\nchecking how to convert x86_64-pc-linux-musl file names to x86_64-pc-linux-musl format... func_convert_file_noop\nchecking how to convert x86_64-pc-linux-musl file names to toolchain format... func_convert_file_noop\nchecking for /usr/x86_64-alpine-linux-musl/bin/ld option to reload object files... -r\nchecking for file... file\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... pass_all\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... printf %s\\n\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\nchecking for sysroot... no\nchecking for a working dd... /bin/dd\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\nchecking for mt... no\nchecking if : is a manifest tool... no\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if gcc supports -fno-rtti -fno-exceptions... no\nchecking for gcc option to produce PIC... -fPIC -DPIC\nchecking if gcc PIC flag -fPIC -DPIC works... yes\nchecking if gcc static flag -static works... yes\nchecking if gcc supports -c -o file.o... yes\nchecking if gcc supports -c -o file.o... (cached) yes\nchecking whether the gcc linker (/usr/x86_64-alpine-linux-musl/bin/ld -m elf_x86_64) supports shared libraries... yes\nchecking whether -lc should be explicitly linked in... no\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... yes\nchecking whether to build static libraries... yes\nchecking for ar... (cached) ar\nchecking whether C compiler accepts -mmmx... yes\nchecking for MMX instructions set... yes\nchecking whether C compiler accepts -mmmx... (cached) yes\nchecking whether C compiler accepts -msse2... yes\nchecking for SSE2 instructions set... yes\nchecking whether C compiler accepts -msse2... (cached) yes\nchecking whether C compiler accepts -msse3... yes\nchecking for SSE3 instructions set... yes\nchecking whether C compiler accepts -msse3... (cached) yes\nchecking whether C compiler accepts -mssse3... yes\nchecking for SSSE3 instructions set... yes\nchecking whether C compiler accepts -mssse3... (cached) yes\nchecking whether C compiler accepts -msse4.1... yes\nchecking for SSE4.1 instructions set... yes\nchecking whether C compiler accepts -msse4.1... (cached) yes\nchecking whether C compiler accepts -mavx... yes\nchecking for AVX instructions set... yes\nchecking whether C compiler accepts -mavx... (cached) yes\nchecking whether C compiler accepts -mavx2... yes\nchecking for AVX2 instructions set... yes\nchecking whether C compiler accepts -mavx2... (cached) yes\nchecking if _mm256_broadcastsi128_si256 is correctly defined... yes\nchecking whether C compiler accepts -mavx512f... yes\nchecking for AVX512F instructions set... yes\nchecking whether C compiler accepts -mavx512f... (cached) yes\nchecking whether C compiler accepts -maes... yes\nchecking whether C compiler accepts -mpclmul... yes\nchecking for AESNI instructions set and PCLMULQDQ... yes\nchecking whether C compiler accepts -maes... (cached) yes\nchecking whether C compiler accepts -mpclmul... (cached) yes\nchecking whether C compiler accepts -mrdrnd... yes\nchecking for RDRAND... yes\nchecking whether C compiler accepts -mrdrnd... (cached) yes\nchecking for sys/mman.h... yes\nchecking for sys/param.h... yes\nchecking for sys/random.h... yes\nchecking for intrin.h... no\nchecking if _xgetbv() is available... no\nchecking for inline... inline\nchecking whether byte ordering is bigendian... (cached) no\nchecking whether __STDC_LIMIT_MACROS is required... no\nchecking whether we can use inline asm code... yes\nno\nchecking whether we can use x86_64 asm code... yes\nchecking whether we can assemble AVX opcodes... yes\nchecking for 128-bit arithmetic... yes\nchecking for cpuid instruction... yes\nchecking if the .private_extern asm directive is supported... no\nchecking if the .hidden asm directive is supported... yes\nchecking if weak symbols are supported... yes\nchecking if data alignment is required... no\nchecking if atomic operations are supported... yes\nchecking for size_t... yes\nchecking for working alloca.h... yes\nchecking for alloca... yes\nchecking for arc4random... no\nchecking for arc4random_buf... no\nchecking for mmap... yes\nchecking for mlock... yes\nchecking for madvise... yes\nchecking for mprotect... yes\nchecking for raise... yes\nchecking for sysconf... yes\nchecking for getrandom with a standard API... yes\nchecking for getrandom... yes\nchecking for getentropy with a standard API... yes\nchecking for getentropy... yes\nchecking for getpid... yes\nchecking for getauxva... no\nchecking for elf_aux_info... no\nchecking for posix_memalign... yes\nchecking for nanosleep... yes\nchecking for memset_s... no\nchecking for explicit_bzero... yes\nchecking for memset_explicit... no\nchecking for explicit_memset... no\nchecking if gcc/ld supports -Wl,--output-def... no\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating builds/Makefile\nconfig.status: creating contrib/Makefile\nconfig.status: creating dist-build/Makefile\nconfig.status: creating libsodium.pc\nconfig.status: creating libsodium-uninstalled.pc\nconfig.status: creating msvc-scripts/Makefile\nconfig.status: creating src/Makefile\nconfig.status: creating src/libsodium/Makefile\nconfig.status: creating src/libsodium/include/Makefile\nconfig.status: creating src/libsodium/include/sodium/version.h\nconfig.status: creating test/default/Makefile\nconfig.status: creating test/Makefile\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\nMaking check in builds\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/builds'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/builds'\nMaking check in contrib\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/contrib'\nMaking check in dist-build\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/dist-build'\nMaking check in msvc-scripts\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nMaking check in src\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nMaking check in libsodium\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nMaking check in include\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Nothing to be done for 'check'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\n  CC       crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo\n  CC       crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo\n  CC       crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo\n  CC       crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo\n  CC       crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo\n  CC       crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo\n  CC       crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo\n  CC       crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo\n  CC       crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo\n  CC       crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo\n  CC       crypto_auth/libsodium_la-crypto_auth.lo\n  CC       crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo\n  CC       crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo\n  CC       crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo\n  CC       crypto_box/libsodium_la-crypto_box.lo\n  CC       crypto_box/libsodium_la-crypto_box_easy.lo\n  CC       crypto_box/libsodium_la-crypto_box_seal.lo\n  CC       crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo\n  CC       crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo\n  CC       crypto_core/hchacha20/libsodium_la-core_hchacha20.lo\n  CC       crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo\n  CC       crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo\n  CC       crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo\n  CC       crypto_generichash/libsodium_la-crypto_generichash.lo\n  CC       crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo\n  CC       crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo\n  CC       crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo\n  CC       crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo\n  CC       crypto_hash/libsodium_la-crypto_hash.lo\n  CC       crypto_hash/sha256/libsodium_la-hash_sha256.lo\n  CC       crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo\n  CC       crypto_hash/sha512/libsodium_la-hash_sha512.lo\n  CC       crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo\n  CC       crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo\n  CC       crypto_kdf/libsodium_la-crypto_kdf.lo\n  CC       crypto_kx/libsodium_la-crypto_kx.lo\n  CC       crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo\n  CC       crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo\n  CC       crypto_onetimeauth/poly1305/donna/libsodium_la-poly1305_donna.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2-core.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo\n  CC       crypto_pwhash/argon2/libsodium_la-argon2.lo\n  CC       crypto_pwhash/argon2/libsodium_la-blake2b-long.lo\n  CC       crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo\n  CC       crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo\n  CC       crypto_pwhash/libsodium_la-crypto_pwhash.lo\n  CC       crypto_scalarmult/libsodium_la-crypto_scalarmult.lo\n  CC       crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo\n  CC       crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519.lo\n  CC       crypto_secretbox/libsodium_la-crypto_secretbox.lo\n  CC       crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo\n  CC       crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo\n  CC       crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo\n  CC       crypto_shorthash/libsodium_la-crypto_shorthash.lo\n  CC       crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo\n  CC       crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo\n  CC       crypto_sign/libsodium_la-crypto_sign.lo\n  CC       crypto_sign/ed25519/libsodium_la-sign_ed25519.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-keypair.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-open.lo\n  CC       crypto_sign/ed25519/ref10/libsodium_la-sign.lo\n  CC       crypto_stream/chacha20/libsodium_la-stream_chacha20.lo\n  CC       crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo\n  CC       crypto_stream/libsodium_la-crypto_stream.lo\n  CC       crypto_stream/salsa20/libsodium_la-stream_salsa20.lo\n  CC       crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo\n  CC       crypto_verify/sodium/libsodium_la-verify.lo\n  CC       randombytes/libsodium_la-randombytes.lo\n  CC       sodium/libsodium_la-codecs.lo\n  CC       sodium/libsodium_la-core.lo\n  CC       sodium/libsodium_la-runtime.lo\n  CC       sodium/libsodium_la-utils.lo\n  CC       sodium/libsodium_la-version.lo\n  CPPAS    crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo\n  CC       crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo\n  CC       crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo\n  CC       crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe51_invert.lo\n  CC       crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe_frombytes_sandy2x.lo\n  CPPAS    crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo\n  CC       crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo\n  CC       crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo\n  CC       crypto_core/ed25519/libsodium_la-core_ed25519.lo\n  CC       crypto_core/ed25519/libsodium_la-core_ristretto255.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo\n  CC       crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo\n  CC       crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo\n  CC       crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo\n  CC       crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo\n  CC       crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo\n  CC       crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo\n  CC       crypto_stream/salsa208/libsodium_la-stream_salsa208.lo\n  CC       crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo\n  CC       randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo\n  CC       crypto_aead/aes256gcm/aesni/libaesni_la-aead_aes256gcm_aesni.lo\n  CC       crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo\n  CC       crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo\n  CC       crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo\n  CCLD     libsse41.la\n  CC       crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo\n  CC       crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo\n  CC       randombytes/internal/librdrand_la-randombytes_internal_random.lo\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libssse3.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libavx512f.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libsse2.la\n  CCLD     libaesni.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     librdrand.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libavx2.la\n\u001b[91mlibtool: warning: '-version-info/-version-number' is ignored for convenience libraries\n\u001b[0m  CCLD     libsodium.la\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nmake[2]: Nothing to be done for 'check-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nMaking check in test\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nMaking check in default\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake  aead_aes256gcm aead_aes256gcm2 aead_chacha20poly1305 aead_chacha20poly13052 aead_xchacha20poly1305 auth auth2 auth3 auth5 auth6 auth7 box box2 box7 box8 box_easy box_easy2 box_seal box_seed chacha20 codecs core1 core2 core3 core4 core5 core6 ed25519_convert generichash generichash2 generichash3 hash hash3 kdf keygen kx metamorphic misuse onetimeauth onetimeauth2 onetimeauth7 pwhash_argon2i pwhash_argon2id randombytes scalarmult scalarmult2 scalarmult5 scalarmult6 scalarmult7 scalarmult8 secretbox secretbox2 secretbox7 secretbox8 secretbox_easy secretbox_easy2 secretstream shorthash sign sodium_core sodium_utils sodium_version stream stream2 stream3 stream4 verify1 sodium_utils2 sodium_utils3 core_ed25519 core_ristretto255 pwhash_scrypt pwhash_scrypt_ll scalarmult_ed25519 scalarmult_ristretto255 siphashx24 xchacha20\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\n  CC       aead_aes256gcm.o\n  CC       aead_aes256gcm2.o\n  CC       aead_chacha20poly1305.o\n  CC       aead_chacha20poly13052.o\n  CC       aead_xchacha20poly1305.o\n  CC       auth.o\n  CC       auth2.o\n  CC       auth3.o\n  CC       auth5.o\n  CC       auth6.o\n  CC       auth7.o\n  CC       box.o\n  CC       box2.o\n  CC       box7.o\n  CC       box8.o\n  CC       box_easy.o\n  CC       box_easy2.o\n  CC       box_seal.o\n  CC       box_seed.o\n  CC       chacha20.o\n  CC       codecs.o\n  CC       core1.o\n  CC       core2.o\n  CC       core3.o\n  CC       core4.o\n  CC       core5.o\n  CC       core6.o\n  CC       ed25519_convert.o\n  CC       generichash.o\n  CC       generichash2.o\n  CC       generichash3.o\n  CC       hash.o\n  CC       hash3.o\n  CC       kdf.o\n  CC       keygen.o\n  CC       kx.o\n  CC       metamorphic.o\n  CC       misuse.o\n  CC       onetimeauth.o\n  CC       onetimeauth2.o\n  CC       onetimeauth7.o\n  CC       pwhash_argon2i.o\n  CC       pwhash_argon2id.o\n  CC       randombytes.o\n  CC       scalarmult.o\n  CC       scalarmult2.o\n  CC       scalarmult5.o\n  CC       scalarmult6.o\n  CC       scalarmult7.o\n  CC       scalarmult8.o\n  CC       secretbox.o\n  CC       secretbox2.o\n  CC       secretbox7.o\n  CC       secretbox8.o\n  CC       secretbox_easy.o\n  CC       secretbox_easy2.o\n  CC       secretstream.o\n  CC       shorthash.o\n  CC       sign.o\n  CC       sodium_core.o\n  CC       sodium_utils.o\n  CC       sodium_version.o\n  CC       stream.o\n  CC       stream2.o\n  CC       stream3.o\n  CC       stream4.o\n  CC       verify1.o\n\u001b[91mpwhash_argon2i.c: In function 'str_tests':\n\u001b[0m\u001b[91mpwhash_argon2i.c:293:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  293 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  294 |                                          \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  295 |                                          \"password\", 0x100000000ULL) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:293:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91mIn file included from ../../src/libsodium/include/sodium/crypto_pwhash.h:6,\n                 from ../../src/libsodium/include/sodium.h:32,\n                 from cmptest.h:17,\n                 from pwhash_argon2i.c:3:\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:298:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  298 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  299 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  300 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:298:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  303 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  304 |                                          \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  305 |                                          \"password\", strlen(\"password\")) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:308:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  308 |     if (crypto_pwhash_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  310 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:308:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:313:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  313 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  315 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:313:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:318:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  318 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  320 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:318:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:323:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  323 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  325 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:323:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  328 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  330 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  331 |             \"password\", strlen(\"password\")) != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:334:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  334 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  335 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  336 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  337 |             \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:334:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:340:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  340 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  341 |             \"$Argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  342 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:340:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:346:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 95 [-Wstringop-overread]\n  346 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  347 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:346:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVla~=mRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  355 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  358 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  360 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYI~=U+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  361 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:358:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from cmptest.h:9:\npwhash_argon2i.c:378:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  378 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:378:12: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91mIn file included from ../../src/libsodium/include/sodium/crypto_pwhash.h:7:\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:390:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  390 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:390:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c: In function 'str_tests':\n\u001b[0m\u001b[91mpwhash_argon2id.c:307:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  307 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  308 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"password\", 0x100000000ULL) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:307:9: note: referencing argument 1 of type 'const char[128]'\nIn file included from ../../src/libsodium/include/sodium.h:32,\n                 from cmptest.h:17,\n                 from pwhash_argon2id.c:3:\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:312:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  312 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  313 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:312:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:317:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  317 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  318 |                                  \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:322:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 82 [-Wstringop-overread]\n  322 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  323 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:322:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:327:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  327 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  328 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:332:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  332 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  333 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  334 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:337:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 87 [-Wstringop-overread]\n  337 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  338 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  339 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:337:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:342:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  342 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  344 |                                  \"password\", strlen(\"password\")) != 0) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  347 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |                                  \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\"$Argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:352:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:357:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  357 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=2$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  358 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:357:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from cmptest.h:9:\npwhash_argon2id.c:376:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  376 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:376:12: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91mIn file included from ../../src/libsodium/include/sodium/crypto_pwhash.h:6:\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:388:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  388 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:388:12: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CC       sodium_utils2.o\n  CC       sodium_utils3.o\n  CC       core_ed25519.o\n  CC       core_ristretto255.o\n  CC       pwhash_scrypt.o\n  CC       pwhash_scrypt_ll.o\n  CC       scalarmult_ed25519.o\n  CC       scalarmult_ristretto255.o\n  CC       siphashx24.o\n  CC       xchacha20.o\n  CCLD     aead_aes256gcm\n  CCLD     aead_aes256gcm2\n  CCLD     aead_chacha20poly1305\n  CCLD     aead_chacha20poly13052\n  CCLD     aead_xchacha20poly1305\n  CCLD     auth\n  CCLD     auth2\n  CCLD     auth3\n  CCLD     auth5\n  CCLD     auth6\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:293:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  293 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  294 |                                          \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  295 |                                          \"password\", 0x100000000ULL) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:293:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:298:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  298 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  299 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  300 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:298:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  303 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  304 |                                          \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  305 |                                          \"password\", strlen(\"password\")) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:303:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:308:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  308 |     if (crypto_pwhash_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  310 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:308:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:313:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  313 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  315 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:313:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:318:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  318 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  320 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:318:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:323:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  323 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  325 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:323:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  328 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  330 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  331 |             \"password\", strlen(\"password\")) != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:328:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:334:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  334 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  335 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  336 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  337 |             \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:334:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:340:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  340 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  341 |             \"$Argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  342 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:340:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:346:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 95 [-Wstringop-overread]\n  346 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  347 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:346:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVla~=mRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  355 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  358 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  360 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYI~=U+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  361 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:358:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:378:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  378 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:378:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:390:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  390 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:390:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     auth7\n  CCLD     box\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:307:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  307 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  308 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"password\", 0x100000000ULL) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:307:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:312:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  312 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  313 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:312:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:317:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  317 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  318 |                                  \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:317:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:322:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 82 [-Wstringop-overread]\n  322 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  323 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:322:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:327:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  327 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  328 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:332:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  332 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  333 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  334 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:337:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 87 [-Wstringop-overread]\n  337 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  338 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  339 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:337:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:342:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  342 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  344 |                                  \"password\", strlen(\"password\")) != 0) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:347:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  347 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |                                  \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\"$Argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:357:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  357 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=2$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  358 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:357:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:376:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  376 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:376:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:388:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  388 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:388:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn file included from cmptest.h:9,\n                 from pwhash_scrypt.c:3:\npwhash_scrypt.c: In function 'str_tests':\n\u001b[0m\u001b[91mpwhash_scrypt.c:356:12: warning: 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash' reading 102 bytes from a region of size 1 [-Wstringop-overread]\n  356 |     assert(crypto_pwhash_scryptsalsa208sha256_str_needs_rehash\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  357 |            (\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_scrypt.c:356:12: note: referencing argument 1 of type 'const char[102]'\n\u001b[0m\u001b[91mIn file included from ../../src/libsodium/include/sodium.h:63,\n                 from cmptest.h:17:\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h:111:5: note: in a call to function 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash'\n  111 | int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     box2\n  CCLD     box7\n  CCLD     box8\n  CCLD     box_easy\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:293:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  293 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  294 |                                          \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  295 |                                          \"password\", 0x100000000ULL) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:293:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:298:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  298 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  299 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  300 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:298:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:303:9: warning: 'crypto_pwhash_argon2i_str_verify' reading 128 bytes from a region of size 80 [-Wstringop-overread]\n  303 |     if (crypto_pwhash_argon2i_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  304 |                                          \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  305 |                                          \"password\", strlen(\"password\")) != -1) {\n      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:303:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:108:5: note: in a call to function 'crypto_pwhash_argon2i_str_verify'\n  108 | int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:308:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  308 |     if (crypto_pwhash_str_verify(\"$argon2i$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  310 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:308:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:313:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  313 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  315 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:313:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:318:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  318 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  320 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:318:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:323:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  323 |     if (crypto_pwhash_str_verify(\"$argon2i$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  325 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:323:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:328:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  328 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  330 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  331 |             \"password\", strlen(\"password\")) != 0) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:328:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:334:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  334 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  335 |             \"$argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  336 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  337 |             \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:334:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:340:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 96 [-Wstringop-overread]\n  340 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  341 |             \"$Argon2i$v=19$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  342 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:340:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:346:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 95 [-Wstringop-overread]\n  346 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  347 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:346:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVla~=mRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYIU+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  355 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\n\u001b[0m\u001b[91mpwhash_argon2i.c:358:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 97 [-Wstringop-overread]\n  358 |     if (crypto_pwhash_str_verify(\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |             \"$argon2i$v=1$m=4096,t=3,p=2$b2RpZHVlamRpc29kaXNrdw\"\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  360 |             \"$TNnWIwlu1061JHrnCqIAmjs3huSxYI~=U+0jWipu7Kc9M\",\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  361 |             \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2i.c:358:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:378:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  378 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:378:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2i.c:404:5:\npwhash_argon2i.c:390:12: warning: 'crypto_pwhash_argon2id_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  390 |     assert(crypto_pwhash_argon2id_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2i.c:390:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2id.h:114:5: note: in a call to function 'crypto_pwhash_argon2id_str_needs_rehash'\n  114 | int crypto_pwhash_argon2id_str_needs_rehash(const char str[crypto_pwhash_argon2id_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     box_easy2\n  CCLD     box_seal\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:307:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  307 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  308 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  309 |                                  \"password\", 0x100000000ULL) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:307:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:312:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  312 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  313 |                                  \"$9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  314 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:312:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:317:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 81 [-Wstringop-overread]\n  317 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  318 |                                  \"9sTbSlTio3Biev89thdrlKKiCaYsjjYVJxGAL3swxpQ\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  319 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:317:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:322:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 82 [-Wstringop-overread]\n  322 |     if (crypto_pwhash_str_verify(\"$argon2id$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  323 |                                  \"$b2G3seW+uPzerwQQC+/E1K50CLLO7YXy0JRcaTuswRo\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  324 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:322:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:327:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  327 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  328 |                                  \"$wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  329 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:327:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:332:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 86 [-Wstringop-overread]\n  332 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  333 |                                  \"wWKIMhR9lyDFvRz9YTZweHKfbftvj+qf+YFY4NeBbtA\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  334 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:332:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:337:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 87 [-Wstringop-overread]\n  337 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=65536,t=2,p=1$c29tZXNhbHQ\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  338 |                                  \"$8iIuixkI73Js3G1uMbezQXD0b8LG4SXGsOwoQkdAQIM\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  339 |                                  \"password\", strlen(\"password\")) != -1) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:337:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\nIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:342:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  342 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  343 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  344 |                                  \"password\", strlen(\"password\")) != 0) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:342:9: note: referencing argument 1 of type 'const char[128]'\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:347:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  347 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  348 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  349 |                                  \"passwore\", strlen(\"passwore\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:347:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:352:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  352 |     if (crypto_pwhash_str_verify(\"$Argon2id$v=19$m=256,t=3,p=1$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  353 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  354 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:352:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:357:9: warning: 'crypto_pwhash_str_verify' reading 128 bytes from a region of size 85 [-Wstringop-overread]\n  357 |     if (crypto_pwhash_str_verify(\"$argon2id$v=19$m=256,t=3,p=2$MDEyMzQ1Njc\"\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  358 |                                  \"$G5ajKFCoUzaXRLdz7UJb5wGkb2Xt+X5/GQjUYtS2+TE\",\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  359 |                                  \"password\", strlen(\"password\")) != -1 || errno != EINVAL) {\n      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:357:9: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash.h:128:5: note: in a call to function 'crypto_pwhash_str_verify'\n  128 | int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\npwhash_argon2id.c:376:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  376 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_argon2id.c:376:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_argon2id.c:402:5:\n\u001b[0m\u001b[91mpwhash_argon2id.c:388:12: warning: 'crypto_pwhash_argon2i_str_needs_rehash' reading 128 bytes from a region of size 1 [-Wstringop-overread]\n  388 |     assert(crypto_pwhash_argon2i_str_needs_rehash(\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_argon2id.c:388:12: note: referencing argument 1 of type 'const char[128]'\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h: In function 'xmain':\n../../src/libsodium/include/sodium/crypto_pwhash_argon2i.h:114:5: note: in a call to function 'crypto_pwhash_argon2i_str_needs_rehash'\n  114 | int crypto_pwhash_argon2i_str_needs_rehash(const char str[crypto_pwhash_argon2i_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     box_seed\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_scrypt.c:369:5:\npwhash_scrypt.c:356:12: warning: 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash' reading 102 bytes from a region of size 1 [-Wstringop-overread]\n  356 |     assert(crypto_pwhash_scryptsalsa208sha256_str_needs_rehash\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  357 |            (\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~\npwhash_scrypt.c:356:12: note: referencing argument 1 of type 'const char[102]'\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h:111:5: note: in a call to function 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash'\n  111 | int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     chacha20\n  CCLD     codecs\n  CCLD     core1\n  CCLD     core2\n  CCLD     core3\n\u001b[91mIn function 'str_tests',\n    inlined from 'xmain' at pwhash_scrypt.c:369:5:\npwhash_scrypt.c:356:12: warning: 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash' reading 102 bytes from a region of size 1 [-Wstringop-overread]\n  356 |     assert(crypto_pwhash_scryptsalsa208sha256_str_needs_rehash\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  357 |            (\"\", OPSLIMIT, MEMLIMIT) == -1);\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m\u001b[91mpwhash_scrypt.c:356:12: note: referencing argument 1 of type 'const char[102]'\n../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h: In function 'xmain':\n\u001b[0m\u001b[91m../../src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h:111:5: note: in a call to function 'crypto_pwhash_scryptsalsa208sha256_str_needs_rehash'\n  111 | int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\u001b[0m  CCLD     core4\n  CCLD     core5\n  CCLD     core6\n  CCLD     ed25519_convert\n  CCLD     generichash\n  CCLD     generichash2\n  CCLD     generichash3\n  CCLD     hash\n  CCLD     hash3\n  CCLD     kdf\n  CCLD     keygen\n  CCLD     kx\n  CCLD     metamorphic\n  CCLD     misuse\n  CCLD     onetimeauth\n  CCLD     onetimeauth2\n  CCLD     onetimeauth7\n  CCLD     pwhash_argon2i\n  CCLD     randombytes\n  CCLD     scalarmult\n  CCLD     scalarmult2\n  CCLD     scalarmult5\n  CCLD     scalarmult6\n  CCLD     scalarmult7\n  CCLD     scalarmult8\n  CCLD     secretbox\n  CCLD     secretbox2\n  CCLD     secretbox7\n  CCLD     secretbox8\n  CCLD     secretbox_easy\n  CCLD     secretbox_easy2\n  CCLD     secretstream\n  CCLD     shorthash\n  CCLD     sodium_core\n  CCLD     sodium_utils\n  CCLD     sodium_version\n  CCLD     stream\n  CCLD     stream2\n  CCLD     stream3\n  CCLD     stream4\n  CCLD     verify1\n  CCLD     sodium_utils2\n  CCLD     sodium_utils3\n  CCLD     core_ed25519\n  CCLD     core_ristretto255\n  CCLD     pwhash_scrypt\n  CCLD     pwhash_scrypt_ll\n  CCLD     scalarmult_ed25519\n  CCLD     scalarmult_ristretto255\n  CCLD     siphashx24\n  CCLD     xchacha20\n  CCLD     pwhash_argon2id\n  CCLD     sign\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake  check-TESTS\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[4]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nPASS: aead_chacha20poly1305\nPASS: aead_aes256gcm2\nPASS: auth3\nPASS: aead_xchacha20poly1305\nPASS: box_seed\nPASS: box2\nPASS: auth\nPASS: box\nPASS: core2\nPASS: auth7\nPASS: aead_chacha20poly13052\nPASS: box_seal\nPASS: auth6\nPASS: core1\nPASS: auth2\nPASS: core4\nPASS: core6\nPASS: box_easy\nPASS: generichash2\nPASS: generichash3\nPASS: core5\nPASS: hash\nPASS: auth5\nPASS: hash3\nPASS: generichash\nPASS: kx\nPASS: keygen\nPASS: onetimeauth\nPASS: misuse\nPASS: kdf\nPASS: onetimeauth2\nPASS: scalarmult2\nPASS: scalarmult\nPASS: scalarmult7\nPASS: secretbox2\nPASS: secretbox\nPASS: scalarmult5\nPASS: aead_aes256gcm\nPASS: box_easy2\nPASS: scalarmult8\nPASS: codecs\nPASS: onetimeauth7\nPASS: scalarmult6\nPASS: secretbox_easy\nPASS: chacha20\nPASS: shorthash\nPASS: sodium_core\nPASS: secretbox7\nPASS: stream3\nPASS: secretstream\nPASS: stream4\nPASS: sodium_version\nPASS: scalarmult_ed25519\nPASS: ed25519_convert\nPASS: scalarmult_ristretto255\nPASS: secretbox_easy2\nPASS: sodium_utils3\nPASS: siphashx24\nPASS: xchacha20\nPASS: box7\nPASS: secretbox8\nPASS: stream2\nPASS: core3\nPASS: pwhash_scrypt_ll\nPASS: sign\nPASS: pwhash_argon2i\nPASS: pwhash_argon2id\nPASS: sodium_utils\nPASS: randombytes\nPASS: box8\nPASS: stream\nPASS: metamorphic\nPASS: sodium_utils2\nPASS: verify1\nPASS: core_ed25519\nPASS: core_ristretto255\nPASS: pwhash_scrypt\n============================================================================\nTestsuite summary for libsodium 1.0.18\n============================================================================\n# TOTAL: 77\n# PASS:  77\n# SKIP:  0\n# XFAIL: 0\n# FAIL:  0\n# XPASS: 0\n# ERROR: 0\n============================================================================\nmake[4]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nmake[2]: Nothing to be done for 'check-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable'\nmake[1]: Nothing to be done for 'check-am'.\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable'\nMaking install in builds\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/builds'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/builds'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/builds'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/builds'\nMaking install in contrib\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/contrib'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/contrib'\nMaking install in dist-build\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/dist-build'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/dist-build'\nMaking install in msvc-scripts\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[2]: Nothing to be done for 'install-exec-am'.\nmake[2]: Nothing to be done for 'install-data-am'.\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/msvc-scripts'\nMaking install in src\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nMaking install in libsodium\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nMaking install in include\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[4]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[4]: Nothing to be done for 'install-exec-am'.\n ../../.././build-aux/install-sh -c -d '/usr/local/include'\n ../../.././build-aux/install-sh -c -d '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium/core.h sodium/crypto_aead_aes256gcm.h sodium/crypto_aead_chacha20poly1305.h sodium/crypto_aead_xchacha20poly1305.h sodium/crypto_auth.h sodium/crypto_auth_hmacsha256.h sodium/crypto_auth_hmacsha512.h sodium/crypto_auth_hmacsha512256.h sodium/crypto_box.h sodium/crypto_box_curve25519xchacha20poly1305.h sodium/crypto_box_curve25519xsalsa20poly1305.h sodium/crypto_core_ed25519.h sodium/crypto_core_ristretto255.h sodium/crypto_core_hchacha20.h sodium/crypto_core_hsalsa20.h sodium/crypto_core_salsa20.h sodium/crypto_core_salsa2012.h sodium/crypto_core_salsa208.h sodium/crypto_generichash.h sodium/crypto_generichash_blake2b.h sodium/crypto_hash.h sodium/crypto_hash_sha256.h sodium/crypto_hash_sha512.h sodium/crypto_kdf.h sodium/crypto_kdf_blake2b.h sodium/crypto_kx.h sodium/crypto_onetimeauth.h sodium/crypto_onetimeauth_poly1305.h sodium/crypto_pwhash.h sodium/crypto_pwhash_argon2i.h sodium/crypto_pwhash_argon2id.h sodium/crypto_pwhash_scryptsalsa208sha256.h sodium/crypto_scalarmult.h sodium/crypto_scalarmult_curve25519.h sodium/crypto_scalarmult_ed25519.h sodium/crypto_scalarmult_ristretto255.h sodium/crypto_secretbox.h sodium/crypto_secretbox_xchacha20poly1305.h sodium/crypto_secretbox_xsalsa20poly1305.h sodium/crypto_secretstream_xchacha20poly1305.h '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium.h '/usr/local/include/.'\n ../../.././build-aux/install-sh -c -d '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium/crypto_shorthash.h sodium/crypto_shorthash_siphash24.h sodium/crypto_sign.h sodium/crypto_sign_ed25519.h sodium/crypto_sign_edwards25519sha512batch.h sodium/crypto_stream.h sodium/crypto_stream_chacha20.h sodium/crypto_stream_salsa20.h sodium/crypto_stream_salsa2012.h sodium/crypto_stream_salsa208.h sodium/crypto_stream_xchacha20.h sodium/crypto_stream_xsalsa20.h sodium/crypto_verify_16.h sodium/crypto_verify_32.h sodium/crypto_verify_64.h sodium/export.h sodium/randombytes.h sodium/randombytes_internal_random.h sodium/randombytes_sysrandom.h sodium/runtime.h sodium/utils.h '/usr/local/include/sodium'\n ../../.././build-aux/install-sh -c -d '/usr/local/include'\n ../../.././build-aux/install-sh -c -d '/usr/local/include/sodium'\n /usr/bin/install -c -m 644  sodium/version.h '/usr/local/include/sodium'\nmake[4]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium/include'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[4]: Entering directory '/usr/src/minisign/libsodium-stable/src/libsodium'\n ../.././build-aux/install-sh -c -d '/usr/local/lib'\n /bin/sh ../../libtool   --mode=install /usr/bin/install -c   libsodium.la '/usr/local/lib'\nlibtool: install: /usr/bin/install -c .libs/libsodium.so.23.3.0 /usr/local/lib/libsodium.so.23.3.0\nlibtool: install: (cd /usr/local/lib && { ln -s -f libsodium.so.23.3.0 libsodium.so.23 || { rm -f libsodium.so.23 && ln -s libsodium.so.23.3.0 libsodium.so.23; }; })\nlibtool: install: (cd /usr/local/lib && { ln -s -f libsodium.so.23.3.0 libsodium.so || { rm -f libsodium.so && ln -s libsodium.so.23.3.0 libsodium.so; }; })\nlibtool: install: /usr/bin/install -c .libs/libsodium.lai /usr/local/lib/libsodium.la\nlibtool: install: /usr/bin/install -c .libs/libsodium.a /usr/local/lib/libsodium.a\nlibtool: install: chmod 644 /usr/local/lib/libsodium.a\nlibtool: install: ranlib /usr/local/lib/libsodium.a\nlibtool: finish: PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin\" ldconfig -n /usr/local/lib\n----------------------------------------------------------------------\nLibraries have been installed in:\n   /usr/local/lib\n\nIf you ever happen to want to link against installed libraries\nin a given directory, LIBDIR, you must either use libtool, and\nspecify the full pathname of the library, or use the '-LLIBDIR'\nflag during linking and do at least one of the following:\n   - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable\n     during execution\n   - add LIBDIR to the 'LD_RUN_PATH' environment variable\n     during linking\n   - use the '-Wl,-rpath -Wl,LIBDIR' linker flag\n\nSee any operating system documentation about shared libraries for\nmore information, such as the ld(1) and ld.so(8) manual pages.\n----------------------------------------------------------------------\nmake[4]: Nothing to be done for 'install-data-am'.\nmake[4]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src/libsodium'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/src'\nmake[3]: Nothing to be done for 'install-exec-am'.\nmake[3]: Nothing to be done for 'install-data-am'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/src'\nMaking install in test\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nMaking install in default\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[3]: Nothing to be done for 'install-exec-am'.\nmake[3]: Nothing to be done for 'install-data-am'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test/default'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nmake[3]: Entering directory '/usr/src/minisign/libsodium-stable/test'\nmake[3]: Nothing to be done for 'install-exec-am'.\nmake[3]: Nothing to be done for 'install-data-am'.\nmake[3]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable/test'\nmake[1]: Entering directory '/usr/src/minisign/libsodium-stable'\nmake[2]: Entering directory '/usr/src/minisign/libsodium-stable'\nmake[2]: Nothing to be done for 'install-exec-am'.\n ./build-aux/install-sh -c -d '/usr/local/lib/pkgconfig'\n /usr/bin/install -c -m 644 libsodium.pc '/usr/local/lib/pkgconfig'\nmake[2]: Leaving directory '/usr/src/minisign/libsodium-stable'\nmake[1]: Leaving directory '/usr/src/minisign/libsodium-stable'\nRemoving intermediate container fa892bf927fc\n ---> 335abae8f354\nStep 6/11 : COPY ./ ./\n ---> 82cdb52a8585\nStep 7/11 : RUN mkdir build && cd build && cmake -D BUILD_STATIC_EXECUTABLES=1 .. && make -j$(nproc)\n ---> Running in e23c76941555\n\u001b[91mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n  Compatibility with CMake < 2.8.12 will be removed from a future version of\n  CMake.\n\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n  CMake that the project does not need compatibility with older versions.\n\n\n\u001b[0m-- The C compiler identification is GNU 12.2.1\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"1.9.3\") \n-- Checking for module 'libsodium'\n--   Found libsodium, version 1.0.18\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n-- Found Threads: TRUE  \n-- Configuring done\n-- Generating done\n-- Build files have been written to: /usr/src/minisign/build\n[ 20%] Building C object CMakeFiles/minisign.dir/src/base64.c.o\n[ 40%] Building C object CMakeFiles/minisign.dir/src/helpers.c.o\n[ 60%] Building C object CMakeFiles/minisign.dir/src/get_line.c.o\n[ 80%] Building C object CMakeFiles/minisign.dir/src/minisign.c.o\n[100%] Linking C executable minisign\n[100%] Built target minisign\nRemoving intermediate container e23c76941555\n ---> d1ba81a75559\nStep 8/11 : RUN upx --lzma build/minisign ||:\n ---> Running in c0de41c9a7af\n                       Ultimate Packer for eXecutables\n                          Copyright (C) 1996 - 2022\nUPX 4.0.1       Markus Oberhumer, Laszlo Molnar & John Reiser   Nov 16th 2022\n\n        File size         Ratio      Format      Name\n   --------------------   ------   -----------   -----------\n    256560 ->    123992   48.33%   linux/amd64   minisign\n\nPacked 1 file.\nRemoving intermediate container c0de41c9a7af\n ---> 086fed22bc26\nStep 9/11 : FROM scratch\n ---> \nStep 10/11 : COPY --from=build /usr/src/minisign/build/minisign /usr/local/bin/\n ---> 39759613ca9a\nStep 11/11 : ENTRYPOINT [\"/usr/local/bin/minisign\"]\n ---> Running in f7899b7c05f4\nRemoving intermediate container f7899b7c05f4\n ---> 1d2f805af3e3\nSuccessfully built 1d2f805af3e3\nSuccessfully tagged minisign:latest\n","stderr":"","imageSize":123992},"endTime":1672640909403}