{"repository":"https://github.com/rat-rig/v-core-3","dockerfilePath":"Dockerfile","startTime":1672218325961,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/rat-rig/v-core-3'...\nChecking out files:  88% (512/580)   \rChecking out files:  89% (517/580)   \rChecking out files:  90% (522/580)   \rChecking out files:  91% (528/580)   \rChecking out files:  92% (534/580)   \rChecking out files:  93% (540/580)   \rChecking out files:  94% (546/580)   \rChecking out files:  95% (551/580)   \rChecking out files:  96% (557/580)   \rChecking out files:  97% (563/580)   \rChecking out files:  98% (569/580)   \rChecking out files:  99% (575/580)   \rChecking out files: 100% (580/580)   \rChecking out files: 100% (580/580), done.\n","error":null,"commit":"f6dcfb052a57d5c7411e932c4c53bd57420c465c"},"originalBuild":{"startTimestamp":1672218340063,"endTimestamp":1672218416451,"error":null,"stdout":"Sending build context to Docker daemon  590.2MB\r\r\nStep 1/9 : FROM python:3.10.1-alpine3.15\n3.10.1-alpine3.15: Pulling from library/python\n59bf1c3509f3: Already exists\n07a400e93df3: Pulling fs layer\nd8c681bc2183: Pulling fs layer\nc7f1ca1171d9: Pulling fs layer\ndc9256fcea2e: Pulling fs layer\ndc9256fcea2e: Waiting\n07a400e93df3: Verifying Checksum\n07a400e93df3: Download complete\nc7f1ca1171d9: Verifying Checksum\nc7f1ca1171d9: Download complete\nd8c681bc2183: Verifying Checksum\nd8c681bc2183: Download complete\ndc9256fcea2e: Verifying Checksum\ndc9256fcea2e: Download complete\n07a400e93df3: Pull complete\nd8c681bc2183: Pull complete\nc7f1ca1171d9: Pull complete\ndc9256fcea2e: Pull complete\nDigest: sha256:dce56d40d885d2c8847aa2a278a29d50450c8e3d10f9d7ffeb2f38dcc1eb0ea4\nStatus: Downloaded newer image for python:3.10.1-alpine3.15\n ---> eb5bc7d10d52\nStep 2/9 : RUN apk add --no-cache     bash     curl     git     git-fast-import     openssh\n ---> Running in 3a4863358362\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/16) Installing bash (5.1.16-r0)\nExecuting bash-5.1.16-r0.post-install\n(2/16) Installing brotli-libs (1.0.9-r5)\n(3/16) Installing nghttp2-libs (1.46.0-r0)\n(4/16) Installing libcurl (7.80.0-r5)\n(5/16) Installing curl (7.80.0-r5)\n(6/16) Installing pcre2 (10.40-r0)\n(7/16) Installing git (2.34.5-r0)\n(8/16) Installing git-fast-import (2.34.5-r0)\n(9/16) Installing openssh-keygen (8.8_p1-r1)\n(10/16) Installing libedit (20210910.3.1-r0)\n(11/16) Installing openssh-client-common (8.8_p1-r1)\n(12/16) Installing openssh-client-default (8.8_p1-r1)\n(13/16) Installing openssh-sftp-server (8.8_p1-r1)\n(14/16) Installing openssh-server-common (8.8_p1-r1)\n(15/16) Installing openssh-server (8.8_p1-r1)\n(16/16) Installing openssh (8.8_p1-r1)\nExecuting busybox-1.34.1-r3.trigger\nOK: 37 MiB in 52 packages\nRemoving intermediate container 3a4863358362\n ---> 238a685a77c1\nStep 3/9 : RUN apk add --no-cache --virtual .build gcc musl-dev\n ---> Running in 11b18d327f65\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/13) Installing libgcc (10.3.1_git20211027-r0)\n(2/13) Installing libstdc++ (10.3.1_git20211027-r0)\n(3/13) Installing binutils (2.37-r3)\n(4/13) Installing libgomp (10.3.1_git20211027-r0)\n(5/13) Installing libatomic (10.3.1_git20211027-r0)\n(6/13) Installing libgphobos (10.3.1_git20211027-r0)\n(7/13) Installing gmp (6.2.1-r1)\n(8/13) Installing isl22 (0.22-r0)\n(9/13) Installing mpfr4 (4.1.0-r0)\n(10/13) Installing mpc1 (1.2.1-r0)\n(11/13) Installing gcc (10.3.1_git20211027-r0)\n(12/13) Installing musl-dev (1.2.2-r7)\n(13/13) Installing .build (20221228.090556)\nExecuting busybox-1.34.1-r3.trigger\nOK: 158 MiB in 65 packages\nRemoving intermediate container 11b18d327f65\n ---> ddfe6a0afa06\nStep 4/9 : ENV POETRY_VERSION=1.1.12\n ---> Running in 173b5205a82a\nRemoving intermediate container 173b5205a82a\n ---> fb4bac88e1b0\nStep 5/9 : RUN curl -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 &&     cd /usr/local/bin &&     ln -s /opt/poetry/bin/poetry &&     poetry config virtualenvs.create false\n ---> Running in fea9940c324e\nRetrieving Poetry metadata\n\n# Welcome to Poetry!\n\nThis will download and install the latest version of Poetry,\na dependency and package manager for Python.\n\nIt will add the `poetry` command to Poetry's bin directory, located at:\n\n/opt/poetry/bin\n\nYou can uninstall at any time by executing this script with the --uninstall option,\nand these changes will be reverted.\n\nInstalling Poetry (1.1.12)\nInstalling Poetry (1.1.12): Creating environment\nInstalling Poetry (1.1.12): Installing Poetry\nInstalling Poetry (1.1.12): Creating script\nInstalling Poetry (1.1.12): Done\n\nPoetry (1.1.12) is installed now. Great!\n\nTo get started you need Poetry's bin directory (/opt/poetry/bin) in your `PATH`\nenvironment variable.\n\nAdd `export PATH=\"/opt/poetry/bin:$PATH\"` to your shell configuration file.\n\nAlternatively, you can call Poetry explicitly with `/opt/poetry/bin/poetry`.\n\nYou can test that everything is set up by executing:\n\n`poetry --version`\n\nRemoving intermediate container fea9940c324e\n ---> eb9444451c5a\nStep 6/9 : COPY poetry.lock pyproject.toml /app/\n ---> 9058adc8916b\nStep 7/9 : WORKDIR /app\n ---> Running in 272230fd7167\nRemoving intermediate container 272230fd7167\n ---> 23272306111a\nStep 8/9 : RUN poetry install --no-root --no-dev --no-interaction --no-ansi\n ---> Running in 612fd3d7f429\nSkipping virtualenv creation, as specified in config file.\nInstalling dependencies from lock file\n\nPackage operations: 29 installs, 0 updates, 0 removals\n\n  • Installing six (1.16.0)\n  • Installing markupsafe (2.0.1)\n  • Installing pyparsing (3.0.6)\n  • Installing python-dateutil (2.8.2)\n  • Installing zipp (3.6.0)\n  • Installing pyyaml (6.0)\n  • Installing bracex (2.2.1)\n  • Installing click (8.0.3)\n  • Installing importlib-metadata (4.10.0)\n  • Installing ghp-import (2.0.2)\n  • Installing mergedeep (1.3.4)\n  • Installing jinja2 (3.0.3)\n  • Installing watchdog (2.1.6)\n  • Installing packaging (21.3)\n  • Installing markdown (3.3.6)\n  • Installing pyyaml-env-tag (0.1)\n  • Installing mkdocs (1.2.3)\n  • Installing mkdocs-material-extensions (1.0.3)\n  • Installing pygments (2.10.0)\n  • Installing pymdown-extensions (9.1)\n  • Installing termcolor (1.1.0)\n  • Installing text-unidecode (1.3)\n  • Installing wcmatch (8.3)\n  • Installing mkdocs-awesome-pages-plugin (2.6.1)\n  • Installing mkdocs-macros-plugin (0.5.12)\n  • Installing mkdocs-material (8.1.3)\n  • Installing mkdocs-monorepo-plugin (0.4.18)\n  • Installing mkdocs-redirects (1.0.3)\n  • Installing python-slugify (5.0.2)\nRemoving intermediate container 612fd3d7f429\n ---> 73fa01cad004\nStep 9/9 : CMD [\"mkdocs\", \"serve\", \"-a\", \"0.0.0.0:8000\"]\n ---> Running in 0d0f90e78b33\nRemoving intermediate container 0d0f90e78b33\n ---> 93c968d4f979\nSuccessfully built 93c968d4f979\nSuccessfully tagged v-core-3:latest\n","stderr":"","imageSize":324513878},"repair":{"violations":[{"name":"curlUseFlagF","position":{"start":10,"end":10,"columnStart":4,"columnEnd":47}}],"repairedDockerfile":"FROM python:3.10.1-alpine3.15\n\nRUN apk add --no-cache \\\n    bash \\\n    curl \\\n    git \\\n    git-fast-import \\\n    openssh\nRUN apk add --no-cache --virtual .build gcc musl-dev\nENV POETRY_VERSION=1.1.12\nRUN curl -f -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 && \\\n    cd /usr/local/bin && \\\n    ln -s /opt/poetry/bin/poetry && \\\n    poetry config virtualenvs.create false\n\nCOPY poetry.lock pyproject.toml /app/\nWORKDIR /app\nRUN poetry install --no-root --no-dev --no-interaction --no-ansi\n\nCMD [\"mkdocs\", \"serve\", \"-a\", \"0.0.0.0:8000\"]\n"},"repairedBuild":{"startTimestamp":1672218417096,"endTimestamp":1672218484770,"error":null,"stdout":"Sending build context to Docker daemon  590.2MB\r\r\nStep 1/9 : FROM python:3.10.1-alpine3.15\n ---> eb5bc7d10d52\nStep 2/9 : RUN apk add --no-cache     bash     curl     git     git-fast-import     openssh\n ---> Running in b3f81ed78793\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/16) Installing bash (5.1.16-r0)\nExecuting bash-5.1.16-r0.post-install\n(2/16) Installing brotli-libs (1.0.9-r5)\n(3/16) Installing nghttp2-libs (1.46.0-r0)\n(4/16) Installing libcurl (7.80.0-r5)\n(5/16) Installing curl (7.80.0-r5)\n(6/16) Installing pcre2 (10.40-r0)\n(7/16) Installing git (2.34.5-r0)\n(8/16) Installing git-fast-import (2.34.5-r0)\n(9/16) Installing openssh-keygen (8.8_p1-r1)\n(10/16) Installing libedit (20210910.3.1-r0)\n(11/16) Installing openssh-client-common (8.8_p1-r1)\n(12/16) Installing openssh-client-default (8.8_p1-r1)\n(13/16) Installing openssh-sftp-server (8.8_p1-r1)\n(14/16) Installing openssh-server-common (8.8_p1-r1)\n(15/16) Installing openssh-server (8.8_p1-r1)\n(16/16) Installing openssh (8.8_p1-r1)\nExecuting busybox-1.34.1-r3.trigger\nOK: 37 MiB in 52 packages\nRemoving intermediate container b3f81ed78793\n ---> 2b743f02cf74\nStep 3/9 : RUN apk add --no-cache --virtual .build gcc musl-dev\n ---> Running in 118f42a688ec\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n(1/13) Installing libgcc (10.3.1_git20211027-r0)\n(2/13) Installing libstdc++ (10.3.1_git20211027-r0)\n(3/13) Installing binutils (2.37-r3)\n(4/13) Installing libgomp (10.3.1_git20211027-r0)\n(5/13) Installing libatomic (10.3.1_git20211027-r0)\n(6/13) Installing libgphobos (10.3.1_git20211027-r0)\n(7/13) Installing gmp (6.2.1-r1)\n(8/13) Installing isl22 (0.22-r0)\n(9/13) Installing mpfr4 (4.1.0-r0)\n(10/13) Installing mpc1 (1.2.1-r0)\n(11/13) Installing gcc (10.3.1_git20211027-r0)\n(12/13) Installing musl-dev (1.2.2-r7)\n(13/13) Installing .build (20221228.090710)\nExecuting busybox-1.34.1-r3.trigger\nOK: 158 MiB in 65 packages\nRemoving intermediate container 118f42a688ec\n ---> 9c4ee324d24d\nStep 4/9 : ENV POETRY_VERSION=1.1.12\n ---> Running in f098539e625e\nRemoving intermediate container f098539e625e\n ---> 032da4a8989f\nStep 5/9 : RUN curl -f -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 &&     cd /usr/local/bin &&     ln -s /opt/poetry/bin/poetry &&     poetry config virtualenvs.create false\n ---> Running in 4f6334e4be53\nRetrieving Poetry metadata\n\n# Welcome to Poetry!\n\nThis will download and install the latest version of Poetry,\na dependency and package manager for Python.\n\nIt will add the `poetry` command to Poetry's bin directory, located at:\n\n/opt/poetry/bin\n\nYou can uninstall at any time by executing this script with the --uninstall option,\nand these changes will be reverted.\n\nInstalling Poetry (1.1.12)\nInstalling Poetry (1.1.12): Creating environment\nInstalling Poetry (1.1.12): Installing Poetry\nInstalling Poetry (1.1.12): Creating script\nInstalling Poetry (1.1.12): Done\n\nPoetry (1.1.12) is installed now. Great!\n\nTo get started you need Poetry's bin directory (/opt/poetry/bin) in your `PATH`\nenvironment variable.\n\nAdd `export PATH=\"/opt/poetry/bin:$PATH\"` to your shell configuration file.\n\nAlternatively, you can call Poetry explicitly with `/opt/poetry/bin/poetry`.\n\nYou can test that everything is set up by executing:\n\n`poetry --version`\n\nRemoving intermediate container 4f6334e4be53\n ---> 2513fb913eec\nStep 6/9 : COPY poetry.lock pyproject.toml /app/\n ---> 2416e628627f\nStep 7/9 : WORKDIR /app\n ---> Running in cef9307329f4\nRemoving intermediate container cef9307329f4\n ---> 75fd3600333b\nStep 8/9 : RUN poetry install --no-root --no-dev --no-interaction --no-ansi\n ---> Running in 97ace3829502\nSkipping virtualenv creation, as specified in config file.\nInstalling dependencies from lock file\n\nPackage operations: 29 installs, 0 updates, 0 removals\n\n  • Installing six (1.16.0)\n  • Installing markupsafe (2.0.1)\n  • Installing pyparsing (3.0.6)\n  • Installing python-dateutil (2.8.2)\n  • Installing pyyaml (6.0)\n  • Installing zipp (3.6.0)\n  • Installing bracex (2.2.1)\n  • Installing click (8.0.3)\n  • Installing ghp-import (2.0.2)\n  • Installing importlib-metadata (4.10.0)\n  • Installing jinja2 (3.0.3)\n  • Installing mergedeep (1.3.4)\n  • Installing pyyaml-env-tag (0.1)\n  • Installing watchdog (2.1.6)\n  • Installing markdown (3.3.6)\n  • Installing packaging (21.3)\n  • Installing mkdocs (1.2.3)\n  • Installing mkdocs-material-extensions (1.0.3)\n  • Installing pygments (2.10.0)\n  • Installing termcolor (1.1.0)\n  • Installing text-unidecode (1.3)\n  • Installing pymdown-extensions (9.1)\n  • Installing wcmatch (8.3)\n  • Installing mkdocs-awesome-pages-plugin (2.6.1)\n  • Installing mkdocs-macros-plugin (0.5.12)\n  • Installing mkdocs-material (8.1.3)\n  • Installing mkdocs-monorepo-plugin (0.4.18)\n  • Installing mkdocs-redirects (1.0.3)\n  • Installing python-slugify (5.0.2)\nRemoving intermediate container 97ace3829502\n ---> 5fa25bb83c49\nStep 9/9 : CMD [\"mkdocs\", \"serve\", \"-a\", \"0.0.0.0:8000\"]\n ---> Running in 9ea810c55d4f\nRemoving intermediate container 9ea810c55d4f\n ---> c5ba38ecefdd\nSuccessfully built c5ba38ecefdd\nSuccessfully tagged v-core-3:latest\n","stderr":"","imageSize":324513857},"endTime":1672218485320}