{"repository":"https://github.com/jpmens/jo","dockerfilePath":"Dockerfile","startTime":1672609843993,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/jpmens/jo'...\n","error":null,"commit":"2cc476178198774ad6bea89be0b9e4ed2d4bf4c5"},"originalBuild":{"startTimestamp":1672609844837,"endTimestamp":1672609867876,"error":null,"stdout":"Sending build context to Docker daemon  680.4kB\r\r\nStep 1/8 : FROM alpine AS builder\n ---> 49176f190c7e\nStep 2/8 : RUN apk -U add automake autoconf build-base make pkgconf\n ---> Running in 4efc5da732da\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/26) Installing m4 (1.4.19-r1)\n(2/26) Installing libbz2 (1.0.8-r4)\n(3/26) Installing perl (5.36.0-r0)\n(4/26) Installing autoconf (2.71-r1)\n(5/26) Installing automake (1.16.5-r1)\n(6/26) Installing libgcc (12.2.1_git20220924-r4)\n(7/26) Installing libstdc++ (12.2.1_git20220924-r4)\n(8/26) Installing binutils (2.39-r2)\n(9/26) Installing libmagic (5.43-r0)\n(10/26) Installing file (5.43-r0)\n(11/26) Installing libgomp (12.2.1_git20220924-r4)\n(12/26) Installing libatomic (12.2.1_git20220924-r4)\n(13/26) Installing gmp (6.2.1-r2)\n(14/26) Installing isl25 (0.25-r0)\n(15/26) Installing mpfr4 (4.1.0-r0)\n(16/26) Installing mpc1 (1.2.1-r1)\n(17/26) Installing gcc (12.2.1_git20220924-r4)\n(18/26) Installing libstdc++-dev (12.2.1_git20220924-r4)\n(19/26) Installing musl-dev (1.2.3-r4)\n(20/26) Installing libc-dev (0.7.2-r3)\n(21/26) Installing g++ (12.2.1_git20220924-r4)\n(22/26) Installing make (4.3-r1)\n(23/26) Installing fortify-headers (1.1-r1)\n(24/26) Installing patch (2.7.6-r8)\n(25/26) Installing build-base (0.5-r3)\n(26/26) Installing pkgconf (1.9.3-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 286 MiB in 41 packages\nRemoving intermediate container 4efc5da732da\n ---> 6e0dd4cbe54f\nStep 3/8 : COPY . /src\n ---> 8529874796e1\nStep 4/8 : WORKDIR /src\n ---> Running in 06a32cc542c2\nRemoving intermediate container 06a32cc542c2\n ---> d02226ccb377\nStep 5/8 : RUN autoreconf -i && ./configure && make check && make install\n ---> Running in 23ebf7f2481d\n\u001b[91mconfigure.ac:7: installing 'build-aux/compile'\n\u001b[0m\u001b[91mconfigure.ac:32: installing 'build-aux/install-sh'\n\u001b[0m\u001b[91mconfigure.ac:32: installing 'build-aux/missing'\n\u001b[0m\u001b[91mMakefile.am: installing 'build-aux/depcomp'\n\u001b[0mchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether the compiler supports GNU C... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to enable C11 features... none needed\nchecking whether gcc understands -c and -o together... yes\nchecking for stdio.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for strings.h... yes\nchecking for sys/stat.h... yes\nchecking for sys/types.h... yes\nchecking for unistd.h... yes\nchecking for wchar.h... yes\nchecking for minix/config.h... no\nchecking whether it is safe to define __EXTENSIONS__... yes\nchecking whether _XOPEN_SOURCE should be defined... no\nchecking for stddef.h... yes\nchecking for stdint.h... (cached) yes\nchecking for stdlib.h... (cached) yes\nchecking for string.h... (cached) yes\nchecking for unistd.h... (cached) yes\nchecking for stdbool.h... yes\nchecking for working strtod... yes\nchecking for strchr... yes\nchecking for strrchr... yes\nchecking for strlcpy... yes\nchecking for strlcat... yes\nchecking for snprintf... yes\nchecking for pledge... no\nchecking for err... yes\nchecking for errx... yes\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a race-free mkdir -p... ./build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports the include directive... yes (GNU style)\nchecking whether make supports nested variables... yes\nchecking dependency style of gcc... gcc3\nchecking whether make supports nested variables... (cached) yes\nchecking for pandoc... no\n\u001b[91mconfigure: WARNING: pandoc not found, man pages rebuild will not be possible\n\u001b[0mchecking for pkg-config... /usr/bin/pkg-config\nchecking pkg-config is at least version 0.9.0... yes\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating tests/jo.07.sh\nconfig.status: executing depfiles commands\n\n  Jo.............: version 1.9\n  Prefix.........: /usr/local\n  C compiler.....: gcc -g -O2 \n  Pandoc.........: NONE\n  Bash completion: ${prefix}/etc/bash_completion.d/jo.bash\n\n  Now type 'make [<target>]'\n    where the optional <target> is:\n      all                - build all binaries\n      check              - run the tests\n      install            - install everything\n\n  CC       jo.o\n  CC       json.o\n  CC       base64.o\n  CCLD     jo\nmake  check-TESTS\nmake[1]: Entering directory '/src'\nmake[2]: Entering directory '/src'\nPASS: tests/jo.test 1 -  basic logo\nPASS: tests/jo.test 2 -  basic logo (stdin)\nPASS: tests/jo.test 3 -  basic two values\nPASS: tests/jo.test 4 -  nested with executable\nPASS: tests/jo.test 5 -  nested native\nPASS: tests/jo.test 6 -  strings and numbers; pretty (Vanessa)\nPASS: tests/jo.test 7 -  version check\nPASS: tests/jo.test 8 -  data from file: text\nPASS: tests/jo.test 9 -  data from file: base64-encoded\nPASS: tests/jo.test 10 -  array: simple\nPASS: tests/jo.test 11 -  array: true,false,null (native and string)\nPASS: tests/jo.test 12 -  object: geo\nPASS: tests/jo.test 13 -  object: face card jo logo\nPASS: tests/jo.test 14 -  values: with equals signs in them\nPASS: tests/jo.test 15 -  object from file\nPASS: tests/jo.test 16 -  quotes in quotes\nPASS: tests/jo.test 17 -  type coercion\nPASS: tests/jo.test 18 -  nested objects with user-specified delimiter\nPASS: tests/jo.test 19 -  read from pipe\nPASS: tests/jo.test 20 -  read json array elements\nPASS: tests/jo.test 21 -  read nested json elements\nPASS: tests/jo.test 22 -  avoid reading from file if escaped \\@\nPASS: tests/jo.test 23 -  disable creation of null-valued keys\nPASS: tests/jo.test 24 -  jo as filter\nPASS: tests/jo.test 25 -  overwrite values of existing object keys\nPASS: tests/jo.test 26 -  read from stdin\nPASS: tests/jo.test 27 -  user-friendly errors\n============================================================================\nTestsuite summary for jo 1.9\n============================================================================\n# TOTAL: 27\n# PASS:  27\n# SKIP:  0\n# XFAIL: 0\n# FAIL:  0\n# XPASS: 0\n# ERROR: 0\n============================================================================\nmake[2]: Leaving directory '/src'\nmake[1]: Leaving directory '/src'\nmake[1]: Entering directory '/src'\n ./build-aux/install-sh -c -d '/usr/local/bin'\n  /usr/bin/install -c jo '/usr/local/bin'\n ./build-aux/install-sh -c -d '/usr/local/etc/bash_completion.d'\n /usr/bin/install -c -m 644 jo.bash '/usr/local/etc/bash_completion.d'\n ./build-aux/install-sh -c -d '/usr/local/share/zsh/site-functions'\n /usr/bin/install -c -m 644 jo.zsh '/usr/local/share/zsh/site-functions'\n ./build-aux/install-sh -c -d '/usr/local/share/man/man1'\n /usr/bin/install -c -m 644 jo.1 '/usr/local/share/man/man1'\nmake  install-data-hook\nmake[2]: Entering directory '/src'\nmv -f /usr/local/share/zsh/site-functions/jo.zsh /usr/local/share/zsh/site-functions/_jo\nmake[2]: Leaving directory '/src'\nmake[1]: Leaving directory '/src'\nRemoving intermediate container 23ebf7f2481d\n ---> 48fe6410183d\nStep 6/8 : FROM alpine\n ---> 49176f190c7e\nStep 7/8 : COPY --from=builder /usr/local/bin/jo /bin/jo\n ---> 31d4c80a3489\nStep 8/8 : ENTRYPOINT [\"/bin/jo\"]\n ---> Running in d08d4ee10dfb\nRemoving intermediate container d08d4ee10dfb\n ---> 23ba70764a77\nSuccessfully built 23ba70764a77\nSuccessfully tagged jo:latest\n","stderr":"","imageSize":7157776},"repair":{"violations":[{"name":"configureShouldUseBuildFlag","position":{"start":4,"end":4,"columnStart":21,"columnEnd":32}},{"name":"apkAddUseNoCache","position":{"start":1,"end":1,"columnStart":4,"columnEnd":56}}],"repairedDockerfile":"FROM alpine AS builder\nRUN apk -U --no-cache add automake autoconf build-base make pkgconf\nCOPY . /src\nWORKDIR /src\nRUN autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make check && make install\n\nFROM alpine\nCOPY --from=builder /usr/local/bin/jo /bin/jo\nENTRYPOINT [\"/bin/jo\"]\n"},"repairedBuild":{"startTimestamp":1672609868135,"endTimestamp":1672609891753,"error":null,"stdout":"Sending build context to Docker daemon  680.4kB\r\r\nStep 1/8 : FROM alpine AS builder\n ---> 49176f190c7e\nStep 2/8 : RUN apk -U --no-cache add automake autoconf build-base make pkgconf\n ---> Running in 94a977b1e651\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz\n(1/26) Installing m4 (1.4.19-r1)\n(2/26) Installing libbz2 (1.0.8-r4)\n(3/26) Installing perl (5.36.0-r0)\n(4/26) Installing autoconf (2.71-r1)\n(5/26) Installing automake (1.16.5-r1)\n(6/26) Installing libgcc (12.2.1_git20220924-r4)\n(7/26) Installing libstdc++ (12.2.1_git20220924-r4)\n(8/26) Installing binutils (2.39-r2)\n(9/26) Installing libmagic (5.43-r0)\n(10/26) Installing file (5.43-r0)\n(11/26) Installing libgomp (12.2.1_git20220924-r4)\n(12/26) Installing libatomic (12.2.1_git20220924-r4)\n(13/26) Installing gmp (6.2.1-r2)\n(14/26) Installing isl25 (0.25-r0)\n(15/26) Installing mpfr4 (4.1.0-r0)\n(16/26) Installing mpc1 (1.2.1-r1)\n(17/26) Installing gcc (12.2.1_git20220924-r4)\n(18/26) Installing libstdc++-dev (12.2.1_git20220924-r4)\n(19/26) Installing musl-dev (1.2.3-r4)\n(20/26) Installing libc-dev (0.7.2-r3)\n(21/26) Installing g++ (12.2.1_git20220924-r4)\n(22/26) Installing make (4.3-r1)\n(23/26) Installing fortify-headers (1.1-r1)\n(24/26) Installing patch (2.7.6-r8)\n(25/26) Installing build-base (0.5-r3)\n(26/26) Installing pkgconf (1.9.3-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 286 MiB in 41 packages\nRemoving intermediate container 94a977b1e651\n ---> 0adae8d5672c\nStep 3/8 : COPY . /src\n ---> da1a80693ccc\nStep 4/8 : WORKDIR /src\n ---> Running in eef804ea6f97\nRemoving intermediate container eef804ea6f97\n ---> c6d3d7b54867\nStep 5/8 : RUN autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make check && make install\n ---> Running in 75227d4da036\n\u001b[91mconfigure.ac:7: installing 'build-aux/compile'\n\u001b[0m\u001b[91mconfigure.ac:32: installing 'build-aux/install-sh'\n\u001b[0m\u001b[91mconfigure.ac:32: installing 'build-aux/missing'\n\u001b[0m\u001b[91mMakefile.am: installing 'build-aux/depcomp'\n\u001b[0m\u001b[91m/bin/sh: dpkg-architecture: not found\n\u001b[0mchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether the compiler supports GNU C... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to enable C11 features... none needed\nchecking whether gcc understands -c and -o together... yes\nchecking for stdio.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for strings.h... yes\nchecking for sys/stat.h... yes\nchecking for sys/types.h... yes\nchecking for unistd.h... yes\nchecking for wchar.h... yes\nchecking for minix/config.h... no\nchecking whether it is safe to define __EXTENSIONS__... yes\nchecking whether _XOPEN_SOURCE should be defined... no\nchecking for stddef.h... yes\nchecking for stdint.h... (cached) yes\nchecking for stdlib.h... (cached) yes\nchecking for string.h... (cached) yes\nchecking for unistd.h... (cached) yes\nchecking for stdbool.h... yes\nchecking for working strtod... yes\nchecking for strchr... yes\nchecking for strrchr... yes\nchecking for strlcpy... yes\nchecking for strlcat... yes\nchecking for snprintf... yes\nchecking for pledge... no\nchecking for err... yes\nchecking for errx... yes\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a race-free mkdir -p... ./build-aux/install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... no\nchecking for awk... awk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports the include directive... yes (GNU style)\nchecking whether make supports nested variables... yes\nchecking dependency style of gcc... gcc3\nchecking whether make supports nested variables... (cached) yes\nchecking for pandoc... no\n\u001b[91mconfigure: WARNING: pandoc not found, man pages rebuild will not be possible\n\u001b[0mchecking for pkg-config... /usr/bin/pkg-config\nchecking pkg-config is at least version 0.9.0... yes\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating tests/jo.07.sh\nconfig.status: executing depfiles commands\n\n  Jo.............: version 1.9\n  Prefix.........: /usr/local\n  C compiler.....: gcc -g -O2 \n  Pandoc.........: NONE\n  Bash completion: ${prefix}/etc/bash_completion.d/jo.bash\n\n  Now type 'make [<target>]'\n    where the optional <target> is:\n      all                - build all binaries\n      check              - run the tests\n      install            - install everything\n\n  CC       jo.o\n  CC       json.o\n  CC       base64.o\n  CCLD     jo\nmake  check-TESTS\nmake[1]: Entering directory '/src'\nmake[2]: Entering directory '/src'\nPASS: tests/jo.test 1 -  basic logo\nPASS: tests/jo.test 2 -  basic logo (stdin)\nPASS: tests/jo.test 3 -  basic two values\nPASS: tests/jo.test 4 -  nested with executable\nPASS: tests/jo.test 5 -  nested native\nPASS: tests/jo.test 6 -  strings and numbers; pretty (Vanessa)\nPASS: tests/jo.test 7 -  version check\nPASS: tests/jo.test 8 -  data from file: text\nPASS: tests/jo.test 9 -  data from file: base64-encoded\nPASS: tests/jo.test 10 -  array: simple\nPASS: tests/jo.test 11 -  array: true,false,null (native and string)\nPASS: tests/jo.test 12 -  object: geo\nPASS: tests/jo.test 13 -  object: face card jo logo\nPASS: tests/jo.test 14 -  values: with equals signs in them\nPASS: tests/jo.test 15 -  object from file\nPASS: tests/jo.test 16 -  quotes in quotes\nPASS: tests/jo.test 17 -  type coercion\nPASS: tests/jo.test 18 -  nested objects with user-specified delimiter\nPASS: tests/jo.test 19 -  read from pipe\nPASS: tests/jo.test 20 -  read json array elements\nPASS: tests/jo.test 21 -  read nested json elements\nPASS: tests/jo.test 22 -  avoid reading from file if escaped \\@\nPASS: tests/jo.test 23 -  disable creation of null-valued keys\nPASS: tests/jo.test 24 -  jo as filter\nPASS: tests/jo.test 25 -  overwrite values of existing object keys\nPASS: tests/jo.test 26 -  read from stdin\nPASS: tests/jo.test 27 -  user-friendly errors\n============================================================================\nTestsuite summary for jo 1.9\n============================================================================\n# TOTAL: 27\n# PASS:  27\n# SKIP:  0\n# XFAIL: 0\n# FAIL:  0\n# XPASS: 0\n# ERROR: 0\n============================================================================\nmake[2]: Leaving directory '/src'\nmake[1]: Leaving directory '/src'\nmake[1]: Entering directory '/src'\n ./build-aux/install-sh -c -d '/usr/local/bin'\n  /usr/bin/install -c jo '/usr/local/bin'\n ./build-aux/install-sh -c -d '/usr/local/etc/bash_completion.d'\n /usr/bin/install -c -m 644 jo.bash '/usr/local/etc/bash_completion.d'\n ./build-aux/install-sh -c -d '/usr/local/share/zsh/site-functions'\n /usr/bin/install -c -m 644 jo.zsh '/usr/local/share/zsh/site-functions'\n ./build-aux/install-sh -c -d '/usr/local/share/man/man1'\n /usr/bin/install -c -m 644 jo.1 '/usr/local/share/man/man1'\nmake  install-data-hook\nmake[2]: Entering directory '/src'\nmv -f /usr/local/share/zsh/site-functions/jo.zsh /usr/local/share/zsh/site-functions/_jo\nmake[2]: Leaving directory '/src'\nmake[1]: Leaving directory '/src'\nRemoving intermediate container 75227d4da036\n ---> a1cea40c4137\nStep 6/8 : FROM alpine\n ---> 49176f190c7e\nStep 7/8 : COPY --from=builder /usr/local/bin/jo /bin/jo\n ---> 89fe4daebdc0\nStep 8/8 : ENTRYPOINT [\"/bin/jo\"]\n ---> Running in d6a6ee6e8169\nRemoving intermediate container d6a6ee6e8169\n ---> 0a3a51e3dca1\nSuccessfully built 0a3a51e3dca1\nSuccessfully tagged jo:latest\n","stderr":"","imageSize":7157776},"endTime":1672609891976}