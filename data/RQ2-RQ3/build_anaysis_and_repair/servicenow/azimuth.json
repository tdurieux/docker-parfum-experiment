{"repository":"https://github.com/servicenow/azimuth","dockerfilePath":"Dockerfile","startTime":1672947989304,"endTime":1672949586604,"clone":{"startTime":1672947989331,"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/servicenow/azimuth'...\n","error":null,"endTime":1672947991340,"commit":"bc0f070c612be5c3d6ae26252501fcffc99178e1"},"originalBuild":{"startTime":1672947991431,"endTime":1672948791392,"error":null,"stdout":"Sending build context to Docker daemon   28.7MB\r\r\nStep 1/18 : ARG DEVICE=cpu\nStep 2/18 : FROM pytorch/pytorch:1.8.1-cuda11.1-cudnn8-runtime as build_gpu\n ---> 5ffed6c83695\nStep 3/18 : RUN pip install --upgrade pip\n ---> Running in c3ae021f4d21\nCollecting pip\n  Downloading pip-22.3.1-py3-none-any.whl (2.1 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.2.4\n    Uninstalling pip-20.2.4:\n      Successfully uninstalled pip-20.2.4\nSuccessfully installed pip-22.3.1\nRemoving intermediate container c3ae021f4d21\n ---> 29c4b7466016\nStep 4/18 : FROM python:3.8 as build_cpu\n ---> 51a078947558\nStep 5/18 : FROM build_${DEVICE}\n ---> 51a078947558\nStep 6/18 : ARG STAGE=\"production\"\n ---> Running in fc388f33a840\nRemoving intermediate container fc388f33a840\n ---> 606eb5d666fd\nStep 7/18 : ARG DEVICE=cpu\n ---> Running in 20cdf159dee6\nRemoving intermediate container 20cdf159dee6\n ---> 00681f81588e\nStep 8/18 : ENV STAGE=${STAGE}   PYTHONFAULTHANDLER=1   PYTHONUNBUFFERED=1   PYTHONHASHSEED=random   PIP_NO_CACHE_DIR=off   PIP_DISABLE_PIP_VERSION_CHECK=on   PIP_DEFAULT_TIMEOUT=100   POETRY_VERSION=1.1.7   POETRY_HOME=\"/usr/local/poetry\"\n ---> Running in df3b259f7293\nRemoving intermediate container df3b259f7293\n ---> ac4d67101372\nStep 9/18 : RUN apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y curl gcc make &&     rm -rf /var/lib/apt/lists/*\n ---> Running in 8e5a7e9bdbcb\nGet:1 http://deb.debian.org/debian bullseye InRelease [116 kB]\nGet:2 http://deb.debian.org/debian-security bullseye-security InRelease [48.4 kB]\nGet:3 http://deb.debian.org/debian bullseye-updates InRelease [44.1 kB]\nGet:4 http://deb.debian.org/debian bullseye/main amd64 Packages [8183 kB]\nGet:5 http://deb.debian.org/debian-security bullseye-security/main amd64 Packages [210 kB]\nGet:6 http://deb.debian.org/debian bullseye-updates/main amd64 Packages [14.6 kB]\nFetched 8616 kB in 2s (5547 kB/s)\nReading package lists...\nReading package lists...\nBuilding dependency tree...\nReading state information...\ncurl is already the newest version (7.74.0-1.3+deb11u3).\ngcc is already the newest version (4:10.2.1-1).\nmake is already the newest version (4.3-4.1).\n0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.\nRemoving intermediate container 8e5a7e9bdbcb\n ---> b7f10fda2dbc\nStep 10/18 : RUN curl -sSL https://install.python-poetry.org | python - --version 1.2.0     && ln -sf /usr/local/poetry/bin/poetry /usr/local/bin/poetry\n ---> Running in f969b1d38fc7\nRetrieving Poetry metadata\n\n# Welcome to Poetry!\n\nThis will download and install the latest version of Poetry,\na dependency and package manager for Python.\n\nIt will add the `poetry` command to Poetry's bin directory, located at:\n\n/usr/local/poetry/bin\n\nYou can uninstall at any time by executing this script with the --uninstall option,\nand these changes will be reverted.\n\nInstalling Poetry (1.2.0)\nInstalling Poetry (1.2.0): Creating environment\nInstalling Poetry (1.2.0): Installing Poetry\nInstalling Poetry (1.2.0): Creating script\nInstalling Poetry (1.2.0): Done\n\nPoetry (1.2.0) is installed now. Great!\n\nTo get started you need Poetry's bin directory (/usr/local/poetry/bin) in your `PATH`\nenvironment variable.\n\nAdd `export PATH=\"/usr/local/poetry/bin:$PATH\"` to your shell configuration file.\n\nAlternatively, you can call Poetry explicitly with `/usr/local/poetry/bin/poetry`.\n\nYou can test that everything is set up by executing:\n\n`poetry --version`\n\nRemoving intermediate container f969b1d38fc7\n ---> 6bc106ca7b42\nStep 11/18 : COPY poetry.lock pyproject.toml /app/\n ---> da4679e99276\nStep 12/18 : WORKDIR /app\n ---> Running in 04fc57b663ae\nRemoving intermediate container 04fc57b663ae\n ---> cd044ce5a8ee\nStep 13/18 : RUN poetry config virtualenvs.create false &&   poetry install --extras ${DEVICE} --no-interaction --no-ansi --no-root $(/usr/bin/test $STAGE == production && echo \"--no-dev\")\n ---> Running in f164cb62d29f\nSkipping virtualenv creation, as specified in config file.\n\u001b[91mThe `--no-dev` option is deprecated, use the `--only main` notation instead.\n\u001b[0mInstalling dependencies from lock file\n\nPackage operations: 139 installs, 2 updates, 0 removals\n\n  • Installing certifi (2022.12.7)\n  • Installing charset-normalizer (2.0.12)\n  • Installing idna (3.3)\n  • Installing pyasn1 (0.4.8)\n  • Installing urllib3 (1.26.9)\n  • Installing cachetools (5.0.0)\n  • Installing oauthlib (3.2.1)\n  • Installing pyasn1-modules (0.2.8)\n  • Installing pyparsing (3.0.7)\n  • Installing requests (2.28.1)\n  • Installing rsa (4.8)\n  • Installing six (1.16.0)\n  • Installing zipp (3.7.0)\n  • Installing catalogue (2.0.7)\n  • Installing click (7.1.2)\n  • Installing cymem (2.0.6)\n  • Installing frozenlist (1.3.0)\n  • Installing google-auth (2.6.2)\n  • Installing importlib-metadata (4.11.3)\n  • Installing multidict (6.0.2)\n  • Installing murmurhash (1.0.6)\n  • Installing numpy (1.22.4)\n  • Installing packaging (21.3)\n  • Installing requests-oauthlib (1.3.1)\n  • Updating setuptools (57.5.0 -> 65.5.1)\n  • Installing tomli (1.2.2)\n  • Installing typing-extensions (4.1.1)\n  • Installing absl-py (1.0.0)\n  • Installing aiosignal (1.2.0)\n  • Installing async-timeout (4.0.2)\n  • Installing attrs (21.4.0)\n  • Installing blis (0.7.7)\n  • Installing cycler (0.11.0)\n  • Installing filelock (3.6.0)\n  • Installing fonttools (4.31.2)\n  • Installing google-auth-oauthlib (0.4.6)\n  • Installing grpcio (1.47.0)\n  • Installing humanfriendly (10.0)\n  • Installing joblib (1.2.0)\n  • Installing kiwisolver (1.4.2)\n  • Installing locket (0.2.1)\n  • Installing markdown (3.3.6)\n  • Installing markupsafe (2.1.1)\n  • Installing mpmath (1.2.1)\n  • Installing pillow (9.3.0)\n  • Installing preshed (3.0.6)\n  • Installing protobuf (3.19.5)\n  • Installing pydantic (1.8.2)\n  • Installing python-dateutil (2.8.2)\n  • Installing pytz (2022.1)\n  • Installing pyyaml (6.0)\n  • Installing regex (2022.1.18)\n  • Installing setuptools-scm (6.4.2)\n  • Installing smart-open (5.2.1)\n  • Installing srsly (2.4.2)\n  • Installing tensorboard-data-server (0.6.1)\n  • Installing tensorboard-plugin-wit (1.8.1)\n  • Installing toolz (0.11.2)\n  • Installing tqdm (4.63.0)\n  • Installing typer (0.4.0)\n  • Installing wasabi (0.9.0)\n  • Installing werkzeug (2.1.0)\n  • Updating wheel (0.38.4 -> 0.38.1)\n  • Installing yarl (1.7.2)\n  • Installing aiohttp (3.8.1)\n  • Installing astunparse (1.6.3)\n  • Installing cloudpickle (2.0.0)\n  • Installing coloredlogs (15.0.1)\n  • Installing dill (0.3.4)\n  • Installing flatbuffers (2.0)\n  • Installing fsspec (2022.2.0)\n  • Installing gast (0.4.0)\n  • Installing google-pasta (0.2.0)\n  • Installing h5py (3.6.0)\n  • Installing heapdict (1.0.1)\n  • Installing huggingface-hub (0.4.0)\n  • Installing jinja2 (3.1.1)\n  • Installing keras (2.8.0)\n  • Installing keras-preprocessing (1.1.2)\n  • Installing libclang (13.0.0)\n  • Installing matplotlib (3.5.1)\n  • Installing opt-einsum (3.3.0)\n  • Installing pandas (1.4.1)\n  • Installing partd (1.2.0)\n  • Installing pathy (0.6.1)\n  • Installing sacremoses (0.0.49)\n  • Installing scipy (1.8.0)\n  • Installing spacy-legacy (3.0.9)\n  • Installing sympy (1.11.1)\n  • Installing tensorboard (2.8.0)\n  • Installing tensorflow-estimator (2.8.0)\n  • Installing tensorflow-io-gcs-filesystem (0.24.0)\n  • Installing termcolor (1.1.0)\n  • Installing thinc (8.0.13)\n  • Installing threadpoolctl (3.1.0)\n  • Installing tokenizers (0.12.1)\n  • Installing torch (1.9.0)\n  • Installing wrapt (1.14.0)\n  • Installing dask (2021.12.0)\n  • Installing h11 (0.13.0)\n  • Installing msgpack (1.0.3)\n  • Installing multiprocess (0.70.12.2)\n  • Installing nltk (3.7)\n  • Installing onnx (1.12.0)\n  • Installing onnxruntime (1.12.1)\n  • Installing psutil (5.9.0)\n  • Installing pyarrow (7.0.0)\n  • Installing responses (0.18.0)\n  • Installing scikit-learn (1.0.2)\n  • Installing seaborn (0.11.2)\n  • Installing sentencepiece (0.1.96)\n  • Installing sortedcontainers (2.4.0)\n  • Installing spacy (3.1.5)\n  • Installing starlette (0.14.2)\n  • Installing structlog (21.1.0)\n  • Installing tblib (1.7.0)\n  • Installing tenacity (8.0.1)\n  • Installing tensorflow (2.8.2)\n  • Installing tensorflow-hub (0.12.0)\n  • Installing torchvision (0.12.0)\n  • Installing tornado (6.1)\n  • Installing transformers (4.16.2)\n  • Installing xxhash (3.0.0)\n  • Installing zict (2.1.0)\n  • Installing aiofiles (0.6.0)\n  • Installing baal (1.5.2)\n  • Installing datasets (2.1.0)\n  • Installing distributed (2021.12.0)\n  • Installing en-core-web-sm (3.1.0 https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.1.0/en_core_web_sm-3.1.0.tar.gz#egg=en_core_web_sm)\n  • Installing faiss-cpu (1.6.5)\n  • Installing fastapi (0.65.3)\n  • Installing fr-core-news-md (3.1.0 https://github.com/explosion/spacy-models/releases/download/fr_core_news_md-3.1.0/fr_core_news_md-3.1.0.tar.gz#egg=fr_core_news_md)\n  • Installing nlpaug (1.1.10)\n  • Installing onnxruntime-extensions (0.3.1)\n  • Installing orjson (3.6.3)\n  • Installing plotly (5.6.0)\n  • Installing retrying (1.3.3)\n  • Installing sentence-transformers (2.1.0)\n  • Installing spectral-metric (0.6.1)\n  • Installing tensorflow-text (2.8.2)\n  • Installing uvicorn (0.13.4)\nRemoving intermediate container f164cb62d29f\n ---> d62c526b8693\nStep 14/18 : COPY . /app/\n ---> b54133289242\nStep 15/18 : RUN poetry install --extras ${DEVICE} --no-interaction --no-ansi $(/usr/bin/test $STAGE == production && echo \"--no-dev\")\n ---> Running in c3d6b9a7143a\nSkipping virtualenv creation, as specified in config file.\n\u001b[91mThe `--no-dev` option is deprecated, use the `--only main` notation instead.\n\u001b[0mInstalling dependencies from lock file\n\nNo dependencies to install or update\n\nInstalling the current project: azimuth (2.5.2)\nRemoving intermediate container c3d6b9a7143a\n ---> 5050a128dcaa\nStep 16/18 : ENV CFG_PATH=\"/config/nlp_sa/conf.json\"\n ---> Running in 52b460de9615\nRemoving intermediate container 52b460de9615\n ---> 896c3edb3260\nStep 17/18 : ENV PORT=8091\n ---> Running in f0a457a15463\nRemoving intermediate container f0a457a15463\n ---> 571cda2d6181\nStep 18/18 : CMD [\"sh\",\"-c\",\"umask 0002; python runner.py ${CFG_PATH} --port ${PORT}\"]\n ---> Running in c49c3db7bb0a\nRemoving intermediate container c49c3db7bb0a\n ---> 222f08498155\nSuccessfully built 222f08498155\nSuccessfully tagged azimuth:latest\n","stderr":"","imageSize":8805990762},"repair":{"startTime":1672948791481,"endTime":1672948791589,"violations":[{"name":"curlUseFlagF","position":{"start":28,"end":28,"columnStart":4,"columnEnd":47}},{"name":"pipUseNoCacheDir","position":{"start":4,"end":4,"columnStart":4,"columnEnd":29}},{"name":"aptGetInstallUseNoRec","position":{"start":25,"end":25,"columnStart":4,"columnEnd":67}}],"repairedDockerfile":"ARG DEVICE=cpu\n\nFROM pytorch/pytorch:1.8.1-cuda11.1-cudnn8-runtime as build_gpu\n# Copy binaries from other images here\nRUN pip install --no-cache-dir --upgrade pip\n\nFROM python:3.8 as build_cpu\n# NOOP step on CPU\nFROM build_${DEVICE}\n\n# Set to \"dev\" for dev deps\nARG STAGE=\"production\"\nARG DEVICE=cpu\n\nENV STAGE=${STAGE} \\\n  PYTHONFAULTHANDLER=1 \\\n  PYTHONUNBUFFERED=1 \\\n  PYTHONHASHSEED=random \\\n  PIP_NO_CACHE_DIR=off \\\n  PIP_DISABLE_PIP_VERSION_CHECK=on \\\n  PIP_DEFAULT_TIMEOUT=100 \\\n  POETRY_VERSION=1.1.7 \\\n  POETRY_HOME=\"/usr/local/poetry\"\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y curl gcc make && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -sSL https://install.python-poetry.org | python - --version 1.2.0 \\\n    && ln -sf /usr/local/poetry/bin/poetry /usr/local/bin/poetry\n\n# Install dependencies.\nCOPY poetry.lock pyproject.toml /app/\n\nWORKDIR /app\nRUN poetry config virtualenvs.create false && \\\n  poetry install --extras ${DEVICE} --no-interaction --no-ansi --no-root $(/usr/bin/test $STAGE == production && echo \"--no-dev\")\n\n# Install the project.\nCOPY . /app/\nRUN poetry install --extras ${DEVICE} --no-interaction --no-ansi $(/usr/bin/test $STAGE == production && echo \"--no-dev\")\nENV CFG_PATH=\"/config/nlp_sa/conf.json\"\nENV PORT=8091\nCMD [\"sh\",\"-c\",\"umask 0002; python runner.py ${CFG_PATH} --port ${PORT}\"]\n"},"repairedBuild":{"startTime":1672948793561,"endTime":1672949572674,"error":null,"stdout":"Sending build context to Docker daemon   28.7MB\r\r\nStep 1/18 : ARG DEVICE=cpu\nStep 2/18 : FROM pytorch/pytorch:1.8.1-cuda11.1-cudnn8-runtime as build_gpu\n ---> 5ffed6c83695\nStep 3/18 : RUN pip install --no-cache-dir --upgrade pip\n ---> Running in 06e9ad8dd904\nCollecting pip\n  Downloading pip-22.3.1-py3-none-any.whl (2.1 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.2.4\n    Uninstalling pip-20.2.4:\n      Successfully uninstalled pip-20.2.4\nSuccessfully installed pip-22.3.1\nRemoving intermediate container 06e9ad8dd904\n ---> 9726a77a17f6\nStep 4/18 : FROM python:3.8 as build_cpu\n ---> 51a078947558\nStep 5/18 : FROM build_${DEVICE}\n ---> 51a078947558\nStep 6/18 : ARG STAGE=\"production\"\n ---> Running in f8f472284479\nRemoving intermediate container f8f472284479\n ---> 79eccfbe3878\nStep 7/18 : ARG DEVICE=cpu\n ---> Running in 036338d5515b\nRemoving intermediate container 036338d5515b\n ---> c7100c835061\nStep 8/18 : ENV STAGE=${STAGE}   PYTHONFAULTHANDLER=1   PYTHONUNBUFFERED=1   PYTHONHASHSEED=random   PIP_NO_CACHE_DIR=off   PIP_DISABLE_PIP_VERSION_CHECK=on   PIP_DEFAULT_TIMEOUT=100   POETRY_VERSION=1.1.7   POETRY_HOME=\"/usr/local/poetry\"\n ---> Running in 544ecc32f0d1\nRemoving intermediate container 544ecc32f0d1\n ---> d44561e9b5de\nStep 9/18 : RUN apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y curl gcc make &&     rm -rf /var/lib/apt/lists/*\n ---> Running in 8606ddb8e2e0\nGet:1 http://deb.debian.org/debian bullseye InRelease [116 kB]\nGet:2 http://deb.debian.org/debian-security bullseye-security InRelease [48.4 kB]\nGet:3 http://deb.debian.org/debian bullseye-updates InRelease [44.1 kB]\nGet:4 http://deb.debian.org/debian bullseye/main amd64 Packages [8183 kB]\nGet:5 http://deb.debian.org/debian-security bullseye-security/main amd64 Packages [210 kB]\nGet:6 http://deb.debian.org/debian bullseye-updates/main amd64 Packages [14.6 kB]\nFetched 8616 kB in 2s (5133 kB/s)\nReading package lists...\nReading package lists...\nBuilding dependency tree...\nReading state information...\ncurl is already the newest version (7.74.0-1.3+deb11u3).\ngcc is already the newest version (4:10.2.1-1).\nmake is already the newest version (4.3-4.1).\n0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.\nRemoving intermediate container 8606ddb8e2e0\n ---> 9d9f6a5c7394\nStep 10/18 : RUN curl -f -sSL https://install.python-poetry.org | python - --version 1.2.0     && ln -sf /usr/local/poetry/bin/poetry /usr/local/bin/poetry\n ---> Running in 01ea44caaaaf\nRetrieving Poetry metadata\n\n# Welcome to Poetry!\n\nThis will download and install the latest version of Poetry,\na dependency and package manager for Python.\n\nIt will add the `poetry` command to Poetry's bin directory, located at:\n\n/usr/local/poetry/bin\n\nYou can uninstall at any time by executing this script with the --uninstall option,\nand these changes will be reverted.\n\nInstalling Poetry (1.2.0)\nInstalling Poetry (1.2.0): Creating environment\nInstalling Poetry (1.2.0): Installing Poetry\nInstalling Poetry (1.2.0): Creating script\nInstalling Poetry (1.2.0): Done\n\nPoetry (1.2.0) is installed now. Great!\n\nTo get started you need Poetry's bin directory (/usr/local/poetry/bin) in your `PATH`\nenvironment variable.\n\nAdd `export PATH=\"/usr/local/poetry/bin:$PATH\"` to your shell configuration file.\n\nAlternatively, you can call Poetry explicitly with `/usr/local/poetry/bin/poetry`.\n\nYou can test that everything is set up by executing:\n\n`poetry --version`\n\nRemoving intermediate container 01ea44caaaaf\n ---> 380b017e09f1\nStep 11/18 : COPY poetry.lock pyproject.toml /app/\n ---> 43046f508e5b\nStep 12/18 : WORKDIR /app\n ---> Running in b52274ca8415\nRemoving intermediate container b52274ca8415\n ---> 0f7b0e462110\nStep 13/18 : RUN poetry config virtualenvs.create false &&   poetry install --extras ${DEVICE} --no-interaction --no-ansi --no-root $(/usr/bin/test $STAGE == production && echo \"--no-dev\")\n ---> Running in 98635948b05c\nSkipping virtualenv creation, as specified in config file.\n\u001b[91mThe `--no-dev` option is deprecated, use the `--only main` notation instead.\n\u001b[0mInstalling dependencies from lock file\n\nPackage operations: 139 installs, 2 updates, 0 removals\n\n  • Installing certifi (2022.12.7)\n  • Installing charset-normalizer (2.0.12)\n  • Installing idna (3.3)\n  • Installing pyasn1 (0.4.8)\n  • Installing urllib3 (1.26.9)\n  • Installing cachetools (5.0.0)\n  • Installing oauthlib (3.2.1)\n  • Installing pyasn1-modules (0.2.8)\n  • Installing pyparsing (3.0.7)\n  • Installing requests (2.28.1)\n  • Installing rsa (4.8)\n  • Installing six (1.16.0)\n  • Installing zipp (3.7.0)\n  • Installing catalogue (2.0.7)\n  • Installing click (7.1.2)\n  • Installing cymem (2.0.6)\n  • Installing frozenlist (1.3.0)\n  • Installing google-auth (2.6.2)\n  • Installing importlib-metadata (4.11.3)\n  • Installing multidict (6.0.2)\n  • Installing murmurhash (1.0.6)\n  • Installing numpy (1.22.4)\n  • Installing packaging (21.3)\n  • Installing requests-oauthlib (1.3.1)\n  • Updating setuptools (57.5.0 -> 65.5.1)\n  • Installing tomli (1.2.2)\n  • Installing typing-extensions (4.1.1)\n  • Installing absl-py (1.0.0)\n  • Installing aiosignal (1.2.0)\n  • Installing async-timeout (4.0.2)\n  • Installing attrs (21.4.0)\n  • Installing blis (0.7.7)\n  • Installing cycler (0.11.0)\n  • Installing filelock (3.6.0)\n  • Installing fonttools (4.31.2)\n  • Installing google-auth-oauthlib (0.4.6)\n  • Installing grpcio (1.47.0)\n  • Installing humanfriendly (10.0)\n  • Installing joblib (1.2.0)\n  • Installing kiwisolver (1.4.2)\n  • Installing locket (0.2.1)\n  • Installing markdown (3.3.6)\n  • Installing markupsafe (2.1.1)\n  • Installing mpmath (1.2.1)\n  • Installing pillow (9.3.0)\n  • Installing preshed (3.0.6)\n  • Installing protobuf (3.19.5)\n  • Installing pydantic (1.8.2)\n  • Installing python-dateutil (2.8.2)\n  • Installing pytz (2022.1)\n  • Installing pyyaml (6.0)\n  • Installing regex (2022.1.18)\n  • Installing setuptools-scm (6.4.2)\n  • Installing smart-open (5.2.1)\n  • Installing srsly (2.4.2)\n  • Installing tensorboard-data-server (0.6.1)\n  • Installing tensorboard-plugin-wit (1.8.1)\n  • Installing toolz (0.11.2)\n  • Installing tqdm (4.63.0)\n  • Installing typer (0.4.0)\n  • Installing wasabi (0.9.0)\n  • Installing werkzeug (2.1.0)\n  • Updating wheel (0.38.4 -> 0.38.1)\n  • Installing yarl (1.7.2)\n  • Installing aiohttp (3.8.1)\n  • Installing astunparse (1.6.3)\n  • Installing cloudpickle (2.0.0)\n  • Installing coloredlogs (15.0.1)\n  • Installing dill (0.3.4)\n  • Installing flatbuffers (2.0)\n  • Installing fsspec (2022.2.0)\n  • Installing gast (0.4.0)\n  • Installing google-pasta (0.2.0)\n  • Installing h5py (3.6.0)\n  • Installing heapdict (1.0.1)\n  • Installing huggingface-hub (0.4.0)\n  • Installing jinja2 (3.1.1)\n  • Installing keras (2.8.0)\n  • Installing keras-preprocessing (1.1.2)\n  • Installing libclang (13.0.0)\n  • Installing matplotlib (3.5.1)\n  • Installing opt-einsum (3.3.0)\n  • Installing pandas (1.4.1)\n  • Installing partd (1.2.0)\n  • Installing pathy (0.6.1)\n  • Installing sacremoses (0.0.49)\n  • Installing scipy (1.8.0)\n  • Installing spacy-legacy (3.0.9)\n  • Installing sympy (1.11.1)\n  • Installing tensorboard (2.8.0)\n  • Installing tensorflow-estimator (2.8.0)\n  • Installing tensorflow-io-gcs-filesystem (0.24.0)\n  • Installing termcolor (1.1.0)\n  • Installing thinc (8.0.13)\n  • Installing threadpoolctl (3.1.0)\n  • Installing tokenizers (0.12.1)\n  • Installing torch (1.9.0)\n  • Installing wrapt (1.14.0)\n  • Installing dask (2021.12.0)\n  • Installing h11 (0.13.0)\n  • Installing msgpack (1.0.3)\n  • Installing multiprocess (0.70.12.2)\n  • Installing nltk (3.7)\n  • Installing onnx (1.12.0)\n  • Installing onnxruntime (1.12.1)\n  • Installing psutil (5.9.0)\n  • Installing pyarrow (7.0.0)\n  • Installing responses (0.18.0)\n  • Installing scikit-learn (1.0.2)\n  • Installing seaborn (0.11.2)\n  • Installing sentencepiece (0.1.96)\n  • Installing sortedcontainers (2.4.0)\n  • Installing spacy (3.1.5)\n  • Installing starlette (0.14.2)\n  • Installing structlog (21.1.0)\n  • Installing tblib (1.7.0)\n  • Installing tenacity (8.0.1)\n  • Installing tensorflow (2.8.2)\n  • Installing tensorflow-hub (0.12.0)\n  • Installing torchvision (0.12.0)\n  • Installing tornado (6.1)\n  • Installing transformers (4.16.2)\n  • Installing xxhash (3.0.0)\n  • Installing zict (2.1.0)\n  • Installing aiofiles (0.6.0)\n  • Installing baal (1.5.2)\n  • Installing datasets (2.1.0)\n  • Installing distributed (2021.12.0)\n  • Installing en-core-web-sm (3.1.0 https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.1.0/en_core_web_sm-3.1.0.tar.gz#egg=en_core_web_sm)\n  • Installing faiss-cpu (1.6.5)\n  • Installing fastapi (0.65.3)\n  • Installing fr-core-news-md (3.1.0 https://github.com/explosion/spacy-models/releases/download/fr_core_news_md-3.1.0/fr_core_news_md-3.1.0.tar.gz#egg=fr_core_news_md)\n  • Installing nlpaug (1.1.10)\n  • Installing onnxruntime-extensions (0.3.1)\n  • Installing orjson (3.6.3)\n  • Installing plotly (5.6.0)\n  • Installing retrying (1.3.3)\n  • Installing sentence-transformers (2.1.0)\n  • Installing spectral-metric (0.6.1)\n  • Installing tensorflow-text (2.8.2)\n  • Installing uvicorn (0.13.4)\nRemoving intermediate container 98635948b05c\n ---> 3f1048ba7acd\nStep 14/18 : COPY . /app/\n ---> e989c8065020\nStep 15/18 : RUN poetry install --extras ${DEVICE} --no-interaction --no-ansi $(/usr/bin/test $STAGE == production && echo \"--no-dev\")\n ---> Running in 8feecc07cfbf\nSkipping virtualenv creation, as specified in config file.\n\u001b[91mThe `--no-dev` option is deprecated, use the `--only main` notation instead.\n\u001b[0mInstalling dependencies from lock file\n\nNo dependencies to install or update\n\nInstalling the current project: azimuth (2.5.2)\nRemoving intermediate container 8feecc07cfbf\n ---> e3f422a4e617\nStep 16/18 : ENV CFG_PATH=\"/config/nlp_sa/conf.json\"\n ---> Running in 7f671053a9a5\nRemoving intermediate container 7f671053a9a5\n ---> 2a21cbf25364\nStep 17/18 : ENV PORT=8091\n ---> Running in 1b39ac06d52d\nRemoving intermediate container 1b39ac06d52d\n ---> 6ea9a3359990\nStep 18/18 : CMD [\"sh\",\"-c\",\"umask 0002; python runner.py ${CFG_PATH} --port ${PORT}\"]\n ---> Running in e9c4e254cf43\nRemoving intermediate container e9c4e254cf43\n ---> 37a5e661de72\nSuccessfully built 37a5e661de72\nSuccessfully tagged azimuth:latest\n","stderr":"","imageSize":8805990696}}