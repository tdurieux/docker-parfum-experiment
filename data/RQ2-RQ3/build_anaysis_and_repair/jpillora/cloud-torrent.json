{"repository":"https://github.com/jpillora/cloud-torrent","dockerfilePath":"Dockerfile","startTime":1672410546562,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/jpillora/cloud-torrent'...\n","error":null,"commit":"1a741e3d8dd2d739be740e20d93fb33c4132615e"},"originalBuild":{"startTimestamp":1672410548716,"endTimestamp":1672410575696,"error":{"code":127,"killed":false,"signal":null,"cmd":"docker build --no-cache --force-rm -t cloud-torrent:latest -f /tmp/dinghy-analysis/jpillora/cloud-torrent/Dockerfile ."},"stdout":"Sending build context to Docker daemon  25.48MB\r\r\nStep 1/13 : FROM alpine:edge\nedge: Pulling from library/alpine\na71ff8a5264a: Pulling fs layer\na71ff8a5264a: Verifying Checksum\na71ff8a5264a: Download complete\na71ff8a5264a: Pull complete\nDigest: sha256:c223f84e05c23c0571ce8decefef818864869187e1a3ea47719412e205c8c64e\nStatus: Downloaded newer image for alpine:edge\n ---> 121d0da75751\nStep 2/13 : LABEL maintainer=\"dev@jpillora.com\"\n ---> Running in 6a99a57939e8\nRemoving intermediate container 6a99a57939e8\n ---> 600cea54bd8a\nStep 3/13 : ENV GOPATH /go\n ---> Running in 5bd745f17587\nRemoving intermediate container 5bd745f17587\n ---> 3b21ea0bfb0c\nStep 4/13 : ENV NAME cloud-torrent\n ---> Running in 8b3efda845bf\nRemoving intermediate container 8b3efda845bf\n ---> 7499a3852272\nStep 5/13 : ENV PACKAGE github.com/jpillora/$NAME\n ---> Running in 7d5b6a203954\nRemoving intermediate container 7d5b6a203954\n ---> 0ebf7e3a3b0e\nStep 6/13 : ENV PACKAGE_DIR $GOPATH/src/$PACKAGE\n ---> Running in a29fc37ce875\nRemoving intermediate container a29fc37ce875\n ---> 83ddb2494747\nStep 7/13 : ENV GOLANG_VERSION 1.9.1\n ---> Running in f23e73fc20e6\nRemoving intermediate container f23e73fc20e6\n ---> 000a35b741ab\nStep 8/13 : ENV GOLANG_SRC_URL https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\n ---> Running in 3d9344374bbd\nRemoving intermediate container 3d9344374bbd\n ---> 501f3c3385ad\nStep 9/13 : ENV GOLANG_SRC_SHA256 a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e\n ---> Running in 8cd006bdc33e\nRemoving intermediate container 8cd006bdc33e\n ---> 20ac328656e0\nStep 10/13 : ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n ---> Running in 750a0d2e8e2c\nRemoving intermediate container 750a0d2e8e2c\n ---> 4f5bbf1dc176\nStep 11/13 : ENV CGO_ENABLED 0\n ---> Running in 9eff8b38f647\nRemoving intermediate container 9eff8b38f647\n ---> ba37178ddf9e\nStep 12/13 : RUN set -ex \t&& apk update \t&& apk add ca-certificates \t&& apk add --no-cache --virtual .build-deps \tbash \tgcc \tmusl-dev \topenssl \tgit \tgo \tcurl \t&& curl -s https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/alpine3.6/no-pic.patch -o /no-pic.patch \t&& cat /no-pic.patch \t&& export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t&& wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \t&& echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz \t&& rm golang.tar.gz \t&& cd /usr/local/go/src \t&& patch -p2 -i /no-pic.patch \t&& ./make.bash \t&& mkdir -p $PACKAGE_DIR \t&& git clone https://$PACKAGE.git $PACKAGE_DIR \t&& cd $PACKAGE_DIR \t&& go build -ldflags \"-X main.VERSION=$(git describe --abbrev=0 --tags)\" -o /usr/local/bin/$NAME \t&& apk del .build-deps \t&& rm -rf /no-pic.patch $GOPATH /usr/local/go\n ---> Running in 3b054bca5b81\n\u001b[91m+ apk update\n\u001b[0mfetch https://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/APKINDEX.tar.gz\nv3.17.0-2474-g3669a29b1a [https://dl-cdn.alpinelinux.org/alpine/edge/main]\nv3.17.0-2479-g129d2332c3 [https://dl-cdn.alpinelinux.org/alpine/edge/community]\nOK: 17980 distinct packages available\n\u001b[91m+ apk add ca-certificates\n\u001b[0m(1/1) Installing ca-certificates (20221203-r1)\nExecuting busybox-1.35.0-r27.trigger\nExecuting ca-certificates-20221203-r1.trigger\nOK: 8 MiB in 16 packages\n\u001b[91m+ apk add --no-cache --virtual .build-deps bash gcc musl-dev openssl git go curl\n\u001b[0mfetch https://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/APKINDEX.tar.gz\n(1/26) Upgrading musl (1.2.3-r3 -> 1.2.3-r4)\n(2/26) Installing ncurses-terminfo-base (6.3_p20221224-r0)\n(3/26) Installing ncurses-libs (6.3_p20221224-r0)\n(4/26) Installing readline (8.2.0-r0)\n(5/26) Installing bash (5.2.15-r0)\nExecuting bash-5.2.15-r0.post-install\n(6/26) Installing libgcc (12.2.1_git20220924-r6)\n(7/26) Installing libstdc++ (12.2.1_git20220924-r6)\n(8/26) Installing binutils (2.39-r2)\n(9/26) Installing libgomp (12.2.1_git20220924-r6)\n(10/26) Installing libatomic (12.2.1_git20220924-r6)\n(11/26) Installing gmp (6.2.1-r2)\n(12/26) Installing isl25 (0.25-r0)\n(13/26) Installing mpfr4 (4.1.1-r1)\n(14/26) Installing mpc1 (1.3.1-r0)\n(15/26) Installing gcc (12.2.1_git20220924-r6)\n(16/26) Installing musl-dev (1.2.3-r4)\n(17/26) Installing openssl (3.0.7-r1)\n(18/26) Installing brotli-libs (1.0.9-r10)\n(19/26) Installing nghttp2-libs (1.51.0-r0)\n(20/26) Installing libcurl (7.87.0-r1)\n(21/26) Installing libexpat (2.5.0-r0)\n(22/26) Installing pcre2 (10.42-r0)\n(23/26) Installing git (2.39.0-r0)\n(24/26) Installing go (1.19.4-r0)\n(25/26) Installing curl (7.87.0-r1)\n(26/26) Installing .build-deps (20221230.142920)\nExecuting busybox-1.35.0-r27.trigger\nOK: 570 MiB in 41 packages\n\u001b[91m+ curl -s https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/alpine3.6/no-pic.patch -o /no-pic.patch\n\u001b[0m\u001b[91m+ cat /no-pic.patch\n\u001b[0mdiff --git a/src/cmd/link/internal/ld/lib.go b/src/cmd/link/internal/ld/lib.go\nindex 6252871..94ef43c 100644\n--- a/src/cmd/link/internal/ld/lib.go\n+++ b/src/cmd/link/internal/ld/lib.go\n@@ -1293,6 +1293,11 @@ func (l *Link) hostlink() {\n \t\targv = append(argv, peimporteddlls()...)\n \t}\n \n+\t// The Go linker does not currently support building PIE\n+\t// executables when using the external linker. See:\n+\t// https://github.com/golang/go/issues/6940\n+\targv = append(argv, \"-fno-PIC\")\n+\n \tif l.Debugvlog != 0 {\n \t\tl.Logf(\"%5.2f host link:\", Cputime())\n \t\tfor _, v := range argv {\n\u001b[91m+ go env GOROOT\n\u001b[0m\u001b[91m+ export 'GOROOT_BOOTSTRAP=/usr/lib/go'\n+ wget -q https://golang.org/dl/go1.9.1.src.tar.gz -O golang.tar.gz\n\u001b[0m\u001b[91m+ echo 'a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e  golang.tar.gz'\n\u001b[0m\u001b[91m+ sha256sum -c -\n\u001b[0mgolang.tar.gz: OK\n\u001b[91m+ tar -C /usr/local -xzf golang.tar.gz\n\u001b[0m\u001b[91m+ rm golang.tar.gz\n\u001b[0m\u001b[91m+ cd /usr/local/go/src\n+ patch -p2 -i /no-pic.patch\n/bin/sh: patch: not found\n\u001b[0mRemoving intermediate container 3b054bca5b81\n","stderr":"The command '/bin/sh -c set -ex \t&& apk update \t&& apk add ca-certificates \t&& apk add --no-cache --virtual .build-deps \tbash \tgcc \tmusl-dev \topenssl \tgit \tgo \tcurl \t&& curl -s https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/alpine3.6/no-pic.patch -o /no-pic.patch \t&& cat /no-pic.patch \t&& export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t&& wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \t&& echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz \t&& rm golang.tar.gz \t&& cd /usr/local/go/src \t&& patch -p2 -i /no-pic.patch \t&& ./make.bash \t&& mkdir -p $PACKAGE_DIR \t&& git clone https://$PACKAGE.git $PACKAGE_DIR \t&& cd $PACKAGE_DIR \t&& go build -ldflags \"-X main.VERSION=$(git describe --abbrev=0 --tags)\" -o /usr/local/bin/$NAME \t&& apk del .build-deps \t&& rm -rf /no-pic.patch $GOPATH /usr/local/go' returned a non-zero code: 127\n"},"endTime":1672410575805}