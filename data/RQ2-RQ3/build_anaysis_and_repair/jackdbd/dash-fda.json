{"repository":"https://github.com/jackdbd/dash-fda","dockerfilePath":"Dockerfile","startTime":1672003932991,"clone":{"stdout":"","stderr":"Cloning into '/tmp/dinghy-analysis/jackdbd/dash-fda'...\n","error":null,"commit":"7b9b567ffa8395fac7484502da5f0ca6ae530871"},"originalBuild":{"startTimestamp":1672003934371,"endTimestamp":1672004090607,"error":null,"stdout":"Sending build context to Docker daemon    126kB\r\r\nStep 1/12 : FROM python:3.8\n3.8: Pulling from library/python\n32de3c850997: Already exists\nfa1d4c8d85a4: Already exists\nc796299bbbdd: Already exists\n81283a9569ad: Already exists\n60b38700e7fb: Already exists\n0f67f32c26d3: Already exists\ne04be0d92e59: Pulling fs layer\nb5052f164cdb: Pulling fs layer\ne9c72aa5d062: Pulling fs layer\ne9c72aa5d062: Waiting\nb5052f164cdb: Download complete\ne04be0d92e59: Verifying Checksum\ne04be0d92e59: Download complete\ne9c72aa5d062: Verifying Checksum\ne9c72aa5d062: Download complete\ne04be0d92e59: Pull complete\nb5052f164cdb: Pull complete\ne9c72aa5d062: Pull complete\nDigest: sha256:3a519327ab069a4e356a8aa279e80b7ef6270e17c5df1493dd0a5b281755e95a\nStatus: Downloaded newer image for python:3.8\n ---> 51a078947558\nStep 2/12 : LABEL maintainer=\"jackdebidda@gmail.com\"\n ---> Running in 99ea0fee2334\nRemoving intermediate container 99ea0fee2334\n ---> 2a4d26c12007\nStep 3/12 : ENV POETRY_VERSION=1.0.0     APP_DIR=/usr/src/app     APP_PORT=5000     PATH=\"/root/.poetry/bin:$PATH\"\n ---> Running in 7ce606717f11\nRemoving intermediate container 7ce606717f11\n ---> 64244a29f022\nStep 4/12 : RUN mkdir -p ${APP_DIR}\n ---> Running in dd105ab70a22\nRemoving intermediate container dd105ab70a22\n ---> 41635e267f77\nStep 5/12 : WORKDIR ${APP_DIR}\n ---> Running in e66b49957ffb\nRemoving intermediate container e66b49957ffb\n ---> 308e496231ba\nStep 6/12 : RUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/${POETRY_VERSION}/get-poetry.py | python &&     poetry config virtualenvs.create false\n ---> Running in 0914e52df241\nRetrieving Poetry metadata\n\n# Welcome to Poetry!\n\nThis will download and install the latest version of Poetry,\na dependency and package manager for Python.\n\nIt will add the `poetry` command to Poetry's bin directory, located at:\n\n$HOME/.poetry/bin\n\nThis path will then be added to your `PATH` environment variable by\nmodifying the profile file located at:\n\n$HOME/.profile\n\nYou can uninstall at any time with `poetry self:uninstall`,\nor by executing this script with the --uninstall option,\nand these changes will be reverted.\n\nInstalling version: 1.0.0\n  - Downloading poetry-1.0.0-linux.tar.gz (27.76MB)\n\nPoetry (1.0.0) is installed now. Great!\n\nTo get started you need Poetry's bin directory ($HOME/.poetry/bin) in your `PATH`\nenvironment variable. Next time you log in this will be done\nautomatically.\n\nTo configure your current shell run `source $HOME/.poetry/env`\n\nRemoving intermediate container 0914e52df241\n ---> 4651cdeb6b38\nStep 7/12 : COPY pyproject.toml poetry.lock ${APP_DIR}/\n ---> fd41b8c0c659\nStep 8/12 : RUN poetry install\n ---> Running in 1b43c87734f2\nSkipping virtualenv creation, as specified in config file.\nInstalling dependencies from lock file\n\n\nPackage operations: 49 installs, 10 updates, 0 removals\n\n  - Installing markupsafe (1.1.1)\n  - Installing click (7.1.2)\n  - Installing itsdangerous (1.1.0)\n  - Installing jinja2 (2.11.2)\n  - Updating six (1.13.0 /root/.poetry/lib/poetry/_vendor/py3.8 -> 1.15.0)\n  - Installing werkzeug (1.0.1)\n  - Installing brotli (1.0.9)\n  - Installing flask (1.1.2)\n  - Updating pyparsing (2.4.5 /root/.poetry/lib/poetry/_vendor/py3.8 -> 2.4.7)\n  - Installing retrying (1.3.3)\n  - Updating attrs (19.3.0 /root/.poetry/lib/poetry/_vendor/py3.8 -> 20.2.0)\n  - Updating certifi (2019.11.28 /root/.poetry/lib/poetry/_vendor/py3.8 -> 2020.6.20)\n  - Updating chardet (3.0.4 /root/.poetry/lib/poetry/_vendor/py3.8 -> 3.0.4)\n  - Installing dash-core-components (1.12.1)\n  - Installing dash-html-components (1.1.1)\n  - Installing dash-renderer (1.8.1)\n  - Installing dash-table (4.10.1)\n  - Installing flask-compress (1.5.0)\n  - Installing future (0.18.2)\n  - Updating idna (2.8 /root/.poetry/lib/poetry/_vendor/py3.8 -> 2.10)\n  - Installing iniconfig (1.0.1)\n  - Installing lazy-object-proxy (1.4.3)\n  - Installing more-itertools (8.5.0)\n  - Installing packaging (20.4)\n  - Installing plotly (4.10.0)\n  - Installing pluggy (0.13.1)\n  - Installing py (1.9.0)\n  - Installing toml (0.10.1)\n  - Updating urllib3 (1.25.7 /root/.poetry/lib/poetry/_vendor/py3.8 -> 1.25.10)\n  - Installing wrapt (1.12.1)\n  - Installing appdirs (1.4.4)\n  - Installing astroid (2.4.2)\n  - Installing coverage (5.3)\n  - Installing dash (1.16.1)\n  - Installing isort (5.5.3)\n  - Installing mccabe (0.6.1)\n  - Installing mypy-extensions (0.4.3)\n  - Installing numpy (1.19.2)\n  - Updating pastel (0.1.1 /root/.poetry/lib/poetry/_vendor/py3.8 -> 0.2.1)\n  - Installing pathspec (0.8.0)\n  - Installing pytest (6.0.2)\n  - Installing python-dateutil (2.8.1)\n  - Installing pytz (2020.1)\n  - Installing regex (2020.7.14)\n  - Updating requests (2.22.0 /root/.poetry/lib/poetry/_vendor/py3.8 -> 2.24.0)\n  - Updating tomlkit (0.5.8 /root/.poetry/lib/poetry/_vendor/py3.8 -> 0.7.0)\n  - Installing typed-ast (1.4.1)\n  - Installing typing-extensions (3.7.4.3)\n  - Installing black (20.8b1)\n  - Installing chart-studio (1.1.0)\n  - Installing dash-bootstrap-components (0.10.6)\n  - Installing ddt (1.4.1)\n  - Installing flask-caching (1.9.0)\n  - Installing gunicorn (20.0.4)\n  - Installing pandas (1.1.2)\n  - Installing poethepoet (0.8.0)\n  - Installing pylint (2.6.0)\n  - Installing pytest-cov (2.10.1)\n  - Installing python-dotenv (0.14.0)\nRemoving intermediate container 1b43c87734f2\n ---> 632e1ecde586\nStep 9/12 : COPY assets/* ${APP_DIR}/assets/\n ---> 6712f6bca5df\nStep 10/12 : COPY dash_fda/* assets ${APP_DIR}/dash_fda/\n ---> 80b82ac803c5\nStep 11/12 : EXPOSE ${APP_PORT}\n ---> Running in e48b0aa77075\nRemoving intermediate container e48b0aa77075\n ---> 316dce221794\nStep 12/12 : CMD gunicorn --bind 0.0.0.0:${APP_PORT} --access-logfile - \"dash_fda.app:server\"\n ---> Running in aa6cee828a45\nRemoving intermediate container aa6cee828a45\n ---> 38cdcd2d7a05\nSuccessfully built 38cdcd2d7a05\nSuccessfully tagged dash-fda:latest\n","stderr":"","imageSize":1305939784},"repair":{"violations":[],"repairedDockerfile":"FROM python:3.8\n\nLABEL maintainer=\"jackdebidda@gmail.com\"\n\nENV POETRY_VERSION=1.0.0 \\\n    APP_DIR=/usr/src/app \\\n    APP_PORT=5000 \\\n    PATH=\"/root/.poetry/bin:$PATH\"\n\nRUN mkdir -p ${APP_DIR}\n\n# The WORKDIR instruction sets the working directory for any RUN, CMD,\n# ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile.\nWORKDIR ${APP_DIR}\n\n# Install and config Poetry\nRUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/${POETRY_VERSION}/get-poetry.py | python && \\\n    poetry config virtualenvs.create false\n\n# Copy only requirements, to cache them in Docker layer.\nCOPY pyproject.toml poetry.lock ${APP_DIR}/\nRUN poetry install\n\nCOPY assets/* ${APP_DIR}/assets/\nCOPY dash_fda/* assets ${APP_DIR}/dash_fda/\n\nEXPOSE ${APP_PORT}\n\nCMD gunicorn --bind 0.0.0.0:${APP_PORT} --access-logfile - \"dash_fda.app:server\"\n"},"endTime":1672004092102}