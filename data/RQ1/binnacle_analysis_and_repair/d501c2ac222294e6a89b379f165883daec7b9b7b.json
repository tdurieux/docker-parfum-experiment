{
  "startTime": 1674250532058,
  "endTime": 1674250532232,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 6,
        "columnEnd": 39
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update -q && apt-get install --no-install-recommends -qy \\\n      build-essential \\\n      libpq-dev \\\n      zlib1g-dev \\\n      libssl-dev \\\n      libreadline6-dev \\\n      libyaml-dev \\\n      libsqlite3-dev \\\n      nginx \\\n      supervisor \\\n      ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# If you want to make SSL connections to servers using certificates signed by\n# your private CA, copy your cacert.pem file into config/ and uncomment!\n# COPY config/cacert.pem /usr/local/share/ca-certificates/local.devel.crt\n# RUN /usr/sbin/update-ca-certificates\n\nCOPY config/nginx.conf /etc/nginx/nginx.conf\n\nADD http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.2.tar.gz /tmp/\n\nWORKDIR /tmp\nRUN tar -xzf ruby-2.2.2.tar.gz && \\\n      cd /tmp/ruby-2.2.2 && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-install-doc && make && make install && \\\n      cd /tmp && rm -rf ruby-2.2.2/ && rm -f ruby-2.2.2.tar.gz\n     RUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN gem update --system --no-document && \\\n      gem install bundler --no-document && rm -rf /root/.gem;\n\nRUN adduser --disabled-password --home=/app --gecos \"\" app\n"
}