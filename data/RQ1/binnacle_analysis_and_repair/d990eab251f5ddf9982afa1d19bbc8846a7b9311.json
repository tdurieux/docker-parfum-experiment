{
  "startTime": 1674246159812,
  "endTime": 1674246160198,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 3,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 3,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine\nEXPOSE 3000\nENV BP=$GOPATH/src/github.com/gobuffalo/buffalo\nRUN apk add --no-cache --upgrade apk-tools \\\n&& apk add --no-cache bash curl openssl git build-base nodejs npm postgresql libpq postgresql-contrib sqlite sqlite-dev mysql-client vim\n\nRUN go version && go get -v -u github.com/markbates/deplist/deplist\n\n\nRUN go get -u github.com/golang/dep/cmd/dep \\\n&& go get -v -u github.com/gobuffalo/flect \\\n&& go get -v -u github.com/gobuffalo/makr \\\n&& go get -v -u github.com/gobuffalo/packr \\\n&& go get -v -u github.com/gobuffalo/packr/v2 \\\n&& go get -v -u github.com/gobuffalo/tags \\\n&& go get -v -u github.com/gobuffalo/pop \\\n&& go get -v -u github.com/gobuffalo/x/... \\\n&& go get -v -u github.com/mattn/go-sqlite3 \\\n&& go get -v -u github.com/markbates/filetest \\\n&& go get -v -u github.com/markbates/grift \\\n&& go get -v -u github.com/markbates/refresh \\\n&& go get -v -u github.com/gobuffalo/httptest \\\n&& go get -v -u github.com/gorilla/sessions \\\n&& go get -v -u golang.org/x/vgo \\\n&& go get -u github.com/alecthomas/gometalinter \\\n&& gometalinter --install\n\nRUN npm i -g --no-progress yarn \\\n&& yarn config set yarn-offline-mirror /npm-packages-offline-cache \\\n&& yarn config set yarn-offline-mirror-pruning true && npm cache clean --force; && yarn cache clean;\n\n\nRUN rm -rfv $BP && mkdir -p $BP\nWORKDIR $BP\n\nCOPY . .\nRUN make deps && make install\n\nRUN buffalo version\n\nWORKDIR $GOPATH/src\n"
}