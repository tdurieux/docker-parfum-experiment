{
  "startTime": 1674249444001,
  "endTime": 1674249444794,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 11,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 11,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 11,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 11,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 11,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 11,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 39,
        "columnStart": 26,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 39,
        "columnStart": 26,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n########## Dockerfile for ScyllaDB version 2.3.1 #########\n#\n# This Dockerfile builds a basic installation of ScyllaDB.\n#\n# ScyllaDB is a high performance distributed NoSQL database.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build --build-arg TARGET=<target_value> -t <image_name> .\n#\n# To start ScyllaDB run the below command:\n# docker run -it --name <container_name>  <image> bash\n#\n# Reference :\n# http://www.scylladb.com\n#\n##################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV SOURCE_DIR=/tmp/source PATH=/opt/gcc-7.4.0/bin:/usr/local/bin:$PATH LD_LIBRARY_PATH=/opt/gcc-7.4.0/lib64:$LD_LIBRARY_PATH PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/\n\nARG TARGET\n\nWORKDIR $SOURCE_DIR\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y ant openjdk-8-jdk python libgnutls-dev systemtap-sdt-dev lksctp-tools \\\n                xfsprogs snappy libyaml-dev maven cmake openssl perl libc-ares-dev libevent-dev libmpfr-dev libmpcdec-dev \\\n                xz-utils automake gcc git make texinfo wget unzip libtool libssl-dev curl libsystemd-dev libhwloc-dev \\\n                libaio-dev libsctp-dev libsnappy-dev libpciaccess-dev libxml2-dev xfslibs-dev libgnutls28-dev libiconv-hook-dev \\\n                mpi-default-dev libbz2-dev python-dev libxslt-dev libjsoncpp-dev cmake ragel python3 python3-pyparsing \\\n                libprotobuf-dev protobuf-compiler liblz4-dev ninja-build libcrypto++-dev \\\n# Install dependency : GCC 7.4.0\n        && cd $SOURCE_DIR \\\n        && mkdir gcc && cd gcc \\\n        && wget https://ftpmirror.gnu.org/gcc/gcc-7.4.0/gcc-7.4.0.tar.xz \\\n        && tar -xf gcc-7.4.0.tar.xz && cd gcc-7.4.0 \\\n        && ./contrib/download_prerequisites \\\n        && mkdir objdir && cd objdir \\\n        && ../configure --prefix=/opt/gcc-7.4.0 --enable-languages=c,c++ --with-arch=zEC12 --with-long-double-128 \\\n             --build=s390x-linux-gnu --host=s390x-linux-gnu --target=s390x-linux-gnu                  \\\n             --enable-threads=posix --with-system-zlib --disable-multilib \\\n        && make -j 8 \\\n        && make install \\\n        && ln -sf /opt/gcc-7.4.0/bin/gcc /usr/bin/gcc \\\n        && ln -sf /opt/gcc-7.4.0/bin/g++ /usr/bin/g++ \\\n# Install dependency : antlr3\n        && cd $SOURCE_DIR \\\n        && mkdir antlr3 && cd antlr3 \\\n        && wget https://github.com/antlr/antlr3/archive/3.5.2.tar.gz \\\n        && tar -xzf 3.5.2.tar.gz && cd antlr3-3.5.2 \\\n        && cp runtime/Cpp/include/antlr3* /usr/local/include/ \\\n        && cd antlr-complete \\\n        && MAVEN_OPTS=\"-Xmx4G\" mvn \\\n        && echo 'java -cp '\"$(pwd)\"'/target/antlr-complete-3.5.2.jar org.antlr.Tool $@' | tee /usr/local/bin/antlr3 \\\n        && chmod +x /usr/local/bin/antlr3 \\\n# Install dependency : Boost\n        && cd $SOURCE_DIR \\\n        && mkdir boost && cd boost \\\n        && wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.gz \\\n        && tar -xf boost_1_68_0.tar.gz && cd boost_1_68_0 \\\n        && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/matrix.hpp \\\n        && sed -i 's/array\\.hpp/array_wrapper.hpp/g' boost/numeric/ublas/storage.hpp \\\n        && ./bootstrap.sh \\\n        && ./b2 toolset=gcc variant=release link=static runtime-link=static threading=multi cxxstd=14 --prefix=/usr/local/ --without-python install \\\n# Install dependency : Thrift\n        && cd $SOURCE_DIR \\\n        && mkdir thrift && cd thrift \\\n        && wget https://archive.apache.org/dist/thrift/0.9.3/thrift-0.9.3.tar.gz \\\n        && tar -xzf thrift-0.9.3.tar.gz \\\n        && cd thrift-0.9.3 \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-lua --without-go \\\n        && make -j 8 \\\n        && make install \\\n# Install dependency : yaml-cpp\n        && cd $SOURCE_DIR \\\n        && mkdir yaml-cpp && cd yaml-cpp \\\n        && wget https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-0.6.2.tar.gz \\\n        && tar -xzf yaml-cpp-0.6.2.tar.gz \\\n        && mkdir yaml-cpp-yaml-cpp-0.6.2/build && cd yaml-cpp-yaml-cpp-0.6.2/build \\\n        && cmake .. \\\n        && make && make install && rm gcc-7.4.0.tar.xz && rm -rf /var/lib/apt/lists/*;\n# Build ScyllaDB\nRUN     cd $SOURCE_DIR \\\n        && git clone -b branch-2.3-s390x https://github.com/linux-on-ibm-z/scylla \\\n        && cd scylla \\\n        && git submodule update --init --recursive \\\n        && ./configure.py --mode=release --target=$TARGET --debuginfo 1 --static --static-boost --static-thrift \\\n        && ninja -j 8\nENV     PATH=$SOURCE_DIR/scylla/build/release:$PATH\nEXPOSE  10000 9042 9160 7000 7001\n\nCMD scylla\n\n# End of Dockerfile\n"
}