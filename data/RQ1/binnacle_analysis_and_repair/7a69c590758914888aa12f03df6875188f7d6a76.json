{
  "startTime": 1674244283821,
  "endTime": 1674244285049,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 305,
        "lineEnd": 305,
        "columnStart": 8,
        "columnEnd": 101
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 329,
        "lineEnd": 329,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 343,
        "lineEnd": 343,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 8,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:16.04\n\n# Setup common locations\nENV     BFX_INSTALL_ROOT=/opt\nENV     JAVA_7_HOME=/usr/lib/jvm/java-7-openjdk-amd64 \\\n        JAVA_8_HOME=/usr/lib/jvm/java-8-openjdk-amd64     \nENV     JAVA8_BIN=$JAVA_8_HOME/bin/java \\\n        JAVA7_BIN=$JAVA_7_HOME/bin/java \\\n        PYTHON_BIN=/usr/bin/python \\\n        RSCRIPT_BIN=/usr/bin/Rscript\n\n# Install common dependencies\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y wget \\\n                                git \\\n                                cmake \\\n                                python \\\n                                python-pip \\\n                                software-properties-common \\\n                                python-software-properties \\\n                                unzip \\\n                                zlib1g-dev \\\n                                libncurses5-dev \\\n                                libncursesw5-dev \\\n                                locales \\\n                                libdb-dev \\\n                                vim \\\n                                nano \\\n                                pkg-config \\\n                                libjsoncpp-dev && rm -rf /var/lib/apt/lists/*;\n\n# Configure locales\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n\t&& locale-gen en_US.UTF-8 \\\n\t&& /usr/sbin/update-locale LANG=en_US.UTF-8\n\nENV     LC_ALL=en_US.UTF-8 \\\n        LANG=en_US.UTF-8\n\n# JAVA 8\nRUN add-apt-repository ppa:openjdk-r/ppa && \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n# JAVA 7\nRUN apt-get install --no-install-recommends -y openjdk-7-jre && rm -rf /var/lib/apt/lists/*;\n\n## R\nRUN apt-get install --no-install-recommends -y r-base \\\n                                r-cran-getopt \\\n                                r-cran-plyr && rm -rf /var/lib/apt/lists/*;\n\n\n## STAR\nENV STAR_HOME=$BFX_INSTALL_ROOT/STAR\nENV STAR_BIN=$STAR_HOME/STAR-STAR_2.4.0h1/bin/Linux_x86_64/STAR\nRUN     mkdir -p $STAR_HOME && \\\n        cd $STAR_HOME && \\\n        wget -q \"https://github.com/alexdobin/STAR/archive/STAR_2.4.0h1.tar.gz\" && \\\n        tar -xzf STAR_2.4.0h1.tar.gz && \\\n        rm -f STAR_2.4.0h1.tar.gz && \\\n        cd $BFX_INSTALL_ROOT\n\n## SeqPurge\n### Install 3rd party dependencies\nRUN apt-get install --no-install-recommends -y g++ \\\n                                qt5-default \\\n                                libqt5xmlpatterns5-dev \\\n                                libqt5sql5-mysql \\\n                                python-matplotlib && rm -rf /var/lib/apt/lists/*;\n\n### Install ngs-bits (SeqPurge)\nENV NGS_BITS_HOME=$BFX_INSTALL_ROOT/ngs_bits\nENV SEQPURGE_BIN=$NGS_BITS_HOME/ngs-bits/bin/SeqPurge\nRUN     mkdir -p $NGS_BITS_HOME && \\\n        cd $NGS_BITS_HOME && \\\n        git clone --recursive https://github.com/imgag/ngs-bits.git && \\\n        cd ngs-bits && \\\n        git checkout 2019_03 && \\\n        git submodule update --recursive --init && \\\n        make -j$(nproc) build_3rdparty && \\\n        make -j$(nproc) build_tools_release && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install cufflinks\nENV CUFFLINKS_HOME=$BFX_INSTALL_ROOT/cufflinks\nENV CUFFLINKS_BIN=$CUFFLINKS_HOME/cufflinks-2.2.1.Linux_x86_64/cufflinks\nRUN mkdir -p $CUFFLINKS_HOME && \\\n        cd $CUFFLINKS_HOME && \\\n        wget -q \"https://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-2.2.1.Linux_x86_64.tar.gz\" && \\\n        tar -xzf cufflinks-2.2.1.Linux_x86_64.tar.gz && \\\n        rm -f cufflinks-2.2.1.Linux_x86_64.tar.gz && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install Subread (feature_count)\nENV SUBREAD_HOME=$BFX_INSTALL_ROOT/subread\nENV FEATURE_COUNT_BIN=$SUBREAD_HOME/subread-1.4.5-p1-Linux-x86_64/bin/featureCounts\nRUN     mkdir -p $SUBREAD_HOME && \\\n        cd $SUBREAD_HOME && \\\n        wget -q \"https://ayera.dl.sourceforge.net/project/subread/subread-1.4.5-p1/subread-1.4.5-p1-Linux-x86_64.tar.gz\" && \\\n        tar -xzf subread-1.4.5-p1-Linux-x86_64.tar.gz && \\\n        rm -f subread-1.4.5-p1-Linux-x86_64.tar.gz && \\\n        cd $BFX_INSTALL_ROOT\n\n## samtools\n### Install 3rd party dependencies\nRUN apt-get install --no-install-recommends -y bzip2 && rm -rf /var/lib/apt/lists/*;\n\n### Install samtools\nENV SAMTOOLS_HOME=$BFX_INSTALL_ROOT/samtools\nENV SAMTOOLS_BIN=$SAMTOOLS_HOME/samtools-0.1.19/samtools\nRUN     mkdir -p $SAMTOOLS_HOME && \\\n        cd $SAMTOOLS_HOME && \\\n        wget -q \"https://netix.dl.sourceforge.net/project/samtools/samtools/0.1.19/samtools-0.1.19.tar.bz2\" && \\\n        tar -xf samtools-0.1.19.tar.bz2 && \\\n        rm -f samtools-0.1.19.tar.bz2 && \\\n        cd samtools-0.1.19 && \\\n        make -j$(nproc) && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install picard\nENV PICARD_HOME=$BFX_INSTALL_ROOT/picard\nENV PICARD_BIN=$PICARD_HOME/picard.jar\nRUN     mkdir -p $PICARD_HOME && \\\n        cd $PICARD_HOME && \\\n        wget -q \"https://github.com/broadinstitute/picard/releases/download/2.10.3/picard.jar\" && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install rnaseqc\nENV RNASEQC_HOME=$BFX_INSTALL_ROOT/rnaseqc\nENV RNA_SEQC_BIN=$RNASEQC_HOME/RNA-SeQC_v1.1.8.jar\nRUN mkdir -p $RNASEQC_HOME && \\\n        cd $RNASEQC_HOME && \\\n        wget -q \"https://www.broadinstitute.org/cancer/cga/tools/rnaseqc/RNA-SeQC_v1.1.8.jar\" && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install bedtools\nENV BEDTOOLS_HOME=$BFX_INSTALL_ROOT/bedtools\nENV BEDTOOLS_BIN=$BEDTOOLS_HOME/bin/bedtools\nRUN     mkdir -p $BEDTOOLS_HOME && \\\n        cd $BEDTOOLS_HOME && \\\n        wget -q \"https://github.com/arq5x/bedtools2/releases/download/v2.21.0/bedtools-2.21.0.tar.gz\" && \\\n        tar -zxf bedtools-2.21.0.tar.gz && \\\n        rm -rf bedtools-2.21.0.tar.gz && \\\n        cd bedtools2 && \\\n        make -j$(nproc) && \\\n        cp -r bin $BEDTOOLS_HOME/ && \\\n        cd $BEDTOOLS_HOME && \\\n        rm -rf bedtools2 && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install bwa\nENV BWA_HOME=$BFX_INSTALL_ROOT/bwa\nENV BWA_BIN=$BWA_HOME/bwa\nRUN     mkdir -p $BWA_HOME && \\\n        cd $BWA_HOME && \\\n        wget -q \"https://datapacket.dl.sourceforge.net/project/bio-bwa/bwa-0.7.12.tar.bz2\" && \\\n        tar -xf bwa-0.7.12.tar.bz2 && \\\n        rm -rf bwa-0.7.12.tar.bz2 && \\\n        cd bwa-0.7.12 && \\\n        make -j$(nproc) && \\\n        cp -r bwa $BWA_HOME/ && \\\n        cd $BWA_HOME && \\\n        rm -rf bwa-0.7.12 && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install snpEff\nENV SNPEFF_HOME=$BFX_INSTALL_ROOT/snpEff\nENV SNPEFF_BIN=$SNPEFF_HOME/snpEff/snpEff.jar \\\n    SNPSIFT_BIN=$SNPEFF_HOME/snpEff/snpSift.jar\nRUN     mkdir -p $SNPEFF_HOME && \\\n        cd $SNPEFF_HOME && \\\n        wget -q \"https://netcologne.dl.sourceforge.net/project/snpeff/snpEff_v4_3p_core.zip\" && \\\n        unzip snpEff_v4_3p_core.zip && \\\n        rm -rf snpEff_v4_3p_core.zip && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install VarDictJava\nENV VARDICT_HOME=$BFX_INSTALL_ROOT/VardictJava\nENV VARDICT_BIN=$VARDICT_HOME/VarDictJava\nRUN     mkdir -p $VARDICT_HOME && \\\n        cd $VARDICT_HOME && \\\n        git clone --recursive https://github.com/AstraZeneca-NGS/VarDictJava.git && \\\n        cd VarDictJava && \\\n        git checkout tags/v1.5.0 && \\\n        ./gradlew clean installApp && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install abra2\nENV ABRA2_HOME=$BFX_INSTALL_ROOT/abra2\nENV ABRA2_BIN=$ABRA2_HOME/abra2-2.12.jar\nRUN     mkdir -p $ABRA2_HOME && \\\n        cd $ABRA2_HOME && \\\n        wget -q \"https://github.com/mozack/abra2/releases/download/v2.12/abra2-2.12.jar\" && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install mutect\nENV MUTECT_HOME=$BFX_INSTALL_ROOT/mutect\nENV MUTECT_BIN=$MUTECT_HOME/mutect-1.1.7.jar\nRUN     mkdir -p $MUTECT_HOME && \\\n        cd $MUTECT_HOME && \\\n        wget -q \"https://software.broadinstitute.org/gatk/download/auth?package=M1\" -O mutect.zip && \\\n        unzip mutect.zip && \\\n        rm -f mutect.zip && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install scalpel\nENV SCALPEL_HOME=$BFX_INSTALL_ROOT/scalpel\nENV SCALPEL_BIN=$SCALPEL_HOME\nRUN     cd /opt && \\\n        wget -q \"https://netcologne.dl.sourceforge.net/project/scalpel/scalpel-0.5.3.tar.gz\" -O scalpel.tar.gz && \\\n        tar -zxf scalpel.tar.gz && \\\n        rm -f scalpel.tar.gz && \\\n        mv scalpel-* scalpel && \\\n        cd scalpel/bamtools-* && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j$(nproc) && \\\n        make install && \\\n        cd $BFX_INSTALL_ROOT/scalpel/Microassembler && \\\n        make -j$(nproc) && \\\n        cd $BFX_INSTALL_ROOT/scalpel/bcftools-* && \\\n        make -j$(nproc) && \\\n        make install && \\\n        cd $BFX_INSTALL_ROOT/scalpel/samtools-* && \\\n        make -j$(nproc) && \\\n        make install && \\\n        cd $BFX_INSTALL_ROOT && \\\n        rm -rf scalpel/bamtools-*/build\n\n## Install bowtie2\nENV BOWTIE2_HOME=$BFX_INSTALL_ROOT/bowtie2\nENV BOWTIE2_BIN=$BOWTIE2_HOME/bowtie2\nRUN     cd $BFX_INSTALL_ROOT && \\\n        wget -q \"https://datapacket.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.2.9/bowtie2-2.2.9-linux-x86_64.zip\" -O bowtie2.zip && \\\n        unzip bowtie2.zip  && \\\n        mv bowtie2-* bowtie2 && \\\n        rm -f bowtie2.zip && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install STAR-Fusion\nENV STAR_FUSION_HOME=$BFX_INSTALL_ROOT/STAR-Fusion\nENV STAR_FUSION_BIN=$STAR_FUSION_HOME/STAR-Fusion\nENV     PERL_MM_USE_DEFAULT=1\nRUN     perl -MCPAN -e \"install Capture::Tiny; install DB_File; install inc::latest; install URI::Escape; install Set::IntervalTree; install Carp::Assert; install JSON::XS; install PerlIO::gzip\" && \\\n        cd $BFX_INSTALL_ROOT && \\\n        wget -q \"https://github.com/STAR-Fusion/STAR-Fusion/releases/download/v1.0.0/STAR-Fusion-v1.0.0.FULL.tar.gz\" -O STAR-Fusion.tgz && \\\n        tar -zxf STAR-Fusion.tgz && \\\n        mv STAR-Fusion-* STAR-Fusion && \\\n        rm -f STAR-Fusion.tgz  && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install abra\nENV ABRA_HOME=$BFX_INSTALL_ROOT/abra\nENV ABRA_BIN=$ABRA_HOME/abra-0.97-SNAPSHOT-jar-with-dependencies.jar\nRUN     mkdir -p $ABRA_HOME && \\\n        cd $ABRA_HOME && \\\n        wget -q \"https://github.com/mozack/abra/releases/download/v0.97/abra-0.97-SNAPSHOT-jar-with-dependencies.jar\" && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install bamtools\nENV BAMTOOLS_HOME=$BFX_INSTALL_ROOT/bamtools \\\n    BAMTOOLS_BIN=$BAMTOOLS_HOME/bin/bamtools\nRUN     rm -rf /tmp/* && \\\n        cd /tmp && \\\n        git clone https://github.com/pezmaster31/bamtools.git && \\\n        mkdir bamtools/build && \\\n        cd bamtools/build && \\\n        cmake -DCMAKE_INSTALL_PREFIX=$BAMTOOLS_HOME .. && \\\n        make install && \\\n        rm -rf /tmp/* && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install fastqc\nENV FASTQC_HOME=$BFX_INSTALL_ROOT/fastqc\nENV FASTQC_BIN=$FASTQC_HOME/fastqc\nRUN     mkdir -p $FASTQC_HOME && \\\n        cd $FASTQC_HOME && \\\n        wget -q \"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.8.zip\" && \\\n        unzip fastqc_v0.11.8.zip && \\\n        mv FastQC/* $FASTQC_HOME && \\\n        chmod 755 $FASTQC_BIN && \\\n        rm -rf FastQC fastqc_v0.11.8.zip && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install trimmomatic\nENV TRIM_HOME=$BFX_INSTALL_ROOT/trimmomatic\nENV TRIM_BIN=$TRIM_HOME/trimmomatic-0.38.jar\nRUN mkdir -p $TRIM_HOME && \\\n        cd $TRIM_HOME && \\\n        wget -q \"https://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip\" && \\\n        unzip Trimmomatic-0.38.zip && \\\n        mv Trimmomatic-0.38/* $TRIM_HOME && \\\n        rm -rf Trimmomatic-0.38 Trimmomatic-0.38.zip && \\\n        cd $BFX_INSTALL_ROOT\n\n## Install Seq2cJava\nENV SEQ2C_HOME=$BFX_INSTALL_ROOT/Seq2c\nENV SEQ2C_BIN=$SEQ2C_HOME/Seq2CJava/build/install/Seq2c/bin/Seq2c\nRUN     mkdir -p $SEQ2C_HOME && \\\n        cd $SEQ2C_HOME && \\\n        git clone --recursive https://github.com/AstraZeneca-NGS/Seq2CJava.git && \\\n        cd Seq2CJava && \\\n        ./gradlew clean installDist && \\\n        cd $BFX_INSTALL_ROOT\n\n#Install vcftools\nENV VCFTOOLS_HOME=$BFX_INSTALL_ROOT/vcftools\nENV VCFTOOLS_BIN=vcftools\nRUN mkdir -p $VCFTOOLS_HOME && \\\n        cd $VCFTOOLS_HOME && \\\n        wget -q \"https://github.com/vcftools/vcftools/releases/download/v0.1.16/vcftools-0.1.16.tar.gz\" && \\\n        tar -xf vcftools-0.1.16.tar.gz && \\\n        cd vcftools-0.1.16 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n        cd .. && rm vcftools-0.1.16.tar.gz && \\\n        cd $BFX_INSTALL_ROOT\n\n\n#Install tabix & bgzip\nENV HTSLIB_HOME=$BFX_INSTALL_ROOT/htslib\nENV TABIX_BIN=tabix\nENV BGZIP_BIN=bgzip\nRUN mkdir -p $HTSLIB_HOME && \\\n        cd $HTSLIB_HOME && \\\n        wget -q \"https://github.com/samtools/htslib/releases/download/1.9/htslib-1.9.tar.bz2\" && \\\n        tar -xjf htslib-1.9.tar.bz2 && \\\n        cd htslib-1.9 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n        cd .. && rm htslib-1.9.tar.bz2 && \\\n        cd $BFX_INSTALL_ROOT\n\nRUN     ln -sf bash /bin/sh\n\nWORKDIR $BFX_INSTALL_ROOT\n"
}