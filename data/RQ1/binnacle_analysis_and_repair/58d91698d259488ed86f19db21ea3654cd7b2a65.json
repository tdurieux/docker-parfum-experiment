{
  "startTime": 1674251654043,
  "endTime": 1674251654217,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 86
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 84
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM wordpress:4-php7.1-fpm-alpine\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n# ========\n# ENV vars\n# ========\n# redis\nENV PHPREDIS_VERSION 3.1.2\nENV WPFPM_FLAG WPFPM_\nENV PAGER more\n# ssh\nENV SSH_PASSWD \"root:Docker!\"\n#\n# --------\n# ~. tools\n# --------\nRUN set -ex \\\n  && apk update \\\n  && apk add --no-cache --update openssl git net-tools tcpdump tcptraceroute vim curl wget bash \\\n\t&& cd /usr/bin \\\n\t&& wget https://www.vdberg.org/~richard/tcpping \\\n\t&& chmod 777 tcpping\n# ========\n# install the PHP extensions we need and xdebug\n# ========\nRUN docker-php-source extract \\\n  && curl -f -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz \\\n  && tar xfz /tmp/redis.tar.gz \\\n  && rm -r /tmp/redis.tar.gz \\\n  && mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis \\\n  && docker-php-ext-install redis \\\n  && docker-php-source delete \\\n  && curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n  && chmod +x wp-cli.phar \\\n  && mv wp-cli.phar /usr/local/bin/wp \\\n  && apk add --no-cache --update $PHPIZE_DEPS \\\n  && pecl install xdebug-beta \\\n# ------\n# ssh\n# ------\n  && apk add --no-cache --update openssh-server \\\n\t&& echo \"$SSH_PASSWD\" | chpasswd\nCOPY sshd_config /etc/ssh/\n#---------------\n# openrc service\n#---------------\nRUN set -ex \\\n  && apk update && apk add openrc \\\n# can't do cgroups\n  && sed -i 's/\"cgroup_add_service/\" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh \\      \n# ----------\n# ~. upgrade/clean up\n# ----------\n\t&& apk update \\\n\t&& apk upgrade \\\n\t&& rm -rf /var/cache/apk/*  \n# =====\n# final\n# =====   \nADD uploads.ini /usr/local/etc/php/conf.d/\nADD my.bashrc /root/.bashrc\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY xdebug.ini /usr/local/etc/php/conf.d/\nCOPY BaltimoreCyberTrustRoot.crt.pem /usr/src\n\n#EXPOSE 2222\nCOPY docker-entrypoint.sh /usr/local/bin\nCOPY entrypoint.sh /usr/local/bin/\nCOPY BaltimoreCyberTrustRoot.crt.pem /usr/src/\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"php-fpm\"]\n"
}