{
  "startTime": 1674242579583,
  "endTime": 1674242579839,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedDockerfile": "ARG REPO\nARG TAG\nFROM ubuntu:disco\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y kmod initramfs-tools curl rsync xz-utils && rm -rf /var/lib/apt/lists/*;\n\nARG ARCH\nENV KVERSION=4.15.0-47-generic\nENV URL=https://github.com/rancher/k3os-kernel/releases/download/4.15.0-47.50-rancher2\nENV KERNEL_XZ=${URL}/kernel-generic_${ARCH}.tar.xz\nENV KERNEL_EXTRA_XZ=${URL}/kernel-extra-generic_${ARCH}.tar.xz\nENV KERNEL_HEADERS_XZ=${URL}/kernel-headers-generic_${ARCH}.tar.xz\n\n# Download kernel\nRUN mkdir -p /usr/src && rm -rf /usr/src\nRUN curl -fL $KERNEL_XZ -o /usr/src/kernel.tar.xz\nRUN curl -fL $KERNEL_EXTRA_XZ -o /usr/src/kernel-extra.tar.xz\nRUN curl -fL $KERNEL_HEADERS_XZ -o /usr/src/kernel-headers.tar.xz\n\n# Extract to /usr/src/root\nRUN mkdir -p /usr/src/root && \\\n    cd /usr/src/root && \\\n    tar xvf /usr/src/kernel.tar.xz && \\\n    tar xvf /usr/src/kernel-extra.tar.xz && \\\n    tar xvf /usr/src/kernel-headers.tar.xz && rm -rf /usr/src/root\n\n# Create initrd\nRUN mkdir /usr/src/initrd && \\\n    rsync -av /usr/src/root/lib/ /lib/ && \\\n    depmod $KVERSION && \\\n    mkinitramfs -k $KVERSION -o /usr/src/initrd.tmp && rm -rf /usr/src/initrd\n\n# Generate initrd firmware and module lists\nRUN mkdir -p /output/lib && \\\n    cd /usr/src/initrd && \\\n    gzip -dc /usr/src/initrd.tmp | cpio -idmv && \\\n    find lib/modules -name \\*.ko > /output/initrd-modules && \\\n    echo lib/modules/${KVERSION}/modules.order >> /output/initrd-modules && \\\n    echo lib/modules/${KVERSION}/modules.builtin >> /output/initrd-modules && \\\n    find lib/firmware -type f > /output/initrd-firmware && \\\n    find usr/lib/firmware -type f | sed 's!usr/!!' >> /output/initrd-firmware\n\n# Copy output assets\nRUN cd /usr/src/root && \\\n    cp -r usr/src/linux-headers* /output/headers && \\\n    cp -r lib/firmware /output/lib/firmware && \\\n    cp -r lib/modules /output/lib/modules && \\\n    cp boot/System.map* /output/System.map && \\\n    cp boot/config* /output/config && \\\n    cp boot/vmlinuz-* /output/vmlinuz && \\\n    echo ${KVERSION} > /output/version\n"
}