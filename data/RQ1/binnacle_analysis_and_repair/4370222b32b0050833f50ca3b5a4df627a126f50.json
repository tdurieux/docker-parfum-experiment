{
  "startTime": 1674242557437,
  "endTime": 1674242558082,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 213
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 97,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Building:\n# cp -R /usr/lib/vmware-ovftool/ .\n# docker build --no-cache -t vic-test -f Dockerfile .\n# docker tag vic-test gcr.io/eminent-nation-87317/vic-integration-test:1.x\n# gcloud auth login\n# gcloud docker -- push gcr.io/eminent-nation-87317/vic-integration-test:1.x\n# download and install harbor certs, then docker login, then:\n# docker tag vic-test wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\n# docker push wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.x\n\nFROM golang:1.8\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\n\nRUN curl -f -sL https://deb.nodesource.com/setup_7.x | bash - && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n    jq \\\n    bc \\\n    time \\\n    gcc \\\n    python-dev \\\n    libffi-dev \\\n    libssl-dev \\\n    sshpass \\\n    ant \\\n\tant-optional \\\n    openjdk-7-jdk \\\n    rpcbind \\\n    nfs-common \\\n    unzip \\\n    zip \\\n    bzip2 \\\n\tnodejs \\\n\tparted \\\n    # Add docker in docker support\n    btrfs-tools \\\n    e2fsprogs \\\n    iptables \\\n    xfsprogs \\\n    dnsutils \\\n    netcat \\\n    # Add headless chrome support\n    google-chrome-stable \\\n    # Speed up ISO builds with already installed reqs\n    yum \\\n    yum-utils \\\n    cpio \\\n    rpm \\\n    ca-certificates \\\n    xz-utils \\\n    xorriso \\\n    sendmail && \\\n\t# Cleanup\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n    python ./get-pip.py && \\\n    pip install --no-cache-dir pyasn1 google-apitools==0.5.15 gsutil==4.28 robotframework robotframework-sshlibrary robotframework-httplibrary requests dbbot robotframework-selenium2library robotframework-pabot codecov --upgrade\n\n# Install docker, docker clients 1.11,1.12 and 1.13\n# Also install docker compose 1.13\nRUN curl -f -sSL https://get.docker.com/ | sh && \\\n    curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.11.2.tgz && \\\n    tar --strip-components=1 -xvzf docker-1.11.2.tgz -C /usr/bin && \\\n    mv /usr/bin/docker /usr/bin/docker1.11 && \\\n    curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz && \\\n    tar --strip-components=1 -xvzf docker-1.12.6.tgz -C /usr/bin && \\\n    mv /usr/bin/docker /usr/bin/docker1.12 && \\\n    curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-1.13.0.tgz && \\\n    tar --strip-components=1 -xvzf docker-1.13.0.tgz -C /usr/bin && \\\n    mv /usr/bin/docker /usr/bin/docker1.13 && \\\n    ln -s /usr/bin/docker1.13 /usr/bin/docker && \\\n    curl -f -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \\\n    chmod +x /usr/local/bin/docker-compose && rm docker-1.11.2.tgz\n\nCOPY vmware-ovftool /usr/lib/vmware-ovftool\nRUN ln -s /usr/lib/vmware-ovftool/ovftool /usr/local/bin/ovftool\n\nRUN curl -fsSLO https://releases.hashicorp.com/packer/0.12.2/packer_0.12.2_linux_amd64.zip && \\\n    unzip packer_0.12.2_linux_amd64.zip -d /usr/bin && \\\n\trm packer_0.12.2_linux_amd64.zip\n\nRUN wget https://github.com/drone/drone-cli/releases/download/v0.8.3/drone_linux_amd64.tar.gz && tar zxf drone_linux_amd64.tar.gz && \\\n    install -t /usr/local/bin drone && rm drone_linux_amd64.tar.gz\n\nRUN curl -f -sSL https://github.com/vmware/govmomi/releases/download/v0.17.1/govc_linux_amd64.gz | gzip -d > /usr/local/bin/govc && chmod +x /usr/local/bin/govc\n\nRUN  wget https://launchpad.net/ubuntu/+source/wget/1.18-2ubuntu1/+build/10470166/+files/wget_1.18-2ubuntu1_amd64.deb && \\\n     dpkg -i wget_1.18-2ubuntu1_amd64.deb\n\n# Add docker in docker support\n# version: docker:1.13-dind\n# reference: https://github.com/docker-library/docker/blob/b202ec7e529f5426e2ad7e8c0a8b82cacd406573/1.13/dind/Dockerfile\n#\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\n\n# set up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\nRUN set -x \\\n        && groupadd --system dockremap \\\n        && adduser --system --ingroup dockremap dockremap \\\n        && echo 'dockremap:165536:65536' >> /etc/subuid \\\n        && echo 'dockremap:165536:65536' >> /etc/subgid\n\nENV DIND_COMMIT 3b5fac462d21ca164b3778647420016315289034\n\nRUN wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n        && chmod +x /usr/local/bin/dind\n\n# This container needs to be run in privileged mode(run with --privileged option) to make it work\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\n\nCOPY scripts /opt/vmware/scripts\nENV PATH=\"${PATH}:/opt/vmware/scripts\"\n\nVOLUME /var/lib/docker\n"
}