{
  "startTime": 1674240860258,
  "endTime": 1674240860427,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Intel Corporation.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:xenial\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n curl \\\n gcc \\\n libssl-dev \\\n libzmq3-dev \\\n pkg-config \\\n unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n if [ ! -z $HTTP_PROXY ] && [ -z $http_proxy ]; then \\\n  http_proxy=$HTTP_PROXY; \\\n fi; \\\n if [ ! -z $HTTPS_PROXY ] && [ -z $https_proxy ]; then \\\n  https_proxy=$HTTPS_PROXY; \\\n fi; \\\n if [ ! -z $http_proxy ]; then \\\n  http_proxy_host=$(printf $http_proxy | sed 's|http.*://\\(.*\\):\\(.*\\)$|\\1|');\\\n  http_proxy_port=$(printf $http_proxy | sed 's|http.*://\\(.*\\):\\(.*\\)$|\\2|');\\\n  mkdir -p $HOME/.cargo \\\n  && echo \"[http]\" >> $HOME/.cargo/config \\\n  && echo 'proxy = \"'$http_proxy_host:$http_proxy_port'\"' >> $HOME/.cargo/config \\\n  && cat $HOME/.cargo/config; \\\n fi;\n\nRUN curl -f -OLsS https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n && unzip protoc-3.5.1-linux-x86_64.zip -d protoc3 \\\n && rm protoc-3.5.1-linux-x86_64.zip\n\nRUN curl https://sh.rustup.rs -sSf > /usr/bin/rustup-init \\\n && chmod +x /usr/bin/rustup-init \\\n && rustup-init -y\n\nENV PATH=$PATH:/project/simplewallet/rustprocessor/bin:/protoc3/bin:/root/.cargo/bin \\\n    CARGO_INCREMENTAL=0\n\nRUN rustup component add rustfmt-preview\n\n\nWORKDIR /project/simplewallet/rustprocessor\n\n###########################################################################\n# Below lines are workaround to avoid rebuilding dependencies every time\n# during docker build\n\n# create a new empty shell project\nRUN USER=root cargo new --bin my-project\nWORKDIR /project/simplewallet/rustprocessor/my-project\n\n# copy over your manifests\n#(context passed from docker yaml file in parent directory)\nCOPY ./rustprocessor/Cargo.lock Cargo.lock\nCOPY ./rustprocessor/Cargo.toml Cargo.toml\n\n# this build step will cache your dependencies\nRUN cargo build --release\nRUN rm src/*.rs\n\n# copy your source tree\nCOPY ./rustprocessor/src ./src\n###########################################################################\n\nWORKDIR /project/simplewallet/rustprocessor\n\n#CMD cd rustprocessor \\\nCMD echo \"\\033[0;32m--- Building simplewallet-rust-tp ---\\n\\033[0m\" \\\n && rm -rf ./bin/ \\\n && mkdir -p ./bin/ \\\n && cargo build --release \\\n && cp ./target/release/simplewallet-rust-tp ./bin/simplewallet-rust-tp \\\n && cargo run --release --bin simplewallet-rust-tp -- -v -C tcp://validator:4004 \\\n && tail -f /dev/null\n"
}