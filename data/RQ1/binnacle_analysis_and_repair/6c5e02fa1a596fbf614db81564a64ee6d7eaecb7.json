{
  "startTime": 1674252053332,
  "endTime": 1674252053433,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\n\n# Get Java 8 (64-bit)\nRUN yum install -y java-1.8.0-openjdk-devel && rm -rf /var/cache/yum\n\n# Get other build utils\nRUN yum install -y cmake wget tar && rm -rf /var/cache/yum\n\n# djinni requires llvm with libstdc++ 4.9 features,\n# e.g. experimental/optional, so we need a modern\n# compiler.  Let's get gcc 4.9 from Scientific Linux Cern\nRUN yum install -y wget && rm -rf /var/cache/yum\nWORKDIR /etc/yum.repos.d\nRUN wget https://linuxsoft.cern.ch/cern/scl/slc6-scl.repo\nRUN yum -y --nogpgcheck install devtoolset-3-gcc devtoolset-3-gcc-c++\n\n# Make devtoolset's gcc accessible\nENV PATH /opt/rh/devtoolset-3/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Select Java 8\nRUN echo 1 | update-alternatives --config java\nRUN echo 1 | update-alternatives --config javac\n\n# Get modern ant\nWORKDIR /opt\nRUN wget https://archive.apache.org/dist/ant/binaries/apache-ant-1.9.3-bin.tar.gz\nRUN tar xvfvz apache-ant-1.9.3-bin.tar.gz -C /opt && rm apache-ant-1.9.3-bin.tar.gz\nENV ANT_HOME /opt/apache-ant-1.9.3/bin/ant\nRUN ln -s /opt/apache-ant-1.9.3/bin/ant /usr/bin/ant\nENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk.x86_64\n\nVOLUME /opt/djinni\nCMD /opt/djinni/test-suite/java/docker/build_and_run_tests.sh\n\n"
}