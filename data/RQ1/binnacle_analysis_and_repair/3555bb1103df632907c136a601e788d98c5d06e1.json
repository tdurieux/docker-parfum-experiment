{
  "startTime": 1674235120570,
  "endTime": 1674235120602,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n# Step 1 : Builder image\n#\nFROM node:9-alpine AS builder\n\n# Define working directory and copy source\nWORKDIR /home/node/app\nCOPY . .\n# Install dependencies and build whatever you have to build\n# (babel, grunt, webpack, etc.)\nRUN npm install && npm run build && npm cache clean --force;\n\n###############################################################################\n# Step 2 : Run image\n#\nFROM node:9-alpine\nENV NODE_ENV=production\nWORKDIR /home/node/app\n\n# Install deps for production only\nCOPY ./package* ./\nRUN npm install && \\\n    npm cache clean --force\n# Copy builded source from the upper builder stage\nCOPY --from=builder /home/node/app/build ./build\n\n# Expose ports (for orchestrators and dynamic reverse proxies)\nEXPOSE 3000\n\n# Start the app\nCMD npm start"
}