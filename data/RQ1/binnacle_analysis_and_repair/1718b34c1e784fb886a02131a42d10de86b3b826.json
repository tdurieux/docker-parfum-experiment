{
  "startTime": 1674249150705,
  "endTime": 1674249150911,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM %%BASE_IMAGE%%\n\nENV PASSBOLT_VERSION %%UPSTREAM_VERSION%%\nENV PASSBOLT_URL https://github.com/passbolt/passbolt_api/archive/v${PASSBOLT_VERSION}.tar.gz\n\nARG BASE_PHP_DEPS=\"php5-curl \\\n      php5-common \\\n      php5-gd \\\n      php5-intl \\\n      php5-json \\\n      php5-mcrypt \\\n      php5-mysql \\\n      php5-xsl \\\n      php5-fpm \\\n      php5-phar \\\n      php5-posix \\\n      php5-xml \\\n      php5-openssl \\\n      php5-zlib \\\n      php5-ctype \\\n      php5-pdo \\\n      php5-pdo_mysql \\\n      php5-pear\"\n\nARG PHP_GNUPG_DEPS=\"php5-dev \\\n      make \\\n      gcc \\\n      g++ \\\n      libc-dev \\\n      pkgconfig \\\n      re2c \\\n      gpgme-dev \\\n      autoconf \\\n      zlib-dev \\\n      file\"\n\nRUN apk add --no-cache $BASE_PHP_DEPS \\\n      sed \\\n      tar \\\n      bash \\\n      curl \\\n      nginx \\\n      gpgme \\\n      gnupg1 \\\n      recode \\\n      libxml2 \\\n      openssl \\\n      libpcre32 \\\n      mysql-client \\\n      ca-certificates \\\n      jq\n\nRUN apk add --no-cache $PHP_GNUPG_DEPS  \\\n    && ln -s /usr/bin/php5 /usr/bin/php \\\n    && ln -s /usr/bin/phpize5 /usr/bin/phpize \\\n    #https://bugs.alpinelinux.org/issues/5378\n    && sed -i \"s/ -n / /\" $(which pecl) \\\n    && pecl install gnupg memcache \\\n    && echo \"extension=memcache.so\" > /etc/php5/conf.d/memcache.ini \\\n    && echo \"extension=gnupg.so\" > /etc/php5/conf.d/gnupg.ini \\\n    && apk del $PHP_GNUPG_DEPS \\\n    && curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && mkdir /var/www/passbolt \\\n    && curl -f -sSL $PASSBOLT_URL | tar zxf - -C /var/www/passbolt --strip-components 1 \\\n    && chown -R nginx:nginx /var/www/passbolt \\\n    && chmod -R +w /var/www/passbolt/app/tmp \\\n    && chmod +w /var/www/passbolt/app/webroot/img/public\n\nCOPY conf/passbolt.conf /etc/nginx/conf.d/default.conf\nCOPY bin/docker-entrypoint.sh /docker-entrypoint.sh\n\nEXPOSE 80 443\n\nCMD [\"/docker-entrypoint.sh\"]\n"
}