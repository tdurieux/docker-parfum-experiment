{
  "startTime": 1674242111778,
  "endTime": 1674242112027,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5-alpine\n\nEXPOSE 5000\nHEALTHCHECK CMD curl --fail http://localhost:5000/ping\n\nENV INTERNAL_PLIK_SERVER https://plik.root.gg\n\n# We add the Plik binary file\nADD https://plik.root.gg/clients/linux-amd64/plik /usr/bin/plik\n\nRUN apk add -t build --no-cache --update-cache \\\n    # Having up to date SSL certificates is always a good thing. :)\n    ca-certificates \\\n    openssl \\\n    # For the healthcheck\n    curl \\\n    && \\\n    update-ca-certificates && \\\n\n    # Add glibc, wanted by plik (compiled with Go)\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk && \\\n    apk add --no-cache glibc-2.23-r3.apk && \\\n\n    # Remove openssl, only needed for wget\n    apk del build wget unzip && \\\n\n    # We add an user\n    adduser -S -u 1000 worker && \\\n\n    # Add default config for Plik, required\n    chmod o+x /usr/bin/plik && \\\n    echo 'URL = \"https://plik.root.gg\"' > /home/worker/.plikrc\n\n\n# Install the python dependencies\nADD requirements.txt /app/\nWORKDIR /app/\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY . /app/\nRUN chown -R worker /app/; chmod -R 770 /app/\n\nUSER worker\nENTRYPOINT [\"python3\", \"/app/docbleach.py\"]\n"
}