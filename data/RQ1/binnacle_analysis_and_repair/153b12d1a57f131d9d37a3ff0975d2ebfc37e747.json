{
  "startTime": 1674241558004,
  "endTime": 1674241558641,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 1,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 1,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 1,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 31,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 84,
        "columnEnd": 119
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 11,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 14,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 53,
        "columnEnd": 217
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 57,
        "columnEnd": 143
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 18,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.0-fpm-alpine\n\nMAINTAINER Minho <longfei6671@163.com>\n\nADD conf/php.ini /usr/local/etc/php/php.ini\nADD conf/www.conf /usr/local/etc/php-fpm.d/www.conf\n\nENV IMAGICK_VERSION 3.4.2\n#Alpine packages\nRUN apk add --update git make gcc g++ imagemagick-dev \\\n\tlibc-dev \\\n\tautoconf \\\n\tfreetype-dev \\\n\tlibjpeg-turbo-dev \\\n\tlibpng-dev \\\n\tlibmcrypt-dev \\\n\tlibpcre32 \\\n\tbzip2 \\\n\tlibbz2 \\\n\tbzip2-dev \\\n\tlibmemcached-dev \\\n\tcyrus-sasl-dev \\\n\tbinutils \\\n\t&& pecl install imagick-$IMAGICK_VERSION \\\n\t&& rm -rf /var/cache/apk/*\n\nRUN apk update && apk add --no-cache ca-certificates && \\\n    apk add --no-cache tzdata && \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone\n\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n        && docker-php-ext-install gd \\\n        && docker-php-ext-install mysqli \\\n        && docker-php-ext-install bz2 \\\n        && docker-php-ext-install zip \\\n        && docker-php-ext-install pdo \\\n        && docker-php-ext-install pdo_mysql \\\n        && docker-php-ext-install opcache \\\n\t\t&& echo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/memcached.ini \\\n\t\t&& echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/phpredis.ini \\\n\t\t&& echo \"extension=phalcon.so\" > /usr/local/etc/php/conf.d/phalcon.ini \\\n\t\t&& echo \"extension=igbinary.so\" > /usr/local/etc/php/conf.d/igbinary.ini \\\n\t\t&& echo \"extension=bcmath.so\" > /usr/local/etc/php/conf.d/bcmath.ini \\\n\t\t&& echo \"zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n\t\t&& echo \"extension=imagick.so\" >> /usr/local/etc/php/conf.d/imagick.ini\n\n\nWORKDIR /usr/src/php/ext/\n\nRUN git clone -b php7-dev-playground1 https://github.com/igbinary/igbinary.git && \\\n\tcd igbinary && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2 -g\" --enable-igbinary && make install && \\\n\tcd ../ && rm -rf igbinary\n\n# Compile Memcached\nRUN git clone -b php7 https://github.com/php-memcached-dev/php-memcached.git && \\\n\tcd php-memcached && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n\techo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/phpredis.ini && \\\n\tcd .. && rm -rf php-memcached\n\nENV PHPREDIS_VERSION=3.0.0\n\nRUN set -xe && \\\n\tcurl -f -LO https://github.com/phpredis/phpredis/archive/${PHPREDIS_VERSION}.tar.gz && \\\n\ttar xzf ${PHPREDIS_VERSION}.tar.gz && cd phpredis-${PHPREDIS_VERSION} && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-redis-igbinary && make && make install && \\\n\techo \"extension=redis.so\" > /usr/local/etc/php/conf.d/phpredis.ini && \\\n\tcd ../ && rm -rf  phpredis-${PHPREDIS_VERSION} ${PHPREDIS_VERSION}.tar.gz\n\nENV PHALCON_VERSION=3.0.2\n\nWORKDIR /usr/src/php/ext/\n# Compile Phalcon\nRUN set -xe && \\\n    curl -f -LO https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.tar.gz && \\\n    tar xzf v${PHALCON_VERSION}.tar.gz && cd cphalcon-${PHALCON_VERSION}/build && sh install && \\\n    echo \"extension=phalcon.so\" > /usr/local/etc/php/conf.d/phalcon.ini && \\\n    cd ../.. && rm -rf v${PHALCON_VERSION}.tar.gz cphalcon-${PHALCON_VERSION}\n\n#Compile XDebug\nRUN set -xe && \\\n\tcurl -f -LO https://github.com/xdebug/xdebug/archive/XDEBUG_2_5_0.tar.gz && \\\n\ttar xzf XDEBUG_2_5_0.tar.gz && cd xdebug-XDEBUG_2_5_0 && \\\n\tphpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug && make && make install && \\\n\tcd ../ && rm -rf xdebug-XDEBUG_2_5_0 && rm XDEBUG_2_5_0.tar.gz\n\nRUN docker-php-source extract \\\n\t&& cd /usr/src/php/ext/bcmath \\\n\t&& phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/bin/php-config && make && make install \\\n\t&& make clean \\\n\t&& docker-php-source delete\n\n#ImageMagick\nRUN set -xe && \\\n\tcurl -f -LO https://github.com/ImageMagick/ImageMagick/archive/6.9.6-8.tar.gz && \\\n\ttar xzf 6.9.6-8.tar.gz && cd ImageMagick-6.9.6-8 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-bzlib=yes --with-fontconfig=yes --with-freetype=yes --with-gslib=yes --with-gvc=yes --with-jpeg=yes --with-jp2=yes --with-png=yes --with-tiff=yes && make clean && make && make install && \\\n\tmake clean && ldconfig /usr/local/lib && rm 6.9.6-8.tar.gz\n\nRUN set -xe && \\\n\tcurl -f -LO https://github.com/mkoppanen/imagick/archive/3.4.2.tar.gz && \\\n\ttar zxvf  3.4.2.tar.gz && cd imagick-3.4.2 && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/bin/php-config --with-imagick=/usr/local/lib && make && make install && rm 3.4.2.tar.gz"
}