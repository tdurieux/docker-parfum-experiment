{
  "startTime": 1674239983317,
  "endTime": 1674239983728,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Galaxy - Stable\n#\n# VERSION       Galaxy-central\n\nFROM quay.io/bgruening/galaxy-base:19.01\n\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\n\nARG GALAXY_ANSIBLE_TAGS=supervisor,startup,scripts,nginx,cvmfs\n\nENV GALAXY_DESTINATIONS_DEFAULT=slurm_cluster \\\n# The following 2 ENV vars can be used to set the number of uwsgi processes and threads\nUWSGI_PROCESSES=2 \\\nUWSGI_THREADS=4 \\\n# Set HTTPS to use a self-signed certificate (or your own certificate in /export/{server.key,server.crt})\nUSE_HTTPS=False \\\n# Set USE_HTTPS_LENSENCRYPT and GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL to a domain that is reachable to get a letsencrypt certificate\nUSE_HTTPS_LETSENCRYPT=False \\\nGALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL=http://localhost \\\n# Set the number of Galaxy handlers\nGALAXY_HANDLER_NUMPROCS=2\n\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup && \\\n    apt-get -qq update && apt-get install --no-install-recommends -y apt-transport-https wget && \\\n    echo \"deb https://deb.nodesource.com/node_9.x $(lsb_release -sc) main\" > /etc/apt/sources.list.d/nodejs.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68576280 && \\\n    apt-get update -qq && \\\n    apt-get install --no-install-recommends -y nodejs \\\n    nginx-extras nginx-common supervisor autofs slurm-wlm slurm-wlm-torque && \\\n    wget https://depot.galaxyproject.org/deb/ubuntu/18.04/slurm-drmaa1_1.2.0-dev.deca826_amd64.deb && \\\n    wget https://depot.galaxyproject.org/deb/ubuntu/18.04/slurm-drmaa-dev_1.2.0-dev.deca826_amd64.deb && \\\n    dpkg -i slurm-drmaa1_1.2.0-dev.deca826_amd64.deb && \\\n    dpkg -i slurm-drmaa-dev_1.2.0-dev.deca826_amd64.deb && \\\n    # install and remove supervisor, so get the service config file\n    apt-get -qq remove -y supervisor && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    groupadd --gid 999 docker && \\\n    # this can be optimised I think, we should get the SLURM client only and update it\n    gpasswd -a $GALAXY_USER docker && \\\n    mkdir -p /etc/supervisor/conf.d/ /var/log/supervisor/ && \\\n    #pip install --upgrade pip && \\\n    pip install --no-cache-dir ephemeris supervisor --upgrade && \\\n    ln -s /usr/local/bin/supervisord /usr/bin/supervisord\n\nRUN rm -f /usr/bin/startup && \\\n    ansible-playbook /ansible/provision.yml \\\n    --extra-vars galaxy_server_dir=$GALAXY_ROOT \\\n    --extra-vars galaxy_venv_dir=$GALAXY_VIRTUAL_ENV \\\n    --extra-vars galaxy_log_dir=$GALAXY_LOGS_DIR \\\n    --extra-vars galaxy_user_name=$GALAXY_USER \\\n    --extra-vars galaxy_config_file=$GALAXY_CONFIG_FILE \\\n    --extra-vars galaxy_extras_config_postgres=False \\\n    --extra-vars galaxy_extras_config_condor=True \\\n    --extra-vars galaxy_extras_config_condor_docker=True \\\n    --extra-vars galaxy_extras_config_rabbitmq=False \\\n    --extra-vars galaxy_extras_config_slurm=False \\\n    --extra-vars galaxy_extras_config_proftpd=False \\\n    --extra-vars galaxy_extras_config_cvmfs=True \\\n    --extra-vars galaxy_tool_data_table_config_file=/etc/galaxy/tool_data_table_conf.xml \\\n    --extra-vars galaxy_extras_config_nginx_upload=False \\\n    --extra-vars nginx_welcome_location=$NGINX_WELCOME_LOCATION \\\n    --extra-vars nginx_welcome_path=$NGINX_WELCOME_PATH \\\n    --extra-vars startup_sleeplock=True \\\n    --extra-vars startup_export_user_files=False \\\n    --extra-vars supervisor_manage_slurm=False \\\n    --extra-vars supervisor_manage_postgres=False \\\n    --extra-vars supervisor_manage_proftp=False \\\n    # This is the only safe backend which works on all kinds of docker hosts.\n    # See https://docs.docker.com/engine/userguide/storagedriver/selectadriver/ for details\n    --extra-vars galaxy_extras_docker_storage_backend=vfs \\\n    # Used for detecting privileged mode\n    --extra-vars host_docker_legacy=False \\\n    --extra-vars galaxy_extras_docker_legacy=False \\\n    --tags=$GALAXY_ANSIBLE_TAGS -c local && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN chmod +x /usr/bin/startup\n\n# Mark folders as imported from the host.\nVOLUME [\"/export/\", \"/var/lib/docker\"]\n\n# Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\n"
}