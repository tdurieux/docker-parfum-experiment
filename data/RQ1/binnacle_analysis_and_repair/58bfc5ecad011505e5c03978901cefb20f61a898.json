{
  "startTime": 1674237084556,
  "endTime": 1674237085226,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 15,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 15,
        "columnEnd": 119
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 26,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 123,
        "columnEnd": 162
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.0-apache\n\n# packages configuration\nRUN echo 'mysql-server mysql-server/root_password password P4ssw0rd' | debconf-set-selections\nRUN echo 'mysql-server mysql-server/root_password_again password P4ssw0rd' | debconf-set-selections\n\nRUN apt-get update && apt-get install -y perl pwgen --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\n# gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5\n\nENV MYSQL_MAJOR 5.6\n\nRUN echo \"deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN { \\\n\t\techo mysql-community-server mysql-community-server/data-dir select ''; \\\n\t\techo mysql-community-server mysql-community-server/root-pass password ''; \\\n\t\techo mysql-community-server mysql-community-server/re-root-pass password ''; \\\n\t\techo mysql-community-server mysql-community-server/remove-test-db select false; \\\n\t} | debconf-set-selections \\\n\t&& apt-get update && apt-get install --no-install-recommends -y mysql-server && rm -rf /var/lib/apt/lists/* \\\n\t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql\n\n# comment out a few problematic configuration values\n# don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf && echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\" && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf && mv /tmp/my.cnf /etc/mysql/my.cnf\n\n# packages/dependencies installation\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  php5-mysql \\\n  libmcrypt-dev \\\n  libxml2-dev \\\n  libfreetype6-dev \\\n  libjpeg62-turbo-dev \\\n  libicu-dev \\\n  vim emacs-nox \\\n  git-core \\\n  wget \\\n  libpng12-dev \\\n  libxslt-dev \\\n  zsh \\\n  bzip2 && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-install -j$(nproc) soap mysqli mcrypt gd zip intl xsl mbstring pdo pdo_mysql\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && docker-php-ext-install -j$(nproc) gd\n\nRUN chsh -s /bin/zsh\nRUN sh -x -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | grep -v 'set -e')\"\nCOPY bin/.zshrc /root/.zshrc\n\nRUN cd /tmp && curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer\n\nRUN cd /var/www/ && mkdir htdocs && cd htdocs && wget https://demos.algolia.com/downloads/magento2.0.2-with-sample-data.tar.bz2\nRUN cd /var/www/htdocs && tar -xjvf magento2.0.2-with-sample-data.tar.bz2 && rm magento2.0.2-with-sample-data.tar.bz2\nRUN chown -R www-data:www-data /var/www/htdocs\nRUN find /var/www/htdocs -type d -exec chmod 700 {} \\; && find . -type f -exec chmod 600 {} \\;\nRUN cd /var/www/htdocs && chmod +x bin/magento\nRUN chsh -s /bin/bash www-data\n#RUN su www-data && cd /var/www/htdocs && composer install\n\nWORKDIR /var/www/htdocs\n\nCOPY bin/php.ini /usr/local/etc/php/php.ini\nRUN cd /tmp && curl -f -O https://phpmyadmin-downloads-532693.c.cdn77.org/phpMyAdmin/4.4.9/phpMyAdmin-4.4.9-english.tar.gz && tar xvf phpMyAdmin-4.4.9-english.tar.gz && mv phpMyAdmin-4.4.9-english /var/www/htdocs/phpmyadmin && rm phpMyAdmin-4.4.9-english.tar.gz\nCOPY bin/config.inc.php /var/www/htdocs/phpmyadmin/\n\n\nRUN service mysql start && mysql -uroot -e \"create database magento;\" && service mysql stop\nRUN service mysql start && cd /var/www/htdocs && bin/magento setup:install --backend-frontname=\"admin\" --db-host=\"localhost\" --db-name=\"magento\" --db-user=\"root\" --base-url=\"http://192.168.99.100\" --language=\"en_US\" --currency=\"EUR\" --timezone=\"Europe/Paris\" --admin-use-security-key=\"0\" --admin-user=\"admin\" --admin-password=\"magentorocks1\" --admin-firstname=\"admin\" --admin-lastname=\"admin\" --admin-email=\"admin@admin.com\" && service mysql stop\nRUN service mysql start && cd /var/www/htdocs && bin/magento cache:flush && bin/magento cache:disable && service mysql stop\n\nRUN sed -i \"s|www/html|www/htdocs|g\" /etc/apache2/apache2.conf\n\nRUN mv pub/errors/local.xml.sample pub/errors/local.xml\n\n# enable mod_rewrite\nRUN cp /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load\n\n# magerun\nRUN cd /var/www/htdocs && wget https://files.magerun.net/n98-magerun2.phar && mv n98-magerun2.phar /usr/bin/n98-magerun2 && chmod -R 777 /usr/bin/n98-magerun2\n\n# start script\nCOPY ./bin/start.sh /usr/local/bin/start.sh\nRUN chmod +x /usr/local/bin/start.sh\n\nRUN usermod -a -G root www-data\nRUN usermod -a -G www-data root\n\nCOPY ./bin/auth.json /root/.composer/auth.json\nRUN service mysql start && composer require algolia/algoliasearch-magento-2:dev-master && bin/magento setup:upgrade && bin/magento setup:static-content:deploy && service mysql stop\n\n#RUN echo \"<Directory /var/www/>\\n\\tAllowOverride All\\n\\tRequire all granted\\n</Directory>\" > /etc/apache2/apache2.conf\nRUN sed -i 's/name=\"login\\[username\\]\"/name=\"login[username]\" value=\"admin\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml && \\\n\tsed -i 's/name=\"login\\[password\\]\"/name=\"login[password]\" class=\"required-entry input-text\" value=\"magentorocks1\"/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml && \\\n\tsed -i 's/<\\/form>/<\\/form><script>document.addEventListener\\(\"DOMContentLoaded\", function\\(\\) {algoliaAdminBundle.\\$\\(function \\(\\$\\) \\{ \\$\\(\"#login-form\"\\).submit\\(\\); \\}\\);\\}\\);<\\/script>/g' /var/www/htdocs/vendor/magento/module-backend/view/adminhtml/templates/admin/login.phtml\n\nRUN sed -i 's/MaterializationStrategy\\\\Copy/MaterializationStrategy\\\\Symlink/g' /var/www/htdocs/app/etc/di.xml\n\nRUN bin/magento deploy:mode:set developer\n\nEXPOSE 80\nCMD start.sh"
}