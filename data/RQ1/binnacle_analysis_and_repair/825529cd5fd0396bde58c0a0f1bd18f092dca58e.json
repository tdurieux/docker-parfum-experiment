{
  "startTime": 1674250317909,
  "endTime": 1674250318151,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n## Base builder image\n##\nFROM alpine:3.8 as builder\n\nRUN apk --update --no-cache add --virtual .build-deps build-base automake autoconf libtool git linux-pam-dev openssl-dev wget\n\n\n##\n## Duo builder image\n##\nFROM builder as duo-builder\n\nARG DUO_VERSION=1.10.5\nRUN wget https://dl.duosecurity.com/duo_unix-${DUO_VERSION}.tar.gz && \\\n    mkdir -p src && \\\n    tar -zxf duo_unix-${DUO_VERSION}.tar.gz --strip-components=1 -C src && rm duo_unix-${DUO_VERSION}.tar.gz\n\nRUN cd src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-pam=/dist/lib64/security \\\n        --prefix=/dist/usr && \\\n    make && \\\n    make install\n\n\n##\n## Google Authenticator PAM module builder image\n##\nFROM builder as google-authenticator-libpam-builder\n\nARG AUTHENTICATOR_LIBPAM_VERSION=1.05\nRUN git clone --branch ${AUTHENTICATOR_LIBPAM_VERSION} --single-branch https://github.com/google/google-authenticator-libpam src\n\nRUN cd src && \\\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/dist && \\\n    make && \\\n    make install\n\n\n##\n## OpenSSH Portable builder image\n##\nFROM builder as openssh-portable-builder\n\nARG OPENSSH_VERSION=V_7_8_P1\nRUN git clone --branch ${OPENSSH_VERSION} --single-branch https://github.com/openssh/openssh-portable src\n\nCOPY patches/ /patches/\n\nRUN cd src && \\\n    find ../patches/openssh/** -type f -exec patch -p1 -i {} \\; && \\\n    autoreconf && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/dist/usr \\\n        --sysconfdir=/etc/ssh \\\n        --datadir=/dist/usr/share/openssh \\\n        --libexecdir=/dist/usr/lib/ssh \\\n        --mandir=/dist/usr/share/man \\\n        --with-pid-dir=/run \\\n        --with-mantype=man \\\n        --with-privsep-path=/var/empty \\\n        --with-privsep-user=sshd \\\n        --with-md5-passwords \\\n        --with-ssl-engine \\\n        --disable-wtmp \\\n        --with-pam=/dist/lib64/security && \\\n    make && \\\n    make install\n\n\n##\n## Bastion image\n##\nFROM alpine:3.8\n\nLABEL maintainer=\"erik@cloudposse.com\"\n\nUSER root\n\n## Install dependencies\nRUN apk --update --no-cache add curl drill groff util-linux bash xauth gettext openssl-dev shadow sudo && \\\n    rm -rf /etc/ssh/ssh_host_*_key* && \\\n    rm -f /usr/bin/ssh-agent && \\\n    rm -f /usr/bin/ssh-keyscan && \\\n    touch /var/log/lastlog && \\\n    mkdir -p /var/run/sshd && \\\n    mv /etc/profile.d/color_prompt /etc/profile.d/color_prompt.sh\n\n## Install sudosh\nENV SUDOSH_VERSION=0.1.3\nRUN wget https://github.com/cloudposse/sudosh/releases/download/${SUDOSH_VERSION}/sudosh_linux_386 -O /usr/bin/sudosh && \\\n    chmod 755 /usr/bin/sudosh\n\n## Install Duo\nCOPY --from=duo-builder dist/ /\n\n## Install Google Authenticator PAM module\nCOPY --from=google-authenticator-libpam-builder dist/ /\n\n## Install OpenSSH Portable\nCOPY --from=openssh-portable-builder dist/ /\n\n## System\nENV TIMEZONE=\"Etc/UTC\" \\\n    TERM=\"xterm\" \\\n    HOSTNAME=\"bastion\"\n\nENV MFA_PROVIDER=\"duo\"\n\nENV UMASK=\"0022\"\n\n## Duo\nENV DUO_IKEY=\"\" \\\n    DUO_SKEY=\"\" \\\n    DUO_HOST=\"\" \\\n    DUO_FAILMODE=\"secure\" \\\n    DUO_AUTOPUSH=\"yes\" \\\n    DUO_PROMPTS=\"1\"\n\n## Enforcer\nENV ENFORCER_ENABLED=\"true\" \\\n    ENFORCER_CLEAN_HOME_ENABLED=\"true\"\n\n\n## Enable Rate Limiting\nENV RATE_LIMIT_ENABLED=\"true\"\n\n## Tolerate 5 consecutive fairues\nENV RATE_LIMIT_MAX_FAILURES=\"5\"\n## Lock accounts out for 300 seconds (5 minutes) after repeated failures\nENV RATE_LIMIT_LOCKOUT_TIME=\"300\"\n## Sleep N microseconds between failed attempts\nENV RATE_LIMIT_FAIL_DELAY=\"3000000\"\n\n## Slack\nENV SLACK_ENABLED=\"false\" \\\n    SLACK_HOOK=\"sshrc\" \\\n    SLACK_WEBHOOK_URL=\"\" \\\n    SLACK_USERNAME=\"\" \\\n    SLACK_TIMEOUT=\"2\" \\\n    SLACK_FATAL_ERRORS=\"true\"\n\n## SSH\nENV SSH_AUDIT_ENABLED=\"true\" \\\n    SSH_AUTHORIZED_KEYS_COMMAND=\"none\" \\\n    SSH_AUTHORIZED_KEYS_COMMAND_USER=\"nobody\"\n\nADD rootfs/ /\n\nEXPOSE 22\nENTRYPOINT [\"/init\"]\n"
}