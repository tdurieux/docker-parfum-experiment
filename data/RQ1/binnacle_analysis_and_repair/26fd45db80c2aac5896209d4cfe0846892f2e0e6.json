{
  "startTime": 1674236251478,
  "endTime": 1674236251688,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2013 Thatcher Peskens\n# Copyright 2015, 2017 Guillaume Pellerin, Thomas Fillon\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM debian:jessie\n\nMAINTAINER Guillaume Pellerin <yomguy@parisson.com>, Thomas fillon <thomas@parisson.com>\n\nRUN mkdir -p /srv/app\nRUN mkdir -p /srv/lib\nRUN mkdir -p /srv/lib/timeside\n\nWORKDIR /srv/lib\n\n# install confs, keys and deps\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;\nCOPY debian-requirements.txt /srv/lib/\nRUN apt-get update && \\\n    DEBIAN_PACKAGES=$(egrep -v \"^\\s*(#|$)\" debian-requirements.txt) && \\\n    apt-get install --no-install-recommends -y --force-yes $DEBIAN_PACKAGES && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install conda in /opt/miniconda\nENV PATH /opt/miniconda/bin:$PATH\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh && \\\n    /bin/bash miniconda.sh -b -p /opt/miniconda && \\\n    rm miniconda.sh && \\\n    hash -r && \\\n    ln -s /opt/miniconda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/miniconda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate\" >> ~/.bashrc && \\\n    conda config --set always_yes yes --set changeps1 yes\n\nCOPY environment-pinned.yml /srv/lib/\nRUN conda config --append channels conda-forge --append channels thomasfillon --append channels soumith &&\\\n    conda env update --file environment-pinned.yml &&\\\n    conda clean --all --yes\n\n# Link glib-networking with Conda to fix missing TLS/SSL support in Conda Glib library\n#RUN rm /opt/miniconda/lib/libgio* &&\\\n#    ln -s /usr/lib/x86_64-linux-gnu/libgio* /opt/miniconda/lib/\n\nENV PYTHON_EGG_CACHE=/srv/.python-eggs\nRUN mkdir -p $PYTHON_EGG_CACHE && \\\n    chown www-data:www-data $PYTHON_EGG_CACHE\n\n# Link python gstreamer\nRUN mkdir -p /srv/app/bin\nCOPY ./app/bin/link_gstreamer.py /srv/app/bin/\nRUN python /srv/app/bin/link_gstreamer.py\n\n# Install Timeside plugins from ./lib\nRUN mkdir -p /srv/lib/plugins\nCOPY ./lib/plugins/ /srv/lib/plugins/\nCOPY ./app/bin/setup_plugins.sh /srv/app/bin/\nRUN /bin/bash /srv/app/bin/setup_plugins.sh\n\n# Install Vamp plugins\nCOPY ./app/bin/install_vamp_plugins.sh /srv/app/bin/\nRUN /bin/bash /srv/app/bin/install_vamp_plugins.sh\n\n# Install bower\nRUN npm install -g bower && npm cache clean --force;\n\n# Install timeside\nWORKDIR /srv/lib/timeside\nCOPY . /srv/lib/timeside/\nRUN pip install --no-cache-dir -e .\n\nWORKDIR /srv/app\nEXPOSE 8000\n"
}