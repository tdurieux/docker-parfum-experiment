{
  "startTime": 1674242759623,
  "endTime": 1674242759929,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 9,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 9,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is used for testing, not intended for production systems.\n# Production versions as of 08/2015\n#   + Ubuntu 14.04.02\n#   + Ruby 1.9.3p484\n#   + Passenger + Apache\n\nFROM ubuntu:14.04\nMAINTAINER Jason Wieringa <jasonwieringa@gmail.com>\n\nENV RAILS_ENV=production\nENV BUNDLE_JOBS=2\nENV APP_DIR /opt/app\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \\\n      && apt-get update \\\n      && apt-get install --no-install-recommends -y \\\n      apt-transport-https \\\n      ca-certificates \\\n      && echo deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main > /etc/apt/sources.list.d/passenger.list && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y \\\n      libapache2-mod-passenger \\\n      apache2-mpm-worker \\\n      libxml2-dev \\\n      libxslt-dev \\\n      zlib1g-dev \\\n      libpq-dev \\\n      patch \\\n      make \\\n      gcc \\\n      g++ \\\n      ruby \\\n      ruby-dev \\\n      bundler \\\n      postgresql-client-9.3 \\\n      wget \\\n      unzip \\\n      --no-install-recommends \\\n      && rm -rf /var/lib/apt/lists/*\n\nRUN /usr/bin/ruby1.9.1 /usr/bin/passenger-install-apache2-module --apxs2-path='/usr/bin/apxs'\n\nCOPY Gemfile $APP_DIR/Gemfile\nCOPY Gemfile.lock $APP_DIR/Gemfile.lock\n\nWORKDIR $APP_DIR\n\nRUN bundle config build.nokogiri --with-xml2-include=/usr/include/libxml2 \\\n      && /usr/bin/bundle install --without test development debug doc\n\nCOPY . $APP_DIR\nCOPY contrib/templates/database.yml $APP_DIR/config/database.yml\n\n# Apache configurations\nCOPY contrib/templates/apache.conf /etc/apache2/sites-enabled/allincomefoods.conf\nRUN chown -R www-data:www-data $APP_DIR\nRUN echo \"ServerName localhost\" | sudo tee /etc/apache2/conf-enabled/fqdn.conf\nRUN ln -sf /dev/stdout /var/log/apache2/access.log\nRUN ln -sf /dev/stderr /var/log/apache2/error.log\n\nENTRYPOINT [\"/opt/app/contrib/scripts/docker-entrypoint.sh\"]\n"
}