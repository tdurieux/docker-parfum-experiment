{
  "startTime": 1674242245370,
  "endTime": 1674242245679,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Dockerfile for Unidata Tomcat.\n###\nFROM tomcat:8.5-jre8\n\n###\n# Usual maintenance\n###\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        zip \\\n        && \\\n    ###\n    # Cleanup apt\n    ###\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    ###\n    # Eliminate default web applications\n    ###\n    rm -rf ${CATALINA_HOME}/webapps/* && \\\n    rm -rf ${CATALINA_HOME}/server/webapps/* && \\\n    ###\n    # Obscuring server info\n    ###\n    cd ${CATALINA_HOME}/lib && \\\n    mkdir -p org/apache/catalina/util/ && \\\n    unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties \\\n        -d org/apache/catalina/util/ && \\\n    sed -i 's/server.info=.*/server.info=Apache Tomcat/g' \\\n        org/apache/catalina/util/ServerInfo.properties && \\\n    zip -ur catalina.jar \\\n        org/apache/catalina/util/ServerInfo.properties && \\\n    rm -rf org && cd ${CATALINA_HOME} && \\\n    sed -i 's/<Connector/<Connector server=\"Apache\" secure=\"true\"/g' \\\n        ${CATALINA_HOME}/conf/server.xml && \\\n    ###\n    # Ugly, embarrassing, fragile solution to adding the CredentialHandler\n    # element until we get XSLT or the equivalent figured out. True for other\n    # XML manipulations herein.\n    # https://github.com/Unidata/tomcat-docker/issues/27\n    # https://stackoverflow.com/questions/32178822/tomcat-understanding-credentialhandler\n    ##\n\n    sed -i 's/resourceName=\"UserDatabase\"\\/>/resourceName=\"UserDatabase\"><CredentialHandler className=\"org.apache.catalina.realm.MessageDigestCredentialHandler\" algorithm=\"SHA\" \\/><\\/Realm>/g' \\\n        ${CATALINA_HOME}/conf/server.xml && \\\n\n    ###\n    # Setting restrictive umask container-wide\n    ###\n    echo \"session optional pam_umask.so\" >> /etc/pam.d/common-session && \\\n    sed -i 's/UMASK.*022/UMASK           007/g' /etc/login.defs\n\n###\n# gosu is a non-optimal way to deal with the mismatches between Unix user and\n# group IDs inside versus outside the container resulting in permission\n# headaches when writing to directory outside the container.\n###\n\n# Installation instructions copy/pasted from\n# https://github.com/tianon/gosu/blob/master/INSTALL.md\n# minus ca-certificates which we are inheriting from parent container\nENV GOSU_VERSION 1.11\n\nRUN set -ex; \\\n    \\\n    fetchDeps=' \\\n        wget \\\n    '; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends $fetchDeps; \\\n    rm -rf /var/lib/apt/lists/*; \\\n    \\\n    dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n    wget -O /usr/local/bin/gosu \\\n        \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n    wget -O /usr/local/bin/gosu.asc \\\n        \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n    \\\n    # verify the signature\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    export KEY=B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n    for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            keyserver.pgp.com \\\n                            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver \"$server\" --recv-keys $KEY && break || : ; \\\n    done; \\\n    gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n    rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n    \\\n    chmod +x /usr/local/bin/gosu; \\\n    # verify that the binary works\n    gosu nobody true; \\\n    \\\n    apt-get purge -y --auto-remove $fetchDeps\n\n###\n# Capture stack traces to non-existent file\n###\nCOPY error-page.xml.snippet ${CATALINA_HOME}\nRUN sed -i '$d' ${CATALINA_HOME}/conf/web.xml && \\\n    cat error-page.xml.snippet >> ${CATALINA_HOME}/conf/web.xml && \\\n    rm error-page.xml.snippet\n\n###\n# Tomcat start script\n###\nCOPY start-tomcat.sh ${CATALINA_HOME}/bin\nCOPY entrypoint.sh /\n\n###\n# Start container\n###\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"start-tomcat.sh\"]\n"
}