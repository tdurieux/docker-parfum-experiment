{
  "startTime": 1674240844089,
  "endTime": 1674240844532,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#   LEAN Foundation Docker Container 20190104\n#   Cross platform deployment for multiple brokerages\n#   Intended to be used in conjunction with Dockerfile. This is just the foundation common OS+Dependencies required.\n#\n\n# Use base system for cleaning up wayward processes\nFROM phusion/baseimage:0.9.22\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# Have to add env TZ=UTC. See https://github.com/dotnet/coreclr/issues/602\nRUN env TZ=UTC\n\n# Install OS Packages:\n# Misc tools for running Python.NET and IB inside a headless container.\nRUN apt-get update && apt-get install --no-install-recommends -y git bzip2 unzip wget python3-pip python-opengl && \\\n    apt-get install --no-install-recommends -y clang cmake curl xvfb libxrender1 libxtst6 libxi6 libglib2.0-dev && \\\n# Install R\n    apt-get install --no-install-recommends -y r-base pandoc libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Java for running IB inside container:\n# https://github.com/dockerfile/java/blob/master/oracle-java8/Dockerfile\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n    add-apt-repository -y ppa:webupd8team/java && \\\n    apt-get update && apt-get install --no-install-recommends -y oracle-java8-installer && \\\n    rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/oracle-jdk8-installer\n\n# Install IB Gateway: Installs to ~/Jts\nRUN wget https://cdn.quantconnect.com/interactive/ibgateway-latest-standalone-linux-x64-v974.4g.sh && \\\n    chmod 777 ibgateway-latest-standalone-linux-x64-v974.4g.sh && \\\n    ./ibgateway-latest-standalone-linux-x64-v974.4g.sh -q && \\\n    wget -O ~/Jts/jts.ini https://cdn.quantconnect.com/interactive/ibgateway-latest-standalone-linux-x64-v974.4g.jts.ini && \\\n    rm ibgateway-latest-standalone-linux-x64-v974.4g.sh\n\n# Mono C# for LEAN:\n# From https://github.com/mono/docker/blob/master/\nRUN apt-get update && rm -rf /var/lib/apt/lists/*\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb http://download.mono-project.com/repo/ubuntu stable-xenial/snapshots/5.12.0.226 main\" > /etc/apt/sources.list.d/mono-xamarin.list && \\\n    apt-get update && apt-get install --no-install-recommends -y binutils mono-complete ca-certificates-mono mono-vbnc nuget referenceassemblies-pcl && \\\n    apt-get install --no-install-recommends -y fsharp && rm -rf /var/lib/apt/lists/* /tmp/*\n\n# Install miniconda and supported third party python packages\nENV PATH=\"/opt/miniconda3/bin:${PATH}\"\nRUN wget https://cdn.quantconnect.com/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh && \\\n    bash Miniconda3-4.3.31-Linux-x86_64.sh -b -p /opt/miniconda3 && \\\n    rm -rf Miniconda3-latest-Linux-x86_64.sh && \\\n    ln -s /opt/miniconda3/lib/libpython3.6m.so /usr/lib/libpython3.6m.so && \\\n    conda update -y conda pip && \\\n    conda install -y python=3.6.7 && \\\n    conda install -y numpy=1.14.5 && \\\n    conda install -y pandas=0.23.4 && \\\n    conda install -y jsonschema lxml plotly seaborn quandl && \\\n    conda install -y blaze cython cvxopt keras nltk tensorflow theano && \\\n    conda install -y pytorch torchvision -c pytorch && \\\n    conda install -y -c conda-forge rauth && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir arch copulalib cvxpy deap gym pykalman pyro-ppl && \\\n    pip install --no-cache-dir sklearn statistics tensorforce xgboost && \\\n    pip install --no-cache-dir QuantLib-Python && \\\n    conda clean -y --all\n\n# Install TA-lib for python\nRUN wget https://cdn.quantconnect.com/ta-lib/ta-lib-0.4.0-src.tar.gz && \\\n    tar -zxvf ta-lib-0.4.0-src.tar.gz && cd ta-lib && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n    pip install --no-cache-dir TA-lib && rm ta-lib-0.4.0-src.tar.gz\n\n# Install DX Analytics\nRUN git clone https://github.com/yhilpisch/dx.git && cd dx && \\\n    python setup.py install && cd .. && rm -irf dx\n\n# Install py-earth\nRUN git clone git://github.com/scikit-learn-contrib/py-earth.git && cd py-earth && \\\n    python setup.py install && cd .. && rm -irf py-earth\n\n# List all packages\nRUN conda list\n"
}