{
  "startTime": 1674244500884,
  "endTime": 1674244501119,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 31,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 39,
        "columnEnd": 110
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 114,
        "columnEnd": 182
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 387
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 387
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nRUN echo 'building GPU DeepDetect image'\n\nMAINTAINER Emmanuel Benazera \"beniz@droidnik.fr\"\n\nLABEL description=\"DeepDetect deep learning server & API / GPU version\"\n\nRUN ln -sf /dev/stdout /var/log/deepdetect.log\nRUN ln -sf /dev/stderr /var/log/deepdetect.log\n\nRUN useradd -ms /bin/bash dd\n\nRUN apt-get update && apt-get install --no-install-recommends -y git cmake build-essential libgoogle-glog-dev libgflags-dev libeigen3-dev libopencv-dev libcppnetlib-dev libboost-dev libboost-iostreams-dev libcurl4-openssl-dev protobuf-compiler libopenblas-dev libhdf5-dev libprotobuf-dev libleveldb-dev libsnappy-dev liblmdb-dev libutfcpp-dev wget unzip libspdlog-dev python-setuptools python-dev libarchive-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\nRUN git clone https://github.com/jpbarrette/curlpp.git\nWORKDIR /opt/curlpp\nRUN cmake .\nRUN make install\nRUN cp /usr/local/lib/libcurlpp.* /usr/lib/\n\nWORKDIR /opt\nRUN git clone https://github.com/beniz/deepdetect.git && cd deepdetect && mkdir build\n\nWORKDIR /opt/deepdetect/build\nRUN cmake .. -DUSE_CUDNN=ON -DUSE_SIMSEARCH=ON -DUSE_TSNE=ON -DCUDA_ARCH=\"-gencode arch=compute_60,code=sm_60\"\nRUN make\n\n# external volume to be mapped, e.g. for models or training data\nRUN mkdir /data\nVOLUME [\"/data\"]\n\n# include a few image models within the image\nRUN mkdir /opt/models\nWORKDIR /opt/models\nRUN mkdir ggnet && cd ggnet && wget https://www.deepdetect.com/models/ggnet/bvlc_googlenet.caffemodel\nRUN mkdir resnet_50 && cd resnet_50 && wget https://www.deepdetect.com/models/resnet/ResNet-50-model.caffemodel && wget https://www.deepdetect.com/models/resnet/ResNet_mean.binaryproto\nRUN mv /opt/models/resnet_50/ResNet_mean.binaryproto /opt/models/resnet_50/mean.binaryproto\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt\nRUN cp /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/\nRUN cp /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/\n\n# permissions\nRUN chown -R dd:dd /opt/deepdetect\nRUN chown -R dd:dd /opt/models\n\nWORKDIR /opt/deepdetect/build/main\nCMD ./dede -host 0.0.0.0\nEXPOSE 8080"
}