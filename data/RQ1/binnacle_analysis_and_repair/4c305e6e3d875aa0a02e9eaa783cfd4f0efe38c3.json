{
  "startTime": 1674250912241,
  "endTime": 1674250912621,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-apache\n\nRUN apt-get update && apt-get install --no-install-recommends -y cron git-core jq unzip vim zip \\\n  libjpeg-dev libpng-dev libpq-dev libsqlite3-dev libwebp-dev libzip-dev && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  docker-php-ext-configure zip --with-libzip && \\\n  docker-php-ext-configure gd --with-png-dir --with-jpeg-dir --with-webp-dir && \\\n  docker-php-ext-install exif gd mysqli opcache pdo_pgsql pdo_mysql zip\n\nRUN { \\\n    echo 'opcache.memory_consumption=128'; \\\n    echo 'opcache.interned_strings_buffer=8'; \\\n    echo 'opcache.max_accelerated_files=4000'; \\\n    echo 'opcache.revalidate_freq=2'; \\\n    echo 'opcache.fast_shutdown=1'; \\\n    echo 'opcache.enable_cli=1'; \\\n  } > /usr/local/etc/php/conf.d/docker-oc-opcache.ini\n\nRUN { \\\n    echo 'log_errors=on'; \\\n    echo 'display_errors=off'; \\\n    echo 'upload_max_filesize=32M'; \\\n    echo 'post_max_size=32M'; \\\n    echo 'memory_limit=128M'; \\\n  } > /usr/local/etc/php/conf.d/docker-oc-php.ini\n\nENV COMPOSER_ALLOW_SUPERUSER=1\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\n  /usr/local/bin/composer global require hirak/prestissimo\n\nRUN a2enmod rewrite\n\nCOPY config/docker /usr/src/octobercms-config-docker\n\nENV OCTOBERCMS_TAG v1.0.455\nENV OCTOBERCMS_CHECKSUM 43ebefa9ff4c0bd2fe55e89c08f29b25ef353b45\nENV OCTOBERCMS_CORE_BUILD 455\nENV OCTOBERCMS_CORE_HASH 530fb2559d6b264485c60ac3797fe8ac\n\nRUN git clone https://github.com/octobercms/october.git -b $OCTOBERCMS_TAG --depth 1 . && \\\n  composer install --no-interaction --prefer-dist --no-scripts && \\\n  composer clearcache && \\\n  git status && git reset --hard HEAD && \\\n  rm -rf .git && \\\n  echo 'APP_ENV=docker' > .env && \\\n  mv /usr/src/octobercms-config-docker config/docker && \\\n  touch storage/database.sqlite && \\\n  chmod 666 storage/database.sqlite && \\\n  php artisan october:up && \\\n  php artisan plugin:install october.drivers && \\\n  chown -R www-data:www-data /var/www/html && \\\n  find . -type d \\( -path './plugins' -or  -path './storage' -or  -path './themes' -or  -path './plugins/*' -or  -path './storage/*' -or  -path './themes/*' \\) -exec chmod g+ws {} \\;\n\nRUN php -r \"use System\\\\Models\\\\Parameter; \\\n    require __DIR__.'/bootstrap/autoload.php'; \\\n    \\$app = require_once __DIR__.'/bootstrap/app.php'; \\\n    \\$app->make('Illuminate\\\\Contracts\\\\Console\\\\Kernel')->bootstrap(); \\\n    Parameter::set(['system::core.build'=>getenv('OCTOBERCMS_CORE_BUILD'), 'system::core.hash'=>getenv('OCTOBERCMS_CORE_HASH')]); \\\n    echo \\\"October CMS \\\\n Build: \\\",Parameter::get('system::core.build'), \\\"\\\\n Hash: \\\", Parameter::get('system::core.hash'), \\\"\\\\n\\\";\"\n\nRUN echo \"* * * * * /usr/local/bin/php /var/www/html/artisan schedule:run > /proc/1/fd/1 2>/proc/1/fd/2\" > /etc/cron.d/october-cron && \\\n  crontab /etc/cron.d/october-cron\n\nRUN echo 'exec php artisan \"$@\"' > /usr/local/bin/artisan && \\\n  echo 'exec php artisan tinker' > /usr/local/bin/tinker && \\\n  echo '[ $# -eq 0 ] && exec php artisan october || exec php artisan october:\"$@\"' > /usr/local/bin/october && \\\n  sed -i '1s;^;#!/bin/bash\\n[ \"$PWD\" != \"/var/www/html\" ] \\&\\& echo \" - Helper must be run from /var/www/html\" \\&\\& exit 1\\n;' /usr/local/bin/artisan /usr/local/bin/tinker /usr/local/bin/october && \\\n  chmod +x /usr/local/bin/artisan /usr/local/bin/tinker /usr/local/bin/october\n\nCOPY docker-oc-entrypoint /usr/local/bin/\n\nENTRYPOINT [\"docker-oc-entrypoint\"]\nCMD [\"apache2-foreground\"]\n"
}