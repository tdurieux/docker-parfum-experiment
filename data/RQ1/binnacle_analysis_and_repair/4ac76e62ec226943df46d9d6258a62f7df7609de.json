{
  "startTime": 1674248230080,
  "endTime": 1674248230164,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# start from node image so we can install esy from npm\n\nFROM node:10.13-alpine as build\n\nENV TERM=dumb LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib\n\nRUN mkdir /esy\nWORKDIR /esy\n\nENV NPM_CONFIG_PREFIX=/esy\nRUN npm install -g --unsafe-perm esy@0.5.6 && npm cache clean --force;\n\n# now that we have esy installed we need a proper runtime\n\nFROM alpine:3.8 as esy\n\nENV TERM=dumb LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib\n\nWORKDIR /\n\nCOPY --from=build /esy /esy\n\nRUN apk add --no-cache ca-certificates wget bash curl perl-utils git patch gcc g++ musl-dev make m4 gmp-dev linux-headers\n\nRUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\nRUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk\nRUN apk add --no-cache glibc-2.28-r0.apk\n\nENV PATH=/esy/bin:$PATH\n\nRUN mkdir /app\nWORKDIR /app\n\nRUN echo ' \\\n{\\\n  \"name\": \"package-base\", \\\n  \"dependencies\": { \\\n    \"ocaml\": \"~4.7.1000\", \\\n    \"@opam/dune\": \"*\", \\\n    \"@opam/reason\": \"*\", \\\n    \"@esy-packages/esy-openssl\": \"esy-packages/esy-openssl#65efbc9\" \\\n  } \\\n} \\\n' > esy.json\n\nRUN esy\n\nCOPY esy.json esy.json\nCOPY esy.lock esy.lock\n\nRUN esy fetch\nRUN esy true\n\nCOPY . .\n\nRUN esy b dune build src/lambda.exe --profile=static\n\nRUN mv _build/default/src/lambda.exe bootstrap\n"
}