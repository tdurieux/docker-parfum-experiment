{
  "startTime": 1674243002556,
  "endTime": 1674243002611,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM birgerk/apache-letsencrypt\n\nRUN apt-get update && \\\n    apt-get -f -y --no-install-recommends --assume-yes install libapache2-mod-auth-openidc && \\\n    apt-get install -y --no-install-recommends wget && \\\n    apt-get install -y --no-install-recommends telnet && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY ./others/*.conf /etc/apache2/conf-enabled/\n\nRUN   a2enmod proxy; \\\n      a2enmod proxy_http; \\\n      a2enmod proxy_wstunnel; \\\n      a2enmod auth_openidc\n\nRUN   mkdir /etc/apache2/certs; \\\n      openssl req \\\n            -new \\\n            -newkey rsa:4096 \\\n            -days 365 \\\n            -nodes \\\n            -x509 \\\n            -subj \"/C=US/ST=CA/L=dev/O=dev/CN=localhost\" \\\n            -keyout /etc/apache2/certs/localhost.key \\\n            -out /etc/apache2/certs/localhost.cert\n\n\nEXPOSE 80 443\n\n# Default environment varibles.\nENV docker_host=localhost\nENV firefly_port=8080\n"
}