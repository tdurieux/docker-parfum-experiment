{
  "startTime": 1674239552111,
  "endTime": 1674239552380,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 15,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 15,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 15,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 15,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Alpine Linux with python 2.7 and Oracle Java 8\nFROM ubuntu:artful\n\n# Installing Oracle JDK 8\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n \t\tsoftware-properties-common \\\n \t\twget \\\n \t\tgit \\\n\t\tlib32gcc1 \\\n\t\tlib32ncurses5 \\\n\t\tlib32stdc++6 \\\n\t\tlib32z1 \\\n\t\tlibc6-i386 \\\n\t\tlibgl1-mesa-dev \\\n\t\tpython-pip \\\n\t\tpython-dev \\\n\t\tgcc \\\n \t\tpython-tk \\\n \t\tcurl \\\n #&& add-apt-repository ppa:webupd8team/java -y \\\n #&& apt-get update \\\n #&& echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n #&& apt-get install -y oracle-java8-installer \\\n && echo \"y\" | apt-get install -y --no-install-recommends openjdk-8-jdk \\\n && echo \"y\" | apt-get install -y --no-install-recommends openjdk-8-jre \\\n && apt-get install --no-install-recommends -y python-setuptools \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Installing Android SDK and Android 16\nRUN cd / \\\n && wget -qO- https://dl.google.com/android/android-sdk_r24.2-linux.tgz | tar xz -C /root/ --no-same-permissions \\\n # && wget http://dl.google.com/android/android-sdk_r24.2-linux.tgz \\\n # && tar xfz android-sdk_r24.2-linux.tgz \\\n # && ln -s /android-sdk-linux/tools/android /usr/bin/android\n && chmod -R a+rX /root/android-sdk-linux \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter tools --no-ui --force -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter platform-tools --no-ui --force -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter android-16 --no-ui --force -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter sys-img-armeabi-v7a-android-16 --no-ui -a\n\nENV ANDROID_HOME=\"/root/android-sdk-linux\" \\\n\tPATH=$PATH:/root/android-sdk-linux/platform-tools:/root/android-sdk-linux/tools \\\n\tANDROID_EMULATOR_FORCE_32BIT=true \\\n\tTERM=linux \\\n\tTERMINFO=/etc/terminfo\n\nRUN pwd\n\nRUN pwd\n\nRUN pwd\n\nRUN pwd\n\nRUN pwd\n\n\nRUN pwd \\\n && cd /root/ \\\n && git clone --recursive https://github.com/alexMyG/AndroPyTool.git \\\n && wget https://github.com/pjlantz/droidbox/releases/download/v4.1.1/DroidBox411RC.tar.gz \\\n && tar -zxvf DroidBox411RC.tar.gz \\ \n && cp -r DroidBox_4.1.1/images AndroPyTool/DroidBox_AndroPyTool/images \\\n && pip install --no-cache-dir wheel \\\n && pip install --no-cache-dir -r AndroPyTool/requirements.txt \\\n && touch AndroPyTool/avclass/__init__.py \\\n && chmod 744 /root/AndroPyTool/run_androPyTool.sh && rm DroidBox411RC.tar.gz\n\n\n# Preparing droidbox\nRUN pwd \\\n && cd /root/ \\\n && chmod 744 AndroPyTool/DroidBox_AndroPyTool/*.sh \\\n && echo \"no\" | ./AndroPyTool/DroidBox_AndroPyTool/createDroidBoxDevice.sh\n\nRUN adb devices; exit 0\n\nVOLUME /apks\n\nEXPOSE 5554 5555\n\nWORKDIR /root/AndroPyTool/\n\nENTRYPOINT [\"python\", \"-u\", \"/root/AndroPyTool/androPyTool.py\"]\n#CMD cd\n\n\n\n\n\n\n"
}