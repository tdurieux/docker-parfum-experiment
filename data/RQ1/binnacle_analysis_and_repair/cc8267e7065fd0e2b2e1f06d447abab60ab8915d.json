{
  "startTime": 1674249305844,
  "endTime": 1674249306280,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 50,
        "lineEnd": 60,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 72,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 60,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nLABEL maintainer=\"Michael Mayer <michael@liquidbytes.net>\"\n\nWORKDIR \"/src\"\n\nENV DARKTABLE_VERSION 2.5.0\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV LC_MESSAGES C.UTF-8\nENV LANGUAGE C.UTF-8\nENV GCC_VER=8\nENV LLVM_VER=7\nENV DEBIAN_FRONTEND noninteractive\n\n# Paper over occasional network flakiness of some mirrors.\nRUN echo 'Acquire::Retries \"10\";' > /etc/apt/apt.conf.d/80retry\n\n# Do not install recommended packages\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/80recommends\n\n# Do not install suggested packages\nRUN echo 'APT::Install-Suggests \"false\";' > /etc/apt/apt.conf.d/80suggests\n\n# Assume yes\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/80forceyes\n\n# Fix broken packages\nRUN echo 'APT::Get::Fix-Missing \"true\";' > /etc/apt/apt.conf.d/80fixmissin\n\n# Install general build dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        gpg-agent \\\n        apt-utils \\\n        gpg\t\\\n        gpgconf\t\\\n        gpgv \\\n        pkg-config \\\n        nano \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\n# Add llvm repo\nRUN echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main\" | tee /etc/apt/sources.list.d/llvm.list\nCOPY /docker/darktable/llvm.gpg.key /tmp/llvm.gpg.key\nRUN apt-key add /tmp/llvm.gpg.key\n\n# Install darktable build depenencies\nRUN apt-get update && apt-get install -y --no-install-recommends appstream-util clang-$LLVM_VER cmake desktop-file-utils \\\n    g++-$GCC_VER gcc-$GCC_VER gettext git intltool libatk1.0-dev libcairo2-dev \\\n    libcolord-dev libcolord-gtk-dev libcups2-dev libcurl4-gnutls-dev \\\n    libexiv2-dev libflickcurl-dev libgdk-pixbuf2.0-dev libglib2.0-dev \\\n    libgphoto2-dev libgraphicsmagick1-dev libgtk-3-dev libjpeg-dev \\\n    libjson-glib-dev liblcms2-dev liblensfun-dev liblua5.2-dev liblua5.3-dev \\\n    libopenexr-dev libopenjp2-7-dev libosmgpsmap-1.0-dev libpango1.0-dev \\\n    libpng-dev libpugixml-dev librsvg2-dev libsaxon-java libsecret-1-dev \\\n    libsoup2.4-dev libsqlite3-dev libtiff5-dev libwebp-dev libx11-dev \\\n    libxml2-dev libxml2-utils make ninja-build perl po4a python3-jsonschema \\\n    xsltproc zlib1g-dev libxslt1-dev gtk+-3.0 libsoup2.4 libtiff-dev libgtk-3-bin && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN dpkg-divert --add --rename --divert /usr/bin/ld.original /usr/bin/ld && \\\n    ln -s /usr/bin/ld.gold /usr/bin/ld\n\nRUN rm -rf /var/lib/apt/lists/* && apt-get update && \\\n    apt-get install -y --no-install-recommends clang-$LLVM_VER libclang-common-$LLVM_VER-dev \\\n    llvm-$LLVM_VER-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN rm -rf /var/lib/apt/lists/* && apt-get update && \\\n    apt-get install -y --no-install-recommends default-jdk-headless default-jre-headless docbook \\\n    docbook-xml docbook-xsl docbook-xsl-saxon fop gnome-doc-utils imagemagick \\\n    libsaxon-java xsltproc && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Build and install darktable\nRUN git clone https://github.com/darktable-org/darktable.git\nWORKDIR \"/src/darktable\"\nRUN git fetch --all --tags --prune && git checkout tags/release-$DARKTABLE_VERSION\nRUN git submodule init && git submodule update\nRUN ./build.sh --prefix /opt/darktable --build-type Release --install\n\n# Copy darktable header files\nWORKDIR \"/src/darktable/src\"\nRUN mkdir -p /opt/darktable/include/darktable\nRUN find . -name '*.h' -exec cp --parents \\{\\} /opt/darktable/include/darktable \\;\n\n# Configure shell environment\nWORKDIR \"/opt/darktable\"\nENV PATH /opt/darktable/bin:$PATH\n\n# Configure broadwayd\nENV GDK_BACKEND broadway\nENV BROADWAY_DISPLAY :5\nEXPOSE 8080\nCMD broadwayd -p 8080 -a 0.0.0.0 :5"
}