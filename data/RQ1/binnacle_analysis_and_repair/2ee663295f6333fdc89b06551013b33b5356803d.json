{
  "startTime": 1674251662449,
  "endTime": 1674251662795,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends \\\n    curl \\\n    git \\\n    build-essential \\\n    gfortran \\\n    nasm \\\n    tmux \\\n    sudo \\\n    openssh-client \\\n    libgoogle-glog-dev \\\n    rsync \\\n    curl \\\n    wget \\\n    cmake \\\n    automake \\\n    libgmp3-dev \\\n    cpio \\\n    libtool \\\n    libyaml-dev \\\n    realpath \\\n    valgrind \\\n    software-properties-common \\\n    unzip \\\n    libz-dev \\\n    vim \\\n    emacs \\\n    python3-dev \\\n    python3-pip \\\n    python3-wheel \\\n    python3-setuptools && \\\n    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\n\nWORKDIR /root\n\n# Install Intel MKL\nRUN mkdir intel_mkl && cd intel_mkl && \\\n    wget https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_2018.2.199.tgz && \\\n    tar zxvf l_mkl_2018.2.199.tgz && rm -rf l_mkl_2018.2.199.tgz && \\\n    cd l_mkl_2018.2.199 && \\\n    sed -i -E \"s/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g\" silent.cfg && \\\n    ./install.sh -s silent.cfg && \\\n    rm -rf ${HOME}/intel_mkl\nENV LD_LIBRARY_PATH /opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:$LD_LIBRARY_PATH\n\n# Install numpy & scipy with mkl backend\nRUN echo \"[mkl]\\nlibrary_dirs = /opt/intel/mkl/lib/intel64\\ninclude_dirs = /opt/intel/mkl/include\\nmkl_libs = mkl_rt\\nlapack_libs =\" >> $HOME/.numpy-site.cfg && \\\n    pip3 install --no-cache-dir --no-binary :all: numpy==1.14.2 && \\\n    pip3 install --no-cache-dir --no-binary :all: scipy==1.0.1\n\n# Install libjpeg-turbo\nRUN mkdir libjpeg-turbo && cd libjpeg-turbo && \\\n    wget https://jaist.dl.sourceforge.net/project/libjpeg-turbo/1.5.1/libjpeg-turbo-1.5.1.tar.gz && \\\n    tar zxvf libjpeg-turbo-1.5.1.tar.gz && \\\n    rm -rf libjpeg-turbo-1.5.1.tar.gz && \\\n    cd libjpeg-turbo-1.5.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${HOME} && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf ${HOME}/libjpeg-turbo\n\n# Install OpenCV with libjpeg-turbo\nRUN mkdir opencv && cd opencv && \\\n    wget https://github.com/opencv/opencv/archive/3.4.1.tar.gz && \\\n    tar zxvf 3.4.1.tar.gz && rm -rf 3.4.1.tar.gz && \\\n    wget https://github.com/opencv/opencv_contrib/archive/3.4.1.tar.gz && \\\n    tar zxvf 3.4.1.tar.gz && rm -rf 3.4.1.tar.gz && \\\n    mkdir build && cd build && \\\n    cmake \\\n    -DCMAKE_BUILD_TYPE=RELEASE \\\n    -DCMAKE_INSTALL_PREFIX=/usr/local \\\n    -DWITH_TBB=ON \\\n    -DWITH_EIGEN=OFF \\\n    -DWITH_FFMPEG=ON \\\n    -DWITH_QT=OFF \\\n    -DWITH_OPENCL=OFF \\\n    -DWITH_CUDA=ON \\\n    -DCUDA_ARCH_BIN=6.0 \\\n    -DCUDA_ARCH_PTX= \\\n    -DWITH_JPEG=ON \\\n    -DBUILD_JPEG=OFF \\\n    -DJPEG_INCLUDE_DIR=${HOME}/include \\\n    -DJPEG_LIBRARY=${HOME}/lib/libjpeg.so \\\n    -DOPENCV_EXTRA_MODULES_PATH=${HOME}/opencv/opencv_contrib-3.4.1/modules \\\n    -DBUILD_opencv_python3=ON \\\n    -DPYTHON3_EXECUTABLE=$(which python3) \\\n    -DPYTHON3_INCLUDE_DIR=$(python3 -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())') \\\n    -DPYTHON3_NUMPY_INCLUDE_DIRS=$(python3 -c 'import numpy; print(numpy.get_include())') \\\n    -DPYTHON3_LIBRARIES=$(find /usr/lib -name 'libpython*.so') \\\n    ${HOME}/opencv/opencv-3.4.1 && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf ${HOME}/opencv\n\nRUN pip3 install --no-cache-dir \\\n    ipython==6.3.1 \\\n    jupyter==1.0.0 \\\n    cython==0.28.2 \\\n    cupy-cuda90==4.0.0 \\\n    chainer==4.0.0 \\\n    matplotlib==2.2.2 \\\n    scikit-learn==0.19.1 \\\n    pandas==0.22.0\n\n"
}