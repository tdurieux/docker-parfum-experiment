{
  "startTime": 1674249496580,
  "endTime": 1674249496661,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-alpine3.8\n\nENV PYTHONUNBUFFERED 1\nENV PYTHONDONTWRITEBYTECODE 1\nARG PACKAGES=\"postgresql-libs libxml2 libxslt freetype libffi jpeg libmaxminddb bash git tar gzip inkscape libmagic\"\nARG BUILD_DEPS=\"gcc g++ postgresql-dev libxml2-dev libxslt-dev freetype-dev libffi-dev jpeg-dev linux-headers autoconf automake libtool make dos2unix\"\nWORKDIR /code\n\n# Install general dependencies.\nRUN apk add --no-cache --update $PACKAGES && \\\n    apk add --no-cache --update --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ vips && \\\n    apk add --no-cache --update --virtual .builder $BUILD_DEPS\n\n# GeoIP2 Data Files\nRUN mkdir -p /usr/share/GeoIP/ && \\\n    wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz && \\\n    wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz && \\\n    gunzip GeoLite2-City.mmdb.gz && \\\n    gunzip GeoLite2-Country.mmdb.gz && \\\n    mv *.mmdb /usr/share/GeoIP/\n\n# Upgrade package essentials.\nRUN pip3 install --no-cache-dir --upgrade pip setuptools wheel dumb-init pipenv\n\nCOPY requirements/ /code/\nRUN pip3 install --no-cache-dir --upgrade -r test.txt\n\nCOPY bin/docker-command.bash /bin/docker-command.bash\nRUN dos2unix /bin/docker-command.bash && \\\n    apk del .builder\n\nCOPY app/ /code/app/\n\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--\"]\nCMD [\"bash\", \"/bin/docker-command.bash\"]\n\nARG BUILD_DATETIME\nARG SHA1\n\nLABEL co.gitcoin.description=\"Gitcoin web application image\" \\\n    co.gitcoin.documentation=\"https://github.com/gitcoinco/web/blob/master/docs/RUNNING_LOCALLY_DOCKER.md\" \\\n    co.gitcoin.licenses=\"AGPL-3.0\" \\\n    co.gitcoin.image.revision=$SHA1 \\\n    co.gitcoin.image.vendor=\"Gitcoin\" \\\n    co.gitcoin.image.source=\"https://github.com/gitcoinco/web\" \\\n    co.gitcoin.image.title=\"Gitcoin Web\" \\\n    co.gitcoin.image.created=$BUILD_DATETIME\n"
}