{
  "startTime": 1674239065582,
  "endTime": 1674239065753,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 5,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Azurewind's PostgreSQL image with Chinese full text search\n# build: docker build --force-rm -t chenxinaz/zhparser .\n# run: docker run --name PostgreSQLcnFt -p 5432:5432 chenxinaz/zhparser\n# run interactive: winpty docker run -it --name PostgreSQLcnFt -p 5432:5432 chenxinaz/zhparser --entrypoint bash chenxinaz/zhparser\n\nFROM postgres:11.2\n\nARG CN_MIRROR=1\n\n# Uncomment the following command if you have bad internet connection\n# and first download the files into data directory\n# COPY data/pg_jieba.zip /pg_jieba.zip\n\nRUN if [ $CN_MIRROR = 1 ] ; then DEBIAN_VERSION=$(dpkg --status tzdata|grep Provides|cut -f2 -d'-') \\\n&& echo \"using mirrors for $DEBIAN_VERSION\" \\\n&& echo \"deb http://ftp.cn.debian.org/debian/ $DEBIAN_VERSION main non-free contrib \\n\\\ndeb http://ftp.cn.debian.org/debian/ $DEBIAN_VERSION-updates main non-free contrib \\n\\\ndeb http://ftp.cn.debian.org/debian/ $DEBIAN_VERSION-backports main non-free contrib \\n\\\ndeb http://ftp.cn.debian.org/debian-security/ $DEBIAN_VERSION/updates main non-free contrib \\n\\\ndeb-src http://ftp.cn.debian.org/debian/ $DEBIAN_VERSION main non-free contrib \\n\\\ndeb-src http://ftp.cn.debian.org/debian/ $DEBIAN_VERSION-updates main non-free contrib \\n\\\ndeb-src http://ftp.cn.debian.org/debian/ $DEBIAN_VERSION-backports main non-free contrib \\n\\\ndeb-src http://ftp.cn.debian.org/debian-security/ $DEBIAN_VERSION/updates main non-free contrib\" > /etc/apt/sources.list; else echo \"No mirror\"; fi\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n      gcc \\\n      make \\\n      libc-dev \\\n      postgresql-server-dev-$PG_MAJOR \\\n      wget \\\n      unzip \\\n      ca-certificates \\\n      openssl \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n  && wget -q -O - \"https://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2\" | tar xjf - \\\n  && wget -O zhparser.zip \"https://github.com/amutu/zhparser/archive/master.zip\" \\\n  && unzip zhparser.zip \\\n  && cd scws-1.2.3 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make install \\\n  && cd /zhparser-master \\\n  && SCWS_HOME=/usr/local make && make install \\\n  # pg_trgm is recommend but not required.\n  && echo \"CREATE EXTENSION pg_trgm; \\n\\\nCREATE EXTENSION zhparser; \\n\\\nCREATE TEXT SEARCH CONFIGURATION chinese_zh (PARSER = zhparser); \\n\\\nALTER TEXT SEARCH CONFIGURATION chinese_zh ADD MAPPING FOR n,v,a,i,e,l,t WITH simple;\" \\\n> /docker-entrypoint-initdb.d/init-zhparser.sql \\\n  && apt-get purge -y gcc make libc-dev postgresql-server-dev-$PG_MAJOR \\\n  && apt-get autoremove -y \\\n  && rm -rf \\\n    /zhparser-master \\\n    /zhparser.zip \\\n    /scws-1.2.3\n"
}