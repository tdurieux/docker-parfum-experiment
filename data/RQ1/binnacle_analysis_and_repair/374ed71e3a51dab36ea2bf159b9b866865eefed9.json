{
  "startTime": 1674249491209,
  "endTime": 1674249491299,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.8.5-jessie as builder\n# install xz\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    xz-utils \\\n&& rm -rf /var/lib/apt/lists/*\n# install UPX\nADD https://github.com/upx/upx/releases/download/v3.94/upx-3.94-amd64_linux.tar.xz /usr/local\nRUN xz -d -c /usr/local/upx-3.94-amd64_linux.tar.xz | \\\n    tar -xOf - upx-3.94-amd64_linux/upx > /bin/upx && \\\n    chmod a+x /bin/upx\n# install dep\nRUN go get github.com/golang/dep/cmd/dep\n# create a working directory\nWORKDIR /go/src/app\n# add Gopkg.toml and Gopkg.lock\nADD Gopkg.toml Gopkg.toml\nADD Gopkg.lock Gopkg.lock\n# install packages\nRUN dep ensure --vendor-only\n# add source code\nADD src src\n# build the source\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main src/main.go\n# strip and compress the binary\nRUN strip --strip-unneeded main\nRUN upx main\n\n# use a minimal alpine image\nFROM alpine:3.7\n# add ca-certificates in case you need them\nRUN apk add --no-cache ca-certificates\n# set working directory\nWORKDIR /root\n# copy the binary from builder\nCOPY --from=builder /go/src/app/main .\n# run the binary\nCMD [\"./main\"]\n"
}