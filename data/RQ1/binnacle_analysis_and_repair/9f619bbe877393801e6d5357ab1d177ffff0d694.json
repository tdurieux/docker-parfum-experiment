{
  "startTime": 1674249852215,
  "endTime": 1674249852379,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 19,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12.1-alpine3.9\nMAINTAINER Monax <support@monax.io>\n\nENV PROTO_VERSION 3.3.0\nENV GORELEASER_VERSION \"v0.104.1\"\n\nRUN apk add --update --no-cache \\\n nodejs \\\n npm \\\n netcat-openbsd \\\n git \\\n openssh-client \\\n openssl \\\n make \\\n bash \\\n gcc \\\n g++ \\\n jq \\\n curl \\\n docker \\\n libffi-dev \\\n openssl-dev \\\n python-dev \\\n py-pip\n\nRUN pip install --no-cache-dir docker-compose\nRUN npm install -g npm-cli-login && npm cache clean --force;\n\nRUN curl -f -OL https://github.com/google/protobuf/releases/download/v${PROTO_VERSION}/protoc-${PROTO_VERSION}-linux-x86_64.zip\nRUN mkdir -p protobuf\nRUN unzip protoc-${PROTO_VERSION}-linux-x86_64.zip -d protobuf\nRUN cp protobuf/bin/protoc /usr/bin/protoc\nRUN rm -rf protobuf protoc-*\n\nRUN go get -u golang.org/x/tools/cmd/goimports\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\nRUN go get -u golang.org/x/lint/golint\nENV GO111MODULE=on\n\nRUN cd /usr/bin && curl -f -L https://github.com/goreleaser/goreleaser/releases/download/$GORELEASER_VERSION/goreleaser_Linux_x86_64.tar.gz | tar xz goreleaser\n\n# install aws auth binaries\nRUN curl -f \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"awscli-bundle.zip\"\nRUN unzip awscli-bundle.zip\nRUN python ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws\n\n# install gcloud auth binaries\nRUN curl -f https://sdk.cloud.google.com | bash\nRUN ls /root/google-cloud-sdk/bin/\nENV PATH /root/google-cloud-sdk/bin/:$PATH\n\n"
}