{
  "startTime": 1674240852988,
  "endTime": 1674240853190,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable as tools\n\n# Put this first to recompute this layer less frequently\n# as it is pretty slow\nRUN apt-get update && apt-get -y --no-install-recommends install openssl && rm -rf /var/lib/apt/lists/*;\nRUN openssl dhparam -out /dhparam.pem 2048\n\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n  wget ca-certificates git && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  wget -O /usr/local/bin/dumb-init \\\n  https://github.com/Yelp/dumb-init/releases/download/v1.2.1/dumb-init_1.2.1_amd64 && \\\n  echo \"057ecd4ac1d3c3be31f82fc0848bf77b1326a975b4f8423fe31607205a0fe945  /usr/local/bin/dumb-init\" | \\\n    sha256sum -c - && \\\n  chmod 755 /usr/local/bin/dumb-init\n\nRUN cd /tmp && \\\n  git clone https://github.com/mrako/wait-for.git && \\\n  cd wait-for && \\\n  git checkout d9699cb9fe8a4622f05c4ee32adf2fd93239d005 && \\\n  cp -v wait-for /bin/ && \\\n  cd /tmp && \\\n  rm -r /tmp/wait-for\n\n\nFROM node:10-alpine as frontpage\n\nARG WEBPACK_MODE=production\nRUN mkdir /root/html\nWORKDIR /root/html\nCOPY websites/frontpage/package.json ./\nCOPY websites/frontpage/yarn.lock ./\nRUN yarn install --network-timeout 100000 && yarn cache clean;\nCOPY websites/frontpage/src ./src\nCOPY websites/frontpage/static ./static\nCOPY websites/frontpage/webpack.config.js ./\nRUN rm -f ./src/README.md\nCOPY README.md ./src/README.md\nRUN npx webpack --mode=$WEBPACK_MODE\n\n\nFROM node:10-alpine as auditpage\n\nARG WEBPACK_MODE=production\nRUN mkdir /root/html\nWORKDIR /root/html\nCOPY websites/audit/package.json ./\nCOPY websites/audit/yarn.lock ./\nRUN yarn install --network-timeout 100000 && yarn cache clean;\nCOPY websites/audit/src ./src\nCOPY websites/audit/.babelrc ./\nCOPY websites/audit/webpack.config.js ./\nRUN npx webpack --mode=$WEBPACK_MODE\n\n\nFROM nginx:stable\n\nRUN apt-get update && \\\n  apt-get -y --no-install-recommends install inotify-tools && rm -rf /var/lib/apt/lists/*;\n\nVOLUME /etc/nginx/certs\n\nWORKDIR /root\nCOPY services/nginx/start.sh ./\nCOPY services/nginx/nginx-template.conf /etc/nginx/nginx-template.conf\nCOPY services/nginx/blacklist.txt /etc/nginx/blacklist.txt\n\nRUN rm -rf /var/www/ && mkdir /var/www\nCOPY --from=tools /dhparam.pem /etc/nginx/dhparam.pem\nCOPY --from=tools /usr/local/bin/dumb-init /usr/local/bin/dumb-init\nCOPY --from=tools /bin/wait-for /bin/wait-for\nCOPY --from=frontpage /root/html/dist /var/www/static\nCOPY --from=auditpage /root/html/dist/index.html /var/www/static/audit.html\n\nVOLUME /var/log/dapps.earth-integrity\n\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--\"]\nCMD [\"./start.sh\"]\n"
}