{
  "startTime": 1674240637990,
  "endTime": 1674240638102,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 58,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 58,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2014 Google Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This file creates a standard build environment for building Kubernetes\n\nFROM kube-build:cross\nMAINTAINER  Joe Beda <jbeda@google.com>\n\n# (set an explicit GOARM of 5 for maximum compatibility)\nENV GOARM 5\nENV GOOS    linux\nENV GOARCH  amd64\n\n# work around 64MB tmpfs size in Docker 1.6\nENV TMPDIR /tmp.k8s\n\n# Get the code coverage tool and godep\nRUN mkdir $TMPDIR && \\\n    go get golang.org/x/tools/cmd/cover github.com/tools/godep\n\n# We use rsync to copy some binaries around.  It is faster (0.3s vs. 1.1s) on my\n# machine vs. `install`\nRUN rm -rf /var/lib/apt/lists/\nRUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install --no-install-recommends -y rsync && rm -rf /var/lib/apt/lists/*;\n\n# Download and symlink etcd.  We need this for our integration tests.\nRUN mkdir -p /usr/local/src/etcd &&\\\n    cd /usr/local/src/etcd && \\\n    curl -f -L -O -s https://github.com/coreos/etcd/releases/download/v2.0.0/etcd-v2.0.0-linux-amd64.tar.gz && \\\n    tar xzf etcd-v2.0.0-linux-amd64.tar.gz && \\\n    ln -s ../src/etcd/etcd-v2.0.0-linux-amd64/etcd /usr/local/bin/ && rm etcd-v2.0.0-linux-amd64.tar.gz\n\n# Mark this as a kube-build container\nRUN touch /kube-build-image\n\nWORKDIR /go/src/k8s.io/kubernetes\n\n# Propagate the git tree version into the build image\nADD kube-version-defs /kube-version-defs\nENV KUBE_GIT_VERSION_FILE /kube-version-defs\n\n# Make output from the dockerized build go someplace else\nENV KUBE_OUTPUT_SUBPATH _output/dockerized\n\n# Upload Kubernetes source\nADD kube-source.tar.gz /go/src/k8s.io/kubernetes\n"
}