{
  "startTime": 1674235107271,
  "endTime": 1674235107492,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#!/bin/echo docker build . -f\n# -*- coding: utf-8 -*-\n# Copyright: 2018-present Samsung Electronics France SAS, and other contributors\n\nFROM ubuntu:16.04\nMAINTAINER Philippe Coval (p.coval@samsung.com)\n\nENV DEBIAN_FRONTEND noninteractive\nENV LC_ALL en_US.UTF-8\nENV LANG ${LC_ALL}\n\nRUN echo \"# log: Configuring locales\" \\\n  && set -x \\\n  && apt-get update -y \\\n  && apt-get install --no-install-recommends -y locales \\\n  && echo \"${LC_ALL} UTF-8\" | tee /etc/locale.gen \\\n  && locale-gen ${LC_ALL} \\\n  && dpkg-reconfigure locales \\\n  && sync && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"# log: Setup system\" \\\n  && set -x \\\n  && apt-get update -y \\\n  && apt-get install --no-install-recommends -y \\\n     apt-transport-https \\\n     git \\\n     lsb-release \\\n     sudo \\\n     ttf-mscorefonts-installer \\\n  && apt-get clean \\\n  && sync && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/local/opt/depot_tools\nRUN echo \"# log: ${project}: Preparing sources\" \\\n  && set -x \\\n  && git clone --recursive --depth 1 \\\n     https://chromium.googlesource.com/chromium/tools/depot_tools . \\\n  && sync\n\nENV project castanets\nADD . /usr/local/opt/${project}/src/${project}/src\n\nWORKDIR /usr/local/opt/${project}/src/${project}/src\nRUN echo \"# log: ${project}: Preparing sources\" \\\n  && set -x \\\n  && export PATH=\"${PATH}:/usr/local/opt/depot_tools\" \\\n  && yes | build/install-build-deps.sh \\\n  && sync\n\nWORKDIR /usr/local/opt/${project}/src/${project}/src\nRUN echo \"# log: ${project}: Preparing sources\" \\\n  && set -x \\\n  && export PATH=\"${PATH}:/usr/local/opt/depot_tools\" \\\n  && build/create_gclient.sh \\\n  && sync\n\nWORKDIR /usr/local/opt/${project}/src/${project}/src\nRUN echo \"# log: ${project}: Preparing sources\" \\\n  && set -x \\\n  && export PATH=\"${PATH}:/usr/local/opt/depot_tools\" \\\n  && gclient sync --with_branch_head \\\n  && sync\n\nWORKDIR /usr/local/opt/${project}/src/${project}/src\nRUN echo \"# log: ${project}: Preparing sources\" \\\n  && set -x \\\n  && export PATH=\"${PATH}:/usr/local/opt/depot_tools\" \\\n  && gn gen out/Default \\\n  && echo 'enable_castanets=true' | tee out/Default/args.gn \\\n  && echo 'enable_nacl=false' | tee -a out/Default/args.gn \\\n  && gn args --list out/Default \\\n  && cat out/Default/args.gn \\\n  && ninja -C out/Default chrome \\\n  && ./out/Default/chrome -version \\\n  && sync\n"
}