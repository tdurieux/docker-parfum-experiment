{
  "startTime": 1674250908667,
  "endTime": 1674250908875,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 40,
        "columnEnd": 134
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 40,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 40,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 40,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile take two optional build arguments:\n# - MAPD_FILE is the name of the tarball for the mapd package.\n#   Defaults to \"mapd-os-3.0.1dev-20170508-21fc39f-Linux-x86_64\"\n# - PYGDF_COMMIT is the commit to use from the pygdf repo.\n#   Defaults to \"master\".\nFROM goai/base:latest\n\nENV PYGDF_CONDA_ENV=pygdf_examples\n\nUSER appuser\n# Add HAR data\nRUN mkdir data\nRUN wget -nv https://archive.ics.uci.edu/ml/machine-learning-databases/00344/Activity%20recognition%20exp.zip -O \"data/Activity recognition exp.zip\"\n\n# Add MapD\n# Manually downloaded mapd\nENV MAPD_FILE=\"mapd-os-3.2.3dev-20170909-e7053e6-Linux-x86_64-open\"\nADD https://mapd-core-os-builds.s3.amazonaws.com/${MAPD_FILE}.tar.gz ${MAPD_FILE}.tar.gz\nUSER root\nRUN chown appuser ${MAPD_FILE}.tar.gz\n\nUSER appuser\n# Extract MapD\nRUN tar -xvf ${MAPD_FILE}.tar.gz && rm ${MAPD_FILE}.tar.gz\nRUN ln -s $MAPD_FILE ./mapd\n\n# Prepend path to libcuda and libjvm for mapd\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64/server/:/usr/local/nvidia/lib64/\nRUN echo $LD_LIBRARY_PATH\n\n# Create environment\nRUN conda create -n $PYGDF_CONDA_ENV python=3.6\n\n# Add pygdf v0.1.0a2\nRUN conda install -n $PYGDF_CONDA_ENV -y --no-update-deps -c numba -c defaults -c conda-forge -c gpuopenanalytics/label/dev pygdf=0.1.0a2=py36h01fc00e_29 numba=0.35 cudatoolkit=8\n\n# Add pymapd\nRUN conda install -n $PYGDF_CONDA_ENV -y --no-update-deps  -c defaults -c pymapd/label/dev -c conda-forge -c gpuopenanalytics/label/dev pymapd\n# Add jupyterlab\nRUN conda install -n $PYGDF_CONDA_ENV -y --no-update-deps jupyter notebook\n\n# Add h2oaiglm dep\nRUN conda install -n $PYGDF_CONDA_ENV -y --no-update-deps pandas seaborn psutil scipy\nRUN source activate $PYGDF_CONDA_ENV && pip install --no-cache-dir https://s3.amazonaws.com/h2o-beta-release/goai/h2oaiglm-0.0.1-py2.py3-none-any.whl\nRUN source activate $PYGDF_CONDA_ENV && pip install --no-cache-dir py3nvml\n\n# Add h2o4gpu\nENV H2O4GPU_WHL=\"h2o4gpu-0.1.0-py36-none-any.whl\"\nADD https://s3.amazonaws.com/h2o-release/h2o4gpu/releases/bleeding-edge/ai/h2o/h2o4gpu/0.1-nccl-cuda8/${H2O4GPU_WHL} ${H2O4GPU_WHL}\nUSER root\nRUN chown appuser ${H2O4GPU_WHL}\n\n# Install h2o4gpu\nUSER appuser\nRUN source activate $PYGDF_CONDA_ENV && pip install --no-cache-dir ${H2O4GPU_WHL}\nRUN source activate $PYGDF_CONDA_ENV && pip install --no-cache-dir feather-format\n\n\n# Extra packages for the demo\nRUN conda install -n $PYGDF_CONDA_ENV -y holoviews bokeh\n\n# Add utils script\nCOPY ./packages/utils ./utils\nRUN ln -s ./utils/start_demo.sh ./start_demo.sh\n\nCOPY ./notebooks ./notebooks\nUSER root\nRUN chown -R appuser ./notebooks\nRUN apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;\n\n\nUSER appuser\nRUN bash ./utils/create_har.sh\n\nCMD bash ./utils/start_demo_notebook.sh\n"
}