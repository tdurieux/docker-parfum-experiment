{
  "startTime": 1674242333801,
  "endTime": 1674242333904,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "FROM\tubuntu:18.04\n\nENV GRAFANA_VERSION 5.2.2\nENV INFLUXDB_VERSION 1.6.0\n\n# Prevent some error messages\nENV DEBIAN_FRONTEND noninteractive\n\n#RUN\t\techo 'deb http://us.archive.ubuntu.com/ubuntu/ Utopic Unicorn' >> /etc/apt/sources.list\nRUN\t\tapt-get -y update && apt-get -y upgrade\n\n# ---------------- #\n#   Installation   #\n# ---------------- #\n\n# Install all prerequisites\nRUN apt-get -y --no-install-recommends install wget nginx-light supervisor curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Grafana to /src/grafana\nRUN\t\tmkdir -p src/grafana && cd src/grafana && \\\n\t\t\twget -nv https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz -O grafana.tar.gz && \\\n\t\t\ttar xzf grafana.tar.gz --strip-components=1 && rm grafana.tar.gz\n\n# Install InfluxDB\nRUN\t\twget -nv https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb && \\\n\t\t\tdpkg -i influxdb_${INFLUXDB_VERSION}_amd64.deb && rm influxdb_${INFLUXDB_VERSION}_amd64.deb\n\n# ----------------- #\n#   Configuration   #\n# ----------------- #\n\n# Configure InfluxDB\nADD\t\tinfluxdb/config.toml /etc/influxdb/config.toml\nADD\t\tinfluxdb/run.sh /usr/local/bin/run_influxdb\n# These two databases have to be created. These variables are used by set_influxdb.sh and set_grafana.sh\nENV\t\tPRE_CREATE_DB data grafana\nENV\t\tINFLUXDB_HOST localhost:8086\nENV             INFLUXDB_DATA_USER data\nENV             INFLUXDB_DATA_PW data\nENV\t\tINFLUXDB_GRAFANA_USER grafana\nENV\t\tINFLUXDB_GRAFANA_PW grafana\nENV\t\tROOT_PW root\n\n# Configure Grafana\nADD             ./grafana/config.ini /etc/grafana/config.ini\nADD\t\tgrafana/run.sh /usr/local/bin/run_grafana\nADD\t\t./configure.sh /configure.sh\nADD\t\t./set_grafana.sh /set_grafana.sh\nADD\t\t./set_influxdb.sh /set_influxdb.sh\nRUN \t\t/configure.sh\n\n# Configure nginx and supervisord\nADD\t\t./nginx/nginx.conf /etc/nginx/nginx.conf\nADD\t\t./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# ----------- #\n#   Cleanup   #\n# ----------- #\n\nRUN\t\tapt-get autoremove -y wget curl && \\\n\t\t\tapt-get -y clean && \\\n\t\t\trm -rf /var/lib/apt/lists/* && rm /*.sh\n\n# ---------------- #\n#   Expose Ports   #\n# ---------------- #\n\n# Grafana\nEXPOSE\t3000\n\n# InfluxDB Admin server\nEXPOSE\t8083\n\n# InfluxDB HTTP API\nEXPOSE\t8086\n\n# InfluxDB HTTPS API\nEXPOSE\t8084\n\n# -------- #\n#   Run!   #\n# -------- #\n\nCMD\t\t[\"/usr/bin/supervisord\"]\n"
}