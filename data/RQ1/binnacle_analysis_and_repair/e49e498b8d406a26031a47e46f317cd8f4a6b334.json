{
  "startTime": 1674236913824,
  "endTime": 1674236913920,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn7-devel\n\n# Base scripts\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y doxygen graphviz && rm -rf /var/lib/apt/lists/*; COPY install/ubuntu_install_core.sh /install/ubuntu_install_core.sh\nRUN bash /install/ubuntu_install_core.sh\n\nCOPY install/ubuntu_install_python.sh /install/ubuntu_install_python.sh\nRUN bash /install/ubuntu_install_python.sh\n\nCOPY install/ubuntu_install_llvm.sh /install/ubuntu_install_llvm.sh\nRUN bash /install/ubuntu_install_llvm.sh\n\nCOPY install/ubuntu_install_opencl.sh /install/ubuntu_install_opencl.sh\nRUN bash /install/ubuntu_install_opencl.sh\n\nCOPY install/ubuntu_install_iverilog.sh /install/ubuntu_install_iverilog.sh\nRUN bash /install/ubuntu_install_iverilog.sh\n\nCOPY install/ubuntu_install_python_package.sh /install/ubuntu_install_python_package.sh\nRUN bash /install/ubuntu_install_python_package.sh\n\nCOPY install/ubuntu_install_sphinx.sh /install/ubuntu_install_sphinx.sh\nRUN bash /install/ubuntu_install_sphinx.sh\n\n# Fix recommonmark to latest version\nRUN git clone https://github.com/rtfd/recommonmark\nRUN cd recommonmark; python setup.py install\n\nCOPY install/ubuntu_install_java.sh /install/ubuntu_install_java.sh\nRUN bash /install/ubuntu_install_java.sh\n\nCOPY install/ubuntu_install_nodejs.sh /install/ubuntu_install_nodejs.sh\nRUN bash /install/ubuntu_install_nodejs.sh\n\nCOPY install/ubuntu_install_rocm.sh /install/ubuntu_install_rocm.sh\nRUN bash /install/ubuntu_install_rocm.sh\n\nCOPY install/ubuntu_install_opengl.sh /install/ubuntu_install_opengl.sh\nRUN bash /install/ubuntu_install_opengl.sh\n\n# Enable doxygen for c++ doc build\n\n\n# Install vulkan\nCOPY install/ubuntu_install_vulkan.sh /install/ubuntu_install_vulkan.sh\nRUN bash /install/ubuntu_install_vulkan.sh\n\n\n# Environment variables\nENV PATH=/node_modules/.bin:${PATH}\nENV PATH=/usr/local/nvidia/bin:${PATH}\nENV PATH=/usr/clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-14.04/bin:${PATH}\nENV PATH=/usr/local/cuda/bin:${PATH}\nENV CPLUS_INCLUDE_PATH=/usr/local/cuda/include:${CPLUS_INCLUDE_PATH}\nENV C_INCLUDE_PATH=/usr/local/cuda/include:${C_INCLUDE_PATH}\nENV LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/nvidia/lib64:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\nENV LD_LIBRARY_PATH=/opt/rocm/lib:${LD_LIBRARY_PATH}\n\nENV PATH=/node_modules/.bin:${PATH}\n\nENV VULKAN_SDK=/usr/local/VulkanSDK/1.0.65.0/x86_64\nENV PATH=${PATH}:${VULKAN_SDK}/bin\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${VULKAN_SDK}/lib\nENV VK_LAYER_PATH=${VULKAN_SDK}/etc/explicit_layer.d\n"
}