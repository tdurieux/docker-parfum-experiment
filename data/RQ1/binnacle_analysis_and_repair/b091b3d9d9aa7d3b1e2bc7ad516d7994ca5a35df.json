{
  "startTime": 1674242861794,
  "endTime": 1674242862160,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 19,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 29,
        "columnStart": 26,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 29,
        "columnStart": 26,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nENV LANG en_US.UTF-8\n\n# required for postgres\nENV LC_ALL POSIX\n\n# add openlibrary users\nRUN groupadd --system openlibrary \\\n  && useradd --no-log-init --system --gid openlibrary openlibrary \\\n  && useradd --no-log-init --system --gid openlibrary solrupdater\n\nRUN apt-get -qq update && apt-get install --no-install-recommends -y \\\n    nginx \\\n    authbind \\\n    postgresql \\\n    build-essential \\\n    git-core \\\n    libpq-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libffi-dev \\\n    curl \\\n    screen \\\n    python-dev \\\n    python-pip \\\n    libgeoip-dev \\\n    python-lxml \\\n    python-psycopg2 \\\n    python-yaml && rm -rf /var/lib/apt/lists/*;\n\n# Install LTS version of node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# enable users to bind to port 80\nRUN touch /etc/authbind/byport/80 && chmod 777 /etc/authbind/byport/80\n\n# Setup nginx\nRUN ln -s /openlibrary/conf/nginx/sites-available/openlibrary.conf /etc/nginx/sites-available/ \\\n    && ln -s /etc/nginx/sites-available/openlibrary.conf /etc/nginx/sites-enabled/\n\nRUN mkdir -p /var/log/openlibrary /var/lib/openlibrary \\\n    && chown openlibrary:openlibrary /var/log/openlibrary /var/lib/openlibrary\n\nRUN mkdir /openlibrary && chown openlibrary:openlibrary /openlibrary\nWORKDIR /openlibrary\n\nCOPY requirements*.txt ./\nRUN pip install --no-cache-dir --disable-pip-version-check --default-timeout=100 -r requirements_common.txt\n\nCOPY package*.json ./\nRUN npm install && npm install -g less && npm cache clean --force;\n\nCOPY --chown=openlibrary:openlibrary . /openlibrary\n\nUSER openlibrary\nRUN ln -s vendor/infogami/infogami infogami\n# run make to initialize git submodules, build css and js files\nRUN make\n\n# Expose Open Library and Infobase\nEXPOSE 80 7000\nCMD authbind --deep scripts/openlibrary-server conf/openlibrary.yml \\\n    --gunicorn --workers 4 --timeout 180 --bind :80\n"
}