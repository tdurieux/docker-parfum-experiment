{
  "startTime": 1674239709446,
  "endTime": 1674239709637,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 9,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Image used for hosting scitran core with uwsgi.\n#\n# Example usage is in README.md\n#\n\nFROM ubuntu:14.04\n\n\n# Install pre-requisites\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tbuild-essential \\\n\t\tca-certificates curl \\\n\t\tlibatlas3-base \\\n\t\tnumactl \\\n\t\tpython-dev \\\n\t\tpython-pip \\\n\t\tlibffi-dev \\\n\t\tlibssl-dev \\\n\t\tlibpcre3 \\\n\t\tlibpcre3-dev \\\n\t\tgit \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& pip install --no-cache-dir -U pip\n\n\n# Grab gosu for easy step-down from root in a docker-friendly manner\n# https://github.com/tianon/gosu\n#\n# Alternate key servers are due to reliability issues with ha.pool.sks-keyservers.net\nRUN curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$(dpkg --print-architecture)\" \\\n\t&& curl -f -o /tmp/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& for server in $(shuf -e ha.pool.sks-keyservers.net \\\n\t                            hkp://p80.pool.sks-keyservers.net:80 \\\n\t                            keyserver.ubuntu.com \\\n\t                            hkp://keyserver.ubuntu.com:80 \\\n\t                            pgp.mit.edu); do \\\n\t\t\t\t\t\t\t\t\tgpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || :; \\\n\t\t\t\t\tdone \\\n\t&& gpg --batch --verify /tmp/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -r \"$GNUPGHOME\" /tmp/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu && rm -rf -d\n\n\n# Setup environment\nWORKDIR /var/scitran\n\nRUN mkdir -p \\\n      /var/scitran/config \\\n      /var/scitran/data \\\n      /var/scitran/code/api \\\n      /var/scitran/logs \\\n      /var/scitran/keys\n\n# Declaring a volume makes the intent to map externally explicit. This enables\n# the contents to survive/persist across container versions, and easy access\n# to the contents outside the container.\n#\n# Declaring the VOLUME in the Dockerfile guarantees the contents are empty\n# for any new container that doesn't specify a volume map via 'docker run -v '\n# or similar option.\n#\nVOLUME /var/scitran/keys\nVOLUME /var/scitran/data\nVOLUME /var/scitran/logs\n\n\n# Install pip modules\n#\n# Split this out for better cache re-use.\n#\nCOPY requirements.txt docker/requirements-docker.txt /var/scitran/code/api/\n\nRUN pip install --no-cache-dir --upgrade pip wheel setuptools \\\n  && pip install --no-cache-dir -r /var/scitran/code/api/requirements-docker.txt \\\n  && pip install --no-cache-dir -r /var/scitran/code/api/requirements.txt\n\nCOPY tests /var/scitran/code/api/tests/\nRUN bash -e -x /var/scitran/code/api/tests/bin/setup-integration-tests-ubuntu.sh\n\n\n# Copy full repo\n#\nCOPY . /var/scitran/code/api/\n\nCOPY docker/uwsgi-entrypoint.sh /var/scitran/\nCOPY docker/uwsgi-config.ini /var/scitran/config/\n\n\n\n# Inject build information into image so the source of the container can be\n# determined from within it.\nARG BRANCH_LABEL=NULL\nARG COMMIT_HASH=0\nCOPY docker/inject_build_info.sh /\nRUN /inject_build_info.sh ${BRANCH_LABEL} ${COMMIT_HASH} \\\n  && rm /inject_build_info.sh\n\n\nENTRYPOINT [\"/var/scitran/uwsgi-entrypoint.sh\"]\nCMD [\"uwsgi\", \"--ini\", \"/var/scitran/config/uwsgi-config.ini\", \"--http\", \"0.0.0.0:8080\", \"--http-keepalive\", \"--so-keepalive\", \"--add-header\", \"Connection: Keep-Alive\" ]\n"
}