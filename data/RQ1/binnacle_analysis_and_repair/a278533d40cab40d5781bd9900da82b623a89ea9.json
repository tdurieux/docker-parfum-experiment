{
  "startTime": 1674252349164,
  "endTime": 1674252349384,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\nMAINTAINER \"Paolo D'Onorio De Meo <p.donoriodemeo@gmail.it>\"\n\n# RUN apk add --no-cache python3 && \\\n#     python3 -m ensurepip && \\\n#     rm -r /usr/lib/python*/ensurepip && \\\n#     pip3 --no-cache-dir install --upgrade pip setuptools && \\\n#     rm -r /root/.cache\n# # RUN apk update && apk upgrade \\\n# #     && apk add \\\n# #     py-setuptools\n\nRUN apk update && apk upgrade\n\nRUN apk --update --no-cache \\\n    --repository http://dl-4.alpinelinux.org/alpine/edge/community add \\\n    bash git curl ca-certificates \\\n    bzip2 unzip sudo \\\n    # libstdc++ glib libxext libxrender \\\n    tini\n\nRUN curl -f -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o /tmp/glibc.apk \\\n    && curl -f -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o /tmp/glibc-bin.apk \\\n    && curl -f -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r3/glibc-i18n-2.23-r3.apk\" -o /tmp/glibc-i18n.apk \\\n    && apk add --allow-untrusted /tmp/glibc*.apk \\\n    && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n    && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n    && rm -rf /tmp/glibc*apk /var/cache/apk/*\n\nRUN apk add rethinkdb \\\n    --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing\n\n# Configure environment\nENV CONDA_DIR=/opt/conda CONDA_VER=4.1.11\nENV PATH=$CONDA_DIR/bin:$PATH SHELL=/bin/bash LANG=C.UTF-8\nENV CONDA_REPO=\"https://repo.continuum.io/miniconda\"\n\n# Install conda\nRUN mkdir -p $CONDA_DIR && \\\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh && \\\n    curl -f $CONDA_REPO/Miniconda3-${CONDA_VER}-Linux-x86_64.sh -o mconda.sh && \\\n    /bin/bash mconda.sh -f -b -p $CONDA_DIR && \\\n    rm mconda.sh && \\\n    $CONDA_DIR/bin/conda install --yes conda==${CONDA_VER}\n\n# Install all OS dependencies for fully functional notebook server\n\n# Configure environment\nENV CONDA_DIR=/opt/conda \\\n  PATH=$CONDA_DIR/bin:$PATH \\\n  SHELL=/bin/bash \\\n  NB_USER=jovyan \\\n  NB_UID=1000\n\n# Install Jupyter notebook\n\n# Create jovyan user with UID=1000 and in the 'users' group\n# Grant ownership over the conda dir and home dir, but stick the group as root.\nRUN adduser -s /bin/bash -u $NB_UID -D $NB_USER && \\\n    mkdir /home/$NB_USER/work \\\n    && mkdir /home/$NB_USER/.jupyter \\\n    && mkdir /home/$NB_USER/.local \\\n    && mkdir -p $CONDA_DIR \\\n    && chown -R $NB_USER:users $CONDA_DIR \\\n    && chown -R $NB_USER:users /home/$NB_USER\n\nUSER $NB_USER\n\nRUN conda install --yes \\\n    'notebook=4.2*' terminado pip ipywidgets jupyter \\\n    'pandas=0.18*' \\\n    # 'numexpr=2.5*' \\\n    'matplotlib=1.5*' \\\n    'scipy=0.17*' \\\n    'seaborn=0.7*' \\\n    # 'scikit-learn=0.17*' \\\n    # 'scikit-image=0.11*' \\\n    # 'sympy=1.0*' \\\n    'cython=0.23*' \\\n    # 'patsy=0.4*' \\\n    # 'statsmodels=0.6*' \\\n    # 'cloudpickle=0.1*' \\\n    # 'dill=0.2*' \\\n    'numba=0.23*' \\\n    'bokeh=0.11*' \\\n    # 'sqlalchemy=1.0*' \\\n    # 'h5py=2.5*' && \\\n    && conda remove --quiet --yes --force qt pyqt \\\n    && conda clean -tipsy\n\n# # Activate ipywidgets extension in the environment that runs the notebook server\n# RUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\n\nRUN pip --no-cache-dir install --upgrade \\\n    pip rethinkdb\n\n# Configure container startup\nEXPOSE 8888\nWORKDIR /home/$NB_USER/work\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\nUSER root\n\n# Add local files as late as possible to avoid cache busting\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n\nUSER $NB_USER\n"
}