{
  "startTime": 1674248499203,
  "endTime": 1674248499449,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 60,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 60,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\n\n# Install necessary tools for bcrypt to run in docker before npm install\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential && apt-get install --no-install-recommends -y python && rm -rf /var/lib/apt/lists/*;\n\n# Install app dependencies\nRUN npm install && npm cache clean --force;\n\nFROM node:10-alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\nCOPY --from=0 /usr/src/app .\n\nCOPY . .\n\nEXPOSE 3000\nCMD [ \"npm\", \"run\", \"start:prod\" ]"
}