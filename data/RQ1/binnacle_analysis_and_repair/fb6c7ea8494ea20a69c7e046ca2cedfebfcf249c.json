{
  "startTime": 1674245978315,
  "endTime": 1674245978591,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu14.04\nRUN apt-get update\n\n\n# disable interactive functions\nENV DEBIAN_FRONTEND noninteractive\n\n\n#################Install MiniConda and other dependencies##########\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV OPENBLAS_NUM_THREADS $(nproc)\n\nRUN mkdir -p $CONDA_DIR && \\\r\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh && \\\r\n\r\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n\n    wget \\\n    vim \\\n    git \\\n    g++ \\\n    graphviz \\\n\n    software-properties-common \\\n    python-software-properties \\\n    python3-dev \\\n\n    libhdf5-dev \\\n    libopenblas-dev \\\n    liblapack-dev \\\n    libblas-dev \\\n    gfortran && \\\n\n    rm -rf /var/lib/apt/lists/* && \\\n\n\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    /bin/bash /Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-latest-Linux-x86_64.sh\n\n\n#########################MPI###########################\nRUN cd /tmp && \\\r\n        wget \"https://www.open-mpi.org/software/ompi/v2.1/downloads/openmpi-2.1.1.tar.gz\" && \\\r\n        tar xzf openmpi-2.1.1.tar.gz && \\\r\n        cd openmpi-2.1.1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cuda && make -j\"$(nproc)\" install && rm openmpi-2.1.1.tar.gz\n\n\n\n#######################NCCL###########################\nENV CPATH /usr/local/cuda/include:/usr/local/include:$CPATH\nRUN cd /usr/local && git clone https://github.com/NVIDIA/nccl.git && cd nccl && \\\r\n\r\n######### Compile for devices with cuda compute compatibility 3 (e.g. GRID K520 on aws)\r\n# UNCOMMENT line below to compile for GPUs with cuda compute compatibility 3.0\r\n#        sed -i '/NVCC_GENCODE ?=/a \\                -gencode=arch=compute_30,code=sm_30 \\\\' Makefile && \\\r\n##########\r\n\r\n        make CUDA_HOME=/usr/local/cuda -j\"$(nproc)\" && \\\r\n        make install && ldconfig\n\n\n####################Python 3#########################\nARG python_version=3.5.2\nRUN conda install -y python=${python_version} && \\\n    pip install --no-cache-dir -U pip && \\\n\n    conda install Pillow scikit-learn notebook pandas matplotlib mkl nose pyyaml six h5py && \\\n\n\n    pip install --no-cache-dir mpi4py && \\\n    pip install --no-cache-dir cython && \\\n\n    pip install --no-cache-dir chainer && \\\n    pip install --no-cache-dir chainercv && \\\n    pip install --no-cache-dir chainermn && \\\n\n    conda clean -yt\n\nENV PYTHONPATH $CONDA_DIR/lib/python3.5/site-packages/:$PYTHONPATH\n\n######################################################\n\nENV PYTHONPATH /src/:$PYTHONPATH"
}