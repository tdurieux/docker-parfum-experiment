{
  "startTime": 1674241097108,
  "endTime": 1674241097154,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM b.gcr.io/tensorflow-testing/tensorflow-full\n\nMAINTAINER Craig Citro <craigcitro@google.com>\n\n# Set up CUDA variables and symlinks\nCOPY cuda /usr/local/cuda\nENV CUDA_PATH /usr/local/cuda\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64\n\nRUN echo \"CUDA_PATH=/usr/local/cuda\" >>~/.bash_profile\nRUN echo \"LD_LIBRARY_PATH=/usr/local/cuda/lib64\" >>~/.bash_profile\n\n# Set up to build TensorFlow with GPU support.\nWORKDIR /tensorflow\n\n# Configure the build for our CUDA configuration.\nENV CUDA_TOOLKIT_PATH /usr/local/cuda\nENV CUDNN_INSTALL_PATH /usr/local/cuda\nENV TF_NEED_CUDA 1\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\n# Now we build\nRUN bazel clean && \\\n    bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package\n\nRUN rm -rf /tmp/pip && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip && \\\n    pip install --no-cache-dir --upgrade /tmp/pip/tensorflow-*.whl\n\nRUN rm -rf /usr/local/cuda\n\nRUN [\"/bin/bash\"]\n"
}