{
  "startTime": 1674239082021,
  "endTime": 1674239082203,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### App code\nFROM openjdk:8-jdk AS app\n\nENV SBT_VERSION 1.1.6\nRUN curl -f -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \\\n    && dpkg -i sbt-$SBT_VERSION.deb \\\n    && rm sbt-$SBT_VERSION.deb \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends sbt \\\n    && sbt sbtVersion && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /src\n\nENV CEREBRO_VERSION 0.7.3\nRUN && git clone -b v${CEREBRO_VERSION} https://github.com/lmenezes/cerebro.git . \\\n    && sbt universal:packageZipTarball \\\n    && mv /src/target/universal/cerebro-${CEREBRO_VERSION}.tgz /src/target/universal/cerebro.tgz\n\n\n### Dist\nFROM openjdk:8-jre AS dist\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r cerebro && useradd -r -g cerebro cerebro\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.7\nRUN curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n    && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc \\\n    && rm /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true\n\nCOPY --from=app /src/target/universal/cerebro.tgz /tmp\n\nRUN mkdir /tmp/cerebro \\\n    && cd /tmp/cerebro \\\n    && tar zxvf /tmp/cerebro.tgz --strip 1 \\\n    && mkdir /tmp/cerebro/logs \\\n    && mv /tmp/cerebro /opt/cerebro \\\n    && rm /tmp/cerebro.tgz\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nWORKDIR /opt/cerebro\n\nEXPOSE 9000\n\nVOLUME [\"/opt/cerebro/conf\", \"/opt/cerebro/logs\"]\n\nCMD [\"bin/cerebro\"]\n\n\n### Dev\nFROM app AS dev\n\nEXPOSE 9000\n\nCMD [\"sbt\", \"run\"]\n\n"
}