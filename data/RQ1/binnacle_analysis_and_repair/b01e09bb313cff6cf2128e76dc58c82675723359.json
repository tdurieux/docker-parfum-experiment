{
  "startTime": 1674236144441,
  "endTime": 1674236144578,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 173
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos6\n\nMAINTAINER Lars Solberg <lars.solberg@gmail.com>\nENV REFRESHED_AT 2014-08-21\nENV NGINX_VERSION 1.6.1\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm && rm -rf /var/cache/yum\n\n# Without centosplus, you will get multilib problems when installing openssl-devel\nRUN yum install -y --enablerepo=centosplus tar git make gcc pcre-devel openssl-devel python-setuptools python-devel wget inotify-tools && rm -rf /var/cache/yum\n\n# Install nginx and modules (if any)\n# To install modules, dowonload them (example via git clone), and add \"--add-module=./module-path/\" to ./configure\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \\\n    tar -zxvf nginx-${NGINX_VERSION}.tar.gz && \\\n    cd nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-http_ssl_module --with-http_sub_module --with-http_spdy_module --user=www-data --group=www-data --prefix=/usr/local/nginx/ --sbin-path=/usr/local/sbin && \\\n    make && make install && touch /usr/local/nginx/conf/generated.conf && rm nginx-${NGINX_VERSION}.tar.gz\nADD nginx.conf /usr/local/nginx/conf/nginx.conf\nRUN adduser --system www-data\n\nADD start /start\nRUN chmod 755 /start\nENTRYPOINT [\"/bin/bash\", \"-e\", \"/start\"]\nCMD [\"start\"]\n\nEXPOSE 80\nEXPOSE 443\n"
}