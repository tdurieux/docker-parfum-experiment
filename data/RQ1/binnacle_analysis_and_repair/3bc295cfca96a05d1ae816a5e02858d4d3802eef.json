{
  "startTime": 1674241327096,
  "endTime": 1674241327572,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 38,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 25,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 38,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 19,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 252
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER \"The CentOS Project\" <admin@jiobxn.com>\nARG LATEST=\"0\"\n\nENV container docker\n\nRUN \\cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN rpm -ivh \"http://repo.mysql.com/$( curl -f -s https://repo.mysql.com/ | grep \"$(awk '{print $4}' /etc/redhat-release |awk -F. '{print \"el\"$1}')\" | awk -F\\\"  'END{print $6}')\"\nRUN yum clean all; yum -y install epel-release; rm -rf /var/cache/yum yum -y update\nRUN yum -y install systemd bash-completion vim wget initscripts iptables-services bind-utils iftop iproute net-tools cronie at mtr nmap tcpdump openssl perl perl-Data-Dumper automake libtool git mysql-community-devel mysql-community-client httpd-tools; rm -rf /var/cache/yum yum clean all; \\\n    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*; \\\n    rm -f /etc/systemd/system/*.wants/*; \\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*; \\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\nRUN git clone https://github.com/akopytov/sysbench.git \\\n    && cd sysbench \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j8 \\\n    && make install \\\n    && cd .. \\\n    && rm -rf sysbench\n\nRUN git clone https://github.com/wg/wrk.git \\\n    && cd wrk \\\n    && make -j8 \\\n    && cp wrk /usr/local/bin/ \\\n    && cd .. \\\n    && rm -rf wrk\n\nRUN system_v=$(awk '{print $4}' /etc/redhat-release |awk -F. '{print $1}') \\\n    && xtrabackup_url=\"https://www.percona.com/downloads/XtraBackup/\" \\\n    && xtrabackup_v=$( curl -f -s https://www.percona.com/downloads/XtraBackup/LATEST/ | grep selected | awk -F\\\" 'NR==1{print $2}' | awk -F- '{print $3}') \\\n    && xtrabackup_down=$( curl -f -s $xtrabackup_url/Percona-XtraBackup-$xtrabackup_v/binary/redhat/$system_v/ | sed 's/href=/\\n/g' | grep rpm | awk -F\\\" 'NR==1{print $2}') \\\n    && yum install https://www.percona.com/$xtrabackup_down perl-Digest-MD5 -y && rm -rf /var/cache/yum\n\nVOLUME [\"/sys/fs/cgroup\"]\n\nCOPY init.sh /init.sh\nRUN chmod +x /init.sh\n\nENTRYPOINT [\"/init.sh\"]\n\nCMD [\"/usr/sbin/init\"]\n\n# docker build -t systemd .\n# docker run -d --restart always --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --name systemd systemd\n# docker run -d --restart always --privileged -v /docker/mysql-mini:/var/lib/mysql -v /docker/mysql-mini2:/xtrabackup -e MYSQL_ROOT_PASSWORD=newpass --name systemd systemd xtrabackup\n"
}