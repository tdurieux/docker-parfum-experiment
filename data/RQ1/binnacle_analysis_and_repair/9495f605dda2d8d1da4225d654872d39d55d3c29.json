{
  "startTime": 1674238724887,
  "endTime": 1674238725258,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 94,
        "lineEnd": 102,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 102,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nWORKDIR /fmxnet\n\nCOPY lightened_moon /fmxnet/lightened_moon/\nCOPY mxnet /fmxnet/mxnet/\n\nWORKDIR \"mxnet\"\nRUN pwd\nRUN ls -al\nWORKDIR /fmxnet\n\nADD ./align_dlib.py /fmxnet\nADD ./facenet.py /fmxnet\nADD ./lightened_moon.py /fmxnet\nADD ./requirements.txt /fmxnet\nADD ./shape_predictor_68_face_landmarks.dat /fmxnet\nADD ./testcv2.py /fmxnet\n\nWORKDIR \"mxnet\"\nRUN ls\nWORKDIR /fmxnet\nWORKDIR \"lightened_moon\"\nRUN ls\nWORKDIR /fmxnet\n\n#necessary for dependencies\nEXPOSE 80\n\n#Install OpenCV\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\n\\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise multiverse\\n\\\ndeb http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\n\\\ndeb-src http://us.archive.ubuntu.com/ubuntu/ precise-updates multiverse\\n\"\\\n>> /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\ncurl \\\ncmake \\\nwget \\\nunzip \\\nlibopencv-dev \\\nbuild-essential \\\ngit \\\nlibgtk2.0-dev \\\npkg-config \\\npython-dev \\\npython-numpy \\\nlibdc1394-22 \\\nlibdc1394-22-dev \\\nlibjpeg-dev \\\nlibpng12-dev \\\nlibtiff4-dev \\\nlibjasper-dev \\\nlibavcodec-dev \\\nlibavformat-dev \\\nlibswscale-dev \\\nlibxine-dev \\\nlibgstreamer0.10-dev \\\nlibgstreamer-plugins-base0.10-dev \\\nlibv4l-dev \\\nlibtbb-dev \\\nlibqt4-dev \\\nlibfaac-dev \\\nlibmp3lame-dev \\\nlibopencore-amrnb-dev \\\nlibopencore-amrwb-dev \\\nlibtheora-dev \\\nlibvorbis-dev \\\nlibxvidcore-dev \\\nx264 \\\nv4l-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir opencv\nWORKDIR opencv\n\nRUN wget https://github.com/Itseez/opencv/archive/2.4.8.zip -O opencv-2.4.8.zip\nRUN unzip opencv-2.4.8.zip\nRUN mkdir opencv-2.4.8/build\nWORKDIR opencv-2.4.8/build\n\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_OPENGL=ON ..\n\nRUN make -j $(nproc) && make install\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf\nRUN ldconfig\n\n#Test OpenCV installation\nWORKDIR /fmxnet\nRUN pwd\nRUN ls\nRUN python ./testcv2.py\n\n#install OpenCV and dependencies for mxnet\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-setuptools \\\n    python-pip \\\n    make \\\n    cmake \\\n    libopenblas-dev \\\n    liblapack-dev \\\n    libgtk-3-dev \\\n    libboost-all-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade -r requirements.txt\n\n#build mxnet from source\nWORKDIR \"mxnet\"\nRUN make -j $(nproc) USE_OPENCV=1 USE_BLAS=openblas\n\nWORKDIR \"python\"\n\nENV PYTHONPATH \"\"\n\nRUN python setup.py build\nRUN python setup.py install\n\nWORKDIR /fmxnet\n#should be at directory containing mxnet and everything else\nRUN pwd\nRUN ls\n\n#add detect.py\nADD ./detect.py /fmxnet\n\n#does this work as intended?\n#should be at toplevel directory\nRUN export PYTHONPATH=$PYTHONPATH:$(pwd)\n\n#run the detection script\n# need to run with a mounted volume that adds /data/fmxnet_clips to the /fmxnet directory\nCMD [\"python\", \"./detect.py\"]\n"
}