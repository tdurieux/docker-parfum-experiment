{
  "startTime": 1674248449051,
  "endTime": 1674248449721,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\n\nRUN set -eux \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends --no-install-suggests -y \\\n\t\tpython-apt \\\n\t\tpython-dev \\\n\t\tpython-jmespath \\\n\t\tpython-pip \\\n\t\tpython-setuptools \\\n\t\tsudo \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& apt-get purge -y --autoremove\n\nRUN set -eux \\\n\t&& pip install --no-cache-dir wheel \\\n\t&& pip install --no-cache-dir ansible\n\n# Add user with password-less sudo\nRUN set -eux \\\n\t&& useradd -m -s /bin/bash cytopia \\\n\t&& echo \"cytopia ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/cytopia\n\n# Copy files\nCOPY ./ /home/cytopia/ansible\nRUN set -eux \\\n\t&& chown -R cytopia:cytopia /home/cytopia/ansible\n\n# Switch to user\nUSER cytopia\n\n# Change working directory\nWORKDIR /home/cytopia/ansible\n\n# Systemd cannot be checked inside Docker, so replace it with a dummy role\nRUN set -eux \\\n\t&& mkdir roles/dummy \\\n\t&& sed -i'' 's/systemd-meta/dummy/g' playbook.yml\n\n# Randomize roles to install each time the container is build (each travis run)\nRUN set -eux \\\n\t&& ROLES_INSTALL=\"$( for d in $(/bin/ls roles/); do if [ -d roles/${d} ]; then echo $d; fi done | grep -vE '*-meta$' | sort -R )\" \\\n\t&& ROLES_REMOVE=\"$(  for d in $(/bin/ls roles/); do if [ -d roles/${d} ]; then echo $d; fi done | grep -vE '*-meta$' | sort -R )\" \\\n\t\\\n\t&& ( \\\n\t\techo \"#!/bin/sh -eux\"; \\\n\t\techo; \\\n\t\techo \"# Ansible verbosity\"; \\\n\t\techo \"if ! set | grep '^verbose=' >/dev/null 2>&1; then\"; \\\n\t\techo \"    verbose=\\\"\\\"\"; \\\n\t\techo \"else\"; \\\n\t\techo \"\tif [ \\\"\\${verbose}\\\" = \\\"1\\\" ]; then\"; \\\n\t\techo \"\t\tverbose=\\\"-v\\\"\"; \\\n\t\techo \"\telif [ \\\"\\${verbose}\\\" = \\\"2\\\" ]; then\"; \\\n\t\techo \"\t\tverbose=\\\"-vv\\\"\"; \\\n\t\techo \"\telif [ \\\"\\${verbose}\\\" = \\\"3\\\" ]; then\"; \\\n\t\techo \"\t\tverbose=\\\"-vvv\\\"\"; \\\n\t\techo \"\telse\"; \\\n\t\techo \"\t\tverbose=\\\"\\\"\"; \\\n\t\techo \"\tfi\"; \\\n\t\techo \"fi\"; \\\n\t\techo; \\\n\t\techo \"# Ansible tagged role (only run a specific tag)\"; \\\n\t\techo \"if ! set | grep '^tag=' >/dev/null 2>&1; then\"; \\\n\t\techo \"\ttag=\\\"\\\"\"; \\\n\t\techo \"fi\"; \\\n\t\techo; \\\n\t\techo \"# Ansible random order (run roles in random order)\"; \\\n\t\techo \"if ! set | grep '^random=' >/dev/null 2>&1; then\"; \\\n\t\techo \"\trandom=\\\"0\\\"\"; \\\n\t\techo \"fi\"; \\\n\t\techo; \\\n\t\techo; \\\n\t\t# ---------- [1] Only run a specific tag ----------\n\t\techo \"if [ \\\"\\${tag}\\\" != \\\"\\\" ]; then\"; \\\n\t\t\techo \"\trole=\\\"\\$( echo \\\"\\${tag}\\\" | sed 's/-/_/g' )\\\"\"; \\\n\t\t\techo \"\t# [install] (only tag)\"; \\\n\t\t\techo \"\tansible-playbook -i inventory playbook.yml --limit \\${MY_HOST} \\${verbose} --diff -t bootstrap-system-apt-repo\"; \\\n\t\t\techo \"\tansible-playbook -i inventory playbook.yml --limit \\${MY_HOST} \\${verbose} --diff -t \\${tag}\"; \\\n\t\techo; \\\n\t\techo \"else\"; \\\n\t\techo; \\\n\t\t\t# ---------- [2] Install in random order ----------\n\t\t\techo \"\t# Random\"; \\\n\t\t\techo \"\tif [ \\\"\\${random}\\\" = \\\"1\\\" ]; then\"; \\\n\t\t\techo \"\t\t# [INSTALL] Bootstrap roles\"; \\\n\t\t\techo \"\t\tif ! ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\techo \"\t\t\t ansible-playbook -i inventory playbook.yml -t bootstrap-system --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\techo \"\t\tfi\"; \\\n\t\t\techo \"\t\tif ! ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\techo \"\t\t\t ansible-playbook -i inventory playbook.yml -t bootstrap-python --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\techo \"\t\tfi\"; \\\n\t\t\techo; \\\n\t\t\techo \"\t\t# [INSTALL] Pre-defined roles (randomized)\"; \\\n\t\t\tfor r in ${ROLES_INSTALL}; do \\\n\t\t\t\techo \"\t\tif ! ansible-playbook -i inventory playbook.yml -t ${r} --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\t\techo \"\t\t\t ansible-playbook -i inventory playbook.yml -t ${r} --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\t\techo \"\t\tfi\"; \\\n\t\t\tdone; \\\n\t\t\techo; \\\n\t\t\techo \"\t\t# [INSTALL] Custom apt packages\"; \\\n\t\t\techo \"\t\tif ! ansible-playbook -i inventory playbook.yml -t apt --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\techo \"\t\t\t ansible-playbook -i inventory playbook.yml -t apt --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\techo \"\t\tfi\"; \\\n\t\t\techo; \\\n\t\t\techo \"\t\t# [INSTALL] Default applications\"; \\\n\t\t\techo \"\t\tif ! ansible-playbook -i inventory playbook.yml -t xdg --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\techo \"\t\t\t ansible-playbook -i inventory playbook.yml -t xdg --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\techo \"\t\tfi\"; \\\n\t\t\techo; \\\n\t\t\t# ---------- [3] Install in normal playbook order ----------\n\t\t\techo \"\t# In order\"; \\\n\t\t\techo \"\telse\"; \\\n\t\t\techo; \\\n\t\t\techo \"\t\t# [INSTALL] Normal playbook\"; \\\n\t\t\techo \"\t\tif ! ansible-playbook -i inventory playbook.yml --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\techo \"\t\t\t ansible-playbook -i inventory playbook.yml --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\techo \"\t\tfi\"; \\\n\t\t\techo \"\tfi\"; \\\n\t\t\techo; \\\n\t\t\techo \"\tapt list --installed > install1.txt\"; \\\n\t\t\techo; \\\n\t\t\t\\\n\t\t\t# ---------- Installation (full 2nd round) ----------\n\t\t\techo \"\t# Full install 2nd round\"; \\\n\t\t\techo \"\tif ! ansible-playbook -i inventory playbook.yml --limit \\${MY_HOST} \\${verbose} --diff; then\"; \\\n\t\t\techo \"\t\t ansible-playbook -i inventory playbook.yml --limit \\${MY_HOST} \\${verbose} --diff\"; \\\n\t\t\techo \"\tfi\"; \\\n\t\t\techo; \\\n\t\t\techo \"\tapt list --installed > install2.txt\"; \\\n\t\t\techo; \\\n\t\t\t# ---------- Validate diff ----------\n\t\t\techo \"\t# Validate\"; \\\n\t\t\techo \"\tdiff install1.txt install2.txt\"; \\\n\t\t\techo; \\\n\t\t\t# ---------- Uninstallation (twice) ----------\n\t\t\techo \"\t# [REMOVE] Pre-defined roles (randomized)\"; \\\n\t\t\tfor r in ${ROLES_REMOVE}; do \\\n\t\t\t\tdel=\"$(echo $r | sed 's/-/_/g')=remove\"; \\\n\t\t\t\techo \"\tif ! ansible-playbook -i inventory playbook.yml -t ${r} --limit \\${MY_HOST} \\${verbose} -e ${del} --diff; then\"; \\\n\t\t\t\techo \"\t\t ansible-playbook -i inventory playbook.yml -t ${r} --limit \\${MY_HOST} \\${verbose} -e ${del} --diff\"; \\\n\t\t\t\techo \"\tfi\"; \\\n\t\t\t\techo \"\tif ! ansible-playbook -i inventory playbook.yml -t ${r} --limit \\${MY_HOST} \\${verbose} -e ${del} --diff; then\"; \\\n\t\t\t\techo \"\t\t ansible-playbook -i inventory playbook.yml -t ${r} --limit \\${MY_HOST} \\${verbose} -e ${del} --diff\"; \\\n\t\t\t\techo \"\tfi\"; \\\n\t\t\tdone; \\\n\t\t\techo; \\\n\t\t\techo \"\t# [REMOVE] Custom apt packages\"; \\\n\t\t\techo \"\tif ! ansible-playbook -i inventory playbook.yml -t apt --limit \\${MY_HOST} \\${verbose} -e apt_state=absent --diff; then\"; \\\n\t\t\techo \"\t\t ansible-playbook -i inventory playbook.yml -t apt --limit \\${MY_HOST} \\${verbose} -e apt_state=absent --diff\"; \\\n\t\t\techo \"\tfi\"; \\\n\t\techo \"fi\"; \\\n\t\t\\\n\t) > run-tests.sh \\\n\t&& chmod +x run-tests.sh\n\nENTRYPOINT [\"./run-tests.sh\"]\n"
}