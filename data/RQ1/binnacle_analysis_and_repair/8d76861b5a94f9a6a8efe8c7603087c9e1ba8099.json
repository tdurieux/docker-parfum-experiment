{
  "startTime": 1674236506893,
  "endTime": 1674236507662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 101,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 189,
        "lineEnd": 191,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 218,
        "lineEnd": 220,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 226,
        "lineEnd": 226,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 221,
        "lineEnd": 221,
        "columnStart": 7,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Dockerfile for installing the necessary dependencies for building Hadoop.\n# See BUILDING.txt.\n\nFROM ubuntu:xenial\n\nWORKDIR /root\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n#####\n# Disable suggests/recommends\n#####\nRUN echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\nRUN echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n\nENV DEBIAN_FRONTEND noninteractive\nENV DEBCONF_TERSE true\n\n######\n# Install common dependencies from packages. Versions here are either\n# sufficient or irrelevant.\n#\n# WARNING: DO NOT PUT JAVA APPS HERE! Otherwise they will install default\n# Ubuntu Java.  See Java section below!\n######\n# hadolint ignore=DL3008\nRUN apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends \\\n        apt-utils \\\n        build-essential \\\n        bzip2 \\\n        clang \\\n        curl \\\n        doxygen \\\n        fuse \\\n        g++ \\\n        gcc \\\n        git \\\n        gnupg-agent \\\n        libbz2-dev \\\n        libcurl4-openssl-dev \\\n        libfuse-dev \\\n        libprotobuf-dev \\\n        libprotoc-dev \\\n        libsasl2-dev \\\n        libsnappy-dev \\\n        libssl-dev \\\n        libtool \\\n        locales \\\n        make \\\n        pinentry-curses \\\n        pkg-config \\\n        python \\\n        python2.7 \\\n        python-pip \\\n        python-pkg-resources \\\n        python-setuptools \\\n        python-wheel \\\n        rsync \\\n        software-properties-common \\\n        snappy \\\n        sudo \\\n        valgrind \\\n        zlib1g-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n#######\n# OpenJDK 8\n#######\n# hadolint ignore=DL3008\nRUN apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends openjdk-8-jdk libbcprov-java \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n######\n# Install cmake 3.1.0 (3.5.1 ships with Xenial)\n######\nRUN mkdir -p /opt/cmake \\\n    && curl -f -L -s -S \\\n      https://cmake.org/files/v3.1/cmake-3.1.0-Linux-x86_64.tar.gz \\\n      -o /opt/cmake.tar.gz \\\n    && tar xzf /opt/cmake.tar.gz --strip-components 1 -C /opt/cmake && rm /opt/cmake.tar.gz\nENV CMAKE_HOME /opt/cmake\nENV PATH \"${PATH}:/opt/cmake/bin\"\n\n######\n# Install Google Protobuf 2.5.0 (2.6.0 ships with Xenial)\n######\n# hadolint ignore=DL3003\nRUN mkdir -p /opt/protobuf-src \\\n    && curl -f -L -s -S \\\n      https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz \\\n      -o /opt/protobuf.tar.gz \\\n    && tar xzf /opt/protobuf.tar.gz --strip-components 1 -C /opt/protobuf-src \\\n    && cd /opt/protobuf-src \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/protobuf \\\n    && make install \\\n    && cd /root \\\n    && rm -rf /opt/protobuf-src && rm /opt/protobuf.tar.gz\nENV PROTOBUF_HOME /opt/protobuf\nENV PATH \"${PATH}:/opt/protobuf/bin\"\n\n######\n# Install Apache Maven 3.3.9 (3.3.9 ships with Xenial)\n######\n# hadolint ignore=DL3008\nRUN apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends maven \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nENV MAVEN_HOME /usr\n\n######\n# Install findbugs 3.0.1 (3.0.1 ships with Xenial)\n# Ant is needed for findbugs\n######\n# hadolint ignore=DL3008\nRUN apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends findbugs ant \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nENV FINDBUGS_HOME /usr\n\n####\n# Install shellcheck (0.4.6, the latest as of 2017-09-26)\n####\n# hadolint ignore=DL3008\nRUN add-apt-repository -y ppa:jonathonf/ghc-8.0.2 \\\n    && apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends shellcheck \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n####\n# Install bats (0.4.0, the latest as of 2017-09-26, ships with Xenial)\n####\n# hadolint ignore=DL3008\nRUN apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends bats \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n####\n# Install pylint at fixed version (2.0.0 removed python2 support)\n# https://github.com/PyCQA/pylint/issues/2294\n####\nRUN pip2 install --no-cache-dir pylint==1.9.2\n\n####\n# Install dateutil.parser\n####\nRUN pip2 install --no-cache-dir python-dateutil==2.7.3\n\n###\n# Install node.js for web UI framework (4.2.6 ships with Xenial)\n###\n# hadolint ignore=DL3008, DL3016\nRUN apt-get -q update \\\n    && apt-get install -y --no-install-recommends nodejs npm \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && ln -s /usr/bin/nodejs /usr/bin/node \\\n    && npm install npm@latest -g \\\n    && npm install -g jshint && npm cache clean --force;\n\n###\n# Install hadolint\n####\nRUN curl -f -L -s -S \\\n        https://github.com/hadolint/hadolint/releases/download/v1.11.1/hadolint-Linux-x86_64 \\\n        -o /bin/hadolint \\\n   && chmod a+rx /bin/hadolint \\\n   && shasum -a 512 /bin/hadolint | \\\n        awk '$1!=\"734e37c1f6619cbbd86b9b249e69c9af8ee1ea87a2b1ff71dccda412e9dac35e63425225a95d71572091a3f0a11e9a04c2fc25d9e91b840530c26af32b9891ca\" {exit(1)}'\n\n###\n# Avoid out of memory errors in builds\n###\nENV MAVEN_OPTS -Xms256m -Xmx1536m\n\n\n###\n# Everything past this point is either not needed for testing or breaks Yetus.\n# So tell Yetus not to read the rest of the file:\n# YETUS CUT HERE\n###\n\n####\n# Install svn & Forrest (for Apache Hadoop website)\n###\n# hadolint ignore=DL3008\nRUN apt-get -q update \\\n    && apt-get -q install -y --no-install-recommends subversion \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /opt/apache-forrest \\\n    && curl -f -L -s -S \\\n      https://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz \\\n      -o /opt/forrest.tar.gz \\\n    && tar xzf /opt/forrest.tar.gz --strip-components 1 -C /opt/apache-forrest && rm /opt/forrest.tar.gz\nRUN echo 'forrest.home=/opt/apache-forrest' > build.properties\nENV FORREST_HOME=/opt/apache-forrest\n\n# Hugo static website generator (for new tez site and Ozone docs)\nRUN curl -f -L -o hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.30.2/hugo_0.30.2_Linux-64bit.deb \\\n    && dpkg --install hugo.deb \\\n    && rm hugo.deb\n\n# Add a welcome message and environment checks.\nCOPY tez_env_checks.sh /root/tez_env_checks.sh\nRUN chmod 755 /root/tez_env_checks.sh\n# hadolint ignore=SC2016\nRUN echo '${HOME}/tez_env_checks.sh' >> /root/.bashrc\n"
}