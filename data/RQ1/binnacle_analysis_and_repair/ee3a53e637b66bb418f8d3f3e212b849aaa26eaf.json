{
  "startTime": 1674236421136,
  "endTime": 1674236421158,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:latest\n\n# App install directory\nWORKDIR /usr/local/yugastore\n\n#\n# Install app dependencies.\n#\n\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\n# If you are building your code for production, add '--only=production'.\nRUN npm install --only=production && npm cache clean --force;\n\n# Bundle app source.\nCOPY app.js ./\nADD bin ./bin\nADD config ./config\nADD models ./models\nADD public ./public\nADD routes ./routes\nADD test ./test\nADD ui ./ui\n\n# Set the config file.\nCOPY config/config.docker.json ./config.json\n\n# Expose necessary ports.\nEXPOSE 3001\n\n# Start npm.\nCMD [ \"./bin/start.sh\" ]\n\n#\n# To build:\n#   cd ui && npm run build # if ui has changed\n#   docker build -t yugastore .\n#\n# To run:\n#   docker run -p 3001:3001 -d --network yb-net --name yugastore yugastore\n#\n# Stop:\n#   docker stop yugastore\n#   docker rm yugastore\n#\n"
}