{
  "startTime": 1674238490943,
  "endTime": 1674238491429,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nENV BRO_VERSION 2.5.1\n\nCOPY patches /tmp\nRUN apk add --no-cache zlib openssl libstdc++ libpcap geoip libgcc tini curl inotify-tools jq bind-tools\nRUN apk add --no-cache -t .build-deps \\\n    linux-headers \\\n    openssl-dev \\\n    libpcap-dev \\\n    python-dev \\\n    geoip-dev \\\n    zlib-dev \\\n    binutils \\\n    curl-dev \\\n    fts-dev \\\n    cmake \\\n    clang \\\n    bison \\\n    perl \\\n    make \\\n    flex \\\n    git \\\n    g++ \\\n    fts \\\n    && cd /tmp \\\n    && git clone --recursive --branch v$BRO_VERSION git://git.bro.org/bro \\\n    && echo \"===> Applying patches...\" \\\n    && cd /tmp/bro \\\n    && patch -p1 < /tmp/bro-musl.patch \\\n    && cp /tmp/FindFTS.cmake cmake \\\n    && cd /tmp/bro/aux/binpac \\\n    && patch -p1 < /tmp/binpac-musl.patch \\\n    && echo \"===> Compiling bro...\" \\\n    && cd /tmp/bro \\\n    && CC=clang ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-broker \\\n    --disable-broctl --disable-broccoli \\\n    --disable-auxtools --prefix=/usr/local \\\n    && make \\\n    && make install \\\n    && echo \"===> Compiling af_packet plugin...\" \\\n    && cd /tmp/bro/aux/plugins \\\n    && git clone https://github.com/J-Gras/bro-af_packet-plugin \\\n    && cd /tmp/bro/aux/plugins/bro-af_packet-plugin \\\n    && make distclean \\\n    && CC=clang ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-kernel=/usr \\\n    && make \\\n    && make install \\\n    && echo \"===> Compiling elasticsearch plugin...\" \\\n    && git clone -b release https://github.com/bro/bro-plugins.git /tmp/plugins \\\n    && mv /tmp/plugins/elasticsearch /tmp/bro/aux/plugins/elasticsearch \\\n    && echo \"* Tweaks to improve elasticsearch plugin's performance in docker\" \\\n    && cd /tmp/bro/aux/plugins/elasticsearch/scripts && patch -p1 < /tmp/esplung-init.patch \\\n    && cd /tmp/bro/aux/plugins/elasticsearch/src && patch -p1 < /tmp/ElasticSearch.patch \\\n    && cd /tmp/bro/aux/plugins/elasticsearch/scripts/Bro/ElasticSearch && patch -p1 < /tmp/logs-to-elasticsearch.patch \\\n    && echo \"* Tweaks protocols to improve indexing logs into elasticsearch\" \\\n    && PROTOS=/usr/local/share/bro/base/protocols \\\n    && sed -i \"s/version:     count           \\&log/socks_version:     count           \\&log/g\" $PROTOS/socks/main.bro \\\n    && sed -i \"s/\\$version=/\\$socks_version=/g\" $PROTOS/socks/main.bro \\\n    && sed -i \"s/version:          string \\&log/ssl_version:     string \\&log/g\" $PROTOS/ssl/main.bro \\\n    && sed -i \"s/\\$version=/\\$ssl_version=/g\" $PROTOS/ssl/main.bro \\\n    && sed -i \"s/version:         count        \\&log/ssh_version:         count        \\&log/g\" $PROTOS/ssh/main.bro \\\n    && sed -i \"s/\\$version =/\\$ssh_version =/g\" $PROTOS/ssh/main.bro \\\n    && sed -i \"s/version: string \\&log/snmp_version: string \\&log/g\" $PROTOS/snmp/main.bro \\\n    && sed -i \"s/\\$version=/\\$snmp_version=/g\" $PROTOS/snmp/main.bro \\\n    && echo \"* Build elasticsearch plugin\" \\\n    && cd /tmp/bro/aux/plugins/elasticsearch \\\n    && CC=clang ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && echo \"* Stop local logging to prevent filling up the container with logs\" \\\n    && sed -i \"s/WRITER_ASCII/WRITER_NONE/g\" /usr/local/share/bro/base/frameworks/logging/main.bro \\\n    && echo \"===> Shrinking image...\" \\\n    && strip -s /usr/local/bin/bro \\\n    && rm -rf /tmp/* \\\n    && apk del --purge .build-deps\n\nRUN echo \"===> Check if elasticsearch plugin installed...\" && /usr/local/bin/bro -N Bro::ElasticSearch\n\n# Install the GeoIPLite Database\nRUN mkdir -p /usr/share/GeoIP/ \\\n    && GEOIP=geolite.maxmind.com/download/geoip/database \\\n    && curl -f -s https://${GEOIP}/GeoLiteCity.dat.gz | zcat > /usr/share/GeoIP/GeoIPCity.dat \\\n    && curl -f -s https://${GEOIP}/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz | zcat > /usr/share/GeoIP/GeoIPCityv6.dat\n\nENV BROPATH .:/data/config:/usr/local/share/bro:/usr/local/share/bro/policy:/usr/local/share/bro/site\n\nWORKDIR /pcap\n\n# Add some scripts\nADD https://github.com/blacktop/docker-bro/raw/master/scripts/log-passwords.bro \\\n    /usr/local/share/bro/passwords/log-passwords.bro\nADD https://github.com/blacktop/docker-bro/raw/master/scripts/conn-add-geodata.bro \\\n    /usr/local/share/bro/geodata/conn-add-geodata.bro\nADD https://github.com/moshekaplan/bro_zipfilenames/raw/master/zipfilenames.bro \\\n    /usr/local/share/bro/zip/zipfilenames.bro\n\nCOPY local.bro /usr/local/share/bro/site/local.bro\nCOPY template.json /template.json\nCOPY index-pattern.json /index-pattern.json\nCOPY entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/sbin/tini\",\"/entrypoint.sh\"]\nCMD [\"-h\"]\n"
}