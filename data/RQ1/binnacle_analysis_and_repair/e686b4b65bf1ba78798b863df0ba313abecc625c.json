{
  "startTime": 1674243974160,
  "endTime": 1674243974581,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/armv7hf-node:0.10.38\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    bison \\\n    flex \\\n    freebsd-glue \\\n    libconfig++-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install epiphany SDK\nENV EPIPHANY_HOME /opt/adapteva/esdk\nENV ESDK_VERSION 2015.1_linux_armv7l-20150523\n\nRUN mkdir -p $EPIPHANY_HOME \\\n    && curl -f -sL https://ftp.parallella.org/esdk/beta/esdk.$ESDK_VERSION.tar.gz | tar xz -C $EPIPHANY_HOME --strip-components=1\n\n# Build libelf\nENV LIBELF_VERSION 0.8.13\n\nRUN mkdir -p /usr/src/libelf \\\n    && curl -f -sL https://www.mr511.de/software/libelf-$LIBELF_VERSION.tar.gz | tar xz -C /usr/src/libelf --strip-components=1 \\\n    && cd /usr/src/libelf \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j $(nproc) \\\n    && make install \\\n    && rm -rf /usr/src/libelf\n\n# Build libcoprthr\nENV LIBCOPRTHR_VERSION parallellocalypse\n\nRUN . /opt/adapteva/esdk/setup.sh \\\n    && mkdir -p /usr/src/libcoprthr \\\n    && curl -f -sL https://github.com/olajep/coprthr/archive/$LIBCOPRTHR_VERSION.tar.gz | tar xz -C /usr/src/libcoprthr --strip-components=1 \\\n    && cd /usr/src/libcoprthr \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-epiphany \\\n    && make \\\n    && make install \\\n    && rm -rf /usr/src/libcoprthr\n\n# Install libcoprthr_mpi\nENV LIBCOPTHR_MPI_VERSION preview\n\nRUN . /opt/adapteva/esdk/setup.sh \\\n    && mkdir -p /usr/src/libcoprthr-mpi \\\n    && curl -f -sL https://www.browndeertechnology.com/code/bdt-libcoprthr_mpi-$LIBCOPTHR_MPI_VERSION.tgz | tar xz -C /usr/src/libcoprthr-mpi --strip-components=1 \\\n    && cd /usr/src/libcoprthr-mpi \\\n    && ./install.sh \\\n    && rm -rf /usr/src/libcoprthr_mpi\n\n# Clone the FFT correlation repo\nENV PARALLELLA_FFT_XCORR_VERSION c57112f8dd1a9b0b82d4c584d45d2ba2ba919bab\n\nRUN mkdir -p /usr/src/app/parallella-fft-xcorr \\\n    && curl -f -sL https://github.com/olajep/parallella-fft-xcorr/archive/$PARALLELLA_FFT_XCORR_VERSION.tar.gz | tar xz -C /usr/src/app/parallella-fft-xcorr --strip-components=1 && rm -rf /usr/src/app/parallella-fft-xcorr\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\n\nCOPY . /usr/src/app\n\n#RUN cd /usr/src/app && npm install\n\n# Run this on startup.\nCMD [ \"/usr/src/app/run.sh\" ]\n"
}