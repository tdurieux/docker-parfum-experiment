{
  "startTime": 1674641724518,
  "endTime": 1674641724699,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-alpine\nFROM microsoft/dotnet:2.2-sdk as build\n\n#RUN apk add --no-cache --update bash git vim zeromq protobuf protobuf-dev ca-certificates && \\\n#    rm -f /var/cache/apk/*\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales && \\\n    locale-gen C C.UTF-8 && \\\n    DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y git vim libzmq3-dev libczmq4 libprotobuf-c-dev libprotobuf-dev libprotobuf10 ca-certificates && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;\n\nENV LC_ALL=C.UTF-8\n\nWORKDIR /build/\nCOPY paket.dependencies paket.lock ./\n\nRUN dotnet tool install --tool-path $PWD/.paket Paket\nRUN .paket/paket restore\n\nCOPY . .\nRUN dotnet restore src/Logary.sln\nRUN ./fake.sh build\nRUN dotnet publish -c Release -r linux-x64 src/services/Logary.Services.Rutta\nRUN find 'src/targets' -type f \\\n    \\( -name 'Logary.Targets.*.dll' \\\n       -or -name 'Logary.Targets.*.pdb' \\\n       -or -name 'Logary.Targets.*.xml' \\) \\\n    -not -path '*/obj/*' \\\n    -exec cp {} src/services/Logary.Services.Rutta/bin/Release/netcoreapp2.2/linux-x64/publish/ \\;\n\n#-alpine\nFROM microsoft/dotnet:2.2-runtime\n\n#RUN apk add --no-cache --update zeromq protobuf protobuf-dev ca-certificates && \\\n#    rm -f /var/cache/apk/*\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales && \\\n    locale-gen C C.UTF-8 && \\\n    DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libzmq3-dev libczmq4 libprotobuf-c-dev libprotobuf10 ca-certificates && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /logary/\nCOPY --from=build /build/src/services/Logary.Services.Rutta/bin/Release/netcoreapp2.2/linux-x64/publish/* /logary/\n\nENTRYPOINT [\"dotnet\", \"/logary/rutta.dll\"]\nCMD []\n"
}