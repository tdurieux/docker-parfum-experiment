{
  "startTime": 1674245709409,
  "endTime": 1674245709548,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for ghost-arm\n#\n\nFROM easypi/alpine-arm\nMAINTAINER EasyPi Software Foundation\n\nENV GHOST_VERSION 2.15.0\nENV GHOST_INSTALL /var/lib/ghost\nENV GHOST_CONTENT /var/lib/ghost/content\nENV GHOST_CLI_VERSION 1.9.9\nENV NPM_CONFIG_LOGLEVEL warn\nENV NODE_ENV production\n\nRUN set -xe \\\n    && addgroup -g 1000 node \\\n    && adduser -u 1000 -G node -s /bin/sh -D node \\\n    && apk add --no-cache bash build-base nodejs nodejs-npm python su-exec \\\n    && npm install -g --unsafe-perm ghost-cli@$GHOST_CLI_VERSION knex-migrator@latest \\\n    && mkdir -p $GHOST_INSTALL \\\n    && chown node:node $GHOST_INSTALL \\\n    && su-exec node ghost install $GHOST_VERSION --db sqlite3 --no-prompt --no-stack --no-setup --dir $GHOST_INSTALL \\\n    && cd $GHOST_INSTALL \\\n    && su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath $GHOST_CONTENT/data/ghost.db \\\n    && su-exec node ghost config paths.contentPath $GHOST_CONTENT \\\n    && mv $GHOST_CONTENT $GHOST_INSTALL/content.orig \\\n    && mkdir -p $GHOST_CONTENT \\\n    && chown node:node $GHOST_CONTENT \\\n    && apk del build-base python && npm cache clean --force;\n\nWORKDIR $GHOST_INSTALL\nVOLUME $GHOST_CONTENT\n\nCOPY docker-entrypoint.sh /usr/local/bin\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 2368\nCMD [\"node\", \"current/index.js\"]\n"
}