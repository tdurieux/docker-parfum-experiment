{
  "startTime": 1674252348734,
  "endTime": 1674252348845,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#---------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See License.txt in the project root for license information.\n#---------------------------------------------------------------------------------------------\n\nARG PYTHON_VERSION=\"3.6.4\"\n\nFROM python:${PYTHON_VERSION}-alpine3.7\n\nARG CLI_VERSION\n\n# Metadata as defined at http://label-schema.org\nARG BUILD_DATE\n\nLABEL maintainer=\"Microsoft\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"Microsoft\" \\\n      org.label-schema.name=\"Azure CLI\" \\\n      org.label-schema.version=$CLI_VERSION \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.description=\"The Azure CLI is used for all Resource Manager deployments in Azure.\" \\\n      org.label-schema.url=\"https://docs.microsoft.com/en-us/cli/azure/overview\" \\\n      org.label-schema.usage=\"https://docs.microsoft.com/en-us/cli/azure/install-az-cli2#docker\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vcs-url=\"https://github.com/Azure/azure-cli.git\" \\\n      org.label-schema.docker.cmd=\"docker run -v \\${HOME}/.azure:/root/.azure -it microsoft/azure-cli:$CLI_VERSION\"\n\n# bash gcc make openssl-dev libffi-dev musl-dev - dependencies required for CLI\n# openssh - included for ssh-keygen\n# ca-certificates\n\n# curl - required for installing jp\n# jq - we include jq as a useful tool\n# pip wheel - required for CLI packaging\n# jmespath-terminal - we include jpterm as a useful tool\n# libintl and icu-libs - required by azure devops artifact (az extension add --name azure-devops)\nRUN apk add --no-cache bash openssh ca-certificates jq curl openssl git zip \\\n && apk add --no-cache --virtual .build-deps gcc make openssl-dev libffi-dev musl-dev linux-headers \\\n && apk add --no-cache libintl icu-libs \\\n && update-ca-certificates\n\nARG JP_VERSION=\"0.1.3\"\n\nRUN curl -f -L https://github.com/jmespath/jp/releases/download/${JP_VERSION}/jp-linux-amd64 -o /usr/local/bin/jp \\\n && chmod +x /usr/local/bin/jp \\\n && pip install --no-cache-dir --upgrade jmespath-terminal\n\nWORKDIR azure-cli\nCOPY . /azure-cli\n\n# 1. Build packages and store in tmp dir\n# 2. Install the cli and the other command modules that weren't included\n# 3. Temporary fix - install azure-nspkg to remove import of pkg_resources in azure/__init__.py (to improve performance)\nRUN /bin/bash -c 'TMP_PKG_DIR=$(mktemp -d); \\\n    for d in src/azure-cli src/azure-cli-telemetry src/azure-cli-core src/azure-cli-nspkg src/azure-cli-command_modules-nspkg src/command_modules/azure-cli-*/; \\\n    do cd $d; echo $d; python setup.py bdist_wheel -d $TMP_PKG_DIR; cd -; \\\n    done; \\\n    [ -d privates ] && cp privates/*.whl $TMP_PKG_DIR; \\\n    all_modules=`find $TMP_PKG_DIR -name \"*.whl\"`; \\\n    pip install --no-cache-dir $all_modules; \\\n    pip install --no-cache-dir --force-reinstall --upgrade azure-nspkg azure-mgmt-nspkg; \\\n    pip install --no-cache-dir --force-reinstall urllib3==1.24.2;' \\\n && cat /azure-cli/az.completion > ~/.bashrc \\\n && runDeps=\"$( \\\n    scanelf --needed --nobanner --recursive /usr/local \\\n        | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n        | sort -u \\\n        | xargs -r apk info --installed \\\n        | sort -u \\\n    )\" \\\n && apk add --no-cache --virtual .rundeps $runDeps\n\nWORKDIR /\n\n# Remove CLI source code from the final image and normalize line endings.\nRUN rm -rf ./azure-cli && \\\n    dos2unix /root/.bashrc /usr/local/bin/az\n\nCMD bash\n"
}