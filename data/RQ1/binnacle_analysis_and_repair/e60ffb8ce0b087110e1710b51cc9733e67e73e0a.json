{
  "startTime": 1674252547168,
  "endTime": 1674252547499,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:stretch\n\nENV OTP_VERSION=\"23.0-rc0@f633fe9\"\n\n# We'll install the build dependencies for erlang-odbc along with the erlang\n# build process:\nRUN set -xe \\\n\t&& OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/${OTP_VERSION#*@}.tar.gz\" \\\n\t&& OTP_DOWNLOAD_SHA256=\"30333c806db7805fc2ff2b1f23b905859095d793be769180f8c3f68d20b99b3b\" \\\n\t&& curl -fSL -o otp-src.tar.gz \"$OTP_DOWNLOAD_URL\" \\\n\t&& echo \"$OTP_DOWNLOAD_SHA256  otp-src.tar.gz\" | sha256sum -c - \\\n\t&& runtimeDeps='libodbc1 \\\n\t\t\tlibsctp1 \\\n\t\t\tlibwxgtk3.0' \\\n\t&& buildDeps='unixodbc-dev \\\n\t\t\tlibsctp-dev \\\n\t\t\tlibwxgtk3.0-dev' \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends $runtimeDeps \\\n\t&& apt-get install -y --no-install-recommends $buildDeps \\\n\t&& export ERL_TOP=\"/usr/src/otp_src_${OTP_VERSION%@*}\" \\\n\t&& mkdir -vp $ERL_TOP \\\n\t&& tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1 \\\n\t&& rm otp-src.tar.gz \\\n\t&& ( cd $ERL_TOP \\\n\t  && ./otp_build autoconf \\\n\t  && sed -i -e '/utils\\/gen_git_version/c\\\\\\\n\t@echo GIT_VSN=-DERLANG_GIT_VERSION=\"\\\\\"\\\\\\\\\\\\\"\"'${OTP_VERSION#*@}'\\\\\\\\\"\\\\\"\\\\\"\" > $@' ./erts/emulator/Makefile.in \\\n\t  && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t  && ./configure --build=\"$gnuArch\" \\\n\t  && make -j$(nproc) \\\n\t  && make install ) \\\n\t&& find /usr/local -name examples | xargs rm -rf \\\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\t&& rm -rf $ERL_TOP /var/lib/apt/lists/*\n\nCMD [\"erl\"]\n\n# extra useful tools here: rebar & rebar3\n\nENV REBAR_VERSION=\"2.6.4\"\n\nRUN set -xe \\\n\t&& REBAR_DOWNLOAD_URL=\"https://github.com/rebar/rebar/archive/${REBAR_VERSION}.tar.gz\" \\\n\t&& REBAR_DOWNLOAD_SHA256=\"577246bafa2eb2b2c3f1d0c157408650446884555bf87901508ce71d5cc0bd07\" \\\n\t&& curl -fSL -o rebar-src.tar.gz \"$REBAR_DOWNLOAD_URL\" \\\n\t&& echo \"$REBAR_DOWNLOAD_SHA256  rebar-src.tar.gz\" | sha256sum -c - \\\n\t&& mkdir -p /usr/src/rebar-src \\\n\t&& tar -xzf rebar-src.tar.gz -C /usr/src/rebar-src --strip-components=1 \\\n\t&& rm rebar-src.tar.gz \\\n\t&& cd /usr/src/rebar-src \\\n\t&& ./bootstrap \\\n\t&& install -v ./rebar /usr/local/bin/ \\\n\t&& rm -rf /usr/src/rebar-src\n\nENV REBAR3_VERSION=\"3.10.0\"\n\nRUN set -xe \\\n\t&& REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VERSION}.tar.gz\" \\\n\t&& REBAR3_DOWNLOAD_SHA256=\"656b4a0bd75f340173e67a33c92e4d422b5ccf054f93ba35a9d780b545ee827e\" \\\n\t&& curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\" \\\n\t&& echo \"$REBAR3_DOWNLOAD_SHA256  rebar3-src.tar.gz\" | sha256sum -c - \\\n\t&& mkdir -p /usr/src/rebar3-src \\\n\t&& tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \\\n\t&& rm rebar3-src.tar.gz \\\n\t&& cd /usr/src/rebar3-src \\\n\t&& HOME=$PWD ./bootstrap \\\n\t&& install -v ./rebar3 /usr/local/bin/ \\\n\t&& rm -rf /usr/src/rebar3-src\n"
}