{
  "startTime": 1674252132219,
  "endTime": 1674252132703,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7.6.1810\n\nMAINTAINER FIWARE Orion Context Broker Team. Telef√≥nica I+D\n\nENV ORION_USER orion\nENV GIT_REV_ORION master\nENV CLEAN_DEV_TOOLS 1\n\nWORKDIR /opt\n\nRUN \\\n    adduser --comment \"${ORION_USER}\" ${ORION_USER} && \\\n    # Install dependencies\n    yum -y install epel-release && \\\n    yum -y install \\\n      boost-devel \\\n      bzip2 \\\n      cmake \\\n      gnutls-devel \\\n      libgcrypt-devel \\\n      libcurl-devel \\\n      openssl-devel \\\n      libuuid-devel \\\n      make \\\n      nc \\\n      git \\\n      gcc-c++ \\\n      scons \\\n      tar \\\n      which \\\n      cyrus-sasl-devel && \\\n    # Install libmicrohttpd from source\n    curl -f -kOL https://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.48.tar.gz && \\\n    tar xvf libmicrohttpd-0.9.48.tar.gz && \\\n    cd libmicrohttpd-0.9.48 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-messages --disable-postprocessor --disable-dauth && \\\n    make && \\\n    make install && \\\n    ldconfig && \\\n    # Install mongodb driver from source\n    curl -f -kOL https://github.com/mongodb/mongo-cxx-driver/archive/legacy-1.1.2.tar.gz && \\\n    tar xfz legacy-1.1.2.tar.gz && \\\n    cd mongo-cxx-driver-legacy-1.1.2 && \\\n    scons --use-sasl-client --ssl && \\\n    scons install --prefix=/usr/local --use-sasl-client --ssl && \\\n    # Install rapidjson from source\n    curl -f -kOL https://github.com/miloyip/rapidjson/archive/v1.0.2.tar.gz && \\\n    tar xfz v1.0.2.tar.gz && \\\n    mv rapidjson-1.0.2/include/rapidjson/ /usr/local/include && \\\n    # Install orion from source\n    git clone https://github.com/telefonicaid/fiware-orion && \\\n    cd fiware-orion && \\\n    git checkout ${GIT_REV_ORION} && \\\n    make && \\\n    make install && \\\n    # reduce size of installed binaries\n    strip /usr/bin/contextBroker && \\\n    # create needed log and run paths\n    mkdir -p /var/log/contextBroker && \\\n    mkdir -p /var/run/contextBroker && \\\n    chown ${ORION_USER} /var/log/contextBroker && \\\n    chown ${ORION_USER} /var/run/contextBroker && \\\n    cd /opt && \\\n    if [ ${CLEAN_DEV_TOOLS} -eq 0 ] ; then yum clean all && exit 0 ; fi && \\\n    # cleanup sources, dev tools, locales and yum cache to reduce the final image size\n    rm -rf /opt/libmicrohttpd-0.9.48.tar.gz \\\n           /usr/local/include/microhttpd.h \\\n           /usr/local/lib/libmicrohttpd.* \\\n           /opt/libmicrohttpd-0.9.48 \\\n           /opt/legacy-1.1.2.tar.gz \\\n           /opt/mongo-cxx-driver-legacy-1.1.2 \\\n           /usr/local/include/mongo \\\n           /usr/local/lib/libmongoclient.a \\\n           /opt/rapidjson-1.0.2 \\\n           /opt/v1.0.2.tar.gz \\\n           /usr/local/include/rapidjson \\\n           /opt/fiware-orion \\\n           # We don't need to manage Linux account passwords requisites: lenght, mays/mins, etc.\n           # This cannot be removed using yum as yum uses hard dependencies and doing so will \n           # uninstall essential packages\n           /usr/share/cracklib \\\n           # We don't need glibc locale data. This cannot be removed using yum as yum uses hard \n           # dependencies and doing so will uninstall essential packages\n           /usr/share/i18n /usr/{lib,lib64}/gconv \\\n           && \\\n    yum -y erase git perl* rsync \\\n        cmake libarchive \\\n        gcc-c++ cloog-ppl cpp gcc glibc-devel glibc-headers \\\n        kernel-headers libgomp libstdc++-devel mpfr ppl \\\n        scons boost-devel libcurl-devel gnutls-devel libgcrypt-devel \\\n        clang llvm llvm-libs \\\n        CUnit-devel CUnit \\\n        autoconf automake m4 libidn-devel \\\n        boost-wave boost-serialization boost-python \\\n        boost-iostreams boost boost-date-time \\\n        boost-test boost-graph boost-signals \\\n        boost-program-options boost-math \\\n        openssh openssh-clients libedit hwdata dbus-glib fipscheck* *devel sysvinit-tools \\\n        && \\\n    # Erase without dependencies of the document formatting system (man). This cannot be removed using yum \n    # as yum uses hard dependencies and doing so will uninstall essential packages\n    rpm -qa groff | xargs -r rpm -e --nodeps && \\\n    # Clean yum data\n    yum clean all && rm -rf /var/lib/yum/yumdb && rm -rf /var/lib/yum/history && \\\n    # Rebuild rpm data files\n    rpm -vv --rebuilddb && \\\n    # Delete unused locales. Only preserve en_US and the locale aliases\n    find /usr/share/locale -mindepth 1 -maxdepth 1 ! -name 'en_US' ! -name 'locale.alias' | xargs -r rm -r && \\\n    bash -c 'localedef --list-archive | grep -v -e \"en_US\" | xargs localedef --delete-from-archive' && \\\n    # We use cp instead of mv as to refresh locale changes for ssh connections. We use /bin/cp instead of \n    # cp to avoid any alias substitution, which in some cases has been problematic\n    /bin/cp -f /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl && \\\n    build-locale-archive && \\\n    # Don't need old log files inside docker images\n    rm -f /var/log/*log && rm -rf /var/cache/yum\n\nWORKDIR /\nENTRYPOINT [\"/usr/bin/contextBroker\",\"-fg\", \"-multiservice\", \"-ngsiv1Autocast\" ]\nEXPOSE 1026\n\n"
}