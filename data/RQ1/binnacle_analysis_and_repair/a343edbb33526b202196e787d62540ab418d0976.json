{
  "startTime": 1674248992012,
  "endTime": 1674248992112,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 347,
        "columnEnd": 387
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 343
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 343
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for creating a docker image that runs the VGG Image Search Engine\n# (VISE).\n#\n# Author: Abhishek Dutta <adutta@robots.ox.ac.uk>\n# Date: 04 July 2017\n#\n\n#\n# Install Debian as base image (tightly controlled and minimal, 150 MB)\n# See: https://hub.docker.com/_/debian/\n#\nFROM debian:jessie\n\n#\n# Define image labels\n#\nLABEL name=\"VGG Image Search Engine\" codename=\"VISE\" version=\"1.0.4\" maintainer=\"Abhishek Dutta <adutta@robots.ox.ac.uk>\" description=\"VGG Image Search Engine (VISE) enables image instance based search of a large collection of images.\"\n\n#\n# Define ports used by VISE\n#   VISE trainer/loader : 9971\n#   VISE loaded engine frontend : 9973\n#\nEXPOSE 9971 9973\n\nVOLUME /opt/ox/vgg/vise/application_data/ /opt/ox/vgg/mydata/images/\n\n#\n# Define environment variables\n#\nENV VGG_ROOT_DIR=\"/opt/ox/vgg/\" VISE_ROOT_DIR=\"/opt/ox/vgg/vise/\" VISE_CODE_DIR=\"/opt/ox/vgg/vise/vise-1.0.x/\" VISE_DEP_DIR=\"/opt/ox/vgg/vise/build_deps/\" VISE_DEP_LIBDIR=\"/opt/ox/vgg/vise/build_deps/lib/\" VISE_DEP_SRCDIR=\"/opt/ox/vgg/vise/build_deps/tmp_libsrc/\"\n\n#\n# Prepare environment variables\n#\nRUN mkdir -p $VGG_ROOT_DIR $VISE_ROOT_DIR $VISE_DEP_DIR $VISE_DEP_SRCDIR $VISE_DEP_LIBDIR\n\n#\n# Install VISE dependencies\n#\nRUN apt-get update && apt-get install --no-install-recommends -y curl libpng12-dev libjpeg-dev cmake ssh openmpi-bin libopenmpi-dev python python-dev python-pip unzip libmagick++-dev libprotobuf-dev protobuf-compiler libboost-atomic-dev libboost-chrono-dev libboost-filesystem-dev libboost-system-dev libboost-thread-dev libboost-timer-dev libcairo2 libcairo2-dev git && pip install --no-cache-dir cherrypy numpy pillow cython && rm -rf /var/lib/apt/lists/*;\n\n#\n# Compile dependencies (fastann, pypar, etc) and then compile VISE\n#\nRUN /bin/bash -c 'export FASTANN_LIBDIR=$VISE_DEP_LIBDIR\"fastann/\" ; \\\n cd $VISE_DEP_SRCDIR ; \\\n curl -o fastann.zip https://codeload.github.com/philbinj/fastann/zip/master ; \\\n unzip fastann.zip ; \\\n mv fastann-master fastann ; \\\n cd fastann ; \\\n mkdir build ; \\\n cd build ; \\\n export PREFIX=$FASTANN_LIBDIR ; \\\n cmake ../ ; make -j8 ; make install; \\\n#\n# Download VISE source\n#\n cd $VISE_ROOT_DIR ; \\\n# curl -o vise-1.0.1.tar.gz https://gitlab.com/vgg/vise/raw/release/vise-1.0.1.tar.gz ; \\\n# tar -zxf vise-1.0.1.tar.gz ; cd vise-1.0.x ; mkdir build ; \\\n#\n# uncomment the lines below if you wish to try out the latest master branch (may not be stable)\ngit clone -b master --single-branch https://gitlab.com/vgg/vise.git ; \\\nmv vise/ vise-1.0.x ; cd vise-1.0.x ; mkdir build ; \\\n#\n#\n# Compile pypar and dkmeans (needed for clustering)\n#\n cd $VISE_CODE_DIR\"src/external/dkmeans_relja/pypar_2.1.4_94/source\" ; \\\n python setup.py build ; python setup.py install ; \\\n cd $VISE_CODE_DIR\"src/external/dkmeans_relja/\" ; \\\n python setup.py build ; python setup.py install ; \\\n#\n# Compile jpdraw (needed to draw regions and lines in search results)\n#\n cd $VISE_CODE_DIR\"src/external/jp_draw\" ; \\\n python setup.py build ; python setup.py install ; \\\n#\n# Compile VISE\n#\n cd $VISE_CODE_DIR\"build/\" ; \\\n cmake -DCMAKE_PREFIX_PATH=$FASTANN_LIBDIR ../src ; \\\n make -j8'\n\nENTRYPOINT $VISE_CODE_DIR\"build/vise\" $VISE_CODE_DIR /opt/ox/vgg/vise/application_data/ /opt/ox/vgg/mydata/images/\n"
}