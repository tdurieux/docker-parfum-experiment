{
  "startTime": 1674243271061,
  "endTime": 1674243271287,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 97,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.11.2\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\n\n#RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && apt install ./google-chrome-stable_current_amd64.deb\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    jq \\\n    bc \\\n    time \\\n    gcc \\\n    python-dev \\\n    libffi-dev \\\n    libssl-dev \\\n    sshpass \\\n    ant \\\n\tant-optional \\\n    openjdk-7-jdk \\\n    rpcbind \\\n    nfs-common \\\n    unzip \\\n    zip \\\n    bzip2 \\\n\tparted \\\n    # Add docker in docker support\n    btrfs-tools \\\n    e2fsprogs \\\n    iptables \\\n    xfsprogs \\\n    dnsutils \\\n    netcat \\\n    # Add headless chrome support\n    google-chrome-stable \\\n    Xvfb \\\n    # Speed up ISO builds with already installed reqs\n    yum \\\n    yum-utils \\\n    cpio \\\n    rpm \\\n    ca-certificates \\\n    xz-utils \\\n    xorriso \\\n    sendmail && \\\n\t# Cleanup\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n    python ./get-pip.py && \\\n    pip install --no-cache-dir pyasn1 google-apitools==0.5.15 gsutil robotframework robotframework-sshlibrary robotframework-httplibrary requests dbbot robotframework-selenium2library robotframework-pabot --upgrade\n\n# Install docker, docker compose\nRUN wget https://download.docker.com/linux/static/stable/x86_64/docker-17.12.0-ce.tgz && \\\n    tar --strip-components=1 -xvzf docker-17.12.0-ce.tgz -C /usr/bin && \\\n    curl -f -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \\\n    chmod +x /usr/local/bin/docker-compose && rm docker-17.12.0-ce.tgz\n\nRUN wget https://github.com/drone/drone-cli/releases/download/v0.8.3/drone_linux_amd64.tar.gz && tar zxf drone_linux_amd64.tar.gz && \\\n    install -t /usr/local/bin drone && rm drone_linux_amd64.tar.gz\n\nRUN curl -f -sSL https://github.com/vmware/govmomi/releases/download/v0.16.0/govc_linux_amd64.gz | gzip -d > /usr/local/bin/govc && \\\n    chmod +x /usr/local/bin/govc\n\nRUN  wget https://launchpad.net/ubuntu/+source/wget/1.18-2ubuntu1/+build/10470166/+files/wget_1.18-2ubuntu1_amd64.deb && \\\n     dpkg -i wget_1.18-2ubuntu1_amd64.deb\n\n# Add docker in docker support\n# version: docker:1.13-dind\n# reference: https://github.com/docker-library/docker/blob/b202ec7e529f5426e2ad7e8c0a8b82cacd406573/1.13/dind/Dockerfile\n#\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\n\n# set up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\nRUN set -x \\\n        && groupadd --system dockremap \\\n        && adduser --system --ingroup dockremap dockremap \\\n        && echo 'dockremap:165536:65536' >> /etc/subuid \\\n        && echo 'dockremap:165536:65536' >> /etc/subgid\n\nENV DIND_COMMIT 3b5fac462d21ca164b3778647420016315289034\n\nRUN wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n        && chmod +x /usr/local/bin/dind\n\n# This container needs to be run in privileged mode(run with --privileged option) to make it work\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\n\nVOLUME /var/lib/docker\n"
}