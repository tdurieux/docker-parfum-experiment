{
  "startTime": 1674236534449,
  "endTime": 1674236534565,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 36,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 36,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for storytelling with data class\nFROM debian:latest\nMAINTAINER Contextual Dynamics Lab <contextualdynamics@gmail.com>\n\n# Install necessary linux packages from apt-get\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y eatmydata && rm -rf /var/lib/apt/lists/*;\n\nRUN eatmydata apt-get install -y wget bzip2 ca-certificates \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 \\\n    git \\\n    libfreetype6-dev \\\n    swig \\\n    mpich \\\n    pkg-config \\\n    gcc \\\n    wget \\\n    curl \\\n    vim \\\n    nano \\\n    libgl1-mesa-glx \\\n    ffmpeg \\\n    fonts-liberation\n\n# Install anaconda\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh -O ~/anaconda.sh && \\\n    /bin/bash ~/anaconda.sh -b -p /opt/conda && \\\n    rm ~/anaconda.sh\n\n# Setup anaconda path\nENV PATH /opt/conda/bin:$PATH\n\n# Install gcc to make it work with brainiak\nRUN [\"/bin/bash\", \"-c\", \"conda install -y gcc\"]\n\n# Install packages needed\nRUN pip install --no-cache-dir hypertools \\\n    deepdish \\\n    dask \\\n    seaborn \\\n    python-twitter \\\n    supereeg\n\nRUN conda create -n py3 python=3.6\nRUN [\"/bin/bash\", \"-c\", \"source activate py3 && \\\n    conda install -y numpy \\\n    scipy \\\n    pandas \\\n    cython \\\n    joblib \\\n    memory_profiler \\\n    numexpr \\\n    psutil \\\n    scikit-learn \\\n    ipython \\\n    matplotlib \\\n    jupyter \\\n    seaborn\"]\n\n# source: https://jupyter-notebook.readthedocs.io/en/stable/public_server.html#notebook-public-server\n# Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n# kernel crashes.\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\nEXPOSE 8888\nCMD [\"jupyter\", \"notebook\", \"--port=8888\", \"--no-browser\", \"--ip=0.0.0.0\"]\n"
}