{
  "startTime": 1674244027202,
  "endTime": 1674244027609,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/gcp-runtimes/ubuntu_16_0_4\nENV PHP_DIR=/opt/php73\nENV PHP_SRC_DIR=/usr/local/src/php73-build\nENV PATH=${PATH}:/usr/local/bin:${PHP_DIR}/bin\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n            autoconf \\\n            build-essential \\\n            git-core \\\n            jq \\\n            libbz2-dev \\\n            libcurl4-openssl-dev \\\n            libc-client2007e \\\n            libc-client2007e-dev \\\n            libfcgi-dev \\\n            libfcgi0ldbl \\\n            libfreetype6-dev \\\n            libicu-dev \\\n            libjpeg62-dbg \\\n            libjpeg-dev \\\n            libkrb5-dev \\\n            libmcrypt-dev \\\n            libpng12-dev \\\n            libpq-dev \\\n            libssl-dev \\\n            libxml2-dev \\\n            libxslt1-dev \\\n            libzip-dev \\\n            python-ipaddr \\\n            wget \\\n            zip \\\n            zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/lib/libc-client.a /usr/lib/x86_64-linux-gnu/libc-client.a && \\\n    mkdir -p ${PHP_DIR} ${PHP_SRC_DIR} ${PHP_DIR}/lib/conf.d && \\\n    cd ${PHP_SRC_DIR} && \\\n    wget https://us1.php.net/get/php-7.3.0.tar.bz2/from/this/mirror \\\n         -O php-7.3.0.tar.bz2 && \\\n    tar jxf php-7.3.0.tar.bz2 && \\\n    cd php-7.3.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=${PHP_DIR} \\\n        --with-config-file-scan-dir=${PHP_DIR}/lib/conf.d \\\n        --with-pdo-pgsql \\\n        --with-zlib-dir \\\n        --with-freetype-dir \\\n        --enable-mbstring \\\n        --with-libxml-dir=/usr \\\n        --enable-soap \\\n        --enable-intl \\\n        --enable-calendar \\\n        --with-curl \\\n        --with-mcrypt \\\n        --with-zlib \\\n        --with-gd \\\n        --with-pgsql \\\n        --disable-rpath \\\n        --enable-inline-optimization \\\n        --with-bz2 \\\n        --with-zlib \\\n        --enable-sockets \\\n        --enable-sysvsem \\\n        --enable-sysvshm \\\n        --enable-sysvmsg \\\n        --enable-pcntl \\\n        --enable-mbregex \\\n        --enable-exif \\\n        --enable-bcmath \\\n        --with-mhash \\\n        --enable-zip \\\n        --with-pcre-regex \\\n        --with-mysql \\\n        --with-pdo-mysql \\\n        --with-mysqli \\\n        --with-jpeg-dir=/usr \\\n        --with-png-dir=/usr \\\n        --enable-gd-native-ttf \\\n        --with-openssl \\\n        --with-fpm-user=www-data \\\n        --with-fpm-group=www-data \\\n        --with-libdir=/lib/x86_64-linux-gnu \\\n        --enable-ftp \\\n        --with-imap \\\n        --with-imap-ssl \\\n        --with-gettext \\\n        --with-xmlrpc \\\n        --with-xsl \\\n        --with-kerberos \\\n        --enable-fpm && \\\n        make && \\\n        make install && \\\n        pecl install grpc && \\\n        cp php.ini-production ${PHP_DIR}/lib/php.ini && \\\n        echo 'zend_extension=opcache.so' >> ${PHP_DIR}/lib/php.ini && \\\n        echo 'extension=grpc.so' >> ${PHP_DIR}/lib/conf.d/ext-grpc.ini && \\\n        php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n        php -r \"if (hash_file('SHA384', 'composer-setup.php') === rtrim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" && \\\n        php composer-setup.php --filename=composer --install-dir=/usr/local/bin && rm php-7.3.0.tar.bz2\n\n# Install Google Cloud SDK\nRUN curl -f https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz \\\n        -o ${HOME}/google-cloud-sdk.tar.gz \\\n    && tar xzf ${HOME}/google-cloud-sdk.tar.gz -C $HOME \\\n    && ${HOME}/google-cloud-sdk/install.sh \\\n        --usage-reporting false \\\n        --path-update false \\\n        --command-completion false && rm ${HOME}/google-cloud-sdk.tar.gz\n\n# Make composer and gcloud bins available via the PATH variable\nENV PATH=\"$PATH:/root/google-cloud-sdk/bin:/root/.composer/vendor/bin\"\n\n# Configure Google Cloud SDK\nRUN gcloud config set app/promote_by_default false && \\\n    gcloud config set disable_prompts true && \\\n    gcloud -q components install app-engine-python && \\\n    gcloud -q components install app-engine-php && \\\n    gcloud -q components update\n\n"
}