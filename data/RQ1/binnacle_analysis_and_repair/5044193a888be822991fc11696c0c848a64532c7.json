{
  "startTime": 1674246502708,
  "endTime": 1674246502909,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "FROM kalilinux/kali-linux-docker:latest\n\nLABEL Viyat Bhalodia viyat.bhalodia@owasp.org\n\n# Bypass confirmations\nENV DEBIAN_FRONTEND noninteractive\n\n# Fix for exporting a SHELL variable in the environment\nENV TERM xterm\nENV SHELL /bin/bash\n\n# Flush the buffer for stderr, stdout logging\nENV PYTHONUNBUFFERED 1\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\nENV PYTHONDONTWRITEBYTECODE 1\n\n# Needed for installation of pycurl using pip in kali\nENV PYCURL_SSL_LIBRARY openssl\n\n# Install dependencies\nRUN apt-get -y update && apt-get clean\nRUN apt-get -y --no-install-recommends install xvfb xserver-xephyr libxml2-dev libxslt-dev libssl-dev zlib1g-dev gcc python-all-dev \\\n                        python-pip postgresql-server-dev-all postgresql-client postgresql-client-common \\\n                        postgresql libcurl4-openssl-dev proxychains tor ca-certificates libpq-dev python-dev \\\n                        libxml2-dev libxslt1-dev libldap2-dev libsasl2-dev libffi-dev net-tools lsof locales-all \\\n                        libyaml-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set locale\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n  locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Install optional tools (LBD, arachni, gnutls-bin, o-saft and metagoofil)\nRUN apt-get -y --no-install-recommends install lbd arachni theharvester tlssled nikto dnsrecon nmap whatweb skipfish dirbuster \\\n                        metasploit-framework wpscan wapiti hydra metagoofil o-saft && rm -rf /var/lib/apt/lists/*;\n\n# Ensure pip and setuptools are at their latest versions\nRUN pip install --no-cache-dir setuptools --upgrade\nRUN pip install --no-cache-dir pip --upgrade\nRUN pip install --no-cache-dir cffi\n\n# Install and create a Python virtualenv\nRUN pip install --no-cache-dir virtualenv && virtualenv ~/.venv/owtf && . ~/.venv/owtf/bin/activate\n\n# Create a dedicated OWTF directory to copy source to and run from.\nRUN cd / && /bin/mkdir -p owtf\nADD . /owtf\nADD docker/wait-for-it.sh /usr/bin/wait-for-it.sh\nRUN chmod +x /usr/bin/wait-for-it.sh\n\n# Copy the configuration file intended for the Docker environment\nRUN cp -f /owtf/docker/default.settings.py /owtf/owtf/settings.py\n\n# Install OWTF using the recommended method (setup.py)\nRUN cd /owtf &&\\\n  python setup.py develop\n\n# Set the current working directory to OWTF root directory\nWORKDIR /owtf\n\n# Expose the required ports for OWTF to run\nEXPOSE 8008 8009 8010\n"
}