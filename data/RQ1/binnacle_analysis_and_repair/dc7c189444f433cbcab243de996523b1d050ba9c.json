{
  "startTime": 1674234466372,
  "endTime": 1674234466598,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 59
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie-slim\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis && useradd -r -g redis redis\n\n# grab gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nENV GOSU_VERSION 1.10\nRUN set -ex; \\\n\tfetchDeps='ca-certificates wget'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu nobody true; \\\n\tapt-get purge -y --auto-remove $fetchDeps\n\nENV REDIS_VERSION 4.0.8\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-4.0.8.tar.gz\nENV REDIS_DOWNLOAD_SHA ff0c38b8c156319249fec61e5018cf5b5fe63a65b61690bec798f4c998c232ad\n\n# for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex; \\\n\tbuildDeps=' \\\n\t\twget \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t'; \\\n\tapt-get update; \\\n\tapt-get install -y $buildDeps --no-install-recommends; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \\\n\techo \"$REDIS_DOWNLOAD_SHA  *redis.tar.gz\" | sha256sum -c -; \\\n\tmkdir -p /usr/src/redis; \\\n\ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \\\n\trm redis.tar.gz; \\\n\tmake -C /usr/src/redis -j \"$(nproc)\"; \\\n\tmake -C /usr/src/redis install; \\\n\trm -r /usr/src/redis; \\\n\tapt-get purge -y --auto-remove $buildDeps\n\nRUN set -x \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    dnsutils \\\n  && rm -rf /var/lib/apt/lists/*\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 6379 16379\nCMD [\"redis-server\", \"/etc/redis/redis.conf\"]\n"
}