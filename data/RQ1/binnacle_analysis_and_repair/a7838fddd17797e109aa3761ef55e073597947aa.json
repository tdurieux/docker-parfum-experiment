{
  "startTime": 1674245874427,
  "endTime": 1674245874518,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build static assets\n#\nFROM ejplatform/tools:latest as assets\n\n\n# Compile translations\nCOPY ./etc/scripts/compilemessages.py /usr/bin/compilemessages\nCOPY ./locale/ /app/locale/\nWORKDIR /app\nRUN chmod +x /usr/bin/compilemessages \\\n && compilemessages\n\n\n# Build Sass\nARG THEME=default\nCOPY ./lib/scss /app/lib/scss\nCOPY ./lib/themes /app/lib/themes\nCOPY ./tasks.py /app/tasks.py\nRUN mkdir -p /app/lib/build/css/ \\\n && inv -e sass --theme=${THEME}\n\n# Build javascript assets (TODO)\nRUN inv -e js\n\n#\n# Final image\n#\nFROM ejplatform/python:deploy\n\n\n# Set theme and environment variables\nENV DJANGO_SETTINGS_MODULE=ej.settings\nENV DJANGO_ENVIRONMENT=production\nENV PYTHONPATH=\"/app/src/:$PYTHONPATH\"\nWORKDIR /app\n\n\n# Copy requirements and update packages\n# Most of the time, this will not install anything new.\nCOPY ./etc/requirements/ /etc/requirements/\nRUN pip install --no-cache-dir -r /etc/requirements/production.txt\n\n# Copy files\nCOPY ./.coveragerc /app/.coveragerc\nCOPY ./lib/ /app/lib/\nCOPY ./locale/ /app/locale/\nCOPY ./manage.py /app/manage.py\nCOPY ./src/ /app/src/\nCOPY ./docs/ /app/docs\n\nRUN sphinx-build docs/ /app/build/docs\n\n# Set environment variables\nARG COUNTRY=brasil\nARG HOSTNAME=localhost\nARG THEME=default\nENV COUNTRY=${COUNTRY}\nENV EJ_THEME=${THEME}\nENV HOSTNAME=${HOSTNAME}\n\n# Copy build-time assets: CSS, JS, i18n\nCOPY --from=assets /app/lib/build/ /app/lib/build/\nCOPY --from=assets /app/locale/ /app/locale/\n\n# Prepare deploy assets\nCOPY ./tasks.py /app/tasks.py\nRUN mkdir -p local/logs local/static/ local/media/ local/db/ \\\n && python manage.py collectstatic --noinput \\\n && echo \"COLLECTED STATIC ASSETS\"\n\n# Create django user\nRUN groupadd -r django \\\n  && useradd -r -g django django \\\n  && chown -R django:django /app\nUSER django\n\n# Save commit info\nARG COMMIT_TITLE=none\nARG COMMIT_HASH=none\nRUN echo \"${COMMIT_HASH}: ${COMMIT_TITLE}\" > commit.txt\n\n\n# Entry point defaults to inv run\nEXPOSE 8000\nENTRYPOINT [\"inv\"]\nCMD [\"bash\"]\n"
}