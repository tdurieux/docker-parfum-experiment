{
  "startTime": 1674243361220,
  "endTime": 1674243361361,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM ubuntu:16.04\n\nLABEL maintainer=gvasudevan@google.com\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        automake \\\n        build-essential \\\n        curl \\\n        git \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libtool \\\n        libzmq3-dev \\\n        mlocate \\\n        pkg-config \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        software-properties-common \\\n        swig \\\n        zip \\\n        zlib1g-dev \\\n        libcurl3-dev \\\n        openjdk-8-jdk \\\n        openjdk-8-jre-headless \\\n        wget \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set up grpc\n\nRUN pip install --no-cache-dir mock grpcio\n\n# Set up Bazel.\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https://github.com/bazelbuild/bazel/issues/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https://github.com/bazelbuild/bazel/issues/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\n# Install a recent bazel release.\nENV BAZEL_VERSION 0.11.1\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\n# Download, build, and install TensorFlow Serving\nARG TF_SERVING_VERSION_GIT_BRANCH=master\nWORKDIR /tensorflow-serving\nRUN git clone --depth=1 --branch=${TF_SERVING_VERSION_GIT_BRANCH} \\\n        https://github.com/tensorflow/serving .\n\nARG TF_SERVING_BUILD_OPTIONS=\"--copt=-mavx --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0 --verbose_failures\"\nRUN bazel build -c opt --color=yes --curses=yes ${TF_SERVING_BUILD_OPTIONS} \\\n    --output_filter=DONT_MATCH_ANYTHING \\\n    tensorflow_serving/model_servers:tensorflow_model_server && \\\n    cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server /usr/local/bin/ && \\\n    bazel clean --expunge --color=yes && \\\n    rm -rf /root/.cache\n# Clean up Bazel cache when done.\n\n#CMD [\"/bin/bash && tail -f /dev/null\"]\nCMD [\"tail\", \"-f\", \"/dev/null\"]"
}