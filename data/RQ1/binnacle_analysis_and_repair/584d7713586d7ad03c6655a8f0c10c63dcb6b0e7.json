{
  "startTime": 1674246684117,
  "endTime": 1674246684308,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-alpine\n\nMAINTAINER Sebastian Mandrean <sebastian@urb-it.com>\n\n# Environment variables\nENV ALPINE_VERSION 3.4\nENV PHP_API_VERSION 20160303\nENV NEWRELIC_VERSION 7.0.0.186\nENV IMAGICK_VERSION=3.4.3\n# ENV AMQP_VERSION=1.8.0\nENV MONGODB_VERSION=1.2.5\n\n# Download & Install New Relic\nRUN curl -f -#SL https://download.newrelic.com/php_agent/archive/$NEWRELIC_VERSION/newrelic-php5-$NEWRELIC_VERSION-linux-musl.tar.gz | tar xzf - \\\n&& mv ./newrelic-php5-$NEWRELIC_VERSION-linux-musl/agent/x64/newrelic-$PHP_API_VERSION.so /usr/local/lib/php/extensions/no-debug-non-zts-$PHP_API_VERSION/newrelic.so \\\n&& mv ./newrelic-php5-$NEWRELIC_VERSION-linux-musl/daemon/newrelic-daemon.x64 /usr/bin/newrelic-daemon \\\n&& chmod 775 /usr/bin/newrelic-daemon \\\n&& mkdir /var/log/newrelic\n\n# Install & clean up dependencies\nRUN apk --no-cache --update --repository http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main/ add \\\n    autoconf \\\n    build-base \\\n    ca-certificates \\\n&& apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/edge/main/ add \\\n    curl \\\n    openssl \\\n    openssl-dev \\\n    libtool \\\n    icu \\\n    icu-libs \\\n    icu-dev \\\n    libwebp \\\n    libpng \\\n    libpng-dev \\\n    libjpeg-turbo \\\n    libjpeg-turbo-dev \\\n    imagemagick-dev \\\n    imagemagick \\\n&& apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/edge/community/ add \\\n    php7-gd \\\n    php7-sockets \\\n    php7-zlib \\\n    php7-intl \\\n    php7-opcache \\\n    php7-bcmath \\\n    nodejs \\\n    git \\\n&& docker-php-ext-configure intl \\\n&& docker-php-ext-configure gd \\\n    --with-png-dir=/usr/include/ \\\n    --with-jpeg-dir=/usr/include/ \\\n&& pecl install \\\n    imagick-$IMAGICK_VERSION \\\n    # amqp-$AMQP_VERSION \\\n    mongodb-$MONGODB_VERSION \\\n&& docker-php-ext-install \\\n    pdo_mysql \\\n    sockets \\\n    gd \\\n    intl \\\n    opcache \\\n    bcmath \\\n&& docker-php-ext-enable \\\n    imagick \\\n    # amqp \\\n    mongodb \\\n&& apk --no-cache del \\\n    wget \\\n    icu-dev \\\n    libpng-dev \\\n    libjpeg-turbo-dev \\\n    imagemagick-dev \\\n    tar \\\n    autoconf \\\n    build-base \\\n    libtool \\\n&& rm -rf /var/cache/apk/* /tmp/* ./newrelic-php5-$NEWRELIC_VERSION-linux-musl*\n\n# Install Composer & dependencies\nRUN curl -f -sSL https://getcomposer.org/installer | php \\\n&& mv composer.phar /usr/local/bin/composer \\\n&& chmod +x /usr/local/bin/composer \\\n&& composer global require \"hirak/prestissimo:^0.3\"\n\n# Run Lumen Scheduler crontab\nADD lumen-scheduler.crontab /lumen-scheduler.crontab\nRUN /usr/bin/crontab /lumen-scheduler.crontab\n\nWORKDIR /var/www/application\n\nCMD crond -l 2 -f\n"
}