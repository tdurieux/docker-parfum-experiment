{
  "startTime": 1674244228325,
  "endTime": 1674244228991,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 5,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 5,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 5,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 24,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 5,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 37,
        "columnStart": 18,
        "columnEnd": 8
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM codeclimate/alpine-ruby:b38\nMAINTAINER Plataformatec <opensource@plataformatec.com.br>\n\n# Based on https://github.com/toy/image_optim_pack/pull/5\nENV JPEGOPTIM_VERSION=1.4.3 \\\n  PNGCRUSH_VERSION=1.7.88 \\\n  ZOPFLI_VERSION=1.0.1 \\\n  ADVANCECOMP_VERSION=1.20 \\\n  JHEAD_VERSION=3.00 \\\n  GIFSICLE_VERSION=1.88 \\\n  OPTIPNG_VERSION=0.7.5 \\\n  PNGQUANT_VERSION=2.5.2 \\\n  JPEGARCHIVE_VERSION=2.1.1 \\\n  MOZJPEG_VERSION=3.1 \\\n  IJG_VERSION=9a \\\n  PNGOUT_VERSION=20150319 \\\n  SKIP_IMAGE_OPTIM_PACK=1\n\nWORKDIR /tmp\n\n# This step installs all external utilities, leaving only the\n# compiled/installed binaries behind in order minimize the\n# footprint of the image layer.\nRUN apk update && apk add --no-cache \\\n\n  # runtime dependencies\n\n  # advcomp (libstdc++.so, libgcc_s.so)\n  libstdc++ \\\n\n  # jpegoptim (libjpeg.so)\n  libjpeg-turbo \\\n\n  # pngquant\n  libpng \\\n\n  # svgo\n  nodejs \\\n\n  # build dependencies\n\n  && apk add --no-cache --virtual build-dependencies \\\n  build-base \\\n\n  # jpegoptim\n  libjpeg-turbo-dev \\ # jpegoptim\n\n\n  # advancecomp\n  zlib-dev \\\n\n  # pngquant\n  bash libpng-dev \\\n\n  # mozjpeg\n  pkgconfig autoconf automake libtool nasm \\\n\n  # utils\n  curl \\\n\n  # advancecomp\n  && curl -f -L -O https://github.com/amadvance/advancecomp/releases/download/v$ADVANCECOMP_VERSION/advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n  && tar zxf advancecomp-$ADVANCECOMP_VERSION.tar.gz \\\n  && cd advancecomp-$ADVANCECOMP_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n\n  # gifsicle\n  && curl -f -O https://www.lcdf.org/gifsicle/gifsicle-$GIFSICLE_VERSION.tar.gz \\\n  && tar zxf gifsicle-$GIFSICLE_VERSION.tar.gz \\\n  && cd gifsicle-$GIFSICLE_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n\n  # jhead\n  && curl -f -O http://www.sentex.net/~mwandel/jhead/jhead-$JHEAD_VERSION.tar.gz \\\n  && tar zxf jhead-$JHEAD_VERSION.tar.gz \\\n  && cd jhead-$JHEAD_VERSION \\\n  && make && make install \\\n  && cd .. \\\n\n  # jpegoptim\n  && curl -f -O http://www.kokkonen.net/tjko/src/jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n  && tar zxf jpegoptim-$JPEGOPTIM_VERSION.tar.gz \\\n  && cd jpegoptim-$JPEGOPTIM_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n\n  # jpeg-recompress (from jpeg-archive along with mozjpeg dependency)\n  && curl -f -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz \\\n  && tar zxf v$MOZJPEG_VERSION.tar.gz \\\n  && cd mozjpeg-$MOZJPEG_VERSION \\\n  && autoreconf -fiv && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n  && curl -f -L -O https://github.com/danielgtaylor/jpeg-archive/archive/$JPEGARCHIVE_VERSION.tar.gz \\\n  && tar zxf $JPEGARCHIVE_VERSION.tar.gz \\\n  && cd jpeg-archive-$JPEGARCHIVE_VERSION \\\n  && make && make install \\\n  && cd .. \\\n\n  # jpegtran (from Independent JPEG Group)\n  && curl -f -O http://www.ijg.org/files/jpegsrc.v$IJG_VERSION.tar.gz \\\n  && tar zxf jpegsrc.v$IJG_VERSION.tar.gz \\\n  && cd jpeg-$IJG_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n\n  # optipng\n  && curl -f -L -O http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-$OPTIPNG_VERSION/optipng-$OPTIPNG_VERSION.tar.gz \\\n  && tar zxf optipng-$OPTIPNG_VERSION.tar.gz \\\n  && cd optipng-$OPTIPNG_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n\n  # pngcrush\n  # && curl -O http://iweb.dl.sourceforge.net/project/pmt/pngcrush/$PNGCRUSH_VERSION/pngcrush-$PNGCRUSH_VERSION.tar.gz \\\n  # && tar zxf pngcrush-$PNGCRUSH_VERSION.tar.gz \\\n  # && cd pngcrush-$PNGCRUSH_VERSION \\\n  # && make && cp -f pngcrush /usr/local/bin \\\n  # && cd .. \\\n\n  # pngout (binary distrib)\n  && curl -f -O http://static.jonof.id.au/dl/kenutils/pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n  && tar zxf pngout-$PNGOUT_VERSION-linux-static.tar.gz \\\n  && cd pngout-$PNGOUT_VERSION-linux-static \\\n  && cp -f x86_64/pngout-static /usr/local/bin/pngout \\\n  && cd .. \\\n\n  # pngquant\n  && curl -f -L -O http://pngquant.org/pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n  && tar xjf pngquant-$PNGQUANT_VERSION-src.tar.bz2 \\\n  && cd pngquant-$PNGQUANT_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd .. \\\n\n  # svgo\n  && npm install -g svgo && npm cache clean --force; && rm advancecomp-$ADVANCECOMP_VERSION.tar.gz\n\nWORKDIR /usr/src/app\nCOPY Gemfile /usr/src/app/\nCOPY Gemfile.lock /usr/src/app/\n\nRUN apk --update --no-cache add ruby ruby-dev ruby-bundler && \\\n    bundle install -j 4 && \\\n    # cleanup\n    rm -rf /usr/share/ri && \\\n    rm -rf /tmp/* && \\\n    apk del build-dependencies\n\n\nRUN adduser -u 9000 -D app\nCOPY . /usr/src/app\nRUN chown -R app:app /usr/src/app\n\nUSER app\n\nCMD [\"/usr/src/app/bin/engine-image-optim\"]\n"
}