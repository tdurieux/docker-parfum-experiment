{
  "startTime": 1674234720947,
  "endTime": 1674234721334,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 31,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 39,
        "columnEnd": 110
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 114,
        "columnEnd": 182
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04\n\nRUN echo 'building GPU DeepDetect image'\n\nMAINTAINER Emmanuel Benazera \"beniz@droidnik.fr\"\n\nLABEL description=\"DeepDetect deep learning server & API / GPU version\"\n\nRUN ln -sf /dev/stdout /var/log/deepdetect.log\nRUN ln -sf /dev/stderr /var/log/deepdetect.log\n\nRUN useradd -ms /bin/bash dd\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  git \\\n  cmake \\\n  automake \\\n  build-essential \\\n  openjdk-8-jdk \\\n  pkg-config \\\n  zip \\\n  g++ \\\n  zlib1g-dev \\\n  libgoogle-glog-dev \\\n  libgflags-dev \\\n  libeigen3-dev \\\n  libopencv-dev \\\n  libcppnetlib-dev \\\n  libboost-dev \\\n  libboost-iostreams-dev \\\n  libcurlpp-dev \\\n  libcurl4-openssl-dev \\\n  protobuf-compiler \\\n  libopenblas-dev \\\n  libhdf5-dev \\\n  libprotobuf-dev \\\n  libleveldb-dev \\\n  libsnappy-dev \\\n  liblmdb-dev \\\n  libutfcpp-dev \\\n  wget \\\n  autoconf \\\n  libtool-bin \\\n  python-numpy \\\n  swig \\\n  python-dev \\\n  python-setuptools \\\n  python-wheel \\\n  unzip \\\n  libgoogle-perftools-dev \\\n  screen \\\n  vim \\\n  strace \\\n  curl \\\n  libarchive-dev \\\n  libspdlog-dev \\\n  bash-completion \\\n  ca-certificates && \\\n  wget -O /tmp/bazel.deb https://github.com/bazelbuild/bazel/releases/download/0.8.1/bazel_0.8.1-linux-x86_64.deb && \\\n  dpkg -i /tmp/bazel.deb && \\\n  apt-get remove -y libcurlpp0 && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /opt\nRUN wget -O /opt/curlpp-v0.8.1.zip https://github.com/jpbarrette/curlpp/archive/v0.8.1.zip && \\\n    unzip curlpp-v0.8.1.zip && \\\n    cd curlpp-0.8.1 && \\\n    cmake . && \\\n    make install && \\\n    cp /usr/local/lib/libcurlpp.* /usr/lib/ && \\\n    cd /opt && \\\n    rm -rf curlpp-0.8.1 curlpp-v0.8.1.zip\n\n# Temporary work around to fix https://github.com/tensorflow/tensorflow/issues/8264\nRUN if [ ! -f /usr/local/cuda/include/cudnn.h -a -f /usr/include/cudnn.h ]; then ln -s /usr/include/cudnn.h /usr/local/cuda/include/; fi && \\\n    if [ ! -f /usr/local/cuda/lib64/libcudnn.so -a -f /usr/lib/x86_64-linux-gnu/libcudnn.so ]; then ln -s /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64/; fi\n\nWORKDIR /opt\nRUN git clone https://github.com/beniz/deepdetect.git && cd deepdetect && mkdir build\n\nWORKDIR /opt/deepdetect/build\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64\nRUN echo \"/usr/local/cuda-8.0/targets/x86_64-linux/lib/stubs\" > /etc/ld.so.conf.d/cuda-8.0-stubs.conf && ldconfig\nRUN cmake .. -DUSE_TF=ON -DUSE_CUDNN=ON -DUSE_SIMSEARCH=ON -DUSE_TSNE=ON -DCUDA_ARCH=\"-gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_53,code=sm_53 -gencode arch=compute_61,code=sm_61\" && \\ \n    make\n\n# external volume to be mapped, e.g. for models or training data\nRUN mkdir /data\nVOLUME [\"/data\"]\n\n# include a few image models within the image\nRUN mkdir /opt/models\nWORKDIR /opt/models\nRUN mkdir ggnet && cd ggnet && wget https://www.deepdetect.com/models/ggnet/bvlc_googlenet.caffemodel\nRUN mkdir resnet_50 && cd resnet_50 && wget https://www.deepdetect.com/models/resnet/ResNet-50-model.caffemodel && wget https://www.deepdetect.com/models/resnet/ResNet_mean.binaryproto\nRUN mv /opt/models/resnet_50/ResNet_mean.binaryproto /opt/models/resnet_50/mean.binaryproto\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt\nRUN cp /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt\nRUN cp /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/\nRUN cp /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/\n\n# permissions\nRUN chown -R dd:dd /opt/deepdetect\nRUN chown -R dd:dd /opt/models\n\nWORKDIR /opt/deepdetect/build/main\nCMD ./dede -host 0.0.0.0\nEXPOSE 8080"
}