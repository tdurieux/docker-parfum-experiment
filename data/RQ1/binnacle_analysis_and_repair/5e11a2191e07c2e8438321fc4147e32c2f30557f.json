{
  "startTime": 1674245665183,
  "endTime": 1674245665230,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Step 1: Pulls a simple ubuntu image with node 8 installed in it\nFROM node:8\n\nENV PORT 8080\n\n# Step 2: Make a new directory called \"app\"\nRUN mkdir /app\n\n# Step 3: Copy the package.json file from your local directory and paste it inside the container, inside the app directory\nCOPY app/package.json /app/package.json\n\n# Step 4: cd into the app directory and run npm install to install application dependencies\nRUN cd /app && npm install && npm cache clean --force;\n\n# Step 5: Install serve globally to be used to serve the app\nRUN npm -g install serve && npm cache clean --force;\n\n# Step 6: Add all source code into the app directory from your local app directory\nADD app /app/\n\n# Step 7: cd into the app directory and execute the npm run build command\nRUN cd /app && npm run build\n\n# Step 8: Set app as our current work directory\nWORKDIR /app\n\n# Step 9: Serve the app at port 8080 using the serve package\nCMD [\"serve\", \"-s\", \"build\", \"-l\", \"8080\"]\n\n# Step 9: Hot reloading\n# Comment line 28 and un-comment the next line to enable hot reloading:\n# CMD [\"npm\", \"start\"]\n\n# After un-commenting the file above, git push and execute the following command:\n# $ hasura microservice sync ui microservice/ui/app/src:/app/src\n# Open the microservice in a new tab and make some changes to files in src to see it live:\n# $ hasura microservice open ui\n"
}