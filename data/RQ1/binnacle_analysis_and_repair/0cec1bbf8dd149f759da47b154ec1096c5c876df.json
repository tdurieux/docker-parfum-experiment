{
  "startTime": 1674242978009,
  "endTime": 1674242978386,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==================================================================\n# module list\n# ------------------------------------------------------------------\n# Ubuntu           16.04\n# OpenMPI          latest     (apt)\n# cmake            3.10       (git)\n# MKL              2018.4-057 (apt)\n# arrayfire        3.6.4      (git, CPU backend)\n# MKLDNN           4bdffc2    (git)\n# Gloo             b7e0906    (git)\n# ==================================================================\n\nFROM ubuntu:16.04\n\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        build-essential \\\n        ca-certificates \\\n        wget \\\n        git \\\n        vim \\\n        emacs \\\n        nano \\\n        htop \\\n        g++ \\\n        # for MKL\n        apt-transport-https \\\n        # for arrayfire CPU backend\n        # OpenBLAS\n        libopenblas-dev libfftw3-dev liblapacke-dev \\\n        # ATLAS\n        libatlas3-base libatlas-dev libfftw3-dev liblapacke-dev \\\n        # ssh for OpenMPI\n        openssh-server openssh-client \\\n        # OpenMPI\n        libopenmpi-dev libomp-dev && \\\n# ==================================================================\n# cmake 3.10 (for MKLDNN)\n# ------------------------------------------------------------------\n    apt-get purge -y cmake && \\\n    # for cmake\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL zlib1g-dev libcurl4-openssl-dev && \\\n    cd /tmp && wget https://cmake.org/files/v3.10/cmake-3.10.3.tar.gz  && \\\n    tar -xzvf cmake-3.10.3.tar.gz  && cd cmake-3.10.3  && \\\n    ./bootstrap --system-curl && \\\n    make -j8 &&  make install && cmake --version && \\\n# ==================================================================\n# MKL https://software.intel.com/en-us/mkl\n# ------------------------------------------------------------------\n    cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \\\n    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \\\n    wget https://apt.repos.intel.com/setup/intelproducts.list -O /etc/apt/sources.list.d/intelproducts.list && \\\n    sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' && \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL intel-mkl-64bit-2018.4-057 && \\\n    export MKLROOT=/opt/intel/mkl && \\\n# ==================================================================\n# arrayfire with CPU backend https://github.com/arrayfire/arrayfire/wiki/\n# ------------------------------------------------------------------\n    cd /tmp && git clone --recursive https://github.com/arrayfire/arrayfire.git && \\\n    cd arrayfire && git checkout v3.6.4  && git submodule update --init --recursive && \\\n    mkdir build && cd build && \\\n    CXXFLAGS=-DOS_LNX cmake .. -DCMAKE_BUILD_TYPE=Release -DAF_BUILD_CUDA=OFF -DAF_BUILD_OPENCL=OFF -DAF_BUILD_EXAMPLES=OFF && \\\n    make -j8 && make install && \\\n# ==================================================================\n# MKLDNN https://github.com/intel/mkl-dnn/\n# ------------------------------------------------------------------\n    cd /tmp && git clone https://github.com/intel/mkl-dnn.git && \\\n    cd mkl-dnn && git checkout 4bdffc2 && mkdir -p build && cd build && \\\n    cmake .. -DMKLDNN_USE_MKL=FULL && \\\n    make -j8 && make install && \\\n# ==================================================================\n# Gloo https://github.com/facebookincubator/gloo.git\n# ------------------------------------------------------------------\n    cd /tmp && git clone https://github.com/facebookincubator/gloo.git && \\\n    cd gloo && git checkout b7e0906 && mkdir build && cd build && \\\n    cmake .. -DUSE_MPI=ON && \\\n    make -j8 && make install && \\\n# ==================================================================\n# config & cleanup\n# ------------------------------------------------------------------\n    ldconfig && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* ~/* && rm cmake-3.10.3.tar.gz\n"
}