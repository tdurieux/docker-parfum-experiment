{
  "startTime": 1674249619524,
  "endTime": 1674249619682,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pcic/geospatial-python\nMAINTAINER Mike McCann <mccann@mbari.org>\n\n# Modeled after http://michal.karzynski.pl/blog/2015/04/19/packaging-django-applications-as-docker-container-images/\n\n# Additional requirements for stoqs not in pcic/geospatial-python\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get -qq --no-install-recommends -y install \\\n    freetds-dev \\\n    git \\\n    gmt \\\n    libncurses-dev \\\n    postgresql-10 \\\n    time \\\n    wget \\\n    imagemagick && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n# To fix multiprocessing-permission-denied for docker-compose execution\nRUN echo 'none /dev/shm tmpfs rw,nosuid,nodev,noexec 0 0' > /etc/fstab\n\n# Make sure python and python-config refer to corresponding Python 3 versions\nRUN cd /usr/bin/ &&\\\n    ln -fs python3 python &&\\\n    ln -fs python3-config python-config\n\nWORKDIR /srv\n\n# Build and install geos - needed for basemap (several warnings/errors on compiling that can be ignored)\nRUN echo '/usr/local/lib' >> /etc/ld.so.conf\nRUN wget -q -N https://download.osgeo.org/geos/geos-3.6.0.tar.bz2\nRUN tar -xjf geos-3.6.0.tar.bz2 && rm geos-3.6.0.tar.bz2\nRUN cd geos-3.6.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j 2 && make install && ldconfig && cd ..\n\n# Symlink to requirements from docker directory used to minimize context\nCOPY requirements /requirements\nRUN pip3 install --no-cache-dir git+https://github.com/pymssql/pymssql\nRUN /bin/bash -c 'pip install -r /requirements/production.txt'\n\n# Basemap install - needed for monitorLrauv.py in production (some warnings/errors on compiling that can be ignored)\nRUN wget -q https://sourceforge.net/projects/matplotlib/files/matplotlib-toolkits/basemap-1.0.7/basemap-1.0.7.tar.gz\nRUN tar -xzf basemap-1.0.7.tar.gz && rm basemap-1.0.7.tar.gz\nRUN cd basemap-1.0.7 && GEOS_DIR=/usr/local python setup.py install && cd ..\n\n# Connection to uwsgi/nginx\nCOPY docker-stoqs-uwsgi.ini /etc/uwsgi/django-uwsgi.ini\n\nCMD [\"docker/stoqs-start.sh\"]\n\n"
}