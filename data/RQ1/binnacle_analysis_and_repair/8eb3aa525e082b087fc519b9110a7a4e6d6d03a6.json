{
  "startTime": 1674235070171,
  "endTime": 1674235070231,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.16.0-alpine as build-stage\nWORKDIR /usr/src/app\n\n# install build dependencies\nCOPY package.json yarn.lock .yarnrc ./\n# install packages offline\nCOPY npm-packages-offline-cache ./npm-packages-offline-cache\nRUN yarn install && yarn cache clean;\n\n# create react app needs src and public directories\nCOPY src ./src\nCOPY public ./public\n\nRUN yarn build\n\nFROM nginx:1.15.12-alpine\nENV NGINX_USER=nginx\nRUN rm -rf /etc/nginx/conf.d\nCOPY nginx /etc/nginx\nCOPY --from=build-stage /usr/src/app/build /usr/share/nginx/html/filing/2018\nRUN apk --no-cache add shadow && \\\n    usermod -l $NGINX_USER nginx && \\\n    groupmod -n $NGINX_USER nginx && \\\n    chown -R $NGINX_USER:$NGINX_USER /etc/nginx /usr/share/nginx/html/filing/2018\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}