{
  "startTime": 1674241872793,
  "endTime": 1674241873623,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 19,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM      ubuntu:14.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    automake \\\n    autopoint \\\n    bison \\\n    bridge-utils \\\n    build-essential \\\n    cmake \\\n    ethtool \\\n    flex \\\n    g++ \\\n    gdb \\\n    git \\\n    libboost-dev \\\n    libboost-filesystem-dev \\\n    libboost-program-options-dev \\\n    libboost-system-dev \\\n    libboost-test-dev \\\n    libboost-thread-dev \\\n    libedit-dev \\\n    libev-dev \\\n    libevent-dev \\\n    libffi-dev \\\n    libglib2.0-dev \\\n    libgmp-dev \\\n    libhiredis-dev \\\n    libjson0 \\\n    libjson0-dev \\\n    libjudy-dev \\\n    libnl-route-3-dev \\\n    libpcap0.8 \\\n    libpcap0.8-dev \\\n    libpcap-dev \\\n    libtool \\\n    libssl-dev \\\n    mktemp \\\n    openssh-server \\\n    packit \\\n    pkg-config \\\n    python-dev \\\n    python-pip \\\n    python-pygraph \\\n    python-pygraphviz \\\n    python-setuptools \\\n    python-texttable \\\n    python-thrift \\\n    python-yaml \\\n    quagga \\\n    redis-server \\\n    redis-tools \\\n    subversion \\\n    tcpdump \\\n    texinfo \\\n    tshark \\\n    valgrind \\\n    vim \\\n    xterm && rm -rf /var/lib/apt/lists/*;\n\nRUN mv /usr/sbin/tcpdump /usr/bin/tcpdump\n\nRUN pip install --no-cache-dir crc16\n\n# install libuio\nRUN mkdir -p /tmp/libuio ; \\\n    cd /tmp/libuio ; \\\n    git clone https://github.com/Linutronix/libuio ; \\\n    cd libuio ; \\\n    ./autogen.sh ; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make install ; ldconfig ; \\\n    rm -fr /tmp/libuio\n\n# install cjson\nRUN mkdir -p /tmp/cjson ; \\\n    cd /tmp/cjson ; \\\n    git clone https://@github.com/kbranigan/cJSON.git ; \\\n    cd cJSON ; \\\n    make ; make install ; ldconfig ; \\\n    rm -fr /tmp/cjson\n\n# install scapy\nRUN mkdir -p /tmp/scapy ; \\\n    cd /tmp/scapy ; \\\n    git clone https://github.com/p4lang/scapy-vxlan.git ; \\\n    cd scapy-vxlan ; \\\n    python setup.py install ; \\\n    rm -fr /tmp/scapy\n\nRUN mkdir -p /tmp/libcrafter; \\\n    cd /tmp/; \\\n    git clone https://github.com/pellegre/libcrafter ; \\\n    cd /tmp/libcrafter/libcrafter ; \\\n    ./autogen.sh ;  \\\n    make -j 4 ; \\\n    make install ; \\\n    ldconfig ; \\\n    rm -fr /tmp/libcrafter\n\nRUN mkdir -p /tmp/libcli; \\\n    cd /tmp/; \\\n\tgit clone https://github.com/dparrish/libcli.git; \\\n    cd /tmp/libcli/ ; \\\n    make -j 4 ; \\\n    make install ; \\\n    ldconfig ; \\\n    rm -fr /tmp/libcli\n\n# install ctypesgen\nRUN mkdir -p /tmp/ctypesgen ; \\\n    cd /tmp/ctypesgen ; \\\n    git clone https://github.com/davidjamesca/ctypesgen.git ; \\\n    cd ctypesgen ; \\\n    python setup.py install ; \\\n    rm -fr /tmp/ctypesgen\n\n# install mstpd\nRUN mkdir -p /third-party/diffs\nCOPY diffs/mstpd.diff /third-party/diffs/mstpd.diff\nRUN cd /third-party; \\\n    svn checkout svn://svn.code.sf.net/p/mstpd/code/trunk mstpd; \\\n    cd mstpd; patch -p0 -i /third-party/diffs/mstpd.diff; make -j 4 install\n\n\n# install p4-hlir\nRUN git clone https://github.com/p4lang/p4-hlir.git ; \\\n    cd p4-hlir ;\\\n    sudo python setup.py install ; \\\n    cd ..\n\nRUN pip install --no-cache-dir tenjin\n\nRUN echo \"set nu\" >> /root/.vimrc\nRUN echo \"set hlsearch\" >> /root/.vimrc\nRUN echo \"set et\" >> /root/.vimrc\nRUN echo \"set tabstop=2\" >> /root/.vimrc\nRUN echo \"set shiftwidth=2\" >> /root/.vimrc\nRUN echo \"set autoindent\" >> /root/.vimrc\nRUN echo \"set smartindent\" >> /root/.vimrc\n\nRUN mkdir install_tmp ; \\\n    cd install_tmp ; \\\n    wget -c https://archive.apache.org/dist/thrift/0.9.2/thrift-0.9.2.tar.gz; \\\n    tar zxvf thrift-0.9.2.tar.gz ; rm thrift-0.9.2.tar.gz \\\n    cd thrift-0.9.2 ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cpp=yes --with-c_glib=no --with-java=no --with-ruby=no --with-erlang=no --with-go=no --with-nodejs=no; \\\n    make -j4 ; \\\n    make install ; \\\n    ldconfig ; \\\n    cd .. ; \\\n    wget https://github.com/nanomsg/nanomsg/archive/1.0.0.tar.gz -O nanomsg-1.0.0.tar.gz ; \\\n    tar -xzvf nanomsg-1.0.0.tar.gz ; \\\n    cd nanomsg-1.0.0 ; \\\n    mkdir build ; \\\n    cd build ; \\\n    cmake .. -DCMAKE_INSTALL_PREFIX=/usr ; \\\n    cmake --build . ; \\\n    cmake --build . --target install ; \\\n    cd ../../ ; \\\n    git clone https://github.com/nanomsg/nnpy.git ; \\\n    cd nnpy ; \\\n    git checkout c7e718a5173447c85182dc45f99e2abcf9cd4065 ; \\\n    ldconfig ; \\\n    pip install --no-cache-dir cffi; \\\n    pip install --no-cache-dir .; \\\n    cd ..\n\nENV VTYSH_PAGER more\n"
}