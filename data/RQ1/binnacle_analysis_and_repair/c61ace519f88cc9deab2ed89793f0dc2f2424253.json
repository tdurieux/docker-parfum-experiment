{
  "startTime": 1674241790564,
  "endTime": 1674241790797,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 67,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 67,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Nginx Amplify Agent with N+ container\n# Based on Ubuntu 14.04\n############################################################\n\n# Set the base image to Ubuntu\nFROM ubuntu:14.04\n\n# File Author / Maintainer\nMAINTAINER Mike Belov\n\nARG VAULT_ADDR='https://vault.ci.nginx.com'\nARG VAULT_SKIP_VERIFY=true\nARG VAULT_TOKEN\nRUN echo ${VAULT_TOKEN}\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\nRUN apt-get update && apt-get install --no-install-recommends -y -q wget apt-transport-https \\\n && apt-get install --no-install-recommends -y -qq curl libcurl3 libcurl3-dev php5-curl && apt-get -y --no-install-recommends -qq install jq ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# get vault\nRUN curl -f -Ss https://releases.hashicorp.com/vault/0.10.0/vault_0.10.0_linux_amd64.zip \\\n    | gunzip - > /usr/local/bin/vault \\\n    && chmod +x /usr/local/bin/vault\n\n# setup NGINX repo certs for N+\nRUN mkdir -p /etc/ssl/nginx \\\n    && VAULT_TOKEN=${VAULT_TOKEN} vault kv get -format=json certs-dev/nginx-repo.crt  \\\n    | jq -r .data.data.cert > /etc/ssl/nginx/nginx-repo.crt \\\n    && VAULT_TOKEN=${VAULT_TOKEN} vault kv get -format=json certs-dev/nginx-repo.key  \\\n    | jq -r .data.data.key > /etc/ssl/nginx/nginx-repo.key \\\n    && chmod +r /etc/ssl/nginx/nginx-repo.*\n\n# Get other files required for installation\nRUN wget -q -O - https://nginx.org/keys/nginx_signing.key | apt-key add -\nRUN wget -q -O /etc/apt/apt.conf.d/90nginx https://cs.nginx.com/static/files/90nginx\n\nRUN printf \"deb https://plus-pkgs.nginx.com/ubuntu `lsb_release -cs` nginx-plus\\n\" >/etc/apt/sources.list.d/nginx-plus.list\n\n# Install NGINX Plus\nRUN apt-get update && apt-get install --no-install-recommends -y nginx-plus && rm -rf /var/lib/apt/lists/*;\n\n# Install basic applications\nRUN apt-get install --no-install-recommends -y --fix-missing tar curl nano wget dialog net-tools build-essential && rm -rf /var/lib/apt/lists/*;\n# RUN apt-get install -y --fix-missing apt-transport-https\n\n# Install Python and Basic Python Tools\nRUN apt-get install --no-install-recommends -y python python-dev python-distribute && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python - 'pip==18.1.0'\n\n# Copy the application folder inside the container\nADD . /amplify\nADD requirements.txt /etc/naas/requirements.txt\n\n# Install agent requirements:\nRUN pip install --no-cache-dir -r /etc/naas/requirements.txt\n\nENV AMPLIFY_ENVIRONMENT development\nENV PYTHONPATH /amplify/\n\n# Set the default directory where CMD will execute\nWORKDIR /amplify\n\n# add stub status\nADD nginx.conf /etc/nginx/nginx.conf\n\n# add ssl\nADD amplify-agent-test.crt /etc/nginx/certs.d/amplify-agent-test.crt\nADD amplify-agent-test.key /etc/nginx/certs.d/amplify-agent-test.key\n\nCMD nginx && python /amplify/nginx-amplify-agent.py start --config=/amplify/etc/agent.conf.development && tail -f /amplify/log/agent.log\n"
}