{
  "startTime": 1674242400101,
  "endTime": 1674242400258,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 178
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on https://github.com/puckel/docker-airflow and https://github.com/Drunkar/dockerfiles/tree/master/airflow\nFROM ubuntu:16.04\n\n# Define en_US.\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nRUN apt-get update --fix-missing && \\\n    apt-get -y --no-install-recommends install \\\n        build-essential \\\n        git \\\n        wget \\\n        curl \\\n        bzip2 \\\n        netcat \\\n        locales \\\n        ca-certificates \\\n        libglib2.0-0 \\\n        libxext6 \\\n        libsm6 \\\n        libxrender1 \\\n        libmysqlclient-dev \\\n        libpq-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libkrb5-dev \\\n        libffi-dev \\\n        libxml2-dev \\\n        libxslt-dev && rm -rf /var/lib/apt/lists/*;\n\nENV AIRFLOW_HOME=/usr/local/airflow\nENV AIRFLOW_DAGS_WORKSPACE=${AIRFLOW_HOME}/workspace \\\n    AIRFLOW_DAGS_DIR=${AIRFLOW_HOME}/dags \\\n    AIRFLOW_FERNET_KEY=some_very_secret_key \\\n    AIRFLOW_WEBSERVER_SECRET_KEY=some_very_very_secret_key\n\nRUN useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    curl -f https://repo.continuum.io/miniconda/Miniconda3-4.2.11-Linux-x86_64.sh -o ${AIRFLOW_HOME}/conda.sh && \\\n    /bin/bash ${AIRFLOW_HOME}/conda.sh -b -p /opt/conda && \\\n    rm ${AIRFLOW_HOME}/conda.sh\n\nENV PATH /opt/conda/bin:$PATH\nCOPY config/ ${AIRFLOW_HOME}\nCOPY bin/ ${AIRFLOW_HOME}\nRUN conda install --yes --file ${AIRFLOW_HOME}/requirements-conda.txt \\\n    && pip install --no-cache-dir -r ${AIRFLOW_HOME}/requirements-pip.txt \\\n    && conda clean -i -l -t -y\n\n#\n# Install Airflow from the list of available options:\n#\n# 1. Uncomment to pip install from an official release\n#RUN pip install airflow[celery,crypto,hive,jdbc,ldap,password,postgres,s3,vertica]==1.8.0\n#\n# 2. Uncomment to pip install from a github repo/branch/commit.  YMMV.\n#\nRUN pip install --no-cache-dir -e git://github.com/apache/incubator-airflow.git@310fb589ae867ff2ec8b7ce3cc5b1659db4dad49#egg=airflow[celery,crypto,hive,jdbc,ldap,password,postgres,s3,vertica]\n#\n# 3. Uncomment to git clone the repo, git checkout a branch, git reset to a commit, then build from source.\n#\n#RUN git clone https://github.com/dennisobrien/incubator-airflow.git airflow_src && \\\n#      cd airflow_src && \\\n#      git checkout dennisobrien/gunicorn-forwarded-allow-ips && \\\n#      git reset --hard 6aef967960207b9d0e472cb84b1112d1dc959139 && \\\n#      pip install -e .[celery,crypto,hive,jdbc,ldap,password,postgres,s3,vertica]\n\nENV MATPLOTLIBRC ${AIRFLOW_HOME}/.config/matplotlib/\nADD config/matplotlibrc ${AIRFLOW_HOME}/.config/matplotlib/matplotlibrc\nRUN chmod 0644 ${AIRFLOW_HOME}/.config/matplotlib/matplotlibrc\n\n# Uncomment if you want to install your own dags.\n#COPY dags/ /usr/local/airflow/dags\n\nRUN chown -R airflow: ${AIRFLOW_HOME} \\\n    && chmod +x ${AIRFLOW_HOME}/docker-entrypoint.sh \\\n    && chmod +x ${AIRFLOW_HOME}/wait-for-it.sh\n\nEXPOSE 8080 5555 8793\n\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n"
}