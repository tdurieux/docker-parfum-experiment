{
  "startTime": 1674242759202,
  "endTime": 1674242759618,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile - alpine-fat\n# https://github.com/duythongle/k8s-openresty-streaming\n#\n# This is an alpine-based build based on\n# https://github.com/openresty/docker-openresty/tree/master/alpine-fat\n\nFROM alpine:3.7\n\nLABEL maintainer=\"Tom Le <thongld2012@gmail.com>\"\n\n# Docker Build Arguments\nARG RESTY_VERSION=\"1.13.6.1\"\nARG RESTY_LUAROCKS_VERSION=\"2.4.3\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2k\"\nARG RESTY_PCRE_VERSION=\"8.41\"\nARG RESTY_J=\"1\"\nARG TELIZE_VERSION=\"2.0.0\"\nARG GEOIP2_VERSION=\"2.0\"\nARG RTMP_VERSION=\"1.2.1\"\nARG RESTY_CONFIG_OPTIONS=\"\\\n    --with-file-aio \\\n    --with-http_addition_module \\\n    --with-http_auth_request_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-http_mp4_module \\\n    --with-http_random_index_module \\\n    --with-http_realip_module \\\n    --with-http_secure_link_module \\\n    --with-http_slice_module \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-http_v2_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-ipv6 \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-md5-asm \\\n    --with-pcre-jit \\\n    --with-sha1-asm \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-threads \\\n    --add-dynamic-module=/tmp/geoip2-${GEOIP2_VERSION} \\\n    --add-dynamic-module=/tmp/rtmp-${RTMP_VERSION}\"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\n\n# These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n\n\n# 1) Install apk dependencies\n# 2) Download and untar OpenSSL, PCRE, and OpenResty\n# 3) Build OpenResty\n# 4) Cleanup\n\nRUN apk add --no-cache --virtual .build-deps \\\n        curl \\\n        gd-dev \\\n        geoip-dev \\\n        libxslt-dev \\\n        perl-dev \\\n        readline-dev \\\n        zlib-dev \\\n        libmaxminddb-dev \\\n    && apk add --no-cache \\\n        libmaxminddb \\\n        openssl \\\n        sudo \\\n        bash \\\n        build-base \\\n        curl \\\n        gd \\\n        geoip \\\n        libgcc \\\n        libxslt \\\n        linux-headers \\\n        make \\\n        perl \\\n        unzip \\\n        zlib \\\n    && mkdir -p /tmp/geoip2-${GEOIP2_VERSION} \\\n    && curl -fSL https://github.com/leev/ngx_http_geoip2_module/archive/${GEOIP2_VERSION}.tar.gz | \\\n    tar xzf - -C /tmp/geoip2-${GEOIP2_VERSION} --strip-components=1 \\\n    && mkdir -p /tmp/rtmp-${RTMP_VERSION} \\\n    && curl -fSL https://github.com/arut/nginx-rtmp-module/archive/v${RTMP_VERSION}.tar.gz | \\\n    tar xzf - -C /tmp/rtmp-${RTMP_VERSION} --strip-components=1 \\\n    && cd /tmp \\\n    && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n    && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n    && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n    && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n    && cd /tmp/openresty-${RESTY_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n    && make -j${RESTY_J} \\\n    && make -j${RESTY_J} install \\\n    && cd /tmp \\\n    && rm -rf \\\n        openssl-${RESTY_OPENSSL_VERSION} \\\n        openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n        openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} \\\n        pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n    && echo curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/openresty/luajit \\\n        --with-lua=/usr/local/openresty/luajit \\\n        --lua-suffix=jit-2.1.0-beta3 \\\n        --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n    && make build \\\n    && make install \\\n    && cd /tmp \\\n    && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && apk add --no-cache --virtual .gettext gettext \\\n    && mv /usr/bin/envsubst /tmp/ \\\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner /tmp/envsubst \\\n            | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n            | sort -u \\\n            | xargs -r apk info --installed \\\n            | sort -u \\\n    )\" \\\n    && apk add --no-cache --virtual $runDeps \\\n    && mv /tmp/envsubst /usr/local/bin/ \\\n    && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n    && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log\n\nRUN sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-http \\\n    && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-resty-auto-ssl \\\n    && sudo -H /usr/local/openresty/luajit/bin/luarocks install lua-iconv\n\nRUN openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \\\n  -subj '/CN=sni-support-required-for-valid-ssl' \\\n  -keyout /etc/ssl/resty-auto-ssl-fallback.key \\\n  -out /etc/ssl/resty-auto-ssl-fallback.crt\n\nADD https://github.com/duythongle/k8s-openresty-streaming/raw/master/nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\n#ADD conf.d /usr/local/openresty/nginx/conf/conf.d\n\nRUN mkdir -p /tmp/telize-v${TELIZE_VERSION} \\\n  && curl -fSL https://github.com/fcambus/telize/archive/${TELIZE_VERSION}.tar.gz | \\\n  tar xzf - -C /tmp/telize-v${TELIZE_VERSION} --strip-components=1 \\\n  && cp /tmp/telize-v${TELIZE_VERSION}/country-code3.conf /usr/local/openresty/nginx/conf \\\n  && cp /tmp/telize-v${TELIZE_VERSION}/timezone-offset.conf /usr/local/openresty/nginx/conf \\\n  && cp /tmp/telize-v${TELIZE_VERSION}/telize.conf /usr/local/openresty/nginx/conf\n\nRUN mkdir -p /var/db/GeoIP \\\n  && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz | \\\n  tar xzf - -C /var/db/GeoIP --strip-components=1 \\\n  && curl -fSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz | \\\n  tar xzf - -C /var/db/GeoIP --strip-components=1\n\nRUN rm -rf /tmp/* && apk del .build-deps .gettext\n\nENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon off;\"]"
}