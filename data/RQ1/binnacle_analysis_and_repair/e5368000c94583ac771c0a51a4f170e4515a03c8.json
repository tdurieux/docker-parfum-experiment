{
  "startTime": 1674236247371,
  "endTime": 1674236247533,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 21,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 21,
        "columnEnd": 42
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04 AS compile\nMAINTAINER Stian Soiland-Reyes <orcid.org/0000-0001-9842-9718>\n\n# openjdk 6 hard-coded to resolve\n# ambiguity in build dependency\n# https://github.com/openlink/virtuoso-opensource/issues/342\n# FIXME: Is openjdk-6-jdk still needed?\nENV BUILD_DEPS openjdk-6-jdk unzip wget net-tools build-essential\n\nENV URL https://github.com/openlink/virtuoso-opensource/releases/download/v7.2.4.2/virtuoso-opensource-7.2.4.2.tar.gz\n#ENV URL https://github.com/openlink/virtuoso-opensource/archive/stable/7.tar.gz\n\n\n# Build virtuoso opensource debian package from github\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ precise-backports main restricted universe multiverse\" >> /etc/apt/sources.list\n##RUN export DEBIAN_FRONTEND=noninteractive && \\\n##    apt-get update && \\\n##    apt-get install -y $BUILD_DEPS && \\\n##    cd /tmp && \\\n##    wget --no-check-certificate --quiet $URL \\\n##       -O /tmp/virtuoso-opensource.tar.gz && \\\n##    tar xf /tmp/virtuoso-opensource.tar.gz && \\\n##    deps=$(dpkg-checkbuilddeps 2>&1 | sed 's/.*: //' | sed 's/([^)]*)//g') && \\\n##    apt-get install -y $deps && \\\n##    dpkg-buildpackage -us -uc && \\\n##    apt-get remove -y --purge $BUILD_DEPS $deps && \\\n##    apt-get autoremove --purge -y && \\\n##    cd /tmp && \\\n##    dpkg -i virtuoso-opensource*deb virtuoso-server*.deb virtuoso-minimal_*.deb virtuoso-server*.deb  libvirtodbc*.deb || apt-get install -f -y && \\\n##    apt-get autoclean && \\\n##    rm -rf /var/lib/apt/lists/* && \\\n##    mv /tmp/*deb /var/cache/apt/archives/ && \\\n##    rm -rf /tmp/*\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y $BUILD_DEPS && rm -rf /var/lib/apt/lists/*;\nWORKDIR /tmp\nRUN wget --no-check-certificate --quiet $URL -O /tmp/virtuoso-opensource.tar.gz\nRUN tar xf /tmp/virtuoso-opensource.tar.gz && rm /tmp/virtuoso-opensource.tar.gz\nRUN ln -s virtuoso-opensource-* virtuoso-opensource\nWORKDIR /tmp/virtuoso-opensource\nRUN dpkg-checkbuilddeps 2>&1 | sed 's/.*: //' | sed 's/([^)]*)//g' | xargs apt-get install -y $deps\nRUN dpkg-buildpackage -us -uc\nWORKDIR /tmp\nRUN mkdir /dist && cp virtuoso-opensource*deb virtuoso-server*.deb virtuoso-minimal_*.deb libvirtodbc*.deb /dist\n\n\n# Second stage, install without build dependencies\n\nFROM ubuntu:14.04\nENV DEBIAN_FRONTEND noninteractive\n# Copy from previous stage\nCOPY --from=compile /dist /dist\nRUN apt-get update\nWORKDIR /dist\n# dpkg will fail as dependencies are missing, top-up with apt\nRUN dpkg -i *.deb || apt-get install -f -y\n\nRUN ln -s /usr/bin/isql-vt /usr/local/bin/isql\n\n\n# Enable mountable /virtuoso for data storage, which\n# we'll symlink the standard db folder to point to\nRUN mkdir /virtuoso\nRUN rm -rf /var/lib/virtuoso-opensource-7/db\nRUN ln -s /virtuoso /var/lib/virtuoso-opensource-7/db\nVOLUME /virtuoso\n\n# /staging for loading data\nRUN mkdir /staging ; sed -i '/DirsAllowed/ s:$:,/staging:' /etc/virtuoso-opensource-7/virtuoso.ini\nVOLUME /staging\n\nCOPY staging.sh /usr/local/bin/\nCOPY docker-entrypoint.sh /\nRUN chmod 755 /usr/local/bin/staging.sh /docker-entrypoint.sh\n\n\n# Virtuoso ports\nEXPOSE 8890\nEXPOSE 1111\nWORKDIR /virtuoso\n# Modify config-file on start-up to reflect memory available\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n# Run virtuoso in the foreground\nCMD [\"/usr/bin/virtuoso-t\", \"+wait\", \"+foreground\", \"+configfile\", \"/etc/virtuoso-opensource-7/virtuoso.ini\"]\n\n"
}