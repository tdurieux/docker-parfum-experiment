{
  "startTime": 1674246085922,
  "endTime": 1674246086556,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\nLABEL maintainer=\"Piasy Xu (xz4215@gmail.com)\"\n\nEXPOSE 8080 8089 3478 3033 59000-65000\n\nWORKDIR /\n\nENV GAE_VER 1.9.74\nENV GOLANG_VER 1.8.3\nENV LIBEVENT_VER 2.1.8\nENV COTURN_VER 4.5.0.7\n\nENV PUBLIC_IP 127.0.0.1\n\nRUN apt-get update -y\n\n# Deps\nRUN apt-get install --no-install-recommends -y build-essential vim git curl wget unzip python2.7 python-pil python-webtest python-pip libssl-dev openjdk-8-jdk && \\\n    rm -rf /usr/lib/python2.7/dist-packages/supervisor* && \\\n    pip install --no-cache-dir supervisor requests && \\\n    pip install --no-cache-dir git+https://github.com/bendikro/supervisord-dependent-startup && rm -rf /var/lib/apt/lists/*;\n\n# NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Golang\nENV GOLANG_TAR go$GOLANG_VER.linux-amd64.tar.gz\nRUN wget https://storage.googleapis.com/golang/$GOLANG_TAR\nRUN tar -C /usr/local -xzf $GOLANG_TAR\nENV PATH $PATH:/usr/local/go/bin\nENV GOPATH /goWorkspace\nRUN mkdir -p $GOPATH/src\n\n# Google App Engine\nENV GAE_ZIP google_appengine_$GAE_VER.zip\nRUN wget https://storage.googleapis.com/appengine-sdks/featured/$GAE_ZIP\nRUN unzip $GAE_ZIP -d /usr/local\nENV PATH $PATH:/usr/local/google_appengine\n\n# Coturn server\nRUN wget https://github.com/libevent/libevent/releases/download/release-$LIBEVENT_VER-stable/libevent-$LIBEVENT_VER-stable.tar.gz\nRUN tar xvfz libevent-$LIBEVENT_VER-stable.tar.gz && rm libevent-$LIBEVENT_VER-stable.tar.gz\nWORKDIR libevent-$LIBEVENT_VER-stable\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\nWORKDIR /\nRUN wget https://turnserver.open-sys.org/downloads/v$COTURN_VER/turnserver-$COTURN_VER.tar.gz\nRUN tar xvfz turnserver-$COTURN_VER.tar.gz && rm turnserver-$COTURN_VER.tar.gz\nWORKDIR turnserver-$COTURN_VER\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\nRUN turnadmin -a -u ninefingers -r apprtc -p youhavetoberealistic\nCOPY turnserver.conf /etc/turnserver.conf\n\n# AppRTC\nWORKDIR /\nRUN git clone https://github.com/webrtc/apprtc.git\n\nWORKDIR apprtc\n\nRUN ln -s /apprtc/src/collider/collider $GOPATH/src\nRUN ln -s /apprtc/src/collider/collidermain $GOPATH/src\nRUN ln -s /apprtc/src/collider/collidertest $GOPATH/src\nRUN go get collidermain\nRUN go install collidermain\n\nRUN npm install -g npm && npm cache clean --force;\nRUN npm install -g grunt-cli && npm cache clean --force;\n\nRUN npm install && npm cache clean --force;\nRUN grunt build\n\nWORKDIR /\n\nRUN npm install express && npm cache clean --force;\nCOPY ice.js /\nCOPY constants.py /apprtc/out/app_engine/constants.py\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY apprtc_supervisord.conf /\n\nCOPY run.sh /\nRUN chmod +x /run.sh\nCMD /run.sh\n"
}