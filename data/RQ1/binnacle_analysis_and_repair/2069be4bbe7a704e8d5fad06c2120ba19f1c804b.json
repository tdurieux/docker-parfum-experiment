{
  "startTime": 1674239192073,
  "endTime": 1674239192552,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 2,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 151
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 2,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n# Copyright (c) 2014 Mozilla Corporation\n#\n\nFROM centos:7\n\nLABEL maintainer=\"mozdef@mozilla.com\"\n\nENV NODE_VERSION 4.7.0\nENV METEOR_VERSION 1.4.2.3\nENV PYTHON_VERSION 2.7.11\nENV KIBANA_VERSION 5.6.7\nENV ES_VERSION 5.6.7\nENV ES_JAVA_VERSION 1.8.0\nENV RABBITMQ_VERSION 3.3.5\n\nENV MONGO_URL=mongodb://localhost:3002/meteor\nENV ROOT_URL=http://localhost\nENV PORT=3000\n\nCOPY docker/conf/mongodb.repo /etc/yum.repos.d/mongodb.repo\n\n# Install ES, RabbitMQ, nginx, Kibana, python, Node, Meteor\nRUN \\\n  yum clean all && \\\n  yum install -y epel-release && \\\n  yum install -y \\\n                    wget \\\n                    java-$ES_JAVA_VERSION \\\n                    glibc-devel \\\n                    gcc \\\n                    gcc-c++ \\\n                    libstdc++ \\\n                    supervisor \\\n                    libffi-devel \\\n                    zlib-devel \\\n                    cronie && \\\n  useradd -ms /bin/bash -d /opt/mozdef -m mozdef && \\\n  mkdir /opt/mozdef/envs && \\\n  curl -f -s -L https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ES_VERSION.tar.gz | tar -C /opt/mozdef -xz && \\\n  mv /opt/mozdef/elasticsearch-$ES_VERSION /opt/mozdef/envs/elasticsearch && \\\n  chown -R mozdef:mozdef /opt/mozdef/envs/elasticsearch && \\\n  mkdir /var/log/elasticsearch && \\\n  chown -R mozdef:mozdef /var/log/elasticsearch && \\\n  mkdir /var/lib/elasticsearch && \\\n  chown -R mozdef:mozdef /var/lib/elasticsearch && \\\n  rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc && \\\n  yum install -y rabbitmq-server-$RABBITMQ_VERSION && \\\n  yum install -y nginx && \\\n  mkdir /var/log/mozdef/ && \\\n  curl -f -s -L https://artifacts.elastic.co/downloads/kibana/kibana-$KIBANA_VERSION-linux-x86_64.tar.gz | tar -C /opt/mozdef/ -xz && \\\n  mv /opt/mozdef/kibana-$KIBANA_VERSION-linux-x86_64 /opt/mozdef/envs/kibana && \\\n  yum install -y mongodb-org && \\\n  curl -f -s -L https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz | tar -C /opt/mozdef/ -xz && \\\n  cd /opt/mozdef/Python-$PYTHON_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && \\\n  rm -r /opt/mozdef/Python-$PYTHON_VERSION && \\\n  cd /opt/mozdef && \\\n  yum install -y mysql-devel \\\n                    python-devel \\\n                    python-pip && \\\n  chown -R mozdef:mozdef /opt/mozdef/ && \\\n  pip install --no-cache-dir virtualenv && \\\n  cd / && \\\n  curl -f -sL -o /opt/mozdef/nodesource.rpm https://rpm.nodesource.com/pub_4.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm && \\\n  rpm -i --nosignature --force /opt/mozdef/nodesource.rpm && \\\n  yum install -y nodejs-$NODE_VERSION && \\\n  mkdir /opt/mozdef/meteor && \\\n  curl -f -sL -o /opt/mozdef/meteor.tar.gz https://static-meteor.netdna-ssl.com/packages-bootstrap/$METEOR_VERSION/meteor-bootstrap-os.linux.x86_64.tar.gz && \\\n  tar -xzf /opt/mozdef/meteor.tar.gz -C /opt/mozdef/meteor && \\\n  mv /opt/mozdef/meteor/.meteor /opt/mozdef && \\\n  rm -r /opt/mozdef/meteor && \\\n  cp /opt/mozdef/.meteor/packages/meteor-tool/*/mt-os.linux.x86_64/scripts/admin/launch-meteor /usr/bin/meteor && rm -rf /var/cache/yum\n\nUSER mozdef\nCOPY meteor /opt/mozdef/envs/mozdef/meteor\nUSER root\nRUN chown -R mozdef:mozdef /opt/mozdef/envs/mozdef/meteor\n\nCOPY docker/conf/settings.js /opt/mozdef/envs/mozdef/meteor/app/lib/settings.js\nRUN chown -R mozdef:mozdef /opt/mozdef/envs/mozdef/meteor/app/lib/settings.js\n\nUSER mozdef\nRUN \\\n  mkdir -p /opt/mozdef/envs/meteor/mozdef && \\\n  cd /opt/mozdef/envs/mozdef/meteor && \\\n  meteor npm install && \\\n  meteor build --server localhost:3002 --directory /opt/mozdef/envs/meteor/mozdef/ && \\\n  mv /opt/mozdef/envs/mozdef/meteor/node_modules /opt/mozdef/envs/meteor/mozdef/node_modules\n\n# Create python virtual environment and install dependencies\nCOPY requirements.txt /opt/mozdef/envs/mozdef/requirements.txt\nRUN \\\n  virtualenv /opt/mozdef/envs/python && \\\n  source /opt/mozdef/envs/python/bin/activate && \\\n  pip install --no-cache-dir -r /opt/mozdef/envs/mozdef/requirements.txt\n\nUSER root\nCOPY docker/conf/elasticsearch.yml /opt/mozdef/envs/elasticsearch/config/\nCOPY docker/conf/jvm.options /opt/mozdef/envs/elasticsearch/config/\nCOPY docker/conf/kibana.yml /opt/mozdef/envs/kibana/config/kibana.yml\nCOPY docker/conf/supervisor.conf /etc/supervisor/conf.d/supervisor.conf\nCOPY docker/conf/mongod.conf /etc/mongod.conf\nCOPY docker/conf/rabbitmq.config /etc/rabbitmq/\nCOPY docker/conf/enabled_plugins /etc/rabbitmq/\nCOPY docker/conf/nginx.conf /etc/nginx/nginx.conf\n\nCOPY static /opt/mozdef/envs/mozdef/static\nCOPY rest /opt/mozdef/envs/mozdef/rest\nCOPY loginput /opt/mozdef/envs/mozdef/loginput\nCOPY bot /opt/mozdef/envs/mozdef/bot\nCOPY lib /opt/mozdef/envs/mozdef/lib\nCOPY cron /opt/mozdef/envs/mozdef/cron\nCOPY alerts /opt/mozdef/envs/mozdef/alerts\nCOPY mq /opt/mozdef/envs/mozdef/mq\n\nCOPY docker/conf/loginput_index.conf /opt/mozdef/envs/mozdef/loginput/index.conf\nCOPY docker/conf/rest_index.conf /opt/mozdef/envs/mozdef/rest/index.conf\n\nCOPY docker/conf/config.py /opt/mozdef/envs/mozdef/alerts/lib/config.py\nCOPY docker/conf/cron_entries.txt /cron_entries.txt\n\nUSER mozdef\nRUN crontab /cron_entries.txt\n\nUSER root\nRUN \\\n  mkdir /opt/mozdef/envs/mozdef/data && \\\n  mkdir /opt/mozdef/envs/mozdef/config && \\\n  mkdir -p /opt/mozdef/envs/mozdef/docker/conf\n\nCOPY docker/conf/initial_setup.py /opt/mozdef/envs/mozdef/docker/conf/initial_setup.py\n\n# We have to replace the python virtualenv path until\n# https://github.com/mozilla/MozDef/issues/421 is fixed\nRUN sed -i 's|/opt/mozdef/envs/mozdef/bin/activate|/opt/mozdef/envs/python/bin/activate|g' /opt/mozdef/envs/mozdef/cron/*.sh\n\nRUN chown -R mozdef:mozdef /opt/mozdef/envs/mozdef\n\n# VOLUMES\n#  Elasticsearch\nVOLUME /var/lib/elasticsearch\n#  Mongodb\nVOLUME /var/lib/mongo\n# RabbitMQ\nVOLUME /var/lib/rabbitmq\n# MozDef data (geolite db for example)\nVOLUME /opt/mozdef/envs/mozdef/data\n\n# 80 = MozDef Web UI (meteor)\n# 3002 = Mongodb\n# 5672 = RabbitMQ\n# 15672 = RabbitMQ Management\n# 8080 = Loginput\n# 8081 = RestAPI\n# 9090 = Kibana Web UI \"localhost:9090/app/kibana\"\n# 9200 = Elasticsearch\nEXPOSE 80 3002 5672 15672 8080 8081 9090 9200\n\nCMD supervisord -n -c /etc/supervisor/conf.d/supervisor.conf\n"
}