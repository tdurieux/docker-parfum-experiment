{
  "startTime": 1674239705532,
  "endTime": 1674239705674,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:7.4\n\nADD init-app.sh /usr/local/bin/\n\n# Set up an unprivileged user so that we can drop out of root.\n# Make /home/paradrop so that npm can drop some files in there.\n# Make /opt/paradrop/app for installing the app files.\n# Add cap_net_bind_service to node so that it can bind to ports 1-1024.\nRUN useradd --system --uid 999 paradrop && \\\n    mkdir -p /home/paradrop && \\\n    chown paradrop /home/paradrop && \\\n    mkdir -p /opt/paradrop/app && \\\n    chown paradrop /opt/paradrop/app && \\\n    chmod a+s /opt/paradrop/app && \\\n    setcap 'cap_net_bind_service=+ep' /usr/local/bin/node\n\n# Install popular tools here.\nRUN npm install --global gulp-cli && npm cache clean --force;\n\n# Defang setuid/setgid binaries.\nRUN find / -perm +6000 -type f -exec chmod a-s {} \\; || true\n\nWORKDIR /opt/paradrop/app\n\n# Copy paradrop.yaml and package.json, the latter only if it exists. Then call\n# init-app.sh to install dependencies. These layers will be cached as long as\n# the requirements do not change.\nONBUILD COPY paradrop.yaml package.jso[n] /opt/paradrop/app/\nONBUILD RUN init-app.sh\n\n# Now copy the rest of the files.\nONBUILD COPY . /opt/paradrop/app/\nONBUILD RUN chown paradrop:paradrop -R /opt/paradrop/app\n\nONBUILD USER paradrop\n"
}