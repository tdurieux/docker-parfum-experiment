{
  "startTime": 1674234761561,
  "endTime": 1674234761932,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM runnable/base:1.0.0\nMAINTAINER Runnable, Inc.\n\n# Explicitly set user/group IDs for postgres\nRUN groupadd -r postgres --gid=999 \\\n  && useradd -r -g postgres --uid=999 postgres\n\n# Make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nENV LANG en_US.utf8\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y locales \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\n# Install PostgreSQL\nENV PG_MAJOR 9.3\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y postgresql-common \\\n  && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n  && apt-get install --no-install-recommends -y \\\n      postgresql-$PG_MAJOR \\\n      postgresql-contrib-$PG_MAJOR \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install PLV8 Extension\nENV PLV8_VERSION=v2.0.0 \\\n    PLV8_SHASUM=\"a3a630149342c8dd00ed890ca92f5ed0326eb781cc32d740e34ea58453b041f6  v2.0.0.tar.gz\"\n\nRUN buildDependencies=\"build-essential \\\n    ca-certificates \\\n    curl \\\n    git-core \\\n    postgresql-server-dev-$PG_MAJOR\" \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends ${buildDependencies} \\\n  && mkdir -p /tmp/build \\\n  && curl -f -o /tmp/build/${PLV8_VERSION}.tar.gz -SL \"https://github.com/plv8/plv8/archive/$PLV8_VERSION.tar.gz\" \\\n  && cd /tmp/build \\\n  && echo ${PLV8_SHASUM} | sha256sum -c \\\n  && tar -xzf /tmp/build/${PLV8_VERSION}.tar.gz -C /tmp/build/ \\\n  && cd /tmp/build/plv8-${PLV8_VERSION#?} \\\n  && make static \\\n  && make install \\\n  && strip /usr/lib/postgresql/${PG_MAJOR}/lib/plv8.so \\\n  && cd / \\\n  && apt-get clean \\\n  && apt-get remove -y  ${buildDependencies} \\\n  && apt-get autoremove -y \\\n  && rm -rf /tmp/build /var/lib/apt/lists/* && rm /tmp/build/${PLV8_VERSION}.tar.gz\n\n# Install PostGIS\nENV POSTGIS_MAJOR 2.3\n\nRUN apt-get update \\\n      && apt-get install -y --no-install-recommends \\\n           postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR \\\n           postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts \\\n           postgis \\\n      && rm -rf /var/lib/apt/lists/*\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n  && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n  && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\n\n# Ensure we have a run directory for postgres and make the group own it\nRUN mkdir -p /var/run/postgresql \\\n  && chown -R postgres /var/run/postgresql\n\nENV PGDATA /var/lib/postgresql/data\nENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH\n\n# Setup postgresql data directory and initialize database\nRUN mkdir -p \"$PGDATA\"\nRUN chmod 777 \"$PGDATA\"\nRUN chown -R postgres \"$PGDATA\"\nRUN gosu postgres initdb\n\n# Allow all clients on the server\nRUN { echo; echo \"host all all 0.0.0.0/0 trust\"; } >> \"$PGDATA/pg_hba.conf\"\n\n# Copy init script\nCOPY init.sh /\nRUN chmod +x /init.sh\n\n# Start postgresql\nEXPOSE 5432\nCMD gosu postgres postgres\n"
}