{
  "startTime": 1674249819888,
  "endTime": 1674249820038,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.5-slim\nMAINTAINER Peter Bengtsson <peterbe@mozilla.com>\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONPATH=/app/ \\\n    PORT=8000\n\nEXPOSE $PORT\n\n# add a non-privileged user for installing and running the application\n# don't use --create-home option to prevent populating with skeleton files\nRUN mkdir /app && \\\n    chown 10001:10001 /app && \\\n    groupadd --gid 10001 app && \\\n    useradd --no-create-home --uid 10001 --gid 10001 --home-dir /app app\n\n# install a few essentials and clean apt caches afterwards\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apt-transport-https build-essential curl git libpq-dev \\\n        gettext libffi-dev libmemcached-dev jed && rm -rf /var/lib/apt/lists/*;\n\n\n# Clean up apt\nRUN apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install node from NodeSource\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install Python dependencies\nCOPY requirements.txt /tmp/\n# Switch to /tmp to install dependencies outside home dir\nWORKDIR /tmp\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . /app\n\n# Switch back to home directory\nWORKDIR /app\n\n\nRUN chown -R 10001:10001 /app\n\nUSER 10001\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/bin/run.sh\"]\n\nCMD [\"web\"]\n"
}