{
  "startTime": 1674251760355,
  "endTime": 1674251760436,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux1_x86_64\nENV MAKEFLAGS=\"-j 4\"\n\n# Set up repoforge\nCOPY RPM-GPG-KEY.dag.txt /tmp/\nRUN rpm --import /tmp/RPM-GPG-KEY.dag.txt\n\n#ENV RPMFORGE_FILE \"rpmforge-release-0.5.3-1.el5.rf.x86_64.rpm\"\n#ADD \"https://repoforge.cu.be/redhat/el5/en/x86_64/dag/RPMS/${RPMFORGE_FILE}\" /tmp/${RPMFORGE_FILE}\n\n#RUN rpm -i /tmp/${RPMFORGE_FILE}\n\n# Install SDL and portmidi dependencies\nRUN yum install -y zlib-devel libjpeg-devel libX11-devel \\\n    mesa-libGLU-devel audiofile-devel \\\n    cmake java-1.7.0-openjdk-devel jpackage-utils libtiff-devel \\\n    mikmod-devel smpeg-devel giflib-devel libsndfile-devel dbus-devel \\\n    pulseaudio-libs-devel xz subversion && rm -rf /var/cache/yum\n\n# Build and install PNG\nADD libpng /png_build/\nRUN [\"bash\", \"/png_build/build-png.sh\"]\n\n# Build and install WEBP\nADD libwebp /webp_build/\nRUN [\"bash\", \"/webp_build/build-webp.sh\"]\n\n# Build and install freetype\nADD freetype /freetype_build/\nRUN [\"bash\", \"/freetype_build/build-freetype.sh\"]\n\n# Build and install ALSA library\nADD alsa /alsa_build/\nRUN [\"bash\", \"/alsa_build/build-alsa.sh\"]\n# Replace yum-installed libasound with the one we just compiled.\nRUN [\"rm\", \"/lib64/libasound.so.2.0.0\"]\nRUN [\"ln\", \"-s\", \"/usr/lib/libasound.so.2.0.0\", \"/lib64/\"]\n\n# Build and install fluidsynth\nADD fluidsynth /fluidsynth_build/\nRUN [\"bash\", \"/fluidsynth_build/build-fluidsynth.sh\"]\n\nADD ogg /ogg_build/\nRUN [\"bash\", \"/ogg_build/build-ogg.sh\"]\n\n# Build and install flac\nADD flac /flac_build/\nRUN [\"bash\", \"/flac_build/build-flac.sh\"]\n\n# Build and install SDL\nADD sdl_libs /sdl_build/\nRUN [\"bash\", \"/sdl_build/build-sdl-libs.sh\"]\nRUN [\"bash\", \"/sdl_build/build-sdl2-libs.sh\"]\n\nENV MAKEFLAGS=\n\n# Build and install SDL and portmidi\nADD portmidi /portmidi_build/\nRUN [\"bash\", \"/portmidi_build/build-portmidi.sh\"]\n"
}