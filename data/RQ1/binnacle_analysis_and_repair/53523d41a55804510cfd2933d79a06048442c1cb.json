{
  "startTime": 1674247001222,
  "endTime": 1674247001606,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 23,
        "columnStart": 57,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nCOPY scripts/cross-apt-packages.sh /scripts/\nRUN sh /scripts/cross-apt-packages.sh\n\n# Enable source repositories, which are disabled by default on Ubuntu >= 18.04\nRUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\n\nRUN apt-get update && apt-get build-dep -y clang llvm && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  gcc-multilib \\\n  libedit-dev \\\n  libgmp-dev \\\n  libisl-dev \\\n  libmpc-dev \\\n  libmpfr-dev \\\n  ninja-build \\\n  nodejs \\\n  python2.7-dev \\\n  software-properties-common \\\n  unzip \\\n  # Needed for apt-key to work:\n  dirmngr \\\n  gpg-agent && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-key adv --batch --yes --keyserver keyserver.ubuntu.com --recv-keys 74DA7924C5513486\nRUN add-apt-repository -y 'deb http://apt.dilos.org/dilos dilos2 main'\n\nWORKDIR /tmp\nCOPY dist-various-2/shared.sh /tmp/\nCOPY dist-various-2/build-cloudabi-toolchain.sh /tmp/\nRUN /tmp/build-cloudabi-toolchain.sh x86_64-unknown-cloudabi\nCOPY dist-various-2/build-fuchsia-toolchain.sh /tmp/\nRUN /tmp/build-fuchsia-toolchain.sh\nCOPY dist-various-2/build-solaris-toolchain.sh /tmp/\nRUN /tmp/build-solaris-toolchain.sh x86_64  amd64   solaris-i386\nRUN /tmp/build-solaris-toolchain.sh sparcv9 sparcv9 solaris-sparc\nCOPY dist-various-2/build-x86_64-fortanix-unknown-sgx-toolchain.sh /tmp/\n# We pass the commit id of the port of LLVM's libunwind to the build script.\n# Any update to the commit id here, should cause the container image to be re-built from this point on.\nRUN /tmp/build-x86_64-fortanix-unknown-sgx-toolchain.sh \"53b586346f2c7870e20b170decdc30729d97c42b\"\n\nCOPY dist-various-2/build-wasi-toolchain.sh /tmp/\nRUN /tmp/build-wasi-toolchain.sh\n\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n\nENV \\\n    AR_x86_64_fuchsia=x86_64-fuchsia-ar \\\n    CC_x86_64_fuchsia=x86_64-fuchsia-clang \\\n    CXX_x86_64_fuchsia=x86_64-fuchsia-clang++ \\\n    AR_aarch64_fuchsia=aarch64-fuchsia-ar \\\n    CC_aarch64_fuchsia=aarch64-fuchsia-clang \\\n    CXX_aarch64_fuchsia=aarch64-fuchsia-clang++ \\\n    AR_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-ar \\\n    CC_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-gcc \\\n    CXX_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-g++ \\\n    AR_x86_64_sun_solaris=x86_64-sun-solaris2.10-ar \\\n    CC_x86_64_sun_solaris=x86_64-sun-solaris2.10-gcc \\\n    CXX_x86_64_sun_solaris=x86_64-sun-solaris2.10-g++\n\nENV CARGO_TARGET_X86_64_FUCHSIA_AR /usr/local/bin/llvm-ar\nENV CARGO_TARGET_X86_64_FUCHSIA_RUSTFLAGS \\\n-C link-arg=--sysroot=/usr/local/x86_64-fuchsia \\\n-C link-arg=-L/usr/local/x86_64-fuchsia/lib \\\n-C link-arg=-L/usr/local/lib/x86_64-fuchsia/lib\nENV CARGO_TARGET_AARCH64_FUCHSIA_AR /usr/local/bin/llvm-ar\nENV CARGO_TARGET_AARCH64_FUCHSIA_RUSTFLAGS \\\n-C link-arg=--sysroot=/usr/local/aarch64-fuchsia \\\n-C link-arg=-L/usr/local/aarch64-fuchsia/lib \\\n-C link-arg=-L/usr/local/lib/aarch64-fuchsia/lib\n\nENV TARGETS=x86_64-fuchsia\nENV TARGETS=$TARGETS,aarch64-fuchsia\nENV TARGETS=$TARGETS,wasm32-unknown-unknown\nENV TARGETS=$TARGETS,wasm32-wasi\nENV TARGETS=$TARGETS,sparcv9-sun-solaris\nENV TARGETS=$TARGETS,x86_64-sun-solaris\nENV TARGETS=$TARGETS,x86_64-unknown-linux-gnux32\nENV TARGETS=$TARGETS,x86_64-unknown-cloudabi\nENV TARGETS=$TARGETS,x86_64-fortanix-unknown-sgx\nENV TARGETS=$TARGETS,nvptx64-nvidia-cuda\n\nENV X86_FORTANIX_SGX_LIBS=\"/x86_64-fortanix-unknown-sgx/lib/\"\n\nENV RUST_CONFIGURE_ARGS --enable-extended --enable-lld --disable-docs \\\n  --set target.wasm32-wasi.wasi-root=/wasm32-wasi\nENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n"
}