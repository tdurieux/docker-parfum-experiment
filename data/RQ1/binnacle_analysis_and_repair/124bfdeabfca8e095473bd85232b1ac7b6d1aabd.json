{
  "startTime": 1674248435720,
  "endTime": 1674248436131,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.1-cudnn7-devel\n\nLABEL maintainer=\"Sebastian Ramirez <tiangolo@gmail.com>\"\n\n# Install buildpack-deps:latest with its base image parts, as it is the base for official Python\n\n# buildpack-deps:curl https://github.com/docker-library/buildpack-deps/blob/master/stretch/curl/Dockerfile\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tnetbase \\\n\t\twget \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tgnupg \\\n\t\t\tdirmngr \\\n\t\t; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\tfi\n# End buildpack-deps:curl\n\n# buildpack-deps:scm https://github.com/docker-library/buildpack-deps/blob/master/stretch/scm/Dockerfile\n\n# procps is very common in build systems, and is a reasonably small package\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbzr \\\n\t\tgit \\\n\t\tmercurial \\\n\t\topenssh-client \\\n\t\tsubversion \\\n\t\t\\\n\t\tprocps \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# End buildpack-deps:scm\n\n# buildpack-deps:latest https://github.com/docker-library/buildpack-deps/blob/master/stretch/Dockerfile\n\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbzip2 \\\n\t\tdpkg-dev \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\timagemagick \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibdb-dev \\\n\t\tlibevent-dev \\\n\t\tlibffi-dev \\\n\t\tlibgdbm-dev \\\n\t\tlibgeoip-dev \\\n\t\tlibglib2.0-dev \\\n\t\tlibgmp-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibkrb5-dev \\\n\t\tliblzma-dev \\\n\t\tlibmagickcore-dev \\\n\t\tlibmagickwand-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibncursesw5-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibtool \\\n\t\tlibwebp-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\tlibyaml-dev \\\n\t\tmake \\\n\t\tpatch \\\n\t\tunzip \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n\t\t\\\n# https://lists.debian.org/debian-devel-announce/2016/09/msg00000.html\n\t\t$( \\\n# if we use just \"apt-cache show\" here, it returns zero because \"Can't select versions from package 'libmysqlclient-dev' as it is purely virtual\", hence the pipe to grep\n\t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \\\n\t\t\t\techo 'default-libmysqlclient-dev'; \\\n\t\t\telse \\\n\t\t\t\techo 'libmysqlclient-dev'; \\\n\t\t\tfi \\\n\t\t) \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\n# End buildpack-deps:latest\n\nENV PYTHON_VERSION=3.6\n\n# Conda, fragments from: https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/Dockerfile\n# Explicit install of Python 3.7 with:\n# /opt/conda/bin/conda install -y python=$PYTHON_VERSION && \\\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y wget bzip2 ca-certificates curl git && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda install -y python=$PYTHON_VERSION && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\n# End Conda\n\n# Tini: https://github.com/krallin/tini\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n# End Tini\n\nCOPY ./start.sh /start.sh\nRUN chmod +x /start.sh\n\nCMD [ \"/start.sh\" ]\n"
}