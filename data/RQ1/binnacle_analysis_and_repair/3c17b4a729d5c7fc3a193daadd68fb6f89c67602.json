{
  "startTime": 1674236768977,
  "endTime": 1674236769495,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 21,
        "columnEnd": 72
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\nRUN yum update -y && yum install -y --setopt=tsflags=nodocs epel-release && \\\n    yum install -y --setopt=tsflags=nodocs which gcc make bison curl-devel \\\n    expat-devel flex hiredis-devel \\\n    jansson-devel json-c-devel libevent-devel libxml2-devel \\\n    lksctp-tools-devel lm_sensors-devel mysql-devel net-snmp-devel \\\n    openldap-devel openssl-devel pcre-devel perl-ExtUtils-Embed perl-devel \\\n    postgresql-devel libconfuse-devel python-devel sqlite-devel unixODBC-devel \\\n    zlib-devel lua-devel rpm-build erlang erlang-erl_interface db4-devel \\\n    hiredis-devel GeoIP-devel libmemcached-devel mod_perl-devel glib2-devel \\\n    libpurple-devel libunistring-devel xmlrpc-c-devel iputils git \\\n    libuuid-devel systemd-devel squirrel-devel uuid-devel librabbitmq-devel \\\n    gcc-c++ autoconf automake wget mono-devel mongodb-devel mongo-c-driver \\\n    mongo-c-driver-devel radiusclient-ng-devel libmaxminddb-devel libev-devel \\\n    openssl && rm -rf /var/cache/yum\n\nENV MYSQL_ROOT_PASSWORD=ktestsrootpw\n\n# From https://github.com/CentOS/CentOS-Dockerfiles/blob/master/mariadb/centos7/Dockerfile\nRUN yum -y install --setopt=tsflags=nodocs epel-release && \\ \n    yum -y install --setopt=tsflags=nodocs mariadb-server bind-utils pwgen psmisc hostname && \\ \n    yum -y erase vim-minimal && \\\n    yum -y update && yum clean all && rm -rf /var/cache/yum\n\nWORKDIR /usr/local/src\nRUN git clone https://github.com/nils-ohlmeier/sipsak\nWORKDIR /usr/local/src/sipsak\nRUN autoreconf --install\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\nRUN mkdir -p /usr/local/src/data/GeoLite2\nRUN mkdir -p /usr/local/src/tmp\nWORKDIR /usr/local/src/tmp\nRUN wget -O GeoLite2-City.tar.gz https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\nRUN tar xvfz GeoLite2-City.tar.gz && rm GeoLite2-City.tar.gz\nRUN mv GeoLite2-City_*/*.* ../data/GeoLite2/\nWORKDIR /usr/local/src\nRUN rm -rf tmp\n\nCOPY kamailio /usr/local/src/kamailio\nWORKDIR /usr/local/src/kamailio\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 exclude_modules=\"db_cassandra db_oracle dnssec ndb_cassandra nsq osp app_java acc_radius auth_radius peering misc_radius phonenum\" cfg\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 Q=0 CC_EXTRA_OPTS=\"-Wall\" all\nRUN make JAVA_HOME=/usr/lib/jvm/java-gcj RADCLI=1 install\nWORKDIR src/modules/tls\nRUN make install-tls-cert\n\nENV DBENGINE=MYSQL\nENV DBRWPW=kamailiorw\nENV DBROOTPW=ktestsrootpw\n\n# Moved down here for convenience\nRUN mysql_install_db --user=mysql\n\nCOPY kamailio-tests /usr/local/src/kamailio-tests\nCOPY kamailio-tests/etc/excludeunits.txt.centos7 /usr/local/src/kamailio-tests/excludeunits.txt\nWORKDIR /usr/local/src/kamailio-tests\n\nENTRYPOINT [\"/usr/local/src/kamailio-tests/ktestsctl\"]\nCMD [\"-m\", \"run\"]\n"
}