{
  "startTime": 1674236717208,
  "endTime": 1674236717281,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Min version required\n#See: https://github.com/golang/go/issues/29278#issuecomment-447537558\nFROM golang:1.11.4-alpine AS build-env\n\nWORKDIR /go/src/github.com/quentin-m/etcd-cloud-operator\n\n# Install & Cache dependencies\nRUN apk add --no-cache git curl gcc musl-dev\n\nRUN apk add --no-cache --update openssl && \\\n    wget https://github.com/coreos/etcd/releases/download/v3.3.3/etcd-v3.3.3-linux-amd64.tar.gz -O /tmp/etcd.tar.gz && \\\n    mkdir /etcd && \\\n    tar xzvf /tmp/etcd.tar.gz -C /etcd --strip-components=1 && \\\n    rm /tmp/etcd.tar.gz\n\n# Force the go compiler to use modules\nENV GO111MODULE=on\n\n# We want to populate the module cache based on the go.{mod,sum} files.\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\nFROM build-env as builder\nCOPY . .\nRUN go install github.com/quentin-m/etcd-cloud-operator/cmd/operator\nRUN go install github.com/quentin-m/etcd-cloud-operator/cmd/tester\n\n# Copy ECO and etcdctl into an Alpine Linux container image.\nFROM alpine\n\nRUN apk add --no-cache ca-certificates\nCOPY --from=builder /go/bin/operator /operator\nCOPY --from=builder /go/bin/tester /tester\nCOPY --from=builder /etcd/etcdctl /usr/local/bin/etcdctl\n\n\nENTRYPOINT [\"/operator\"]\nCMD [\"-config\", \"/etc/eco/eco.yaml\"]\n"
}