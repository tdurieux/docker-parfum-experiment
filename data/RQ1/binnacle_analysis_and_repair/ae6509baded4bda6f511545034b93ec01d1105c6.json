{
  "startTime": 1674250048830,
  "endTime": 1674250049089,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 101
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y cdrdao python-gobject-2 python-musicbrainzngs python-mutagen python-setuptools \\\n  python-cddb python-requests libsndfile1-dev flac sox \\\n  libiso9660-dev python-pip swig make pkgconf \\\n  eject locales \\\n  autoconf libtool curl \\\n  && pip install --no-cache-dir pycdio==2.0.0 && rm -rf /var/lib/apt/lists/*;\n\n# libcdio-paranoia / libcdio-utils are wrongfully packaged in Debian, thus built manually\n# see https://github.com/whipper-team/whipper/pull/237#issuecomment-367985625\nRUN curl -f -o - 'https://ftp.gnu.org/gnu/libcdio/libcdio-2.0.0.tar.gz' | tar zxf - \\\n  && cd libcdio-2.0.0 \\\n  && autoreconf -fi \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-dependency-tracking --disable-cxx --disable-example-progs --disable-static \\\n  && make install \\\n  && cd .. \\\n  && rm -rf libcdio-2.0.0\n\n# Install cd-paranoia from tarball\nRUN curl -f -o - 'https://ftp.gnu.org/gnu/libcdio/libcdio-paranoia-10.2+0.94+2.tar.gz' | tar zxf - \\\n  && cd libcdio-paranoia-10.2+0.94+2 \\\n  && autoreconf -fi \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-dependency-tracking --disable-example-progs --disable-static \\\n  && make install \\\n  && cd .. \\\n  && rm -rf libcdio-paranoia-10.2+0.94+2\n\nRUN ldconfig\n\n# add user\nRUN useradd -m worker -G cdrom \\\n  && mkdir -p /output /home/worker/.config/whipper \\\n  && chown worker: /output /home/worker/.config/whipper\nVOLUME [\"/home/worker/.config/whipper\", \"/output\"]\n\n# setup locales + cleanup\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment \\\n  && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n  && echo \"LANG=en_US.UTF-8\" > /etc/locale.conf \\\n  && locale-gen en_US.UTF-8 \\\n  && apt-get clean && apt-get autoremove -y\n\n# install whipper\nRUN mkdir /whipper\nCOPY . /whipper/\nRUN cd /whipper/src && make && make install \\\n  && cd /whipper && python2 setup.py install \\\n  && rm -rf /whipper \\\n  && whipper -v\n\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US\nENV LANGUAGE=en_US.UTF-8\nENV PYTHONIOENCODING=utf-8\n\nUSER worker\nWORKDIR /output\nENTRYPOINT [\"whipper\"]\n"
}