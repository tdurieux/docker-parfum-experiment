{
  "startTime": 1674252163073,
  "endTime": 1674252163358,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN sed -i -e 's/http:\\/\\/archive.ubuntu.com\\/ubuntu\\//mirror:\\/\\/mirrors.ubuntu.com\\/mirrors.txt/' /etc/apt/sources.list && apt-get update\n\n# Install Linux toolchain (GCC).\nRUN apt-get install -y --no-install-recommends build-essential ninja-build sudo bash coreutils ca-certificates curl \\\n  && apt-get clean \\\n  && curl -f -sSL https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz \\\n     | tar -xz -C /usr/local/ --strip-components=1 && rm -rf /var/lib/apt/lists/*;\n\n# Install Windows cross-compiling toolchain (MinGW).\nRUN apt-get install -y --no-install-recommends mingw-w64 g++-mingw-w64 && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install OS X cross-compiling toolchain (clang).\n\nRUN apt-get install -y --no-install-recommends clang curl && apt-get clean && rm -rf /var/lib/apt/lists/*;\n#Build arguments\nARG osxcross_repo=\"tpoechtrager/osxcross\"\nARG osxcross_revision=\"f4ba4facae996b3b14d89eb62c0384564f7368b5\"\nARG darwin_sdk_version=\"10.11\"\nARG darwin_sdk_url=\"https://github.com/apriorit/osxcross-sdks/raw/master/MacOSX10.11.sdk.tar.xz\"\n\n# ENV available in docker image\nENV OSXCROSS_REPO=\"${osxcross_repo}\" \\\n    OSXCROSS_REVISION=\"${osxcross_revision}\" \\\n    DARWIN_SDK_VERSION=\"${darwin_sdk_version}\" \\\n    DARWIN_SDK_URL=\"${darwin_sdk_url}\" \\\n    CROSSBUILD=1\n\nRUN mkdir -p \"/tmp/osxcross\" \\\n && cd \"/tmp/osxcross\" \\\n && curl -f -sSLo osxcross.tar.gz \"https://codeload.github.com/${OSXCROSS_REPO}/tar.gz/${OSXCROSS_REVISION}\" \\\n && tar --strip=1 -xzf osxcross.tar.gz \\\n && rm -f osxcross.tar.gz \\\n && curl -f -sLo tarballs/MacOSX${DARWIN_SDK_VERSION}.sdk.tar.xz \\\n             \"${DARWIN_SDK_URL}\" \\\n && UNATTENDED=1 JOBS=4 SDK_VERSION=10.11 ./build.sh \\\n && mv target /usr/osxcross \\\n && mv tools /usr/osxcross/ \\\n && rm -rf \"/usr/osxcross/SDK/MacOSX${DARWIN_SDK_VERSION}.sdk/usr/share/man\" \\\n && true\n\n# Install dependency libraries under Linux.\nRUN apt-get install -y --no-install-recommends freeglut3-dev libudev-dev libopenal-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"\" | adduser --uid 1000 --disabled-password  --gecos \"\" aleks && adduser aleks sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nVOLUME /src\nUSER aleks\nADD build.sh /usr/bin/build.sh\n\nWORKDIR /src\nENTRYPOINT [\"build.sh\"]\n"
}