{
  "startTime": 1674250155175,
  "endTime": 1674250155262,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 0\n# Build binary file\nFROM golang:1.12.5-alpine3.9 as builder\nENV GLIDE_VERSION v0.13.2\n\nRUN wget \"https://github.com/Masterminds/glide/releases/download/${GLIDE_VERSION}/glide-${GLIDE_VERSION}-linux-amd64.tar.gz\" \\\n    && tar xf glide-${GLIDE_VERSION}-linux-amd64.tar.gz \\\n    && cp linux-amd64/glide $GOPATH/bin/ \\\n    && chmod +x $GOPATH/bin/glide && rm glide-${GLIDE_VERSION}-linux-amd64.tar.gz\n\nRUN apk add --no-cache --update git make\n\nARG PROJECT_SLUG=github.com/tuenti/secrets-manager\nCOPY glide.yaml /go/src/$PROJECT_SLUG/glide.yaml\nCOPY glide.lock /go/src/$PROJECT_SLUG/glide.lock\nWORKDIR /go/src/$PROJECT_SLUG\nRUN glide install\n\nCOPY . /go/src/$PROJECT_SLUG\nARG SECRETS_MANAGER_VERSION\nRUN make build-linux\n\n# Stage 1\n# Build actual docker image\nFROM alpine:3.9\nARG PROJECT_SLUG=github.com/tuenti/secrets-manager\nLABEL maintainer=\"sre@tuenti.com\"\nCOPY --from=builder /go/src/$PROJECT_SLUG/build/secrets-manager /secrets-manager\nRUN apk add --update --no-cache ca-certificates && rm -rf /var/cache/apk/*\nENTRYPOINT [\"/secrets-manager\"]\n"
}