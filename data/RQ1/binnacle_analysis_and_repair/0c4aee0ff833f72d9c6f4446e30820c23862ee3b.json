{
  "startTime": 1674237166699,
  "endTime": 1674237166939,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER COMPSs Support <support-compss@bsc.es>\n\n# =============================================================================\n# Configuration required to use the image for jenkins testing\n# =============================================================================\n\n# Install Essentials\nRUN apt-get update && \\\n# Install Packages\n    apt-get install -y --no-install-recommends \\\n\tgit  \\\n    vim \\\n    wget \\\n    openssh-server \\\n    sudo && \\\n# Create Jenkins User\n    useradd jenkins -m -s /bin/bash && \\\n# Add the jenkins user to sudoers\n    echo \"jenkins  ALL=(ALL)  NOPASSWD:ALL\" >> /etc/sudoers && \\\n# Enable ssh to localhost for user root & jenkins\n    yes yes | ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' > /dev/null && \\\n    cat /root/.ssh/id_rsa.pub > /root/.ssh/authorized_keys && \\\n    cp -r /root/.ssh /home/jenkins && \\\n# Make sure jenkins owns his files\n    chown -R jenkins /home/jenkins/ && \\\n    chgrp -R jenkins /home/jenkins/ && \\\n# Enable repo compression\n    git config --global core.compression 9 && \\\n# =============================================================================\n# Dependencies for building COMPSs\n# =============================================================================\n# Build dependencies\n    apt-get install -y --no-install-recommends maven \\\n# Runtime dependencies\n    openjdk-8-jdk graphviz xdg-utils \\\n# Bindings-common-dependencies\n    libtool automake build-essential \\\n# C-binding dependencies\n    libboost-all-dev libxml2-dev csh \\\n# Extrae dependencies\n    libxml2 gfortran libpapi-dev papi-tools \\\n# Misc. dependencies\n    openmpi-bin openmpi-doc libopenmpi-dev uuid-runtime curl bc \\\n# Python-binding dependencies\n    python-dev python3-dev libpython2.7 python-pip python3-pip python-setuptools python3-setuptools && \\\n    pip2 install --no-cache-dir wheel numpy==1.15.4 dill guppy decorator mpi4py==1.3.1 && \\\n    pip3 install --no-cache-dir wheel numpy==1.15.4 dill decorator mpi4py==3.0.1 && \\\n# Python-redis dependencies\n    pip2 install --no-cache-dir redis==2.10.6 redis-py-cluster && \\\n    pip3 install --no-cache-dir redis==2.10.6 redis-py-cluster && \\\n# pycompsslib dependencies\n    pip2 install --no-cache-dir scipy==1.0.0 scikit-learn==0.19.1 pandas==0.23.1 && \\\n    pip3 install --no-cache-dir scipy==1.0.0 scikit-learn==0.19.1 pandas==0.23.1 && \\\n# AutoParallel dependencies\n    apt-get install -y --no-install-recommends libgmp3-dev flex bison libbison-dev texinfo libffi-dev && \\\n    pip2 install --no-cache-dir astor sympy enum34 islpy && \\\n# Testing dependencies\n    pip3 install --no-cache-dir enum34 tabulate && \\\n# Configure user environment\n# =============================================================================\n# System configuration\n# =============================================================================\n# Add environment variables\n    echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\" >> /etc/environment && \\\n    echo \"MPI_HOME=/usr/lib/openmpi\" >> /etc/environment && \\\n    echo \"LD_LIBRARY_PATH=/usr/lib/openmpi/lib\" >> /etc/environment && \\\n    mkdir /run/sshd && \\\n    rm -rf /var/lib/apt/lists/*\n"
}