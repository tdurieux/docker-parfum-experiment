{
  "startTime": 1674236963270,
  "endTime": 1674236963406,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# Docker image prepared for ICFP'19 Artifact Evaluation.\n#\n# To build the image, run the following command in the directory containing\n# this Dockerfile: `docker build -t geo2a/selective-icfp19 .`\n#\n# To run a container interactively:\n# `docker run -it geo2a/selective-icfp19`\n#\n# We chose to use the Coq base image as a base because it includes all\n# software required for building the Coq and OCaml parts of the artefact.\n# We have augmented the image with the software required for the Haskell part.\nFROM coqorg/coq:8.9\n\nMAINTAINER Georgy Lukyanov\n\nRUN sudo apt-get update\nRUN sudo apt-get install --no-install-recommends -y wget m4 && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\n# Pull the OCaml sources from GitHub\nRUN wget -O selective-ocaml.zip https://github.com/snowleopard/selective-ocaml/archive/0.1.0.zip && \\\n    unzip selective-ocaml.zip && rm selective-ocaml.zip && \\\n    cd selective-ocaml-0.1.0 && \\\n    opam install -y dune base stdio expect_test_helpers_kernel\nRUN cd selective-ocaml-0.1.0 && eval $(opam env) && make test\nRUN mv selective-ocaml-0.1.0 selective-ocaml\n\n# Pull the Coq sources from GitHub\nRUN wget -O selective-coq.zip https://github.com/tuura/selective-theory-coq/archive/v0.1.zip\nRUN unzip selective-coq.zip && rm selective-coq.zip && mv selective-theory-coq-0.1 selective-coq\n\n# Pull the Haskell sources from GitHub\nRUN wget -O selective.zip https://github.com/snowleopard/selective/archive/v0.2.zip\nRUN unzip selective.zip && rm selective.zip\nRUN cd selective-0.2 && stack build && stack test\nRUN mv selective-0.2 selective-haskell\n\nRUN exit\n"
}