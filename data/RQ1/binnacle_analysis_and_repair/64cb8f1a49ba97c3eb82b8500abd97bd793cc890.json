{
  "startTime": 1674249757443,
  "endTime": 1674249758128,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 37,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amd64/node:10.16.0-alpine@sha256:f59303fb3248e5d992586c76cc83e1d3700f641cbcd7c0067bc7ad5bb2e5b489 AS tsbuild\n\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install && yarn cache clean;\n\nCOPY lib lib\nCOPY tsconfig.json tsconfig.json\nCOPY tsconfig.app.json tsconfig.app.json\n\nRUN yarn build\n\n\nFROM amd64/ubuntu:18.04@sha256:eb70667a801686f914408558660da753cde27192cd036148e58258819b927395\n\nLABEL maintainer=\"Rhys Arkins <rhys@arkins.net>\"\nLABEL name=\"renovate\"\nLABEL org.opencontainers.image.source=\"https://github.com/renovatebot/renovate\"\n\nWORKDIR /usr/src/app/\n\nENV DEBIAN_FRONTEND noninteractive\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y gpg curl wget unzip xz-utils git openssh-client bsdtar && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n## Gradle\n\nRUN apt-get update && apt-get install -y --no-install-recommends openjdk-8-jdk gradle && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n## Node.js\n\n# START copy Node.js from https://github.com/nodejs/docker-node/blob/master/10/jessie/Dockerfile\n\nENV NODE_VERSION 10.16.0\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n  amd64) ARCH='x64';; \\\n  ppc64el) ARCH='ppc64le';; \\\n  s390x) ARCH='s390x';; \\\n  arm64) ARCH='arm64';; \\\n  armhf) ARCH='armv7l';; \\\n  i386) ARCH='x86';; \\\n  * echo \"unsupported  architecture\"; exit 1;; \\\nesac \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys\n  && set -ex \\\n  && for key in \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n  77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n  8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n  4ED778F539E3634C779C87C6D7062848A1AB005C \\\n  A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n  B9E2F5981AA6E0CD28160D9FF13993A75599653C; \\\n  do \\\n  gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n  gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n  gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && bsdtar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n## END copy Node.js\n\n# PHP Composer\n\nRUN apt-get update && apt-get install --no-install-recommends -y php-cli php-mbstring && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV COMPOSER_VERSION=1.8.6\n\nRUN php -r \"copy('https://github.com/composer/composer/releases/download/$COMPOSER_VERSION/composer.phar', '/usr/local/bin/composer');\"\n\nRUN chmod +x /usr/local/bin/composer\n\n# Go Modules\n\nRUN apt-get update && apt-get install --no-install-recommends -y bzr && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV GOLANG_VERSION 1.12\n\nRUN wget -q -O go.tgz \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" && \\\n  tar -C /usr/local -xzf go.tgz && \\\n  rm go.tgz && \\\n  export PATH=\"/usr/local/go/bin:$PATH\"\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nENV CGO_ENABLED=0\n\n# Python\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3.7-dev python3-distutils && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -fr /usr/bin/python3 && ln /usr/bin/python3.7 /usr/bin/python3\nRUN rm -rf /usr/bin/python && ln /usr/bin/python3.7 /usr/bin/python\n\n# Pip\n\nRUN curl -f --silent https://bootstrap.pypa.io/get-pip.py | python\n\n# Set up ubuntu user\n\nRUN groupadd --gid 1000 ubuntu \\\n  && useradd --uid 1000 --gid ubuntu --shell /bin/bash --create-home ubuntu\n\nRUN chmod -R a+rw /usr\n\n# Docker client and group\n\nRUN groupadd -g 999 docker\nRUN usermod -aG docker ubuntu\n\nENV DOCKER_VERSION=18.09.2\n\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n  && tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 \\\n  -C /usr/local/bin docker/docker \\\n  && rm docker-${DOCKER_VERSION}.tgz\n\nUSER ubuntu\n\n# Pipenv\n\nENV PATH=\"/home/ubuntu/.local/bin:$PATH\"\n\nRUN pip install --no-cache-dir --user pipenv\n\n# Poetry\n\nRUN curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n\nENV PATH=\"/home/ubuntu/.poetry/bin:$PATH\"\nRUN poetry config settings.virtualenvs.create false\n\n# npm\n\nENV NPM_VERSION=6.9.0\n\nRUN npm install -g npm@$NPM_VERSION && npm cache clean --force;\n\n# Yarn\n\nENV YARN_VERSION=1.16.0\n\nRUN curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}\n\nENV PATH=\"/home/ubuntu/.yarn/bin:/home/ubuntu/.config/yarn/global/node_modules/.bin:$PATH\"\n\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production && yarn cache clean\nCOPY --from=tsbuild dist dist\nCOPY bin bin\nCOPY data data\n\nENTRYPOINT [\"node\", \"/usr/src/app/dist/renovate.js\"]\nCMD []\n"
}