{
  "startTime": 1674244327293,
  "endTime": 1674244327778,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER Julius Loman <lomo@kyberia.net>\n\nARG INSTALL_SOURCE=\"http://netcool.install:8000\"\nARG INSTALL_FILE_WAS=\"WAS_V8.5.5.9_FOR_JSM_FOR_LINUX_ML.zip\"\nARG INSTALL_FILE_JAZZ=\"JAZZ_FOR_SM_1.1.3.0_FOR_LNX.zip\"\nARG INSTALL_FILE_WEBGUI=\"OMNIbus-v8.1-WebGUI.linux64.zip\"\nARG INSTALL_FILE_WEBGUI_FP=\"OMNIbus-v8.1.0-WebGUI-FP11-IM-Extensions-linux64-UpdatePack.zip\"\nARG INSTALL_FILE_TCR=\"ITCR_3.1.3.0_FOR_LINUX.tar.gz\"\nARG INSTALL_FILE_ITNM=\"ITNP_IP_LIN.zip\"\nARG INSTALL_FILE_ITNM_FP=\"4.2.0-TIV-ITNMIP-Linux-FP0002.zip\"\nARG INSTALL_TMP=/tmp/install\nARG INSTALL_OBJECTSERVER_PRIMARY_HOST=\"localhost\"\nARG INSTALL_OBJECTSERVER_PRIMARY_PORT=4100\nARG INSTALL_OBJECTSERVER_PRIMARY_NAME=\"NCOMS\"\nARG INSTALL_OBJECTSERVER_USER=\"root\"\nARG INSTALL_OBJECTSERVER_PASSWORD=\"\"\nARG INSTALL_TCR_DB_NAME=\"TCR3\"\nARG INSTALL_TCR_DB_CONN_URL=\"jdbc:db2://127.0.0.1:50000/TCR3\"\nARG INSTALL_TCR_DB_USER_NAME=\"db2inst1\"\nARG INSTALL_TCR_DB_PASSWORD=\"db2inst1\"\nARG INSTALL_TCR_DB_JDBC_HOST_NAME=\"127.0.0.1\"\nARG INSTALL_TCR_DB_JDBC_PORT=\"50000\"\n\nENV OBJECTSERVER_PRIMARY_HOST=localhost OBJECTSERVER_PRIMARY_PORT=4100 OBJECTSERVER_PRIMARY_NAME=NCOMS OBJECTSERVER_USER=root OBJECTSERVER_PASSWORD=\"\" SMADMIN_USERNAME=\"smadmin\" SMADMIN_PASSWORD=\"smadmin\" TCR_CS_DB_ADDRESS=\"127.0.0.1:50000\" TCR_CS_DB_USER=\"db2inst1\" TCR_CS_DB_PASSWORD=\"db2inst1\" TCR_CS_DB_NAME=\"TCR3\"\n\n# Add dependencies\nRUN curl -f -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    yum --setopt=tsflags=nodocs -y localinstall epel-release-latest-7.noarch.rpm && \\\n    rm epel-release-latest-7.noarch.rpm && \\\n    yum --setopt=tsflags=nodocs -y update && \\\n    yum --setopt=tsflags=nodocs -y install \\\n    tar \\\n    hostname \\\n    unzip \\\n    audit-libs \\\n    fontconfig \\\n    freetype \\\n    compat-libstdc++-33.i686 \\\n    glibc.i686 \\\n    gtk2 \\\n    libICE \\\n    libSM \\\n    libX11 \\\n    libX11.i686 \\\n    libXau \\\n    libXcursor \\\n    libXext \\\n    libXft \\\n    libXmu \\\n    libXmu.i686 \\\n    libXp \\\n    libXpm \\\n    libXrender \\\n    libXt \\\n    libXt.i686 \\\n    libXtst \\\n    libstdc++.i686 \\\n    libgcc.i686 \\\n    libjpeg-turbo \\\n    libpng12 \\\n    motif \\\n    motif.i686 \\\n    dejavu-fonts-common \\\n    dejavu-sans-fonts \\\n    expat \\\n    glibc \\\n    libgcc \\\n    libidn \\\n    libstdc++ \\\n    libuuid \\\n    libxcb \\\n    nss-softokn-freebl \\\n    pam \\\n    zlib \\\n    nss-softokn-freebl.i686 \\\n    xmlstarlet \\\n    compat-libstdc++-33 && \\\n    rm -rf /var/cache/yum/* && yum clean all\n\nCOPY response_was_jazz.xml response_webgui.xml response_itnm.xml docker-entrypoint-functions.sh docker-entrypoint.sh $INSTALL_TMP/\n\nRUN mkdir -p /opt/IBM $INSTALL_TMP/{was,jazz,webgui,webgui-fp,tcr,itnm,itnm-fp} /docker-entrypoint.d /docker-init.d && \\\n    useradd -c \"Netcool user\" netcool && mkdir -p /db $INSTALL_TMP && \\\n    mv $INSTALL_TMP/docker-entrypoint* / && \\\n    chown -R netcool:netcool $INSTALL_TMP /opt/IBM /docker-entrypoint.d /docker-init.d /docker-entrypoint.sh /docker-entrypoint-functions.sh  && \\\n    chmod +x /docker-entrypoint.sh /docker-entrypoint-functions.sh\n\nUSER netcool\n\nRUN cd /tmp/install && \\\n# Fetch installation media\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_JAZZ\" && unzip -q -d \"$INSTALL_TMP/jazz\" \"$INSTALL_FILE_JAZZ\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_WAS\" && unzip -q -d \"$INSTALL_TMP/was\" \"$INSTALL_FILE_WAS\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI\" && unzip -q -d \"$INSTALL_TMP/webgui\" \"$INSTALL_FILE_WEBGUI\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI_FP\" && unzip -q -d \"$INSTALL_TMP/webgui-fp\" \"$INSTALL_FILE_WEBGUI_FP\" && \\\n    curl -f \"$INSTALL_SOURCE/$INSTALL_FILE_TCR\" | tar xzv -C \"$INSTALL_TMP/tcr\" && \\\n#    curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM\"      && unzip -q -d \"$INSTALL_TMP/itnm\" \"$INSTALL_FILE_ITNM\" && \\\n#    curl -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM_FP\"   && unzip -q -d \"$INSTALL_TMP/itnm-fp\" \"$INSTALL_FILE_ITNM_FP\" && \\\n    rm -rf \"$INSTALL_FILE_WAS\" \"$INSTALL_FILE_JAZZ\" \"$INSTALL_FILE_WEBGUI\" \"$INSTALL_FILE_WEBGUI_FP\" \"$INSTALL_FILE_ITNM\" \"$INSTALL_FILE_ITNM_FP\" && \\\n# Prepary variables\n    . /docker-entrypoint-functions.sh && \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ] && OBJECTSERVER_PRIMARY_HOST=\"$INSTALL_OBJECTSERVER_PRIMARY_HOST\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ] && export OBJECTSERVER_PRIMARY_PORT=\"$INSTALL_OBJECTSERVER_PRIMARY_PORT\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ] && export OBJECTSERVER_PRIMARY_NAME=\"$INSTALL_OBJECTSERVER_PRIMARY_NAME\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_USER\" ] && export OBJECTSERVER_USER=\"$INSTALL_OBJECTSERVER_USER\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PASSWORD\" ] && export OBJECTSERVER_PASSWORD=\"$INSTALL_OBJECTSERVER_PASSWORD\";}; \\\n    cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" && \\\n    INSTALL_TCR_DB_PASSWORD=\"$(tools/imutilsc encryptString \"$INSTALL_TCR_DB_PASSWORD\")\" && \\\n# Edit response file\n    xmlstarlet ed \\\n-u \"/agent-input/profile[@id='Core services in Jazz for Service Management']/data[@key='user.DB_NAME,com.ibm.tivoli.tacct.psc.install.reporting.services']/@value\" -v \"$INSTALL_TCR_DB_NAME\" \\\n-u \"/agent-input/profile[@id='Core services in Jazz for Service Management']/data[@key='user.DB_CONN_URL,com.ibm.tivoli.tacct.psc.install.reporting.services']/@value\" -v \"$INSTALL_TCR_DB_CONN_URL\" \\\n-u \"/agent-input/profile[@id='Core services in Jazz for Service Management']/data[@key='user.DB_USER_NAME,com.ibm.tivoli.tacct.psc.install.reporting.services']/@value\" -v \"$INSTALL_TCR_DB_USER_NAME\" \\\n-u \"/agent-input/profile[@id='Core services in Jazz for Service Management']/data[@key='user.DB_PASSWORD,com.ibm.tivoli.tacct.psc.install.reporting.services']/@value\" -v \"$INSTALL_TCR_DB_PASSWORD\" \\\n-u \"/agent-input/profile[@id='Core services in Jazz for Service Management']/data[@key='user.DB_JDBC_HOST_NAME,com.ibm.tivoli.tacct.psc.install.reporting.services']/@value\" -v \"$INSTALL_TCR_DB_JDBC_HOST_NAME\" \\\n-u \"/agent-input/profile[@id='Core services in Jazz for Service Management']/data[@key='user.DB_JDBC_PORT,com.ibm.tivoli.tacct.psc.install.reporting.services']/@value\" -v \"$INSTALL_TCR_DB_JDBC_PORT\" \"$INSTALL_TMP/response_was_jazz.xml\" >install.xml && \\\n# Install JazzSM\n    ./userinstc --launcher.ini user-silent-install.ini  -acceptLicense && \\\n# Fix JAVA_HOME cripled by TCR\n    sed -i -e 's/^JAVA_HOME=.*/JAVA_HOME=$WAS_HOME\\/java_1.7_64\\/jre/' /opt/IBM/JazzSM/reporting/bin/setTCRenv.sh && \\\n# Install WebGUI\n    cp \"$INSTALL_TMP/response_webgui.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" && \\\n    cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" && ./userinstc --launcher.ini user-silent-install.ini  -acceptLicense && \\\n# Backup and configure temparary OMNIbus Connection\n    backupNCWDataSources && stopJazzSM && configureNCWDataSources && startJazzSM && \\\n## Install ITNM GUI\n#    cp \"$INSTALL_TMP/response_itnm.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" && \\\n#    cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" && ./userinstc --launcher.ini user-silent-install.ini  -acceptLicense && \\\n# Stop and cleanup\n    stopJazzSM && restoreNCWDataSources && \\\n    rm -rf /tmp/install /opt/IBM/IBMIMShared /home/netcool/var\n\nENTRYPOINT /docker-entrypoint.sh\n"
}