{
  "startTime": 1674248327481,
  "endTime": 1674248327560,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6 as builder\n\n#\n# Download the JDK 11 for Alpine Linux distribution\n#\nARG OPENJDK11_ALPINE_URL=https://download.java.net/java/early_access/alpine/11/binaries/openjdk-11-ea+11_linux-x64-musl_bin.tar.gz\nRUN apk update \\\n  && apk add --no-cache ca-certificates wget \\\n  && mkdir -p /usr/lib/jvm \\\n  && wget -c -O- $OPENJDK11_ALPINE_URL \\\n    | tar -zxC /usr/lib/jvm\n\nENV LANG C.UTF-8\nENV JAVA_HOME /usr/lib/jvm/jdk-11\nENV PATH=$PATH:$JAVA_HOME/bin\n\nWORKDIR /app\nRUN mkdir -p /app/src\nCOPY ./src /app/src\n\n#\n# Compile the Java source code to class files\n#\nRUN mkdir -p build/classes/main\nRUN javac -d build/classes/main \\\n    src/main/java/module-info.java \\\n    src/main/java/fi/linuxbox/http/Main.java\n\n#\n# Package the class files as a modular JAR\n#\nRUN mkdir -p build/jmods\nRUN jar --create --file build/jmods/http-server-1.0-SNAPSHOT.jar \\\n    --main-class fi.linuxbox.http.Main \\\n    -C build/classes/main .\n\n#\n# Create an optimized custom runtime\n#\nENV TARGET_JMODS=$JAVA_HOME/jmods\nRUN jlink --module-path build/jmods:$TARGET_JMODS \\\n          --strip-debug --vm server --compress 2 \\\n          --class-for-name \\\n          --no-header-files --no-man-pages \\\n          --dedup-legal-notices=error-if-not-same-content \\\n          --add-modules http.server \\\n          --output build/jre/native\n\n#\n# Builder Stage is all done\n#\nFROM alpine:3.6\n\nCOPY --from=builder /app/build/jre/native /app\n\nCMD [\"/app/bin/java\", \"-m\", \"http.server\"]\n"
}