{
  "startTime": 1674240905004,
  "endTime": 1674240905463,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on manual compile instructions at http://wiki.nginx.org/HttpLuaModule#Installation\nFROM ubuntu:14.04\nENV VER_NGINX_DEVEL_KIT=0.3.0\nENV VER_LUA_NGINX_MODULE=0.10.10\nENV VER_NGINX=1.13.3\nENV VER_LUAJIT=2.0.4\nENV NGINX_DEVEL_KIT ngx_devel_kit-${VER_NGINX_DEVEL_KIT}\nENV LUA_NGINX_MODULE lua-nginx-module-${VER_LUA_NGINX_MODULE}\nENV NGINX_ROOT=/nginx\nENV WEB_DIR ${NGINX_ROOT}/html\nENV LUAJIT_LIB /usr/local/lib\nENV LUAJIT_INC /usr/local/include/luajit-2.0\nRUN apt-get update && apt-get --force-yes --no-install-recommends -qq -y install \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    libpcre3 \\\n    libpcre3-dev \\\n    libssl-dev \\\n    lua-cjson \\\n    m4 \\\n    rsyslog \\\n    wget \\\n    zlib1g-dev \\\n    luarocks && rm -rf /var/lib/apt/lists/*;\n# ***** DOWNLOAD AND UNTAR *****\nRUN luarocks install lustache\nRUN luarocks install luasocket\nRUN curl -f -sSL https://nginx.org/download/nginx-${VER_NGINX}.tar.gz | tar xzf -\nRUN curl -f -sSL https://luajit.org/download/LuaJIT-${VER_LUAJIT}.tar.gz | tar xzf -\nRUN curl -f -sSL https://github.com/simpl/ngx_devel_kit/archive/v${VER_NGINX_DEVEL_KIT}.tar.gz | tar xzf -\nRUN curl -f -sSL https://github.com/openresty/lua-nginx-module/archive/v${VER_LUA_NGINX_MODULE}.tar.gz | tar xzf -\nRUN curl -f -sSL https://ftp.gnu.org/gnu/nettle/nettle-3.2.tar.gz | tar xzf -\nRUN curl -f -sSL https://github.com/pintsized/lua-resty-http/archive/v0.13.tar.gz | tar xzf -\nRUN curl -f -sSL https://github.com/bungle/lua-resty-nettle/archive/v0.95.tar.gz | tar -C /usr/local --strip-components 1 -xzf - && mkdir -p /usr/local/lib/lua/resty && mv /usr/local/lib/resty/* /usr/local/lib/lua/resty\n# Install CPAN dependencies for unit tests\nRUN curl -f -sSL https://cpanmin.us | perl - App::cpanminus\nRUN cpanm --quiet --notest --skip-satisfied Test::Nginx\nRUN cpanm --quiet --notest --skip-satisfied CryptX\n# ***** BUILD FROM SOURCE *****\n# LuaJIT\nWORKDIR /LuaJIT-${VER_LUAJIT}\nRUN make && make install\n# Nginx with LuaJIT\nWORKDIR /nginx-${VER_NGINX}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${NGINX_ROOT} --with-ld-opt=\"-Wl,-rpath,${LUAJIT_LIB}\" --add-module=/${NGINX_DEVEL_KIT} --add-module=/${LUA_NGINX_MODULE} --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module\nRUN make && make install\nRUN ln -s ${NGINX_ROOT}/sbin/nginx /usr/local/sbin/nginx\n# Lua dependency packages\nRUN ln -s /usr/lib/x86_64-linux-gnu/lua/5.1/cjson.so /usr/local/lib/lua/5.1/cjson.so\nWORKDIR /lua-resty-http-0.13\nRUN make install\n# Install GNU Nettle\nWORKDIR /nettle-3.2\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n# PerimeterX Lua package\nRUN mkdir -p /tmp/px\nCOPY Makefile /tmp/px/\nCOPY lib /tmp/px/lib\nCOPY t   /tmp/t\nRUN make -C /tmp/px install\n# ***** MISC *****\nWORKDIR ${WEB_DIR}\nEXPOSE 80\nEXPOSE 8080\n# ***** CLEANUP *****\nRUN rm -rf \\\n    /nginx-${VER_NGINX} \\\n    /LuaJIT-${VER_LUAJIT} \\\n    /${NGINX_DEVEL_KIT} \\\n    /${LUA_NGINX_MODULE} \\\n    /lua-resty-http-0.13 \\\n    /nettle-3.2\nCOPY nginx.conf /nginx/conf/nginx.conf\n# forward request and error logs to docker log collector\nRUN mkdir -p /var/log/nginx\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n# This is the default CMD used by nginx:1.9.2 image\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}