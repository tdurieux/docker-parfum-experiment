{
  "startTime": 1674251677556,
  "endTime": 1674251677715,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\nMAINTAINER Courville Software <software@courville.org>\n\nENV DEBIAN_FRONTEND noninteractive\nENV USER root\nRUN echo \"deb http://ftp.de.debian.org/debian stretch main\" >> /etc/apt/sources.list\nRUN dpkg --add-architecture i386\nRUN apt update && \\\n    apt install --no-install-recommends -y locales sudo wget unzip git curl build-essential openjdk-8-jdk python pkg-config meson nasm && \\\n    apt clean autoclean && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.UTF-8\nRUN dpkg-reconfigure locales\n\n# Download and install repo\nRUN curl -f https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo\nRUN chmod a+x /usr/local/bin/repo\n\nRUN git config --global user.name \"Courville Software\"\nRUN git config --global user.email \"software@courville.org\"\n\nENV SDK_URL=\"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip\" \\\n    ANDROID_HOME=\"/opt/android-sdk\" \\\n    ANDROID_SDK=\"/opt/android-sdk\" \\\n    ANDROID_NDK=\"/opt/android-ndk\" \\\n    NDK_VERSION=r19-beta2 \\\n    SDK_VERSION=4333796 \\\n    GRADLE_VERSION=4.6 \\\n    ANDROID_BUILD_TOOLS_VERSION=28.0.3 \\\n    ANDROID_VERSION=27\n# Download Android SDK\nRUN mkdir -p \"$ANDROID_HOME\" $HOME/.android \\\n    && cd \"$ANDROID_HOME\" \\\n    && curl -f -o sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${SDK_VERSION}.zip \\\n    && unzip sdk.zip \\\n    && rm sdk.zip \\\n    && yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses --sdk_root=${ANDROID_HOME}\n# Install Android Build Tool and Libraries\nRUN $ANDROID_HOME/tools/bin/sdkmanager --update\nRUN yes | $ANDROID_HOME/tools/bin/sdkmanager \"build-tools;${ANDROID_BUILD_TOOLS_VERSION}\" \\\n    \"platforms;android-${ANDROID_VERSION}\" \\\n    \"platform-tools\" --sdk_root=${ANDROID_HOME}\nENV PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\n# Install Gradle\nRUN wget https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-all.zip\nRUN mkdir /opt/gradle\nRUN unzip gradle-${GRADLE_VERSION}-all.zip -d /opt/gradle\nENV PATH=${PATH}:/opt/gradle/gradle-${GRADLE_VERSION}/bin\n# Install NDK\nRUN wget https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip\nRUN unzip android-ndk-${NDK_VERSION}-linux-x86_64.zip -d /opt && mv /opt/android-ndk-${NDK_VERSION} ${ANDROID_NDK}\nENV PATH=${PATH}:${ANDROID_NDK}\n\nRUN mkdir /nova && cd /nova && repo init -u https://github.com/nova-video-player/aos-AVP -b nova && repo sync -j 4\nWORKDIR /nova\n\n#ENTRYPOINT [\"make\"]\n\nUSER root\n"
}