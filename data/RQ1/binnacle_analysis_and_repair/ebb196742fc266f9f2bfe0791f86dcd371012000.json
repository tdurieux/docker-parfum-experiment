{
  "startTime": 1674244339823,
  "endTime": 1674244340052,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL maintainer=\"yutopp <yutopp+wandbox-docker@gmail.com>\"\n\nARG LLVM_VERSION=5.0.0\nARG OCAML_VERSION=4.04.2\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -qq -y \\\n      aspcud \\\n      cmake \\\n      curl \\\n      g++ \\\n      git \\\n      libffi-dev \\\n      m4 \\\n      ocaml \\\n      pkg-config \\\n      python \\\n      unzip \\\n      wget && \\\n    apt-get clean -qq -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN cd /root && \\\n    wget https://www.llvm.org/releases/$LLVM_VERSION/llvm-$LLVM_VERSION.src.tar.xz && \\\n    echo \"e35dcbae6084adcf4abb32514127c5eabd7d63b733852ccdb31e06f1373136da  *llvm-$LLVM_VERSION.src.tar.xz\" | sha256sum -c && \\\n    tar Jxfv llvm-$LLVM_VERSION.src.tar.xz && \\\n    rm llvm-$LLVM_VERSION.src.tar.xz && \\\n    cd llvm-$LLVM_VERSION.src && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -G 'Unix Makefiles' \\\n          -DCMAKE_INSTALL_PREFIX=/opt/llvm \\\n          -DCMAKE_BUILD_TYPE=Release \\\n          -DLLVM_TARGETS_TO_BUILD=\"X86\" \\\n          -DLLVM_TARGETS_WITH_JIT=\"X86\" \\\n          -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=\"WebAssembly\" \\\n          -DLLVM_ENABLE_TERMINFO=OFF \\\n          -DLLVM_ENABLE_ZLIB=OFF \\\n          -DLLVM_BUILD_TOOLS=clang,llc \\\n          -DLLVM_INCLUDE_UTILS=OFF \\\n          -DLLVM_BUILD_UTILS=OFF \\\n          -DLLVM_INCLUDE_EXAMPLES=OFF \\\n          -DLLVM_INCLUDE_TESTS=OFF \\\n          -DLLVM_INCLUDE_GO_TESTS=OFF \\\n          -DLLVM_INCLUDE_DOCS=OFF \\\n          -DLLVM_BUILD_DOCS=OFF \\\n          .. && \\\n    cmake --build . --target package/fast -- -j2 && \\\n    cmake --build . --target llc/fast -- -j2 && \\\n    cmake --build . --target llvm-config/fast -- -j2 && \\\n    cmake --build . --target install && \\\n    cp bin/llvm-config /opt/llvm/bin/. && \\\n    cp bin/llc /opt/llvm/bin/. && \\\n    rm -r /root/llvm-$LLVM_VERSION.src\nENV PATH=/opt/llvm/bin:$PATH\n\nCOPY patches /patches\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh -O - | sh -s /usr/local/bin && \\\n    OPAMKEEPBUILDDIR=false && \\\n    OPAMBUILDDOC=false && \\\n    OPAMDOWNLOADJOBS=1 \\\n    opam init -y -a --comp=$OCAML_VERSION && \\\n    opam install \\\n      batteries \\\n      bisect_ppx \\\n      ctypes-foreign \\\n      loga \\\n      menhir \\\n      ocamlgraph \\\n      ocveralls \\\n      omake.0.10.2 \\\n      ounit \\\n      stdint && \\\n    # BEGIN: adhoc for WebAssembly\n    opam install llvm.$LLVM_VERSION --deps-only && \\\n    mkdir opam_source && \\\n    cd opam_source && \\\n    opam source llvm.$LLVM_VERSION && \\\n    cd llvm.$LLVM_VERSION && \\\n    # patch install.sh /patches/opam_llvm.5.0.0_install.sh.patch && \\\n    # patch opam /patches/opam_llvm.5.0.0_opam.patch && \\\n    opam pin add llvm-custom . --kind=path && \\\n    # END: adhoc for WebAssembly\n    cp ~/.opam/$OCAML_VERSION/lib/llvm/static/*.cmxa ~/.opam/$OCAML_VERSION/lib/llvm/. && \\\n    rm ~/.opam/archives/* && \\\n    rm ~/.opam/repo/default/archives/* && \\\n    rm ~/.opam/$OCAML_VERSION/bin/*.byte && \\\n    rm -r ~/.opam/repo/default/packages/* && \\\n    rm -r ~/.opam/repo/default/compilers/*\n"
}