{
  "startTime": 1674243808694,
  "endTime": 1674243808912,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 123,
        "columnEnd": 134
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 102,
        "columnEnd": 113
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# fuf Dockerfile\n# Derived from https://github.com/melhadad/cl-jupyter-docker\nFROM python:3.6\nENV HOME /root\n\nLABEL version=\"5.4\"\nLABEL description=\"A FUF/SURGE Dockerfile built on top of cl-jupyter - providing a Jupyter notebook interface with sbcl 1.3.13 / python 3.6\"\n\nMAINTAINER Michael Elhadad <michael.elhadad@gmail.com>\n\n# -----------------------\n# zeromq with libsodium for encrypted communication\n# https://github.com/ogomezm/zeromq-container\n# MAINTAINER Oscar GÃ³mez\nRUN apt-get update && apt-get install --no-install-recommends -y git build-essential libtool autoconf automake pkg-config unzip libkrb5-dev curl wget && rm -rf /var/lib/apt/lists/*;\nRUN cd /tmp && git clone git://github.com/jedisct1/libsodium.git && cd libsodium && git checkout e2a30a && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make check && make install && ldconfig\nRUN cd /tmp && git clone --depth 1 git://github.com/zeromq/libzmq.git && cd libzmq && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\nRUN cd /tmp/libzmq && make install && ldconfig\nRUN rm /tmp/* -rf\n\n# -----------------------\n# sbcl with quicklist\nRUN wget https://prdownloads.sourceforge.net/sbcl/sbcl-1.3.13-x86-64-linux-binary.tar.bz2 -O /tmp/sbcl.tar.bz2 && \\\n    mkdir /tmp/sbcl && \\\n    tar jxvf /tmp/sbcl.tar.bz2 --strip-components=1 -C /tmp/sbcl/ && \\\n    cd /tmp/sbcl && \\\n    sh install.sh && \\\n    cd /tmp \\\r\n    rm -rf /tmp/sbcl/ && rm /tmp/sbcl.tar.bz2\n\nWORKDIR /tmp/\nRUN wget https://beta.quicklisp.org/quicklisp.lisp\nRUN sbcl --non-interactive --load quicklisp.lisp --eval \"(quicklisp-quickstart:install)\" --eval \"(setq  ql-util::*do-not-prompt* t)\" --eval \"(ql:add-to-init-file)\"\n\n# -----------------------\n# cl-jupyter\nRUN pip3 install --no-cache-dir ipython\nRUN pip3 install --no-cache-dir jupyter\n\nWORKDIR /root\nRUN cd /root && git clone https://github.com/fredokun/cl-jupyter.git && cd cl-jupyter && python3 ./install-cl-jupyter.py && sbcl --load ./cl-jupyter.lisp\n\n# -----------------------\n# fuf and surge\nWORKDIR /root/quicklisp/local-projects\nRUN git clone https://github.com/melhadad/fuf.git\nRUN echo \"(ql:quickload :surge22) (in-package :fug5)\" >> /root/.sbclrc\n\nWORKDIR /root\nEXPOSE 8888\nCMD jupyter notebook --no-browser --NotebookApp.token='' --ip '*' --port 8888\n\n"
}