{
  "startTime": 1674250759468,
  "endTime": 1674250759592,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:latest-devel\n\nLABEL maintainer=\"Clayne Robison<clayne.b.robison@intel.com>\"\n\n# These arguments are parameterized. Use --build-args to override.\nARG TF_BRANCH=r1.9\nARG WHL_DIR=/whl\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        golang \\\n        vim \\\n        emacs \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip --no-cache-dir install --upgrade \\\n        pip setuptools\n\nRUN pip --no-cache-dir install wheel\n\n# Download and build TensorFlow.\nWORKDIR /\nRUN rm -rf tensorflow && \\\n    git clone https://github.com/tensorflow/tensorflow.git && \\\n    cd tensorflow && \\\n    git checkout ${TF_BRANCH}\nWORKDIR /tensorflow\n\n# Configure the build for CPU with MKL by accepting default build options and\n# setting library locations\nENV CI_BUILD_PYTHON=python \\\n   LD_LIBRARY_PATH=${LD_LIBRARY_PATH} \\\n    PYTHON_BIN_PATH=/usr/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n    CC_OPT_FLAGS='-march=native' \\\n    TF_NEED_JEMALLOC=0 \\\n    TF_NEED_GCP=1 \\\n    TF_NEED_CUDA=0 \\\n    TF_NEED_HDFS=0 \\\n    TF_NEED_S3=1 \\\n    TF_NEED_OPENCL=0 \\\n    TF_NEED_GDR=0 \\\n    TF_ENABLE_XLA=0 \\\n    TF_NEED_VERBS=0 \\\n    TF_NEED_MPI=0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\n# Build and Install TensorFlow.\n# The 'mkl' option builds with Intel(R) Math Kernel Library (MKL), which detects\n# the platform it is currently running on and takes appropriately optimized\n# paths. The -march=native option is for code that is not in MKL, and assumes\n# this container will be run on the same architecture on which it is built.\nRUN LD_LIBRARY_PATH=${LD_LIBRARY_PATH} \\\n    bazel build --config=mkl \\\n                --config=\"opt\" \\\n                --copt=\"-march=broadwell\" \\\n                --copt=\"-O3\" \\\n                //tensorflow/tools/pip_package:build_pip_package && \\\n    mkdir ${WHL_DIR} && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package ${WHL_DIR}\n\n# Clean up Bazel cache when done, but leave the whl.\n# This will upgrade the default Tensorflow version with the Intel MKL version\nRUN pip --no-cache-dir install --upgrade ${WHL_DIR}/tensorflow-*.whl && \\\n    rm -rf /root/.cache\n\nWORKDIR /root\n\n#add welcome message with instructions\n\nRUN echo '[ ! -z \"$TERM\" -a -r /etc/motd ] && cat /etc/issue && cat /etc/motd' \\\n\t>> /etc/bash.bashrc \\\n\t; echo \"\\\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\\\n|\t\t\t\t\t\t\t\t\\n\\\n| Docker container running Ubuntu\t\t\t\t\\n\\\n| with TensorFlow ${TF_BRANCH} optimized for CPU\t\t\\n\\\n| with Intel(R) MKL\t\t\t\t\t\t\\n\\\n|\t\t\t\t\t\t\t\t\\n\\\n||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\\\n\\n \"\\\n\t> /etc/motd\n"
}