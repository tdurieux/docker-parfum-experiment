{
  "startTime": 1674241301031,
  "endTime": 1674241301228,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.8.0\n\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev && rm -rf /var/lib/apt/lists/*; \\\n        # libjasper-dev \\ this library seems to not be installable at the moment\n        libavformat-dev \\\n        libhdf5-dev \\\n        libpq-dev\n\nWORKDIR /\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget && wget https://github.com/opencv/opencv/archive/3.4.1.zip \\\n    && unzip 3.4.1.zip \\\n    && mkdir /opencv-3.4.1/cmake_binary \\\n    && cd /opencv-3.4.1/cmake_binary \\\n    && cmake -DBUILD_TIFF=ON \\\n    -DBUILD_opencv_java=OFF \\\n    -DWITH_CUDA=OFF \\\n    -DENABLE_AVX=ON \\\n    -DWITH_OPENGL=ON \\\n    -DWITH_OPENCL=ON \\\n    -DWITH_IPP=ON \\\n    -DWITH_TBB=ON \\\n    -DWITH_EIGEN=ON \\\n    -DWITH_V4L=ON \\\n    -DBUILD_TESTS=OFF \\\n    -DBUILD_PERF_TESTS=OFF \\\n    -DCMAKE_BUILD_TYPE=RELEASE \\\n    -DCMAKE_INSTALL_PREFIX=$(python -c \"import sys; print(sys.prefix)\") \\\n    -DPYTHON_EXECUTABLE=$(which python) \\\n    -DPYTHON_INCLUDE_DIR=$(python -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n    -DPYTHON_PACKAGES_PATH=$(python -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") .. \\\n    && make install \\\n    && rm /3.4.1.zip \\\n    && rm -r /opencv-3.4.1 && rm -rf /var/lib/apt/lists/*;\n\n\nRUN pip install --no-cache-dir keras==2.1.6 grpcio-tools==1.12.0\n\nRUN mkdir -p /app\nRUN mkdir -p /root/.keras/models && wget https://github.com/fchollet/deep-learning-models/releases/download/v0.1/vgg16_weights_tf_dim_ordering_tf_kernels.h5 -O /root/.keras/models/vgg16_weights_tf_dim_ordering_tf_kernels.h5\n\n\n\nRUN mkdir -p /app/proto\nCOPY classification.proto /app/proto\nCOPY *.py /app/\nRUN python -m grpc_tools.protoc -I/app/proto --python_out=/app --grpc_python_out=/app /app/proto/classification.proto\n\nCMD [\"python\", \"/app/classification_server.py\"]\n\n"
}