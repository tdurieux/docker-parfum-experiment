{
  "startTime": 1674241791442,
  "endTime": 1674241791640,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n# FROM arm=armhf/ubuntu:16.04 arm64=arm64v8/ubuntu:18.04\n\nARG DAPPER_HOST_ARCH\nENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH}\nENV CATTLE_HELM_VERSION v2.10.0-rancher10\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gcc ca-certificates git wget curl vim less file xz-utils unzip && \\\n    rm -f /bin/sh && ln -s /bin/bash /bin/sh && rm -rf /var/lib/apt/lists/*;\nRUN curl -sLf https://github.com/rancher/machine-package/releases/download/v0.15.0-rancher5-3/docker-machine-${ARCH}.tar.gz | tar xvzf - -C /usr/bin\n\nENV GOLANG_ARCH_amd64=amd64 GOLANG_ARCH_arm=armv6l GOLANG_ARCH_arm64=arm64 GOLANG_ARCH=GOLANG_ARCH_${ARCH} \\\n    GOPATH=/go PATH=/go/bin:/usr/local/go/bin:${PATH} SHELL=/bin/bash\n\nRUN wget -O - https://storage.googleapis.com/golang/go1.11.linux-${!GOLANG_ARCH}.tar.gz | tar -xzf - -C /usr/local && \\\n    go get github.com/rancher/trash && \\\n    go get -u golang.org/x/lint/golint && \\\n    go get -d golang.org/x/tools/cmd/goimports && \\\n    # This needs to be kept up to date with rancher/types\n    git -C /go/src/golang.org/x/tools/cmd/goimports checkout -b release-branch.go1.12 origin/release-branch.go1.12 && \\\n    go install golang.org/x/tools/cmd/goimports\n\nENV DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3 \\\n    DOCKER_URL_arm=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm \\\n    DOCKER_URL_arm64=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm64 \\\n    DOCKER_URL=DOCKER_URL_${ARCH}\n\nENV HELM_URL_amd64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/helm \\\n    HELM_URL_arm64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/helm-arm64 \\\n    HELM_URL=HELM_URL_${ARCH} \\\n    TILLER_URL_amd64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/tiller \\\n    TILLER_URL_arm64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/tiller-arm64 \\\n    TILLER_URL=TILLER_URL_${ARCH}\n\nRUN curl -sLf ${!HELM_URL} > /usr/bin/helm && \\\n    curl -sLf ${!TILLER_URL} > /usr/bin/tiller && \\\n    chmod +x /usr/bin/helm /usr/bin/tiller && \\\n    helm init -c && \\\n    helm plugin install https://github.com/rancher/helm-unittest\n\nRUN wget -O - ${!DOCKER_URL} > /usr/bin/docker && chmod +x /usr/bin/docker\n\n# FIXME: Update to Rancher RKE when released\nENV RKE_URL_amd64=https://github.com/rancher/rke/releases/download/v0.2.0-rc8/rke_linux-amd64 \\\n    RKE_URL_arm64=https://github.com/rancher/rke/releases/download/v0.2.0-rc8/rke_linux-arm64 \\\n    RKE_URL=RKE_URL_${ARCH}\n\nRUN wget -O - ${!RKE_URL} > /usr/bin/rke && chmod +x /usr/bin/rke\nENV KUBECTL_URL=https://storage.googleapis.com/kubernetes-release/release/v1.11.0/bin/linux/${ARCH}/kubectl\nRUN wget -O - ${KUBECTL_URL} > /usr/bin/kubectl && chmod +x /usr/bin/kubectl\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y tox python3.7 python3-dev python3.7-dev libffi-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nENV HELM_HOME /root/.helm\nENV DAPPER_ENV REPO TAG DRONE_TAG SYSTEM_CHART_DEFAULT_BRANCH\nENV DAPPER_SOURCE /go/src/github.com/rancher/rancher/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV TRASH_CACHE ${DAPPER_SOURCE}/.trash-cache\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}