{
  "startTime": 1674236002014,
  "endTime": 1674236002340,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.11.4-alpine3.8 AS build\n\n#新增 GLIBC\nENV GLIBC_VERSION \"2.28-r0\"\n\n# Download and install glibc\nRUN apk add --no-cache --update && \\\n    apk add --no-cache --upgrade \\\n    ca-certificates \\\n    gcc \\\n    g++ \\\n    make \\\n    curl \\\n    git\n\nRUN curl -f -Lo /etc/apk/keys/sgerrand.rsa.pub \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" && \\\n    curl -f -Lo /var/glibc.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk\" && \\\n    curl -f -Lo /var/glibc-bin.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk\" && \\\n    apk add --no-cache /var/glibc-bin.apk /var/glibc.apk && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n#掛載 calibre 最新3.x\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/opt/calibre/lib\nENV PATH $PATH:/opt/calibre/bin\n\nRUN curl -f -Lo /var/linux-installer.py https://download.calibre-ebook.com/linux-installer.py\n\n#RUN mkdir -p /go/src/github.com/lifei6671/ && cd /go/src/github.com/lifei6671/ && git clone https://github.com/lifei6671/mindoc.git && cd mindoc\n\nADD . /go/src/github.com/lifei6671/mindoc\n\nWORKDIR /go/src/github.com/lifei6671/mindoc\n\nRUN\t go get -u github.com/golang/dep/cmd/dep && dep ensure  && \\\n\tCGO_ENABLE=1 go build -v -a -o mindoc_linux_amd64 -ldflags=\"-w -s -X main.VERSION=$TAG -X 'main.BUILD_TIME=`date`' -X 'main.GO_VERSION=`go version`'\" && \\\n    rm -rf commands controllers models modules routers tasks vendor docs search data utils graphics .git Godeps uploads/* .gitignore .travis.yml Dockerfile gide.yaml LICENSE main.go README.md conf/enumerate.go conf/mail.go install.lock simsun.ttc\n\nADD start.sh /go/src/github.com/lifei6671/mindoc\nADD simsun.ttc /usr/share/fonts/win/\n\nFROM alpine:latest\n\nLABEL maintainer=\"longfei6671@163.com\"\n\nRUN apk add --no-cache --update && \\\n    apk add --no-cache --upgrade \\\n    tzdata \\\n    mesa-gl \\\n    python \\\n    qt5-qtbase-x11 \\\n    xdg-utils \\\n    libxrender \\\n    libxcomposite \\\n    xz \\\n    imagemagick \\\n    imagemagick-dev \\\n    msttcorefonts-installer \\\n    fontconfig && \\\n    update-ms-fonts && \\\n    fc-cache -f\n\nCOPY --from=build /var/glibc.apk .\nCOPY --from=build /var/glibc-bin.apk .\nCOPY --from=build /etc/apk/keys/sgerrand.rsa.pub /etc/apk/keys/sgerrand.rsa.pub\nCOPY --from=build /var/linux-installer.py .\nCOPY --from=build /usr/share/fonts/win/simsun.ttc /usr/share/fonts/win/\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=build /go/src/github.com/lifei6671/mindoc /mindoc\n\nRUN  apk add glibc-bin.apk glibc.apk && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n    rm -rf glibc.apk glibc-bin.apk /var/cache/apk/* && \\\n    chmod a+r /usr/share/fonts/win/simsun.ttc\n\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/opt/calibre/lib\nENV PATH $PATH:/opt/calibre/bin\n\nRUN cat linux-installer.py | python -c \"import sys; main=lambda x,y:sys.stderr.write('Download failed\\n'); exec(sys.stdin.read()); main(install_dir='/opt', isolated=True)\" && \\\n    rm -rf /tmp/* linux-installer.py\n\nWORKDIR /mindoc\n\n\n# 时区设置\nENV TZ=Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nENV ZONEINFO=/mindoc/lib/time/zoneinfo.zip\nRUN chmod +x start.sh\n\nCMD [\"./start.sh\"]"
}