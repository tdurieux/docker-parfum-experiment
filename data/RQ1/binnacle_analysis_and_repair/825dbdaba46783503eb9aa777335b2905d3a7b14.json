{
  "startTime": 1674248706302,
  "endTime": 1674248706563,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG MSVC\nFROM msvc:$MSVC\n\n# curl\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n && rm -rf /var/lib/apt/lists/*\n\n# java jdk in wine\nADD get_oracle_jdk.sh get_oracle_jdk.sh\nRUN apt-get update && apt-get install --no-install-recommends -y curl && \\\n    if [ \"$MSVCARCH\" -eq 32 ]; then JAVA_ARCH=\"i586\"; else JAVA_ARCH=\"x64\"; fi && \\\n    ./get_oracle_jdk.sh 8 $JAVA_ARCH && \\\n    wine jdk-8u202-windows-$JAVA_ARCH.exe /s INSTALLDIR=C:\\\\Java && \\\n    rm -f get_oracle_jdk.sh *.exe && \\\n    apt-get remove -y curl && \\\n    rm -rf /var/lib/apt/lists/*\nENV WINEPATH=\"C:\\\\Java\\\\bin;$WINEPATH\"\nRUN wine java -version\nRUN wine javac -version\n\n# python2 in wine\nRUN if [ \"$MSVCARCH\" -eq 32 ]; then PYTHON2_ARCH=\"\"; else PYTHON2_ARCH=\".amd64\"; fi && \\\n    wget https://www.python.org/ftp/python/2.7.12/python-2.7.12$PYTHON2_ARCH.msi && \\\n    wine msiexec /i python-2.7.12$PYTHON2_ARCH.msi /passive /norestart ADDLOCAL=ALL && \\\n    cp $WINEPREFIX/drive_c/Python27/python.exe $WINEPREFIX/drive_c/Python27/python2.exe && \\\n    rm *.msi\nENV WINEPATH=\"C:\\\\Python27\\\\;C:\\\\Python27\\\\Scripts;$WINEPATH\"\nRUN wine python2 -m ensurepip && \\\n    wine python2 -m pip install --upgrade pip && \\\n    wine pip2 install virtualenv wheel\nRUN wine python2 --version\nRUN wine pip2 --version\n\n# tcl in wine\nRUN wget https://downloads.activestate.com/ActiveTcl/releases/8.6.8.0/ActiveTcl-8.6.8.0-MSWin32-x64.exe && \\\n    WINEDEBUG= vcwine ActiveTcl-8.6.8.0-MSWin32-x64.exe /exenoui /exenoupdates /quiet /norestart && \\\n    rm *.exe\nENV WINEPATH=\"C:\\\\ActiveTcl\\\\bin;$WINEPATH\"\nRUN echo 'puts $tcl_version' > test.tcl && \\\n    vcwine tclsh test.tcl && \\\n    rm *.tcl\n\n# make on host\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    make \\\n && rm -rf /var/lib/apt/lists/*\n\n# cmake on host\nARG CMAKE_SERIES_VER=3.12\nARG CMAKE_VERS=$CMAKE_SERIES_VER.1\nRUN wget https://cmake.org/files/v$CMAKE_SERIES_VER/cmake-$CMAKE_VERS-Linux-x86_64.sh -O cmake.sh && \\\n    sh $HOME/cmake.sh --prefix=/usr/local --skip-license && \\\n    rm -rf $HOME/cmake*\nRUN cmake --version\n\n# cmake in wine\nRUN wget https://cmake.org/files/v$CMAKE_SERIES_VER/cmake-$CMAKE_VERS-win64-x64.zip -O cmake.zip && \\\n    unzip $HOME/cmake.zip && \\\n    cp -R cmake-*/* $WINEPREFIX/drive_c/tools && \\\n    rm -rf cmake*\nRUN vcwine cmake --version\n\n# jom in wine\nRUN wget https://download.qt.io/official_releases/jom/jom.zip -O jom.zip && \\\n    unzip -d jom $HOME/jom.zip && \\\n    mv jom/jom.exe $WINEPREFIX/drive_c/tools/bin && \\\n    rm -rf jom*\nRUN vcwine jom /VERSION\n\n# make sure we build the example proj\nADD test test\nRUN mkdir test/.build && cd test/.build && \\\n    if [ \"$MSVC\" -gt \"10\" ] ; then vcwine cmake .. -DCMAKE_BUILD_TYPE=RELEASE -G \"NMake Makefiles JOM\" && vcwine jom ; fi && \\\n    cd .. && rm -rf test\n"
}