{
  "startTime": 1674251175525,
  "endTime": 1674251175979,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 3,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 3,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 3,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 3,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 27,
        "columnEnd": 0
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 3,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 27,
        "columnEnd": 0
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 3,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n##################### Dockerfile for Apache Spark version 2.3.2 ###################################################\n#\n# This Dockerfile builds a basic installation of Apache Spark.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To start Apache Spark server using this image, use following command:\n# docker run --name <container name> -d -p <port>:8080 <image name>\n#\n##################################################################################################################\n# Base Image\nFROM s390x/ubuntu:16.04\nARG SPARK_VER=v2.3.2\n# The author\nLABEL maintainer=\"LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\"\nENV SOURCE_DIR=/opt\nWORKDIR $SOURCE_DIR\nENV JAVA_HOME /opt/jdk8u202-b08/\nENV PATH $JAVA_HOME/bin:$PATH\nENV LEVELDB_HOME $SOURCE_DIR/leveldb\nENV LEVELDBJNI_HOME $SOURCE_DIR/leveldbjni\nENV LIBRARY_PATH ${SNAPPY_HOME}\nENV C_INCLUDE_PATH ${LIBRARY_PATH}\nENV CPLUS_INCLUDE_PATH ${LIBRARY_PATH}\nENV SNAPPY_HOME $SOURCE_DIR/snappy-1.1.3\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SOURCE_DIR\nENV MAVEN_OPTS=\"-Xmx2g -XX:ReservedCodeCacheSize=512m\"\n# Install the dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y wget tar git libtool autoconf build-essential maven apt-transport-https\\\n# Download java\n && wget https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_s390x_linux_openj9_8u202b08_openj9-0.12.0.tar.gz \\\n&& tar -xvf OpenJDK8U-jdk_s390x_linux_openj9_8u202b08_openj9-0.12.0.tar.gz \\\n# Build LevelDB JNI\n&& cd $SOURCE_DIR \\\n&& wget https://github.com/google/snappy/releases/download/1.1.3/snappy-1.1.3.tar.gz \\\n&& tar -zxvf snappy-1.1.3.tar.gz \\\n&& cd ${SNAPPY_HOME} \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --with-pic \\\n&& make \\\n&& cd $SOURCE_DIR \\\n&& git clone -b s390x https://github.com/linux-on-ibm-z/leveldb.git \\\n&& git clone -b leveldbjni-1.8-s390x https://github.com/linux-on-ibm-z/leveldbjni.git \\\n&& cd ${LEVELDB_HOME} \\\n&& git apply ${LEVELDBJNI_HOME}/leveldb.patch \\\n&& make libleveldb.a \\\n&& cd ${LEVELDBJNI_HOME} \\\n&& mvn clean install -P download -Plinux64-s390x -DskipTests \\\n&& jar -xvf ${LEVELDBJNI_HOME}/leveldbjni-linux64-s390x/target/leveldbjni-linux64-s390x-1.8.jar \\\n&& cp /opt/leveldbjni/META-INF/native/linux64/s390x/libleveldbjni.so $SOURCE_DIR && rm OpenJDK8U-jdk_s390x_linux_openj9_8u202b08_openj9-0.12.0.tar.gz && rm -rf /var/lib/apt/lists/*;\n# Build ZSTD JNI\nRUN cd $SOURCE_DIR \\\n&& echo \"deb https://dl.bintray.com/sbt/debian /\" |  tee -a /etc/apt/sources.list.d/sbt.list \\\n&& apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \\\n&& apt-get update \\\n&& apt-get install -y --no-install-recommends sbt \\\n&& cd $SOURCE_DIR \\\n&& git clone https://github.com/luben/zstd-jni.git \\\n&& cd zstd-jni \\\n&& git checkout v1.3.8-2 \\\n&& sbt compile test package \\\n&& cp /opt/zstd-jni/target/classes/linux/s390x/libzstd-jni.so $SOURCE_DIR \\\n&& ulimit -s unlimited \\\n&& ulimit -n 999999 \\\n# Build Apache Spark\n&& cd $SOURCE_DIR \\\n&& git clone https://github.com/apache/spark.git \\\n&& cd spark \\\n&& git checkout $SPARK_VER \\\n&& sed -i '46 i \\String arch = System.getProperty(\"os.arch\", \"\");\\n' common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i '62d' common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i \"62 i //Since java.nio.Bits.unaligned() doesn't return true on s390x\" common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i '63 i  if(arch.matches(\"^(s390x|s390x)$\")){' common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i \"64 i  _unaligned=true;\" common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i \"65 i  }else{\" common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i \"66 i  _unaligned = Boolean.TRUE.equals(unalignedMethod.invoke(null)); \\n }\" common/unsafe/src/main/java/org/apache/spark/unsafe/Platform.java \\\n&& sed -i '399s/LITTLE/BIG/' sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/OnHeapColumnVector.java \\\n&& sed -i '448s/LITTLE/BIG/' sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/OnHeapColumnVector.java \\\n&& sed -i '420s/LITTLE/BIG/' sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/OffHeapColumnVector.java \\\n&& sed -i '475s/LITTLE/BIG/' sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/OffHeapColumnVector.java \\\n&& sed -i '449s/LITTLE/BIG/' sql/core/src/test/scala/org/apache/spark/sql/execution/vectorized/ColumnarBatchSuite.scala \\\n&& sed -i '533s/LITTLE/BIG/' sql/core/src/test/scala/org/apache/spark/sql/execution/vectorized/ColumnarBatchSuite.scala \\\n&& sed -i '39s/8192/10000/' core/src/test/scala/org/apache/spark/metrics/sink/StatsdSinkSuite.scala \\\n&& ./build/mvn -DskipTests clean package \\\n# Cleanup\n&& rm -rf $SOURCE_DIR/zstd-jni \\\n&& rm -rf ${SNAPPY_HOME} \\\n&& rm -rf ${LEVELDBJNI_HOME} && rm -rf /var/lib/apt/lists/*;\nENV PATH=/opt/spark/bin:$PATH\n# Run Spark\nENTRYPOINT spark-shell | tail -f /dev/null\n"
}