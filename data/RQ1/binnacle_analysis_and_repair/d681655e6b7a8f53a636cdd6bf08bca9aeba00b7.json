{
  "startTime": 1674233984358,
  "endTime": 1674233984453,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# For all Brooklyn, we use a debian distribution instead of alpine as there are some libgcc incompatibilities with GO\n# and PhantomJS\nFROM maven:3.5.4-jdk-8\n\n# Install the non-headless JRE as some tests requires them\nRUN apt-get update && apt-get install --no-install-recommends -y openjdk-8-jre && rm -rf /var/lib/apt/lists/*;\n\n# Install necessary binaries to build brooklyn\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git-core \\\n    procps \\\n    golang-go \\\n    rpm \\\n    dpkg \\\n    libpng-dev \\\n    make \\\n    automake \\\n    autoconf \\\n    libtool \\\n    dpkg \\\n    pkg-config \\\n    nasm \\\n    gcc && rm -rf /var/lib/apt/lists/*;\n\n# For mvn-build\nRUN mkdir -p /var/maven/.m2/ && chmod -R 777 /var/maven/\nENV MAVEN_CONFIG=/var/maven/.m2\n"
}