{
  "startTime": 1674236328720,
  "endTime": 1674236328796,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# android build environment\n\nFROM alpine:3.4\nMAINTAINER JianyingLi <lijy91@foxmail.com>\n\n# Never ask for confirmations\nENV DEBIAN_FRONTEND noninteractive\n\n# Update apt-get & Install packages\nRUN apk update && \\\n    apk add --no-cache alpine-sdk openjdk8 bash wget unzip\n\n# Export JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/default-jvm\nENV PATH $PATH:$JAVA_HOME/bin\n\n# Install Android SDK\nRUN wget -q --no-check-certificate https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip && \\\n    unzip -q sdk-tools-linux-3859397.zip -d /usr/local/android-sdk && \\\n    rm sdk-tools-linux-3859397.zip && \\ \n    mkdir /root/.android && touch /root/.android/repositories.cfg\n\n# Export ANDROID_HOME variable\nENV ANDROID_HOME /usr/local/android-sdk\nENV PATH $PATH:$ANDROID_HOME/tools\nENV PATH $PATH:$ANDROID_HOME/tools/bin\nENV PATH $PATH:$ANDROID_HOME/platform-tools\nENV PATH $PATH:$ANDROID_HOME/build-tools/26.0.1\n\nRUN echo \"y\" | sdkmanager \\\n    \"platforms;android-26\" \\\n    \"build-tools;26.0.1\" \\\n    \"extras;android;m2repository\" \\\n    \"extras;google;m2repository\"\n\n# Pre-install and setup all build dependencies gradle requires\nCOPY gradle-preinstall /root/gradle-preinstall\nRUN echo \"sdk.dir=$ANDROID_HOME\" > /root/gradle-preinstall/local.properties && \\\n    chmod 0777 /root/gradle-preinstall/ && \\\n    /root/gradle-preinstall/gradlew build && \\\n    rm -rf /root/gradle-preinstall\n\n# Creating project directories prepared for build when running\n# `docker run`\nENV PROJECT /project\nRUN mkdir $PROJECT\nWORKDIR $PROJECT\n\nUSER $RUN_USER\nRUN echo \"sdk.dir=$ANDROID_HOME\" > local.properties"
}