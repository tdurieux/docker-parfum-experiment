{
  "startTime": 1674249063782,
  "endTime": 1674249063953,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 44,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# start containerized development deployment with:\n# cd machines/compose && docker-compose up\n\nFROM python:3.6\nWORKDIR /code\n\n# adapted from https://github.com/gettyimages/docker-spark/blob/master/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y locales \\\n && dpkg-reconfigure -f noninteractive locales \\\n && locale-gen en_CA.UTF-8 \\\n && /usr/sbin/update-locale LANG=C.UTF-8 \\\n && echo \"en_CA.UTF-8 UTF-8\" >> /etc/locale.gen \\\n && locale-gen \\\n && apt-get install --no-install-recommends -y mysql-client ruby ruby-dev \\\n && gem install commonmarker github-markup \\\n && curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n && apt-get install --no-install-recommends -y nodejs \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY requirements.txt /tmp/\nRUN pip install --no-cache-dir -r /tmp/requirements.txt && pip install --no-cache-dir ipython\n\nRUN mkdir /var/log/celery/ /var/run/celery/ && chown www-data.www-data /var/log/celery/ /var/run/celery/\n\nCOPY machines/compose/wait.sh /wait\nRUN chmod +x /wait\n\nRUN mkdir /static\nRUN chown www-data:www-data /static\n\nCOPY package.json /npm/\nCOPY package-lock.json /npm/\nRUN cd /npm && npm install && npm cache clean --force;\n\nUSER www-data\nENV PYTHONUNBUFFERED 1\n# TODO: the setup commands here should be somewhere else, possibly a dedicated \"setup\" container\nCMD /wait db 3306 && /wait solr 8983 \\\n  && python3 ./manage.py migrate \\\n  && python3 ./manage.py loaddata fixtures/*.json \\\n  && python3 ./manage.py collectstatic --noinput \\\n  && python3 ./manage.py update_index \\\n  && /usr/local/bin/gunicorn --workers=5 --worker-class=sync --max-requests=1000 --bind 0:8000 courses.wsgi:application\n\n"
}