{
  "startTime": 1674248343223,
  "endTime": 1674248343829,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cusdeb/alpine3.7:amd64\n\nENV LIBISCSI_VERSION 1.18.0\nENV NUMACTL_VERSION 2.0.12\nENV QEMU_VERSION 3.0.0\nENV QUILT_VERSION 0.65\n\nENV TERM linux\n\nCOPY ./qemu-patches /root/qemu-patches\n\nRUN echo http://mirror.yandex.ru/mirrors/alpine/v3.7/community >> /etc/apk/repositories \\\n && apk --update add \\\n        # Build essentials\n        automake \\\n        autoconf \\\n        bison \\\n        diffutils \\\n        flex \\\n        gcc \\\n        libtool \\\n        make \\\n        patch \\\n        # Deps\n        bzip2-dev \\\n        glib-dev \\\n        gnutls-dev \\\n        jpeg-dev \\\n        libaio-dev \\\n        libc-dev \\\n        libcap-dev \\\n        libcap-ng-dev \\\n        libnfs-dev \\\n        libpng-dev \\\n        libseccomp-dev \\\n        libssh2-dev \\\n        libusb-dev \\\n        ovmf \\\n        pixman-dev \\\n        python \\\n        usbredir-dev \\\n        xen-dev \\\n        xfsprogs-dev \\\n        zlib-dev \\\n        # Helpers\n        bash \\\n        curl \\\n        ncurses \\\n        sed \\\n        tar \\\n        util-linux \\\n        xz\\\n && cd \\\n # Build quilt since the current stable Alpine release doesn't have it so far.\n # TODO: when quilt is in the stable main or community, remove diffutils, sed\n #       and patch from the list above. \\\n && curl -f -OL https://download.savannah.gnu.org/releases/quilt/quilt-$QUILT_VERSION.tar.gz \\\n && tar xzvf quilt-$QUILT_VERSION.tar.gz \\\n && rm quilt-$QUILT_VERSION.tar.gz \\\n && cd quilt-$QUILT_VERSION \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j \"$(nproc)\" && make install \\\n && cd && rm -r quilt-$QUILT_VERSION \\\n # Build numactl since Alpine 3.7 doesn't have it anymore.\n && curl -f -OL https://github.com/numactl/numactl/archive/v$NUMACTL_VERSION.tar.gz \\\n && tar xzvf v$NUMACTL_VERSION.tar.gz \\\n && rm v$NUMACTL_VERSION.tar.gz \\\n && cd numactl-$NUMACTL_VERSION \\\n && libtoolize \\\n && ./autogen.sh \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j \"$(nproc)\" && make install \\\n && cd && rm -r numactl-$NUMACTL_VERSION \\\n # Build libiscsi\n && curl -f -OL https://github.com/sahlberg/libiscsi/archive/$LIBISCSI_VERSION.tar.gz \\\n && tar xzvf $LIBISCSI_VERSION.tar.gz \\\n && rm $LIBISCSI_VERSION.tar.gz \\\n && cd libiscsi-$LIBISCSI_VERSION \\\n && ./autogen.sh \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j \"$(nproc)\" && make install \\\n && cd && rm -r libiscsi-$LIBISCSI_VERSION \\\n # Build QEMU\n && curl -f -O https://download.qemu.org/qemu-$QEMU_VERSION.tar.xz \\\n && tar xJvf qemu-$QEMU_VERSION.tar.xz \\\n && rm qemu-$QEMU_VERSION.tar.xz \\\n && cd qemu-$QEMU_VERSION \\\n && mv /root/qemu-patches patches \\\n && env QUILT_PATCHES=patches quilt push -a \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        # https://sources.debian.org/src/qemu/stretch/debian/rules/#L57-L61\n        # (except or32)\n        --target-list=' \\\n            i386-softmmu \\\n            x86_64-softmmu \\\n            alpha-softmmu \\\n            aarch64-softmmu \\\n            arm-softmmu \\\n            cris-softmmu \\\n            lm32-softmmu \\\n            m68k-softmmu \\\n            microblaze-softmmu \\\n            microblazeel-softmmu \\\n            mips-softmmu \\\n            mipsel-softmmu \\\n            mips64-softmmu \\\n            mips64el-softmmu \\\n            moxie-softmmu \\\n            ppc-softmmu \\\n            ppcemb-softmmu \\\n            ppc64-softmmu \\\n            sh4-softmmu \\\n            sh4eb-softmmu \\\n            sparc-softmmu \\\n            sparc64-softmmu \\\n            s390x-softmmu \\\n            tricore-softmmu \\\n            xtensa-softmmu \\\n            xtensaeb-softmmu \\\n            unicore32-softmmu \\\n        ' \\\n        --disable-docs \\\n        --disable-gtk --disable-vte \\\n        --disable-sdl \\\n        --enable-attr \\\n        --enable-bzip2 \\\n        --enable-cap-ng \\\n        --enable-curl \\\n        --enable-curses \\\n        --enable-fdt \\\n        --enable-gnutls \\\n        --enable-kvm \\\n        --enable-libiscsi \\\n        --enable-libnfs \\\n        --enable-libssh2 \\\n        --enable-libusb \\\n        --enable-linux-aio \\\n        --enable-linux-user \\\n        --enable-modules \\\n        --enable-numa \\\n        --enable-seccomp \\\n        --enable-system \\\n        --enable-tools \\\n        --enable-usb-redir \\\n        --enable-vhost-net \\\n        --enable-vhost-user \\\n        --enable-vhost-vsock \\\n        --enable-virtfs \\\n        --enable-vnc \\\n        --enable-vnc-jpeg \\\n        --enable-vnc-png \\\n        --enable-xen \\\n        --enable-xfsctl \\\n && make -j \"$(nproc)\" && make install \\\n && cd && rm -r qemu-$QEMU_VERSION \\\n && apk del \\\n    automake \\\n    autoconf \\\n    bison \\\n    curl \\\n    diffutils \\\n    flex \\\n    gcc \\\n    libtool \\\n    make \\\n    patch \\\n    sed \\\n    tar \\\n    xz \\\n && rm -rf /var/cache/apk/*\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n"
}