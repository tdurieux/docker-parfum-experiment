{
  "startTime": 1674236948479,
  "endTime": 1674236948772,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Node.js 11.x Linux Dockerfile, for running Gulp & Tape, for Talkyard.\n#\n# Unfortunately, the default Node.js Dockerfile creates a user 'node' with id 1000.\n# However, most people on Linux have id 1000 already, so 'node' = 1000 results in an error\n# in the entrypoint when it creates and su:s to a user with the same id as the host user [5RZ4HA9].\n# As a workaround, I've copied node:8.1.0 to here, and commented out the creation of user 1000:\n# (search for \"1000\" to find where)\n#-----------------------------------------------------------------------------\n# This, between ----, is a copy of:\n#   https://github.com/nodejs/docker-node/blob/master/11/alpine/Dockerfile\n#\n# Copyright (c) 2015 Joyent, Inc.\n# Copyright (c) 2015 Node.js contributors\n# The MIT License (MIT)\n# (see https://github.com/nodejs/docker-node/blob/master/LICENSE )\n\nFROM alpine:3.9\n\n# Nodejs Fibers 3.x, used by wdio-sync, won't build with Node 12 yet,\n# wait until the new wdio-sync version that uses Fibers 4.x has been released:\n# https://github.com/webdriverio-boneyard/wdio-sync/commit/dce97e0482a712660d269beb9b575bd731f26977\n# (unreleased).\n#ENV NODE_VERSION 12.1.0\n\nENV NODE_VERSION 11.10.0\n\n\n# Don't: (see comment above)\n#RUN addgroup -g 1000 node \\\n#    && adduser -u 1000 -G node -s /bin/sh -D node \\\n\nRUN apk add --no-cache \\\n        libstdc++ \\\n    # No, let's keep Python etc — needed later below, for node-gyp (KEEPDEPS)\n    # which is needed by the fibers module, which will get built later\n    # when Yarn installs node_modules/ things.\n    # && apk add --no-cache --virtual .build-deps \\\n    && apk add --no-cache \\\n        binutils-gold \\\n        curl \\\n        g++ \\\n        gcc \\\n        gnupg \\\n        libgcc \\\n        linux-headers \\\n        make \\\n        python \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n    4ED778F539E3634C779C87C6D7062848A1AB005C \\\n    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n    B9E2F5981AA6E0CD28160D9FF13993A75599653C; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n    && cd \"node-v$NODE_VERSION\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(getconf _NPROCESSORS_ONLN) V= \\\n    && make install \\\n    # && apk del .build-deps \\  # no, keep Python etc (KEEPDEPS)\n    && cd .. \\\n    && rm -Rf \"node-v$NODE_VERSION\" \\\n    && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n\nENV YARN_VERSION 1.15.2\n\n# (KEEPDEPS). curl = can debug, nice\nRUN apk add --no-cache curl gnupg tar \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n  # && apk del .build-deps-yarn  # no, don't (KEEPDEPS)\n#-----------------------------------------------------------------------------\n\n\n# Git is needed by gulpfile.js. The others are nice for troubleshooting, e.g. Tape security tests\n# that send http requests — then curl is nice to have, so can replay the requests manually in Bash.\nRUN apk add --no-cache bash tree curl net-tools git\n\n# If this error happens:\n# gulp[33]: ../src/node_contextify.cc:629:static void node::contextify::ContextifyScript::New(const v8::FunctionCallbackInfo<v8::Value>&): Assertion `args[1]->IsString()' failed.\n# Then upgrade Gulp to a more recent version: yarn upgarde gulp\n# Maybe delete node_modules, and docker/gulp-home\n# More here: https://github.com/gulpjs/gulp/issues/2162  (happened for me with Ubuntu Linux)\n\nRUN cd /usr/local/bin/ && \\\n    ln -s /opt/talkyard/server/node_modules/.bin/gulp ./\n\nWORKDIR /opt/talkyard/server/\n\nCOPY entrypoint.sh /docker-entrypoint.sh\nRUN  chmod ugo+x   /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n# For debugging test code, via `node --debug-brk --inspect=9229`. [8EA02R4]\nEXPOSE 9229\n\n\nCMD [\"echo 'Specify a command in docker-compose.yml or on the command line instead. Bye.' && exit 0\"]\n\n"
}