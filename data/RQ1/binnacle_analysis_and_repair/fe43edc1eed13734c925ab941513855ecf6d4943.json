{
  "startTime": 1674241675172,
  "endTime": 1674241675389,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 8,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions\n# are met:\n#  * Redistributions of source code must retain the above copyright\n#    notice, this list of conditions and the following disclaimer.\n#  * Redistributions in binary form must reproduce the above copyright\n#    notice, this list of conditions and the following disclaimer in the\n#    documentation and/or other materials provided with the distribution.\n#  * Neither the name of NVIDIA CORPORATION nor the names of its\n#    contributors may be used to endorse or promote products derived\n#    from this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Default setting is building on ubuntu:16.04\nARG UBUNTU_VERSION=16.04\n\nFROM ubuntu:${UBUNTU_VERSION}\n\n# Ensure apt-get won't prompt for selecting options\nENV DEBIAN_FRONTEND=noninteractive\n\n# install platform specific packages\nRUN if [ $(cat /etc/os-release | grep 'VERSION_ID=\"16.04\"' | wc -l) -ne 0 ]; then \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n                libcurl3-dev; rm -rf /var/lib/apt/lists/*; \\\n    elif [ $(cat /etc/os-release | grep 'VERSION_ID=\"18.04\"' | wc -l) -ne 0 ]; then \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n                libcurl4-openssl-dev; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n        echo \"Ubuntu version must be either 16.04 or 18.04\" && \\\n        exit 1; \\\n    fi\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n            software-properties-common \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            cmake \\\n            curl \\\n            git \\\n            libopencv-dev \\\n            libopencv-core-dev \\\n            libssl-dev \\\n            libtool \\\n            pkg-config \\\n            python \\\n            python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip install --no-cache-dir --upgrade setuptools grpcio-tools\n\n# Build the client library and examples\nWORKDIR /workspace\nCOPY VERSION .\nCOPY build build\nCOPY src/clients src/clients\nCOPY src/core src/core\n\n# The build can fail the first time due to a protobuf_generate_cpp\n# error that doesn't repeat on subsequent builds, which is why there\n# are 2 make invocations below.\nRUN cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/workspace/install && \\\n    (make -j16 trtis-clients || true) && \\\n    make -j16 trtis-clients\nRUN cd install && \\\n    export VERSION=`cat /workspace/VERSION` && \\\n    tar zcf /workspace/v$VERSION.clients.tar.gz *\n\n# Install an image needed by the quickstart and other documentation.\nCOPY qa/images/mug.jpg images/mug.jpg\n\n# Install the dependencies needed to run the client examples. These\n# are not needed for building but including them allows this image to\n# be used to run the client examples.\nRUN pip install --no-cache-dir --upgrade install/python/tensorrtserver-*.whl numpy pillow\n\nENV PATH //workspace/install/bin:${PATH}\nENV LD_LIBRARY_PATH /workspace/install/lib:${LD_LIBRARY_PATH}\n"
}