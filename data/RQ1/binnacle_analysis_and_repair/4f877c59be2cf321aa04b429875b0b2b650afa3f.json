{
  "startTime": 1674250411816,
  "endTime": 1674250411960,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons as commons\n\n\nFROM alpine:3.7 as vmod\nENV LIBVMOD_DYNAMIC_VERSION=5.2\nENV LIBVMOD_BODYACCESS_VERSION=5.0\nRUN apk --no-cache add varnish varnish-dev automake autoconf libtool python py-docutils make\n\nRUN cd /tmp && wget https://github.com/nigoroll/libvmod-dynamic/archive/${LIBVMOD_DYNAMIC_VERSION}.zip && \\\n  unzip ${LIBVMOD_DYNAMIC_VERSION}.zip && cd libvmod-dynamic-${LIBVMOD_DYNAMIC_VERSION} && \\\n  ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nRUN cd /tmp && wget https://github.com/aondio/libvmod-bodyaccess/archive/${LIBVMOD_BODYACCESS_VERSION}.zip && \\\n  unzip ${LIBVMOD_BODYACCESS_VERSION}.zip && cd libvmod-bodyaccess-${LIBVMOD_BODYACCESS_VERSION} && \\\n  ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nFROM alpine:3.7\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=varnish\n\nARG LAGOON_VERSION\nENV LAGOON_VERSION=$LAGOON_VERSION\n\n# Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /sbin/tini /sbin/\nCOPY --from=commons /home /home\n\nENV TMPDIR=/tmp \\\n    TMP=/tmp \\\n    HOME=/home \\\n    # When Bash is invoked via `sh` it behaves like the old Bourne Shell and sources a file that is given in `ENV`\n    ENV=/home/.bashrc \\\n    # When Bash is invoked as non-interactive (like `bash -c command`) it sources a file that is given in `BASH_ENV`\n    BASH_ENV=/home/.bashrc\n\nRUN apk --no-cache add varnish\n\n# Add varnish mod after the varnish package creates the directory.\nCOPY --from=vmod /usr/lib/varnish/vmods/libvmod_dynamic.* /usr/lib/varnish/vmods/\nCOPY --from=vmod /usr/lib/varnish/vmods/libvmod_bodyaccess.* /usr/lib/varnish/vmods/\n\nRUN echo \"${VARNISH_SECRET:-lagoon_default_secret}\" >> /etc/varnish/secret\n\nCOPY default.vcl /etc/varnish/default.vcl\nCOPY varnish-start.sh /varnish-start.sh\n\nRUN fix-permissions /etc/varnish/ \\\n    && fix-permissions /var/run/ \\\n    && fix-permissions /var/lib/varnish\n\nCOPY docker-entrypoint /lagoon/entrypoints/70-varnish-entrypoint\n\nEXPOSE 8080\n\n# tells the local development environment on which port we are running\nENV LAGOON_LOCALDEV_HTTP_PORT=8080\n\nENV HTTP_RESP_HDR_LEN=8k \\\n    HTTP_RESP_SIZE=32k \\\n    NUKE_LIMIT=150 \\\n    CACHE_TYPE=malloc \\\n    CACHE_SIZE=100M \\\n    LISTEN=\":8080\" \\\n    MANAGEMENT_LISTEN=\":6082\"\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/varnish-start.sh\"]\n"
}