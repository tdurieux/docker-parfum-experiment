{
  "startTime": 1674244506774,
  "endTime": 1674244506930,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 80,
        "columnEnd": 91
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 21,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 69,
        "columnEnd": 263
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 33,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n# 设置编码\nENV LANG en_US.UTF-8\n\n# 同步时间\nENV TZ=Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# 1. 安装基本依赖\nRUN yum update -y && yum install epel-release -y && yum update -y && yum install wget unzip epel-release nginx  xz gcc automake zlib-devel openssl-devel supervisor  net-tools mariadb-devel groupinstall development  libxslt-devel libxml2-devel libcurl-devel git -y && rm -rf /var/cache/yum\n\n# 2. 准备python\nRUN wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tar.xz\nRUN xz -d Python-3.6.6.tar.xz && tar xvf Python-3.6.6.tar && cd Python-3.6.6 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm Python-3.6.6.tar\n\n# 3. 复制代码\nADD . /var/www/CTask/\nWORKDIR /var/www/CTask/\n\n# 4. 安装pip依赖\nRUN pip3 install --no-cache-dir --user --upgrade pip\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# 5. 数据初始化\n# python3 manage.py db init        #首次需要\n# python3 manage.py db migrate\n# python3 manage.py db upgrade\n\n# 6. 日志\nVOLUME /var/log/\n\n# 7. 准备文件\nCOPY docs/supervisor_cron.conf  /etc/supervisord.conf\nCOPY docs/nginx_cron.conf /etc/nginx/conf.d/\n\nEXPOSE 80\nCMD [\"/usr/bin/supervisord\"]\n\n#docker build -t ctask .\n#docker run --name ctask -d -p 5001:80 ctask:latest"
}