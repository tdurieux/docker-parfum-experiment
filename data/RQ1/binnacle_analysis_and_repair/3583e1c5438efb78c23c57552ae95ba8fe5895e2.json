{
  "startTime": 1674250353242,
  "endTime": 1674250353416,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# git/Dockerfile\n#\n# Build a Podman container image from the latest\n# upstream version of Podman on GitHub.\n# https://github.com/containers/libpod\n# This image can be used to create a secured container\n# that runs safely with privileges within the container.\n# The containers created by this image also come with a\n# Podman development environment in /root/podman.\n#\nFROM fedora:latest\nENV GOPATH=/root/podman\n\n# Install the software required to build Podman.\n# Then create a directory and clone from the Podman\n# GitHub repository, make and install Podman\n# to the container.\n# Finally remove the podman directory and a few other packages\n# that are needed for building but not running Podman\nRUN dnf -y install --exclude container-selinux \\\n     --enablerepo=updates-testing \\\n     atomic-registries \\\n     btrfs-progs-devel \\\n     containernetworking-cni \\\n     device-mapper-devel \\\n     git \\\n     glib2-devel \\\n     glibc-devel \\\n     glibc-static \\\n     go \\\n     golang-github-cpuguy83-go-md2man \\\n     gpgme-devel \\\n     iptables \\\n     libassuan-devel \\\n     libgpg-error-devel \\\n     libseccomp-devel \\\n     libselinux-devel \\\n     make \\\n     ostree-devel \\\n     pkgconfig \\\n     runc \\\n     fuse-overlayfs \\\n     fuse3 \\\n     containers-common; \\\n     mkdir /root/podman; \\\n     git clone https://github.com/containers/libpod /root/podman/src/github.com/containers/libpod; \\\n     cd /root/podman/src/github.com/containers/libpod; \\\n     make BUILDTAGS=\"selinux seccomp\"; \\\n     make install PREFIX=/usr; \\\n     cd /root/podman; \\\n     git clone https://github.com/containers/conmon /root/podman/conmon; \\\n     cd conmon; \\\n     make; \\\n     install -D -m 755 bin/conmon /usr/libexec/podman/conmon; \\\n     git clone https://github.com/containernetworking/plugins.git $GOPATH/src/github.com/containernetworking/plugins; \\\n     cd $GOPATH/src/github.com/containernetworking/plugins; \\\n     ./build_linux.sh; \\\n     mkdir -p /usr/libexec/cni; \\\n     \\cp -fR bin/* /usr/libexec/cni; \\\n     mkdir -p /etc/cni/net.d; \\\n     curl -f -qsSL https://raw.githubusercontent.com/containers/libpod/master/cni/87-podman-bridge.conflist | tee /etc/cni/net.d/99-loopback.conf; \\\n     mkdir -p /usr/share/containers; \\\n     cp $GOPATH/src/github.com/containers/libpod/libpod.conf /usr/share/containers; \\\n     # Adjust libpod.conf to write logging to a file\n     sed -i 's/events_logger = \"journald\"/events_logger = \"file\"/g' /usr/share/containers/libpod.conf; \\\n     rm -rf /root/podman/*; \\\n     dnf -y remove git golang go-md2man make; \\\n     dnf clean all;\n\n# Adjust storage.conf to enable Fuse storage.\nRUN sed -i -e 's|^#mount_program|mount_program|g' -e '/additionalimage.*/a \"/var/lib/shared\",' /etc/containers/storage.conf\nRUN mkdir -p /var/lib/shared/overlay-images /var/lib/shared/overlay-layers; touch /var/lib/shared/overlay-images/images.lock; touch /var/lib/shared/overlay-layers/layers.lock\n\n# Set up environment variables to note that this is\n# not starting with usernamespace and default to\n# isolate the filesystem with chroot.\nENV _BUILDAH_STARTED_IN_USERNS=\"\" BUILDAH_ISOLATION=chroot\n"
}