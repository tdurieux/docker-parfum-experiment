{
  "startTime": 1674248346530,
  "endTime": 1674248346614,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for KiiConf\n# Jacob Alexander 2017\n\n# Ubuntu 16.04 LTS (xenial) base\nFROM ubuntu:xenial\n\nLABEL maintainer=\"haata@kiibohd.com\" \\\n    version=\"0.1\" \\\n    description=\"Docker Environment for Kiibohd KiiConf Web Configurator\"\n\n# Install dependencies\nRUN apt-get update \\\n    && \\\n    apt-get install --no-install-recommends -qy \\\nbinutils-arm-none-eabi \\\nbsdmainutils \\\ncmake \\\nctags \\\ndfu-util \\\ngcc-arm-none-eabi \\\ngit \\\nlibnewlib-arm-none-eabi \\\nlibusb-1.0-0-dev \\\nlighttpd \\\nninja-build \\\nnodejs \\\nnpm \\\nphp-cgi \\\npython3 \\\npython3-pil \\\ntmux \\\n    && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Add this git repo\nADD . /KiiConf\nWORKDIR /KiiConf\n\n# Clone git repos for controller build\nARG URL\nARG BRANCH\nARG REV\nARG KLL_URL\nARG KLL_BRANCH\nARG KLL_REV\nRUN cd /KiiConf && tools/update_controller.bash\n\n# Prepare tmp directory\nRUN mkdir -p /KiiConf/tmp && chmod 777 /KiiConf/tmp\n\n# Prepare lighttpd\n# Defaults to test_lighttpd.conf\nRUN mkdir -p /var/run/lighttpd && chown www-data:www-data /var/run/lighttpd\nRUN touch /var/run/lighttpd.pid && chown www-data:www-data /var/run/lighttpd.pid\nARG lighttpd_conf=test_lighttpd.conf\nADD ${lighttpd_conf} /etc/lighttpd/lighttpd.conf\nEXPOSE 80 443\n\n# Default command, starting lighttpd\nCMD /usr/sbin/lighttpd -D -f /etc/lighttpd/lighttpd.conf\n\n# NOTE: Test user is uid:gid 33:33 (typically http/www-data on Ubuntu and Arch Linux)\n\n# 1. Build the image after the initial cloning of this repo\n#   docker build -t kiiconf . # notice the dot at the end\n# You can control controller.git and kll.git using the following docker build flags\n#  --build-arg BRANCH=old --build-arg REV=HEAD\n#  - URL        - controller.git url\n#  - BRANCH     - controller.git branch\n#  - REV        - controller.git revision\n#  - KLL_URL    - kll.git url\n#  - KLL_BRANCH - kll.git branch\n#  - KLL_REV    - kll.git revision\n\n# 2. Quick test generating a container from the image and running a command\n#   docker run -t -u 33:33 --rm kiiconf cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n#  OR\n#   docker run -t -u 33:33 --rm kiiconf tests/build_test.bash\n#  OR (if you want to be lazy and test)\n#   tests/docker_test.bash\n#\n# Change the MD1 for other build targets in cgi-bin/build_layout.bash\n# For example:\n#  - MD1\n#  - MD1.1\n#  - MDErgo1\n#  - WhiteFox\n#  - KType\n\n# 3. Run the a container in interactive mode\n#  docker run -it -u 33:33 --rm kiiconf bash\n# Run a command manually, like:\n#  cgi-bin/build_layout.bash c3184563548ed992bfd3574a238d3289 MD1\n\n# NOTE: --rm means the container contents will disappear after the container exits\n\n# 4. Run all of KiiConf, using lighttpd inside the docker container\n#  docker run kiiconf\n# OR (to use localhost instead)\n#  docker run -p 127.0.0.1:80:80 kiiconf\n\n# 5. Run all of KiiConf, using lighttpd inside docker container, and detach to the background\n#  docker run -d kiiconf\n# OR (to use localhost instead)\n#  docker run -p 127.0.0.1:80:80 -d kiiconf\n\n"
}