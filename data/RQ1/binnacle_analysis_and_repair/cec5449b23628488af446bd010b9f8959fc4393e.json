{
  "startTime": 1674243661969,
  "endTime": 1674243662380,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 29,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 7,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 7,
        "columnEnd": 152
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get -q update \\\n    && apt-get -qy --no-install-recommends install wget apt-transport-https vim git postgresql postgresql-plpython-9.5 libfontconfig python3-pip python-pip libssl-dev libpq-dev \\\n    && pip install --no-cache-dir -U pip && pip3 install --no-cache-dir -U pip \\\n    && locale-gen \"en_US.UTF-8\" && apt autoremove -y \\\n    && pg_dropcluster 9.5 main; rm -rf /var/lib/apt/lists/*; pg_createcluster --locale en_US.UTF-8 9.5 main \\\n    && echo \"include = 'pgwatch_postgresql.conf'\" >> /etc/postgresql/9.5/main/postgresql.conf\n\n### Download and install external components\n# Grafana [https://grafana.com/grafana/download]\n#   latest ver.: curl -so- https://api.github.com/repos/grafana/grafana/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\n# Influxdb [https://portal.influxdata.com/downloads]\n#   latest ver.: curl -so- https://api.github.com/repos/influxdata/influxdb/tags | grep -Eo '\"v[0-9\\.]+\"' | grep -Eo '[0-9\\.]+' | sort -nr | head -1\n\nRUN wget -q -O grafana.deb https://dl.grafana.com/oss/release/grafana_6.2.4_amd64.deb \\\n    && wget -q -O - https://dl.influxdata.com/influxdb/releases/influxdb_1.7.6_amd64.deb > influxdb_amd64.deb \\\n    && dpkg -i grafana.deb && rm grafana.deb \\\n    && dpkg -i influxdb_amd64.deb && rm influxdb_amd64.deb \\\n    && sed -i 's/\\# query-log-enabled = true/query-log-enabled = false/' /etc/influxdb/influxdb.conf \\\n    && sed -i 's/\\# \\[monitor\\]/\\[monitor\\]/' /etc/influxdb/influxdb.conf \\\n    && sed -i 's/\\# store-enabled = true/store-enabled = false/' /etc/influxdb/influxdb.conf \\\n    && sed -i 's/\\# \\[http\\]/\\[http\\]/' /etc/influxdb/influxdb.conf \\\n    && sed -i '0,/\\# log-enabled = true/{s/\\# log-enabled = true/log-enabled = false/}' /etc/influxdb/influxdb.conf \\\n    && sed -i 's/\\# index-version = \\\"inmem\\\"/index-version = \\\"tsi1\\\"/' /etc/influxdb/influxdb.conf \\\n    && pip3 install --no-cache-dir supervisor && mkdir /var/log/supervisor\n\n\n# Add pgwatch2 sources\nADD pgwatch2 /pgwatch2\nADD webpy /pgwatch2/webpy\n\n# Go installation [https://golang.org/dl/]\n# Grafana config customizations, Web UI requirements, compilation of the Go gatherer\nRUN wget -q -O /tmp/go.tar.gz https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz \\\n    && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n    && export PATH=$PATH:/usr/local/go/bin \\\n    && cp /pgwatch2/bootstrap/grafana_custom_config.ini /etc/grafana/grafana.ini \\\n    && pip3 install --no-cache-dir -r /pgwatch2/webpy/requirements.txt \\\n    && pip2 install --no-cache-dir psutil \\\n    && cd /pgwatch2 && bash build_gatherer.sh \\\n    && rm /tmp/go.tar.gz \\\n    && rm -rf /usr/local/go /root/go \\\n    && grafana-cli plugins install savantly-heatmap-panel\n\nADD grafana_dashboards /pgwatch2/grafana_dashboards\n\n# For showing all component versions via :8080/versions. Assuming project is cloned from Github here\nCOPY .git/refs/heads/master /pgwatch2/build_git_version.txt\n\n# Set up supervisord [https://docs.docker.com/engine/admin/using_supervisord/]\nCOPY supervisord.conf /etc/supervisor/supervisord.conf\n\n# Postgres (ver 9.5) config tuning\n# NB! When security is a concern one should definitely alter \"pgwatch2\" password in change_pw.sql and maybe modify pg_hba.conf accordingly\nCOPY postgresql.conf /etc/postgresql/9.5/main/pgwatch_postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf\nCOPY docker-launcher.sh postgresql.conf pg_hba.conf /pgwatch2/\n\n\n# Admin UI for configuring servers to be monitored\nEXPOSE 8080\n# Gatherer healthcheck port / metric statistics (JSON)\nEXPOSE 8081\n# Postgres DB holding the pgwatch2 config DB\nEXPOSE 5432\n# Grafana UI\nEXPOSE 3000\n# InfluxDB API\nEXPOSE 8086\n# InfluxDB backup port\nEXPOSE 8088\n# Prometheus scraping port\nEXPOSE 9187\n\n### Volumes for easier updating to newer to newer pgwatch2 containers\n### NB! Backwards compatibility is not 100% guaranteed (e.g. InfluxDB has changed index storage format) so a backup\n### using traditional means is still recommended before updating - see \"Updating to a newer Docker version\" from README\n\nVOLUME /pgwatch2/persistent-config\nVOLUME /var/lib/postgresql\nVOLUME /var/lib/influxdb\nVOLUME /var/lib/grafana\n\nCMD [\"/pgwatch2/docker-launcher.sh\"]\n"
}