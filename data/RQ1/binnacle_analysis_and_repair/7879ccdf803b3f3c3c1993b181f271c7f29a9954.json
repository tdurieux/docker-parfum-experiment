{
  "startTime": 1674251432471,
  "endTime": 1674251432735,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 79
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-runtime-ubuntu16.04\nLABEL maintainer \"Unsalted\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  ca-certificates \\\n  wget \\\n  g++ \\\n  git \\\n  cuda-core-$CUDA_PKG_VERSION \\\n  cuda-misc-headers-$CUDA_PKG_VERSION \\\n  cuda-command-line-tools-$CUDA_PKG_VERSION \\\n  cuda-driver-dev-$CUDA_PKG_VERSION \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get clean -y\n\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\n\nWORKDIR /tmp\n\n# install boost 1.62+\nARG boost_version=1.62.0\nARG boost_dir=boost_1_62_0\nARG boost_sha256_sum=440a59f8bc4023dbe6285c9998b0f7fa288468b889746b1ef00e8b36c559dce1\nENV boost_version ${boost_version}\n\nARG boost_libs=\" \\\n  --with-atomic \\\n  --with-chrono \\\n  --with-date_time \\\n  --with-filesystem \\\n  --with-log \\\n  --with-regex \\\n  --with-system \\\n  --with-thread\"\n\nRUN wget https://downloads.sourceforge.net/project/boost/boost/${boost_version}/${boost_dir}.tar.gz \\\n  && echo \"${boost_sha256_sum}  ${boost_dir}.tar.gz\" | sha256sum -c \\\n  && tar xfz ${boost_dir}.tar.gz \\\n  && rm ${boost_dir}.tar.gz \\\n  && cd ${boost_dir} \\\n  && ./bootstrap.sh --prefix=/usr \\\n  && ./b2 -j 4 stage $boost_libs \\\n  && ./b2 -j 4 install $boost_libs \\\n  && cd .. && rm -rf ${boost_dir} && ldconfig\n# install latest version of cmake\nRUN wget \\\n  https://cmake.org/files/v3.7/cmake-3.7.2.tar.gz \\\n  https://cmake.org/files/v3.7/cmake-3.7.2-SHA-256.txt \\\n  https://cmake.org/files/v3.7/cmake-3.7.2-SHA-256.txt.asc \\\n  && gpg --batch --keyserver pgp.mit.edu --recv 7BFB4EDA \\\n  && gpg --batch --verbose --verify cmake-3.7.2-SHA-256.txt.asc cmake-3.7.2-SHA-256.txt \\\n  && grep cmake-3.7.2.tar.gz cmake-3.7.2-SHA-256.txt | sha256sum --check \\\n  && tar xzvf cmake-3.7.2.tar.gz \\\n  && cd cmake-3.7.2/ \\\n  && ./bootstrap \\\n  && make -j4 \\\n  && make install \\\n  && cd ../ && rm cmake-3.7.2-SHA-256.txt.asc\n# install nicehash\n\n\nRUN git clone https://github.com/nicehash/nheqminer.git \\\n  && chmod +x nheqminer/cpu_xenoncat/asm_linux/* \\\n  && cd nheqminer/cpu_xenoncat/asm_linux \\\n  && sh assemble.sh \\\n  && cd /tmp \\\n  && mkdir build/ \\\n  && cd build/ \\\n  && cmake ../nheqminer \\\n  && make -j $(nproc) \\\n  && cp ./nheqminer /usr/local/bin/nheqminer \\\n  && chmod +x /usr/local/bin/nheqminer\n\nRUN rm -rf /tmp/*\nRUN useradd -ms /bin/bash nheqminer\nUSER nheqminer\n\n\nWORKDIR /home/nheqminer\nENTRYPOINT [\"/usr/local/bin/nheqminer\"]\nCMD [\"-h\"]\n"
}