{
  "startTime": 1674641765438,
  "endTime": 1674641765484,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - Restoring & Compiling\nFROM microsoft/dotnet:2.2-sdk-alpine3.8 as builder\nWORKDIR /source\nRUN apk add --no-cache --update nodejs nodejs-npm\nCOPY *.csproj .\nRUN dotnet restore\nCOPY package.json .\nRUN npm install && npm cache clean --force;\nCOPY . .\nRUN dotnet publish -c Release -o /app/\n\n# Stage 2 - Creating Image for compiled app\nFROM microsoft/dotnet:2.2-aspnetcore-runtime-alpine3.8 as baseimage\nRUN apk add --no-cache --update nodejs nodejs-npm\nWORKDIR /app\nCOPY --from=builder /app .\nENV ASPNETCORE_URLS=http://+:$port\n\n# Run the application. REPLACE the name of dll with the name of the dll produced by your application\nEXPOSE $port\nCMD [\"dotnet\", \"vue2spa.dll\"]\n"
}