{
  "startTime": 1674641674778,
  "endTime": 1674641675262,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 18,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 34,
        "columnStart": 101,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 18,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 34,
        "columnStart": 101,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 AS build-native-env\n\nENV OPENCV_VERSION=4.1.0\n#ENV OPENCVSHARP_VERSION=4.1.0.20190416\n#ENV DOTNETCORE_SDK=2.1.104\n\nRUN apt update && apt install --no-install-recommends -y \\\n    apt-transport-https \\\n    software-properties-common \\\n    wget \\\n    unzip \\\n    curl \\\n    ca-certificates && rm -rf /var/lib/apt/lists/*;\n    #bzip2 \\\n    #grep sed dpkg\n\n# Install opencv dependencies\nRUN cd ~\nRUN apt update && apt install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    git \\\n    gfortran \\\n    libjpeg8-dev \\\n    libpng-dev \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository \"deb http://security.ubuntu.com/ubuntu xenial-security main\" && apt update && apt install --no-install-recommends -y \\\n    libjasper1 \\\n    libtiff-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libswscale-dev \\\n    libdc1394-22-dev \\\n    libxine2-dev \\\n    libv4l-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/include/linux\nRUN ln -s -f ../libv4l1-videodev.h videodev.h\nRUN cd ~\nRUN apt install --no-install-recommends -y \\\n    libgstreamer1.0-dev \\\n    libgstreamer-plugins-base1.0-dev \\\n    libgtk2.0-dev libtbb-dev qt5-default \\\n    libatlas-base-dev \\\n    libfaac-dev \\\n    libmp3lame-dev \\\n    libtheora-dev \\\n    libvorbis-dev \\\n    libxvidcore-dev \\\n    libopencore-amrnb-dev \\\n    libopencore-amrwb-dev \\\n    libavresample-dev \\\n    x264 \\\n    v4l-utils && rm -rf /var/lib/apt/lists/*;\n\n# Setup OpenCV source\nRUN wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n    unzip ${OPENCV_VERSION}.zip && \\\n    rm ${OPENCV_VERSION}.zip && \\\n    mv opencv-${OPENCV_VERSION} opencv\n\n# Setup opencv-contrib Source\nRUN wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \\\n    unzip ${OPENCV_VERSION}.zip && \\\n    rm ${OPENCV_VERSION}.zip && \\\n    mv opencv_contrib-${OPENCV_VERSION} opencv_contrib\n\n# Build OpenCV\nRUN cd opencv && mkdir build && cd build && \\\n    cmake \\\n    -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules \\\n    -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D BUILD_EXAMPLES=OFF \\\n    -D BUILD_DOCS=OFF \\\n    -D BUILD_PERF_TESTS=OFF \\\n    -D BUILD_TESTS=OFF \\\n    -D BUILD_opencv_java=OFF \\\n    -D BUILD_opencv_python=OFF \\\n    .. && make -j4 && make install && ldconfig\n\nWORKDIR /\n\n# Download OpenCvSharp\nRUN git clone https://github.com/shimat/opencvsharp.git\nRUN cd opencvsharp && git fetch --all --tags --prune #&& git checkout ${OPENCVSHARP_VERSION}\n\n# Install the Extern lib.\nWORKDIR /opencvsharp/src\nRUN mkdir /opencvsharp/make\nRUN cd /opencvsharp/make && cmake -D CMAKE_INSTALL_PREFIX=/opencvsharp/make /opencvsharp/src && make -j4 && make install\nRUN ls /opencvsharp/make\n\n\n\n\nFROM microsoft/dotnet:2.1-sdk AS build-dotnet-env\nCOPY --from=build-native-env /opencvsharp/make/OpenCvSharpExtern/libOpenCvSharpExtern.so ./\nRUN git clone https://github.com/shimat/opencvsharp.git\nRUN pwd\nRUN ls\n\n# Install Build the C# part of OpenCvSharp\nWORKDIR /opencvsharp/src/OpenCvSharp\nRUN cd /opencvsharp/src/OpenCvSharp && dotnet restore\nRUN dotnet build -c Release -f netstandard2.0\n\nWORKDIR /opencvsharp/src/OpenCvSharp.Blob\nRUN cd /opencvsharp/src/OpenCvSharp.Blob && dotnet restore\nRUN dotnet build -c Release -f netstandard2.0\n\nWORKDIR /opencvsharp/src/OpenCvSharp.Extensions\nRUN cd /opencvsharp/src/OpenCvSharp.Extensions && dotnet restore\nRUN dotnet build -c Release -f netstandard2.0\n\nRUN mkdir /opencvsharp/build\nWORKDIR /opencvsharp/build\nRUN cp /libOpenCvSharpExtern.so .\nRUN cp /opencvsharp/src/OpenCvSharp/bin/Release/netstandard2.0/* .\nRUN cp /opencvsharp/src/OpenCvSharp.Blob/bin/Release/netstandard2.0/* .\nRUN cp /opencvsharp/src/OpenCvSharp.Extensions/bin/Release/netstandard2.0/* .\nRUN pwd\nRUN ls\n\n\n\n\n\nFROM microsoft/dotnet:2.2-runtime\nWORKDIR /app\nCOPY --from=build-dotnet-env /opencvsharp/build ./\nRUN pwd\nRUN ls\n#ENTRYPOINT [\"ls\"]"
}