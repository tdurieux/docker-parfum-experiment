{
  "startTime": 1674244500418,
  "endTime": 1674244500610,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rhel:7.2\n\nENV MAVEN_VERSION=\"3.3.3\" \\\n    JOLOKIA_VERSION=\"1.3.5\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-1.8.0\" \\\n    JAVA_VENDOR=\"openjdk\" \\\n    JAVA_VERSION=\"1.8.0\" \\\n    PATH=$PATH:\"/usr/local/s2i\" \\\n    AB_JOLOKIA_AUTH_OPENSHIFT=\"true\" \\\n    AB_JOLOKIA_PASSWORD_RANDOM=\"true\" \\\n    JAVA_DATA_DIR=/deployments/data\n\n# Some version information\nLABEL io.k8s.description=\"Platform for building and running plain Java applications\" \\\n      io.k8s.display-name=\"Java Applications\" \\\n      io.openshift.tags=\"builder,java\" \\\n      io.openshift.s2i.scripts-url=\"image:///usr/local/s2i\" \\\n      io.openshift.s2i.destination=\"/tmp\" \\\n      io.openshift.expose-services=\"8080,8778\" \\\n      org.jboss.deployments-dir=\"/deployments\"\n\n\n# Need to install Yum Base Packages, and Java\nRUN yum repolist > /dev/null && \\\n    yum-config-manager --enable rhel-7-server-optional-rpms && \\\n    yum clean all && \\\n    INSTALL_PKGS=\"tar \\\n    unzip \\\n    wget \\\n    which \\\n    yum-utils \\\n    rsync \\\n    java-1.8.0-openjdk-devel\" && \\\n    yum install -y --setopt=tsflags=nodocs install $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum clean all && \\\n    \n    # Add Java User\n    groupadd -r java -g 1000 && \\\n    useradd -u 185 -r -g root -m -d /opt/java -s /sbin/nologin -c \"Java user\" java && \\\n    usermod -a -G java java && \\\n\n    # Install Maven\n    curl -f https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz | \\\n    tar -xzf - -C /opt && \\\n    ln -s /opt/apache-maven-${MAVEN_VERSION} /opt/maven && \\\n    ln -s /opt/maven/bin/mvn /usr/bin/mvn && \\\n\n    # Install Jolokia\n    mkdir -p /opt/jolokia && \\\n    curl -f https://central.maven.org/maven2/org/jolokia/jolokia-jvm/${JOLOKIA_VERSION}/jolokia-jvm-${JOLOKIA_VERSION}-agent.jar \\\n         -o /opt/jolokia/jolokia.jar && \\\n\n    echo securerandom.source=file:/dev/urandom >> /usr/lib/jvm/java/jre/lib/security/java.security && rm -rf /var/cache/yum\n\n\nADD jolokia-opts /opt/jolokia/jolokia-opts\nADD jolokia.properties /opt/jolokia/etc/jolokia.properties\n\nRUN mkdir -p /opt/jolokia/etc && \\\n    chmod 444 /opt/jolokia/jolokia.jar && \\\n    chmod 755 /opt/jolokia/jolokia-opts && \\\n    chmod -R 775 /opt/jolokia/etc && \\\n    chgrp -R root /opt/jolokia/etc && \\\n    chown java:root /opt/jolokia/etc/jolokia.properties\n\nCOPY run-java.sh run-env.sh debug-options container-limits java-default-options /opt/run-java/\nRUN chmod 755 /opt/run-java/run-java.sh /opt/run-java/run-env.sh /opt/run-java/java-default-options /opt/run-java/container-limits /opt/run-java/debug-options\n\n# Expose Ports\nEXPOSE 8080 8778\n\n# S2I scripts + README\nCOPY s2i /usr/local/s2i\nRUN chmod 755 /usr/local/s2i/*\nADD README.md /usr/local/s2i/usage.txt\n\nRUN mkdir -p /deployments/data && \\\n chmod -R \"g+rwX\" /deployments && \\\n chown -R java:root /deployments\n\nCOPY settings.xml /opt/java/.m2/settings.xml\n\n# S2I requires a numeric, non-0 UID. This is the UID for the java user in the base image\nUSER 185\n\nWORKDIR /opt/java\n\n# Use the run script as default since we are working as an hybrid image which can be\n# used directly to. (If we were a plain s2i image we would print the usage info here)\nCMD [ \"/usr/local/s2i/run\" ]\n"
}