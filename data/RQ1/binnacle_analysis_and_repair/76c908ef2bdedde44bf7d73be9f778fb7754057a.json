{
  "startTime": 1674244852309,
  "endTime": 1674244852454,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 140
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 164
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\nMAINTAINER robert berry, robert@relsys.io\n\n# Install dependencies\nRUN apt-get -y update && apt-get install --no-install-recommends -y locales && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.utf8\n\nRUN apt-get -y --no-install-recommends install build-essential postgresql-9.3 postgresql-server-dev-9.3 postgresql-contrib-9.3 ruby ruby-dev git nodejs gnuplot cron && rm -rf /var/lib/apt/lists/*;\nRUN gem install bundler\nRUN pg_dropcluster 9.3 main && pg_createcluster --locale en_US.UTF-8 9.3 main\n\n# Add config files\nADD ./ /opt/pgantenna\nADD ./docker/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf\nADD ./docker/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nADD ./docker/pgantenna /etc/init.d/pgantenna\nADD ./docker/start.sh /opt/start.sh\nADD ./docker/crons.conf /opt/crons.conf\n\nRUN crontab /opt/crons.conf\n\n# Setup service script for pgantenna\nRUN chmod 755 /etc/init.d/pgantenna\n\n# Add plotpg extension and update postgres permissions\nRUN git clone https://github.com/no0p/plotpg.git; cd plotpg; make; sudo make install\nRUN chown postgres:postgres /etc/postgresql/9.3/main/pg_hba.conf; chown postgres:postgres /etc/postgresql/9.3/main/postgresql.conf;\n\n# Setup Rails\nRUN service postgresql start; cd /opt/pgantenna; bundle install; rake db:create RAILS_ENV=production; rake db:reset RAILS_ENV=production; rake assets:precompile RAILS_ENV=production\n\nEXPOSE 24831\n\nENTRYPOINT /bin/bash /opt/start.sh\n\n# Run with docker run -p 24831:24831 -p 80:80 pgantenna\n#\n# Note on building for public repository:\n#   docker build -t no0p/pgantenna .\n#   docker push no0p/pgantenna\n#\n"
}