{
  "startTime": 1674241167236,
  "endTime": 1674241167586,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\nENV BRANCH=xdmod8.1\nLABEL description=\"Base image containing XDMoD required software.\"\n\nCOPY assets/google-chrome.repo /etc/yum.repos.d\n\nRUN yum clean all\nRUN rm -rf /var/cache/yum\nRUN yum -y upgrade\n\nRUN yum -y install \\\n    epel-release && rm -rf /var/cache/yum\n\nRUN yum install -y \\\n    expect \\\n    gcc \\\n    gcc-c++ \\\n    gnu-free-sans-fonts \\\n    google-chrome-stable \\\n    make \\\n    mariadb-server \\\n    openssl \\\n    postfix \\\n    rpm-build \\\n    rsync \\\n    sudo \\\n    vim && rm -rf /var/cache/yum\n# Dependencies needed by XDMoD\nRUN curl -f -s https://raw.githubusercontent.com/ubccr/xdmod/$BRANCH/open_xdmod/modules/xdmod/xdmod.spec.in | grep '^Requires' | awk '{$1=\"\"; print $0}' | tr '\\n' ' ' | sed -E 's/[ \\t]+/\\n/g' | sort -u | grep '^[[:alpha:]]' | tr '\\n' ' ' | xargs yum install -y\nRUN curl -f -s https://raw.githubusercontent.com/ubccr/xdmod-supremm/$BRANCH/xdmod-supremm.spec.in | grep '^Requires' | awk '{$1=\"\"; print $0}' | tr '\\n' ' ' | sed -E 's/[ \\t]+/\\n/g' | sort -u | grep '^[[:alpha:]]' | grep -v xdmod | tr '\\n' ' ' | xargs yum install -y\nRUN curl -f -s https://raw.githubusercontent.com/ubccr/xdmod-federated/$BRANCH/xdmod-federated.spec.in | grep '^Requires' | awk '{$1=\"\"; print $0}' | tr '\\n' ' ' | sed -E 's/[ \\t]+/\\n/g' | sort -u | grep '^[[:alpha:]]' | grep -v xdmod | tr '\\n' ' ' | xargs yum install -y\n\nRUN yum -y install https://centos7.iuscommunity.org/ius-release.rpm && rm -rf /var/cache/yum\nRUN yum -y install git2u && rm -rf /var/cache/yum\nRUN yum -y remove ius-release\n\n# Set PHP timezone before installing XDMoD as the setup scripts need it. Be careful\n# changing the timezone as it may break integration test results if they were written\n# for a different zone.\n\nRUN sed -i 's/.*date.timezone[[:space:]]*=.*/date.timezone = UTC/' /etc/php.ini && \\\n    sed -i 's/.*memory_limit[[:space:]]*=.*/memory_limit = -1/' /etc/php.ini\nRUN rm /etc/localtime && ln -s /usr/share/zoneinfo/UTC /etc/localtime\n\n# Setup Postfix\nRUN sed -ie 's/inet_interfaces = localhost/#inet_interfaces = localhost/' /etc/postfix/main.cf  && \\\n    sed -ie 's/smtp      inet  n       -       n       -       -       smtpd/#smtp      inet  n       -       n       -       -       smtpd/' /etc/postfix/master.cf && \\\n    sed -ie 's/smtp      unix  -       -       n       -       -       smtp/smtp      unix  -       -       n       -       -       local/' /etc/postfix/master.cf && \\\n    sed -ie 's/relay     unix  -       -       n       -       -       smtp/relay     unix  -       -       n       -       -       local/' /etc/postfix/master.cf && \\\n    echo '/.*/ root' >> /etc/postfix/virtual && \\\n    postmap /etc/postfix/virtual && \\\n    echo 'virtual_alias_maps = regexp:/etc/postfix/virtual' >> /etc/postfix/main.cf && \\\n    newaliases\n\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n    EXPECTED_SIGNATURE=\"$(wget -q -O - https://composer.github.io/installer.sig)\" && \\\n    ACTUAL_SIGNATURE=\"$(php -r \"echo hash_file('SHA384', 'composer-setup.php');\")\" && \\\n    if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ]; then echo 'ERROR: Invalid composer signature'; exit 1; fi && \\\n    php composer-setup.php --install-dir=/bin --filename=composer && \\\n    php -r \"unlink('composer-setup.php');\"\n\nRUN yum clean all\nRUN rm -rf /var/cache/yum\n"
}