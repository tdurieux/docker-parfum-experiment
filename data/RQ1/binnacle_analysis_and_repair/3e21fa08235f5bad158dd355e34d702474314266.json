{
  "startTime": 1674239040079,
  "endTime": 1674239040612,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 57,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opensuse:latest\n# Tag in \"FROM\" will be replaced by \"dockit\" script\nMAINTAINER Alan Robertson <alanr@assimilationsystems.com>\nENV ZYPPER @ZYPPER@\nENV NEOROOT @NEOROOT@\nENV NEOPARENT @NEOPARENT@\nENV NEOCONF @NEOCONF@\nENV NEODATA /var/lib/neo4j/data\nENV NEOVERS @NEOVERS@\nENV NEOSERVFILE @NEOSERVFILE@\nENV GITREPOSITORY assimilation-official\nENV GITVERSION master\nENV GITHUB https://github.com/assimilation/$GITREPOSITORY\nENV GITTARZAN $GITHUB/tarball/$GITVERSION\nENV GITHASH 5e5971a # Will be updated by \"dockit\" script\nENV GITPATH assimilation-${GITREPOSITORY}-${GITHASH}\nENV CERT https://debian.neo4j.org/neotechnology.gpg.key\nENV RPMDIR /usr/src/packages\nRUN $ZYPPER install pkg-config || true\nRUN $ZYPPER install deltarpm glib2 libpcap zlib-devel python\t\t\t\\\n\tpython-devel python-flask which @JVM@ lsof\t\t\t\t\\\n\t'libsodium-devel' gcc cmake make glib2-devel valgrind resource-agents \t\\\n\twget libpcap-devel python3-pylint rpm-build iproute python-pytest\nCOPY dummy.spec /tmp/\nRUN mkdir -p $RPMDIR/SOURCES $RPMDIR/RPMS $RPMDIR/RPMS/@ARCH@\nRUN ls -l /tmp\nRUN rpmbuild -bb /tmp/dummy.spec\nRUN find $RPMDIR -print | xargs ls -ld\nRUN $ZYPPER install $RPMDIR/RPMS/@ARCH@/java*openjdk*.rpm\nRUN $ZYPPER install doxygen graphviz python-pip ca-certificates-mozilla ca-certificates-cacert\nRUN pip install --no-cache-dir 'py2neo==@PY2NEOVERS@' getent netaddr && pip install --no-cache-dir ctypesgen --pre\nENV BROKENDNS true\nRUN $ZYPPER install rsyslog\nRUN $ZYPPER install jq\n#RUN wget -q -O - $CERT > neotechnology.gpg.key; rpm --import neotechnology.gpg.key; rm neotechnology.gpg.key\n#RUN $ZYPPER ar -f http://yum.neo4j.org neo4j\n#RUN $ZYPPER refresh-services\n#RUN $ZYPPER -n --no-gpg-checks install neo4j=$NEOVERS\n########################################################################\n# This is where we roll our own installer because Neo4j doesn't have one\n#\n# Install the @NEOVERS@ of Neo4j @NEOEDITION@ edition\nRUN wget -q \"https://neo4j.com/artifact.php?name=neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz\" -O /tmp/neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz\nRUN tar -C $NEOPARENT -xzf /tmp/neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz && rm /tmp/neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz\nRUN rm -f $NEOROOT\nRUN ln -s $NEOPARENT/neo4j-@NEOEDITION@-@NEOVERS@/ $NEOROOT\nRUN useradd -c 'Neo4j Graph database' -d ${NEOROOT} --user-group --no-create-home --system --shell /bin/false neo4j\nRUN chown -R neo4j:neo4j  $NEOROOT-@NEOEDITION@-@NEOVERS@/\nRUN mkdir -p $NEODATA/databases\nRUN chown -R neo4j:neo4j $NEODATA\nRUN rm -fr $NEOROOT/data\nRUN ln -s $NEODATA $NEOROOT/data\nRUN printf '[Unit]\\nDescription = Neo4j Graph Database\\nAfter = network.target\\n\\n' > $NEOSERVFILE\nRUN printf '[Service]\\nType = simple\\n' >> $NEOSERVFILE\nRUN printf 'ExecStart = %s/bin/neo4j console\\n' \"$NEOROOT\" >> $NEOSERVFILE\nRUN printf 'TimeoutStartSec = 120\\nTimeoutStopSec = 30\\nuser=neo4j\\ngroup=neo4j\\n' >> $NEOSERVFILE\nRUN printf 'LimitNOFILE=40000\\n\\n' >> $NEOSERVFILE\nRUN printf '[Install]\\nWantedBy = multi-user.target\\n' >> $NEOSERVFILE\nRUN echo $NEOSERVFILE; cat $NEOSERVFILE\n#\n# End of our home-brew Neo4j installer...\n#\n########################################################################\nRUN echo \"@OURDATE@\"\nRUN mkdir -p /root/assimilation/bin $RPMDIR /run/systemd/journal $RPMDIR/SOURCES\nADD $GITTARZAN /root/assimilation/\nWORKDIR /root/assimilation\nRUN tar xzf $GITVERSION && mv [Aa]ssimilation-* src\nRUN set -x; cp $GITVERSION $RPMDIR/SOURCES/${GITPATH}.tgz\n# Build the RPM\nWORKDIR $RPMDIR/SOURCES\nRUN rpmbuild -ba /root/assimilation/src/docker/CentOS6/assimilation-cma.spec --define=\"assimversion $GITPATH\"\nWORKDIR /root/assimilation/bin\n# Now build separately to test installing the packages and run our tests...\nRUN cmake ../src && make install\nWORKDIR $RPMDIR/RPMS/@ARCH@/\nRUN pwd\nRUN $ZYPPER install assimilation-nanoprobe*.rpm assimilation-cma*.rpm\nRUN echo \"/usr/lib*/assimilation\" > /etc/ld.so.conf.d/assimilation.conf && ldconfig /usr/lib*/assimilation\nWORKDIR /root/assimilation/src/cma\nRUN sed /etc/rsyslog.conf -e 's%^$.*imjournal%#&%' -e 's%.*$OmitLocalLogging.*%$OmitLocalLogging off%' > /tmp/foo\nRUN printf \"%s\\n%s\\n\" '$ModLoad imuxsock' '$SystemLogSocketName /dev/log' >> /tmp/foo\nRUN  cp /tmp/foo /etc/rsyslog.conf; rm /tmp/foo\nRUN /usr/sbin/assimcli genkeys\nRUN pip install --no-cache-dir demjson\nRUN mkdir -p /var/lib/heartbeat/lrm\nRUN rsyslogd && $NEOROOT/bin/neo4j console&  sleep 20; py.test -rw -v tests\nRUN mkdir -p /root/assimilation/packages && cp $RPMDIR/RPMS/@ARCH@/*.rpm /root/assimilation/packages\nRUN echo \"GOOD BUILD: opensuse:latest\" # Will be updated by \"dockit\" script\n###  Our RPMs\nRUN echo \"GOODBUILD=$(echo \"$(lsb_release -i -s)_$(lsb_release -r -s)-$(uname -m)\" | tr '[A-Z]' '[a-z]')\"\nRUN echo \"ASSIMVERSION=$(cma --version)\"\n"
}