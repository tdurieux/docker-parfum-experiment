{
  "startTime": 1674234949230,
  "endTime": 1674234949424,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM          ubuntu:15.10\n\n# A lot of this was based on from\n# http://hg.mozilla.org/mozilla-central/file/0a25833062a8/testing/docker/desktop-test/Dockerfile\n# XXX We spin our own, as we need a more up-to-date version of ubuntu than\n# mozilla-central currently uses (for Google Chrome). Once bug 1281179 is fixed,\n# we can probably switch to the new images and reduce this.\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n\n# Note: we install Firefox & Chrome here so we have the base dependencies already\n# installed.\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y git \\\n  firefox \\\n  google-chrome-stable \\\n  python-dev \\\n  python-pip \\\n  nodejs \\\n  nodejs-legacy \\\n  npm \\\n  sudo \\\n  wget \\\n  x11vnc \\\n  xutils \\\n  xvfb \\\n  zip \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10\n\nRUN pip install --no-cache-dir virtualenv virtualenvwrapper mozdownload pyperclip\n\n# configure git and install tc-vcs\nRUN git config --global user.email \"nobody@mozilla.com\" && \\\n    git config --global user.name \"mozilla\"\n\n# Set variable normally configured at login, by the shells parent process, these\n# are taken from GNU su manual\nENV           HOME          /home/worker\nENV           SHELL         /bin/bash\nENV           USER          worker\nENV           LOGNAME       worker\nENV           HOSTNAME      taskcluster-worker\n# This makes the unit tests run in travis mode, aka disabling the sandbox\n# on Google Chrome.\nENV           TRAVIS        1\n\n# add worker user and setup its workspace\nRUN           useradd -d /home/worker -s /bin/bash -m worker\nRUN           echo \"worker:worker\" | chpasswd\n### We allow sudo, so that we can ensure google chrome is the latest without having\n### to rebuild the docker image all the time.\nRUN           adduser worker sudo\nRUN           sudo echo \"worker ALL=(ALL) NOPASSWD:ALL\" | sudo tee -a /etc/sudoers\nWORKDIR       /home/worker\nRUN           mkdir -p /home/worker/bin\nCOPY          setup-x11.sh /home/worker/bin/\nRUN           chmod 755 /home/worker/bin/*\nRUN           chown -R worker:worker /home/worker\nUSER          worker\n\n# Various useful directories\nRUN           mkdir artifacts\nRUN           mkdir artifacts/public\n\n# Set up VNC\nRUN           mkdir /home/worker/.vnc\nRUN           x11vnc -storepasswd 1234 /home/worker/.vnc/passwd\n\n# Disable Ubuntu update prompt\n# http://askubuntu.com/questions/515161/ubuntu-12-04-disable-release-notification-of-14-04-in-update-manager\nADD release-upgrades /etc/update-manager/release-upgrades\n\n# Disable tools with on-login popups that interfere with tests; see bug 1240084 and bug 984944.\nADD jockey-gtk.desktop deja-dup-monitor.desktop /etc/xdg/autostart/\n\n# Disable apport (Ubuntu app crash reporter) to avoid stealing focus from test runs\nADD apport /etc/default/apport\n\n# Disable font antialiasing for now to match releng's setup\nADD fonts.conf /home/worker/.fonts.conf\n\n# In test.sh we accept START_VNC to start a vnc daemon.\n# Exposing this port allows it to work.\nEXPOSE 5900\n\n# This helps not forgetting setting DISPLAY=:0 when running\n# tests outside of test.sh\nENV DISPLAY :0\n\n# Set a default command useful for debugging\nCMD [\"/bin/bash\", \"--login\"]\n"
}