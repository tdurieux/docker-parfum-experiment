{
  "startTime": 1674241246253,
  "endTime": 1674241246351,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-slim\nMAINTAINER Tyler Fowler <tylerfowler.1337@gmail.com>\n\n# Superset setup options\nENV SUPERSET_VERSION 0.28.1\nENV SUPERSET_HOME /superset\nENV SUP_ROW_LIMIT 5000\nENV SUP_WEBSERVER_THREADS 8\nENV SUP_WEBSERVER_PORT 8088\nENV SUP_WEBSERVER_TIMEOUT 60\nENV SUP_SECRET_KEY 'thisismysecretkey'\nENV SUP_META_DB_URI \"sqlite:///${SUPERSET_HOME}/superset.db\"\nENV SUP_CSRF_ENABLED True\nENV SUP_CSRF_EXEMPT_LIST []\nENV MAPBOX_API_KEY ''\n\nENV PYTHONPATH $SUPERSET_HOME:$PYTHONPATH\n\n# admin auth details\nENV ADMIN_USERNAME admin\nENV ADMIN_FIRST_NAME admin\nENV ADMIN_LAST_NAME user\nENV ADMIN_EMAIL admin@nowhere.com\nENV ADMIN_PWD superset\n\n# by default only includes PostgreSQL because I'm selfish\nENV DB_PACKAGES libpq-dev\nENV DB_PIP_PACKAGES psycopg2-binary sqlalchemy-redshift\n\nRUN apt-get update \\\n&& apt-get install --no-install-recommends -y \\\n  build-essential gcc \\\n  libssl-dev libffi-dev libsasl2-dev libldap2-dev \\\n&& pip install --no-cache-dir \\\n  $DB_PIP_PACKAGES flask-appbuilder superset==$SUPERSET_VERSION \\\n  # As of v0.27.0 we must specify an older version of flask for compatibility\n  'flask==0.12.4' \\\n&& apt-get remove -y \\\n  build-essential libssl-dev libffi-dev libsasl2-dev libldap2-dev \\\n&& apt-get -y autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# install DB packages separately\nRUN apt-get update && apt-get install --no-install-recommends -y $DB_PACKAGES \\\n&& apt-get autoremove -y \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/*\n\n# remove build dependencies\nRUN mkdir $SUPERSET_HOME\n\nCOPY superset-init.sh /superset-init.sh\nRUN chmod +x /superset-init.sh\n\nVOLUME $SUPERSET_HOME\nEXPOSE 8088\n\n# since this can be used as a base image adding the file /docker-entrypoint.sh\n# is all you need to do and it will be run *before* Superset is set up\nENTRYPOINT [ \"/superset-init.sh\" ]\n"
}