{
  "startTime": 1674241101296,
  "endTime": 1674241101368,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH\nFROM golang:alpine as gobuild\n\nARG GOARCH\nARG GOARM\n\nRUN apk update; \\\n    apk add --no-cache git gcc build-base; \\\n    go get -v github.com/cloudflare/cloudflared/cmd/cloudflared\n\nWORKDIR /go/src/github.com/cloudflare/cloudflared/cmd/cloudflared\n\nRUN GOARCH=${GOARCH} GOARM=${GOARM} go build ./\n\nFROM multiarch/alpine:${ARCH}-edge\n\nLABEL maintainer=\"Jan Collijs\"\n\nENV DNS1 1.1.1.1\nENV DNS2 1.0.0.1\n\nRUN adduser -S cloudflared; \\\n        apk add --no-cache ca-certificates bind-tools; \\\n        rm -rf /var/cache/apk/*;\n\nCOPY --from=gobuild /go/src/github.com/cloudflare/cloudflared/cmd/cloudflared/cloudflared /usr/local/bin/cloudflared\nHEALTHCHECK --interval=5s --timeout=3s --start-period=5s CMD nslookup -po=5054 cloudflare.com 127.0.0.1 || exit 1\n\nUSER cloudflared\n\nCMD [\"/bin/sh\", \"-c\", \"/usr/local/bin/cloudflared proxy-dns --address 0.0.0.0 --port 5054 --upstream https://${DNS1}/.well-known/dns-query --upstream https://${DNS2}/.well-known/dns-query\"]\n"
}