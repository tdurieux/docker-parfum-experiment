{
  "startTime": 1674248309316,
  "endTime": 1674248309409,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM postgres:10.1-alpine\nARG VERSION=7.1.0\nLABEL maintainer=\"Citus Data https://citusdata.com\" \\\n      org.label-schema.name=\"Citus\" \\\n      org.label-schema.description=\"Scalable PostgreSQL for multi-tenant and real-time workloads\" \\\n      org.label-schema.url=\"https://www.citusdata.com\" \\\n      org.label-schema.vcs-url=\"https://github.com/citusdata/citus\" \\\n      org.label-schema.vendor=\"Citus Data, Inc.\" \\\n      org.label-schema.version=${VERSION}-alpine \\\n      org.label-schema.schema-version=\"1.0\"\n\nRUN apk add --no-cache \\\n            --virtual builddeps \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        openssl-dev && \\\n    apk add --no-cache libcurl && \\\n    curl -sfLO \"https://github.com/citusdata/citus/archive/v${VERSION}.tar.gz\" && \\\n    tar xzf \"v${VERSION}.tar.gz\" && \\\n    cd \"citus-${VERSION}\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make install && \\\n    cd .. && \\\n    rm -rf \"citus-${VERSION}\" \"v${VERSION}.tar.gz\" && \\\n    apk del builddeps\n\n# add citus to default PostgreSQL config\nRUN echo \"shared_preload_libraries='citus'\" >> /usr/local/share/postgresql/postgresql.conf.sample\n\n# add scripts to run after initdb\nCOPY 000-configure-stats.sh 001-create-citus-extension.sql /docker-entrypoint-initdb.d/\n\n# add health check script\nCOPY pg_healthcheck /\n\nHEALTHCHECK --interval=4s --start-period=6s CMD ./pg_healthcheck\n"
}