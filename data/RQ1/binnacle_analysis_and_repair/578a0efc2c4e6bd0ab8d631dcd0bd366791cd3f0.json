{
  "startTime": 1674235857094,
  "endTime": 1674235857364,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 10,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 123,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential git cmake python3-pip libmpfr-dev libgmp-dev wget curl && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir pyyaml\nRUN pip3 install --no-cache-dir typing\n\nRUN cd && \\\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\nRUN cd && \\\nchmod +x Miniconda3-latest-Linux-x86_64.sh && \\\n./Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3\n\nRUN /root/miniconda3/bin/conda install conda-build anaconda-client\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV PATH /root/miniconda3/bin:$PATH\n\nARG PYTORCH_COMMIT\n\nRUN cd && \\\ngit clone -b fragcolor-devel https://github.com/fragcolor-xyz/pytorch.git && \\\ncd pytorch && \\\ngit reset --hard ${PYTORCH_COMMIT}\n\nRUN cd && \\\ncd pytorch && \\\ngit submodule update --init --recursive\n\nRUN conda create -n deps mkl mkl-include intel-openmp\n\n# download magma 2.4.0 pre built using same docker images - dynamic version\nRUN cd && curl -f -L -o magmalib.tar.gz \"https://drive.google.com/uc?export=download&id=1ABrWQxC9FxVSxa9tBx340jhsfg-4etjJ\" && tar xzf magmalib.tar.gz && rm magmalib.tar.gz\nENV MAGMA_HOME=/root/output\n\nRUN cd && \\\ncd pytorch && \\\nmkdir built && \\\ncd built && \\\nsource activate deps && \\\ncmake -DPYTHON_EXECUTABLE=python -DCMAKE_INCLUDE_PATH=$CONDA_PREFIX/include -DCMAKE_LIBRARY_PATH=$CONDA_PREFIX/lib -DUSE_MKLDNN=OFF -DUSE_MKL=ON -DBLAS=MKL -DUSE_OPENMP=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_ATEN_ONLY=ON -DCMAKE_INSTALL_PREFIX=`pwd`/output ../ && \\\nmake install -j10 && \\\nmake clean && \\\ncp ../tools/autograd/derivatives.yaml `pwd`/output/share/\n\n# merge with magma lib\nRUN cp -r /root/output/* /root/pytorch/built/output/\n\nCOPY conda /root/conda\n\nRUN cd && cd conda && \\\nsource activate deps && \\\nexport PATH=$PATH:/root/miniconda3/bin && \\\nexport ATEN=/root/pytorch/built/output && \\\nconda build aten\n\nARG TOKEN\n\nRUN anaconda -t ${TOKEN} upload /root/miniconda3/conda-bld/linux-64/aten-*.tar.bz2\n"
}