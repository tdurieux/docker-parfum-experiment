{
  "startTime": 1674241190062,
  "endTime": 1674241190211,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n################### Dockerfile for Salt version 2019.2.0 ##################################\n#\n# This Dockerfile builds a basic installation of Salt.\n#\n# SaltStack makes software for complex systems management at scale.\n# SaltStack is the company that created and maintains the Salt Open project and develops and sells SaltStack Enterprise software, services and support.\n# Salt is a new approach to infrastructure management built on a dynamic communication bus.\n# Salt can be used for data-driven orchestration, remote execution for any infrastructure, configuration management for any app stack, and much more.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n#\n# To start container from image & start an application in production mode\n# docker run -v <host_path>:/etc/salt -v <host_dir>:/data -d <image>\n#\n# The official website\n# https://saltstack.com/\n#\n##################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV SOURCE_DIR=/\nWORKDIR $SOURCE_DIR\n\nARG SALT_VER=v2019.2.0\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        g++ \\\n        gcc \\\n\t\tgit \\\n\t\tlibffi-dev \\\n        libsasl2-dev \\\n\t\tlibssl-dev \\\n        libxml2-dev \\\n\t\tlibxslt1-dev \\\n\t\tlibzmq3-dev \\\n\t\tmake \\\n        man \\\n\t\tpython3-dev \\\n\t\tpython3-pip \\\n\t\ttar \\\n\t\twget \\\n\n# Install required packages using pip3\n\t&& pip3 install --no-cache-dir \\\n\t\t\tpyzmq \\\n\t\t\t'PyYAML<5.1' \\\n\t\t\tpycrypto \\\n\t\t\tmsgpack-python \\\n\t\t\tjinja2 \\\n\t\t\tpsutil \\\n\t\t\tfutures \\\n\t\t\ttornado \\\n\n# Clone the repository and install SaltStack\n&& git clone git://github.com/saltstack/salt \\\n&& cd salt \\\n&& git checkout $SALT_VER \\\n&& pip3 install --no-cache-dir -e . \\\n\n# Configure SaltStack to run self-contained version\n&& cd $SOURCE_DIR \\\n&& mkdir -p etc/salt/pki/master \\\n&& mkdir -p etc/salt/pki/minion \\\n&& cp ./salt/conf/master ./salt/conf/minion etc/salt/ \\\n&& cd etc/salt/ \\\n\n# Edit config file master\n&& sed -i 's/#user: root/user: root/g' master \\\n&& sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' master \\\n\n# Edit config file minion\n&& sed -i 's/#master: salt/master: localhost/g' minion \\\n&& sed -i 's/#user: root/user: root/g' minion \\\n&& sed -i 's,#root_dir: /,'\"root_dir: $SOURCE_DIR\"',' minion \\\n\n# Clean up cache data and remove dependencies which are not required\n&& apt-get remove -y \\\n\t\t\tgcc \\\n\t\t\tgit \\\n\t\t\tg++ \\\n\t\t\tmake \\\n\t\t\twget \\\n&& apt autoremove -y && apt-get clean \\\n&& rm -rf salt/ && rm -rf /var/lib/apt/lists/*\n\nVOLUME /etc/salt\n\nVOLUME /data\n\nCMD  salt-master -c ./etc/salt & salt-minion -c ./etc/salt\n\n# End of Dockerfile\n"
}