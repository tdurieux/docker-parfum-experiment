{
  "startTime": 1674247981797,
  "endTime": 1674247982052,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# CI test image for unit/lint/type tests\nFROM node:12-alpine as browser-feature-builder\n\nRUN apk add --no-cache --update bash\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY babel.config.js tslint.json lerna.json ./\nCOPY packages ./packages\nCOPY bin ./bin\nRUN npx lerna bootstrap\nRUN npm run build\n\nRUN npm pack --verbose packages/js/\nRUN npm pack --verbose packages/browser/\nRUN npm pack --verbose packages/node/\nRUN npm pack --verbose packages/plugin-angular/\nRUN npm pack --verbose packages/plugin-react/\nRUN npm pack --verbose packages/plugin-vue/\n\nCOPY test/browser test/browser\n\nWORKDIR /app/test/browser/features/fixtures\nRUN npm install --no-package-lock --no-save ../../../../bugsnag-browser-*.tgz && npm cache clean --force;\nRUN npm install --no-package-lock --no-save ../../../../bugsnag-plugin-react-*.tgz && npm cache clean --force;\nRUN npm install --no-package-lock --no-save ../../../../bugsnag-plugin-vue-*.tgz && npm cache clean --force;\nWORKDIR plugin_angular/ng\nRUN npm install --no-package-lock --no-save \\\n  ../../../../../../bugsnag-plugin-angular-*.tgz \\\n  ../../../../../../bugsnag-node-*.tgz \\\n  ../../../../../../bugsnag-browser-*.tgz \\\n  ../../../../../../bugsnag-js-*.tgz && npm cache clean --force;\n\n# install the dependencies and build each fixture\nWORKDIR /app/test/browser/features/fixtures\nRUN find . -path */package.json -type f -mindepth 2 -maxdepth 3 | \\\n  xargs -I % bash -c 'cd `dirname %` && npm install --no-package-lock && npm run build'\n\n# once the fixtures are built we no longer need node_modules and\n# it makes the COPY later on much faster if we don't have them\nRUN rm -fr **/*/node_modules/\n\n# The maze-runner browser tests\nFROM 855461928731.dkr.ecr.us-west-1.amazonaws.com/maze-runner:v2-cli as browser-maze-runner\nRUN apk add --no-cache ruby-dev build-base libffi-dev curl-dev\nENV GLIBC_VERSION 2.23-r3\n\nRUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n  && wget \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-$GLIBC_VERSION.apk\" \\\n  && apk --no-cache add \"glibc-$GLIBC_VERSION.apk\" \\\n  && rm \"glibc-$GLIBC_VERSION.apk\" \\\n  && wget \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-bin-$GLIBC_VERSION.apk\" \\\n  && apk --no-cache add \"glibc-bin-$GLIBC_VERSION.apk\" \\\n  && rm \"glibc-bin-$GLIBC_VERSION.apk\" \\\n  && wget \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-i18n-$GLIBC_VERSION.apk\" \\\n  && apk --no-cache add \"glibc-i18n-$GLIBC_VERSION.apk\" \\\n  && rm \"glibc-i18n-$GLIBC_VERSION.apk\"\n\nRUN wget -q https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip \\\n  && unzip BrowserStackLocal-linux-x64.zip \\\n  && rm BrowserStackLocal-linux-x64.zip\n\nCOPY --from=browser-feature-builder /app/test/browser /app/test/browser/\nWORKDIR /app/test/browser\n"
}