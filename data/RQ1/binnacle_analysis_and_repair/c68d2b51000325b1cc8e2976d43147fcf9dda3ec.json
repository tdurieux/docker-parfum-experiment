{
  "startTime": 1674239577070,
  "endTime": 1674239577245,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG TARGET_ARCH=s390x\nARG TARGET_GOARCH=$TARGET_ARCH\nARG DEBARCH=$TARGET_GOARCH\nARG UID=1000\n\nVOLUME /root/go/src/github.com/skydive-project/skydive\nVOLUME /root/go/.cache/govendor\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install software-properties-common \\\n    && add-apt-repository -y ppa:ubuntu-toolchain-r/ppa \\\n    && dpkg --add-architecture $DEBARCH \\\n    && echo \"deb [arch=$DEBARCH] http://ports.ubuntu.com/ubuntu-ports bionic main universe\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=$DEBARCH] http://ports.ubuntu.com/ubuntu-ports bionic-updates main universe\" >> /etc/apt/sources.list \\\n    && apt-get -y update; \\\n    apt-get -y --no-install-recommends install git make flex bison wget unzip golang npm \\\n                   zlib1g-dev:$DEBARCH \\\n                   liblzma-dev:$DEBARCH \\\n                   libc++-dev:$DEBARCH \\\n                   libc-dev:$DEBARCH \\\n                   libpcap0.8-dev:$DEBARCH \\\n                   linux-libc-dev:$DEBARCH \\\n                   gcc-${TARGET_ARCH}-linux-gnu \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN PROTOC_VER=3.7.1; \\\n    ARCH=$(uname -m); \\\n    if [ $ARCH != x86_64 ]; then ARCH=${ARCH%%64*}${ARCH##*64}_64 ; fi ; \\\n    FILE=protoc-${PROTOC_VER}-linux-${ARCH}.zip; \\\n    wget --no-verbose https://github.com/google/protobuf/releases/download/v${PROTOC_VER}/${FILE} \\\n    && unzip ${FILE} \\\n    && mv bin/protoc /usr/bin/ \\\n    && mv include/google /usr/include \\\n    && rm \"${FILE}\"\n\nRUN mkdir -p /root/go/bin && chmod a+wrx /root/go/bin\n\nRUN arch=\"$(dpkg --print-architecture)\" \\\n    && wget --no-verbose -O /gosu \"https://github.com/tianon/gosu/releases/download/1.11/gosu-${arch##*-}\" \\\n    && chmod a+x /gosu\n\nENV UID=$UID\nRUN chown -R $UID /root/\n\nWORKDIR /root/go/src/github.com/skydive-project/skydive\n\nENV TARGET_ARCH=$TARGET_ARCH\nENV TARGET_GOARCH=$TARGET_GOARCH\n\nCMD chown -R $UID /root/go/.cache/govendor \\\n    && /gosu $UID env \\\n    HOME=/root \\\n    GOPATH=/root/go \\\n    PATH=/root/go/bin:$PATH \\\n    CGO_ENABLED=1 \\\n    CC=${TARGET_ARCH}-linux-gnu-gcc \\\n    GOOS=linux \\\n    GOARCH=$TARGET_GOARCH \\\n    make govendor compile.static WITH_OPENCONTRAIL=false WITH_LIBVIRT=false WITH_EBPF=true\n"
}