{
  "startTime": 1674244534395,
  "endTime": 1674244534531,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM tomcat:7.0-jre8\nFROM tomcat:9.0.11-jre10\n\n#-----------------------------------------------------------------------------\n# To build: docker build -t ipac/firefly --build-arg IMAGE_NAME=ipac/firefly .\n# For help in running: docker run --rm  ipac/firefly --help\n#-----------------------------------------------------------------------------\n\n# Support single server deployments\n# For multi server we need to look at multicast issues so ehcache can communicate\n\n\n# add packages: vim, etc\n# add any other standard apt packages here\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        vim procps wget emacs24-nox \\\n        && rm -rf var/lib/apt/lists//* && rm -rf /var/lib/apt/lists/*;\n\n\n# create catalina_base directory .. so tomcat can run as non-root\nENV CATALINA_HOME=/usr/local/tomcat\nENV CATALINA_BASE=/usr/local/tomcat-base\nWORKDIR ${CATALINA_BASE}\nRUN chmod g-s ${CATALINA_BASE} && \\\n    mkdir bin conf lib logs temp webapps work && \\\n    cp ${CATALINA_HOME}/conf/* ${CATALINA_BASE}/conf/ && \\\n    chmod +rw ${CATALINA_BASE}/conf/* && \\\n    chmod -R +rX ${CATALINA_HOME}\n\n\n# These environment varibles are not really made to be overridden\n# they can be but are mostly for setup\nENV JPDA_ADDRESS=5050\nENV CATALINA_PID=${CATALINA_BASE}/bin/catalina.pid\n\n# work dir and config dir might be overridden if they were used in a mounted volume\n# in the case make sure the directories exist\nENV SERVER_CONFIG_DIR=${CATALINA_BASE}/firefly-config\nENV FIREFLY_WORK_DIR=${CATALINA_BASE}/firefly-work\nENV FIREFLY_SHARED_WORK_DIR=''\nENV EXTERNAL_MOUNT_POINT=/external\nENV VISUALIZE_FITS_SEARCH_PATH=${EXTERNAL_MOUNT_POINT}\n\n# container has access to the image name, used for help only\nARG IMAGE_NAME=''\nENV BUILD_TIME_NAME=${IMAGE_NAME}\n\n\n\n# These are the file there are executed at startup, they start tomcat\nCOPY launchTomcat.sh \\\n     start-examples.txt \\\n     setupSharedCacheJars.sh ${CATALINA_BASE}/\n\n# Tomcat config files, tomcat-users is for the admin username and password\n# context.xml set delegate to true for we can use the classpath of tomcat\nCOPY tomcat-users.xml \\\n     context.xml  ${CATALINA_BASE}/conf/\n\n\n# Make directories, make scripts executable, save old tomcat config files, remove unwanted apps\nRUN chmod +x ${CATALINA_BASE}/launchTomcat.sh ${CATALINA_BASE}/setupSharedCacheJars.sh; \\\n    mkdir -p ${SERVER_CONFIG_DIR}; \\\n    mkdir -p ${FIREFLY_WORK_DIR}; \\\n    mkdir -p ${EXTERNAL_MOUNT_POINT}; \\\n    chmod 777 bin conf lib logs temp webapps work ${SERVER_CONFIG_DIR} ${FIREFLY_WORK_DIR}; \\\n    mv ${CATALINA_BASE}/conf/tomcat-users.xml ${CATALINA_BASE}/conf/tomcat-users.xml.in\n\n\n# setenv.sh is used to defined CATALINA_OPTS and JAVA_OPTS\nCOPY setenv.sh ${CATALINA_BASE}/bin/\n\n# increase max header size to avoid failing on large auth token\nRUN sed -i 's/Connector port=\"8080\"/Connector maxHttpHeaderSize=\"24576\" port=\"8080\"/g' ${CATALINA_BASE}/conf/server.xml\n\n# 8080 - http\n# 5050 - debug\nEXPOSE 8080 5050\n\n\n# ----------------------------------------------------------\n# ----------------------------------------------------------\n# Overide the following from the command line:\n#          MIN_JVM_SIZE, MAX_JVM_SIZE, ADMIN_USER, ADMIN_PASSWORD,\n#          DEBUG, jvmRoute, LOG_FILE_TO_CONSOLE, FIREFLY_OPTS,\n# ----------------------------------------------------------\n# ----------------------------------------------------------\n\n# MIN_JVM_SIZE and MAX_JVM_SIZE should be used to set the min and max JVM side\n# at least MAX_JVM_SIZE should almost alway be used on the command line with\n# parameter such as: -e \"MAX_JVM_SIZE=4G\"\nENV MIN_JVM_SIZE=1G\nENV MAX_JVM_SIZE=8G\nENV JVM_CORES=0\n\n\n#User name and password to use admin\nENV ADMIN_USER=admin\nENV ADMIN_PASSWORD=replaceMe\nENV DEBUG=false\nENV MANAGER=true\n\n# if jvmRoute is not passed the hostname (the container id) is used\n# such as: -e jvmRoute=\"myroute1\"\nENV jvmRoute=''\n\n# file to log to console, such as -e \"LOG_FILE_TO_CONSOLE=firefly.log\"\nENV LOG_FILE_TO_CONSOLE=''\n\n# FIREFLY_OPTS could be used to pass any properties, setenv.sh picks it up\nENV FIREFLY_OPTS=''\n\n# SHARE_CACHE set to TRUE when deploying multiple apps to share the VIS_SHARED_MEM cache\nENV SHARE_CACHE=FALSE\n\n\n#copy all wars, typically there should only be one\nCOPY *.war ${CATALINA_BASE}/webapps/\n\nRUN groupadd -g 91 tomcat && \\\n    useradd -r -u 91 -g tomcat tomcat\n\nUSER tomcat:tomcat\n\n#CMD [\"bin/catalina.sh\",\"jpda\", \"run\"]\n#CMD [\"/bin/bash\", \"./launchTomcat.sh\"]\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./launchTomcat.sh ${*}\", \"--\"]\n"
}