{
  "startTime": 1674236770481,
  "endTime": 1674236770576,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM tensorrt\n\n# to run, do xhost + on the host then\n# docker run --privileged -v /dev:/dev -e DISPLAY=$DISPLAY -v /tmp:/tmp --net=host --ipc=host --rm -ti openhorizon/dustyinference bash -c \"cd /jetson-inference/build/aarch64/bin && ./imagenet-camera\"\n\nWORKDIR /\n\nRUN apt-get update || true\nRUN apt-get -y --no-install-recommends install git cmake wget gstreamer1.0-plugins-good && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/dusty-nv/jetson-inference\n\n# switch to using /dev/video0 instead of jetsons own camera -1\n#RUN sed -i \"s/#define DEFAULT_CAMERA -1/#define DEFAULT_CAMERA 0/g\" /jetson-inference/imagenet-camera/imagenet-camera.cpp\n\nWORKDIR /jetson-inference\nRUN mkdir build\nWORKDIR /jetson-inference/build\nRUN cmake ../\nRUN make -j4\nWORKDIR /jetson-inference\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/lib/aarch64-linux-gnu/tegra-egl/\n#COPY bashrc /root/.bashrc\nRUN echo \"export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64:/usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra-egl/\" >> /root/.bashrc\nRUN apt-get clean\n"
}