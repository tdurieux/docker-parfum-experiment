{
  "startTime": 1674245755415,
  "endTime": 1674245755689,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 11,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Elico Corp <webmaster@elico-corp.com>\n\n# Define build constants\nENV GIT_BRANCH=master \\\n  PYTHON_BIN=python3 \\\n  SERVICE_BIN=odoo-bin\n\n# Set timezone to UTC\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Generate locales\nRUN apt update \\\n  && apt -yq --no-install-recommends install locales \\\n  && locale-gen en_US.UTF-8 \\\n  && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# Install APT dependencies\nADD sources/apt.txt /opt/sources/apt.txt\nRUN apt update \\\n  && awk '! /^ *(#|$)/' /opt/sources/apt.txt | xargs -r apt install -yq\n\n# Create the odoo user\nRUN useradd --create-home --home-dir /opt/odoo --no-log-init odoo\n\n# Switch to user odoo to create the folders mapped with volumes, else the\n# corresponding folders will be created by root on the host\nUSER odoo\n\n# If the folders are created with \"RUN mkdir\" command, they will belong to root\n# instead of odoo! Hence the \"RUN /bin/bash -c\" trick.\nRUN /bin/bash -c \"mkdir -p /opt/odoo/{etc,sources/odoo,additional_addons,data,ssh}\"\n\n# Add Odoo sources and remove .git folder in order to reduce image size\nWORKDIR /opt/odoo/sources\nRUN git clone --depth=1 https://github.com/odoo/odoo.git -b $GIT_BRANCH \\\n  && rm -rf odoo/.git\n\nADD sources/odoo.conf /opt/odoo/etc/odoo.conf\nADD auto_addons /opt/odoo/auto_addons\n\nUser 0\n\n# Install Odoo python dependencies\nRUN pip3 install --no-cache-dir -r /opt/odoo/sources/odoo/requirements.txt\n\n# Install extra python dependencies\nADD sources/pip.txt /opt/sources/pip.txt\nRUN pip3 install --no-cache-dir -r /opt/sources/pip.txt\n\n# Install wkhtmltopdf based on QT5\nRUN curl -f -o wkhtmltox.tar.xz -SL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n        && echo '3f923f425d345940089e44c1466f6408b9619562 wkhtmltox.tar.xz' | sha1sum -c - \\\n        && tar xvf wkhtmltox.tar.xz \\\n        && cp wkhtmltox/lib/* /usr/local/lib/ \\\n        && cp wkhtmltox/bin/* /usr/local/bin/ \\\n        && rm -rf wkhtmltox && rm wkhtmltox.tar.xz\n\n# Startup script for custom setup\nADD sources/startup.sh /opt/scripts/startup.sh\n\n# Provide read/write access to odoo group (for host user mapping). This command\n# must run before creating the volumes since they become readonly until the\n# container is started.\nRUN chmod -R 775 /opt/odoo && chown -R odoo:odoo /opt/odoo\n\nVOLUME [ \\\n  \"/opt/odoo/etc\", \\\n  \"/opt/odoo/additional_addons\", \\\n  \"/opt/odoo/data\", \\\n  \"/opt/odoo/ssh\", \\\n  \"/opt/scripts\" \\\n]\n\n# Use README for the help & man commands\nADD README.md /usr/share/man/man.txt\n# Remove anchors and links to anchors to improve readability\nRUN sed -i '/^<a name=/ d' /usr/share/man/man.txt\nRUN sed -i -e 's/\\[\\^\\]\\[toc\\]//g' /usr/share/man/man.txt\nRUN sed -i -e 's/\\(\\[.*\\]\\)(#.*)/\\1/g' /usr/share/man/man.txt\n# For help command, only keep the \"Usage\" section\nRUN from=$( awk '/^## Usage/{ print NR; exit }' /usr/share/man/man.txt ) && \\\n  from=$(expr $from + 1) && \\\n  to=$( awk '/^    \\$ docker-compose up/{ print NR; exit }' /usr/share/man/man.txt ) && \\\n  head -n $to /usr/share/man/man.txt | \\\n  tail -n +$from | \\\n  tee /usr/share/man/help.txt > /dev/null\n\n# Use dumb-init as init system to launch the boot script\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb /opt/sources/dumb-init.deb\nRUN dpkg -i /opt/sources/dumb-init.deb\nADD bin/boot /usr/bin/boot\nENTRYPOINT [ \"/usr/bin/dumb-init\", \"/usr/bin/boot\" ]\nCMD [ \"help\" ]\n\n# Expose the odoo ports (for linked containers)\nEXPOSE 8069 8072\n\n"
}