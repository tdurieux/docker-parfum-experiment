{
  "startTime": 1674242272329,
  "endTime": 1674242272542,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A Docker image to be used for building the sample applications for the Linux SDK CentOS7\n#\n# build:\n# $ docker build --file=Dockerfile-CentOS --tag=v4.0.0:affdex .\n#\n# the result will be an image that has the tar'ed artifact of the sample app and all of its dependencies installed\n#\n# run interactively:\n# $ docker run -it --rm v4.0.0:affdex\n\nFROM affectiva/centos7-updates\nMAINTAINER Affectiva Development (affdexdev@affectiva.com)\n\n# Repo for latest git 2.x\nRUN yum remove -y git\nRUN yum install -y http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm && rm -rf /var/cache/yum\n\nRUN yum install -y gcc \\\n                   gcc-c++ \\\n                   jhead \\\n                   curl-devel \\\n                   openssl-devel \\\n                   zlib-devel \\\n                   wget \\\n                   git \\\n                   opencv-devel \\\n                   make && rm -rf /var/cache/yum\n\nENV SRC_DIR /opt/src\nENV BUILD_DIR /opt/build\nENV ARTIFACT_DIR /opt/testapp-artifact\n\n#################################\n###### Clone Sample App Repo ######\n#################################\n\nRUN git clone https://github.com/Affectiva/cpp-sdk-samples.git $SRC_DIR/sdk-samples\n\n#### CMAKE ####\nWORKDIR $SRC_DIR\nRUN wget https://cmake.org/files/v3.8/cmake-3.8.1.tar.gz \\\n    && tar -xf cmake-3.8.1.tar.gz && rm cmake-3.8.1.tar.gz\nRUN cd $SRC_DIR/cmake-3.8.1/ && \\\n    ./bootstrap --system-curl && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf $SRC_DIR/cmake-3.8.1\n\n#### BOOST ####\nWORKDIR $SRC_DIR\nRUN wget https://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.gz --no-check-certificate && \\\n    tar -xf boost_1_63_0.tar.gz && \\\n    rm boost_1_63_0.tar.gz && \\\n    cd $SRC_DIR/boost_1_63_0 && \\\n    ./bootstrap.sh &&\\\n    ./b2 -j $(nproc) cxxflags=-fPIC threading=multi runtime-link=shared \\\n         --with-log --with-serialization --with-system --with-date_time \\\n         --with-filesystem --with-regex --with-timer --with-chrono --with-thread \\\n         --with-program_options install && \\\n    rm -rf $SRC_DIR/boost_1_63_0\n\n#### DOWNLOAD Affdex CentOS SDK ####\nWORKDIR $SRC_DIR\nRUN wget https://download.affectiva.com/linux/centos-4.8/affdex-cpp-sdk-4.0-2941-centos-7-x86_64bit.tar.gz &&\\\n    mkdir -p affdex-sdk && \\\n    tar -xf affdex-cpp* -C affdex-sdk && \\\n    rm -r $SRC_DIR/affdex-cpp-sdk-4.0-2941-centos-7-x86_64bit.tar.gz\n\n#### BUILD SAMPLE APP ####\nRUN mkdir -p $BUILD_DIR &&\\\n    cd $BUILD_DIR &&\\\n    cmake -DOpenCV_DIR=/usr/ -DBOOST_ROOT=/usr/ -DAFFDEX_DIR=$SRC_DIR/affdex-sdk $SRC_DIR/sdk-samples &&\\\n    make -j$(nproc)\n\n## CREATE THE ARTIFACT\nWORKDIR $ARTIFACT_DIR\nRUN mkdir -p $ARTIFACT_DIR &&\\\n    mv $SRC_DIR/affdex-sdk/ . &&\\\n    mv $BUILD_DIR . && \\\n    tar -cvf ../testapp-artifact.tar.gz . && rm ../testapp-artifact.tar.gz\n\nENV AFFDEX_DATA_DIR $ARTIFACT_DIR/affdex-sdk/data\nENV LD_LIBRARY_PATH $ARTIFACT_DIR/affdex-sdk/lib\nENV LD_PRELOAD /usr/lib64/libopencv_core.so\n\nWORKDIR /opt\n"
}