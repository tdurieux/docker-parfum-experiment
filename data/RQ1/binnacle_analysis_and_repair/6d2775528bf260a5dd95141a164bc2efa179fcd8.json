{
  "startTime": 1674240988493,
  "endTime": 1674240988705,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Stefan Rohe <think@hotmail.de>\n\nENV \\\n  COMPILER=dmd \\\n  COMPILER_VERSION=2.080.0\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl libcurl3 build-essential \\\n && curl -fsS -o /tmp/install.sh https://dlang.org/install.sh \\\n && bash /tmp/install.sh -p /dlang install \"${COMPILER}-${COMPILER_VERSION}\" \\\n && rm /tmp/install.sh \\\n && apt-get auto-remove -y curl build-essential \\\n && apt-get install --no-install-recommends -y gcc \\\n && rm -rf /var/cache/apt \\\n && rm -rf /dlang/${COMPILER}-*/linux/bin32 \\\n && rm -rf /dlang/${COMPILER}-*/linux/lib32 \\\n && rm -rf /dlang/${COMPILER}-*/html \\\n && rm -rf /dlang/dub-1.0.0/dub.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nENV \\\n  PATH=/dlang/dub:/dlang/${COMPILER}-${COMPILER_VERSION}/linux/bin64:${PATH} \\\n  LD_LIBRARY_PATH=/dlang/${COMPILER}-${COMPILER_VERSION}/linux/lib64 \\\n  LIBRARY_PATH=/dlang/${COMPILER}-${COMPILER_VERSION}/linux/lib64 \\\n  PS1=\"(${COMPILER}-${COMPILER_VERSION}) \\\\u@\\\\h:\\\\w\\$\"\n\nRUN cd /tmp \\\n && echo 'void main() {import std.stdio; stdout.writeln(\"it works\"); }' > test.d \\\n && dmd test.d \\\n && ./test && rm test*\n\nWORKDIR /src\n\nENV GOSU_VERSION 1.9\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends ca-certificates wget \\\n && wget -O /usr/local/bin/gosu \\\n        \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture)\" \\\n && wget -O /usr/local/bin/gosu.asc \\\n        \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture).asc\" \\\n && export GNUPGHOME=\"$(mktemp -d)\" \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n && rm -r \"${GNUPGHOME}\" /usr/local/bin/gosu.asc \\\n && chmod +x /usr/local/bin/gosu \\\n && gosu nobody true \\\n && apt-get auto-remove -y wget \\\n && rm -rf /var/lib/apt/lists/* \\\n && chmod 755 -R /dlang\n\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"${COMPILER}\"]\n"
}