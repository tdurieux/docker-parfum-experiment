{
  "startTime": 1674244535779,
  "endTime": 1674244537077,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 842,
        "columnEnd": 872
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 26,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 151
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedDockerfile": "#\n# Docker file that builds RelEx and visual question answering pipeline.\n#\n# To start:\n#    docker run -it -p 8888:8888 vqa\n#\n# To demo:\n#    open in browser localhost:8888\n#    use password: password\n#\n# That will open jupyter notebook with vqa demo\n#\nFROM ubuntu:18.04\n# use bash\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n# Avoid triggering apt-get dialogs (which may lead to errors). See:\n# https://stackoverflow.com/questions/25019183/docker-java7-install-fail\nENV DEBIAN_FRONTEND noninteractive\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64\n\nRUN apt-get update ; apt-get -y upgrade ; apt-get -y autoclean\n\n# Java\nRUN apt-get -y --no-install-recommends install maven screen telnet netcat-openbsd byobu \\\n                       wget vim git unzip sudo apt-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y --no-install-recommends install openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\n\n# GCC and basic build tools\nRUN apt-get -y --no-install-recommends install gcc g++ make swig ant && rm -rf /var/lib/apt/lists/*;\n\n# Wordnet\nRUN apt-get -y --no-install-recommends install wordnet wordnet-dev wordnet-sense-index && rm -rf /var/lib/apt/lists/*;\n\n# There are UTF8 chars in the Java sources, and the RelEx build will\n# break if build in a C environment.\nRUN apt-get -y --no-install-recommends install locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN mkdir /usr/local/share/java\n\nWORKDIR /home/Downloads/\n\n\n# build tools\nRUN apt install --no-install-recommends -y libboost-python-dev libblas-dev libboost-thread-dev libboost-filesystem-dev libboost-system-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y cmake libboost-program-options-dev libboost-regex-dev libiberty-dev guile-2.2-dev protobuf-compiler uuid-dev && rm -rf /var/lib/apt/lists/*;\n\n# Conda\n# install conda\n\nRUN apt-get install --no-install-recommends -y wget bzip2 ca-certificates \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 && rm -rf /var/lib/apt/lists/*;\n\n# Create and switch user. The user is privileged, with no password\n# required.  That is, you can use sudo.\nRUN adduser --disabled-password --gecos \"ReLex USER\" relex\nRUN adduser relex sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER relex\n\nRUN sudo chown -R relex:relex .\nRUN sudo chown -R relex:relex /home/relex\n# Punch out ports\n## plain-text-server.sh port\nEXPOSE 3333\n## opencog-server.sh port\nEXPOSE 4444\n## link-grammar-server.sh port\nEXPOSE 9000\n\nWORKDIR /home/relex\n\n# Link Parser -- changes often\n# Download the current released version of link-grammar.\n# The wget gets the latest version w/ wildcard\n\nRUN wget -r --no-parent -nH --cut-dirs=2 https://www.abisource.com/downloads/link-grammar/current/\nRUN tar -zxf current/link-grammar-5*.tar.gz && rm current/link-grammar-5*.tar.gz\n# get linkgrammar version\nRUN bash -l -c 'echo `ls|grep link|sed 's/link-grammar-//g'` >> LINKGRAMMAR_VERSION'\n\nUSER root\n\nRUN cd link-grammar-5.*/; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make -j6; sudo make install; \\\n    ldconfig;\n\nUSER relex\nRUN cd link-grammar-5.*/; mvn install:install-file \\\n    -Dfile=./bindings/java/linkgrammar-`cat ../LINKGRAMMAR_VERSION`.jar \\\n    -DgroupId=org.opencog \\\n    -DartifactId=linkgrammar \\\n    -Dversion=`cat ../LINKGRAMMAR_VERSION` \\\n    -Dpackaging=jar\n\nUSER root\nRUN rm -rf * link-grammar*\n\nUSER relex\n\n# Relex -- changes often\nRUN wget https://github.com/opencog/relex/archive/master.tar.gz -O master.tar.gz\nRUN tar -xvf master.tar.gz; rm master.tar.gz cd relex-master; mvn install\n\n\n\nRUN echo \"export LD_LIBRARY_PATH=\\$LD_LIBRARY_PATH:/usr/local/lib/\" >> /home/relex/.profile\nRUN echo \"export LD_LIBRARY_PATH=\\$LD_LIBRARY_PATH:/home/relex/miniconda3/envs/pmvqa3/lib/\" >> /home/relex/.profile\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\nRUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/anaconda.sh && \\\n    /bin/bash ~/anaconda.sh -b && \\\n    rm ~/anaconda.sh\n\nRUN /home/relex/miniconda3/bin/conda create -y --name pmvqa3 python=3.5 && \\\nsource /home/relex/miniconda3/bin/activate pmvqa3 && echo 'opencv ==3.1.0' > $(dirname $(which python))/../conda-meta/pinned && \\\n    conda install -y opencv=3.1.0 atlas bokeh ca-certificates certifi cffi click cloudpickle cudatoolkit cudnn cycler cython cytoolz dask dask-core dbus decorator distributed expat fontconfig freetype gflags glib glog gst-plugins-base gstreamer h5py hdf5 heapdict icu imageio intel-openmp jbig jinja2 jpeg leveldb libedit libffi libgcc libgcc-ng libgfortran-ng libiconv libpng libprotobuf libstdcxx-ng libtiff libxcb libxml2 lmdb locket markupsafe matplotlib mkl msgpack-python nccl ncurses networkx ninja numpy opencv openssl packaging pandas partd pcre pillow pip protobuf psutil pycparser pyparsing pyqt python python-dateutil pytorch pytz pywavelets pyyaml qt readline scikit-image scipy setuptools sip six snappy sortedcontainers sqlite tblib tk toolz tornado wheel xz yaml zict zlib jupyter && conda install -y -c conda-forge jpype1 && pip install --no-cache-dir easydict ipywebrtc\n\n\n# vqa piplie(java)\nRUN wget https://github.com/singnet/semantic-vision/archive/master.zip\n\nRUN unzip master.zip\n\nRUN rm master.zip\n\nRUN mkdir ~/projects\n\nRUN mv semantic-vision-master/ ~/projects/semantic-vision-1\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64\n\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64\" >> /home/relex/.profile\n\nRUN cd ~/projects/semantic-vision-1/experiments/opencog/question2atomese && mvn package\n\n# faster-r-cnn\nRUN source /home/relex/miniconda3/bin/activate pmvqa3 && cd ~/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/feature && \\\ngit clone https://github.com/peteanderson80/bottom-up-attention.git && \\\ncd bottom-up-attention && \\\npatch -p 1 < ../bottom-up-attention.3.patch && \\\nexport LD_LIBRARY_PATH=$(dirname $(which python))/../lib:$LD_LIBRARY_PATH && \\\ncd caffe && \\\ncp ../../Makefile.config.3 Makefile.config && \\\nmake ; make pycaffe ; cd ../lib && export PYTHONPATH=$(pwd):$(pwd)/../caffe/python:$PYTHONPATH; make\n\nRUN echo \"export PYTHONPATH=\\$PYTHONPATH:~/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/feature/bottom-up-attention/lib:~/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/feature/bottom-up-attention/lib/../caffe/python\" >> /home/relex/.profile\n\n\nUSER relex\n\n# cogutil\nRUN wget https://github.com/opencog/cogutil/archive/master.zip\nRUN unzip master.zip && cd cogutil-master/ && mkdir build &&  cd build && cmake ..\nRUN cd cogutil-master/build && sudo make install\nRUN sudo rm -rf cogutil-master master.zip\n\n# atomspace\n\n\nRUN wget https://github.com/opencog/atomspace/archive/master.zip\nRUN unzip master.zip\nRUN source /home/relex/miniconda3/bin/activate pmvqa3 && cd atomspace-master && mkdir build && cd build/ && cmake .. && make\nrun cd atomspace-master/build && sudo make install\nRUN sudo rm -rf atomspace-master/build master.zip\nRUN mv atomspace-master /home/relex/projects/atomspace\n\n# opencog\n\n\nRUN wget https://github.com/opencog/opencog/archive/master.zip\nRUN unzip master.zip\nRUN source /home/relex/miniconda3/bin/activate pmvqa3 && cd opencog-master && mkdir build && cd build/ && cmake .. && make\nRUN cd opencog-master/build && sudo make install\nRUN sudo rm -rf opencog-master/build master.zip\nRUN mv opencog-master /home/relex/projects/opencog\n\n# download some images\nRUN mkdir -p /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/images && cd /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/images/ && wget https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Plains_Zebra_Equus_quagga.jpg/440px-Plains_Zebra_Equus_quagga.jpg\n\nRUN echo \"export GUILE_AUTO_COMPILE=0\" >> /home/relex/.profile\n\nRUN echo \"(use-modules (ice-9 readline)) (activate-readline)\\ \n(add-to-load-path \\\"/usr/local/share/opencog/scm\\\")\\\n(add-to-load-path \\\"/home/relex/projects/opencog/examples/pln/conjunction/\\\")\\\n(add-to-load-path \\\"/home/relex/projects/atomspace/examples/rule-engine/rules/\\\")\\\n(add-to-load-path \\\"/home/relex/projects/opencog/opencog/pln/rules/\\\")\\\n(add-to-load-path \\\".\\\")\\\n(use-modules (opencog))\\\n(use-modules (opencog query))\\\n(use-modules (opencog exec))\" >> /home/relex/.guile\n\nRUN echo \"export PYTHONPATH=\\$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/\" >> /home/relex/.profile\nRUN echo \"export PYTHONPATH=\\$PYTHONPATH:/usr/local/lib/python3/dist-packages/\" >> /home/relex/.profile\n\nRUN source /home/relex/miniconda3/bin/activate pmvqa3 && jupyter notebook --generate-config\n\nRUN echo \"c.NotebookApp.password = 'sha1:b6e570f197d6:b920933b262cf450f5c11dc21d878c53972cb2fa'\" >> /home/relex/.jupyter/jupyter_notebook_config.py\n\nRUN echo \"c.NotebookApp.password_required = False\" >> /home/relex/.jupyter/jupyter_notebook_config.py\n\nRUN echo \"c.NotebookApp.port = 8888\" >> /home/relex/.jupyter/jupyter_notebook_config.py\n\nRUN chmod +x /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/vqa\n\nCMD /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/vqa\n"
}