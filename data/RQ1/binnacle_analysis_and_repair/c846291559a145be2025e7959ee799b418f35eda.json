{
  "startTime": 1674241294108,
  "endTime": 1674241294304,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 225
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\n# Keep upstart from complaining\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -sf /bin/true /sbin/initctl\n\n# Let the conatiner know that there is no tty\nENV DEBIAN_FRONTEND noninteractive\n\n# install the PHP extensions we need\nRUN apt-get update && apt-get install --no-install-recommends -y curl sendmail vim-common vim-runtime libpng12-dev libjpeg-dev wget unzip nginx php5-fpm php5-curl php-apc python-setuptools php5-cli php5-gd php5-mysql php5-oauth mysql-client git-core && rm -rf /var/lib/apt/lists/*\n\n# nginx config\nRUN sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf\nRUN sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf\nRUN sed -i -e\"s/user www-data/user root/\" /etc/nginx/nginx.conf\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# php-fpm config\nRUN sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf\nRUN sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php5/fpm/pool.d/www.conf\nRUN sed -i -e \"s/user\\s*=\\s*www-data/user = root/g\" /etc/php5/fpm/pool.d/www.conf\nRUN sed -i -e \"s/group\\s*=\\s*www-data/group = root/g\" /etc/php5/fpm/pool.d/www.conf\nRUN sed -i -e \"s/listen.owner\\s*=\\s*www-data/listen.owner = root/g\" /etc/php5/fpm/pool.d/www.conf\nRUN find /etc/php5/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;\n\n# nginx site conf\nADD ./nginx-site.conf /etc/nginx/sites-available/default\n\n# Supervisor Config\nRUN /usr/bin/easy_install supervisor\nRUN /usr/bin/easy_install supervisor-stdout\nADD ./supervisord.conf /etc/supervisord.conf\n\n# install wp-cli\nRUN wget https://github.com/wp-cli/builds/raw/gh-pages/deb/php-wpcli_0.17.1_all.deb\nRUN dpkg -i php-wpcli_0.17.1_all.deb\n\n# install wp-cli server command\nRUN mkdir -p ~/.wp-cli/commands\nRUN git clone https://github.com/wp-cli/server-command.git ~/.wp-cli/commands/server\n\nVOLUME /var/www/html\n\nENV WORDPRESS_VERSION 4.2.2\nENV WORDPRESS_UPSTREAM_VERSION 4.2.2\nENV WORDPRESS_SHA1 d3a70d0f116e6afea5b850f793a81a97d2115039\n\n# upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress\nRUN curl -f -o wordpress.tar.gz -SL https://wordpress.org/wordpress-${WORDPRESS_UPSTREAM_VERSION}.tar.gz \\\n\t&& echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \\\n\t&& tar -xzf wordpress.tar.gz -C /usr/src/ \\\n\t&& rm wordpress.tar.gz\n\nADD ./docker-entrypoint.sh /entrypoint.sh\nADD ./config.yml /root/.wp-cli/\n\nWORKDIR /var/www/html\n\n# grr, ENTRYPOINT resets CMD now\nENTRYPOINT [\"/entrypoint.sh\"]\n\n# start all the services\nCMD [\"/usr/local/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]"
}