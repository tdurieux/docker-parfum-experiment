{
  "startTime": 1674236586786,
  "endTime": 1674236587015,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as builder\n\nENV GOPATH /go\nARG GIT_REMOTE_URL=https://github.com/coreroller/coreroller\nARG GIT_BRANCH=master\nWORKDIR /build\n\nRUN set -x \\\n    && apk --no-cache add git curl \\\n    ca-certificates postgresql postgresql-contrib tzdata \\\n    && mkdir -p /build /coreroller/static \\\n    # Switch to https://pkgs.alpinelinux.org/package/edge/testing/x86_64/gb once this is in stable\n    && git clone --branch v0.4.4 https://github.com/constabulary/gb /go/src/github.com/constabulary/gb \\\n    && go get github.com/constabulary/gb/... \\\n    && git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REMOTE_URL} \\\n    && cd coreroller/backend \\\n    && /go/bin/gb build \\\n    && cp /build/coreroller/backend/bin/rollerd /coreroller\n\nFROM node:9-alpine as assets\nWORKDIR /build\nARG GIT_REMOTE_URL=https://github.com/coreroller/coreroller\nARG GIT_BRANCH=master\n\nRUN apk --no-cache add git \\\n    && git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REMOTE_URL} \\\n    && cd /build/coreroller/frontend \\\n    && npm install \\\n    && npm run build && npm cache clean --force;\n\nFROM alpine:3.8\nENV PGDATA /coreroller/data\n\nRUN apk --no-cache add ca-certificates tzdata curl \\\n    postgresql postgresql-contrib \\\n    && mkdir -p /coreroller/static /run/postgresql \\\n    && chown -R postgres:postgres /run/postgresql \\\n    && curl -f -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" \\\n    && chmod +x /usr/local/bin/gosu\n\nCOPY --from=builder /build/coreroller/backend/bin/rollerd /coreroller/\nCOPY --from=assets /build/coreroller/frontend/built/ /coreroller/static/\n\nADD docker-entrypoint.sh /\nEXPOSE 8000\nCMD [\"/docker-entrypoint.sh\"]\n"
}