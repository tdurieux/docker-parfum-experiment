{
  "startTime": 1674249675783,
  "endTime": 1674249676121,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n# Based on Waleed Abdulla work\nMAINTAINER Benoit Courty <nospam@gmail.fr>\n\n# Supress warnings about missing front-end. As recommended at:\n# http://stackoverflow.com/questions/22466255/is-it-possibe-to-answer-dialog-questions-when-installing-under-docker\nARG DEBIAN_FRONTEND=noninteractive\n\n# Essentials: developer tools, build tools, OpenBLAS\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    apt-utils git curl vim unzip openssh-client wget \\\n    build-essential cmake \\\n    libopenblas-dev && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n#\n# Python 3.5\n#\n# For convenience, alias (but don't sym-link) python & pip to python3 & pip3 as recommended in:\n# http://askubuntu.com/questions/351318/changing-symlink-python-to-python3-causes-problems\nRUN apt-get install -y --no-install-recommends python3.5 python3.5-dev python3-pip python3-tk && apt-get clean -y && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    echo \"alias python='python3'\" >> /root/.bash_aliases && \\\n    echo \"alias pip='pip3'\" >> /root/.bash_aliases && rm -rf /var/lib/apt/lists/*;\n# Pillow and it's dependencies\nRUN apt-get install -y --no-install-recommends libjpeg-dev zlib1g-dev && \\\n    pip3 --no-cache-dir install Pillow && rm -rf /var/lib/apt/lists/*;\n# Science libraries and other common packages\nRUN pip3 --no-cache-dir install \\\n    numpy scipy  scikit-image  matplotlib Cython\n#sklearn requests pandas\n\n#\n# Tensorflow 1.6.0 - CPU\n#\nRUN pip3 install --no-cache-dir --upgrade tensorflow\n\n# Expose port for TensorBoard\n#EXPOSE 6006\n\n#\n# OpenCV 3.4.1\n#\n# Dependencies\nRUN apt-get install -y --no-install-recommends \\\n    libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev \\\n    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libgtk2.0-dev \\\n    liblapacke-dev checkinstall && rm -rf /var/lib/apt/lists/*;\n# Get source from github\nRUN git clone -b 3.4.1 --depth 1 https://github.com/opencv/opencv.git /usr/local/src/opencv\n# Compile\nRUN cd /usr/local/src/opencv && mkdir build && cd build && \\\n    cmake -D CMAKE_INSTALL_PREFIX=/usr/local \\\n          -D BUILD_TESTS=OFF \\\n          -D BUILD_PERF_TESTS=OFF \\\n          -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \\\n          .. && \\\n    make -j\"$(nproc)\" && \\\n    make install && \\\n    cd .. && rm -rf /usr/local/src/opencv\n\n#\n# Keras 2.1.5\n#\nRUN pip3 install --no-cache-dir --upgrade h5py pydot_ng keras\n\n#\n# PyCocoTools\n#\n# Using a fork of the original that has a fix for Python 3.\n# I submitted a PR to the original repo (https://github.com/cocodataset/cocoapi/pull/50)\n# but it doesn't seem to be active anymore.\nRUN pip3 install --no-cache-dir git+https://github.com/waleedka/coco.git#subdirectory=PythonAPI\n\nRUN pip3 --no-cache-dir install imgaug IPython\n\n# Set matplotlib to headless mode\nRUN mkdir -p /root/.config/matplotlib/ && echo \"backend : Agg\" > /root/.config/matplotlib/matplotlibrc\n\n# Install Mask_RCNN\n#RUN  git clone --depth 1  https://github.com/matterport/Mask_RCNN.git /usr/local/src/Mask_RCNN\nRUN  git clone https://github.com/gtgalone/Mask_RCNN.git /usr/local/src/Mask_RCNN && \\\n   cd /usr/local/src/Mask_RCNN && git checkout fix-keras-engine-topology &&  rm -rf /usr/local/src/Mask_RCNN/.git  && \\\n   cd /usr/local/src/Mask_RCNN && $(which python3) setup.py install\n\n\n\nRUN wget --quiet https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5 -O /usr/local/src/Mask_RCNN/mask_rcnn_coco.h5\n\n# Clean : useless as Docker will kept original files in history\n#RUN rm -rf /usr/local/src/opencv\n# /build\n#    && make clean\nRUN apt-get purge -y --no-install-recommends \\\n    apt-utils git curl vim unzip openssh-client wget \\\n    build-essential cmake \\\n    libopenblas-dev\n#RUN rm -rf /usr/local/src/Mask_RCNN/.git\n\nWORKDIR \"/usr/local/src/Mask_RCNN/samples\"\nADD maskrcnn.py /usr/local/src/Mask_RCNN/samples\n# CMD [\"/bin/bash\"]\nENTRYPOINT [\"/bin/bash\", \"-c\",  \"/usr/local/src/Mask_RCNN/samples/maskrcnn.py \\\"$@\\\"\", \"--\"]\n"
}