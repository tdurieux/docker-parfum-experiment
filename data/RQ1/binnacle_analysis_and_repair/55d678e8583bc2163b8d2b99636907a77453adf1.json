{
  "startTime": 1674238920794,
  "endTime": 1674238920994,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 245
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 245
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 245
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 269
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nRUN apt-get update --fix-missing\n\nRUN apt-get -y --no-install-recommends install curl && rm -rf /var/lib/apt/lists/*;\n\n# Add the Cloud SDK distribution URI as a package source\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\n\n# Import the Google Cloud Platform public key\nRUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\n# install node\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\n\nRUN apt-get -y --no-install-recommends install nodejs python python-dev python-pip gcc libpq-dev ffmpeg imagemagick ghostscript python-tk make git gettext openjdk-9-jre-headless curl libjpeg-dev wkhtmltopdf google-cloud-sdk fonts-freefont-ttf xfonts-75dpi poppler-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L -o wkhtmltox.deb https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.xenial_amd64.deb && dpkg -i wkhtmltox.deb\n\nRUN npm install -g yarn && npm cache clean --force;\n\nCOPY ./package.json .\nCOPY ./yarn.lock .\nRUN yarn install && yarn cache clean;\nENV PATH=\"/node_modules/.bin:$PATH\"\n\nCOPY Pipfile .\nCOPY Pipfile.lock .\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -U pipenv\n# install the environment exactly as specified in the Pipfile.lock file\nRUN pipenv install --system --ignore-pipfile --keep-outdated\n\nCOPY  . /contentcuration/\nWORKDIR /contentcuration\n\n# generate the node bundles\nRUN mkdir -p contentcuration/static/js/bundles\nRUN ln -s /node_modules /contentcuration/node_modules\nRUN yarn run build -p\n\n# Download the translated strings\n# Note: this only runs if CROWDIN_PROJECT and CROWDIN_API_KEY\n# env vars are defined.\n# Crowdin credentials that can be passed in during build time\nARG CROWDIN_PROJECT\nARG CROWDIN_API_KEY\nRUN CROWDIN_PROJECT=$CROWDIN_PROJECT CROWDIN_API_KEY=$CROWDIN_API_KEY deploy/downloadmessages.py\n\nEXPOSE 8000\n\nENTRYPOINT [\"make\", \"altprodserver\"]\n"
}