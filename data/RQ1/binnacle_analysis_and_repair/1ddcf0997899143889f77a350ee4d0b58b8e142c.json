{
  "startTime": 1674243814200,
  "endTime": 1674243814677,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 78
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 14,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 8,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM        denismakogon/ffmpeg-alpine:4.0-dependencies AS build-stage\nFROM        alpine:3.7\nWORKDIR     /tmp/workdir\n\nARG        PKG_CONFIG_PATH=/usr/local/ffmpeg/pkgconfig\nARG        LD_LIBRARY_PATH=/usr/local/ffmpeg\nARG        PREFIX=/usr/local\nARG        MAKEFLAGS=\"-j2\"\n\nENV        FFMPEG_VERSION=4.0\n\nRUN     buildDeps=\"autoconf \\\n                   automake \\\n                   bash \\\n                   binutils \\\n                   bzip2 \\\n                   cmake \\\n                   curl \\\n                   coreutils \\\n                   diffutils \\\n                   expat-dev \\\n                   file \\\n                   g++ \\\n                   gcc \\\n                   gperf \\\n                   libtool \\\n                   make \\\n                   python \\\n                   openssl-dev \\\n                   tar \\\n                   yasm \\\n                   zlib-dev\" && \\\n        apk  add --no-cache ${buildDeps} libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0\n\nCOPY --from=build-stage ${PREFIX}/bin ${PREFIX}/bin\nCOPY --from=build-stage ${PREFIX}/lib ${PREFIX}/lib\nCOPY --from=build-stage ${PREFIX}/share ${PREFIX}/share\nCOPY --from=build-stage ${PREFIX}/include ${PREFIX}/include\n\n\n## ffmpeg https://ffmpeg.org/\nRUN \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n        tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-ffplay \\\n        --enable-shared \\\n        --enable-avresample \\\n        --enable-libopencore-amrnb \\\n        --enable-libopencore-amrwb \\\n        --enable-gpl \\\n        --enable-libass \\\n        --enable-libfreetype \\\n        --enable-libvidstab \\\n        --enable-libmp3lame \\\n        --enable-libopenjpeg \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n        --enable-libx264 \\\n        --enable-nonfree \\\n        --enable-openssl \\\n        --enable-libfdk_aac \\\n        --enable-libkvazaar \\\n        --enable-libaom --extra-libs=-lpthread \\\n        --enable-postproc \\\n        --enable-small \\\n        --enable-version3 \\\n        --extra-cflags=\"-I${PREFIX}/include\" \\\n        --extra-ldflags=\"-L${PREFIX}/lib\" \\\n        --extra-libs=-ldl \\\n        --prefix=\"${PREFIX}\" && \\\n        make && \\\n        make install && \\\n        make distclean && rm -rf -d && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\nRUN \\\n        mkdir -p /tmp/fakeroot/lib  && \\\n        ldd ${PREFIX}/bin/ffmpeg | cut -d ' ' -f 3 | strings | xargs -I R cp R /tmp/fakeroot/lib/ && \\\n        for lib in /tmp/fakeroot/lib/*; do strip --strip-all $lib; done && \\\n        cp -r ${PREFIX}/bin /tmp/fakeroot/bin/ && \\\n        cp -r ${PREFIX}/share /tmp/fakeroot/share/ && \\\n        cp -r ${PREFIX}/include /tmp/fakeroot/include && \\\n        LD_LIBRARY_PATH=/tmp/fakeroot/lib /tmp/fakeroot/bin/ffmpeg -buildconf\n\nRUN ls -la /tmp/fakeroot\n#copy /bin\n#copy /lib\n#copy /include\n#copy /share\n"
}