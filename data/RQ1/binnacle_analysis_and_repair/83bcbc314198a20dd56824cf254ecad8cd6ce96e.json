{
  "startTime": 1674246451636,
  "endTime": 1674246451813,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos/s2i-core-centos7\nENV HTTPD_VERSION=2.4\n\nENV SUMMARY=\"Platform for running Apache httpd $HTTPD_VERSION or building httpd-based application\" \\\n    DESCRIPTION=\"Apache httpd $HTTPD_VERSION available as docker container, is a powerful, efficient, \\\nand extensible web server. Apache supports a variety of features, many implemented as compiled modules \\\nwhich extend the core functionality. \\\nThese can range from server-side programming language support to authentication schemes. \\\nVirtual hosting allows one Apache installation to serve many different Web sites.\"\n\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"Apache httpd $HTTPD_VERSION\" \\\n      io.openshift.expose-services=\"8080:http,8443:https\" \\\n      io.openshift.tags=\"builder,httpd,httpd24\" \\\n      name=\"centos/httpd-24-centos7\" \\\n      version=\"$HTTPD_VERSION\" \\\n      com.redhat.component=\"httpd24-docker\" \\\n      usage=\"s2i build https://github.com/sclorg/httpd-container.git --context-dir=examples/sample-test-app/ centos/httpd-24-centos7 sample-server\" \\\n      maintainer=\"SoftwareCollections.org <sclorg@redhat.com>\"\n\nEXPOSE 8080\n\nRUN yum install -y yum-utils && \\\n    yum install -y centos-release-scl epel-release && \\\n    INSTALL_PKGS=\"gettext hostname nss_wrapper bind-utils httpd24 mod_wsgi\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum clean all && rm -rf /var/cache/yum\n\nENV HTTPD_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/httpd/ \\\n    HTTPD_APP_ROOT=${APP_ROOT} \\\n    HTTPD_CONFIGURATION_PATH=${APP_ROOT}/etc/httpd.d \\\n    HTTPD_MAIN_CONF_PATH=/etc/httpd/conf \\\n    HTTPD_MAIN_CONF_D_PATH=/etc/httpd/conf.d \\\n    HTTPD_VAR_RUN=/var/run/httpd \\\n    HTTPD_DATA_PATH=/var/www \\\n    HTTPD_DATA_ORIG_PATH=/opt/rh/httpd24/root/var/www \\\n    HTTPD_LOG_PATH=/var/log/httpd24 \\\n    HTTPD_SCL=httpd24\n\nENV BASH_ENV=${HTTPD_APP_ROOT}/scl_enable \\\n    ENV=${HTTPD_APP_ROOT}/scl_enable \\\n    PROMPT_COMMAND=\". ${HTTPD_APP_ROOT}/scl_enable\"\n\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\nCOPY ./root /\n\nRUN rpm -ivh https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm\nRUN yum install -y python-pip wget https://packages.endpoint.com/rhel/7/os/x86_64//git-2.8.4-1.ep7.x86_64.rpm && rm -rf /var/cache/yum\n\nRUN wget -P /tmp https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-client-tools-v3.7.1-ab0f056-linux-64bit.tar.gz && \\\n    tar -zxvf  /tmp/openshift-origin-client-tools-v3.7.1-ab0f056-linux-64bit.tar.gz -C /tmp && \\\n    mv /tmp/openshift-origin-client-tools-v3.7.1-ab0f056-linux-64bit/oc /usr/bin && \\\n    rm -rf /tmp/* && rm /tmp/openshift-origin-client-tools-v3.7.1-ab0f056-linux-64bit.tar.gz\n\nRUN mkdir /opt/app-root/src/.kube &&  chmod 777 /opt/app-root/src/.kube\n\nRUN pip install --no-cache-dir --upgrade pip flask datetime oauth2client httplib2 wtforms urllib3 requests python-dateutil google-api-python-client\n\nRUN mkdir -p /dashai/\nADD app.tgz /dashai/\nRUN chmod 777 -R /dashai/token &&  chmod 777 /dashai/token/*\n\nADD httpd.conf /etc/httpd/conf/\n\n# Reset permissions of filesystem to default values\nRUN /usr/libexec/httpd-prepare && rpm-file-permissions\n\nRUN chmod 777 -R /var/log/httpd\nUSER 1001\n\n\nCMD [\"/usr/bin/run-httpd\"]\n"
}