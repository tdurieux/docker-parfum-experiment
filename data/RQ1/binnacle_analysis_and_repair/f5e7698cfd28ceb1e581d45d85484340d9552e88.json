{
  "startTime": 1674252472023,
  "endTime": 1674252472207,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\nMAINTAINER Jan Janssen <janssen@mpie.de>\n\n# Inspired by :\n# * https://github.com/jupyter/docker-stacks\n# * https://github.com/CognitiveScale/alpine-miniconda\n# * https://github.com/show0k/alpine-jupyter-docker\n# * https://github.com/datarevenue-berlin/alpine-miniconda\n\n# Install glibc and useful packages\nRUN echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n    && apk --update add \\\n    bash \\\n    curl \\\n    ca-certificates \\\n    libstdc++ \\\n    glib \\\n    git \\\n    tini@testing \\\n    && curl -f \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" -o /etc/apk/keys/sgerrand.rsa.pub \\\n    && curl -f -L \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o glibc.apk \\\n    && apk add glibc.apk \\\n    && curl -f -L \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o glibc-bin.apk \\\n    && apk add glibc-bin.apk \\\n    && curl -f -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.25-r0/glibc-i18n-2.25-r0.apk\" -o glibc-i18n.apk \\\n    && apk add --allow-untrusted glibc-i18n.apk \\\n    && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n    && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc/usr/lib \\\n    && rm -rf glibc*apk /var/cache/apk/*\n\n# Configure environment\nENV CONDA_DIR /opt/conda\nENV PATH ${CONDA_DIR}/bin:${PATH}\nENV SHELL /bin/bash\nENV PYIRON_USER pyiron\nENV PYIRON_UID 1000\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV HOME /home/${PYIRON_USER}\n\n# Configure Miniconda\nENV MINICONDA_VER 4.5.1\nENV MINICONDA Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh\nENV MINICONDA_URL https://repo.continuum.io/miniconda/${MINICONDA}\nENV MINICONDA_MD5_SUM 0c28787e3126238df24c5d4858bd0744\n\nCOPY . ${HOME}\n\n# Create user with UID=1000 and in the 'users' group\nRUN adduser -s ${SHELL} --disabled-password --gecos \"Default user\" -u ${PYIRON_UID} -D ${PYIRON_USER} \\\n    && mkdir -p ${CONDA_DIR} \\\n    && chown ${PYIRON_USER} ${CONDA_DIR} \\\n    && chown -R ${PYIRON_USER} ${HOME}\n\nUSER ${PYIRON_USER}\n\n# Install\nRUN cd /tmp \\\n    && mkdir -p ${CONDA_DIR} \\\n    && curl -f -L ${MINICONDA_URL} -o miniconda.sh \\\n    && echo \"${MINICONDA_MD5_SUM}  miniconda.sh\" | md5sum -c - \\\n    && ${SHELL} miniconda.sh -f -b -p ${CONDA_DIR} \\\n    && rm miniconda.sh \\\n    && ${CONDA_DIR}/bin/conda install --yes conda==${MINICONDA_VER} \\\n    && conda env update -n root -f \"${HOME}/binder/environment.yml\" \\\n    && ${SHELL} ${HOME}/binder/postBuild \\\n    && conda clean --all -y \\\n    && rm ${HOME}/Dockerfile ${HOME}/deploy.sh\n\nUSER root\n\n# Configure container startup as root\nWORKDIR ${HOME}/\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"jupyter\", \"notebook\", \"--ip\", \"0.0.0.0\"]\n\n# Switch back to pyiron to avoid accidental container runs as root\nUSER ${PYIRON_USER}\n"
}