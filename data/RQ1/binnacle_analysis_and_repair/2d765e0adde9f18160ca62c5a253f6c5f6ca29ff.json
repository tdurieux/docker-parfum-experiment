{
  "startTime": 1674243856252,
  "endTime": 1674243856342,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# multi-stage build for the ondevice .deb packages\n\n#\n# stage0: build\n#\nARG SOURCE_IMAGE\nFROM ${SOURCE_IMAGE}\n\nRUN apt-get update && apt-get -y --no-install-recommends install devscripts git curl wget && rm -rf /var/lib/apt/lists/*;\n\nRUN adduser --gecos builduser,,, --disabled-password user\nRUN mkdir -p /target/\n\n# install go\n#WORKDIR /usr/local/\n#ARG GOARCH\n#RUN wget https://storage.googleapis.com/golang/go1.9.2.linux-${GOARCH}.tar.gz\n#RUN tar xfz go1.9.2*.tar.gz\n#RUN ln -s /usr/local/go/bin/* /usr/local/bin/\n\n#ENV GOPATH=/go/\n#ENV PATH=/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n#RUN mkdir -p /go/bin /go/src\n\n# install glide\nRUN curl -f https://glide.sh/get | sh\n\nCOPY / /go/src/github.com/ondevice/ondevice/\nCOPY /build/deb/debian/ /go/src/github.com/ondevice/ondevice/debian\nCOPY /build/linux/ondevice-daemon.init.d /go/src/github.com/ondevice/ondevice/debian\nCOPY /build/linux/ondevice-daemon.service /go/src/github.com/ondevice/ondevice/debian\nCOPY /build/linux/ondevice-daemon.tmpfile /go/src/github.com/ondevice/ondevice/debian\n\n# fix permissions (TODO this is unusually slow)\nRUN chown -R user:user /go/ /target/\n\nWORKDIR /go/src/github.com/ondevice/ondevice/\nRUN mk-build-deps -ir -t 'apt-get -y'\nUSER user\n\n# check package version\nARG VERSION\nARG VERSION_SUFFIX\nRUN test \"$(dpkg-parsechangelog --show-field Version)\" = \"${VERSION}\"\n\nRUN if [ -n \"$VERSION_SUFFIX\" ]; then dch --newversion \"${VERSION}${VERSION_SUFFIX}\" 'automated build'; fi\n\nRUN glide install\nARG BUILD_ARGS\nARG GOARCH\nARG TRAVIS_TAG\nRUN GOARCH=${GOARCH} TRAVIS_TAG=${TRAVIS_TAG} dpkg-buildpackage -us -uc ${BUILD_ARGS}\nRUN cp -a ../ondevice*.deb /target/\n\n#\n# test stage (doesn't support cross-compiling)\n#\n#FROM ${SOURCE_IMAGE}\n#RUN apt-get update && apt-get -y install ssh rsync ca-certificates\n\n#RUN mkdir -p /target/\n#COPY --from=0 /target/ /target/\n#COPY /build/test.sh /\n#RUN dpkg -i /target/ondevice_*.deb\n#RUN apt-get -f install\n#RUN /test.sh\n\n#WORKDIR /target/\n"
}