{
  "startTime": 1674236625336,
  "endTime": 1674236625659,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 32,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#  Author: Hari Sekhon\n#  Date: 2016-01-16 09:58:07 +0000 (Sat, 16 Jan 2016)\n#\n#  vim:ts=4:sts=4:sw=4:et\n#\n#  https://github.com/harisekhon/Dockerfiles\n#\n#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help improve or steer this or other code I publish\n#\n#  https://www.linkedin.com/in/harisekhon\n#\n\nFROM harisekhon/nagios-plugins:centos\nMAINTAINER Hari Sekhon (https://www.linkedin.com/in/harisekhon)\n\nLABEL Description=\"CentOS + my GitHub repos pre-built\"\n\n# unit test for lib-java fails when sh is found in /usr/bin/sh as /usr/bin is earlier in the path than /bin\nENV PATH /bin:$PATH:/github/nagios-plugins:/github/devops-perl-tools:/github/devops-python-tools:/github/bash-tools:/github/spotify\n\nENV JAVA_HOME=/usr\n\nRUN mkdir -vp /github\n\nWORKDIR /github\n\n# this is too big and unwieldy and makes caching/maintenance hard\n#RUN git clone https://github.com/harisekhon/bash-tools /github/bash-tools && /github/bash-tools/get-my-repos.sh && cd /github/nagios-plugins && make zookeeper && /github/bash-tools/clean-my-repos.sh && yum clean all\n\nRUN set -euxo pipefail && \\\n    yum install -y make git java-1.8.0-openjdk-devel && \\\n    curl -f -L https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo && \\\n    yum install -y --nogpgcheck sbt && \\\n    yum autoremove -y && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum\n\n# drops in to /bin/sh pushd not available, could bash -c but explicit paths are good enough\nRUN set -euxo pipefail && \\\n    for x in bash-tools lib tools; do \\\n        git clone https://github.com/harisekhon/$x /github/$x && \\\n        cd /github/$x && \\\n        make build test clean && \\\n        yum autoremove -y && \\\n        yum clean all && \\\n        rm -rf /var/cache/yum || \\\n        exit 1; \\\n    done\nRUN set -euxo pipefail && \\\n    x=spotify && \\\n        git clone https://github.com/harisekhon/$x /github/$x && \\\n        cd /github/$x && \\\n        make build clean && \\\n        yum autoremove -y && \\\n        yum clean all && \\\n        rm -rf /var/cache/yum\n\n# inherited instead now\n#RUN x=nagios-plugins; git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build zookeeper clean; yum autoremove -y && yum clean all\n\nRUN set -euxo pipefail && \\\n    for x in pylib pytools; do \\\n        git clone https://github.com/harisekhon/$x /github/$x && \\\n        cd /github/$x && \\\n        make build test clean \\\n        || exit 1; \\\n    done && \\\n    yum autoremove -y && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum && \\\n    # downgrading certifi package is a workaround so that dockerhub_show_tags.py will work with SSL\n    pip uninstall -y certifi && pip install --no-cache-dir certifi==2015.04.28\n\n# could 'make deep-clean' to remove the wrappers and local build libs but it's a trade off between being able to develop quicker by not having to redownload them to recompile\n# instead build each project with a different build tool and don't deep-clean so we have them cached for faster development in docker\nRUN set -euxo pipefail && \\\n    x=lib-java && \\\n    git clone https://github.com/harisekhon/$x /github/$x && \\\n    cd /github/$x && \\\n    make gradle test clean && \\\n    yum autoremove -y && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum\n\nRUN set -euxo pipefail && \\\n    x=nagios-plugin-kafka && \\\n    git clone https://github.com/harisekhon/$x /github/$x && \\\n    cd /github/$x && \\\n    make mvn test clean && \\\n    yum autoremove -y && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum\n\n#RUN set -euxo pipefail && \\\n#    x=spark-apps && \\\n#    git clone https://github.com/harisekhon/$x /github/$x && \\\n#    cd /github/$x && \\\n#    make sbt test clean && \\\n#    yum autoremove -y && \\\n#    yum clean all && \\\n#    rm -rf /var/cache/yum\n\n# trick to invalidate cache at this point to pull latest updates\n# not needed any more since DockerHub does the build now and doesn't cache anyway\n#COPY invalidate_cache /tmp\n# pull updates\n#RUN /github/bash-tools/update-my-repos.sh && /github/bash-tools/clean-my-repos.sh && yum clean all\n#RUN cd /github/nagios-plugins && make zookeeper && make clean-zookeeper\n#RUN rm -f /tmp/invalidate_cache\n\nCOPY profile.d/java.sh /etc/profile.d/\n\nCMD /bin/bash\n"
}