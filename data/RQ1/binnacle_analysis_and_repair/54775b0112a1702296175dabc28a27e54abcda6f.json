{
  "startTime": 1674236504378,
  "endTime": 1674236504972,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 19,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 27,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 19,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 33,
        "columnStart": 39,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 212,
        "columnEnd": 252
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 33,
        "columnStart": 39,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 212,
        "columnEnd": 252
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "# Pull base image.\nFROM php:5.6-apache\nCOPY config/php.ini /usr/local/etc/php/\n\n# ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y --fix-missing \\\n  ruby-dev \\\n  rubygems \\\n  imagemagick \\\n  graphviz \\\n  sudo \\\n  git \\\n  vim \\\n  memcached \\\n  libmemcached-tools \\\n  libpng-dev \\\n  libjpeg62-turbo-dev \\\n  libmcrypt-dev \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  mysql-client \\\n  zip \\\n  wget \\\n  linux-libc-dev \\\n  libyaml-dev \\\n  apt-transport-https \\\n  zlib1g-dev \\\n  libicu-dev \\\n  gnupg2 \\\n  libssl-dev \\\n  libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list && apt-get update && apt-get install --no-install-recommends -y postgresql-client-9.5 && rm -rf /var/lib/apt/lists/*;\n\n# Install PECL packages\nCOPY docker-php-pecl-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-pecl-install\nRUN docker-php-pecl-install \\\n  uploadprogress-1.0.3.1 \\\n  memcache-3.0.8 \\\n  yaml-1.2.0 \\\n  mongo-1.6.12\n\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n&& docker-php-ext-install \\\n  gd \\\n  mbstring \\\n  mcrypt \\\n  zip \\\n  soap \\\n  mysql \\\n  pdo_mysql \\\n  mysqli \\\n  xsl \\\n  opcache \\\n  calendar \\\n  intl \\\n  exif \\\n  pgsql \\\n  pdo_pgsql \\\n  ftp\n\n    # Installation node.js\n    RUN curl -f -sL https://deb.nodesource.com/setup_8.x | sudo bash -\n    RUN apt-get install --no-install-recommends -y nodejs build-essential; rm -rf /var/lib/apt/lists/*; \\\n    # Installation of LESS\n    npm update -g npm && \\\n    npm install -g less && npm install -g less-plugin-clean-css; \\\n    # Installation of Grunt\n    npm install -g grunt-cli; npm cache clean --force; \\\n    # Installation of Gulp\n    npm install -g gulp; \\\n    # Installation of Composer\n    cd /usr/src && curl -f -sS https://getcomposer.org/installer | php; \\\n    cd /usr/src && mv composer.phar /usr/bin/composer; \\\n    # Installation of drush\n    git clone https://github.com/drush-ops/drush.git /usr/local/src/drush; \\\n    cd /usr/local/src/drush && git checkout 8.1.2; \\\n    ln -s /usr/local/src/drush/drush /usr/bin/drush; \\\n    cd /usr/local/src/drush && composer update && composer install; \\\n    # Add drush components\n    mkdir /var/www/.drush; \\\n    cd /var/www/.drush && wget https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.3.zip && unzip registry_rebuild-7.x-2.3.zip; \\\n    cd /var/www/.drush && wget https://ftp.drupal.org/files/projects/site_audit-7.x-1.15.zip && unzip site_audit-7.x-1.15.zip; \\\n    cd /var/www/.drush && rm *.zip; \\\n    chown -R www-data:www-data /var/www; \\\n    sudo -u www-data drush cc drush; \\\n    # Installation of PHP_CodeSniffer with Drupal coding standards.\n    # See https://www.drupal.org/node/1419988#coder-composer\n    composer global require drupal/coder; \\\n    ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin; \\\n    ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin; \\\n    phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\n\nRUN rm -rf /var/www/html && \\\n  mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html && \\\n  chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n\n# install msmtp\nRUN set -x \\\n    && DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update && apt-get install -y --no-install-recommends msmtp && rm -r /var/lib/apt/lists/*\nADD core/msmtprc.conf /usr/local/etc/msmtprc\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\n\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\nRUN chown -R www-data:www-data /var/www\n\n# Installation of Opcode cache\nRUN ( \\\n  echo \"opcache.memory_consumption=128\"; \\\n  echo \"opcache.interned_strings_buffer=8\"; \\\n  echo \"opcache.max_accelerated_files=4000\"; \\\n  echo \"opcache.revalidate_freq=5\"; \\\n  echo \"opcache.fast_shutdown=1\"; \\\n  echo \"opcache.enable_cli=1\"; \\\n  ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN a2enmod rewrite expires && service apache2 restart\n\n# install phing\nRUN pear channel-discover pear.phing.info && pear install [--alldeps] phing/phing\n\n# install phpcpd\nRUN wget https://phar.phpunit.de/phpcpd.phar && chmod +x phpcpd.phar && mv phpcpd.phar /usr/local/bin/phpcpd\n\n# install phpmetrics\nRUN wget https://github.com/phpmetrics/PhpMetrics/raw/master/build/phpmetrics.phar && chmod +x phpmetrics.phar && mv phpmetrics.phar /usr/local/bin/phpmetrics\n\n# Install Drupal Console for Drupal 8\nRUN curl -f https://drupalconsole.com/installer -L -o drupal.phar && mv drupal.phar /usr/local/bin/drupal && chmod +x /usr/local/bin/drupal\n\n# Our apache volume\nVOLUME /var/www/html\n\n# create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n\n# Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata\n\n# Expose 80 for apache, 9000 for xdebug\nEXPOSE 80 9000\n\n# Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}