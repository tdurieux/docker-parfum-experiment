{
  "startTime": 1674249820039,
  "endTime": 1674249820478,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 129
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 6,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 81,
        "columnStart": 8,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER Grow SDK Authors <hello@grow.io>\n\nARG grow_version\n\nRUN echo \"Grow: $grow_version\"\n\n# Use LTS Versions when available.\nENV CLOUD_SDK_VERSION=213.0.0 NODE_VERSION=v8.11.4 NPM_VERSION=6 YARN_VERSION=latest\n\nENV PATH /google-cloud-sdk/bin:$PATH\n\n# Install Grow.\nRUN apk update \\\n  && apk add --update \\\n    python \\\n    python-dev \\\n    py-pip \\\n    build-base \\\n    libffi-dev \\\n    libressl-dev \\\n    g++ \\\n    yaml-dev \\\n  && python --version \\\n  && pip install --no-cache-dir --upgrade pip wheel \\\n  && pip install --no-cache-dir --upgrade grow==$grow_version \\\n  && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n\n# Install GCloud.\n# See https://cloud.google.com/sdk/docs/#linux\n# From https://github.com/GoogleCloudPlatform/cloud-sdk-docker\nRUN apk update \\\n  && apk add \\\n      curl \\\n      python \\\n      py-crcmod \\\n      bash \\\n      libc6-compat \\\n      openssh-client \\\n      git \\\n  && curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n  && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n  && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n  && ln -s /lib /lib64 \\\n  && gcloud config set core/disable_usage_reporting true \\\n  && gcloud config set component_manager/disable_update_check true \\\n  && rm -rf /usr/share/man /tmp/* /var/cache/apk/*\n\n# Install Node.\n# From https://github.com/mhart/alpine-node\nRUN apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ \\\n  && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do \\\n    gpg --batch --keyserver $server --recv-keys \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n      77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    && break; \\\n  done \\\n  && curl -sfSLO https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.xz \\\n  && curl -sfSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt | \\\n    grep \" node-${NODE_VERSION}.tar.xz\\$\" | sha256sum -c | grep ': OK$' \\\n  && tar -xf node-${NODE_VERSION}.tar.xz \\\n  && cd node-${NODE_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr ${CONFIG_FLAGS} \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && make install \\\n  && cd / \\\n  && if [ -z \"$CONFIG_FLAGS\" ]; then \\\n    if [ -n \"$NPM_VERSION\" ]; then \\\n      npm install -g npm@${NPM_VERSION}; npm cache clean --force; \\\n    fi; \\\n    find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf; \\\n    if [ -n \"$YARN_VERSION\" ]; then \\\n      echo \"Installing Yarn ${YARN_VERSION}\" \\\n      && for server in ipv4.pool.sks-keyservers.net keyserver.pgp.com ha.pool.sks-keyservers.net; do \\\n        gpg --batch --keyserver $server --recv-keys \\\n          6A010C5166006599AA17F08146C2130DFD2497F5 && break; \\\n      done \\\n      && curl -sfSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O https://yarnpkg.com/${YARN_VERSION}.tar.gz.asc \\\n      && gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz \\\n      && mkdir /usr/local/share/yarn \\\n      && tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 \\\n      && ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ \\\n      && ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ \\\n      && rm ${YARN_VERSION}.tar.gz*; \\\n    fi; \\\n  fi \\\n  && apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS} \\\n  && rm -rf /usr/share/man /tmp/* /var/cache/apk/* \\\n  && rm -rf /node-${NODE_VERSION}* /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man \\\n    /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts\n\n# Confirm versions that are installed.\nRUN echo \"Grow: `grow --version`\" \\\n  && echo \"Node: `node -v`\" \\\n  && echo \"NPM: `npm -v`\" \\\n  && echo \"Yarn: `yarn --version`\" \\\n  && echo \"GCloud: `gcloud -v`\"\n"
}