{
  "startTime": 1674249400017,
  "endTime": 1674249400116,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Sam Ainsworth <sa614@cam.ac.uk>\n\n# Install standard packages.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-all \\\n    git bzip2 sudo wget zip xz-utils \\\n    build-essential g++ && rm -rf /var/lib/apt/lists/*;\n\n# Install extra deps for imaging\nRUN apt-get install --no-install-recommends -y libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev python-pillow && rm -rf /var/lib/apt/lists/*;\n\n# Install the core Collective Knowledge (CK) module.\nENV CK_ROOT=/ck-master \\\n    CK_REPOS=/CK \\\n    CK_TOOLS=/CK-TOOLS \\\n    PATH=${CK_ROOT}/bin:${PATH}\n\nRUN mkdir -p ${CK_ROOT} ${CK_REPOS} ${CK_TOOLS}\nRUN git clone https://github.com/ctuning/ck.git ${CK_ROOT}\nRUN cd ${CK_ROOT} && python setup.py install && python -c \"import ck.kernel as ck\"\n\n# Install other CK modules.\nRUN ck pull repo --url=https://github.com/SamAinsworth/reproduce-cgo2017-paper\nRUN ck compile program:nas-cg --speed --env.CK_COMPILE_TYPE=auto\n\n# Set the CK web service defaults.\nENV CK_PORT=3344 \\\n    WFE_PORT=3344\n\n# Expose CK port\nEXPOSE ${CK_PORT}\n\n# Start the CK web service (for dashboard)\n# Note, that container will have it's own IP,\n# that's why we need `hostname -i` below\n#CMD export CK_LOCAL_HOST=`hostname -i` ; \\\n#    if [ \"${CK_HOST}\" = \"\" ]; then export CK_HOST=$CK_LOCAL_HOST ; fi ; \\\n#    if [ \"${WFE_HOST}\" = \"\" ]; then export WFE_HOST=$CK_LOCAL_HOST ; fi ; \\\n#    ck start web \\\n#    --host=${CK_HOST} --port=${CK_PORT} \\\n#    --wfe_host=${WFE_HOST} --wfe_port=${WFE_PORT}\n\nCMD bash\n"
}