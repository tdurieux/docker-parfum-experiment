{
  "startTime": 1674249960690,
  "endTime": 1674249960772,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile_afi_vmx\n# Build docker container where VMX can also be run along with AFI client\n#\n# Advanced Forwarding Interface : AFI client examples\n#\n# Created by Sandesh Kumar Sodhi, January 2017\n# Copyright (c) [2017] Juniper Networks, Inc. All rights reserved.\n#\n# All rights reserved.\n#\n# Notice and Disclaimer: This code is licensed to you under the Apache\n# License 2.0 (the \"License\"). You may not use this code except in compliance\n# with the License. This code is not an official Juniper product. You can\n# obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n#\n# Third-Party Code: This code may depend on other components under separate\n# copyright notice and license terms. Your use of the source code for those\n# components is subject to the terms and conditions of the respective license\n# as noted in the Third-Party source code file.\n#\n\nFROM afi-docker\nLABEL maintainer \"Sandesh Kumar Sodhi\"\n\nARG VMX_BUNDLE\n#\n# Build\n#  Copy VMX bundle image to current directory and then build container using following command\n#  docker build -f Dockerfile_afi_vmx --build-arg VMX_BUNDLE=<vmx bundle image> -t afi-vmx-docker .\n#  E.g.\n#  docker build -f Dockerfile_afi_vmx --build-arg VMX_BUNDLE=vmx-bundle.tgz -t afi-vmx-docker .\n#\n# Run:\n#  docker run --name afi-vmx --privileged -i -t afi-vmx-docker /bin/bash\n#\n\n#\n# Packages needed for VMX\n#\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n apparmor \\\n apparmor-utils \\\n apparmor-profiles \\\n qemu-kvm \\\n libvirt-bin \\\n python \\\n python-netifaces \\\n vnc4server \\\n libyaml-dev \\\n python-yaml \\\n numactl \\\n libparted0-dev \\\n libpciaccess-dev \\\n libnuma-dev \\\n libyajl-dev \\\n libxml2-dev \\\n libglib2.0-dev \\\n libnl-dev \\\n python-pip \\\n python-dev \\\n libxml2-dev \\\n libxslt-dev && rm -rf /var/lib/apt/lists/*;\n\n#\n# Steps needed to run VMX successfully\n#\nRUN cp /etc/libvirt/qemu.conf /etc/libvirt/qemu.conf.orig\nRUN sed -i -e 's/#user = \"root\"/user = \"root\"/g' /etc/libvirt/qemu.conf\nRUN sed -i -e 's/#group = \"root\"/group = \"kvm\"/g' /etc/libvirt/qemu.conf\n#\n#diff qemu.conf.orig qemu.conf\n#229c229\n#< #user = \"root\"\n#---\n#> user = \"root\"\n#233c233\n#< #group = \"root\"\n#---\n#> group = \"kvm\"\n\n\nCOPY scripts  /root/scripts\nCOPY cfg      /root/cfg\n\n#\n# Copy VMX image now\n#\nRUN echo $VMX_BUNDLE\nENV  VMX_BUNDLE_IMAGE $VMX_BUNDLE\nCOPY $VMX_BUNDLE /root/$VMX_BUNDLE_IMAGE\n\n\nCOPY entrypoint.sh /root/entrypoint.sh\n\nENTRYPOINT [\"/root/entrypoint.sh\"]\n"
}