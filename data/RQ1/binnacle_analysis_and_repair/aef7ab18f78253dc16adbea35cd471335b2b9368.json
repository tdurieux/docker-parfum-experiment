{
  "startTime": 1674243470511,
  "endTime": 1674243470644,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:vivid\nMAINTAINER caktux\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Usual update / upgrade\nRUN apt-get update\nRUN apt-get upgrade -q -y\nRUN apt-get dist-upgrade -q -y\n\n# Install useful tools\nRUN apt-get install --no-install-recommends -q -y sudo wget vim git && rm -rf /var/lib/apt/lists/*;\n\n# Install requirements\nRUN apt-get install --no-install-recommends -q -y graphviz-dev libfreetype6-dev pkg-config python python-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install pip\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python get-pip.py\n\n# Install docker-machine, docker-compose and docker client\nRUN wget -O /usr/bin/docker-machine https://github.com/docker/machine/releases/download/v0.2.0/docker-machine_linux-amd64\nRUN chmod +x /usr/bin/docker-machine\nRUN wget -O /usr/bin/docker-compose https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m`\nRUN chmod +x /usr/bin/docker-compose\nRUN wget -O /usr/bin/docker https://get.docker.com/builds/Linux/x86_64/docker-latest\nRUN chmod +x /usr/bin/docker\n\n# We add requirements.txt first to prevent unnecessary local rebuilds\nADD requirements.txt requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Add existing machines, which can be saved using `docker cp <container>:/root/.docker/machine/machines ./`\n# ADD machines /root/.docker/machine/machines\n\n# Install system-testing\nADD . system-testing\nWORKDIR system-testing\nRUN pip install --no-cache-dir -e .\n\nVOLUME [\"/root/.boto\"]\n"
}