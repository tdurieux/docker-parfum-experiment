{
  "startTime": 1674241657488,
  "endTime": 1674241657653,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##################################################\n#\n# Dockerfile to build the Application Server\n# Based on: Python 3.4\n#\n##################################################\n\n# Set the base image to Python 3.4\nFROM python:3.5\n\n# Do not buffer the output from stdout.\nENV PYTHONUNBUFFERED 1\n\n# Set the working directory.\nWORKDIR /usr/src/externalvoterregistration/\n\n# Copy our python webapp over.\nCOPY . /usr/src/externalvoterregistration/\n\n# Install our dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        python3 \\\n        python3-pip \\\n        libpq-dev \\\n        libffi-dev \\\n        libyaml-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install our webapp via pip\nRUN pip3 install --no-cache-dir .\n\n# Expose our ports\nEXPOSE 8080\n\n# Run django migrate command to setup database migration, then start the server.\n#CMD . ./bin/docker_entrypoint\nENTRYPOINT [ \"./bin/docker_entrypoint\" ]\n"
}