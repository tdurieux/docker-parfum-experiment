{
  "startTime": 1674252152360,
  "endTime": 1674252152431,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# Pull in our big-endian cross-compiler\nFROM cfretz244/libdart_ci:bebuilder\n\n# Set ourselves to use a login shell\n# so we use our big-endian toolchain\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\n\n# We need to install rapidjson to build our\n# parsing tests, and unfortunately the\n# version on APT is 3 years out of date.\nRUN apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN BUILD_DIR=$(mktemp -d)                                                                \\\n  && pushd $BUILD_DIR \\\n  && curl -f -sL \"https://github.com/Tencent/rapidjson/archive/v1.1.0.tar.gz\" | tar xzf - \\\n  && cd rapidjson-1.1.0 \\\n  && cp -r include/rapidjson /usr/local/include \\\n  && popd \\\n  && rm -rf $BUILD_DIR\n\n# Copy the code in.\nCOPY . /root/libdart\n\n# Compile it.\nCMD cd /root/libdart                                                                      \\\n  && mkdir build                                                                          \\\n  && cd build                                                                             \\\n  && cmake .. -D32bit=ON -Dstatic_test=ON -Dextended_test=ON                              \\\n  && make VERBOSE=1\n"
}