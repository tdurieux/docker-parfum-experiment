{
  "startTime": 1674236851823,
  "endTime": 1674236852971,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.10\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n        busybox-static \\\n        bc && rm -rf /var/lib/apt/lists/*;\nRUN apt-get build-dep -y --no-install-recommends iptables\n# This causes iptables to fail to compile... don't know why yet\nRUN apt-get purge -y libnfnetlink-dev\n\n# Build static iptables\nCOPY iptables-1.4.21.tar.bz2 /usr/src/\nRUN cd /usr/src && \\\n    tar xjf iptables-1.4.21.tar.bz2 && \\\n    cd iptables-1.4.21 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared && \\\n    make -j4 LDFLAGS=\"-all-static\" && rm iptables-1.4.21.tar.bz2\n\n# Build kernel\nCOPY linux-3.18.1.tar.xz /usr/src/\nRUN cd /usr/src && \\\n    tar xJf linux-3.18.1.tar.xz && rm linux-3.18.1.tar.xz\nCOPY assets/kernel_config /usr/src/linux-3.18.1/.config\nRUN cd /usr/src/linux-3.18.1 && \\\n    make oldconfig\nRUN apt-get install --no-install-recommends -y bc && rm -rf /var/lib/apt/lists/*;\nRUN cd /usr/src/linux-3.18.1 && \\\n    make -j4 bzImage\nRUN cd /usr/src/linux-3.18.1 && \\\n    make -j4 modules\nRUN mkdir -p /usr/src/root && \\\n    cd /usr/src/linux-3.18.1 && \\\n    make INSTALL_MOD_PATH=/usr/src/root modules_install firmware_install && rm -rf /usr/src/root\n\n# Taken from boot2docker\n# Remove useless kernel modules, based on unclejack/debian2docker\nRUN cd /usr/src/root/lib/modules && \\\n    rm -rf ./*/kernel/sound/* && \\\n    rm -rf ./*/kernel/drivers/gpu/* && \\\n    rm -rf ./*/kernel/drivers/infiniband/* && \\\n    rm -rf ./*/kernel/drivers/isdn/* && \\\n    rm -rf ./*/kernel/drivers/media/* && \\\n    rm -rf ./*/kernel/drivers/staging/lustre/* && \\\n    rm -rf ./*/kernel/drivers/staging/comedi/* && \\\n    rm -rf ./*/kernel/fs/ocfs2/* && \\\n    rm -rf ./*/kernel/net/bluetooth/* && \\\n    rm -rf ./*/kernel/net/mac80211/* && \\\n    rm -rf ./*/kernel/net/wireless/*\n\n# Install docker\nRUN apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\nCOPY docker-1.4.1.tgz /usr/src/\nRUN mkdir -p /usr/src/root/bin && \\\n    tar xvzf /usr/src/docker-1.4.1.tgz --strip-components=3 -C /usr/src/root/bin && rm -rf /usr/src/root/bin\n\n# Create dhcp image\nRUN /usr/src/root/bin/docker -s vfs -d --bridge none & \\\n    sleep 1 && \\\n    /usr/src/root/bin/docker pull busybox && \\\n    /usr/src/root/bin/docker run --name export busybox false ; \\\n    /usr/src/root/bin/docker export export > /usr/src/root/.dhcp.tar\n\n# Install isolinux\nRUN apt-get install --no-install-recommends -y \\\n    isolinux \\\n    xorriso && rm -rf /var/lib/apt/lists/*;\n\n# Start assembling root\nCOPY assets/init /usr/src/root/\nCOPY assets/console-container.sh /usr/src/root/bin/\nRUN cd /usr/src/root/bin && \\\n    cp /bin/busybox . && \\\n    chmod u+s busybox && \\\n    cp /usr/src/iptables-1.4.21/iptables/xtables-multi iptables && \\\n    strip --strip-all iptables && \\\n    for i in mount modprobe mkdir openvt sh mknod; do \\\n        ln -s busybox $i; \\\n    done && \\\n    cd .. && \\\n    mkdir -p ./etc/ssl/certs && \\\n    cp /etc/ssl/certs/ca-certificates.crt ./etc/ssl/certs && \\\n    ln -s bin sbin\nRUN mkdir -p /usr/src/only-docker/boot && \\\n    cd /usr/src/root && \\\n    find | cpio -H newc -o | lzma -c > ../only-docker/boot/initrd && \\\n    cp /usr/src/linux-3.18.1/arch/x86_64/boot/bzImage ../only-docker/boot/vmlinuz && rm -rf /usr/src/only-docker/boot\nRUN mkdir -p /usr/src/only-docker/boot/isolinux && \\\n    cp /usr/lib/ISOLINUX/isolinux.bin /usr/src/only-docker/boot/isolinux && \\\n    cp /usr/lib/syslinux/modules/bios/ldlinux.c32 /usr/src/only-docker/boot/isolinux && rm -rf /usr/src/only-docker/boot/isolinux\nCOPY assets/isolinux.cfg /usr/src/only-docker/boot/isolinux/\n# Copied from boot2docker, thanks.\nRUN cd /usr/src/only-docker && \\\n    xorriso \\\n        -publisher \"Rancher Labs, Inc.\" \\\n        -as mkisofs \\\n        -l -J -R -V \"OnlyDocker-v0.1\" \\\n        -no-emul-boot -boot-load-size 4 -boot-info-table \\\n        -b boot/isolinux/isolinux.bin -c boot/isolinux/boot.cat \\\n        -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin \\\n        -o /only-docker.iso $(pwd)\n"
}