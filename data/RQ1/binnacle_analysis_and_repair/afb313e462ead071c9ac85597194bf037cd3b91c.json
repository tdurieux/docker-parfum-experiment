{
  "startTime": 1674249588435,
  "endTime": 1674249588664,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG COMMIT\nARG VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"MonicaHQ, the Personal Relationship Manager\" \\\n      org.label-schema.description=\"This is MonicaHQ, your personal memory! MonicaHQ is like a CRM but for the friends, family, and acquaintances around you.\" \\\n      org.label-schema.url=\"https://monicahq.com\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/monicahq/monica\" \\\n      org.label-schema.vendor=\"Monica\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n\nRUN apk update && apk upgrade\nRUN apk add --no-cache --virtual .build-deps \\\n        curl openssl bash\nRUN apk add --no-cache netcat-openbsd \\\n\n        php7 php7-intl php7-openssl php7-ctype \\\n        php7-zip php7-zlib \\\n        php7-redis \\\n\n        php7-session php7-tokenizer \\\n\n        php7-dom \\\n\n        php7-fileinfo \\\n\n        php7-gd \\\n\n        php7-phar php7-json php7-iconv \\\n\n        php7-mbstring \\\n\n        php7-simplexml \\\n\n        php7-xml php7-xmlreader php7-xmlwriter \\\n\n        php7-mysqli php7-pdo_mysql \\\n\n        php7-pgsql php7-pdo_pgsql \\\n\n        php7-bcmath \\\n\n        php7-curl \\\n\n        php7-gmp \\\n\n        apache2 php7-apache2\n\n# Create a user to own all the code and assets and give them a working\n# directory\nRUN mkdir -p /var/www/monica; \\\n    grep -q apache /etc/group || addgroup -S apache; \\\n    adduser -D monica apache -h /var/www/monica\nWORKDIR /var/www/monica\n\n# Copy the local (outside Docker) source into the working directory,\n# copy system files into their proper homes, and set file ownership\n# correctly\nCOPY readme.md \\\n    CONTRIBUTING.md \\\n    CHANGELOG \\\n    CONTRIBUTORS \\\n    LICENSE \\\n    artisan \\\n    composer.json \\\n    composer.lock \\\n    ./\nCOPY app ./app\nCOPY bootstrap ./bootstrap\nCOPY config ./config\nCOPY database ./database\nCOPY public ./public\nCOPY resources ./resources\nCOPY routes ./routes\n\nRUN mkdir -p bootstrap/cache; \\\n    mkdir -p storage; \\\n    chown -R monica:monica .; \\\n    chgrp -R apache bootstrap/cache storage; \\\n    chmod -R g+w bootstrap/cache storage\nCOPY .env.example .env\n\n# Sentry\nRUN echo $VCS_REF > .sentry-release; \\\n    echo $COMMIT > .sentry-commit; \\\n    mkdir -p /root/.local/bin && \\\n    curl -f -sL https://sentry.io/get-cli/ | INSTALL_DIR=/root/.local/bin bash\n\n# Composer installation\nCOPY scripts/docker/install-composer.sh /usr/local/sbin/\nRUN install-composer.sh\n\n# Install composer dependencies\nUSER monica\nRUN composer global require hirak/prestissimo; \\\n    composer install --no-interaction --no-suggest --no-progress --no-dev; \\\n    composer global remove hirak/prestissimo; \\\n    composer clear-cache\nUSER root\n\n# Set crontab for schedules\nRUN set -ex && \\\n\tcd /etc/periodic/hourly/ && \\\n\t{ \\\n\t\techo '#!/bin/sh'; \\\n\t\techo '/usr/bin/php /var/www/monica/artisan schedule:run -v'; \\\n\t} | tee monica && \\\n\tchmod a+x monica\n\n# Cleanup\nRUN apk del .build-deps && \\\n    rm -rf /var/cache/apk/*\n\nCOPY scripts/docker/entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"entrypoint.sh\"]\n\n# Apache2\nCOPY scripts/docker/apache2-foreground /usr/local/sbin/\nCOPY scripts/docker/000-default.conf /etc/apache2/conf.d/\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n"
}