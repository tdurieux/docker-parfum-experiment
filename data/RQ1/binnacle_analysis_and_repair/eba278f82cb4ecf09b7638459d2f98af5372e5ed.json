{
  "startTime": 1674248768724,
  "endTime": 1674248768781,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3-alpine\n\nADD requirements.txt /ebooks/\n\nWORKDIR /ebooks/\nVOLUME /ebooks/data/\n\nRUN apk add --no-cache --virtual .build-deps gcc musl-dev libffi-dev openssl-dev \\\n && pip install --no-cache-dir -r requirements.txt \\\n && apk del --purge .build-deps \\\n && ln -s data/config.json . \\\n && ln -s data/toots.db .\n\nADD *.py /ebooks/\n\nRUN (echo \"*/30 * * * * cd /ebooks/ && python gen.py\"; \\\n     echo \"5 */2 * * * cd /ebooks/ && python main.py\"; \\\n     echo \"@reboot cd /ebooks/ && python reply.py\") | crontab -\n\nENV ebooks_site=https://botsin.space\n\nCMD (test -f data/config.json || echo \"{\\\"site\\\":\\\"${ebooks_site}\\\"}\" > data/config.json) \\\n && (test -f data/toots.db || (python main.py && exit)) \\\n && exec crond -f -L /dev/stdout\n"
}