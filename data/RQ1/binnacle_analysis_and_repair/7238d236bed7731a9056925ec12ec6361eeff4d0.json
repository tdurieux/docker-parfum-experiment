{
  "startTime": 1674242047143,
  "endTime": 1674242047703,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 31,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 42,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 40,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 20,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\n\nARG RTORRENT_VER=0.9.6\nARG LIBTORRENT_VER=0.13.6\nARG MEDIAINFO_VER=0.7.99\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.2\nARG LIBZEN_VER=0.4.37\nARG FLOOD_VER=1.0.0\nARG BUILD_CORES\n\nENV UID=991 GID=991 \\\n    FLOOD_SECRET=supersecret \\\n    CONTEXT_PATH=/ \\\n    RTORRENT_SCGI=0 \\\n    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{artist}/{album}/{fn}\"\n\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} \\\n && apk -U upgrade \\\n && apk add -t build-dependencies \\\n    build-base \\\n    git \\\n    libtool \\\n    automake \\\n    autoconf \\\n    wget \\\n    tar \\\n    xz \\\n    zlib-dev \\\n    cppunit-dev \\\n    libressl-dev \\\n    ncurses-dev \\\n    curl-dev \\\n    binutils \\\n && apk add \\\n    ca-certificates \\\n    curl \\\n    ncurses \\\n    libressl \\\n    gzip \\\n    zip \\\n    zlib \\\n    unrar \\\n    s6 \\\n    su-exec \\\n    python \\\n    nodejs \\\n    nodejs-npm \\\n    openjdk8-jre \\\n    java-jna-native \\\n && cd /tmp && mkdir libtorrent rtorrent \\\n && cd libtorrent && wget -qO- https://github.com/rakshasa/libtorrent/archive/${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd ../rtorrent && wget -qO- https://github.com/rakshasa/rtorrent/archive/${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd /tmp \\\n && git clone https://github.com/mirror/xmlrpc-c.git \\\n && git clone https://github.com/Rudde/mktorrent.git \\\n && git clone https://github.com/acoustid/chromaprint.git \\\n && cd /tmp/mktorrent && make -j ${NB_CORES} && make install \\\n && cd /tmp/xmlrpc-c/stable && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j ${NB_CORES} && make install \\\n && cd /tmp/libtorrent && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j ${NB_CORES} && make install \\\n && cd /tmp/rtorrent && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-xmlrpc-c && make -j ${NB_CORES} && make install \\\n && cd /tmp \\\n && wget -q https://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q https://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q https://github.com/MediaArea/ZenLib/archive/v${LIBZEN_VER}.tar.gz -O libzen.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf libzen.tar.gz \\\n && cd /tmp/ZenLib-${LIBZEN_VER}/Project/GNU/Library \\\n && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-shared --disable-static && make && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI && make install \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && mkdir /filebot && cd /filebot \\\n && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n && strip -s /usr/local/bin/fpcalc \\\n && wget -q https://netcologne.dl.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && tar xJf FileBot_${FILEBOT_VER}-portable.tar.xz && rm FileBot_${FILEBOT_VER}-portable.tar.xz \\\n && mkdir /usr/flood && cd /usr/flood && wget -qO- https://github.com/jfurrow/flood/archive/v${FLOOD_VER}.tar.gz | tar xz --strip 1 \\\n && npm install --production \\\n && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n && ln -sf /usr/local/lib/libzen.la /filebot/lib/x86_64/libzen.so \\\n && ln -sf /usr/local/bin/mediainfo /usr/bin/mediainfo \\\n && apk del build-dependencies \\\n && rm -rf /var/cache/apk/* /tmp/* && npm cache clean --force;\n\nCOPY config.js /usr/flood/\nCOPY s6.d /etc/s6.d\nCOPY run.sh /usr/bin/\nCOPY postdl /usr/bin/\nCOPY postrm /usr/bin/\nCOPY config.js /usr/flood/\nCOPY rtorrent.rc /home/torrent/.rtorrent.rc\n\nRUN chmod +x /usr/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*\n\nVOLUME /data /flood-db\n\nEXPOSE 3000 49184 49184/udp\n\nLABEL description=\"BitTorrent client with WebUI front-end\" \\\n      rtorrent=\"rTorrent BiTorrent client v$RTORRENT_VER\" \\\n      libtorrent=\"libtorrent v$LIBTORRENT_VER\" \\\n      filebot=\"Filebot v$FILEBOT_VER\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\"\n\nCMD [\"run.sh\"]\n"
}