{
  "startTime": 1674245003090,
  "endTime": 1674245003923,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Refer to https://github.com/SnappyDataInc/spark-on-k8s/tree/master/docs/building-images.md#zeppelin-image\n# for instructions to build the Docker image.\n# This Dockerfile expects spark-on-k8s distribution directory (spark-2.2.0-k8s-0.5.0-bin-2.7.3) and\n# the script 'setSparkEnvVars.sh' to be in the same directory where this Dockerfile is kept.\n\nFROM ubuntu:16.04\nMAINTAINER Apache Software Foundation <dev@zeppelin.apache.org>\n\n# `Z_VERSION` will be updated by `dev/change_zeppelin_version.sh`\nENV Z_VERSION=\"0.7.3\"\nENV LOG_TAG=\"[ZEPPELIN_${Z_VERSION}]:\" \\\n    Z_HOME=\"/zeppelin\" \\\n    LANG=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8\n\nRUN echo \"$LOG_TAG update and install basic packages\" && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y locales && \\\n    locale-gen $LANG && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    apt -y autoclean && \\\n    apt -y dist-upgrade && \\\n    apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"$LOG_TAG install tini related packages\" && \\\n    apt-get install --no-install-recommends -y wget curl grep sed dpkg && \\\n    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n    curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n    dpkg -i tini.deb && \\\n    rm tini.deb && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nRUN echo \"$LOG_TAG Install java8\" && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Should install conda first before numpy, matploylib since pip and python will be installed by conda\nRUN echo \"$LOG_TAG Install miniconda2 related packages\" && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y bzip2 ca-certificates \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 \\\n    git mercurial subversion && \\\n    echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && rm -rf /var/lib/apt/lists/*;\nENV PATH /opt/conda/bin:$PATH\n\nRUN echo \"$LOG_TAG Install python related packages\" && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y python-dev python-pip && \\\n    apt-get install --no-install-recommends -y gfortran && \\\n    # numerical/algebra packages\n    apt-get install --no-install-recommends -y libblas-dev libatlas-dev liblapack-dev && \\\n    # font, image for matplotlib\n    apt-get install --no-install-recommends -y libpng-dev libfreetype6-dev libxft-dev && \\\n    # for tkinter\n    apt-get install --no-install-recommends -y python-tk libxml2-dev libxslt-dev zlib1g-dev && \\\n    pip install --no-cache-dir numpy && \\\n    pip install --no-cache-dir matplotlib && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"$LOG_TAG Install R related packages\" && \\\n    echo \"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/\" | tee -a /etc/apt/sources.list && \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-key E084DAB9 && \\\n    gpg --batch -a --export E084DAB9 | apt-key add - && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install r-base r-base-dev && \\\n    R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" && \\\n    R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" && \\\n    R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" && \\\n    R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" && \\\n    # for devtools, Rcpp\n    apt-get -y --no-install-recommends install libcurl4-gnutls-dev libssl-dev && \\\n    R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" && \\\n    R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" && \\\n    Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\" && rm -rf /var/lib/apt/lists/*;\n\nENV SEARCH_STRING=\"<name>zeppelin.interpreters<\\/name>\"\nENV INSERT_STRING=\"org.apache.zeppelin.interpreter.SnappyDataZeppelinInterpreter,org.apache.zeppelin.interpreter.SnappyDataSqlZeppelinInterpreter,\"\nENV LEAD_HOST=\"localhost\"\nENV LEAD_PORT=\"3768\"\n\nRUN echo \"$LOG_TAG Download Zeppelin binary and install interpreter for snappydata\" && \\\n    wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz https://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME} && \\\n    cp ${Z_HOME}/conf/zeppelin-site.xml.template ${Z_HOME}/conf/zeppelin-site.xml && \\\n    sed -i \"/${SEARCH_STRING}/{n;s/<value>/<value>${INSERT_STRING}/}\" ${Z_HOME}/conf/zeppelin-site.xml && \\\n    ${Z_HOME}/bin/install-interpreter.sh --name snappydata --artifact io.snappydata:snappydata-zeppelin:0.7.3 && \\\n    ${Z_HOME}/bin/zeppelin-daemon.sh start && \\\n    while ! test -f  ${Z_HOME}/conf/interpreter.json; do sleep 3s; done && \\\n    ${Z_HOME}/bin/zeppelin-daemon.sh stop && \\\n    sed -i \"/group\\\": \\\"snappydata\\\"/,/isExistingProcess\\\": false/{s/port\\\": -1/port\\\": ${LEAD_PORT}/}\" ${Z_HOME}/conf/interpreter.json && \\\n    sed -i \"/group\\\": \\\"snappydata\\\"/,/isExistingProcess\\\": false/{s/isExistingProcess\\\": false/isExistingProcess\\\": snappydatainc_marker/}\" ${Z_HOME}/conf/interpreter.json && \\\n    sed -i \"/snappydatainc_marker/a \\\"host\\\": \\\"${LEAD_HOST}\\\",\" ${Z_HOME}/conf/interpreter.json && \\\n    sed -i \"s/snappydatainc_marker/true/\" ${Z_HOME}/conf/interpreter.json\n\n\nRUN echo \"$LOG_TAG Cleanup\" && \\\n    apt-get autoclean && \\\n    apt-get clean\n\nEXPOSE 8080\n\n####### Begin changes for Spark-on-k8s #################\n\nRUN mkdir -p /opt/spark && \\\n    mkdir -p /opt/spark/work-dir \\\n    touch /opt/spark/RELEASE && \\\n    rm -f /bin/sh && \\\n    ln -sv /bin/bash /bin/sh && \\\n    chgrp root /etc/passwd && chmod ug+rw /etc/passwd\n\nCOPY spark-2.2.0-k8s-0.5.0-bin-2.7.3/jars /opt/spark/jars\nCOPY spark-2.2.0-k8s-0.5.0-bin-2.7.3/bin /opt/spark/bin\nCOPY spark-2.2.0-k8s-0.5.0-bin-2.7.3/sbin /opt/spark/sbin\nCOPY spark-2.2.0-k8s-0.5.0-bin-2.7.3/conf /opt/spark/conf\nCOPY spark-2.2.0-k8s-0.5.0-bin-2.7.3/dockerfiles/spark-base/entrypoint.sh /opt/\n\n# Copy aws and gcp jars\n# COPY aws_gcp_jars/hadoop-aws-2.6.0.jar /opt/spark/jars\n# COPY aws_gcp_jars/aws-java-sdk-1.7.4.jar /opt/spark/jars\n# COPY aws_gcp_jars/gcs-connector-latest-hadoop2.jar /opt/spark/jars\n\nCOPY setSparkEnvVars.sh /opt/\n\nENV SPARK_HOME /opt/spark\n\nCOPY spark-2.2.0-k8s-0.5.0-bin-2.7.3/examples /opt/spark/examples\n\nCMD SPARK_CLASSPATH=\"${SPARK_HOME}/jars/*\" && \\\n    env | grep SPARK_JAVA_OPT_ | sed 's/[^=]*=\\(.*\\)/\\1/g' > /tmp/java_opts.txt && \\\n    readarray -t SPARK_DRIVER_JAVA_OPTS < /tmp/java_opts.txt && \\\n    if ! [ -z ${SPARK_MOUNTED_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_MOUNTED_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n    if ! [ -z ${SPARK_SUBMIT_EXTRA_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_SUBMIT_EXTRA_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n    if ! [ -z ${SPARK_EXTRA_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_EXTRA_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n    if ! [ -z ${SPARK_MOUNTED_FILES_DIR+x} ]; then cp -R \"$SPARK_MOUNTED_FILES_DIR/.\" .; fi && \\\n    if ! [ -z ${SPARK_MOUNTED_FILES_FROM_SECRET_DIR} ]; then cp -R \"$SPARK_MOUNTED_FILES_FROM_SECRET_DIR/.\" .; fi && \\\n    ${JAVA_HOME}/bin/java \"${SPARK_DRIVER_JAVA_OPTS[@]}\" -cp \"$SPARK_CLASSPATH\" -Xms$SPARK_DRIVER_MEMORY -Xmx$SPARK_DRIVER_MEMORY -Dspark.driver.bindAddress=$SPARK_DRIVER_BIND_ADDRESS $SPARK_DRIVER_CLASS $SPARK_DRIVER_ARGS\n\n#ENV MASTER k8s://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT\n#ENV SPARK_SUBMIT_OPTIONS \"--kubernetes-namespace default --conf spark.kubernetes.driver.pod.name=$HOSTNAME --conf spark.kubernetes.driver.docker.image=shirishd/spark-driver:v2.2.0 --conf spark.kubernetes.executor.docker.image=shirishd/spark-executor:v2.2.0\"\n\n#CMD [\"/opt/setSparkEnvVars.sh\"]\nCMD [\"bin/bash\", \"-c\", \"source\", \"/opt/setSparkEnvVars.sh\"]\n#RUN /bin/bash -c \"source /opt/setSparkEnvVars.sh\"\n####### End changes for Spark-on-k8s ##########################\n\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nWORKDIR ${Z_HOME}\nCMD [\"bin/zeppelin.sh\"]\n"
}