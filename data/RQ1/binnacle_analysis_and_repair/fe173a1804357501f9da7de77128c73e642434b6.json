{
  "startTime": 1674244456155,
  "endTime": 1674244456219,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 3,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 21,
        "columnStart": 3,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 3,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create a Docker image that is ready to run the full Randoop tests,\n# including building the manual and Javadoc.\n# But it's used primarily for running miscellaneous tests such as the manual\n# and Javadoc.\n\nFROM ubuntu\nMAINTAINER Michael Ernst <mernst@cs.washington.edu>\n\n# According to\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/:\n#  * Put \"apt-get update\" and \"apt-get install\" in the same RUN command.\n#    Also, minimize the number of RUN commands, to minimize te number of layers.\n#  * Do not run \"apt-get upgrade\"; instead get upstream to update.\n# certs lines are temporary, from https://stackoverflow.com/a/50103533/173852 .\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n&& apt-get -qqy update \\\n&& apt-get -qqy --no-install-recommends install \\\n  git \\\n  gradle \\\n  xvfb \\\n  openjdk-8-jdk \\\n&& apt-get -qqy update \\\n&& apt-get -qqy --no-install-recommends install \\\n  perl \\\n  python-pip \\\n  wget \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* \\\n&& pip install --no-cache-dir html5validator \\\n&& /usr/bin/printf '\\xfe\\xed\\xfe\\xed\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\xe2\\x68\\x6e\\x45\\xfb\\x43\\xdf\\xa4\\xd9\\x92\\xdd\\x41\\xce\\xb6\\xb2\\x1c\\x63\\x30\\xd7\\x92' > /etc/ssl/certs/java/cacerts \\\n&& /var/lib/dpkg/info/ca-certificates-java.postinst configure\n"
}