{
  "startTime": 1674245101494,
  "endTime": 1674245101553,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  g++ \\\n  make \\\n  file \\\n  curl \\\n  ca-certificates \\\n  python2.7 \\\n  git \\\n  cmake \\\n  xz-utils \\\n  sudo \\\n  gdb \\\n  patch \\\n  libssl-dev \\\n  pkg-config && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build/\nCOPY dist-x86_64-musl/build-musl.sh /build/\nRUN sh /build/build-musl.sh && rm -rf /build\n\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n\nENV RUST_CONFIGURE_ARGS \\\n      --target=x86_64-unknown-linux-musl \\\n      --musl-root-x86_64=/musl-x86_64 \\\n      --enable-extended\n\n# Newer binutils broke things on some vms/distros (i.e., linking against\n# unknown relocs disabled by the following flag), so we need to go out of our\n# way to produce \"super compatible\" binaries.\n#\n# See: https://github.com/rust-lang/rust/issues/34978\nENV CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no\n\nENV SCRIPT \\\n      python2.7 ../x.py test --target x86_64-unknown-linux-musl && \\\n      python2.7 ../x.py dist --target x86_64-unknown-linux-musl\n"
}