{
  "startTime": 1674243724868,
  "endTime": 1674243727305,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 194,
        "lineEnd": 194,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 238,
        "lineEnd": 238,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 143,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 4,
        "columnEnd": 161
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 197,
        "lineEnd": 197,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 241,
        "lineEnd": 272,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  node:8.14.0-jessie\nLABEL maintainer=\"Alexis Kofman <alexis.kofman@gmail.com>\"\n\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    SRC=\"/usr/local\" \\\n    FFMPEG_VERSION=\"4.1\" \\\n    FDKAAC_VERSION=\"0.1.6\" \\\n    FRIBIDI_VERSION=\"0.19.7\" \\\n    LAME_VERSION=\"3.100\" \\\n    LIBASS_VERSION=\"0.14.0\" \\\n    OGG_VERSION=\"1.3.3\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.6\" \\\n    VPX_VERSION=\"1.7.0\" \\\n    X264_VERSION=\"20181015-2245-stable\" \\\n    X265_VERSION=\"2.9\" \\\n    XVID_VERSION=\"1.3.5\" \\\n    FREETYPE_VERSION=\"2.9.1\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    FFMPEG_SHA256SUM=\"e7196ba28d7527daee917babdcbebb56b04c77e0b20593f2dd0bc11528a27066  ffmpeg-4.1.tar.gz\" \\\n    FDKAAC_SHA256SUM=\"adbcd793e406e1b88b3c1c41382d49f8c27371485b823c0fdab69c9124fd2ce3  v0.1.6.tar.gz\" \\\n    FREETYPE_SHA256SUM=\"ec391504e55498adceb30baceebd147a6e963f636eb617424bcfc47a169898ce  freetype-2.9.1.tar.gz\" \\\n    FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\" \\\n    LAME_SHA256SUM=\"ddfe36cab873794038ae2c1210557ad34857a4b6bdc515785d1da9e175b1da1e  lame-3.100.tar.gz\" \\\n    LIBASS_SHA256SUM=\"82e70ee1f9afe2e54ab4bf6510b83bb563fcb2af978f0f9da82e2dbc9ae0fd72  0.14.0.tar.gz\" \\\n    LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\" \\\n    OGG_SHA256SUM=\"c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985  libogg-1.3.3.tar.gz\" \\\n    OPENCOREAMR_SHA256SUM=\"2c006cb9d5f651bfb5e60156dbff6af3c9d35c7bbcc9015308c0aff1e14cd341  opencore-amr-0.1.5.tar.gz\" \\\n    OPUS_SHA256SUM=\"cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732  opus-1.2.1.tar.gz\" \\\n    THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\" \\\n    VORBIS_SHA256SUM=\"6ed40e0241089a42c48604dc00e362beee00036af2d8b3f46338031c9e0351cb  libvorbis-1.3.6.tar.gz\" \\\n    VPX_SHA256SUM=\"1fec931eb5c94279ad219a5b6e0202358e94a93a90cfb1603578c326abfc1238  v1.7.0.tar.gz\" \\\n    X264_SHA256SUM=\"e1510f9cc9c70c8f7c83cec3b079d035e92de5b4c76bf3185234c196c6b82622  x264-snapshot-20181015-2245-stable.tar.bz2\" \\\n    X265_SHA256SUM=\"ebae687c84a39f54b995417c52a2fdde65a4e2e7ebac5730d251471304b91024  x265_2.9.tar.gz\" \\\n    XVID_SHA256SUM=\"165ba6a2a447a8375f7b06db5a3c91810181f2898166e7c8137401d7fc894cf0  xvidcore-1.3.5.tar.gz\"\n\n## INSTALL FFMPEG https://ffmpeg.org\nRUN apt-get -yqq update && \\\n    apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \\\n    buildDeps=\"autoconf \\\n                automake \\\n                cmake \\\n                curl \\\n                bzip2 \\\n                libexpat1-dev \\\n                g++ \\\n                gcc \\\n                git \\\n                gperf \\\n                libtool \\\n                make \\\n                perl \\\n                pkg-config \\\n                python \\\n                libssl-dev \\\n                yasm \\\n                zlib1g-dev\" && \\\n    apt-get -yqq update && \\\n    apt-get install -yq --no-install-recommends ${buildDeps} && \\\n    apt-get autoremove -y && \\\n    apt-get clean -y && \\\n    export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n#RUN \\\n## nasm 2.13\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-2.13.01.tar.gz && \\\n    tar -zx -f nasm-2.13.01.tar.gz && \\\n    cd nasm-2.13.01 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## opencore-amr https://sourceforge.net/projects/opencore-amr/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && \\\n    echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## x264 http://www.videolan.org/developers/x264.html\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    echo ${X264_SHA256SUM} | sha256sum --check && \\\n    tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## x265 http://x265.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz && \\\n    echo ${X265_SHA256SUM} | sha256sum --check && \\\n    tar -zx -f x265_${X265_VERSION}.tar.gz && \\\n    cd x265_${X265_VERSION}/build/linux && \\\n    ./multilib.sh && \\\n    make -C 8bit install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libogg https://www.xiph.org/ogg/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n    echo ${OGG_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libopus https://www.opus-codec.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \\\n    echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvorbis https://xiph.org/vorbis/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n    echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n    --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libtheora http://www.theora.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n    echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n    --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvpx https://www.webmproject.org/code/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/webmproject/libvpx/archive/v${VPX_VERSION}.tar.gz && \\\n    echo ${VPX_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${VPX_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libmp3lame http://lame.sourceforge.net/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz && \\\n    echo ${LAME_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## xvid https://www.xvid.com/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n    echo ${XVID_SHA256SUM} | sha256sum --check && \\\n    tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n    cd xvidcore/build/generic && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## fdk-aac https://github.com/mstorsjo/fdk-aac\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz && \\\n    echo ${FDKAAC_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## freetype https://www.freetype.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \\\n    echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvstab https://github.com/georgmartius/vid.stab\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \\\n    echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \\\n    cmake . && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## fridibi https://www.fribidi.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \\\n    echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \\\n    sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am && \\\n    ./bootstrap --no-config && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${SRC}\" --disable-static --enable-shared && \\\n    make -j 1 && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libass https://github.com/libass/libass\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \\\n    echo ${LIBASS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${SRC}\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n# RUN  \\\n## ffmpeg\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    echo ${FFMPEG_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --bindir=\"${SRC}/bin\" \\\n    --disable-debug \\\n    --disable-doc \\\n    --disable-ffplay \\\n    --enable-shared \\\n    --enable-avresample \\\n    --enable-gpl \\\n    --enable-libass \\\n    --enable-libopencore-amrnb \\\n    --enable-libopencore-amrwb \\\n    --enable-libfdk_aac \\\n    --enable-libfreetype \\\n    --enable-libvidstab \\\n    --enable-libmp3lame \\\n    --enable-libopus \\\n    --enable-libtheora \\\n    --enable-libvorbis \\\n    --enable-libvpx \\\n    --enable-libx264 \\\n    --enable-libx265 \\\n    --enable-libxvid \\\n    --enable-nonfree \\\n    --enable-openssl \\\n    --enable-postproc \\\n    --enable-shared \\\n    --enable-small \\\n    --enable-version3 \\\n    --extra-cflags=\"-I${SRC}/include\" \\\n    --extra-ldflags=\"-L${SRC}/lib\" \\\n    --extra-libs=-ldl \\\n    --prefix=\"${SRC}\" && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    hash -r && \\\n    cd tools && \\\n    make qt-faststart && \\\n    cp qt-faststart ${SRC}/bin && \\\n    rm -rf ${DIR} && rm nasm-2.13.01.tar.gz && rm -rf /var/lib/apt/lists/*;\n"
}