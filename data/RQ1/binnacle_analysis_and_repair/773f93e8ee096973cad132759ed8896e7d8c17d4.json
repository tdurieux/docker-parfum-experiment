{
  "startTime": 1674244345752,
  "endTime": 1674244345822,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_VERSION=someversion\nFROM hilbert/base:${IMAGE_VERSION}\n### FROM hilbert/dd\n\nMAINTAINER Oleksandr Motsak <malex984+hilbert.omd_agent@gmail.com>\n\nRUN update.sh && \\\n    curl -f -sSL https://get.docker.com/gpg | apt-key add - && \\\n    curl -f -sSL https://get.docker.com/ | sh && \\\n    clean.sh\n\n#ADD https://get.docker.com/builds/Linux/x86_64/docker-latest /usr/local/bin/docker\n#RUN chmod +x /usr/local/bin/docker\n\n#RUN curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n#RUN chmod +x /usr/local/bin/docker-compose\n\n# RUN chmod +x /usr/local/bin/docker /usr/local/bin/docker-compose\n# RUN ln -s $HOME/bin/docker-latest $HOME/bin/docker\n## ENV DOCKER_CERT_PATH\n\n# nsenter does not work from inside a container :(\n# ADD ./baseimage-docker-nsenter ./docker-bash /usr/local/bin/\n\n#ENV DOCKER_HOST unix:///var/run/docker.sock\n#ENV NO_PROXY /var/run/docker.sock\n\n# RUN groupadd -f -g 998 docker\n# RUN usermod -a -G docker ur\n# USER ur\n# ENV HOME /home/ur\n# VOLUME $HOME\n# WORKDIR $HOME\n\n# limit due to current docker client:\nENV DOCKER_API_VERSION 1.24\n\nRUN update.sh \\\n && install.sh xinetd \\\n && wget -q \"https://cloud.imaginary.org/index.php/s/WSGU4yEaR4RaH3T/download?path=%2F&files=check-mk-agent_1.2.6p12-1_all.deb\" -O /tmp/check-mk-agent.deb \\\n && dpkg -i /tmp/check-mk-agent.deb \\\n && install.sh -fy \\\n && clean.sh\n\nADD https://raw.githubusercontent.com/hilbert/hilbert-heartbeat/v1.0.0/client/bash/check_heartbeat.sh /usr/local/lib/nagios/plugins/check_heartbeat.sh\nCOPY check_hilbert.sh check_hilbert_back.sh check_hilbert_foreign.sh check_hilbert_exited.sh check_hilbert_heartbeat.sh check_hilbert_top1.sh /usr/local/lib/nagios/plugins/\n\nADD https://raw.githubusercontent.com/hilbert/hilbert-heartbeat/v1.0.0/server/heartbeat.py /usr/local/bin/heartbeat.py\n\nEXPOSE 6556\nEXPOSE 8888\n\nCOPY logwatch.cfg mrpe.cfg /etc/check_mk/\nCOPY omd_agent_entrypoint.sh /usr/local/bin/\n\nRUN chmod a+x /usr/local/bin/heartbeat.py /usr/local/lib/nagios/plugins/* /usr/local/bin/omd_agent_entrypoint.sh\n\n\n\nARG GIT_NOT_CLEAN_CHECK\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE=someday\nARG VCS_REF=HEAD\nARG VCS_URL=\"https://github.com/hilbert/hilbert-docker-images\"\n\nARG DOCKERFILE=\"/images/omd_agent/Dockerfile\"\nLABEL org.label-schema.description=\"containes pre-cofigured OMD/Check_MK Agent +check_hilbert.sh + HeartBeat server\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.vcs-url=\"${VCS_URL}\" \\\n      org.label-schema.version=\"${IMAGE_VERSION}\" \\\n      com.microscaling.docker.dockerfile=\"${DOCKERFILE}\" \\\n      IMAGE_VERSION=\"${IMAGE_VERSION}\" \\\n      GIT_NOT_CLEAN_CHECK=\"${GIT_NOT_CLEAN_CHECK}\" \\\n      org.label-schema.name=\"Hilbert\" \\\n      org.label-schema.vendor=\"IMAGINARY gGmbH\" \\\n      org.label-schema.url=\"https://hilbert.github.io\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      com.microscaling.license=\"Apache-2.0\"    \n\nONBUILD LABEL org.label-schema.build-date=\"\" \\\n      org.label-schema.name=\"\" \\\n      org.label-schema.description=\"\" \\\n      org.label-schema.vendor=\"\" \\\n      org.label-schema.url=\"\" \\\n      org.label-schema.vcs-ref=\"\" \\\n      org.label-schema.vcs-url=\"\" \\\n      org.label-schema.version=\"\" \\\n      org.label-schema.schema-version=\"\" \\\n      com.microscaling.license=\"\" \\\n      com.microscaling.docker.dockerfile=\"\" \\\n      IMAGE_VERSION=\"\" \\\n      GIT_NOT_CLEAN_CHECK=\"\"\n\n"
}