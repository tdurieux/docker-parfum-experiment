{
  "startTime": 1674242537168,
  "endTime": 1674242537373,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Mostly derived from https://github.com/mojodna/marblecutter-tools/blob/master/aws/Dockerfile\n\nFROM lambci/lambda:build-python2.7\n\nARG http_proxy\n\n# Install deps\n\nRUN \\\n  rpm --rebuilddb && \\\n  yum install -y \\\n    automake16 \\\n    libcurl-devel && rm -rf /var/cache/yum\n\n# Fetch PROJ.4\n\nRUN \\\n  curl -f -L https://download.osgeo.org/proj/proj-4.9.3.tar.gz | tar zxf - -C /tmp\n\n# Build and install PROJ.4\n\nWORKDIR /tmp/proj-4.9.3\n\nRUN \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/task && \\\n  make -j $(nproc) && \\\n  make install\n\n# Fetch GDAL\n\nRUN \\\n  mkdir -p /tmp/gdal && \\\n  curl -f -L https://download.osgeo.org/gdal/2.2.1/gdal-2.2.1.tar.gz | tar zxf - -C /tmp/gdal --strip-components=1\n\n# Build + install GDAL\n\nWORKDIR /tmp/gdal\n\nRUN \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/task \\\n    --datarootdir=/var/task/share/gdal \\\n    --with-jpeg=internal \\\n    --without-qhull \\\n    --without-mrf \\\n    --without-grib \\\n    --without-pcraster \\\n    --without-png \\\n    --without-gif \\\n    --without-pcidsk && \\\n  make -j $(nproc) && \\\n  cd swig/python && \\\n  make && \\\n  cd ../.. && \\\n  make install\n\n# Install Python deps in a virtualenv\n\nRUN \\\n  virtualenv /tmp/virtualenv\n\nENV PATH /tmp/virtualenv/bin:/var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nWORKDIR /var/task\n\nCOPY requirements.txt /var/task/requirements.txt\n\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Add GDAL libs to the function zip\n\nRUN \\\n  strip lib/libgdal.so.20.3.0 && \\\n  strip lib/libproj.so.12.0.0\n\nRUN \\\n  zip --symlinks \\\n    -r /tmp/task.zip \\\n    lib/libgdal.so* \\\n    lib/libproj.so* \\\n    share/gdal/\n\n# Add Python deps to the function zip\n\nWORKDIR /tmp/virtualenv/lib/python2.7/site-packages\n\nRUN find . -name \\*.so\\* -exec strip {} \\;\n\nRUN \\\n  zip  -r /tmp/task.zip flask werkzeug jinja2 markupsafe itsdangerous.py* click requests idna chardet certifi urllib3 osgeo\n\nWORKDIR /tmp/gdal/swig/python/build/lib.linux-x86_64-2.7\n\nRUN find . -name \\*.so\\* -exec strip {} \\;\n\nRUN zip -r /tmp/task.zip .\n"
}