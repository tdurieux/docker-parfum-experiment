{
  "startTime": 1674253177682,
  "endTime": 1674253178031,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm\n\nRUN DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -my wget gnupg && rm -rf /var/lib/apt/lists/*;\n\n# Install dotdeb repo\nRUN echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n    && curl -f -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n    && apt-get update\n\n# Install required libs\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        git \\\n        unzip \\\n        libcurl4-openssl-dev \\\n        libedit-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        libsqlite3-dev \\\n        sqlite3 \\\n        libz-dev \\\n        libpq-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libfreetype6-dev \\\n        libssl-dev \\\n        libmcrypt-dev \\\n        libjudydebian1 \\\n        libjudy-dev \\\n        nano \\\n        procps \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#\n# Configure\n#\nRUN docker-php-ext-configure gd \\\n        --enable-gd-native-ttf \\\n        --with-jpeg-dir=/usr/lib \\\n        --with-freetype-dir=/usr/include/freetype2\n\n#\n# Install extensions\n#\nRUN docker-php-ext-install \\\n        pdo_mysql \\\n        pcntl \\\n        sockets \\\n        bcmath \\\n        opcache \\\n        exif \\\n        tokenizer \\\n        gd \\\n        pcntl\n\nRUN pecl install ev && \\\n    docker-php-ext-enable ev\n\nRUN pecl install swoole && \\\n    docker-php-ext-enable swoole\n\n\n#####################################\n#         XDEBUG EXTENSION:\n#####################################\n\nARG ENABLE_XDEBUG=false\nRUN if [ ${ENABLE_XDEBUG} = true ]; then \\\n    git clone https://github.com/xdebug/xdebug.git /tmp/xdebug \\\n        && cd /tmp/xdebug \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && rm -rf /tmp/xdebug \\\n; fi\n\n\n# Copy xdebug configration for remote debugging\nENV XDEBUGINI_PATH=/usr/local/etc/php/conf.d/xdebug.ini\nCOPY ./xdebug.ini $XDEBUGINI_PATH\nRUN echo \"xdebug.remote_host=\"`/sbin/ip route|awk '/default/ { print $3 }'` >> $XDEBUGINI_PATH\n\n#####################################\n#        OPCACHE EXTENSION:\n#####################################\n\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ]; then \\\n    docker-php-ext-install opcache \\\n;fi\n\n# Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n\n#####################################\n#           INTL EXTENSION:\n#####################################\n\nARG INSTALL_INTL=false\nRUN if [ ${INSTALL_INTL} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \\\n    docker-php-ext-configure intl && \\\n    docker-php-ext-install intl \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#####################################\n#       ImageMagick EXTENSION:\n#####################################\n\nUSER root\nARG INSTALL_IMAGEMAGICK=false\nENV INSTALL_IMAGEMAGICK ${INSTALL_IMAGEMAGICK}\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \\\n    pecl install imagick && \\\n    docker-php-ext-enable imagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./php-fpm.conf /usr/local/etc/php-fpm.d\n\nRUN rm -r /var/lib/apt/lists/*\nRUN rm -rf /tmp/pear\n\n\n#####################################\n# Composer:\n#####################################\n\n# Install composer and add its bin to the PATH.\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"/var/www/railt.org/vendor/bin:$PATH\"' >> ~/.bashrc\n\nADD ./bootstrap.sh /bootstrap.sh\nRUN chmod 0755 /bootstrap.sh\n\nRUN chmod -R 0777 /var/www\n\nWORKDIR /var/www/railt.org\n\nRUN usermod -u 1000 www-data\n\nEXPOSE 9000\n\nCMD [\"/bootstrap.sh\"]\n"
}