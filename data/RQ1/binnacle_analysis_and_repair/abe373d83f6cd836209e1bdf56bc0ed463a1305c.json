{
  "startTime": 1674235013732,
  "endTime": 1674235014016,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Don't edit this file directly, since it was generated from a template,\n# and you're changes will be *clobbered*.  Edit the template instead.\n\n\nFROM tleyden5iwx/ubuntu-cuda\n\n\nENV PYTHONPATH /opt/caffe/python\n\n# Add caffe binaries to path\nENV PATH $PATH:/opt/caffe/.build_release/tools\n\n# Get dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  bc \\\n  cmake \\\n  curl \\\n  gcc-4.6 \\\n  g++-4.6 \\\n  gcc-4.6-multilib \\\n  g++-4.6-multilib \\\n  gfortran \\\n  git \\\n  libprotobuf-dev \\\n  libleveldb-dev \\\n  libsnappy-dev \\\n  libopencv-dev \\\n  libboost-all-dev \\\n  libhdf5-serial-dev \\\n  liblmdb-dev \\\n  libjpeg62 \\\n  libfreeimage-dev \\\n  libatlas-base-dev \\\n  pkgconf \\\n  protobuf-compiler \\\n  python-dev \\\n  python-pip \\\n  unzip \\\n  wget && rm -rf /var/lib/apt/lists/*;\n\n# Use gcc 4.6\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.6 30 && \\\n  update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.6 30 && \\\n  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 30 && \\\n  update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 30\n\n\n# Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf && \\\n  ldconfig\n\n\n# Clone the Caffe repo\nRUN cd /opt && git clone https://github.com/BVLC/caffe.git\n\n\n# Glog\nRUN cd /opt && wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz && \\\n  tar zxvf glog-0.3.3.tar.gz && \\\n  cd /opt/glog-0.3.3 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && rm glog-0.3.3.tar.gz\n\n# Workaround for error loading libglog:\n#   error while loading shared libraries: libglog.so.0: cannot open shared object file\n# The system already has /usr/local/lib listed in /etc/ld.so.conf.d/libc.conf, so\n# running `ldconfig` fixes the problem (which is simpler than using $LD_LIBRARY_PATH)\n# TODO: looks like this needs to be run _every_ time a new docker instance is run,\n#       so maybe LD_LIBRARY_PATh is a better approach (or add call to ldconfig in ~/.bashrc)\nRUN ldconfig\n\n# Gflags\nRUN cd /opt && \\\n  wget https://github.com/schuhschuh/gflags/archive/master.zip && \\\n  unzip master.zip && \\\n  cd /opt/gflags-master && \\\n  mkdir build && \\\n  cd /opt/gflags-master/build && \\\n  export CXXFLAGS=\"-fPIC\" && \\\n  cmake .. && \\\n  make VERBOSE=1 && \\\n  make && \\\n  make install\n\n# Build Caffe core\nRUN cd /opt/caffe && \\\n  cp Makefile.config.example Makefile.config && \\\n   \\ \n  echo \"CXX := /usr/bin/g++-4.6\" >> Makefile.config && \\\n  sed -i 's/CXX :=/CXX ?=/' Makefile && \\\n  make all\n\n# Add ld-so.conf so it can find libcaffe.so\nADD caffe-ld-so.conf /etc/ld.so.conf.d/\n\n# Run ldconfig again (not sure if needed)\nRUN ldconfig\n\n# Install python deps\nRUN cd /opt/caffe && \\\n  cat python/requirements.txt | xargs -L 1 sudo pip install\n\n# Numpy include path hack - github.com/BVLC/caffe/wiki/Ubuntu-14.04-VirtualBox-VM\nRUN ln -s /usr/include/python2.7/ /usr/local/include/python2.7 && \\\n  ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ /usr/local/include/python2.7/numpy\n\n# Build Caffe python bindings\nRUN cd /opt/caffe && make pycaffe\n\n\n\n"
}