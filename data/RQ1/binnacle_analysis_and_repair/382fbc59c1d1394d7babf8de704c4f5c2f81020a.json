{
  "startTime": 1674244983357,
  "endTime": 1674244983493,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 175
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is used by CI to test UPI platforms for OpenShift Installer\n# It builds an image containing binaries like jq, terraform, awscli, oc, etc. to allow bringing up UPI infrastructure.\n# It also contains the `upi` directory that contains various terraform and cloud formation templates that are used to create infrastructure resources.\n\n\nFROM registry.svc.ci.openshift.org/ocp/builder:golang-1.10 AS builder\nWORKDIR /go/src/github.com/openshift/installer\nCOPY . .\nRUN hack/build.sh\n\nFROM registry.svc.ci.openshift.org/ocp/4.1:cli as cli\n\nFROM registry.svc.ci.openshift.org/ocp/4.1:base\nCOPY --from=cli /usr/bin/oc /bin/oc\nCOPY --from=builder /go/src/github.com/openshift/installer/bin/openshift-install /bin/openshift-install\nCOPY --from=builder /go/src/github.com/openshift/installer/upi /var/lib/openshift-install/upi\nCOPY --from=builder /go/src/github.com/openshift/installer/data/data/rhcos.json /var/lib/openshift-install/rhcos.json\n\n## epel-release is required for jq\n## gettext is required for envsubst\nRUN yum install --setopt=tsflags=nodocs -y \\\n    epel-release \\\n    gettext \\\n    openssh-clients && \\\n    yum update -y && \\\n    yum install --setopt=tsflags=nodocs -y \\\n    unzip gzip jq awscli util-linux && \\\n    yum clean all && rm -rf /var/cache/yum/*\n\nENV TERRAFORM_VERSION=0.11.11\nRUN curl -f -O https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin/\nENV MATCHBOX_VERSION=v0.2.3\nRUN curl -f -L -O https://github.com/poseidon/terraform-provider-matchbox/releases/download/${MATCHBOX_VERSION}/terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64.tar.gz && \\\n    tar xzf terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64.tar.gz && \\\n    mv terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64/terraform-provider-matchbox /bin/terraform-provider-matchbox && rm terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64.tar.gz\nRUN curl -f -L -O https://github.com/vmware/govmomi/releases/download/v0.20.0/govc_linux_amd64.gz && \\\n    gzip -d govc_linux_amd64.gz && \\\n    chmod +x govc_linux_amd64 && mv govc_linux_amd64 /bin/govc\n\nRUN mkdir /output && chown 1000:1000 /output\nUSER 1000:1000\nENV PATH /bin\nENV HOME /output\nWORKDIR /output\n"
}