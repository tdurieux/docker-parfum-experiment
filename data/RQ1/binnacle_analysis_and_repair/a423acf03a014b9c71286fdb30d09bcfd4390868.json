{
  "startTime": 1674239328069,
  "endTime": 1674239328132,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-alpine3.9\n\nRUN apk add --no-cache \\\n      bash \\\n      build-base \\\n      ca-certificates \\\n      cyrus-sasl-dev \\\n      graphviz \\\n      jpeg-dev \\\n      libffi-dev \\\n      libxml2-dev \\\n      libxslt-dev \\\n      openldap-dev \\\n      postgresql-dev \\\n      ttf-ubuntu-font-family \\\n      wget\n\nRUN pip install --no-cache-dir \\\n\n      gunicorn \\\n\n      napalm \\\n\n      ruamel.yaml \\\n\n\n\n      'Django>=2.2,<2.3' \\\n\n      django-rq\n\nARG BRANCH=master\n\nWORKDIR /tmp\n\n# As the requirements don't change very often,\n# and as they take some time to compile,\n# we try to cache them very agressively.\nARG REQUIREMENTS_URL=https://raw.githubusercontent.com/digitalocean/netbox/$BRANCH/requirements.txt\nADD ${REQUIREMENTS_URL} requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Cache bust when the upstream branch changes:\n# ADD will fetch the file and check if it has changed\n# If not, Docker will use the existing build cache.\n# If yes, Docker will bust the cache and run every build step from here on.\nARG REF_URL=https://api.github.com/repos/digitalocean/netbox/contents?ref=$BRANCH\nADD ${REF_URL} version.json\n\nWORKDIR /opt\n\nARG URL=https://github.com/digitalocean/netbox/archive/$BRANCH.tar.gz\nRUN wget -q -O - \"${URL}\" | tar xz \\\n  && mv netbox* netbox\n\nCOPY docker/configuration.docker.py /opt/netbox/netbox/netbox/configuration.py\nCOPY configuration/gunicorn_config.py /etc/netbox/config/\nCOPY docker/nginx.conf /etc/netbox-nginx/nginx.conf\nCOPY docker/docker-entrypoint.sh /opt/netbox/docker-entrypoint.sh\nCOPY startup_scripts/ /opt/netbox/startup_scripts/\nCOPY initializers/ /opt/netbox/initializers/\nCOPY configuration/configuration.py /etc/netbox/config/configuration.py\n\nWORKDIR /opt/netbox/netbox\n\nENTRYPOINT [ \"/opt/netbox/docker-entrypoint.sh\" ]\n\nCMD [\"gunicorn\", \"-c /etc/netbox/config/gunicorn_config.py\", \"netbox.wsgi\"]\n\nLABEL SRC_URL=\"$URL\"\n\nARG NETBOX_DOCKER_PROJECT_VERSION=snapshot\nLABEL NETBOX_DOCKER_PROJECT_VERSION=\"$NETBOX_DOCKER_PROJECT_VERSION\"\n"
}