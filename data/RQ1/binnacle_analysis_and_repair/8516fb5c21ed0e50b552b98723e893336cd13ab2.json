{
  "startTime": 1674243127431,
  "endTime": 1674243127613,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedDockerfile": "# # Build command\n# # \tdocker build -t arm-tool-base:latest --build-arg license_path=/path/to/license .\n#\n# # Run command\n# # \tdocker run -it arm-tool-base:latest\n\n\n\n\nFROM ubuntu:16.04\n\nMAINTAINER Zach\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y\n\n\n\n### \tSystem Functionality \t###\n\nRUN apt-get install --no-install-recommends -y apt-utils \\\n    iputils-ping \\\n\tpython2.7 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n\n\tpython-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y --fix-missing \\\n\n\tlsb-core \\\n\tlibxext6 \\\n\tlibsm6 \\\n\tlibxcursor1 \\\n\tlibxft2 \\\n\tlibxrandr2 \\\n\tlibxt6 \\\n\tlibxinerama1 \\\n\n\tlibasound2 \\\n\tlibatk1.0-0 \\\n\tlibcairo2 \\\n\tlibgl1 \\\n\tlibglu1 \\\n\tlibgtk2.0-0 \\\n\tlibxi6 \\\n\tlibxtst6 \\\n\tgcc-multilib \\\n\tlibstdc++6 \\\n\tlibwebkitgtk-1.0-0 && rm -rf /var/lib/apt/lists/*;\n\n# # set the license path from command line argument\nARG license_path\nENV ARMLMD_LICENSE_FILE=$license_path\n\n# # create /arm-tools/ dirctory to install all tools into\nRUN mkdir /arm-tools/\t\t&&\\\r\n\tchmod 755 /arm-tools/\n\n\n\n### \tTool Version Select \t###\n\nARG FM_INSTALL=FastModels_11-5-033_Linux64\nARG FM_DIR=FastModelsTools_11.5\n\nARG ArmDS_INSTALL=DS000-BN-00001-r18p0-00rel0\nARG ArmDS_VERSION=2018.0\nARG ArmDS_DIR=ArmDS\n\n#ARG DS5_INSTALL=DS500-BN-00019-r5p0-28rel1\n#ARG DS5_DIR=DS-5v5.28.0\n\n\n\n### \tInstall Fast Models \t###\n\n# # copy file from same directory as this Dockerfile\nCOPY $FM_INSTALL.tgz /home/\n\n# # install program and delete artifacts\nRUN \ttar xvzf /home/$FM_INSTALL.tgz \t\t\t&&\\\r\n\t\tcd $FM_INSTALL \t\t\t\t\t\t\t&&\\\r\n\t\t./setup.sh --i-accept-the-license-agreement --basepath /arm-tools/ \t&&\\\r\n\t\trm /home/$FM_INSTALL.tgz \t\t\t\t&&\\\r\n\t\trm -r /$FM_INSTALL/ \t\t\t\t\t\t\t\n\n# # add setup to /init.sh\nRUN \techo \t\"set +e; . /arm-tools/$FM_DIR/source_all.sh\" >> /init.sh\n\n\n\n\n### \tInstall ArmDS\t###\n\n# # copy file from same directory as this Dockerfile\nCOPY $ArmDS_INSTALL.tgz /home/\n\n# # install program and delete artifacts\nRUN \tmkdir /$ArmDS_INSTALL/ \t\t\t\t\t&&\\\r\n    \ttar xvzf /home/$ArmDS_INSTALL.tgz --directory /$ArmDS_INSTALL/ &&\\\r\n\t\tcd $ArmDS_INSTALL/ \t\t\t\t\t\t&&\\\r\n\t\t./armds-$ArmDS_VERSION.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$ArmDS_DIR/ \t&&\\\r\n\t\trm /home/$ArmDS_INSTALL.tgz \t\t\t&&\\\r\n\t\trm -r /$ArmDS_INSTALL/\n\n# # add setup to /init.sh\nRUN\techo \t\"export PATH=$PATH:/arm-tools/$ArmDS_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$ArmDS_DIR/bin:/arm-tools/$ArmDS_DIR/sw/java/bin\"    >> /init.sh &&\\\r\n\techo \t\"export ARMDS_CDB_PATH=/arm-tools/$ArmDS_DIR/sw/debugger/configdb\"   >> /init.sh \t\t\t&&\\\r\n\techo \t\"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$ArmDS_DIR/sw/debughw/PlatformFiles\"   >> /init.sh \t&&\\\r\n\techo \t\"export ARM_PRODUCT_PATH=/arm-tools/$ArmDS_DIR/sw/mappings\"   >> /init.sh \t\t\t&&\\\r\n\techo \t\"export ARMDS_HOME=/arm-tools/$ArmDS_DIR\"   >> /init.sh\n\n\n\n\n### \tInstall DS5 \t###\n\n# # copy file from same directory as this Dockerfile\n# COPY $DS5_INSTALL.tgz /home/\n\n# # install program and delete artifacts\n# # DS5 installer doesn't work with the default tar binary, change to bsdtar then change back.\n# RUN \tmkdir /$DS5_INSTALL/ \t\t\t\t\t&&\\\n#\t\ttar xvzf /home/$DS5_INSTALL.tgz --directory /$DS5_INSTALL/ &&\\\n#\t\tcd $DS5_INSTALL/ \t\t\t\t\t\t&&\\\n#\t\tapt-get install -y bsdtar \t\t\t\t&&\\\n#\t\tcp $(which tar) $(which tar)~ \t\t\t&&\\\n#\t\tln -sf $(which bsdtar) $(which tar) \t&&\\\n#\t\t./install.sh --i-agree-to-the-contained-eula --no-interactive -d /arm-tools/$DS5_DIR/ &&\\\n#\t\tmv $(which tar)~ $(which tar) \t\t\t&&\\\n#\t\trm /home/$DS5_INSTALL.tgz \t\t\t\t&&\\\n#\t\trm -r /$DS5_INSTALL/\n\n# # add setup to /init.sh\n# RUN\techo \t\"export PATH=$PATH:/arm-tools/$DS5_DIR/sw/ARMCompiler6.9/bin:/arm-tools/$DS5_DIR/bin:/arm-tools/$DS5_DIR/sw/java/bin\"    >> /init.sh &&\\\n#\techo \t\"export DS5_CDB_PATH=/arm-tools/$DS5_DIR/sw/debugger/configdb\"   >> /init.sh \t\t\t&&\\\n#\techo \t\"export DBGHWCONFIG_PLATFORMFILES=/arm-tools/$DS5_DIR/sw/debughw/PlatformFiles\"   >> /init.sh \t&&\\\n#\techo \t\"export ARM_PRODUCT_PATH=/arm-tools/$DS5_DIR/sw/mappings\"   >> /init.sh \t\t\t&&\\\n#\techo \t\"export DS5_HOME=/arm-tools/$DS5_DIR\" >> /init.sh\n"
}