{
  "startTime": 1674241175601,
  "endTime": 1674241175870,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 8,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 8,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 10,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 10,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 10,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 9,
        "columnEnd": 123
      }
    }
  ],
  "repairedDockerfile": "FROM    circleci/golang:1.12\n\n# The base circleci image runs as user 'circleci'(3434), with sudo capabilities.\n# Based on Debian9. Go installed in /usr/local/go\n\n# Env:\n# GOLANG_VERSION\n# GPATH=/go\n\n# Workdir: /go\n\n# Also installed docker, docker-compose, dockerize, jq\n\nARG     K8S_VER=v1.10.4\nARG     ETCD_VER=v3.2.15\nARG     MINIKUBE_VER=v0.25.0\nARG     HELM_VER=v2.7.2\n\n# The local test cluster config\nARG     MASTER_IP=127.0.0.1\nARG     MASTER_CLUSTER_IP=10.99.0.1\n\n# Environment variables used in the build.\nENV     GOPATH=/go\nENV     KUBECONFIG=/go/out/kube.config\nENV     ETCD_DATADIR=/go/out/etcd-data\nENV     PATH=/go/bin:/go/out/linux_amd64:$PATH\n\n# Initialization\nRUN    sudo mkdir -p /go/src/istio.io/istio && \\\n       sudo chown -R circleci /go && \\\n       mkdir -p /go/out && \\\n       mkdir /home/circleci/logs\n\n# Get etcd, apiserver for the local environment\nRUN cd /tmp && \\\n        curl -f -L -o etcd.tgz https://github.com/coreos/etcd/releases/download/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz && \\\n        tar xzf etcd.tgz && \\\n        sudo mv etcd-${ETCD_VER}-linux-amd64/etcd /usr/local/bin/etcd && \\\n        rm -rf etcd* && rm etcd.tgz\n\nRUN curl -f -L -o /tmp/kube-apiserver https://storage.googleapis.com/kubernetes-release/release/${K8S_VER}/bin/linux/amd64/kube-apiserver && \\\n        chmod +x /tmp/kube-apiserver && \\\n        sudo mv /tmp/kube-apiserver /usr/local/bin\n\nRUN     go get -u github.com/golang/dep/cmd/dep\n\n# Tool used to convert 'go test' to junit, for integration with CI dashboard\nRUN     go get github.com/jstemmer/go-junit-report\n\n# Install fpm tool\nRUN sudo apt-get -qqy --no-install-recommends install ruby ruby-dev rubygems build-essential autoconf libtool autotools-dev && \\\n     sudo gem install --no-ri --no-rdoc fpm && rm -rf /var/lib/apt/lists/*;\n\n# Include minikube and kubectl in the image\nRUN curl -f -Lo /tmp/kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VER}/bin/linux/amd64/kubectl && \\\n    chmod +x /tmp/kubectl && sudo mv /tmp/kubectl /usr/local/bin/\n\nRUN curl -f -Lo /tmp/minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VER}/minikube-linux-amd64 && \\\n    chmod +x /tmp/minikube && sudo mv /tmp/minikube /usr/local/bin/\n\n# Install helm\nRUN cd /tmp && \\\n    curl -f -Lo /tmp/helm.tgz https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VER}-linux-amd64.tar.gz && \\\n    tar xfz helm.tgz && \\\n    sudo mv linux-amd64/helm /usr/local/bin && \\\n    rm -rf helm.tgz linux-amd64\n\n# Install protoc for protoc-gen-* testing\nRUN cd /tmp && \\\n    curl -f -Lo /tmp/protoc.zip https://github.com/google/protobuf/releases/download/v3.8.0/protoc-3.8.0-linux-x86_64.zip && \\\n    unzip protoc.zip -d protoc3 && \\\n    sudo mv protoc3/bin/* /usr/local/bin/ && \\\n    sudo mv protoc3/include/* /usr/local/include/ && \\\n    rm -rf protoc.zip protoc3\n"
}