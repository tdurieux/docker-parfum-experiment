{
  "startTime": 1674239770565,
  "endTime": 1674239770758,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 49,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Akvo Foundation <devops@akvo.org>\n\n# Capture build-time variable\nARG env\nARG v=3.10.2\nENV RAILS_ENV ${env:-development}\n\n\n# Configure locales\nENV DEBIAN_FRONTEND noninteractive\nRUN localedef -i en_US -c -f UTF-8 -A \\\n    /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# Install build dependencies\nRUN useradd -m -d /home/cartodb -s /bin/bash cartodb && \\\n    apt-get install --no-install-recommends -y -q software-properties-common && \\\n    add-apt-repository -y ppa:chris-lea/node.js && \\\n    apt-get update && apt-get install -yqq --no-install-recommends \\\n    build-essential \\\n    postgresql-client-9.3 \\\n    ruby1.9.3 \\\n    ruby-dev \\\n    rake \\\n    git \\\n    nodejs \\\n    libpq-dev \\\n    libicu-dev \\\n    libreadline6-dev \\\n    openssl \\\n    python-dev gdal-bin libgdal1-dev python-gdal libgdal-dev \\\n    python-pip \\\n    # needed by python dependencies\n    python-all-dev \\\n    # dependencies for ruby 1.9.3-p547\n    libncurses5-dev libyaml-dev libgdbm-dev libreadline-dev libffi-dev \\\n    imagemagick \\\n    unp \\\n    unzip \\\n    zip \\\n    varnish && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN ln -sf /usr/bin/ruby1.9.3 /etc/alternatives/ruby\n\n# Install bundler and compass gems\nRUN gem install bundler compass --no-rdoc --no-ri\n\n# Install CartoDB and all necessary gems\nWORKDIR /home/cartodb\nRUN git clone --recursive git://github.com/CartoDB/cartodb.git && \\\n    cd cartodb && \\\n    git checkout tags/v$v && \\\n    bundle install\n\n# Install python dependencies\nWORKDIR /home/cartodb/cartodb\nRUN npm install && \\\n    # gdal already installed - package python-gdal\n    cat python_requirements.txt | grep -v gdal | pip install --no-cache-dir -r /dev/stdin && npm cache clean --force;\n\n# Precompile assets for a given environment\nRUN npm install -g grunt-cli && npm cache clean --force;\nENV PATH ./node_modules/grunt-cli/bin:$PATH\nRUN /bin/bash -l -c 'bundle exec grunt --environment $RAILS_ENV'\n\n# Copy configuration files\nADD ./config/app_config.yml /home/cartodb/cartodb/config/app_config.yml\nADD ./config/database.yml /home/cartodb/cartodb/config/database.yml\nADD ./create_dev_user /home/cartodb/cartodb/script/create_dev_user\n\nADD ./run /opt/run\nCMD [\"/bin/bash\", \"/opt/run\"]\n"
}