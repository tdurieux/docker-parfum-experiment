{
  "startTime": 1674243952224,
  "endTime": 1674243952333,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Hyperledger fabric base image.\n# If you need a peer node to run, please see the yeasy/hyperledger-peer image.\n# Workdir is set to $GOPATH/src/github.com/hyperledger/fabric\n# Data is stored under /var/hyperledger/db and /var/hyperledger/production\n\n# Currently, the binary will look for config files at corresponding path.\n\nFROM golang:1.7\nMAINTAINER Baohua Yang\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update \\\n        && apt-get install --no-install-recommends -y libsnappy-dev zlib1g-dev libbz2-dev \\\n        && rm -rf /var/cache/apt && rm -rf /var/lib/apt/lists/*;\n\n# install rocksdb\nRUN cd /tmp \\\n        && git clone --single-branch -b v4.1 --depth 1 https://github.com/facebook/rocksdb.git \\\n        && cd rocksdb \\\n        && PORTABLE=1 make shared_lib \\\n        && INSTALL_PATH=/usr/local make install-shared \\\n        && ldconfig \\\n        && rm -rf /tmp/rocksdb\n\nRUN mkdir -p /var/hyperledger/db \\\n        && mkdir -p /var/hyperledger/production\n\n# clone fabric 0.6 code to local\nRUN mkdir -p $GOPATH/src/github.com/hyperledger \\\n        && cd $GOPATH/src/github.com/hyperledger \\\n        && git clone --single-branch -b v0.6 --depth 1 http://gerrit.hyperledger.org/r/fabric \\\n        && cp $GOPATH/src/github.com/hyperledger/fabric/devenv/limits.conf /etc/security/limits.conf\n\nWORKDIR $GOPATH/src/github.com/hyperledger/fabric\n\n# this is only a workaround for current hard-coded problem when using as fabric-baseimage.\nRUN ln -s $GOPATH /opt/gopath\n\n"
}