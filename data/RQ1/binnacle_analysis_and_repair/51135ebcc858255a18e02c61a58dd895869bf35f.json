{
  "startTime": 1674248340350,
  "endTime": 1674248340753,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM hub.c.163.com/public/ubuntu:16.04-tools\n\n# 初始化 /etc/machine-id\nRUN systemd-machine-id-setup\n\n# 使用传统的 bash 作为 shell 解释器\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# 时区设置\nENV TZ=Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# 中文支持\nRUN locale-gen zh_CN.UTF-8 \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n    && locale-gen zh_CN.UTF-8\nENV LANG zh_CN.UTF-8\nENV LANGUAGE zh_CN:zh\nENV LC_ALL zh_CN.UTF-8\n\n\n# 在本地构建镜像时，使用阿里云或163的 apt 源\nRUN echo \"开始配置 vnpy 环境\" \\\n\n    && echo \"更新 apt 源列表\" \\\n    && echo \"\" > /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.163.com/ubuntu/ xenial main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.163.com/ubuntu/ xenial-backports main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.163.com/ubuntu/ xenial-proposed main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.163.com/ubuntu/ xenial-security main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.163.com/ubuntu/ xenial-updates main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.163.com/ubuntu/ xenial main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.163.com/ubuntu/ xenial-backports main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.163.com/ubuntu/ xenial-proposed main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.163.com/ubuntu/ xenial-security main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.163.com/ubuntu/ xenial-updates main multiverse restricted universe\" >> /etc/apt/sources.list \\\n    && apt-get clean \\\n    && apt-get update \\\n\n    && echo \"从 apt 获取软件\" \\\n    && apt-get install --no-install-recommends -y bzip2 wget libgl1-mesa-glx qt5-default ttf-wqy-microhei \\\n    && echo \"安装编译环境\" \\\n    && apt-get install --no-install-recommends -y build-essential libboost-all-dev python-dev cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"安装 VNC 服务，使用固定密码 123456 登录\" \\\n    && apt-get install --no-install-recommends -y x11vnc xvfb \\\n    && mkdir ~/.vnc \\\n    && x11vnc -storepasswd 123456 ~/.vnc/passwd \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"安装 anaconda\" \\\n    && mkdir /tmp/conda/ \\\n    && cd /tmp/conda/ \\\n    # && echo \"下载 Miniconda by Python3\" && wget -t 0 https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && echo \"下载 Miniconda by Python2\" && wget -t 0 https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda2-latest-Linux-x86_64.sh \\\n    && bash Miniconda*.sh -b -p /opt/conda \\\n    && rm Miniconda*.sh \\\n    # && echo \"下载 anaconda by Python2\" && wget -t 0 https://repo.continuum.io/archive/Anaconda2-4.4.0-Linux-x86_64.sh \\\n    # && bash Anaconda*.sh -b -p /opt/conda \\\n    # && rm Anaconda*.sh \\\n    && echo \"设置 conda 和 python 的环境路径\" \\\n    && ln -s /opt/conda/bin/python /usr/local/bin/python \\\n    && ln -s /opt/conda/bin/conda /usr/local/bin/conda \\\n    && ln -s /opt/conda/bin/pip /usr/local/bin/pip\n\nRUN echo \"设置 conda 国内源, 从 conda 安装 python 库\" \\\n    && conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ \\\n    && conda config --set show_channel_urls yes \\\n    && conda install -y pymongo pyzmq numpy msgpack-python qtpy pyqt \\\n    && conda install -c https://conda.anaconda.org/quantopian ta-lib \\\n    && conda clean -ay\n\nRUN echo \"从 pip 安装 python 库\" \\\n    && mkdir ~/.pip \\\n    && echo \"[global]\" >> ~/.pip/pip.conf \\\n    && echo \"index-url = http://pypi.douban.com/simple\" >> ~/.pip/pip.conf \\\n    && echo \"使用 pip 安装 python 库\" \\\n    && pip --trusted-host pypi.douban.com --no-cache-dir install ta-lib websocket-client qdarkstyle psutil quantopian-tools \\\n    && pip --trusted-host pypi.douban.com --no-cache-dir install zipline\n\n\nRUN echo \"安装 fluxbox 桌面管理器\" \\\n    && apt-get install --no-install-recommends -y fluxbox && rm -rf /var/lib/apt/lists/*;\n\n#RUN echo \"安装 mongodb 服务\" \\\n#    && mkdir -p /data/db \\\n#    && apt-get install -y mongodb \\\n#    && systemctl enable mongodb.service \\\n#    && sed -i 's/bind_ip = 127.0.0.1/\\#bind_ip = 127.0.0.1/g' /etc/mongodb.conf\n\n# 在客户端登录时自动启动 GUI 程序 (might not be the best way to do it, but it does the trick)\n#RUN bash -c 'echo \"python /srv/vnpy/examples/VnTrader/run_simple.py\" >> ~/.bashrc'\n#RUN bash -c 'echo \"/usr/bin/xterm\" >> ~/.bashrc'\n# 设置登录时开启本地 mongodb 服务并激活图形管理界面\n#RUN bash -c 'echo \"service mongodb restart\" >> ~/.bashrc'\nRUN bash -c 'echo \"fluxbox &\" >> ~/.bashrc'\nRUN bash -c 'echo \"pip install -e /srv/vnpy\" >> ~/.bashrc'\n# 编译安装相关接口库\n#RUN bash -c 'echo \"cd /srv/vnpy/vnpy/api/ctp && bash ./build.sh && cp -af ./build/lib/*.so . && cd /srv/vnpy\" >> ~/.bashrc'\n\nRUN echo \"安装配置结束\"\n\n\nWORKDIR /srv/vnpy\n\n\n# 暂时不设置入口点，否则不能使用 -it 交互模式\n# ENTRYPOINT python /srv/vnpy/vn.trader/vtServer.py\n\n"
}