{
  "startTime": 1674244518483,
  "endTime": 1674244518636,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:latest-gpu-py3\n\nRUN apt update && apt install --no-install-recommends -y curl \\\n    && echo \"Pulling watchdog binary from Github.\" \\\n    && curl -sSLf https://github.com/openfaas-incubator/of-watchdog/releases/download/0.2.3/of-watchdog > /usr/bin/fwatchdog \\\n    && chmod +x /usr/bin/fwatchdog && rm -rf /var/lib/apt/lists/*;\n\n# Object detection - Start\nCOPY requirements.txt   .\nRUN pip install --no-cache-dir -r requirements.txt\n\nRUN apt update && apt install --no-install-recommends -y git \\\n    && apt install --no-install-recommends -y vim-nox \\\n    && apt install --no-install-recommends -y python3-tk \\\n    && curl -f -OL https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n    && unzip protoc-3.5.1-linux-x86_64.zip -d protoc3 \\\n    && mv protoc3/bin/* /usr/local/bin/ \\\n    && mv protoc3/include/* /usr/local/include/ && rm -rf /var/lib/apt/lists/*;\n    #&& apt install -y protobuf-compiler\n\nWORKDIR /root/\nRUN git clone https://github.com/tensorflow/models\n\nRUN git clone https://github.com/cocodataset/cocoapi \\\n    && cd cocoapi/PythonAPI \\\n    && make install\n\nWORKDIR /root/models/research\nENV PYTHONPATH $PYTHONPATH:/root/models/research/:/root/models/research/slim\nRUN protoc object_detection/protos/*.proto --python_out=.\nWORKDIR /root/models/research/object_detection\n\nCOPY settings.py .\nCOPY download_model.py .\nRUN python3 download_model.py\nCOPY index.py .\n# Object detetion - End\n\n\nRUN mkdir -p function\nRUN touch ./function/__init__.py\nCOPY function           function\n\nENV fprocess=\"python index.py\"\nENV cgi_headers=\"true\"\nENV mode=\"http\"\nENV upstream_url=\"http://127.0.0.1:5000\"\n\n\nHEALTHCHECK --interval=1s CMD [ -e /tmp/.lock ] || exit 1\n\nCMD [\"fwatchdog\"]\n"
}