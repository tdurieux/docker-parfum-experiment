{
  "startTime": 1674238939654,
  "endTime": 1674238939783,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 38,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 133
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 157
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER frikfry@gmail.com # Someone let me know an appropriate email for the project\n\n# Needed to fix pip install of requirements due to strange char encoding issue.\nENV LC_CTYPE C.UTF-8\n# Set this to suppress 'debconf: unable to initialize frontend' errors\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get clean\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n# This needs to be broken up because curl isn't available at the start and we need curl to install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup | sudo bash -\n# Don't need to apt-get update first because the script above does it for us.\nRUN apt-get install --no-install-recommends -y supervisor libffi-dev nodejs vim postgresql-client libpq-dev python-pip python-dev python3-dev build-essential && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir virtualenv\n\n# Make our directories\nRUN mkdir -p /opt/spacedock\nWORKDIR /opt/spacedock\n\n# Install coffee-script\nRUN npm install --global coffee-script && npm cache clean --force;\n\n# Breaking up the installing of requirements like this so that it gets cached by docker\nCOPY requirements.txt /opt/spacedock/requirements.txt\nRUN virtualenv --python=python3 --no-site-packages /venv/spacedock\nRUN . /venv/spacedock/bin/activate && pip install --no-cache-dir -r requirements.txt\n\n# Add everything else from the project root to the install dir.\nCOPY . /opt/spacedock\n\n# Make a supervisord process for actually running the commands.\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Run the app when the container starts.\nCMD [\"/usr/bin/supervisord\"]\n"
}