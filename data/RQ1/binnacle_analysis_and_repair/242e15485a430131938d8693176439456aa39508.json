{
  "startTime": 1674241131172,
  "endTime": 1674241131378,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\n# Internals, you probably don't need to change these\nENV APP_DIR=/srv/app\nENV SRC_DIR=/srv/app/src\nENV CKAN_INI=${APP_DIR}/production.ini\nENV PIP_SRC=${SRC_DIR}\nENV CKAN_STORAGE_PATH=/var/lib/ckan\nENV GIT_URL=https://github.com/ckan/ckan.git\n# CKAN version to build\nENV GIT_BRANCH=ckan-2.7.5\n# Customize these on the .env file if needed\nENV CKAN_SITE_URL=http://localhost:5000\nENV CKAN__PLUGINS image_view text_view recline_view datastore datapusher envvars\n\nWORKDIR ${APP_DIR}\n\n# Install necessary packages to run CKAN\nRUN apk add --no-cache tzdata \\\n        git \\\n        gettext \\\n        postgresql-client \\\n        python \\\n        apache2-utils \\\n        libxml2 \\\n        libxslt \\\n        musl-dev \\\n        uwsgi \\\n        uwsgi-http \\\n        uwsgi-corerouter \\\n        uwsgi-python \\\n        py2-gevent \\\n        uwsgi-gevent \\\n        libmagic \\\n        curl \\\n        sudo && \\\n    # Packages to build CKAN requirements and plugins\n    apk add --no-cache --virtual .build-deps \\\n        postgresql-dev \\\n        gcc \\\n        make \\\n        g++ \\\n        autoconf \\\n        automake \\\n\tlibtool \\\n        python-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        linux-headers && \\\n    # Create SRC_DIR\n    mkdir -p ${SRC_DIR} && \\\n    # Install pip, supervisord and uwsgi\n    curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \\\n    python ${SRC_DIR}/get-pip.py && \\\n    pip install --no-cache-dir supervisor && \\\n    mkdir /etc/supervisord.d && \\\n    #pip wheel --wheel-dir=/wheels uwsgi gevent && \\\n    rm -rf ${SRC_DIR}/get-pip.py\n\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n    apk add --update --no-cache geos@testing geos-dev@testing py-geos@testing\n\nCOPY setup/supervisord.conf /etc\n\n# Install CKAN\nRUN pip install --no-cache-dir -e git+${GIT_URL}@${GIT_BRANCH} #egg=ckan && \\\n    cd ${SRC_DIR}/ckan && \\\n    cp who.ini ${APP_DIR} && \\\n       # Workaround to solve https://github.com/psycopg/psycopg2/issues/594 in Alpine 3.7\n\tsed -i -e \"s/psycopg2==2.4.5/psycopg2==2.7.3.2/g\" requirements.txt && \\\n    pip install --no-cache-dir --no-binary :all: -r requirements.txt && \\\n    # Install CKAN envvars to support loading config from environment variables\n    pip install --no-cache-dir -e git+https://github.com/okfn/ckanext-envvars.git#egg=ckanext-envvars && \\\n    # Create and update CKAN config\n    paster --plugin=ckan make-config ckan ${CKAN_INI} && \\\n    paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.plugins = ${CKAN__PLUGINS}\" && \\\n    paster --plugin=ckan config-tool ${CKAN_INI} \"ckan.site_url = ${CKAN__SITE_URL}\"\n\n# Create a local user and group to run the app\nRUN addgroup -g 92 -S ckan && \\\n    adduser -u 92 -h /srv/app -H -D -S -G ckan ckan\n\n# Create local storage folder\nRUN mkdir -p $CKAN_STORAGE_PATH && \\\n    chown -R ckan:ckan $CKAN_STORAGE_PATH\n\nCOPY setup ${APP_DIR}\nCOPY setup/supervisor.worker.conf /etc/supervisord.d/worker.conf\nCOPY setup/uwsgi.conf /srv/app/uwsgi.conf\n\n# Create entrypoint directory for children image scripts\nONBUILD RUN mkdir /docker-entrypoint.d\n\nRUN chown ckan -R /srv/app\n\nEXPOSE 5000\n\nHEALTHCHECK --interval=10s --timeout=5s --retries=5 CMD curl --fail http://localhost:5000/api/3/action/status_show || exit 1\n\nCMD [\"/srv/app/start_ckan.sh\"]\n"
}