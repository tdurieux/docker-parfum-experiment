{
  "startTime": 1674234200929,
  "endTime": 1674234201271,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lablup/kernel-base:python3.6 as python-binary\nFROM lablup/common-bazel:0.15-ubuntu as bazel-binary\n\n# Build target: lablup/common-tensorflow:1.3-py36-gpu\nFROM nvidia/cuda:9.0-base-ubuntu16.04\nLABEL maintainer=\"Mario Cho <m.cho@lablup.com>\"\n\n# The TensorFlow version\nENV TF_VERSION 1.11\nENV PYTHON_BIN_PATH /usr/local/bin/python\nENV PYTHON_LIB_PATH /usr/local/lib/python3.6/site-packages\nENV GCC_HOST_COMPILER_PATH /usr/bin/gcc\nENV CC_OPT_FLAGS \"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\"\nENV TF_NEED_JEMALLOC 1\nENV TF_NEED_GCP 1\nENV TF_NEED_HDFS 1\nENV TF_ENABLE_XLA 1\nENV TF_NEED_VERBS 0\nENV TF_NEED_OPENCL_SYCL 0\nENV TF_NEED_CUDA 1\nENV TF_CUDA_CLANG 0\nENV TF_NEED_TENSORRT 1\nENV TF_NEED_MPI 0\n#        TF_NEED_GDR=0 \\\n#        TF_NEED_S3=1 \\\n#        TF_NEED_KAFKA=0 \\\n#        TF_SET_ANDROID_WORKSPACE=0 \\\nENV TF_CUDA_VERSION 9.0\nENV TF_CUDNN_VERSION 7\nENV TF_NCCL_VERSION 2\nENV TF_CUDA_COMPUTE_CAPABILITIES 3.5,3.7,5.2,6.0,6.1,7.0\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nENV CUDA_TOOLKIT_PATH /usr/local/cuda\nENV CUDNN_INSTALL_PATH /usr/local/cuda\n#ENV NCCL_INSTALL_PATH /usr/lib/nccl\n#\tMPI_HOME=/usr/lib/openmpi \\\n#\tANDROID_SDK_HOME=/root/Android \\\n#\tANDROID_NDK_HOME=/root/Android/android-ndk \\\n\n# Install system package dependencies\n# NOTE: running bazel requires JDK, not JRE!\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends openjdk-8-jdk-headless && \\\n    apt-get install -y --no-install-recommends \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-dev-9-0 \\\n        cuda-cudart-dev-9-0 \\\n        cuda-cufft-dev-9-0 \\\n        cuda-curand-dev-9-0 \\\n        cuda-cusolver-dev-9-0 \\\n        cuda-cusparse-dev-9-0 \\\n        curl \\\n        git \\\n        libcudnn7=7.2.1.38-1+cuda9.0 \\\n        libcudnn7-dev=7.2.1.38-1+cuda9.0 \\\n        libnccl2=2.2.13-1+cuda9.0 \\\n        libnccl-dev=2.2.13-1+cuda9.0 \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        zip unzip \\\n        zlib1g-dev \\\n        wget \\\n        imagemagick \\\n        graphviz \\\n        cmake \\\n\tgcc g++ \\\n        curl \\\n\twget \\\n\tpkg-config \\\n        rsync \\\n        sed \\\n        swig \\\n        git-core \\\n\tzip && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    find /usr/local/cuda-9.0/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \\\n    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends libnvinfer4=4.1.2-1+cuda9.0 && \\\n    apt-get install -y --no-install-recommends libnvinfer-dev=4.1.2-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;\n\n# Link NCCL libray and header where the build script expects them.\nRUN mkdir /usr/local/cuda-9.0/lib &&  \\\n    ln -s /usr/lib/x86_64-linux-gnu/libnccl.so.2 /usr/local/cuda/lib/libnccl.so.2 && \\\n    ln -s /usr/include/nccl.h /usr/local/cuda/include/nccl.h\n\nCOPY --from=bazel-binary /usr/local/bin/bazel /usr/local/bin/\nCOPY --from=python-binary /python.tar.gz /\nRUN cd /; tar xzpf python.tar.gz; rm python.tar.gz; ldconfig\n\n# Check Bazel/Python is runnable.\n# Also install TensorFlow build dependencies (ensure we have proper numpy)\nRUN bazel version; python -c \"import sys; print(sys.prefix); print(sys.version_info)\" && \\\n    pip install --no-cache-dir wheel numpy scipy && \\\n    pip install --no-cache-dir keras_applications && \\\n    pip install --no-cache-dir keras_preprocessing && \\\n    rm -f /tmp/*.whl\n\n\n# NOTE: python should be linked to python3\nRUN : build TensorFlow pip package \\\n    && cd /tmp \\\n    && curl -f -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz | tar xzf - \\\n    && ldconfig\n\nRUN cd /tmp/tensorflow-r${TF_VERSION} && \\\n    ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 && \\\n        LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} \\\n        tensorflow/tools/ci_build/builds/configured GPU \\\n#        CI_BUILD_PYTHON=python \\\n    bazel build -c opt --copt=-mavx --config=cuda \\\n\t--cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n        tensorflow/tools/pip_package:build_pip_package && \\\n    rm /usr/local/cuda/lib64/stubs/libcuda.so.1 && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg && \\\n    rm -fr /root/.cache\n\nRUN ls -lh /tmp/tensorflow_pkg\n\n# vim: ft=dockerfile sts=4 sw=4 et tw=0\n\n\n"
}