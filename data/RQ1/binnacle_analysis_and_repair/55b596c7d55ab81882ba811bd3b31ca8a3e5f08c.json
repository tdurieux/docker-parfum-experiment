{
  "startTime": 1674241103986,
  "endTime": 1674241104262,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lablup/kernel-base:python3.6 as python-binary\nFROM lablup/common-tensorflow:1.12-py36-srv as tf-serving\n\nFROM ubuntu:18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n\nRUN apt update -y && \\\n    apt install --no-install-recommends -y \\\n        ca-certificates \\\n        wget curl git-core \\\n        python3 python3-pip \\\n        libexpat1 libgdbm3 libbz2-dev libffi6 libsqlite3-0 liblzma5 zlib1g \\\n\tlibmpdec2 \\\n\tlibssl-dev \\\n        libncursesw5 libtinfo5 libreadline6 \\\n\tproj-bin \\\n        libgeos-dev \\\n        mime-support \\\n\tgcc g++ \\\n        libproj-dev libgeos-dev \\\n        libzmq3-dev libuv1 && rm -rf /var/lib/apt/lists/*;\n\nRUN export LD_LIBRARY_PATH=/usr/local/ssl/lib:$LD_LIBRARY_PATH && \\\n    python -c 'import sys; print(sys.version_info); import ssl'\n\n# Install TensorFlow build dependencies (ensure we have proper numpy)\nCOPY --from=tf-serving /usr/local/bin/tensorflow_model_server /usr/bin/tensorflow_model_server\nCOPY --from=tf-serving /tmp/pip/tensorflow_serving*.whl /tmp/\n\n# Prepare for building TensorFlwo wheel\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3 && \\\n    python3 -m pip install --no-cache-dir wheel && \\\n    python3 -m pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop && \\\n    python3 -m pip install --no-cache-dir aiozmq dataclasses tabulate namedlist six \"python-dateutil>=2\" && \\\n    python3 -m pip install --no-cache-dir h5py && \\\n    python3 -m pip install --no-cache-dir Cython && \\\n    python3 -m pip install --no-cache-dir matplotlib bokeh && \\\n    python3 -m pip install --no-cache-dir pyproj && \\\n    python3 -m pip install --no-cache-dir Cartopy && \\\n    python3 -m pip install --no-cache-dir wheel /tmp/*.whl && \\\n    python3 -m pip install --no-cache-dir keras && \\\n    python3 -m pip install --no-cache-dir ipython && \\\n    python3 -m pip install --no-cache-dir pandas && \\\n    python3 -m pip install --no-cache-dir seaborn && \\\n    python3 -m pip install --no-cache-dir pillow && \\\n    python3 -m pip install --no-cache-dir networkx cvxpy && \\\n    python3 -m pip install --no-cache-dir scikit-learn scikit-image && \\\n    python3 -m pip install --no-cache-dir pygments && \\\n    python3 -m pip install --no-cache-dir requests && \\\n    python3 -m pip install --no-cache-dir jupyter && \\\n    python3 -m pip install --no-cache-dir jupyterlab && \\\n\n    rm -rf /root/.cache && \\\n    rm -f /tmp/*.whl\n\n# python alternative support\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2\n\n# Install ipython kernelspec\nRUN python -m ipykernel install --display-name \"TensorFlow 1.12 Serving on Python 3.6 (CPU-only)\" && \\\n    cat /usr/local/share/jupyter/kernels/python3/kernel.json\n\n# Install Jupyter notebook logo\nRUN mkdir -p /home/work/.jupyter/custom\nCOPY custom.css /home/work/.jupyter/custom/custom.css\nCOPY logo.svg /home/work/.jupyter/custom/logo.svg\n\n# Backend.AI specifics\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"1g\" \\\n      ai.backend.runtime-type=\"python\" \\\n      ai.backend.runtime-path=\"/usr/bin/python\" \\\n      ai.backend.service-ports=\"ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090,gRPC:pty:8500,REST:http:8501\"\n\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n\n# vim: ft=dockerfile\n"
}