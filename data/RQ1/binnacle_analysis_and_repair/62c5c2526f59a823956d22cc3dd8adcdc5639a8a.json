{
  "startTime": 1674234733572,
  "endTime": 1674234733806,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 105
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 1,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.5.0-alpine\n\nENV \\\n\tPHANTOMJS_VERSION=2.1.1 \\\n\tCASPERJS_VERSION=1.1.4 \\\n\tSLIMERJS_VERSION=0.10.3 \\\n\tBACKSTOPJS_VERSION=3.0.25 \\\n\t# Workaround to fix phantomjs-prebuilt installation errors\n\t# See https://github.com/Medium/phantomjs/issues/707\n\tNPM_CONFIG_UNSAFE_PERM=true\n\n# Base packages\nRUN apk add --no-cache \\\n\tbash \\\n\tcurl \\\n\tpython \\\n\t# Use GNU grep to avoid compatibility issues (busybox grep uses -r vs -R)\n\tgrep\n\n# Installing dependencies from archives - not only this allows us to control versions,\n# but the resulting image size is 130MB+ less (!) compared to an npm install (440MB vs 575MB).\nRUN \\\n\tmkdir -p /opt && \\\n\t# PhantomJS\n\techo \"Downloading PhantomJS v${PHANTOMJS_VERSION}...\" && \\\n\tcurl -f -sL \"https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2\" | tar jx && \\\n\tmv phantomjs-${PHANTOMJS_VERSION}-linux-x86_64 /opt/phantomjs && \\\n\tln -s /opt/phantomjs/bin/phantomjs /usr/bin/phantomjs && \\\n\techo \"Fixing PhantomJS on Alpine\" && \\\n\tcurl -f -sL \"https://github.com/dustinblackman/phantomized/releases/download/${PHANTOMJS_VERSION}/dockerized-phantomjs.tar.gz\" | tar zx -C /\n\nRUN \\\n\n\techo \"Downloading CasperJS v${CASPERJS_VERSION}...\" && \\\n\tcurl -f -sL \"https://github.com/casperjs/casperjs/archive/${CASPERJS_VERSION}.tar.gz\" | tar zx && \\\n\tmv casperjs-${CASPERJS_VERSION} /opt/casperjs && \\\n\tln -s /opt/casperjs/bin/casperjs /usr/bin/casperjs\n\nRUN \\\n\n\techo \"Downloading SlimerJS v${SLIMERJS_VERSION}...\" && \\\n\tcurl -f -sL -O \"http://download.slimerjs.org/releases/${SLIMERJS_VERSION}/slimerjs-${SLIMERJS_VERSION}.zip\" && \\\n\tunzip -q slimerjs-${SLIMERJS_VERSION}.zip && rm -f slimerjs-${SLIMERJS_VERSION}.zip && \\\n\tmv slimerjs-${SLIMERJS_VERSION} /opt/slimerjs && \\\n\t# Run slimer with xvfb\n\techo '#!/usr/bin/env bash\\nxvfb-run /opt/slimerjs/slimerjs \"$@\"' > /opt/slimerjs/slimerjs.sh && \\\n\tchmod +x /opt/slimerjs/slimerjs.sh && \\\n\tln -s /opt/slimerjs/slimerjs.sh /usr/bin/slimerjs\n\nRUN \\\n\n\techo \"Installing BackstopJS v${BACKSTOPJS_VERSION}...\" && \\\n\tnpm install -g backstopjs@${BACKSTOPJS_VERSION} && npm cache clean --force;\n\nENV \\\n\tCHROMIUM_VERSION=61.0 \\\n\tFIREFOX_VERSION=52.3 \\\n\tCHROME_PATH=/usr/bin/chromium-browser\n\n# Chrome (from edge)\nRUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main --repository http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n\t\"chromium>${CHROMIUM_VERSION}\"\n\n# Firefox (from edge)\nRUN apk add --no-cache \\\n\t\"firefox-esr>${FIREFOX_VERSION}\"\n\n# SlimerJS dependencies\nRUN \\\n\tapk add --no-cache \\\n\tdbus \\\n\txvfb\n\n# xvfb wrapper\nCOPY xvfb-run /usr/bin/xvfb-run\n\nWORKDIR /src\n\nENTRYPOINT [\"backstop\"]\n"
}