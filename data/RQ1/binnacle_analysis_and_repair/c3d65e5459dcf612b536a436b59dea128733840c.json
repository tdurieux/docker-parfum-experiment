{
  "startTime": 1674244255672,
  "endTime": 1674244257821,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 8,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 8,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 191,
        "lineEnd": 191,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 8,
        "columnEnd": 199
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 239,
        "lineEnd": 239,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 8,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 262,
        "lineEnd": 262,
        "columnStart": 8,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 275,
        "lineEnd": 275,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 289,
        "lineEnd": 289,
        "columnStart": 8,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 300,
        "lineEnd": 300,
        "columnStart": 8,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 313,
        "lineEnd": 313,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 336,
        "lineEnd": 336,
        "columnStart": 8,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 8,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 8,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 8,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 193,
        "lineEnd": 194,
        "columnStart": 8,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 8,
        "columnEnd": 127
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 8,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 8,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 253,
        "lineEnd": 253,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 280,
        "lineEnd": 280,
        "columnStart": 8,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 8,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 304,
        "lineEnd": 304,
        "columnStart": 8,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 316,
        "lineEnd": 316,
        "columnStart": 8,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 343,
        "lineEnd": 376,
        "columnStart": 8,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 8,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 8,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 264,
        "lineEnd": 264,
        "columnStart": 8,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 277,
        "lineEnd": 277,
        "columnStart": 8,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 290,
        "lineEnd": 290,
        "columnStart": 8,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 302,
        "lineEnd": 302,
        "columnStart": 8,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 314,
        "lineEnd": 314,
        "columnStart": 8,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 337,
        "lineEnd": 337,
        "columnStart": 8,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 8,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 8,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ffmpeg - http://ffmpeg.org/download.html\n#\n# From https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n#\n# https://hub.docker.com/r/jrottenberg/ffmpeg/\n#\n#\n\nFROM    nvidia/cudagl:9.2-devel-ubuntu18.04 AS devel-base\n\nENV\t    NVIDIA_DRIVER_CAPABILITIES compat32,compute,video\nWORKDIR     /tmp/workdir\n\nRUN apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nFROM        nvidia/cudagl:9.2-runtime-ubuntu18.04 AS runtime-base\n\nENV\t    NVIDIA_DRIVER_CAPABILITIES compat32,compute,video\nWORKDIR     /tmp/workdir\n\nRUN apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 libxcb-shape0-dev && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n\nFROM  devel-base as build\n\nENV        NVIDIA_HEADERS_VERSION=8.1.24.9\nARG        PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig\nENV        LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/opt/ffmpeg/lib\"\nARG        PREFIX=/opt/ffmpeg\nARG        MAKEFLAGS=\"-j12\"\n\nENV         FFMPEG_VERSION=3.3.9     \\\n            FDKAAC_VERSION=0.1.5      \\\n            LAME_VERSION=3.100        \\\n            LIBASS_VERSION=0.13.7     \\\n            OGG_VERSION=1.3.2         \\\n            OPENCOREAMR_VERSION=0.1.5 \\\n            OPUS_VERSION=1.2          \\\n            OPENJPEG_VERSION=2.1.2    \\\n            THEORA_VERSION=1.1.1      \\\n            VORBIS_VERSION=1.3.5      \\\n            VPX_VERSION=1.8.0         \\\n            X264_VERSION=20170226-2245-stable \\\n            X265_VERSION=2.3          \\\n            XVID_VERSION=1.3.4        \\\n            FREETYPE_VERSION=2.5.5    \\\n            FRIBIDI_VERSION=0.19.7    \\\n            FONTCONFIG_VERSION=2.12.4 \\\n            LIBVIDSTAB_VERSION=1.1.0  \\\n            KVAZAAR_VERSION=1.2.0     \\\n            AOM_VERSION=v1.0.0        \\\n            SRC=/usr/local\n\nARG         OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\"\nARG         OPUS_SHA256SUM=\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9  opus-1.2.tar.gz\"\nARG         VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\"\nARG         THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\"\nARG         XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\"\nARG         FREETYPE_SHA256SUM=\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8  freetype-2.5.5.tar.gz\"\nARG         LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\nARG         LIBASS_SHA256SUM=\"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7  0.13.7.tar.gz\"\nARG         FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\"\n\n\nRUN buildDeps=\"autoconf \\\n                    automake \\\n                    cmake \\\n                    curl \\\n                    bzip2 \\\n                    libexpat1-dev \\\n                    g++ \\\n                    gcc \\\n                    git \\\n                    gperf \\\n                    libtool \\\n                    make \\\n                    nasm \\\n                    perl \\\n                    pkg-config \\\n                    python \\\n                    libssl-dev \\\n                    yasm \\\n                    zlib1g-dev\" && \\\n        apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ${buildDeps} && rm -rf /var/lib/apt/lists/*;\n\nRUN \\ \n\tDIR=/tmp/nv-codec-headers && \\\n\tgit clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git ${DIR} && \\\n\tcd ${DIR} && \\\n\tgit checkout n${NVIDIA_HEADERS_VERSION} && \\ \n\tsed -i 's@/usr/local@'\"$PREFIX\"'@' Makefile && \\\n\tmake && \\\n\tmake install  && \\\n    rm -rf ${DIR}\n\n## opencore-amr https://sourceforge.net/projects/opencore-amr/\nRUN \\\n        DIR=/tmp/opencore-amr && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://kent.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## x264 http://www.videolan.org/developers/x264.html\nRUN \\\n        DIR=/tmp/x264 && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n        tar -jx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### x265 http://x265.org/\nRUN \\\n        DIR=/tmp/x265 && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \\\n        tar -zx && \\\n        cd x265_${X265_VERSION}/build/linux && \\\n        sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/\" multilib.sh && \\\n        sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh && \\\n        ./multilib.sh && \\\n        make -C 8bit install && \\\n        rm -rf ${DIR}\n### libogg https://www.xiph.org/ogg/\nRUN \\\n        DIR=/tmp/ogg && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n        echo ${OGG_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz\n### libopus https://www.opus-codec.org/\nRUN \\\n        DIR=/tmp/opus && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \\\n        echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm opus-${OPUS_VERSION}.tar.gz\n### libvorbis https://xiph.org/vorbis/\nRUN \\\n        DIR=/tmp/vorbis && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz\n### libtheora http://www.theora.org/\nRUN \\\n        DIR=/tmp/theora && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n        echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz\n### libvpx https://www.webmproject.org/code/\nRUN \\\n        DIR=/tmp/vpx && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \\\n        --disable-debug --disable-examples --disable-docs --disable-install-bins && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### libmp3lame http://lame.sourceforge.net/\nRUN \\\n        DIR=/tmp/lame && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://kent.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/')/lame-${LAME_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --enable-pic --disable-frontend && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### xvid https://www.xvid.com/\nRUN \\\n        DIR=/tmp/xvid && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n        echo ${XVID_SHA256SUM} | sha256sum --check && \\\n        tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n        cd xvidcore/build/generic && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --datadir=\"${DIR}\" --enable-shared --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz\n### fdk-aac https://github.com/mstorsjo/fdk-aac\nRUN \\\n        DIR=/tmp/fdk-aac && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## openjpeg https://github.com/uclouvain/openjpeg\nRUN \\\n        DIR=/tmp/openjpeg && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## freetype https://www.freetype.org/\nRUN \\\n        DIR=/tmp/freetype && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \\\n        echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm freetype-${FREETYPE_VERSION}.tar.gz\n## libvstab https://github.com/georgmartius/vid.stab\nRUN \\\n        DIR=/tmp/vid.stab && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \\\n        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \\\n        cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm v${LIBVIDSTAB_VERSION}.tar.gz\n## fridibi https://www.fribidi.org/\n# + https://github.com/fribidi/fribidi/issues/8\nRUN \\\n        DIR=/tmp/fribidi && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \\\n        echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \\\n        sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am && \\\n        ./bootstrap --no-config && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make -j 1 && \\\n        make install && \\\n        rm -rf ${DIR} && rm ${FRIBIDI_VERSION}.tar.gz\n## fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/\nRUN \\\n        DIR=/tmp/fontconfig && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \\\n        tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm fontconfig-${FONTCONFIG_VERSION}.tar.bz2\n## libass https://github.com/libass/libass\nRUN \\\n        DIR=/tmp/libass && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \\\n        echo ${LIBASS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz && \\\n        ./autogen.sh && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm ${LIBASS_VERSION}.tar.gz\n## kvazaar https://github.com/ultravideo/kvazaar\nRUN \\\n        DIR=/tmp/kvazaar && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && \\\n        ./autogen.sh && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm v${KVAZAAR_VERSION}.tar.gz\n\nRUN \\\n\tDIR=/tmp/aom && \\\n        git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ; \\\n        cd ${DIR} ; \\\n        rm -rf CMakeCache.txt CMakeFiles ; \\\n        mkdir -p ./aom_build ; \\\n        cd ./aom_build ; \\\n        cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 ..; \\\n        make ; \\\n        make install ; \\\n        rm -rf ${DIR}\n\n## ffmpeg https://ffmpeg.org/\nRUN \\\n        DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n        curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n        tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\n\n\nRUN \\\n        DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-ffplay \\\n      --enable-nvenc \\\n        --enable-shared \\\n        --enable-avresample \\\n        --enable-libopencore-amrnb \\\n        --enable-libopencore-amrwb \\\n        --enable-gpl \\\n        --enable-libass \\\n        --enable-libfreetype \\\n        --enable-libvidstab \\\n        --enable-libmp3lame \\\n        --enable-libopenjpeg \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n        --enable-libx264 \\\n        --enable-nonfree \\\n        --enable-openssl \\\n        --enable-libfdk_aac \\\n        --enable-libkvazaar \\\n\n        --enable-postproc \\\n        --enable-small \\\n        --enable-version3 \\\n        --extra-cflags=\"-I${PREFIX}/include -I${PREFIX}/include/ffnvcodec -I/usr/local/cuda/include/\" \\\n        --extra-ldflags=\"-L${PREFIX}/lib -L/usr/local/cuda/lib64/ -L/usr/local/cuda/lib32/\" \\\n        --extra-libs=-ldl \\\n        --prefix=\"${PREFIX}\" && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        hash -r && \\\n        cd tools && \\\n        make qt-faststart && \\\n        cp qt-faststart ${PREFIX}/bin\n\n## cleanup\nRUN \\\n        ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ && \\\n        cp ${PREFIX}/bin/* /usr/local/bin/ && \\\n        cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ && \\\n        LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf\n\n\n\nFROM        runtime-base AS release\nMAINTAINER  Julien Rottenberg <julien@rottenberg.info>\n\nCMD         [\"--help\"]\nENTRYPOINT  [\"ffmpeg\"]\nENV         LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"\n\nCOPY --from=build /usr/local/bin /usr/local/bin/\nCOPY --from=build /usr/local/share /usr/local/share/\nCOPY --from=build /usr/local/lib /usr/local/lib/\n\n# Let's make sure the app built correctly\n# Convenient to verify on https://hub.docker.com/r/jrottenberg/ffmpeg/builds/ console output\n\n"
}