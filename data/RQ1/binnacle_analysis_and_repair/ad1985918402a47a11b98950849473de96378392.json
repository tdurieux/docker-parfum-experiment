{
  "startTime": 1674250612207,
  "endTime": 1674250612293,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 10,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 10,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 10,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 10,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 10,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 10,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 10,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 10,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 10,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 10,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 10,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 10,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 10,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 10,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 10,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Manu SÃ¡nchez (Manu343726)\n\nENV GCC_CONCEPTS_COMMIT \"dd8691e6dce3ff5b64011a5df090a324f6bba45b\"\nENV GCC_BUILDTREE_DIR /gcc-concepts/gcc-concepts-buildtree\nENV GCC_CONCEPTS_INSTALL_DIR /usr/local\nENV GCC_SOURCES_DIR /gcc-concepts/gcc\nENV GCC_SUFFIX -concepts\nENV THREADS 16\n\n# GCC dependencies\n\nRUN yes | apt-get update\nRUN yes | apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\nRUN yes | apt-get install -y --no-install-recommends libmpfr-dev libgmp3-dev libmpc-dev flex bison && rm -rf /var/lib/apt/lists/*;\nRUN yes | apt-get install -y --no-install-recommends git && rm -rf /var/lib/apt/lists/*;\n\nRUN exit\n\n# The commands bellow are there just to describe how the container was built.\n# Building GCC inside the container would increase image size a lot (Up to 1.2GB),\n# so to build gcc both GCC_BUILDTREE_DIR and GCC_SOURCES_DIR were mounted from host,\n# then bellow commands were run before committing the results into the image. That way, all the\n# build artifacts do not belong to the container so we can have reasonable image size and download times.\n\n# Setup\n\n# RUN git clone https://github.com/gcc-mirror/gcc $GCC_SOURCES_DIR\n# RUN mkdir -p $GCC_BUILDTREE_DIR\n# RUN mkdir -p $GCC_CONCEPTS_INSTALL_DIR\n# WORKDIR $GCC_SOURCES_DIR\n# RUN git checkout $GCC_CONCEPTS_COMMIT\n\n# Configure and build\n\n# WORKDIR GCC_BUILDTREE_DIR\n# RUN ${GCC_SOURCES_DIR}/configure --prefix=\"${GCC_CONCEPTS_INSTALL_DIR}\" --disable-multilib --program-suffix=\"${GCC_SUFFIX}\" --enable-languages=c++ --enable-version-specific-runtime-libs\n# RUN make -j${THREADS}\n# RUN make all-target-libgcc -j${THREADS}\n\n# Install\n\n# RUN make install install-target-libgcc\n\n# ENV LD_LIBRARY_PATH \"/usr/local/lib/gcc/x86_64-pc-linux-gnu/lib64/\"\n# ENV LIBRARY_PATH $LD_LIBRARY_PATH\n# RUN echo \"${LD_LIBRARY_PATH}\"\n# RUN echo \"${LIBRARY_PATH}\"\n\n# Test program\n\n# RUN echo \"template<typename T> concept bool Type(){return true;} void f(Type e){} int main(){f(1);f(\\\"hello\\\");}\" > main.cpp && gcc-concepts -std=c++1z -v main.cpp\n\n# Everything works, clean up image\n\n# RUN rm -rfv \"${GCC_BUILDTREE_DIR}\" \"${GCC_SOURCES_DIR}\"\n\n# WORKDIR /\n"
}