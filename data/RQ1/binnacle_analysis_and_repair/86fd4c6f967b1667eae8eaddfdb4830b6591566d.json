{
  "startTime": 1674236845019,
  "endTime": 1674236845138,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rhscl/s2i-core-rhel7:1\n\n# RHSCL rh-nginx18 image.\n#\n# Volumes:\n#  * /var/opt/rh/rh-nginx18/log/nginx/ - Storage for logs\n\nEXPOSE 8080\nEXPOSE 8443\n\nENV NAME=nginx \\\n    NGINX_VERSION=1.8 \\\n    NGINX_SHORT_VER=18 \\\n    VERSION=0\n\nENV SUMMARY=\"Platform for running nginx $NGINX_VERSION or building nginx-based application\" \\\n    DESCRIPTION=\"Nginx is a web server and a reverse proxy server for HTTP, SMTP, POP3 and IMAP \\\nprotocols, with a strong focus on high concurrency, performance and low memory usage. The container \\\nimage provides a containerized packaging of the nginx $NGINX_VERSION daemon. The image can be used \\\nas a base image for other applications based on nginx $NGINX_VERSION web server. \\\nNginx server image can be extended using source-to-image tool.\"\n\nLABEL summary=\"${SUMMARY}\" \\\n      description=\"${DESCRIPTION}\" \\\n      io.k8s.description=\"${DESCRIPTION}\" \\\n      io.k8s.display-name=\"Nginx ${NGINX_VERSION}\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.expose-services=\"8443:https\" \\\n      io.openshift.tags=\"builder,${NAME},rh-${NAME}${NGINX_SHORT_VER}\" \\\n      com.redhat.component=\"rh-${NAME}${NGINX_SHORT_VER}-container\" \\\n      name=\"rhscl/${NAME}-${NGINX_SHORT_VER}-rhel7\" \\\n      version=\"${NGINX_VERSION}\" \\\n      maintainer=\"SoftwareCollections.org <sclorg@redhat.com>\" \\\n      help=\"For more information visit https://github.com/sclorg/${NAME}-container\" \\\n      usage=\"s2i build <SOURCE-REPOSITORY> rhscl/${NAME}-${NGINX_SHORT_VER}-rhel7:latest <APP-NAME>\"\n\nENV NGINX_CONFIGURATION_PATH=${APP_ROOT}/etc/nginx.d \\\n    NGINX_DEFAULT_CONF_PATH=${APP_ROOT}/etc/nginx.default.d \\\n    NGINX_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/nginx \\\n    NGINX_APP_ROOT=${APP_ROOT}\n\nRUN yum install -y yum-utils && \\\n    prepare-yum-repositories rhel-server-rhscl-7-rpms && \\\n    INSTALL_PKGS=\"nss_wrapper bind-utils gettext hostname rh-nginx18 rh-nginx18-nginx\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\n\n# Copy extra files to the image.\nCOPY ./root/ /\n\n# In order to drop the root user, we have to make some directories world\n# writeable as OpenShift default security model is to run the container under\n# random UID.\nRUN sed -i -f ${NGINX_APP_ROOT}/nginxconf.sed /etc/opt/rh/rh-nginx18/nginx/nginx.conf && \\\n    mkdir -p ${NGINX_APP_ROOT}/etc/nginx.d/ && \\\n    mkdir -p ${NGINX_APP_ROOT}/etc/nginx.default.d/ && \\\n    mkdir -p ${NGINX_APP_ROOT}/src/nginx-start/ && \\\n    mkdir -p ${NGINX_CONTAINER_SCRIPTS_PATH}/nginx-start && \\\n    chmod -R a+rwx ${NGINX_APP_ROOT}/etc && \\\n    chmod -R a+rwx /var/opt/rh/rh-nginx18 && \\\n    chmod -R a+rwx ${NGINX_CONTAINER_SCRIPTS_PATH}/nginx-start && \\\n    chown -R 1001:0 ${NGINX_APP_ROOT} && \\\n    chown -R 1001:0 /var/opt/rh/rh-nginx18 && \\\n    chown -R 1001:0 ${NGINX_CONTAINER_SCRIPTS_PATH}/nginx-start && \\\n    rpm-file-permissions\n\nUSER 1001\n\n# Not using VOLUME statement since it's not working in OpenShift Online:\n# https://github.com/sclorg/httpd-container/issues/30\n# VOLUME [\"/opt/rh/rh-nginx18/root/usr/share/nginx/html\"]\n# VOLUME [\"/var/opt/rh/rh-nginx18/log/nginx/\"]\n\nENV BASH_ENV=${NGINX_APP_ROOT}/etc/scl_enable \\\n    ENV=${NGINX_APP_ROOT}/etc/scl_enable \\\n    PROMPT_COMMAND=\". ${NGINX_APP_ROOT}/etc/scl_enable\"\n\nCMD $STI_SCRIPTS_PATH/usage\n"
}