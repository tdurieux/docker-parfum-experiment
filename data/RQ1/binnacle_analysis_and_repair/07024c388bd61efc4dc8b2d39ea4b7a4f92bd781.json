{
  "startTime": 1674241216279,
  "endTime": 1674241216655,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 21,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 21,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Due to nVidia not officially supporting CUDA 9.0 in Ubuntu 18.04\n# CUDA 9.0 is manually installed from the Ubuntu 16.04 repositories\n# If in the future Nvidia releases CUDA 9.0 on Ubuntu 18.04, you can skip this part\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg2 curl && \\\n        curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub | apt-key add - && \\\n        echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/cuda.list && \\\n        echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list && rm -rf /var/lib/apt/lists/*;\n\nENV CUDA_VERSION 9.0.176\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nENV NVIDIA_REQUIRE_CUDA \"cuda>=9.0\"\n\nENV NCCL_VERSION 2.2.12\nENV CUDNN_VERSION 7.1.4.18\nENV CUDA_PKG_VERSION 9-0=$CUDA_VERSION-1\n\nENV ELF_FOLDER /go-elf\nENV MINICONDA_INSTALL_SCRIPT_NAME Miniconda3.sh\n\n# nvidia-docker 1.0\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nLABEL com.nvidia.cuda.version=\"${CUDA_VERSION}\"\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-cudart-$CUDA_PKG_VERSION && \\\n        ln -s cuda-9.0 /usr/local/cuda && rm -rf /var/lib/apt/lists/*;\n\n\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\necho \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\n# install CUDA libs\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-libraries-$CUDA_PKG_VERSION \\\n        cuda-cublas-9-0=9.0.176.3-1 \\\n        libnccl2=$NCCL_VERSION-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libcudnn7=$CUDNN_VERSION-1+cuda9.0 && \\\n        rm -rf /var/lib/apt/lists/*\n\n# CUDA Has been fully installed, now install the dependencies for ELF\n\nRUN mkdir -p ${ELF_FOLDER}\n\nRUN apt update -y && apt install --no-install-recommends -y cmake git libboost-all-dev libzmq3-dev && rm -rf /var/lib/apt/lists/*;\n\nADD https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh ${ELF_FOLDER}/${MINICONDA_INSTALL_SCRIPT_NAME}\nRUN chmod +x ${ELF_FOLDER}/${MINICONDA_INSTALL_SCRIPT_NAME}\nRUN ${ELF_FOLDER}/${MINICONDA_INSTALL_SCRIPT_NAME} -b\nENV PATH=\"${PATH}:/root/miniconda3/bin\"\nRUN conda install -c pytorch pytorch-nightly cuda90 numpy zeromq pyzmq\n\nRUN mkdir -p ${ELF_FOLDER}/ELF\nADD . ${ELF_FOLDER}/ELF\nWORKDIR ${ELF_FOLDER}/ELF\n\nRUN git submodule sync && git submodule update --init --recursive\n\n# Use the Conda environment to compile ELF\nRUN bash -c \"source activate base && make -j4\"\n\n# Install the pretrained model\nADD https://github.com/pytorch/ELF/releases/download/pretrained-go-19x19-v0/pretrained-go-19x19-v0.bin ${ELF_FOLDER}/ELF\n\n# Set up the interactive environment\nCMD bash\n"
}