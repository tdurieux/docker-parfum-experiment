{
  "startTime": 1674239263609,
  "endTime": 1674239264266,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 177,
        "lineEnd": 203,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for Magento CE\n#\nFROM ubuntu:16.04\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n\n\n# ========\n# ENV vars\n# ========\n\n# apache httpd\nENV HTTPD_VERSION \"2.4.25\"\nENV HTTPD_DOWNLOAD_URL \"https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.gz\"\nENV HTTPD_SHA1 \"377c62dc6b25c9378221111dec87c28f8fe6ac69\"\nENV HTTPD_SOURCE \"/usr/src/httpd\"\nENV HTTPD_HOME \"/usr/local/httpd\"\nENV HTTPD_CONF_DIR \"$HTTPD_HOME/conf\"\nENV HTTPD_CONF_FILE \"$HTTPD_CONF_DIR/httpd.conf\"\nENV HTTPD_LOG_DIR=\"/var/log/httpd\"\nENV PATH \"$HTTPD_HOME/bin\":$PATH\n\n# php\n### see http://devdocs.magento.com/guides/v2.1/install-gde/prereq/php-ubuntu.html#php-support\nENV PHP_VERSION \"7.0.16\"\nENV PHP_DOWNLOAD_URL \"https://secure.php.net/get/php-$PHP_VERSION.tar.gz/from/this/mirror\"\nENV PHP_SHA256 \"bc6709dc7612957d0533c09c9c8a9c2e7c4fd9d64e697707bb1b39670eab61d4\"\nENV PHP_SOURCE \"/usr/src/php\"\nENV PHP_HOME \"/usr/local/php\"\nENV PHP_CONF_DIR \"$PHP_HOME/etc\"\nENV PHP_CONF_DIR_SCAN \"$PHP_CONF_DIR/conf.d\"\nENV PATH \"$PHP_HOME/bin\":$PATH\n\n# mariadb\nENV MARIADB_DATA_DIR=\"/var/lib/mysql\"\nENV MARIADB_LOG_DIR=\"/var/log/mysql\"\nENV MARIADB_DATA_DIR_TEMP=\"/tmp/mariadb\"\n\n# redis\nENV REDIS_VERSION \"3.2.8\"\nENV REDIS_DOWNLOAD_URL \"http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz\"\nENV REDIS_SHA1 \"6780d1abb66f33a97aad0edbe020403d0a15b67f\"\nENV REDIS_SOURCE \"/usr/src/redis\"\nENV REDIS_HOME \"/usr/local/redis\"\nENV PATH \"$REDIS_HOME/bin\":$PATH\n\n# magento ce\nENV MAGENTO_VERSION \"2.1.5\"\nENV MAGENTO_PACKAGE \"Magento-CE-$MAGENTO_VERSION.tar.gz\"\nENV MAGENTO_SOURCE \"/usr/src/magento\"\nENV MAGENTO_HOME \"/var/www/magento\"\nENV PATH \"$MAGENTO_HOME/bin\":$PATH\n\n# phpMyAdmin\nENV PHPMYADMIN_VERSION \"4.6.6\"\nENV PHPMYADMIN_DOWNLOAD_URL \"https://files.phpmyadmin.net/phpMyAdmin/$PHPMYADMIN_VERSION/phpMyAdmin-$PHPMYADMIN_VERSION-all-languages.tar.gz\"\nENV PHPMYADMIN_SHA256 \"54086600558613b31c4daddf4ae58fbc1c252a2b8e3e6fae12f851f78677d72e\"\nENV PHPMYADMIN_SOURCE \"/usr/src/phpmyadmin\"\nENV PHPMYADMIN_HOME \"/var/www/phpmyadmin\"\n\nENV DOCKER_BUILD_HOME \"/dockerbuild\"\n\n\n# ====================\n# Download and Install\n# 1. tools\n# 2. apache httpd\n# 3. php\n# 4. mariadb\n# 5. redis\n# 6. magento ce\n# 7. phpmyadmin\n# 8. cron\n# ====================\n\nWORKDIR $DOCKER_BUILD_HOME\nCOPY $MAGENTO_PACKAGE $DOCKER_BUILD_HOME/\nRUN set -ex \\\n\t# ------------------\n\t# 1. tools\n\t# ------------------\n\t&& tools=\" \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\twget \\\n\t\" \\\n\t&& apt-get update \\\n\t&& apt-get install -y -V --no-install-recommends $tools \\\n\t&& rm -r /var/lib/apt/lists/* \\\n\n\t# ---------------\n\t# 2. apache httpd\n\t# ---------------\n\t&& mkdir -p $HTTPD_SOURCE \\\n\t&& mkdir -p $HTTPD_HOME \\\n\t## runtime and buildtime deps\n\t&& httpdBuildtimeDeps=\" \\\n\t\tlibpcre++-dev \\\n\t\tlibssl-dev \\\n\t\" \\\n\t&& httpdRuntimeDeps=\"\\\n\t\tlibapr1 \\\n\t\tlibaprutil1 \\\n\t\tlibaprutil1-ldap \\\n\t\tlibapr1-dev \\\n\t\tlibaprutil1-dev \\\n\t\" \\\n\t&& apt-get update \\\n\t&& apt-get install -y -V --no-install-recommends $httpdBuildtimeDeps $httpdRuntimeDeps \\\t\t\n\t&& rm -r /var/lib/apt/lists/* \\\n\t## download, validate, extract\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& wget -O httpd.tar.gz \"$HTTPD_DOWNLOAD_URL\" --no-check-certificate \\\n\t&& echo \"$HTTPD_SHA1 *httpd.tar.gz\" | sha1sum -c - \\\n\t&& tar -xf httpd.tar.gz -C $HTTPD_SOURCE --strip-components=1 \\\n\t## configure, make, install\n\t&& cd $HTTPD_SOURCE \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--prefix=$HTTPD_HOME \\\n\t\t### using prefork for PHP. see http://php.net/manual/en/install.unix.apache2.php\n\t\t--with-mpm=prefork \\\n\t\t--enable-mods-shared=reallyall \\\n\t\t--enable-ssl \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t## clean up\n\t&& rm -rf $HTTPD_SOURCE \\\n\t\t$HTTPD_HOME/man \\\n\t\t$HTTPD_HOME/manual \\\n\t&& rm $DOCKER_BUILD_HOME/httpd.tar.gz \\\n\t&& apt-get purge -y -V -o APT::AutoRemove::RecommendsImportant=false --auto-remove $httpdBuildtimeDeps \\\n\n\t# ------\n\t# 3. php\n\t# ------\n\t### see http://php.net/manual/en/install.unix.apache2.php\n\t### see http://linuxfromscratch.org/blfs/view/svn/general/php.html\n\t&& mkdir -p $PHP_SOURCE \\\n\t&& mkdir -p $PHP_HOME \\\n\t## buildtime deps\n\t&& phpBuildtimeDeps=\"\\\n\t\tlibbz2-dev \\\n\t\tlibgmp-dev \\\n        libicu-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibpng12-dev \\\n\t\tlibldap2-dev \\\n\t\tlibmcrypt-dev \\\n\t\tlibmhash-dev \\\n\t\tlibssl-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\" \\\n\t## runtime deps\n\t&& phpRuntimeDeps=\" \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibjpeg8 \\\n        libpng12-0 \\\n\t\tlibmcrypt4 \\\n\t\tlibxml2 \\\n\t\tlibxslt1.1 \\\n\t\" \\\n\t&& apt-get update \\\n\t&& apt-get install -y -V --no-install-recommends $phpBuildtimeDeps $phpRuntimeDeps \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n\t&& ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n\t&& ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n\t## download, validate, extract\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& wget -O php.tar.gz \"$PHP_DOWNLOAD_URL\" --no-check-certificate \\\n\t&& echo \"$PHP_SHA256  *php.tar.gz\" | sha256sum -c - \\\n\t&& tar -xf php.tar.gz -C $PHP_SOURCE --strip-components=1 \\\n\t## configure, make, install\n\t&& cd $PHP_SOURCE \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--prefix=$PHP_HOME \\\n\t\t### we don't need CGI version of PHP here\n\t\t--disable-cgi \\\n\t\t--enable-bcmath \\\n\t\t--enable-intl \\\n\t\t--enable-mbstring \\\n\t\t--enable-soap \\\n\t\t--enable-zip \\\n\t\t--with-apxs2=$HTTPD_HOME/bin/apxs \\\n\t\t--with-bz2 \\\n\t\t--with-config-file-path=$PHP_CONF_DIR \\\n\t\t--with-config-file-scan-dir=$PHP_CONF_DIR_SCAN \\\n\t\t--with-curl \\\n\t\t--with-gd \\\n\t\t--with-jpeg-dir \\\n\t\t--with-png-dir \\\n\t\t--with-gmp \\\n\t\t--with-ldap \\\n\t\t--with-mcrypt \\\n\t\t--with-mhash \\\n\t\t### for phpmyadmin\n\t\t--with-mysqli=mysqlnd \\\n\t\t--with-openssl \\\n\t\t### see http://php.net/manual/en/mysqlinfo.library.choosing.php\n\t\t--with-pdo-mysql=mysqlnd \\\n\t\t--with-xsl \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t## clean up\n\t&& rm -rf $PHP_SOURCE \\\n\t&& rm -rf $PHP_HOME/php/man \\\n\t&& rm $DOCKER_BUILD_HOME/php.tar.gz \\\n\t&& apt-get purge -y -V -o APT::AutoRemove::RecommendsImportant=false --auto-remove $phpBuildtimeDeps \\\n\n\t# ----------\n\t# 4. mariadb\n\t# ----------\n\t&& apt-get update \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install mariadb-server -y -V --no-install-recommends \\\n\t&& rm -r /var/lib/apt/lists/* \\\n\n\t# --------\n\t# 5. redis\n\t# --------\n\t&& mkdir -p $REDIS_SOURCE \\\n\t&& mkdir -p $REDIS_HOME \\\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& wget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" --no-check-certificate \\\n\t&& echo \"$REDIS_SHA1 *redis.tar.gz\" | sha1sum -c - \\\n\t&& tar -xf redis.tar.gz -C $REDIS_SOURCE --strip-components=1 \\\n\t&& cd $REDIS_SOURCE \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make PREFIX=$REDIS_HOME install \\\n\t&& rm -rf $REDIS_SOURCE \\\n\t&& rm $DOCKER_BUILD_HOME/redis.tar.gz \\\n\n\t# ------------\t\n\t# 6. magento ce\n\t# ------------\n\t&& mkdir -p $MAGENTO_SOURCE \\\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& tar -xf $MAGENTO_PACKAGE -C $MAGENTO_SOURCE \\\n\t&& rm $DOCKER_BUILD_HOME/$MAGENTO_PACKAGE \\\n\n\t# -------------\n\t# 7. phpmyadmin\n\t# -------------\n\t&& mkdir -p $PHPMYADMIN_SOURCE \\\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& wget -O phpmyadmin.tar.gz \"$PHPMYADMIN_DOWNLOAD_URL\" --no-check-certificate \\\n\t&& echo \"$PHPMYADMIN_SHA256  *phpmyadmin.tar.gz\" | sha256sum -c - \\\n\t&& tar -xf phpmyadmin.tar.gz -C $PHPMYADMIN_SOURCE --strip-components=1 \\\n\t&& rm $DOCKER_BUILD_HOME/phpmyadmin.tar.gz \\\n\n\t# -------\n\t# 8. cron\n\t# -------\n\t&& apt-get update \\\n\t&& apt-get install cron -y -V --no-install-recommends \\\n\t&& rm -r /var/lib/apt/lists/* \\\n\n\t# ----------\n\t# ~. clean up\n\t# ----------\n\t&& apt-get purge -y -V -o APT::AutoRemove::RecommendsImportant=false --auto-remove $tools \\\n\t&& apt-get autoremove -y\n\n\n# ==============\n# Configurations\n# ==============\n\n# httpd confs\nCOPY httpd.conf $HTTPD_CONF_DIR/\nCOPY httpd-modules.conf $HTTPD_CONF_DIR/\nCOPY httpd-php.conf $HTTPD_CONF_DIR/\nCOPY httpd-magento.conf $HTTPD_CONF_DIR/\nCOPY httpd-phpmyadmin.conf $HTTPD_CONF_DIR/\n# php confs\nCOPY php.ini $PHP_CONF_DIR/\nCOPY php-log.ini $PHP_CONF_DIR_SCAN/\nCOPY php-opcache.ini $PHP_CONF_DIR_SCAN/\n# phpmyadmin config\nCOPY phpmyadmin-config.inc.php $PHPMYADMIN_SOURCE/config.inc.php\nRUN set -ex \\\n\t&& echo 'Include conf/httpd-php.conf' >> $HTTPD_CONF_FILE \\\n\t&& test ! -d /var/lib/php/sessions && mkdir -p /var/lib/php/sessions \\\n\t&& chown www-data:www-data /var/lib/php/sessions\n\n\n# =====================================\n# Azure Web App on Linux configurations\n# =====================================\n# /home is a shared directory among multiple web app instances\n# /home/site/wwwroot for Magento site\n# /home/phpmyadmin for phpMyAdmin site\n# /home/data for native MariaDB data dir\n# /home/LogFiles/httpd for httpd/php/magento/phpmyadmin logs\n# /home/LogFiles/mariadb for mariadb logs\n\nENV AZURE_SITE_ROOT \"/home/site/wwwroot\"\nENV PHPMYADMIN_HOME_AZURE \"/home/phpmyadmin\"\nENV MARIADB_DATA_DIR_AZURE \"/home/data\"\nENV HTTPD_LOG_DIR_AZURE \"/home/LogFiles/httpd\"\nENV MARIADB_LOG_DIR_AZURE \"/home/LogFiles/mariadb\"\n\n\n# =====\n# final\n# =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN set -ex \\\n\t&& chmod +x /usr/local/bin/entrypoint.sh \\\n\t&& test ! -d /var/www && mkdir -p /var/www \\\n\t&& echo '<html><head><meta http-equiv=\"refresh\" content=\"15\" /><title>Installing Magento ...</title></head><body>Installing Magento ... This could be done in minutes. But it will take longer if running on Azure Web App for Linux.</body></html>' > /var/www/index.html \\\n\t&& chown -R www-data:www-data /var/www \\\n\t&& chmod 664 /var/www/index.html\t\nEXPOSE 80\nENTRYPOINT [\"entrypoint.sh\"]\n\n"
}