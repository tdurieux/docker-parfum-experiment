{
  "startTime": 1674241175874,
  "endTime": 1674241176160,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.2-slim-stretch\n\nRUN apt-get update -y && apt-get install -y --no-install-recommends curl=7.52.1-5+deb9u9 make=4.1-9.1 \\\n                                                 software-properties-common=0.96.20.2-1 \\\n                                                 build-essential=12.3 \\\n                                                 git=1:2.11.0-3+deb9u4 \\\n                                                 wget \\\n                      && apt-get clean \\\n                      && rm -rf /var/lib/apt/lists/*\n\nENV HOME \"/root\"\nRUN mkdir -p ${HOME}\nRUN bash -c 'curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python'\nENV PATH=\"${HOME}/.poetry/bin:${PATH}\"\nRUN poetry --version\n\n# Dockerize - https://github.com/jwilder/dockerize\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n\n# Configure VEnv\nENV WORKON_HOME \"${HOME}/.virtualenvs\"\nRUN mkdir -p \"${WORKON_HOME}\"\nRUN pip install --no-cache-dir virtualenvwrapper\nRUN /bin/bash -c \"source virtualenvwrapper.sh && mkvirtualenv fastlane\"\nRUN chown -R root:root ${WORKON_HOME}\nENV VENV_PATH \"${WORKON_HOME}/fastlane/bin\"\nENV VIRTUAL_ENV ${WORKON_HOME}/fastlane\nENV PATH=\"${WORKON_HOME}/fastlane/bin:${PATH}\"\n# End VEnv Config\n\nRUN pip install --no-cache-dir honcho==1.0.1\nRUN mkdir -p /app\nWORKDIR /app\n\nCOPY pyproject.toml /app\nCOPY poetry.lock /app\nRUN poetry install --no-dev\nCOPY . /app\nRUN poetry install --no-dev\nRUN echo \"Verifying fastlane version...\" && poetry run fastlane version\n\nENV REDIS_URL \"redis://redis:6379/0\"\nENV DOCKER_HOSTS \"[{\\\"match\\\": \\\"\\\", \\\"hosts\\\": [\\\"localhost:2376\\\"], \\\"maxRunning\\\":2}]\"\nENV MONGODB_CONFIG \"{\\\"host\\\": \\\"mongodb://mongo:27017/fastlane\\\", \\\"db\\\": \\\"fastlane\\\", \\\"serverSelectionTimeoutMS\\\": 100, \\\"connect\\\": false}\"\nENV MONGODB_HOST=\"mongo:27017\"\nENV REDIS_HOST=\"redis:6379\"\n\n# If you don't want to wait use `CMD honcho --no-colour start`\nCMD dockerize -wait tcp://$MONGODB_HOST -wait tcp://$REDIS_HOST honcho --no-colour start\n"
}