{
  "startTime": 1674245151957,
  "endTime": 1674245152070,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "FROM mesosphere/mesos:1.3.0\n\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:openjdk-r/ppa\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install \\\n    curl \\\n    openjdk-8-jdk \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# Env setup\nENV HOME \"/root/\"\nENV LEIN_ROOT true\nENV MESOS_NATIVE_JAVA_LIBRARY /usr/lib/libmesos.so\nENV JAVA_CMD=/usr/lib/jvm/java-8-openjdk-amd64/bin/java\n\n# Generate SSL certificate\nRUN mkdir /opt/ssl\nRUN keytool -genkeypair -keystore /opt/ssl/cook.p12 -storetype PKCS12 -storepass cookstore -dname \"CN=cook, OU=Cook Developers, O=Two Sigma Investments, L=New York, ST=New York, C=US\" -keyalg RSA -keysize 2048\n\n# Lein setup\nRUN mkdir $HOME/bin\nENV PATH $PATH:$HOME/bin\nRUN curl -f -o $HOME/bin/lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein\nRUN chmod a+x $HOME/bin/lein\nRUN lein\n\n# Create and set the cook dir, copying project file\nCOPY project.clj /opt/cook/\nWORKDIR /opt/cook\n\n# Fetch dependencies\n## Only copy the project.clj so that we can use the cached layer\n## with fetched dependencies as long as project.clj isn't modified\nRUN lein deps\n\n# Datomic setup\nCOPY datomic /opt/cook/datomic\nRUN unzip -uo /opt/cook/datomic/datomic-free-0.9.5394.zip\n\n# Copy the whole scheduler into the container\nCOPY . /opt/cook/\nRUN lein uberjar\nRUN cp \"target/cook-$(lein print :version | tr -d '\"').jar\" datomic-free-0.9.5394/lib/cook-$(lein print :version | tr -d '\"').jar\n\n# Run cook\nEXPOSE \\\n    4334 \\\n    4335 \\\n    4336 \\\n    12321 \\\n    12322\nENTRYPOINT [\"/opt/cook/docker/run-cook.sh\"]\nCMD [\"config.edn\"]\n"
}