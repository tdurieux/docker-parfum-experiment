{
  "startTime": 1674235682948,
  "endTime": 1674235683290,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER Julius Loman <lomo@kyberia.net>\n\nARG INSTALL_SOURCE=\"http://netcool.install:8000\"\nARG INSTALL_FILE_WAS=\"WAS_V8.5.5.9_FOR_JSM_FOR_LINUX_ML.zip\"\nARG INSTALL_FILE_JAZZ=\"JAZZ_FOR_SM_1.1.3.0_FOR_LNX.zip\"\nARG INSTALL_FILE_WEBGUI=\"OMNIbus-v8.1-WebGUI.linux64.zip\"\nARG INSTALL_FILE_WEBGUI_FP=\"OMNIbus-v8.1.0-WebGUI-FP9-IM-Extensions-linux64-UpdatePack.zip\"\nARG INSTALL_FILE_ITNM=\"ITNP_IP_LIN.zip\"\nARG INSTALL_FILE_ITNM_FP=\"4.2.0-TIV-ITNMIP-Linux-FP0002.zip\"\nARG INSTALL_TMP=/tmp/install\nARG INSTALL_OBJECTSERVER_PRIMARY_HOST=\"omnibus\"\nARG INSTALL_OBJECTSERVER_PRIMARY_PORT=4100\nARG INSTALL_OBJECTSERVER_PRIMARY_NAME=\"NCOMS\"\nARG INSTALL_OBJECTSERVER_USER=\"root\"\nARG INSTALL_OBJECTSERVER_PASSWORD=\"\"\n\nENV OBJECTSERVER_PRIMARY_HOST=omnibus OBJECTSERVER_PRIMARY_PORT=4100 OBJECTSERVER_PRIMARY_NAME=NCOMS OBJECTSERVER_USER=root OBJECTSERVER_PASSWORD=\"\" SMADMIN_USERNAME=\"smadmin\" SMADMIN_PASSWORD=\"smadmin\"\n\n# Add dependencies\nRUN curl -f -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    yum --setopt=tsflags=nodocs -y localinstall epel-release-latest-7.noarch.rpm && \\\n    rm epel-release-latest-7.noarch.rpm && \\\n    yum --setopt=tsflags=nodocs -y update && \\\n    yum --setopt=tsflags=nodocs -y install \\\n    tar \\\n    hostname \\\n    unzip \\\n    audit-libs \\\n    fontconfig \\\n    freetype \\\n    compat-libstdc++-33.i686 \\\n    glibc.i686 \\\n    gtk2 \\\n    libICE \\\n    libSM \\\n    libX11 \\\n    libXau \\\n    libXcursor \\\n    libXext \\\n    libXft \\\n    libXmu \\\n    libXp \\\n    libXpm \\\n    libXrender \\\n    libXt \\\n    libXtst \\\n    libstdc++.i686 \\\n    libgcc.i686 \\\n    libjpeg-turbo \\\n    libpng12 \\\n    motif \\\n    dejavu-fonts-common \\\n    dejavu-sans-fonts \\\n    expat \\\n    glibc \\\n    libgcc \\\n    libidn \\\n    libstdc++ \\\n    libuuid \\\n    libxcb \\\n    nss-softokn-freebl \\\n    pam \\\n    zlib \\\n    nss-softokn-freebl.i686 \\\n    xmlstarlet \\\n    compat-libstdc++-33 && \\\n    rm -rf /var/cache/yum/* && \\\n    yum clean all\n\nCOPY response_was_jazz_webgui.xml response_itnm.xml docker-entrypoint-functions.sh docker-entrypoint.sh $INSTALL_TMP/\n\nRUN mkdir -p /opt/IBM $INSTALL_TMP/{was,jazz,webgui,webgui-fp,itnm,itnm-fp} /docker-entrypoint.d /docker-init.d && \\\n    useradd -c \"Netcool user\" netcool && mkdir -p /db $INSTALL_TMP && \\\n    mv $INSTALL_TMP/docker-entrypoint* / && \\\n    chown -R netcool:netcool $INSTALL_TMP /opt/IBM /docker-entrypoint.d /docker-init.d /docker-entrypoint.sh /docker-entrypoint-functions.sh  && \\\n    chmod +x /docker-entrypoint.sh /docker-entrypoint-functions.sh\n\nUSER netcool\n\nRUN cd /tmp/install && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_JAZZ\" && unzip -q -d \"$INSTALL_TMP/jazz\" \"$INSTALL_FILE_JAZZ\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_WAS\" && unzip -q -d \"$INSTALL_TMP/was\" \"$INSTALL_FILE_WAS\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI\" && unzip -q -d \"$INSTALL_TMP/webgui\" \"$INSTALL_FILE_WEBGUI\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_WEBGUI_FP\" && unzip -q -d \"$INSTALL_TMP/webgui-fp\" \"$INSTALL_FILE_WEBGUI_FP\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM\" && unzip -q -d \"$INSTALL_TMP/itnm\" \"$INSTALL_FILE_ITNM\" && \\\n    curl -f -O \"$INSTALL_SOURCE/$INSTALL_FILE_ITNM_FP\" && unzip -q -d \"$INSTALL_TMP/itnm-fp\" \"$INSTALL_FILE_ITNM_FP\" && \\\n    rm -rf \"$INSTALL_FILE_WAS\" \"$INSTALL_FILE_JAZZ\" \"$INSTALL_FILE_WEBGUI\" \"$INSTALL_FILE_WEBGUI_FP\" \"$INSTALL_FILE_ITNM\" \"$INSTALL_FILE_ITNM_FP\"\n\nRUN  . /docker-entrypoint-functions.sh && \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_HOST\" ] && OBJECTSERVER_PRIMARY_HOST=\"$INSTALL_OBJECTSERVER_PRIMARY_HOST\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_PORT\" ] && export OBJECTSERVER_PRIMARY_PORT=\"$INSTALL_OBJECTSERVER_PRIMARY_PORT\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PRIMARY_NAME\" ] && export OBJECTSERVER_PRIMARY_NAME=\"$INSTALL_OBJECTSERVER_PRIMARY_NAME\";};  \\\n    { [ -n \"$INSTALL_OBJECTSERVER_USER\" ] && export OBJECTSERVER_USER=\"$INSTALL_OBJECTSERVER_USER\";}; \\\n    { [ -n \"$INSTALL_OBJECTSERVER_PASSWORD\" ] && export OBJECTSERVER_PASSWORD=\"$INSTALL_OBJECTSERVER_PASSWORD\";}; \\\n    mv \"$INSTALL_TMP/response_was_jazz_webgui.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" && \\\n    cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" && ./userinstc --launcher.ini user-silent-install.ini  -acceptLicense && \\\n    backupNCWDataSources && stopJazzSM && configureNCWDataSources && startJazzSM && \\\n    mv \"$INSTALL_TMP/response_itnm.xml\" \"$INSTALL_TMP/jazz/im.linux.x86_64/install.xml\" && \\\n    cd \"$INSTALL_TMP/jazz/im.linux.x86_64\" && ./userinstc --launcher.ini user-silent-install.ini  -acceptLicense && \\\n    stopJazzSM && restoreNCWDataSources && \\\n    rm -rf /tmp/install\n\nENTRYPOINT /docker-entrypoint.sh\n"
}