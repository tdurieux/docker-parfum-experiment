{
  "startTime": 1674234002333,
  "endTime": 1674234002586,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 126
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvcr.io/nvidia/tensorflow:18.05-py3\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        git \\\n        python3-tk \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir numpy==1.11.3 \\\n  scipy \\\n  networkx==1.10 \\\n  scikit-learn \\\n  beautifulsoup4 \\\n  matplotlib \\\n  lxml\n\n\n# Installs Java.\nENV JAVA_VER 8\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nRUN echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main' >> /etc/apt/sources.list && \\\n    echo 'deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main' >> /etc/apt/sources.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886 && \\\n    apt-get update && \\\n    echo oracle-java${JAVA_VER}-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \\\n    apt-get install -y --force-yes --no-install-recommends oracle-java${JAVA_VER}-installer oracle-java${JAVA_VER}-set-default && \\\n    apt-get clean && \\\n    rm -rf /var/cache/oracle-jdk${JAVA_VER}-installer && rm -rf /var/lib/apt/lists/*;\nRUN update-java-alternatives -s java-8-oracle\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-8-oracle\" >> ~/.bashrc\n\n# Installs Ant.\nENV ANT_VERSION=1.10.2\nENV ANT_HOME=/opt/ant\n# change to tmp folder\nWORKDIR /tmp\n# Download and extract apache ant to opt folder\nRUN wget --no-check-certificate --no-cookies http://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && wget --no-check-certificate --no-cookies http://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz.md5 \\\n    && echo \"$(cat apache-ant-${ANT_VERSION}-bin.tar.gz.md5) apache-ant-${ANT_VERSION}-bin.tar.gz\" | md5sum -c \\\n    && tar -zvxf apache-ant-${ANT_VERSION}-bin.tar.gz -C /opt/ \\\n    && ln -s /opt/apache-ant-${ANT_VERSION} /opt/ant \\\n    && rm -f apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && rm -f apache-ant-${ANT_VERSION}-bin.tar.gz.md5\n# add executables to path\nRUN update-alternatives --install \"/usr/bin/ant\" \"ant\" \"/opt/ant/bin/ant\" 1 && \\\n    update-alternatives --set \"ant\" \"/opt/ant/bin/ant\"\n\nWORKDIR /workspace\n\n\n# rsync -avzh ~/Documents/GraphEmbedding yba@qilin.cs.ucla.edu:/home/yba/\n# docker build .\n# docker tag 89c8df0682d5 yba_graphembedding\n# nvidia-docker run -v /home/yba/GraphEmbedding:/workspace --env CUDA_VISIBLE_DEVICES=_____ -it yba_graphembedding bash\n# nvidia-docker run -v /home/yba/GraphEmbedding:/workspace -it yba_graphembedding bash\n# cd model/Siamese && python main.py\n# pip install seaborn\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
}