{
  "startTime": 1674245539822,
  "endTime": 1674245540377,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 85,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 52,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 37,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 39,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 21,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 37,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 21,
        "columnEnd": 46
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 11,
        "columnEnd": 107
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 88
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 136,
        "columnEnd": 191
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 68,
        "columnStart": 11,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 34,
        "columnEnd": 190
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 11,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 11,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 11,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER \"The CentOS Project\" <admin@jiobxn.com>\nARG LATEST=\"0\"\n\nRUN \\cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN yum clean all; yum -y update; yum -y install net-tools iproute bash-completion vim wget autoreconf automake make gcc-c++ iptables cronie geoip-devel libxml2-devel libxslt-devel gd-devel; rm -rf /var/cache/yum yum clean all\n\nRUN cd /usr/local/src \\\n        && pcre_down=\"https://sourceforge.net/projects/pcre/files/pcre/\" && pcre_v=$( curl -f -s $pcre_down | grep \"tr title\" | awk -F\\\" 'NR==1{print $2}') && wget -c \"$pcre_down$pcre_v/pcre-$pcre_v.tar.gz\" \\\n        && wget -c https://www.openssl.org/source/$( curl -f -s https://www.openssl.org/source/ | grep tar.gz | awk -F\\\" 'NR==2{print $2}') \\\n        && wget -c https://zlib.net/$( curl -f -s https://zlib.net/ | grep \"\\.tar.gz\" | awk -F\\\" 'NR==1{print $2}') \\\n        && wget -c $( curl -f -s https://www.cpan.org/src/ | grep wget | awk -F\\\" '{print $2}') \\\n        && wget -c https://github.com$( curl -f -s https://github.com/acassen/keepalived/releases | grep tar.gz | awk -F\\\" 'NR==1{print $2}') \\\n        && nginx_v=$( curl -f -s https://nginx.org/ | awk -F'download.html\">nginx-' '{print $2}' | grep -v ^$ | awk -F'<' 'NR==1{print $1}') && wget -c https://nginx.org/download/nginx-$nginx_v.tar.gz\n\nRUN cd /usr/local/src \\\n        && tar zxf nginx-*.tar.gz \\\n        && tar zxf pcre-*.tar.gz \\\n        && tar zxf openssl-*.tar.gz \\\n        && tar zxf zlib-*.tar.gz \\\n        && tar zxf perl-*.tar.gz \\\n        && tar zxf v*.tar.gz \\\n        && \\rm *.tar.gz \\\n        && mv pcre-* pcre \\\n        && mv zlib-* zlib \\\n        && mv openssl-* openssl \\\n        && cd /usr/local/src/zlib \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j8 && make install \\\n        && cd /usr/local/src/perl-* \\\n        && ./Configure -des && make -j8 && make install \\\n        && cd /usr/local/src/openssl \\\n        && ./config --prefix=/usr/local zlib threads shared && make -j8 && make install \\\n        && echo \"/usr/local/lib64\" >> /etc/ld.so.conf && ldconfig \\\n        && cd /usr/local/src/keepalived-* \\\n        && ./build_setup \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --sysconf=/etc && make -j8 && make install \\\n        && cd /usr/local/src/nginx-* \\\n        && sed -i 's/\\.openssl\\/include/include/' auto/lib/openssl/conf \\\n        && sed -i 's/\\.openssl\\/lib\\///' auto/lib/openssl/conf \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx \\\n           --with-pcre=/usr/local/src/pcre \\\n           --with-zlib=/usr/local/src/zlib \\\n           --with-openssl=/usr/local/src/openssl \\\n           --with-threads \\\n           --with-file-aio \\\n           --with-http_ssl_module \\\n           --with-http_v2_module \\\n           --with-http_realip_module \\\n           --with-http_addition_module \\\n           --with-http_xslt_module \\\n           --with-http_image_filter_module \\\n           --with-http_geoip_module \\\n           --with-http_sub_module \\\n           --with-http_dav_module \\\n           --with-http_flv_module \\\n           --with-http_mp4_module \\\n           --with-http_gunzip_module \\\n           --with-http_gzip_static_module \\\n           --with-http_auth_request_module \\\n           --with-http_random_index_module \\\n           --with-http_secure_link_module \\\n           --with-http_degradation_module \\\n           --with-http_slice_module \\\n           --with-http_stub_status_module \\\n           --with-http_perl_module \\\n           --with-mail \\\n           --with-mail_ssl_module \\\n           --with-stream \\\n           --with-stream_ssl_module \\\n        && make -j8 && make install \\\n        && rm -rf /usr/local/src/* \\\n        && ln -s /usr/local/nginx/sbin/* /usr/local/bin/ && rm nginx-*.tar.gz\n\nVOLUME /usr/local/nginx/html /key /usr/local/nginx/logs\n\nCOPY nginx.sh /nginx.sh\nRUN chmod +x /nginx.sh\n\nENTRYPOINT [\"/nginx.sh\"]\n\nEXPOSE 80 443\n\nCMD [\"nginx\"]\n\n# docker build -t nginx .\n# docker run -d --restart always -p 80:80 -p 443:443 -v /docker/www:/www -v /docker/nginx:/key -e DOMAIN_PROXY=\"fqhub.com%backend_https=y\" -e PROXY_SERVER=\"jiobxn.com,www.jiobxn.com|jiobxn.wordpress.com%backend_https=y,alias=/down|/www\" --hostname nginx --name test-nginx nginx\n# docker run -it --rm nginx --help\n"
}