{
  "startTime": 1674244278677,
  "endTime": 1674244278972,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Splunk\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG SPLUNK_BASE_IMAGE=base-debian-10\n\n#\n# Download and unpack Splunk Enterprise\n#\nFROM ${SPLUNK_BASE_IMAGE}:latest as package\nARG SPLUNK_BUILD_URL\nCOPY splunk/common-files/make-minimal-exclude.py /tmp\nRUN python /tmp/make-minimal-exclude.py ${SPLUNK_BUILD_URL} > /tmp/splunk-minimal-exclude.list\nRUN wget -qO /tmp/splunk.tgz ${SPLUNK_BUILD_URL}\nRUN wget -qO /tmp/splunk.tgz.md5 ${SPLUNK_BUILD_URL}.md5\nRUN test $(md5sum /tmp/splunk.tgz | sed 's,\\([a-z0-9]*\\).*,\\1,') = $(cat /tmp/splunk.tgz.md5 | sed 's,MD5.*=.\\([a-z0-9]*\\).*,\\1,')\nRUN mkdir -p /minimal/splunk/var /extras/splunk/var\nRUN tar -C /minimal/splunk --strip 1 --exclude-from=/tmp/splunk-minimal-exclude.list -zxf /tmp/splunk.tgz && rm /tmp/splunk.tgz\nRUN tar -C /extras/splunk --strip 1 --wildcards --files-from=/tmp/splunk-minimal-exclude.list -zxf /tmp/splunk.tgz -zxf && rm /tmp/splunk.tgz\nRUN mv /minimal/splunk/etc /minimal/splunk-etc\nRUN mv /extras/splunk/etc /extras/splunk-etc\nRUN mkdir -p /minimal/splunk/etc /minimal/splunk/share/splunk/search_mrsparkle/modules.new\nCOPY splunk/common-files/apps /extras/splunk-etc/apps/\n\n\n#\n# Minimal Splunk base image with many files excluded, intended for internal and experimental use\n#\nFROM ${SPLUNK_BASE_IMAGE}:latest as minimal\nLABEL maintainer=\"support@splunk.com\"\nENV SPLUNK_HOME=/opt/splunk \\\n    SPLUNK_GROUP=splunk \\\n    SPLUNK_USER=splunk\nENV TMPSPLUNKDIR=${SPLUNK_HOME}/tmp\nENV TMPETCDIR=${TMPSPLUNKDIR}/etc\n\n# Currently kubernetes only accepts UID and not USER field to\n# start a container as a particular user. So we create Splunk\n# user with pre-determined UID.\nARG UID=41812\nARG GID=41812\n\n# Simple script used to populate/upgrade splunk/etc directory\nCOPY [ \"splunk/common-files/updateetc.sh\", \"/sbin/\" ]\n\n# Setup users and groups\nRUN groupadd -r -g ${GID} ${SPLUNK_GROUP} \\\n    && useradd -r -m -u ${UID} -g ${GID} ${SPLUNK_USER} \\\n    && chmod 755 /sbin/updateetc.sh\n\nCOPY --from=package --chown=splunk:splunk /minimal /opt\n\nUSER ${SPLUNK_USER}\nWORKDIR ${SPLUNK_HOME}\nEXPOSE 8000/tcp 8089/tcp\n\n\n#\n# Bare Splunk Enterprise Image without Ansible (BYO entrypoint)\n#\nFROM minimal as bare\nCOPY --from=package --chown=splunk:splunk /extras /opt\nEXPOSE 8000 8065 8088 8089 8191 9887 9997\nVOLUME [ \"/opt/splunk/etc\", \"/opt/splunk/var\" ]\n\n\n\n#\n# Full Splunk Enterprise Image with Ansible\n#\nFROM bare\n\nARG SPLUNK_DEFAULTS_URL\n\nENV SPLUNK_ROLE=splunk_standalone \\\n    SPLUNK_DEFAULTS_URL=${SPLUNK_DEFAULTS_URL} \\\n    SPLUNK_ANSIBLE_HOME=/opt/ansible \\\n    ANSIBLE_USER=ansible \\\n    ANSIBLE_GROUP=ansible \\\n    CONTAINER_ARTIFACT_DIR=/opt/container_artifact\n\nUSER root\n\nCOPY [ \"splunk/common-files/entrypoint.sh\", \"splunk/common-files/createdefaults.py\", \"splunk/common-files/checkstate.sh\", \"/sbin/\" ]\nCOPY splunk-ansible ${SPLUNK_ANSIBLE_HOME}\n\n# Set sudo rights\nRUN sed -i -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers \\\n    && sudo echo -e '\\nansible ALL=(splunk)NOPASSWD:ALL' >> /etc/sudoers \\\n    # Create the ansible user/group\n    && groupadd -r ${ANSIBLE_GROUP} \\\n    && useradd -r -m -g ${ANSIBLE_GROUP} ${ANSIBLE_USER} \\\n    && usermod -aG sudo ${ANSIBLE_USER} \\\n    # Container Artifact Directory is a place for all artifacts and logs that are generated by the provisioning process. The directory is owned by the user \"ansible\".\n    && mkdir ${CONTAINER_ARTIFACT_DIR} \\\n    && chown -R ${ANSIBLE_USER}:${ANSIBLE_GROUP} $CONTAINER_ARTIFACT_DIR \\\n    && chmod -R 555 ${SPLUNK_ANSIBLE_HOME} \\\n    && chmod -R 777 ${CONTAINER_ARTIFACT_DIR} \\\n    && chmod 755 /sbin/entrypoint.sh /sbin/createdefaults.py /sbin/checkstate.sh\n\nUSER ${ANSIBLE_USER}\nHEALTHCHECK --interval=30s --timeout=30s --start-period=3m --retries=5 CMD /sbin/checkstate.sh || exit 1\nENTRYPOINT [ \"/sbin/entrypoint.sh\" ]\nCMD [ \"start-service\" ]\n"
}