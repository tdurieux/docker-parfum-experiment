{
  "startTime": 1674641739791,
  "endTime": 1674641739898,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.0.0-sdk AS build\n\nARG BUILDCONFIG=RELEASE\n\n# Copy project files to avoid restoring packages if they haven't changed\nCOPY *.csproj ./build/\nWORKDIR /build/\nRUN dotnet restore\n\nCOPY . .\nRUN dotnet publish -c $BUILDCONFIG -o out\n\n# build runtime image\nFROM microsoft/dotnet:2.0.0-runtime\nWORKDIR /app\nCOPY --from=build /build/out ./\n\n# Install Cron\nRUN apt-get update -qq && apt-get -y --no-install-recommends install cron -qq --force-yes && rm -rf /var/lib/apt/lists/*;\n\n# Add export environment variable script and schedule\nCOPY *.sh ./\nCOPY schedule /etc/cron.d/schedule\nRUN sed -i 's/\\r//' export_env.sh \\\n    && sed -i 's/\\r//' run_app.sh \\\n    && sed -i 's/\\r//' /etc/cron.d/schedule \\\n    && chmod +x export_env.sh run_app.sh \\\n    && chmod 0644 /etc/cron.d/schedule\n\n# Create log file\nRUN touch /var/log/cron.log\nRUN chmod 0666 /var/log/cron.log\n\n# Volume required for tail command\nVOLUME /var/log\n\n# Run Cron\nCMD /app/export_env.sh && /usr/sbin/cron && tail -f /var/log/cron.log"
}