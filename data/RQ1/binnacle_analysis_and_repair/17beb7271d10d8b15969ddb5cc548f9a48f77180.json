{
  "startTime": 1674252256062,
  "endTime": 1674252256268,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=10.15.0\nFROM node:${NODE_VERSION}-alpine as builder\n\nENV PATH /root/.yarn/bin:$PATH\nARG ethereum_network=rinkeby\nENV ETHEREUM_NETWORK=$ethereum_network\nARG build_environment=dev\nENV BUILD_ENVIRONMENT=$build_environment\nRUN apk --no-cache add \\\n    bash \\\n    binutils \\\n    eudev-dev \\\n    g++ \\\n    git \\\n    libusb-dev \\\n    linux-headers \\\n    make \\\n    python\n\n\n# begin create caching layer\nCOPY package.json /augur/package.json\nADD https://nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-headers.tar.gz /augur/node-v${NODE_VERSION}-headers.tar.gz\nWORKDIR /augur\nRUN git init \\\n  && yarn add require-from-string \\\n  && yarn \\\n  && rm -rf .git \\\n  && rm package.json \\\n  && rm yarn.lock\n# end create caching layer\n\nCOPY . /augur\nCOPY support/local-run.sh /augur/local-run.sh\n\n# workaround a bug when running inside an alpine docker image\nRUN rm -f /augur/yarn.lock\n\nRUN set -ex; \\\n    if [ \"$BUILD_ENVIRONMENT\" = \"dev\" ]; then \\\n        ETHEREUM_NETWORK=$ethereum_network yarn build --dev --augur-hosted --disableMainnet; \\\n    elif [ \"$BUILD_ENVIRONMENT\" = \"dev-optimized\" ]; then \\\n        ETHEREUM_NETWORK=$ethereum_network yarn build --production --augur-hosted --disableMainnet; \\\n    elif [ \"$BUILD_ENVIRONMENT\" = \"latest\" ]; then \\\n        ETHEREUM_NETWORK=$ethereum_network yarn build --production --augur-hosted; \\\n    fi;\n\n# need arg to pass in for augur-ui (production) and augur-dev (dev)\nRUN git rev-parse HEAD > /augur/build/git-hash.txt \\\n  && git log -1 > /augur/build/git-commit.txt \\\n  && chmod 755 /augur/local-run.sh \\\n  && cd /augur\n\nRUN rm -rf node_modules && \\\n    npm config set loglevel silly && \\\n    npm config set tarball /augur/node-v${NODE_VERSION}-headers.tar.gz && \\\n    yarn install --production && yarn cache clean;\n\nFROM node:10.15.0-alpine\n\nRUN apk --no-cache add \\\n    bash \\\n    binutils \\\n    nginx \\\n    && echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# nginx logs\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log\n\nWORKDIR /augur\n\nCOPY --from=builder /augur /augur\n\n# Vhost to serve files\nCOPY support/nginx-default.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\n\nCMD [\"bash\", \"/augur/local-run.sh\"]\n"
}