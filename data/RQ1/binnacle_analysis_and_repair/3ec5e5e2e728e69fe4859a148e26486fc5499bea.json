{
  "startTime": 1674235684729,
  "endTime": 1674235684970,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 161
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bayesimpact/pandas-base:latest\n\nRUN mkdir /work\nWORKDIR /work\n\nRUN apt-get update -qqy && \\\n  apt-get install --no-install-recommends unzip python-pdfminer python-dev locales -qqy && \\\n  # Install locale fr_FR so that we can format dates for French users.\n  sed -i -e \"s/# fr_FR.UTF/fr_FR.UTF/\" /etc/locale.gen && locale-gen && \\\n  rm /bin/sh && ln -s /bin/bash /bin/sh && rm -rf /var/lib/apt/lists/*;\n\n# Requirements for python code (outside of notebooks). Keep them sorted.\nRUN pip install --no-cache-dir --upgrade \\\n  airtable \\\n  'airtablemock>=0.0.9' \\\n  'algoliasearch>=2.0' \\\n  awscli \\\n  coverage \\\n  csvkit \\\n  google-api-python-client \\\n  httplib2 \\\n  js2py \\\n  'mongomock>=3.16' \\\n  'mypy>=0.650' \\\n\n  'mypy-protobuf==1.9' \\\n  nbformat \\\n  nose \\\n  nose-exclude \\\n  nose-watch \\\n  'pandas>=0.24.1' \\\n  polib \\\n  protobuf \\\n  pycodestyle \\\n  pylint \\\n  pylint-doc-spacing \\\n  pylint-quotes \\\n  pymongo \\\n  python-emploi-store \\\n  requests \\\n  requests_mock \\\n  runipy \\\n  sas7bdat \\\n  scrapy \\\n  sentry-sdk \\\n  sklearn \\\n  termcolor \\\n  tqdm \\\n  typing_extensions \\\n  xmltodict\n\nARG PROTOBUF_VERSION=3.7.0\n\n# Install Protobuf compiler.\nRUN \\\n  curl -f --silent -L \"https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\" -o protoc.zip && \\\n  unzip -qq protoc.zip && rm protoc.zip && rm readme.txt && mv bin/protoc /usr/local/bin && mkdir /usr/local/share/proto && mv include/google /usr/local/share/proto\n\nENV PYTHONPATH=/work:/usr/lib/python3/dist-packages/\n\nCMD [\"make\", \"all\"]\n\nCOPY data_analysis/ /work/bob_emploi/data_analysis/\nCOPY data_analysis/.coveragerc data_analysis/entrypoint.sh data_analysis/lint_and_test.sh data_analysis/Makefile* .pylintrc /work/\nCOPY .pycodestyle /work/setup.cfg\nCOPY frontend/api/*.proto /work/bob_emploi/frontend/api/\nCOPY frontend/server/ /work/bob_emploi/frontend/server/\nCOPY frontend/release/scheduled-tasks /work/bob_emploi/frontend/release/scheduled-tasks\n# TODO(pascal): Clean up our typing stubs for mongomock package once it gets typed.\nRUN [ ! -f /usr/local/lib/python3.7/site-packages/mongomock/__init__.pyi ]\nRUN ! ls /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/*/mongomock/__init__.pyi 2> /dev/null\nCOPY data_analysis/vendor/mongomock/ /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/3/mongomock/\n# TODO(pascal): Clean up our typing stubs for requests_mock package once it gets typed.\nRUN [ ! -f /usr/local/lib/python3.7/site-packages/requests_mock/__init__.pyi ]\nRUN ! ls /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/*/requests_mock/__init__.pyi 2> /dev/null\nCOPY frontend/server/test/vendor/requests_mock/ /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/2and3/requests_mock/\n# TODO(pascal): Clean up our typing stubs for parsel and scrapy packages once they get typed.\nRUN [ ! -f /usr/local/lib/python3.7/site-packages/parsel/__init__.pyi ]\nRUN [ ! -f /usr/local/lib/python3.7/site-packages/scrapy/__init__.pyi ]\nRUN ! ls /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/*/parsel/__init__.pyi 2> /dev/null\nRUN ! ls /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/*/scrapy/__init__.pyi 2> /dev/null\nCOPY data_analysis/vendor/parsel/ /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/2and3/parsel/\nCOPY data_analysis/vendor/scrapy/ /usr/local/lib/python3.7/site-packages/mypy/typeshed/third_party/2and3/scrapy/\n\nRUN /work/bob_emploi/data_analysis/vendor/patch.sh\n\nARG SKIP_TEST=\nRUN test -n \"$SKIP_TEST\" && echo \"Skipping tests\" || TEST_ENV=1 ./entrypoint.sh ./lint_and_test.sh --with-coverage --cover-inclusive --cover-package=. --cover-html --cover-xml\n"
}