{
  "startTime": 1674243375736,
  "endTime": 1674243375843,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 28,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# Replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Set debconf to run non-interactively\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install base dependencies\nRUN apt-get update && apt-get install -y -q --no-install-recommends \\\n        apt-transport-https \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        libssl-dev \\\n        python \\\n        rsync \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install nvm with node and npm\n# http://stackoverflow.com/questions/25899912/install-nvm-in-docker\nENV NVM_DIR /usr/local/nvm\nRUN mkdir -p $NVM_DIR\nENV NODE_VERSION 10\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \\\n    && source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\nENV PATH      $NVM_BIN:$PATH\n\n# Go ahead and install nodemon for convenience while developing\nRUN source $NVM_DIR/nvm.sh\n\n###########################\n# App-specific stuff\n\n# mongo uses kerberos\nRUN apt-get update && apt-get install --no-install-recommends -y libkrb5-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install NPM dependencies. Do this first so that if package.json hasn't\n# changed we don't have to re-run npm install during `docker build`\nCOPY package.json /app/package.json\nWORKDIR /app\nRUN source $NVM_DIR/nvm.sh; npm install && npm cache clean --force;\n# Copy the app\nCOPY [\"newrelic.js\", \".eslintrc\", \".eslintignore\", \".babelrc\", \"knexfile.js\", \"index.js\", \"/app/\"]\nCOPY [\"app.js\", \"/app/\"]\nCOPY lib /app/lib/\nCOPY test /app/test/\nCOPY api /app/api/\nCOPY config /app/config/\nCOPY migrations /app/migrations/\nCOPY seeds /app/seeds/\n\n#############################\n# develop helper script and entrypoint\n#\nRUN source $NVM_DIR/nvm.sh\nADD .build_scripts/entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}