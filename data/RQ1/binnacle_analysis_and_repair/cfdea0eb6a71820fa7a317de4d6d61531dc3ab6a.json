{
  "startTime": 1674234667214,
  "endTime": 1674234667250,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use this dockerfile for develpment and testing of the backend api\n# To build: docker build -f Dockerfile-development .\n# To run: docker run --env-file .env -p 8080:8080 <image_id from previous step>\n# Open the browser and point it to: http://locahost:8080\n\n# Use the ubuntu:bionic in order to run the tests\nFROM ubuntu:bionic AS build\n\n# Update packages\nRUN apt-get update && apt-get install --no-install-recommends -y openjdk-8-jdk maven && rm -rf /var/lib/apt/lists/*;\n\n# Set the correct Java version\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n\n# Copy POM and source into the /tmp for building.\nCOPY pom.xml /tmp/\nCOPY src /tmp/src/\n\n# Set Working Directory\nWORKDIR /tmp/\nRUN mvn test package\n\n# Start with a base image containing Java runtime\nFROM openjdk:8-jdk\n\n# Add a volume pointing to /tmp\nVOLUME /tmp\n\n# Make port 8080 available to the world outside this container\nEXPOSE 8080\n\n# Copy package from build container into the final container\nCOPY --from=build /tmp/target/spring-dal-0.0.1-SNAPSHOT.jar spring-dal.jar\n\n# Run the jar file\nENTRYPOINT [\"java\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"/spring-dal.jar\"]"
}