{
  "startTime": 1674236084229,
  "endTime": 1674236084574,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Dockerfile for Tensorflow on ppc64le\n\nFROM ppc64le/ubuntu:16.04\nMAINTAINER \"Sandip Giri <sgiri@us.ibm.com>\"\n\nCOPY patches patches/\n\n#Install required dependencies and build TensorFlow\nRUN apt-get update -y && \\\n        apt-get install --no-install-recommends -y openjdk-8-jdk wget autoconf libtool curl make unzip zip git g++ python-dev && \\\n        export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-ppc64el && \\\n        export JRE_HOME=${JAVA_HOME}/jre && \\\n        export PATH=${JAVA_HOME}/bin:$PATH && \\\n        wdir=`pwd` && \\\n        mkdir bazel && cd bazel && \\\n        wget https://github.com/bazelbuild/bazel/releases/download/0.5.4/bazel-0.5.4-dist.zip && \\\n        unzip bazel-0.5.4-dist.zip && \\\n\tchmod -R +w . && \\\n\tsed -i -e '20 a import com.google.errorprone.BaseErrorProneJavaCompiler;' ./src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/errorprone/ErrorPronePlugin.java && \\\n\tsed -i -e  '34d' ./src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/errorprone/ErrorPronePlugin.java && \\\n\tsed -i -e  '69d' ./src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/errorprone/ErrorPronePlugin.java && \\\n\tsed -i -e '68 a BaseErrorProneJavaCompiler.setupMessageBundle(context);'  ./src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/errorprone/ErrorPronePlugin.java && \\\n        ./compile.sh && \\\n        export PATH=$PATH:$wdir/bazel/output && \\\n        cd $wdir && \\\n\tapt-get install --no-install-recommends -y libcurl3-dev libfreetype6-dev libzmq3-dev pkg-config python-dev python-numpy python-pip swig \\\n\tlibatlas-dev libopenblas-dev python-virtualenv && \\\n\tpip install --no-cache-dir six numpy==1.12.0 portpicker scipy && \\\n        # pip install --upgrade pip && \\\n        touch /usr/include/stropts.h && \\\n        git clone --recurse-submodules https://github.com/tensorflow/tensorflow && \\\n        cd tensorflow && \\\n        git checkout v1.2.1 && \\\n        patch -p1 < $wdir/patches/cast_op_test_ppc64le.patch && \\\n        patch -p1 < $wdir/patches/denormal_test_ppc.patch && \\\n        patch -p1 < $wdir/patches/larger-tolerence-in-linalg_grad_test.patch && \\\n        patch -p1 < $wdir/patches/platform_profile_utils_cpu_utils_test_ppc64le.patch && \\\n        patch -p1 < $wdir/patches/sparse_matmul_op_ppc.patch && \\\n        patch -p1 < $wdir/patches/update-highwayhash.patch && \\\n\tpatch -p1 < $wdir/patches/mfcc_test.patch && \\\n        patch -p1 < $wdir/patches/Fix_for_summary_image_op_test_on_ppc64le.patch && \\\n        cp $wdir/patches/packetmath_altivec.patch  $wdir/tensorflow/third_party/eigen3/ && \\\n        patch -p1 < $wdir/patches/need_to_apply_packetmath_altivec.patch && \\\n        export CC_OPT_FLAGS=\"-mcpu=power8 -mtune=power8\" && \\\n        export GCC_HOST_COMPILER_PATH=/usr/bin/gcc && \\\n        export PYTHON_BIN_PATH=/usr/bin/python && \\\n        export USE_DEFAULT_PYTHON_LIB_PATH=1 && \\\n        export TF_NEED_GCP=1 && \\\n        export TF_NEED_HDFS=1 && \\\n        export TF_NEED_JEMALLOC=1 && \\\n        export TF_ENABLE_XLA=1 && \\\n        export TF_NEED_OPENCL=0 && \\\n        export TF_NEED_CUDA=0 && \\\n\texport TF_NEED_VERBS=0 && \\\n\texport TF_NEED_MKL=0 && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n        bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --local_resources=32000,8,1.0 && \\\n        bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg && \\\n        pip install --no-cache-dir /tmp/tensorflow_pkg/tensorflow-1.2.1* && \\\n\tapt-get purge -y wget autoconf libtool curl make unzip zip git libcurl3-dev libfreetype6-dev libzmq3-dev pkg-config libatlas-dev libopenblas-dev && \\\n        apt-get -y autoremove && rm -rf /var/lib/apt/lists/*;\n\n\t# To execute all test cases please run the below command\n\t# $ bazel test --config=opt  -k --jobs 1 //tensorflow/... \n\nCMD [\"/bin/bash\"]\t\t\n"
}