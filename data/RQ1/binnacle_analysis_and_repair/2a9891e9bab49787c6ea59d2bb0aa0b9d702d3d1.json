{
  "startTime": 1674240536696,
  "endTime": 1674240536898,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.4.0-gpu\n\nLABEL maintainer=\"Marc Ru√üwurm <marc.russwurm@tum.de>\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    git \\\n    python-tk && rm -rf /var/lib/apt/lists/*;\n\n\n## Python Packages\n#        psycopg2 \\\n#        configobj \\\nRUN pip --no-cache-dir install \\\n        matplotlib \\\n        jupyter \\\n        pandas \\\n        numpy \\\n        configparser \\\n        shapely \\\n        geopandas\n\n## Install GDAL for evaluate.py -> adapted from https://hub.docker.com/r/ecarrara/python-gdal/~/dockerfile/\nENV GDAL_VERSION=2.2.3\nENV GDAL_VERSION_PYTHON=2.2.3\n\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    wget \\\n    libcurl4-openssl-dev \\\n    build-essential \\\n    libpq-dev \\\n    ogdi-bin \\\n    libogdi3.2-dev \\\n    libjasper-runtime \\\n    libjasper-dev \\\n    libjasper1 \\\n    libgeos-c1v5 \\\n    libproj-dev \\\n    libpoppler-dev \\\n    libsqlite3-dev \\\n    libspatialite-dev && rm -rf /var/lib/apt/lists/*;\n#    python \\\n#    python-pip \\\n#    python-dev \\\n#    python-numpy-dev\n\nRUN wget https://download.osgeo.org/gdal/$GDAL_VERSION/gdal-${GDAL_VERSION}.tar.gz -O /tmp/gdal-${GDAL_VERSION}.tar.gz && \\\n    tar -x -f /tmp/gdal-${GDAL_VERSION}.tar.gz -C /tmp && rm /tmp/gdal-${GDAL_VERSION}.tar.gz\n\nRUN cp -r /tmp/gdal-2.2.3/data /usr/local/share/gdal/\nENV GDAL_DATA /usr/local/share/gdal\n\nRUN cd /tmp/gdal-${GDAL_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --with-python \\\n        --with-geos \\\n        --with-geotiff \\\n        --with-jpeg \\\n        --with-png \\\n        --with-expat \\\n        --with-libkml \\\n        --with-openjpeg \\\n        --with-pg \\\n        --with-curl \\\n        --with-spatialite && \\\n    make && make install\n\nRUN rm /tmp/gdal-${GDAL_VERSION} -rf && rm /tmp/gdal-${GDAL_VERSION}.tar.gz\nRUN pip install --no-cache-dir GDAL==${GDAL_VERSION_PYTHON} \\\n        rasterio\n\n# enable jupyter widgets\nRUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\n\n# create directory to mount data\nENV datadir /data\nRUN mkdir data\n\nENV modeldir /model\nRUN mkdir /model\n\nENV modelzoo /MTLCC/modelzoo\n\nRUN mkdir MTLCC\nCOPY ./ /MTLCC/\n\nWORKDIR \"/MTLCC\"\n\nCMD [\"/bin/bash\"]\n"
}