{
  "startTime": 1674240937067,
  "endTime": 1674240937195,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for an image with the currently checked out version of zipline installed. To build:\n#\n#    docker build -t alpacamarkets/alpaca-zipline .\n#\n# To run the container:\n#\n#    docker run -v /path/to/your/notebooks:/projects -v ~/.zipline:/root/.zipline -p 8888:8888/tcp --name zipline -it quantopian/zipline\n#\n# To access Jupyter when running docker locally (you may need to add NAT rules):\n#\n#    https://127.0.0.1:8888\n#\n# You can also run an algo using the docker exec command.  For example:\n#\n#    docker exec -it zipline zipline run -f /projects/my_algo.py --start 2015-1-1 --end 2016-1-1 /projects/result.pickle\n#\nFROM python:3.5\n\n#\n# set up environment\n#\nENV TINI_VERSION v0.10.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\nENV PROJECT_DIR=/projects \\\n    NOTEBOOK_PORT=8888 \\\n    SSL_CERT_PEM=/root/.jupyter/jupyter.pem \\\n    SSL_CERT_KEY=/root/.jupyter/jupyter.key \\\n    PW_HASH=\"u'sha1:31cb67870a35:1a2321318481f00b0efdf3d1f71af523d3ffc505'\" \\\n    CONFIG_PATH=/root/.jupyter/jupyter_notebook_config.py\n\n#\n# install TA-Lib and other prerequisites\n#\n\nRUN mkdir ${PROJECT_DIR} \\\n    && apt-get -y update \\\n    && apt-get -y --no-install-recommends install libfreetype6-dev libpng-dev libopenblas-dev liblapack-dev gfortran \\\n    && curl -f -L https://downloads.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz | tar xvz && rm -rf /var/lib/apt/lists/*;\n\n#\n# build and install zipline from source.  install TA-Lib after to ensure\n# numpy is available.\n#\n\nWORKDIR /ta-lib\n\nRUN pip install --no-cache-dir 'numpy>=1.11.1,<2.0.0' \\\n  && pip install --no-cache-dir 'scipy>=0.17.1,<1.0.0' \\\n  && pip install --no-cache-dir 'pandas>=0.18.1,<1.0.0' \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n  && make \\\n  && make install \\\n  && pip install --no-cache-dir TA-Lib \\\n  && pip install --no-cache-dir matplotlib \\\n  && pip install --no-cache-dir jupyter\n\nRUN pip install --no-cache-dir git+https://github.com/alpacahq/zipline@98e860b55c9fc4a8a825fe6c0f558b0fb2866bf8\nRUN pip install --no-cache-dir alpaca-trade-api==0.10.0\n\nEXPOSE ${NOTEBOOK_PORT}\n\nADD ./extension.py /root/.zipline/extension.py\n\n#\n# start the jupyter server\n#\n\nWORKDIR ${PROJECT_DIR}\nADD ./start-jupyter.sh /\nCMD /start-jupyter.sh\n"
}