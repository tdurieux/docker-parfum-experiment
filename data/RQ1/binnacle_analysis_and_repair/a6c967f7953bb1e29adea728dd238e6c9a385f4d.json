{
  "startTime": 1674243270155,
  "endTime": 1674243270285,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 6,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 6,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:9.2-devel-ubuntu18.04\nARG cpu_image=0\nENV CUDNN_VERSION 7.4.1.5\nSHELL [\"/usr/bin/env\", \"bash\", \"-euxvc\"]\nRUN apt-get update && apt-get install -y --no-install-recommends\\\n            libcudnn7=$CUDNN_VERSION-1+cuda9.2 \\\n            libcudnn7-dev=$CUDNN_VERSION-1+cuda9.2 && \\\n        apt-mark hold libcudnn7 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        wget git unzip python3-dev cmake ninja-build libz-dev libssl-dev libboost-dev libglew-dev libtiff-dev python3-venv libjpeg-turbo8-dev \\\n        openssh-client libopenblas-dev; \\\n        rm -rf /var/lib/apt/lists/*\n\n# Python env\nADD requirements.txt /pix2face/requirements.txt\nENV CPU_ONLY=${cpu_image}\nRUN python3 -m venv /pix2face/venv; \\\n    # activate doesn't like u flag\n    set +u; \\\n    source /pix2face/venv/bin/activate; \\\n    pip install --no-cache-dir --upgrade pip; \\\n    pip install --no-cache-dir -r /pix2face/requirements.txt; \\\n    if [ $CPU_ONLY -eq 0 ]; then \\\n      pip install --no-cache-dir torch; \\\n    else \\\n      pip install --no-cache-dir https://download.pytorch.org/whl/cpu/torch-1.0.0-cp36-cp36m-linux_x86_64.whl; \\\n    fi; \\\n    pip install --no-cache-dir torchvision\n\nENV GOSU_VERSION 1.10\nRUN wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\";  \\\n    chmod u+s /usr/bin/gosu; \\\n    chmod +x /usr/bin/gosu\n\nCOPY entrypoint.bsh /entrypoint.bsh\nRUN gosu root chmod 755 /entrypoint.bsh\nENTRYPOINT [\"/entrypoint.bsh\"]\nCMD bash\n"
}