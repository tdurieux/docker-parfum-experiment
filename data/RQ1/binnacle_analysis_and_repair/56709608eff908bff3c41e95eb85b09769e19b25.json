{
  "startTime": 1674248334957,
  "endTime": 1674248335159,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nENV DEBIAN_FRONTEND noninteractive\n\n# install prereqs\nRUN apt-get -qq update && \\\n    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && \\\n    apt-get install --no-install-recommends -y sudo git curl python-pip python-dev libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libyaml-dev libssl-dev libsasl2-dev libldap2-dev && rm -rf /var/lib/apt/lists/*;\n\n# install pipenv\nRUN pip install --no-cache-dir -U pipenv\n\n# install node\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g bower clean-css@3 && npm cache clean --force;\n\n# clean up\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# create wiki user\nRUN useradd -ms /bin/bash wiki && gpasswd -a wiki sudo\n\n# copy the cloned repo recursively\nCOPY ./ /home/wiki/realms-wiki/\nRUN chown -R wiki:wiki /home/wiki && \\\n    echo \"wiki:wiki\" | chpasswd && \\\n    echo \"wiki    ALL=(ALL:ALL) NOPASSWD: ALL\" | tee -a /etc/sudoers\n\nUSER wiki\n\nWORKDIR /home/wiki/realms-wiki/\n\nENV WORKERS=3\nENV GEVENT_RESOLVER=ares\n\nENV REALMS_ENV=docker\nENV REALMS_WIKI_PATH=/home/wiki/data/repo\nENV REALMS_DB_URI='sqlite:////home/wiki/data/wiki.db'\nENV PIPENV_VENV_IN_PROJECT=1\n\nRUN pipenv install --two --dev && \\\n    bower --config.interactive=false install && \\\n    mkdir /home/wiki/data\n\nRUN pipenv run python setup.py install\n\nVOLUME /home/wiki/data\n\nEXPOSE 5000\n\nRUN /home/wiki/realms-wiki/.venv/bin/realms-wiki create_db && \\\n    echo '#!/bin/bash \\n\\\n/home/wiki/realms-wiki/.venv/bin/realms-wiki $@ \\n' >> /tmp/realms-wiki && \\\n    sudo mv /tmp/realms-wiki /usr/local/bin && \\\n    sudo chmod +x /usr/local/bin/realms-wiki\n\nCMD . /home/wiki/realms-wiki/.venv/bin/activate && \\\n    gunicorn \\\n        --name realms-wiki \\\n        --access-logfile - \\\n        --error-logfile - \\\n        --worker-class gevent \\\n        --workers ${WORKERS} \\\n        --bind 0.0.0.0:5000 \\\n        --chdir /home/wiki/realms-wiki \\\n        'realms:create_app()'\n"
}