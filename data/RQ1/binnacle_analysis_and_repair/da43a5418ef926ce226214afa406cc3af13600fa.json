{
  "startTime": 1674236245359,
  "endTime": 1674236245876,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV TZ=Europe/Prague\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\twget \\\n\tgit \\\n\tpython \\\n\tpython-dev \\\n\tpython-nose \\\n\tpython-pip \\\n\tlibboost-filesystem-dev \\\n    libboost-program-options-dev \\\n    libboost-python-dev \\\n    libboost-regex-dev \\\n    libboost-system-dev \\\n    libboost-thread-dev \\\n    libicu-dev \\\n    libxml2 \\\n    libxml2-dev \\\n    libfreetype6 \\\n    libfreetype6-dev \\\n    libjpeg-dev \\\n    libpng-dev \\\n    libproj-dev \\\n    libtiff-dev \\\n    libcairo2 \\\n    libcairo2-dev \\\n    python-cairo \\\n    python-cairo-dev \\\n    libcairomm-1.0-1v5 \\\n    libcairomm-1.0-dev \\\n    ttf-unifont \\\n    ttf-dejavu \\\n    ttf-dejavu-core \\\n    ttf-dejavu-extra \\\n    git build-essential \\\n    libgdal-dev \\\n    python-gdal \\\n    postgresql-10 \\\n    postgresql-server-dev-10 \\\n    postgresql-contrib-10 \\\n    postgis \\\n    libsqlite3-dev \\\n    osm2pgsql \\\n    npm \\\n    uthash-dev \\\n    sqlite3 \\\n    spatialite-bin \\\n    gdal-bin \\\n    fonts-liberation && rm -rf /var/lib/apt/lists/*;\n\nRUN pip2 install --no-cache-dir --upgrade pip\nRUN pip2 install --no-cache-dir psycopg2 pysqlite\n\nRUN cd /tmp && \\\n\tgit clone https://github.com/mapnik/mapnik mapnik-2.3.x -b 2.3.x --depth 10 && \\\n\tcd mapnik-2.3.x && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake && \\\n\tmake install && \\\n\tldconfig && \\\n\trm -rf /tmp/mapnik-2.3.x\n\n\nRUN npm install --global millstone carto && npm cache clean --force;\n\nRUN wget -O - https://m.m.i24.cc/osmconvert.c | cc -x c - -lz -O3 -o /usr/local/bin/osmconvert\n\nRUN cd /tmp && \\\n\tgit clone https://github.com/bigr/o5mreader && \\\n\tcd o5mreader && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake && \\\n\tmake install && \\\n\tldconfig && \\\n\trm -rf /tmp/o5mreader\n\n\nRUN cd /tmp && \\\n\tgit clone https://github.com/bigr/o5m2sqlite && \\\n\tcd o5m2sqlite && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake && \\\n\tmake install && \\\n\tldconfig && \\\n\trm -rf /tmp/o5msqlite\n\nRUN cp /usr/share/fonts/truetype/liberation/* /usr/local/lib/mapnik/fonts\n\nRUN cd /root && \\\n\tgit clone https://github.com/bigr/map1.git && \\\n\tchmod -R 777 /root/map1\n\n\nRUN /etc/init.d/postgresql start && \\\n\tcd /root/map1 && \\\n\tgit pull && \\\n\tchmod -R 777 /root/map1 && \\\n\tsu postgres -c \"createdb -E UTF8 -O postgres gis_eu\" && \\\t\n\tsu postgres -c \"psql gis_eu -c \\\"CREATE EXTENSION postgis;\\\"\" && \\\n\tsu postgres -c \"psql gis_eu -c \\\"CREATE EXTENSION hstore;\\\"\" && \\\n\tsu postgres -c \"createdb -E UTF8 -O postgres gis_eu_1000\" && \\\n\tsu postgres -c \"psql gis_eu_1000 -c \\\"CREATE EXTENSION postgis;\\\"\" && \\\n\tsu postgres -c \"psql gis_eu_1000 -c \\\"CREATE EXTENSION hstore;\\\"\" && \\\n\tcd /root/map1 && \\\t \n\tsu postgres -c \"./get_data_pgis\"\n\nRUN\t/etc/init.d/postgresql start && \\\n\tcd /root/map1 && \\\n\tgit pull && \\\n\tcd /root/map1/vodak && \\\n\tsu postgres -c \"./vodak.py gis_eu > /tmp/vodak.sql\" && \\\n\tsu postgres -c \"psql -d gis_eu < vodak.sql\" && \\\n\tunlink /tmp/vodak.sql\n\nRUN\tcd /root/map1/stylesheets/general/prepare-db && \\\n\tcd /root/map1 && \\\n\tgit pull && \\\n\tsu postgres -c \"php ./get-sql.php | psql -d gis_eu\"\n\nCOPY srtm /root/map1/data/dem/\n\n\n"
}