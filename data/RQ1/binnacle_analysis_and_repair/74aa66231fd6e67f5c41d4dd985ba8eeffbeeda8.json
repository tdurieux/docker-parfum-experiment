{
  "startTime": 1674242716868,
  "endTime": 1674242716982,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build container for gmxapi/gmxapi:<tag>\n# Initially we will use a tmpi libgromacs and openmpi mpi4py\n\n# The default entry point for the resulting container is a jupyter notebook server, so\n# assuming you have port 8888 free locally, access the web interface by binding the 8888 ports\n# on host and container.\n#\n#    docker build -t gmxapi .\n#    docker run --rm -ti -p 8888:8888 gmxapi\n#\n# Then use the URL in the terminal output to access the web server in the docker container on\n# the local host. Documentation for the gmxapi Python module is accessible in the `docs` directory.\n# Click on the `docs` link and then `index.html`\n#\n# To build from a branch other than 'master,' pass a build arg. For example:\n#\n#    docker build --build-arg BRANCH=devel -t gmxapi .\n#\n# If the repository has been updated, but the Dockerfile has not, specify `--no-cache` to `docker build`.\n#\n# Tagged docker images are available through Docker Hub by pulling / running gmxapi/gmxapi:master\n# or gmxapi/gmxapi:devel\n#\n#    docker run --rm -ti gmxapi/gmxapi:devel\n#\n# Note that the `--rm` flag in the above commands means that the container you run from the image\n# will be temporary. If you want to keep changes that you make, refer to Docker documentation on\n# container naming, committing snapshots, and managing containers and disk space.\n#\n\nFROM gmxapi/gromacs-gmxapi:0.0.7\n\n# Allow build for an arbitrary branch or tag, but default to the tip of `master`\nARG BRANCH=master\n\nRUN conda install pytest tox cmake\n\n# At least one conda release does not leave tox executable...\n# However, tox doesn't seem to be helping us here...\n# RUN chmod a+x /opt/conda/bin/tox\n\n# Note default for the base image at this point is Python3\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir sphinx sphinx-rtd-theme mpi4py\n\nRUN pip install --no-cache-dir --upgrade setuptools --user\n\nRUN wget https://github.com/kassonlab/gmxapi/archive/$BRANCH.zip && \\\n    unzip $BRANCH.zip && \\\n    rm -rf /home/jovyan/gmxpy && \\\n    mv gmxapi-$BRANCH /home/jovyan/gmxpy && \\\n    rm $BRANCH.zip\n\nRUN (cd /home/jovyan/gmxpy && \\\n    mkdir build && \\\n    cd build && \\\n    gmxapi_DIR=/home/jovyan/install/gromacs cmake .. && \\\n    make install)\n\nRUN (cd /home/jovyan/gmxpy/build && \\\n    make docs && \\\n    mv docs /home/jovyan/)\n\n# Test with\n#    docker run --cpus 2 --rm -ti gmxapi/gmxapi bash -c \\\n#        \"cd gmxpy && mpiexec -n 2 python -m mpi4py -m pytest  --log-cli-level=DEBUG --pyargs gmx -s --verbose\"\n"
}