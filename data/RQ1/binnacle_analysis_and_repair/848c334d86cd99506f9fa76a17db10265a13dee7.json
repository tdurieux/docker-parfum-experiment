{
  "startTime": 1674235799201,
  "endTime": 1674235800183,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 8,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 8,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 8,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 8,
        "columnEnd": 228
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 8,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 8,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 8,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 8,
        "columnEnd": 150
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 8,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 8,
        "columnEnd": 172
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 8,
        "columnEnd": 178
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 8,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 85,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 8,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 85,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 8,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM alpine:3.8 as protoc_builder\nRUN apk add --no-cache build-base curl automake autoconf libtool git zlib-dev\n\nENV GRPC_VERSION=1.16.0 \\\n        GRPC_JAVA_VERSION=1.16.1 \\\n        GRPC_WEB_VERSION=1.0.0 \\\n        PROTOBUF_VERSION=3.6.1 \\\n        PROTOBUF_C_VERSION=1.3.1 \\\n        PROTOC_GEN_DOC_VERSION=1.1.0 \\\n        OUTDIR=/out\nRUN mkdir -p /protobuf && \\\n        curl -f -L https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf\nRUN git clone --depth 1 --recursive -b v${GRPC_VERSION} https://github.com/grpc/grpc.git /grpc && \\\n        rm -rf grpc/third_party/protobuf && \\\n        ln -s /protobuf /grpc/third_party/protobuf\nRUN mkdir -p /grpc-java && \\\n        curl -f -L https://github.com/grpc/grpc-java/archive/v${GRPC_JAVA_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-java\nRUN mkdir -p /grpc-web && \\\n        curl -f -L https://github.com/grpc/grpc-web/archive/${GRPC_WEB_VERSION}.tar.gz | tar xvz --strip-components=1 -C /grpc-web\nRUN mkdir -p /protobuf-c && \\\n        curl -f -L https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf-c\nRUN cd /protobuf && \\\n        autoreconf -f -i -Wall,no-obsolete && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-static=no && \\\n        make -j2 && make install\nRUN cd grpc && \\\n        make -j2 plugins\nRUN cd /grpc-java/compiler/src/java_plugin/cpp && \\\n        g++ \\\n        -I. -I/protobuf/src \\\n        *.cpp \\\n        -L/protobuf/src/.libs \\\n        -lprotoc -lprotobuf -lpthread --std=c++0x -s \\\n        -o protoc-gen-grpc-java\nRUN cd /protobuf-c && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n        make -j2\nRUN cd /protobuf && \\\n        make install DESTDIR=${OUTDIR}\nRUN cd /grpc && \\\n        make install-plugins prefix=${OUTDIR}/usr\nRUN cd /grpc-java/compiler/src/java_plugin/cpp && \\\n        install -c protoc-gen-grpc-java ${OUTDIR}/usr/bin/\nRUN cd /grpc-web/javascript/net/grpc/web && \\\n        make && \\\n        install protoc-gen-grpc-web ${OUTDIR}/usr/bin/\nRUN cd /protobuf-c && \\\n        make install DESTDIR=${OUTDIR}\nRUN find ${OUTDIR} -name \"*.a\" -delete -or -name \"*.la\" -delete\n\nRUN apk add --no-cache go\nENV GOPATH=/go \\\n        PATH=/go/bin/:$PATH\nRUN go get -u -v -ldflags '-w -s' \\\n        github.com/Masterminds/glide \\\n        github.com/golang/protobuf/protoc-gen-go \\\n        github.com/gogo/protobuf/protoc-gen-gofast \\\n        github.com/gogo/protobuf/protoc-gen-gogo \\\n        github.com/gogo/protobuf/protoc-gen-gogofast \\\n        github.com/gogo/protobuf/protoc-gen-gogofaster \\\n        github.com/gogo/protobuf/protoc-gen-gogoslick \\\n        github.com/twitchtv/twirp/protoc-gen-twirp \\\n        github.com/chrusty/protoc-gen-jsonschema \\\n        github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger \\\n        github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway \\\n        github.com/johanbrandhorst/protobuf/protoc-gen-gopherjs \\\n        github.com/ckaznocha/protoc-gen-lint \\\n        github.com/mwitkow/go-proto-validators/protoc-gen-govalidators \\\n        github.com/lyft/protoc-gen-validate \\\n        moul.io/protoc-gen-gotemplate \\\n        github.com/micro/protoc-gen-micro \\\n        && (cd ${GOPATH}/src/github.com/lyft/protoc-gen-validate && make build) \\\n        && install -c ${GOPATH}/bin/protoc-gen* ${OUTDIR}/usr/bin/\n\nRUN mkdir -p ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc && \\\n        curl -f -L https://github.com/pseudomuto/protoc-gen-doc/archive/v${PROTOC_GEN_DOC_VERSION}.tar.gz | tar xvz --strip 1 -C ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc\nRUN cd ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc && \\\n        make build && \\\n        install -c ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc/protoc-gen-doc ${OUTDIR}/usr/bin/\n\n\nFROM ubuntu:16.04 as swift_builder\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y build-essential make tar xz-utils bzip2 gzip sed \\\n        libz-dev unzip patchelf curl libedit-dev python2.7 python2.7-dev libxml2 \\\n        git libxml2-dev uuid-dev libssl-dev bash patch && rm -rf /var/lib/apt/lists/*;\nENV SWIFT_VERSION=4.2.1 \\\n        LLVM_VERSION=5.0.2\nRUN curl -f -L https://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz | tar --strip-components 1 -C /usr/local/ -xJv\nRUN curl -f -L https://swift.org/builds/swift-${SWIFT_VERSION}-release/ubuntu1604/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu16.04.tar.gz | tar --strip-components 1 -C / -xz\n\nENV SWIFT_PROTOBUF_VERSION=1.2.0\nRUN mkdir -p /swift-protobuf && \\\n        curl -f -L https://github.com/apple/swift-protobuf/archive/${SWIFT_PROTOBUF_VERSION}.tar.gz | tar --strip-components 1 -C /swift-protobuf -xz\nRUN apt-get install --no-install-recommends -y libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN cd /swift-protobuf && \\\n        swift build -c release\nRUN mkdir -p /protoc-gen-swift && \\\n        cp /swift-protobuf/.build/x86_64-unknown-linux/release/protoc-gen-swift /protoc-gen-swift/\nRUN cp /lib64/ld-linux-x86-64.so.2 \\\n        $(ldd /protoc-gen-swift/protoc-gen-swift | awk '{print $3}' | grep /lib | sort | uniq) \\\n        /protoc-gen-swift/\nRUN find /protoc-gen-swift/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-swift {} \\; && \\\n        for p in protoc-gen-swift; do \\\n        patchelf --set-interpreter /protoc-gen-swift/ld-linux-x86-64.so.2 /protoc-gen-swift/${p}; \\\n        done\n\nFROM ubuntu:16.04 as javalite_builder\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y bash patch curl patchelf && rm -rf /var/lib/apt/lists/*;\nENV PROTOC_GEN_JAVALITE_VERSION=3.0.0\nRUN mkdir -p /protoc-gen-javalite && \\\n        curl -f -L https://repo1.maven.org/maven2/com/google/protobuf/protoc-gen-javalite/${PROTOC_GEN_JAVALITE_VERSION}/protoc-gen-javalite-${PROTOC_GEN_JAVALITE_VERSION}-linux-x86_64.exe > /protoc-gen-javalite/protoc-gen-javalite && \\\n        chmod 755 /protoc-gen-javalite/protoc-gen-javalite\nRUN cp /lib64/ld-linux-x86-64.so.2 \\\n        $(ldd /protoc-gen-javalite/protoc-gen-javalite | awk '{print $3}' | grep /lib | sort | uniq) \\\n        /protoc-gen-javalite/\nRUN find /protoc-gen-javalite/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-javalite {} \\; && \\\n        for p in protoc-gen-javalite; do \\\n        patchelf --set-interpreter /protoc-gen-javalite/ld-linux-x86-64.so.2 --set-rpath /protoc-gen-javalite /protoc-gen-javalite/${p}; \\\n        done\n\n\nFROM rust:1.22.1 as rust_builder\nENV RUST_PROTOBUF_VERSION=1.4.3 \\\n        OUTDIR=/out\nRUN mkdir -p ${OUTDIR}\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y musl-tools && rm -rf /var/lib/apt/lists/*;\nRUN rustup target add x86_64-unknown-linux-musl\nRUN mkdir -p /rust-protobuf && \\\n        curl -f -L https://github.com/stepancheg/rust-protobuf/archive/v${RUST_PROTOBUF_VERSION}.tar.gz | tar xvz --strip 1 -C /rust-protobuf\nRUN cd /rust-protobuf/protobuf && \\\n        RUSTFLAGS='-C linker=musl-gcc' cargo build --target=x86_64-unknown-linux-musl --release\nRUN mkdir -p ${OUTDIR}/usr/bin && \\\n        strip /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust && \\\n        install -c /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust ${OUTDIR}/usr/bin/\n\n\nFROM znly/upx as packer\nCOPY --from=protoc_builder /out/ /out/\nRUN upx --lzma \\\n        /out/usr/bin/protoc \\\n        /out/usr/bin/grpc_* \\\n        /out/usr/bin/protoc-gen-*\n\nFROM alpine:3.7\nRUN apk add --no-cache libstdc++\nCOPY --from=packer /out/ /\nCOPY --from=rust_builder /out/ /\nCOPY --from=swift_builder /protoc-gen-swift /protoc-gen-swift\nRUN for p in protoc-gen-swift protoc-gen-swiftgrpc; do \\\n        ln -s /protoc-gen-swift/${p} /usr/bin/${p}; \\\n        done\nCOPY --from=javalite_builder /protoc-gen-javalite /protoc-gen-javalite\nRUN ln -s /protoc-gen-javalite/protoc-gen-javalite /usr/bin/protoc-gen-javalite\n\nRUN apk add --no-cache curl && \\\n        mkdir -p /protobuf/google/protobuf && \\\n        for f in any duration descriptor empty struct timestamp wrappers; do \\\n        curl -f -L -o /protobuf/google/protobuf/${f}.proto https://raw.githubusercontent.com/google/protobuf/master/src/google/protobuf/${f}.proto; \\\n        done && \\\n        mkdir -p /protobuf/google/api && \\\n        for f in annotations http; do \\\n        curl -f -L -o /protobuf/google/api/${f}.proto https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/master/third_party/googleapis/google/api/${f}.proto; \\\n        done && \\\n        mkdir -p /protobuf/github.com/gogo/protobuf/gogoproto && \\\n        curl -f -L -o /protobuf/github.com/gogo/protobuf/gogoproto/gogo.proto https://raw.githubusercontent.com/gogo/protobuf/master/gogoproto/gogo.proto && \\\n        mkdir -p /protobuf/github.com/mwitkow/go-proto-validators && \\\n        curl -f -L -o /protobuf/github.com/mwitkow/go-proto-validators/validator.proto https://raw.githubusercontent.com/mwitkow/go-proto-validators/master/validator.proto && \\\n        mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/gogoproto && \\\n        mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/validate && \\\n        curl -f -L -o /protobuf/github.com/lyft/protoc-gen-validate/gogoproto/gogo.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/gogoproto/gogo.proto && \\\n        curl -f -L -o /protobuf/github.com/lyft/protoc-gen-validate/validate/validate.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/validate/validate.proto && \\\n        apk del curl && \\\n        chmod a+x /usr/bin/protoc\n\nENTRYPOINT [\"/usr/bin/protoc\", \"-I/protobuf\"]\n"
}