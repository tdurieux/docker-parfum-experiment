{
  "startTime": 1674243039072,
  "endTime": 1674243039133,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.16.0-alpine AS build\n\nRUN apk add --no-cache git jq\n\nENV CI=true\n\n# First copy only package.json and yarn.lock to make the dependency fetching step optional.\nCOPY directory-ui/package.json \\\n    directory-ui/package-lock.json \\\n    /go/src/go.nlx.io/nlx/directory-ui/\n\nWORKDIR /go/src/go.nlx.io/nlx/directory-ui\nRUN npm ci --no-progress --color=false --quiet\n\n# Now copy the whole workdir for the build step.\nCOPY directory-ui /go/src/go.nlx.io/nlx/directory-ui\n\nRUN npm run build\n\n# Add file with version tag from git\nCOPY .git /go/src/go.nlx.io/nlx/directory-ui/.git\nRUN ash -c 'echo \"\\\"$(git describe --tags)\\\"\" | jq \"{tag: .}\" > /tmp/version.json'\n\n# Copy static docs to alpine-based nginx container.\nFROM nginx:alpine\n\n# Copy nginx configuration\nCOPY directory-ui/docker/default.conf /etc/nginx/conf.d/default.conf\nCOPY directory-ui/docker/nginx.conf /etc/nginx/nginx.conf\n\nCOPY --from=build /go/src/go.nlx.io/nlx/directory-ui/build /usr/share/nginx/html\nCOPY --from=build /tmp/version.json /usr/share/nginx/html/version.json\n\n# Add non-privileged user\nRUN adduser -D -u 1001 appuser\n\n# Set ownership nginx.pid and cache folder in order to run nginx as non-root user\nRUN touch /var/run/nginx.pid && \\\n    chown -R appuser /var/run/nginx.pid && \\ \n    chown -R appuser /var/cache/nginx\n\nUSER appuser\n"
}