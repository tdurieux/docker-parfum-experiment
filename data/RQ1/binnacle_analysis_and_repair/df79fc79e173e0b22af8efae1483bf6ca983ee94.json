{
  "startTime": 1674239011806,
  "endTime": 1674239011879,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfiles configures a container that is used to compile the released\n# restic binaries.\n\nFROM debian:stable\n\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates wget bzip2 zip && rm -rf /var/lib/apt/lists/*;\n\nADD *.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/*.sh\nENV PATH=\"/usr/local/go/bin:/usr/local/bin:${PATH}\"\n\nRUN download.sh\n\n# set default timezone\nENV TZ Europe/Berlin\n\n# add and configure user\nENV HOME /home/build\nRUN useradd -m -d $HOME -s /bin/bash build\n\n# create directory to hold the source code\nRUN mkdir /restic\nRUN chown build /restic\n\n# create directory to save the resulting files to\nRUN mkdir /output\nRUN chown build /output\n\n# make sure the Go compiler does not use any network access\nENV GOPROXY off\n# disable cgo\nENV CGO_ENABLED 0\n\n# run everything below as user build\nUSER build\nWORKDIR /restic\n\n# by default, assume restic's source is in /restic, build for all architectures, and save the files to /output\nCMD go run -mod=vendor helpers/build-release-binaries/main.go\n\n# usage:\n# docker run --volume \"$PWD/restic-0.9.3:/restic\" --volume \"$PWD/output:/output\"\n"
}