{
  "startTime": 1674235648108,
  "endTime": 1674235648597,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "# Use an official nvidia runtime as a parent image\nFROM nvidia/cuda:10.1-devel-ubuntu18.04\n\n# who am I\nMAINTAINER Andres Milioto <amilioto@uni-bonn.de>\n\nCMD [\"bash\"]\n\n# ENVIRONMENT STUFF FOR CUDA\nRUN ls /usr/local/cuda/bin\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:$LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/lib64\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib\nENV PATH=/usr/local/cuda/bin:$PATH\nENV CUDA_ROOT /usr/local/cuda\n\n# set working directory\nWORKDIR /bonnetal-docker-base\n\n# apt packages\nRUN apt-get update && apt-get install --no-install-recommends -yqq build-essential ninja-build \\\n  python3-dev python3-pip tig apt-utils curl git cmake unzip autoconf autogen \\\n  libtool mlocate zlib1g-dev python python3-numpy python3-wheel wget \\\n  software-properties-common openjdk-8-jdk libpng-dev \\\n  libxft-dev vim meld sudo ffmpeg python3-pip libboost-all-dev \\\n  libyaml-cpp-dev -y && updatedb && rm -rf /var/lib/apt/lists/*;\n\n\n# python packages\nRUN pip3 install --no-cache-dir -U pip\nRUN pip3 install --no-cache-dir numpy==1.14.0 \\\n  onnx==1.5.0 \\\n  torchvision==0.2.2.post3 \\\n  pycuda==2018.1.1 \\\n  opencv_python==3.4.0.12 \\\n  scipy==0.19.1 \\\n  Pillow==6.0.0 \\\n  genpy==2016.1.3 \\\n  scikit_learn==0.20.3 \\\n  tensorflow==1.13.1 \\\n  PyYAML==5.1\n\n# tensorrt (Deb local)\nRUN wget https://ipb.uni-bonn.de/html/projects/bonnetal/external/nv-tensorrt-repo-ubuntu1804-cuda10.1-trt5.1.5.0-ga-20190427_1-1_amd64.deb && \\\n  dpkg -i nv-tensorrt-repo-ubuntu1804-cuda10.1-trt5.1.5.0-ga-20190427_1-1_amd64.deb && \\\n  rm nv-tensorrt-repo-ubuntu1804-cuda10.1-trt5.1.5.0-ga-20190427_1-1_amd64.deb && \\\n  apt-get update && \\\n  apt install --no-install-recommends tensorrt python3-libnvinfer-dev -yqq && rm -rf /var/lib/apt/lists/*;\n\n\n# build pytorch from source and install in the system\nRUN git clone --recursive https://github.com/tano297/pytorch\nRUN cd pytorch && python3 setup.py install && cd ..\nRUN cd pytorch && \\\n  cp -r torch/include/* /usr/local/include && \\\n  cp -r torch/lib/* /usr/local/lib && \\\n  cp -r torch/share/* /usr/local/share && \\\n  cd .. && rm -r pytorch\n\n# install ros\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' && \\\n  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 && \\\n  apt update && \\\n  DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -yqq ros-melodic-desktop-full && \\\n  rosdep init && \\\n  rosdep update && rm -rf /var/lib/apt/lists/*;\n\n# install catkin tools\nRUN apt-get install --no-install-recommends -y python-pip python-empy && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir -U pip catkin-tools trollius\n\n# recommended from nvidia to use the cuda devices\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH\n\n# clean the cache\nRUN apt update && \\\n  apt autoremove --purge -y && \\\n  apt clean -y\n\nRUN rm -rf /var/lib/apt/lists/*"
}