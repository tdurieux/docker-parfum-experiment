{
  "startTime": 1674245383053,
  "endTime": 1674245383382,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 60,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 134,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# set out our GPU lib versions\n# note even though we only specify the major version for cuDNN it will always pull\n\nARG CUDA_V=9.0\n\nFROM nvidia/cuda:${CUDA_V}-devel\n\nENV CUDA_VERSION ${CUDA_V}\nENV CUDNN_VERSION 7.0.5.15\n\n# Install system packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      bzip2 \\\n      g++ \\\n      git \\\n      graphviz \\\n      libgl1-mesa-glx \\\n      libhdf5-dev \\\n      openmpi-bin \\\n      cuda-command-line-tools-9-0 \\\n      wget && \\ \n    rm -rf /var/lib/apt/lists/*\n\n# Install correct CuDNN version for tensorflow\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nRUN apt-get update && apt-get install -y --no-install-recommends \\ \n        libcudnn7=$CUDNN_VERSION-1+cuda9.0 \\\n        libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install conda\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\n\nRUN wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh && \\\n    /bin/bash /Miniconda3-4.4.10-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-4.4.10-Linux-x86_64.sh && \\\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh\n\nRUN conda update -n base conda\nRUN conda update openssl ca-certificates certifi\nRUN conda config --add channels conda-forge\nRUN apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install Goodies\nENV NB_USER geo\nENV NB_UID 1000\n\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    chown $NB_USER $CONDA_DIR -R && \\\n    mkdir -p /src && \\\n    chown $NB_USER /src\n\nUSER $NB_USER\n\nARG python_version=3.6\n\nRUN conda install -y python=${python_version}\nRUN conda config --set always_yes yes\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir https://cntk.ai/PythonWheel/GPU/cntk-2.1-cp36-cp36m-linux_x86_64.whl\nRUN pip install --no-cache-dir Cython\n\n## Base Python Packages\nRUN conda install \\\n    bcolz \\\n    h5py \\\n    matplotlib \\\n    mkl \\\n    nose \\\n    notebook \\\n    pygpu \\\n    pyyaml \\\n    six\n\nRUN pip install --no-cache-dir \\\n    python-dotenv\n\n## Data Science\nRUN conda install \\\n    numpy \\\n    scipy \\\n    pandas \\\n    tqdm \\\n    colorcet \\\n    seaborn \\\n    networkx\n\n## Image Processing\nRUN conda install \\\n    Pillow \\\n    scikit-image\n\n## ML Packages\nRUN conda install \\\n    scikit-learn \\\n    six \\\n    theano\n\nRUN pip install --no-cache-dir \\\n    sklearn_pandas \\\n    tensorflow-gpu \\\n    tensorboardX \\\n    jupyter-tensorboard \\\n    livelossplot\n\n## TPOT plus Dependencies\nRUN pip install --no-cache-dir \\\n    deap \\\n    update_checker \\\n    tqdm \\\n    stopit \\\n    xgboost \\\n    scikit-mdr \\\n    skrebate \\\n    tpot\n\n\n### Torch (Because you're special)\nRUN conda install pytorch torchvision cuda90 -c pytorch \\\n    && conda clean -ya\n\nRUN pip install --no-cache-dir git+https://github.com/pytorch/tnt.git@master\n\n# keras\nRUN git clone git://github.com/keras-team/keras.git /src && pip install --no-cache-dir -e /src[tests] && \\\n    pip install --no-cache-dir git+git://github.com/keras-team/keras.git\n\n## Geo Packages\nRUN conda install \\\n    geopandas \\\n    shapely \\\n    dask\n\nRUN pip install --no-cache-dir \\\n    obspy \\\n    pynoddy \\\n    gempy \\\n    segyio \\\n    bruges \\\n    welly \\\n    fiona \\\n    rasterio \\\n    simpeg \\\n    lasio \\\n    mplstereonet\n\n## Package install over\n\nRUN conda clean -yt\n\nADD theanorc /home/$NB_USER/.theanorc\n\nENV PYTHONPATH='/src/:$PYTHONPATH'\n\nWORKDIR /src\n\n# Tensorboard\nEXPOSE 6006\n# Jupyter / iPython\nEXPOSE 8888\n\nCMD jupyter notebook --port=8888 --ip=0.0.0.0"
}