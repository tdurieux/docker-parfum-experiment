{
  "startTime": 1674240059054,
  "endTime": 1674240059283,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 101,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 101,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 101,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 101,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 AS BUILDSTEP\nMAINTAINER Sergey Dolin <sergey@s4y.solutions>\n\n# Install all necessary for building dependecnies, read more about\n# depencensies in readme section in the root of the repo.\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n      jq \\\n      netcat \\\n      inetutils-ping \\\n      vim \\\n      git \\\n      wget \\\n      make \\\n      cmake \\\n      gcc \\\n      g++ \\\n      python \\\n      libev-dev \\\n      libmpdec-dev \\\n      libjansson-dev \\\n      libssl-dev \\\n      libgnutls-dev \\\n      libmysqlclient-dev \\\n      libhttp-parser-dev \\\n      libcurl4-openssl-dev \\\n\t\t\tlibldap2-dev \\\n\t\t\tlibkrb5-dev \\\n\t\t\tlibalberta-dev \\\n\t\t\tlibgss-dev \\\n\t\t\tlibidn11-dev \\\n\t\t\tlibrtmp-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN git clone https://github.com/edenhill/librdkafka.git \\\n    && cd librdkafka \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf librdkafka\n\nRUN mkdir viabtc_exchange_server\n\n# Copy all necessary files and directories for build process, basically we\n# recreate the root repository directory, but with tham we could ensure that\n# nothing\nCOPY depends    viabtc_exchange_server/depends\nCOPY network    viabtc_exchange_server/network\nCOPY utils      viabtc_exchange_server/utils\n\nCOPY alertcenter    viabtc_exchange_server/alertcenter\nCOPY matchengine    viabtc_exchange_server/matchengine\nCOPY marketprice    viabtc_exchange_server/marketprice\nCOPY readhistory    viabtc_exchange_server/readhistory\nCOPY accesshttp     viabtc_exchange_server/accesshttp\nCOPY accessws       viabtc_exchange_server/accessws\n\nCOPY makefile.inc                                   viabtc_exchange_server/makefile.inc\n\n# Do the actial build of the microservices.\nRUN cd viabtc_exchange_server/depends/hiredis \\\n    && make \\\n    && mv libhiredis.* /usr/lib \\\n    && cd .. \\\n    && mv hiredis /usr/include\n\nRUN cd viabtc_exchange_server/network \\\n    && make\n\nRUN cd viabtc_exchange_server/utils \\\n    && make\n\nRUN cd viabtc_exchange_server/alertcenter \\\n    && make\n\nRUN cd viabtc_exchange_server/matchengine \\\n    && make\n\nRUN cd viabtc_exchange_server/marketprice \\\n    && make\n\nRUN cd viabtc_exchange_server/readhistory \\\n    && make\n\nRUN cd viabtc_exchange_server/accesshttp \\\n    && make\n\nRUN cd viabtc_exchange_server/accessws \\\n    && make\n\n# Multi-stage builds are a new feature requiring Docker 17.05 or higher on the\n# daemon and client. Multistage builds are useful to anyone who has struggled\n# to optimize Dockerfiles while keeping them easy to read and maintain.\n# With this we ensure that previous build layers are not stored and we grab\n# only what we need.\nFROM ubuntu:16.04\n\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install --no-install-recommends -y \\\n\t\t\tlibldap-2.4 \\\n\t\t\tlibgss3 \\\n\t\t\tlibrtmp1 \\\n\t\t\tlibmysqlclient20 \\\n\t\t\tjq \\\n\t\t\tnetcat && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /viabtc_exchange_server\n# keep .exe for better grep of ps output\nCOPY --from=BUILDSTEP   /viabtc_exchange_server/alertcenter/alertcenter \\\n                        /viabtc_exchange_server/alertcenter.exe\nCOPY docker/exchange/configs/alertcenter.json /viabtc_exchange_server\n\nCOPY --from=BUILDSTEP   /viabtc_exchange_server/matchengine/matchengine \\\n                        /viabtc_exchange_server/matchengine.exe\nCOPY docker/exchange/configs/matchengine.json /viabtc_exchange_server\n\nCOPY --from=BUILDSTEP   /viabtc_exchange_server/marketprice/marketprice \\\n                        /viabtc_exchange_server/marketprice.exe\nCOPY docker/exchange/configs/marketprice.json /viabtc_exchange_server\n\nCOPY --from=BUILDSTEP   /viabtc_exchange_server/readhistory/readhistory \\\n                        /viabtc_exchange_server/readhistory.exe\nCOPY docker/exchange/configs/readhistory.json /viabtc_exchange_server\n\nCOPY --from=BUILDSTEP   /viabtc_exchange_server/accesshttp/accesshttp \\\n                        /viabtc_exchange_server/accesshttp.exe\nCOPY docker/exchange/configs/accesshttp.json /viabtc_exchange_server\n\nCOPY --from=BUILDSTEP   /viabtc_exchange_server/accessws/accessws \\\n                        /viabtc_exchange_server/accessws.exe\nCOPY docker/exchange/configs/accessws.json /viabtc_exchange_server\n\nCOPY docker/exchange/entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\n"
}