{
  "startTime": 1674246468054,
  "endTime": 1674246468196,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-base-ubuntu16.04\n\nLABEL maintainer=\"Craig Citro <craigcitro@google.com>\"\n\n# Pick up some TF dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-9-0 \\\n        cuda-cufft-9-0 \\\n        cuda-curand-9-0 \\\n        cuda-cusolver-9-0 \\\n        cuda-cusparse-9-0 \\\n        curl \\\n        libcudnn7=7.2.1.38-1+cuda9.0 \\\n        libnccl2=2.2.13-1+cuda9.0 \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends libnvinfer4=4.1.2-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        Pillow \\\n        h5py \\\n        ipykernel \\\n        jupyter \\\n        keras_applications==1.0.5 \\\n        keras_preprocessing==1.0.3 \\\n        matplotlib \\\n        numpy \\\n        pandas \\\n        scipy \\\n        sklearn \\\n        && \\\n    python -m ipykernel.kernelspec\n\n# --- DO NOT EDIT OR DELETE BETWEEN THE LINES --- #\n# These lines will be edited automatically by parameterized_docker_build.sh. #\n# COPY _PIP_FILE_ /\n# RUN pip --no-cache-dir install /_PIP_FILE_\n# RUN rm -f /_PIP_FILE_\n\n# Install TensorFlow GPU version.\nRUN pip --no-cache-dir install \\\n    http://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-0.0.0-cp27-none-linux_x86_64.whl\n# --- ~ DO NOT EDIT OR DELETE BETWEEN THE LINES --- #\n\n# RUN ln -s -f /usr/bin/python3 /usr/bin/python#\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n\n# Copy sample notebooks.\nCOPY notebooks /notebooks\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\nWORKDIR \"/notebooks\"\n\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n"
}