{
  "startTime": 1674641717351,
  "endTime": 1674641717406,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "FROM mcr.microsoft.com/aiforearth/base-r:latest\n\n# Install fortran; required for adehabitat\nRUN apt-get --assume-yes -y --no-install-recommends install gfortran && rm -rf /var/lib/apt/lists/*;\n\n# Install some addtional R packages\nRUN R -e 'install.packages(\"raster\"); library(raster)' \nRUN R -e 'install.packages(\"maptools\"); library(maptools)'\nRUN R -e 'install.packages(\"ade4\"); library(ade4)'\nRUN R -e 'install.packages(\"adehabitatMA\"); library(adehabitatMA)'\nRUN R -e 'install.packages(\"adehabitatLT\"); library(adehabitatLT)'\nRUN R -e 'install.packages(\"trip\"); library(trip)'\nRUN R -e 'install.packages(\"adehabitatHR\"); library(adehabitatHR)'\n\nRUN R -e 'print(installed.packages());'\n\n# Note: supervisor.conf reflects the location and name of your api code.\n# If the default (./my_api/plumber_run.R) is renamed, you must change supervisor.conf\n# Copy your API code\nRUN mkdir -p /app/my_api/\nWORKDIR /app/my_api/\nCOPY ./my_api/ /app/my_api/\nCOPY ./supervisord.conf /etc/supervisord.conf\n\n# startup.sh is a helper script\nCOPY ./startup.sh /\nRUN chmod +x /startup.sh\n\n# Application Insights keys and trace configuration\nENV APPINSIGHTS_INSTRUMENTATIONKEY= \\\n    APPINSIGHTS_LIVEMETRICSSTREAMAUTHENTICATIONAPIKEY=\n\n# The following variables will allow you to filter logs in AppInsights\nENV SERVICE_OWNER=AI4E_Test \\\n    SERVICE_CLUSTER=Local\\ Docker \\\n    SERVICE_MODEL_NAME=base-R\\ example \\\n    SERVICE_MODEL_FRAMEWORK=R \\\n    SERVICE_MODEL_FRAMEOWRK_VERSION=microsoft-r-open-3.5.1 \\\n    SERVICE_MODEL_VERSION=1.0\n\n# Expose the port that is to be used when calling your API\nEXPOSE 80\nHEALTHCHECK --interval=1m --timeout=3s --start-period=20s \\\n  CMD curl -f http://localhost/ || exit 1\nENTRYPOINT [ \"/startup.sh\" ]\n\n# Replace the above entrypoint with the following one for faster debugging.\n#ENTRYPOINT [\"R\", \"-e\", \"pr <- plumber::plumb(commandArgs()[4]); pr$run(host='0.0.0.0', port=80)\"]\n#CMD [\"/app/my_api/api_example.R\"]"
}