{
  "startTime": 1674243201997,
  "endTime": 1674243202117,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lambci/lambda-base:build as build\n\n# Install the jdk\n# https://github.com/lambci/lambci/blob/master/home/init/java\n\nARG OPENJDK_VERSION=1.8\n# For some reason, libjvm.so needs to be physically present\n# Can't symlink it, have to copy, but everything else can be symlinks\nRUN curl -f -sSL https://lambci.s3.amazonaws.com/binaries/java-${OPENJDK_VERSION}.0-openjdk-devel.tgz | tar -xz -C /opt && \\\n  export JAVA_HOME=$(echo /opt/usr/lib/jvm/java-${OPENJDK_VERSION}.0-openjdk-${OPENJDK_VERSION}*) && \\\n  cp -as /usr/lib/jvm/java-${OPENJDK_VERSION}*/jre $JAVA_HOME/ && \\\n  rm $JAVA_HOME/jre/lib/amd64/server/libjvm.so && \\\n  cp /usr/lib/jvm/java-${OPENJDK_VERSION}*/jre/lib/amd64/server/libjvm.so $JAVA_HOME/jre/lib/amd64/server/\n\n\n# Install git in /opt\n# https://github.com/lambci/lambci/blob/master/build/git/Dockerfile\nARG GIT_VERSION=2.20.0\n\nENV NO_GETTEXT=1 NO_PERL=1 NO_TCLTK=1 NO_PYTHON=1 INSTALL_SYMLINKS=1\n\nRUN curl -f https://mirrors.edge.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.xz | tar -xJ && \\\n  cd git-${GIT_VERSION} && \\\n  make prefix=/opt && \\\n  make prefix=/opt strip && \\\n  make prefix=/opt install && \\\n  rm -rf /opt/share/git-core/templates/*\n\nRUN cd /opt && \\\n  find . ! -perm -o=r -exec chmod +400 {} \\; && \\\n  zip -yr /tmp/git-${GIT_VERSION}.zip ./*\n\n# Install maven\nFROM maven:alpine as maven\nRUN mkdir -p /opt/bin && mv /usr/share/maven /opt/maven && ln -s /opt/maven/bin/mvn /opt/bin/mvn\n\n# Package jenkinsfile runner and plugins\nFROM csanchez/jenkinsfile-runner:1.0-beta-6-2.150.2 as jenkinsfile-runner\nCOPY plugins.txt /usr/share/jenkins/ref/plugins.txt\n# workaround https://github.com/jenkinsci/docker/pull/587\nRUN mkdir /usr/share/jenkins/ref/plugins/tmp.lock && \\\n  /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n\n# Build final image\nFROM lambci/lambda:java8\nUSER root\nCOPY --from=build /opt /opt\nCOPY --from=maven /opt /opt\nCOPY --from=jenkinsfile-runner /app /opt\nCOPY --from=jenkinsfile-runner /usr/share/jenkins/ref/plugins /opt/plugins\n\nENTRYPOINT [\"/opt/bin/jenkinsfile-runner\", \\\n            \"-w\", \"/app/jenkins\",\\\n            \"-p\", \"/app/plugins\",\\\n            \"-f\", \"/workspace\"]\n"
}