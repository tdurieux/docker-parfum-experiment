{
  "startTime": 1674243927081,
  "endTime": 1674243927289,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 3,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-fpm\n\n\n# install the PHP extensions we need\nRUN set -ex; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\n\tapt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibjpeg-dev \\\n\t\tlibpng-dev \\\n\t\tlibxml2-dev \\\n\t\tgnupg \\\n\t\tgit-core \\\n\t\tzip \\\n\t\tunzip \\\n\t\tmysql-client \\\n\t    apt-transport-https \\\n\t; rm -rf /var/lib/apt/lists/*; \\\n\n\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \\\n\tdocker-php-ext-install soap gd mysqli;\n\n\nRUN apt remove cmdtest\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash\nRUN apt-get update\nRUN apt-get install --no-install-recommends nodejs yarn -yq && rm -rf /var/lib/apt/lists/*;\n\n# Install XDebug\nRUN pecl install xdebug-2.6.0 \\\n    && docker-php-ext-enable xdebug\n\n# Install PHPCS\nWORKDIR /tmp\n\nRUN curl -f -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar && \\\n    cp /tmp/phpcs.phar /usr/local/bin/phpcs && \\\n    chmod +x /usr/local/bin/phpcs\n\n# Install Composer\nWORKDIR /tmp\n\nRUN curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n&& curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n# Make sure we're installing what we think we're installing!\n&& php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n&& php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot \\\n&& rm -f /tmp/composer-setup.*\n\n# Install WPCLI\nWORKDIR /tmp\nRUN curl -f -OL https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nRUN cp /tmp/wp-cli.phar /usr/local/bin/wp\nRUN chmod +x /usr/local/bin/wp && \\\necho 'wp() {' >> ~/.bashrc && \\\necho '/usr/local/bin/wp \"$@\" --allow-root' >> ~/.bashrc && \\\necho '}' >> ~/.bashrc\n\nWORKDIR /var/www/html\nVOLUME /var/www/html\n"
}