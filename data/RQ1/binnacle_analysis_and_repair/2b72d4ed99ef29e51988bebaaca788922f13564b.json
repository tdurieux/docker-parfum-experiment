{
  "startTime": 1674246324436,
  "endTime": 1674246326274,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for a reveal.js environment with java, maven und docker cli\n\n# Start it with\n# docker run -it --rm \\\n#       -v /var/run/docker.sock:/var/run/docker.sock \\\n#       -v `pwd`:/slides \\\n#       -p 9000:9000 -p 57575:57575 -p 35279:35279 \\\n#       rhuss/docker-reveal\n#\n# See also /start.sh for possible options\n\nFROM alpine:3.6\n\nENV MAVEN_VERSION 3.5.0\nENV MAVEN_BASE apache-maven-${MAVEN_VERSION}\nENV JAVA_HOME /usr/lib/jvm/default-jvm\n\n#  RUN echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\nRUN apk update && \\\n    apk upgrade && \\\n    apk add \\\n          nodejs \\\n          nodejs-npm \\\n          python \\\n          python-dev \\\n          musl-dev \\\n          libffi-dev \\\n          openssl-dev \\\n          py-pip \\\n          gcc \\\n          g++ \\\n          openjdk8 \\\n          git \\\n          vim \\\n          docker \\\n          curl \\\n          bash \\\n          bash-completion && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir libsass && \\\n    npm install -g npm && \\\n    npm install -g grunt-cli bower yo generator-reveal && \\\n    wget https://www-eu.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/${MAVEN_BASE}-bin.tar.gz \\\n         -O /tmp/maven.tgz && \\\n    tar zxvf /tmp/maven.tgz && mv ${MAVEN_BASE} /maven && \\\n    ln -s /maven/bin/mvn /usr/bin/ && \\\n    rm /usr/bin/vi && ln -s /usr/bin/vim /usr/bin/vi && \\\n    rm /tmp/maven.tgz /var/cache/apk/* && \\\n    cd / && \\\n    git clone https://github.com/paradoxxxzero/butterfly && \\\n    mkdir -p /etc/butterfly/themes && \\\n    git clone https://github.com/paradoxxxzero/butterfly-themes /etc/butterfly/themes && \\\n    cd butterfly && \\\n    cp /etc/butterfly/themes/color-neon/style.sass butterfly/sass/main.sass && \\\n    cat /butterfly/butterfly/sass/_variables.sass | sed -e 's/font-size: 1em/font-size: 1.8em/' > /tmp/_v.sass && \\\n    mv /tmp/_v.sass /butterfly/butterfly/sass/_variables.sass && \\\n    sassc butterfly/sass/main.sass > butterfly/static/main.css && \\\n    python setup.py build && \\\n    python setup.py install && \\\n    cp /etc/terminfo/x/xterm-color /etc/terminfo/x/xterm-256color && \\\n    mkdir /slides && \\\n    adduser -D -h /slides -s /bin/ash -u 1000 yo && \\\n    git clone https://github.com/paradoxxxzero/butterfly-demos /butterfly/demos && \\\n    echo \"export JAVA_HOME=${JAVA_HOME}\" >> /etc/profile && npm cache clean --force;\n\nRUN sed -e 's/\\/bin\\/ash/\\/bin\\/bash/' /etc/passwd > /tmp/,x && \\\n    mv /tmp/,x /etc/passwd\n\nADD docker/prompt.sh /etc/profile.d/prompt.sh\nADD docker/emacs.el /root/.emacs\n\nADD docker/start.sh /start.sh\nADD docker/cacerts /usr/lib/jvm/default-jvm/jre/lib/security/\n\n# Workaround for making CTRL-C working again\nADD docker/shell_wrapper/reset_signals.c /tmp\nADD docker/shell_wrapper/ash_wrapper.sh /bin/ash_wrapper.sh\nADD docker/shell_wrapper/bash_wrapper.sh /bin/bash_wrapper.sh\nRUN gcc /tmp/reset_signals.c -o /bin/reset_signals \\\n && rm /bin/ash \\\n && mv /bin/ash_wrapper.sh /bin/ash \\\n && chmod 755 /bin/ash \\\n && mv /bin/bash /bin/bash.orig \\\n && mv /bin/bash_wrapper.sh /bin/bash \\\n && chmod 755 /bin/bash\n\n# ADD docker/butterfly /etc/butterfly\nADD docker/slides_init /slides_init\nWORKDIR /slides_init\nRUN rm -rf node_modules \\\n && npm install && npm cache clean --force;\nADD docker/mime.types /etc/mime.types\nRUN chmod 755 /usr/bin/mvn /start.sh\n\nEXPOSE 9000 57575 35729\n\nWORKDIR /slides\nENTRYPOINT [\"sh\", \"/start.sh\"]\n"
}