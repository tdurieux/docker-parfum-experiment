{
  "startTime": 1674243796061,
  "endTime": 1674243796140,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda3:4.5.12 as builder\n\nARG COMPUTE_CELERY_VER\nARG COMPUTE_KUBERNETES_VER\nARG COMPUTE_TASKS_VER\nARG COMPUTE_PROVISIONER_VER\nARG COMPUTE_API_VER\n\nENV COMPUTE_API_VER ${COMPUTE_API_VER}\n\nWORKDIR /src\n\nCOPY . .\n\nWORKDIR /src/compute\n\nRUN git rev-parse HEAD >> git-rev.txt && \\\n      conda install -c conda-forge -y conda-build=3.17.8 && \\\n      echo \"__version__ = '${COMPUTE_KUBERNETES_VER}'\" > compute_kubernetes/compute_kubernetes/_version.py && \\\n      echo \"__version__ = '${COMPUTE_PROVISIONER_VER}'\" > compute_provisioner/compute_provisioner/_version.py && \\\n      echo \"__version__ = '${COMPUTE_TASKS_VER}'\" > compute_tasks/compute_tasks/_version.py && \\\n      conda build -c conda-forge -c cdat compute_kubernetes/ && \\\n      conda build -c conda-forge compute_provisioner/ && \\\n      conda build -c cdat/label/nightly -c cdat -c conda-forge --use-local compute_tasks/\n\nFROM continuumio/miniconda3:4.5.12\n\nENV COMPUTE_API_VER ${COMPUTE_API_VER}\n\nENV COMPUTE_CELERY_VER ${COMPUTE_CELERY_VER}\n\nENV prometheus_multiproc_dir /metrics\n\nCOPY --from=builder /opt/conda/conda-bld/noarch/* /opt/conda/conda-bld/noarch/\n\nCOPY --from=builder /src/compute/git-rev.txt .\n\nRUN export GIT_REV=$(cat git-rev.txt) && \\\n      rm -rf git-rev.txt\n\nRUN mkdir -p /tmp/certs && \\\n      curl -f -sL https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg_trusted_certificates.tar | tar xvf - -C /tmp/certs --strip 1\n\nRUN conda install -c cdat/label/nightly -c cdat -c conda-forge --use-local compute-tasks\n\nWORKDIR /\n\nCOPY docker/celery/entrypoint.sh .\n\nCOPY docker/celery/healthcheck.sh .\n\nEXPOSE 8000\n\nENTRYPOINT [\"tini\", \"--\"]\n\nCMD [\"/bin/bash\", \"./entrypoint.sh\", \"-c\", \"1\", \"-Q\", \"default\", \"-n\", \"default\", \"-l\", \"INFO\"]\n"
}