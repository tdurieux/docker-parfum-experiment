{
  "startTime": 1674242082362,
  "endTime": 1674242082604,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8\n\nEXPOSE 6543\n\n# Maven installs openjdk-7 as the default Java. update-alternatives points java back to 8.\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6 && \\\n    echo 'deb http://httpredir.debian.org/debian jessie-backports main' > \\\n    /etc/apt/sources.list.d/backports.list && \\\n    apt-get update && apt-get -y dist-upgrade && \\\n    echo \"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.4.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        maven \\\n        sqlite \\\n        g++ \\\n        make \\\n        automake \\\n        bison \\\n        flex \\\n        pkg-config \\\n        libevent-dev \\\n        libssl-dev \\\n        libtool \\\n        mongodb-org-shell && \\\n    apt-get clean && \\\n    update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\n# Install Thrift 0.10.0\nRUN wget -q https://archive.apache.org/dist/thrift/0.10.0/thrift-0.10.0.tar.gz && \\\n    tar -xzf thrift-0.10.0.tar.gz && \\\n    cd thrift-0.10.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-python && \\\n    make && \\\n    ln -n ~/thrift-0.10.0/compiler/cpp/thrift /usr/local/bin/thrift && rm thrift-0.10.0.tar.gz\n\n# Add ModelDB project\nADD . /modeldb\n\nWORKDIR /modeldb/server/codegen\n\n# Build SQLite convenience methods and create SQLite databases.\n# Snippet from server/codegen/gen_sqlite.sh. This RUN should be removed once\n# SQLite is completely removed from ModelDB.\nRUN rm -rf jars/ && \\\n    rm -f sqlite/*jar && \\\n    mkdir -p jars && \\\n    wget -q https://central.maven.org/maven2/org/jooq/jooq/3.8.4/jooq-3.8.4.jar -O jars/jooq-3.8.4.jar && \\\n    wget -q https://central.maven.org/maven2/org/jooq/jooq-meta/3.8.4/jooq-meta-3.8.4.jar -O jars/jooq-meta-3.8.4.jar && \\\n    wget -q https://central.maven.org/maven2/org/jooq/jooq-codegen/3.8.4/jooq-codegen-3.8.4.jar -O jars/jooq-codegen-3.8.4.jar && \\\n    wget -q https://central.maven.org/maven2/org/xerial/sqlite-jdbc/3.15.1/sqlite-jdbc-3.15.1.jar -O sqlite/sqlite-jdbc-3.15.1.jar && \\\n    cat ./sqlite/createDb.sql | sqlite3 modeldb.db && \\\n    cat ./sqlite/createDb.sql | sqlite3 modeldb_test.db && \\\n    java -classpath jars/jooq-3.8.4.jar:jars/jooq-meta-3.8.4.jar:jars/jooq-codegen-3.8.4.jar:sqlite/sqlite-jdbc-3.15.1.jar:. org.jooq.util.GenerationTool sqlite/library.xml && \\\n    mv modeldb.db ../ && \\\n    mv modeldb_test.db ../ && \\\n    chmod a+wrx ../modeldb.db && \\\n    chmod a+wrx ../modeldb_test.db\n\nWORKDIR /modeldb/server\n\nRUN ../scripts/gen_thrift_file.sh java '../thrift/ModelDB.thrift' './src/main/thrift/' && \\\n    mvn clean compile -Dthrift_version=0.10.0\n\n# This would be better as an ENTRYPOINT with 'mongo' the CMD param, but\n# `exec mvn exec:java ...` leads to a classpath issue that isn't immediately\n# clear how to handle.\nENTRYPOINT [\"/modeldb/dockerbuild/wait_for_mongodb.sh\", \"0.10.0\"]\nCMD [\"mongo\"]\n"
}