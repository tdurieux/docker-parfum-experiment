{
  "startTime": 1674250466730,
  "endTime": 1674250466863,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is intended to build a production-ready app image.\n# 1: Use ruby 2.2.6 as base:\nFROM ruby:2.2.6-alpine\n\n# 2: We'll set the application path as the working directory\nWORKDIR /usr/src/app\n\n# 3: We'll add the app's binaries path to $PATH, and set the environment name to 'production':\nENV PATH=/usr/src/app/bin:$PATH RAILS_ENV=production RACK_ENV=production\n\n# 4: Set the default command:\nCMD [ \"bundle\", \"exec\", \"puma\", \"--bind\", \"tcp://0.0.0.0:3000\" ]\n\n# 5: Expose the web port:\nEXPOSE 3000\n\n# ==================================================================================================\n# 6:  Install dependencies:\n\n# 6.1: Install the common runtime dependencies:\nRUN set -ex && apk add --no-cache libpq ca-certificates openssl\n\n# 6.2: Copy just the Gemfile & Gemfile.lock, to avoid the build cache failing whenever any other\n# file changed and installing dependencies all over again - a must if your'e developing this\n# Dockerfile...\nADD ./Gemfile* /usr/src/app/\n\n# 6.3: Install build dependencies AND install/build the app gems:\nRUN set -ex \\\n  && apk add --no-cache --virtual .app-builddeps build-base postgresql-dev \\\n  && bundle install --without development test \\\n  && apk del .app-builddeps\n\n# ==================================================================================================\n# 7: Copy the rest of the application code, install nodejs as a build dependency, then compile the\n# app assets, and finally change the owner of the code to 'nobody':\nADD . /usr/src/app\nRUN set -ex \\\n  && apk add --no-cache --virtual .app-builddeps nodejs=6.2.0-r0 \\\n  && mkdir -p /usr/src/app/tmp/cache \\\n  && mkdir -p /usr/src/app/tmp/pids \\\n  && mkdir -p /usr/src/app/tmp/sockets \\\n  && DATABASE_URL=postgres://postgres@example.com:5432/fakedb \\\n  AMQP_URL=amqp://guest:guest@amqp:5672 TWITTER_API_KEY=SOME_KEY TWITTER_API_SECRET=SOME_SECRET \\\n  SECRET_KEY_BASE=10167c7f7654ed02b3557b05b88ece \\\n  rails assets:precompile \\\n  && echo \"apk del .app-builddeps\" \\\n  && chown -R nobody /usr/src/app && rm -rf /usr/src/app/tmp/cache\n\n# ==================================================================================================\n# 8: Set the container user to 'nobody':\nUSER nobody\n"
}