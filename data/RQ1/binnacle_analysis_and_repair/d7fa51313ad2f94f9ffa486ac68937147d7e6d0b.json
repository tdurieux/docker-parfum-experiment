{
  "startTime": 1674252615396,
  "endTime": 1674252615552,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as builder\nRUN apk add --no-cache curl jq\nRUN mkdir -p /assets\nWORKDIR /assets\nRUN curl -f -L \"https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github\" | tar -xzf -\nCOPY . /go/src/github.com/concourse/cf-resource\nENV CGO_ENABLED 0\nRUN go build -o /assets/in github.com/concourse/cf-resource/in/cmd/in\nRUN go build -o /assets/out github.com/concourse/cf-resource/out/cmd/out\nRUN go build -o /assets/check github.com/concourse/cf-resource/check/cmd/check\nWORKDIR /go/src/github.com/concourse/cf-resource\nRUN set -e; for pkg in $(go list ./... | grep -v \"acceptance\"); do \\\n\t\tgo test -o \"/tests/$(basename $pkg).test\" -c $pkg; \\\n\tdone\n\nFROM alpine:edge AS resource\nRUN apk add --no-cache bash tzdata ca-certificates\nCOPY --from=builder assets/ /opt/resource/\nRUN chmod +x /opt/resource/*\nRUN mv /opt/resource/cf /usr/bin/cf\n\nFROM resource AS tests\nCOPY --from=builder /tests /go-tests\nCOPY out/assets /go-tests/assets\nWORKDIR /go-tests\nRUN set -e; for test in /go-tests/*.test; do \\\n\t\t$test; \\\n\tdone\n\nFROM resource\n"
}