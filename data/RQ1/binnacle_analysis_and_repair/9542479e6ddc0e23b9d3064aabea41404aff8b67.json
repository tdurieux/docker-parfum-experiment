{
  "startTime": 1674241719990,
  "endTime": 1674241720211,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim\n# TODO[pulumi/pulumi#1986]: consider switching to, or supporting, Alpine Linux for smaller image sizes.\n\nLABEL \"repository\"=\"https://github.com/pulumi/pulumi\"\nLABEL \"homepage\"=\"http://pulumi.io/\"\nLABEL \"maintainer\"=\"Pulumi Team <team@pulumi.com>\"\n\n# Install deps all in one step\nRUN apt-get update -y && \\\n  apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    gnupg \\\n    software-properties-common \\\n  && \\\n  # Get all of the signatures we need all at once\n  curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n  curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add && \\\n  curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n  curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \\\n  # IAM Authenticator for EKS\n  curl -fsSLo /usr/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator && \\\n  chmod +x /usr/bin/aws-iam-authenticator && \\\n  # Add additional apt repos all at once\n  echo \"deb https://deb.nodesource.com/node_11.x $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/node.list && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n  echo \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list && \\\n  echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n  echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" | tee /etc/apt/sources.list.d/kubernetes.list && \\\n  echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/azure.list && \\\n  # Install second wave of dependencies\n  apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n    azure-cli \\\n    docker-ce \\\n    google-cloud-sdk \\\n    kubectl \\\n    nodejs \\\n    yarn \\\n  && \\\n  pip install --no-cache-dir awscli --upgrade && \\\n  # Clean up the lists work\n  rm -rf /var/lib/apt/lists/*\n\n# Passing --build-arg PULUMI_VERSION=vX.Y.Z will use that version\n# of the SDK. Otherwise, we use whatever get.pulumi.com thinks is\n# the latest\nARG PULUMI_VERSION=latest\n\n# Install the Pulumi SDK, including the CLI and language runtimes.\nRUN if [ \"$PULUMI_VERSION\" = \"latest\" ]; then \\\n    curl -fsSL https://get.pulumi.com/ | bash; \\\n  else \\\n    curl -fsSL https://get.pulumi.com/ | bash -s -- --version $(echo $PULUMI_VERSION | cut -c 2-); \\\n  fi && \\\n  mv ~/.pulumi/bin/* /usr/bin\n\n# I think it's safe to say if we're using this mega image, we want pulumi\nENTRYPOINT [\"pulumi\"]\n"
}