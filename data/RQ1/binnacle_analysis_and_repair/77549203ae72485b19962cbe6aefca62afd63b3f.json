{
  "startTime": 1674243914503,
  "endTime": 1674243914773,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# \n# DesertBit Bulldozer Dockerfile \n# \nFROM golang \n\nMAINTAINER Roland Singer, roland.singer@desertbit.com \n\nENV BULLDOZER_DATA_DIR \"/data/files\" \nENV BULLDOZER_SESSIONS_DB_PATH \"/data/sessions.db\" \nENV BULLDOZER_DB_ADDR \"ENV:DB_PORT_28015_TCP_ADDR\" \nENV BULLDOZER_DB_PORT \"ENV:DB_PORT_28015_TCP_PORT\" \n# Install dependencies \nRUN export DEBIAN_FRONTEND=noninteractive; \\\n apt-get update && \\\n apt-get install --no-install-recommends -y rubygems && \\\napt-get clean && \\\nrm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\ngem install sass\n\n# Add the bulldozer user, prepare the data directory and fix permission. \nADD run.sh /run.sh \nRUN useradd --no-create-home bud \nRUN mkdir /data \nRUN chown -R bud:bud /data /go && \\  \nchmod -R 770 /go /data && \\  \nchmod +x /run.sh \n\nRUN mkdir -p /go/src/app \nWORKDIR /go/src/app \n\n# On build triggers \nONBUILD COPY . /go/src/app \nONBUILD RUN go-wrapper download \nONBUILD RUN go-wrapper install \nONBUILD RUN chown -R bud:bud /go && \\  \nchmod -R 770 /go \n\nEXPOSE 9000 \nVOLUME [ \"/data\" ] \n\nCMD [ \"/run.sh\", \"go-wrapper\", \"run\", \"-settings\", \"/data/settings.toml\" ]\n\n"
}