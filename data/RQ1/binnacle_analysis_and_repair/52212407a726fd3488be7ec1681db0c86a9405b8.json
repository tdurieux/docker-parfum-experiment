{
  "startTime": 1674244688866,
  "endTime": 1674244688987,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM w251/cuda:dev-tx2-4.2_b158\n\n# to run this in interactive mode, try\n# docker run --rm --privileged -v /tmp:/tmp -v /var:/var -v /home/nvidia/models:/models --net=host --ipc=host --env DISPLAY=$DISPLAY -ti w251/inf:tx2-3.3_b39 bash\n# Try the frame classification demo:\n# ./imagenet-camera\n# Try the object detection demo:\n# ./detectnet-camera\n# Try the segmentation demo:\n# ./segnet-camera\n\nRUN apt update\nRUN apt install --no-install-recommends -y git cmake wget gstreamer1.0-tools gstreamer1.0-plugins-good gstreamer1.0-plugins-base && rm -rf /var/lib/apt/lists/*;\nWORKDIR /tmp\n# RUN rm *.deb\nARG URL=http://169.44.201.108:7002/jetpacks/4.2\n\nRUN wget $URL/libopencv_3.3.1-2-g31ccdfe11_arm64.deb\nRUN wget $URL/libopencv-samples_3.3.1-2-g31ccdfe11_arm64.deb\nRUN wget $URL/libopencv-python_3.3.1-2-g31ccdfe11_arm64.deb\nRUN wget $URL/libopencv-dev_3.3.1-2-g31ccdfe11_arm64.deb\n\n# RUN wget $URL/libopencv_3.3.1_t186_arm64.deb\n# RUN wget $URL/libopencv-dev_3.3.1_t186_arm64.deb\n# RUN wget $URL/libopencv-python_3.3.1_t186_arm64.deb\n# RUN wget $URL/libopencv-samples_3.3.1_t186_arm64.deb\n\n# RUN wget $URL/libnvinfer4_4.1.3-1+cuda9.0_arm64.deb\n# RUN wget $URL/libnvinfer-dev_4.1.3-1+cuda9.0_arm64.deb\n# RUN wget $URL/libnvinfer-samples_4.1.3-1+cuda9.0_arm64.deb\n\nRUN wget $URL/libnvinfer-dev_5.0.6-1+cuda10.0_arm64.deb\nRUN wget $URL/libnvinfer-samples_5.0.6-1+cuda10.0_all.deb\nRUN wget $URL/libnvinfer5_5.0.6-1+cuda10.0_arm64.deb\n\nRUN apt install --no-install-recommends -y /tmp/*.deb && rm -rf /var/lib/apt/lists/*;\nRUN rm *.deb\n\nWORKDIR /\nRUN git clone http://github.com/dusty-nv/jetson-inference\nWORKDIR /jetson-inference\nRUN git submodule update --init\nRUN mkdir build\nWORKDIR /jetson-inference/build\n\n# Build\n\nRUN cmake ../\nRUN make -j6\n\nRUN make install\n\nWORKDIR /jetson-inference/build/aarch64/bin\n"
}