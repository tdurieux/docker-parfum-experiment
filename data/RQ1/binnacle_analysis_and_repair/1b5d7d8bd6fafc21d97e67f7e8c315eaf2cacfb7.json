{
  "startTime": 1674234886326,
  "endTime": 1674234886812,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 133,
        "columnEnd": 174
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM sandialabs/slycat-base\nMAINTAINER Matthew Letter <mletter@sandia.gov>\n\n\nUSER root\n# the developer run-slycat version starts sshd\nCOPY run-slycat.sh /etc/slycat/\n# add machine uuid\nRUN dbus-uuidgen > /var/lib/dbus/machine-id && \\\n# add developer python packages\n    /home/slycat/install/conda/bin/pip install --trusted-host pypi.python.org --trusted-host pypi.org --trusted-host files.pythonhosted.org nose selenium pyvirtualdisplay && \\\n# assign a password to root and slycat\n    echo 'root:slycat' | chpasswd; echo 'slycat:slycat' | chpasswd && \\\n# Generate a private certificate authority.\n    openssl genrsa -out /root-ca.key 2048 && \\\n    openssl req -x509 -new -nodes -key /root-ca.key -days 365 -out /root-ca.cert -subj \"/C=US/ST=New Mexico/L=Albuquerque/O=The Slycat Project/OU=QA/CN=Slycat\" && \\\n# Generate a self-signed certificate\n    openssl genrsa -out /web-server.key 2048 && \\\n    openssl req -new -key /web-server.key -out /web-server.csr -subj \"/C=US/ST=New Mexico/L=Albuquerque/O=The Slycat Project/OU=QA/CN=localhost\" && \\\n    openssl x509 -req -sha256 -in /web-server.csr -CA /root-ca.cert -CAkey /root-ca.key -CAcreateserial -out /web-server.cert -days 1825 && \\\n    cat /web-server.key /web-server.cert > /etc/slycat/combined.cer; chgrp slycat /etc/slycat/combined.cer; chmod 440 /etc/slycat/combined.cer && \\\n# Add our private CA to the system-wide list of certificate authorities, so push scripts will trust the web-server.\n    cp /root-ca.cert /etc/pki/ca-trust/source/anchors/ && \\\n    /usr/bin/update-ca-trust && \\\n# Python packages previously present:\n#   python-coverage python-nose python-sphinx python-sphinx_rtd_theme behave\n#   sphinxcontrib-httpdomain sphinxcontrib-napoleon pyside Ghost.py\n#\n# Additional python packages may be added to this python installation. The procedure\n# overview is: install Miniconda, add the additional packages to conda by running\n# each package's setup.py, run conda's package utility. Below is a more detailed\n# procedure. Refer to slycat-base/Dockerfile for more examples.\n# -install Miniconda\n# -set PATH so <conda path>/bin is default python\n# -download and un-tar additional python packages into their own dirs\n# -cd into each pkg dir, run \"python setup.py install\"\n# -create a Slycat additions package with \"conda package --pkg-name=<some_name> --pkg-version=<date>\"\n# Install the additions with \"conda install your_package\"\n# Install yum packages for development.\n    yum install -y openssh-server sudo screen cmake qt-devel libxml2-devel libxslt-devel qtwebkit-devel xorg-x11-server-Xvfb firefox && \\\n    yum clean all && \\\n# Setup the sshd service.\n    mkdir /var/run/sshd; rm -rf /var/cache/yum mkdir /var/log/sshd; ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' && \\\n# Set reasonable ssh timeouts for development.\n    sed -e 's/^#ClientAliveInterval .*$/ClientAliveInterval 60/' -i /etc/ssh/sshd_config && \\\n    sed -e 's/^#ClientAliveCountMax .*$/ClientAliveInterval 10080/' -i /etc/ssh/sshd_config && \\\n# Make the slycat user a sudoer.\n    /usr/sbin/usermod -a -G wheel slycat && \\\n    sed -e 's/^# %wheel\\tALL=(ALL)\\tALL$/%wheel\\tALL=(ALL)\\tALL/' -i /etc/sudoers && \\\n    cd /usr/bin && \\\n    ln -s /home/slycat/install/conda/bin/pip pip\n\nRUN su slycat && \\\n    cd /home/slycat && \\\n    wget --no-check-certificate https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz; tar xf geckodriver-v0.11.1-linux64.tar.gz && rm geckodriver-v0.11.1-linux64.tar.gz\n\nRUN cd /home/slycat && \\\n    cp geckodriver /usr/bin/geckodriver && \\\n    ls /usr/bin | grep geckodriver && \\\n#RUN rm /etc/slycat/run-slycat.sh\n#RUN rm /etc/slycat/web-server-config.ini\n# put the appropriate web server config in place\n#RUN ln -s /home/slycat/src/slycat/docker/slycat-developer/web-server-config.ini /etc/slycat/web-server-config.ini\n#RUN ln -s /home/slycat/src/slycat/docker/slycat-developer/run-slycat.sh /etc/slycat/run-slycat.sh\n    cd /home/slycat/src/slycat && \\\n    git pull && \\\n# Configure vim and setup useful aliases.\n    echo \"alias vi=vim\" >> /home/slycat/.bash && \\\n# Setup useful git defaults.\n    HOME=/home/slycat git config --global color.ui true && \\\n    /home/slycat/install/conda/bin/pip install --trusted-host pypi.python.org --trusted-host pypi.org --trusted-host files.pythonhosted.org behave && \\\n    echo \"alias testslycat=\\\"behave -i \\\\\\\"(agent|hyperchunks|rest-api)\\\\\\\" /home/slycat/src/slycat/features/\\\"\" >> /home/slycat/.bashrc\n\nADD .vimrc /home/slycat/.vimrc\n# Make sure we find qmake for pyside\nENV PATH /usr/lib64/qt4/bin:$PATH\n# We want CouchDB to listen on all network interfaces, so developers can use its web UI.\n# CouchDB will be listening on port 5984.\nEXPOSE 5984\nEXPOSE 22\nUSER root\nRUN chmod -R 750 /etc/slycat && \\\n#RUN chmod -R 750 /home/slycat/\n#RUN chown --recursive slycat:slycat /home/slycat/\n    chown -R slycat:slycat /home/slycat/ && \\\n    chown --recursive root:slycat /etc/slycat/ && \\\n    service couchdb start; sleep 2 && \\\n    bash && \\\n    source /home/slycat/.bashrc && \\\n    /home/slycat/install/conda/bin/python /home/slycat/src/slycat/web-server/slycat-couchdb-setup.py;sleep 2 && \\\n    /home/slycat/install/conda/bin/python /home/slycat/src/slycat/web-server/slycat-load.py --data-store /var/lib/slycat/data-store /home/slycat/src/slycat/docker/DB/ ;sleep 4 && \\\n    chown -R slycat:slycat /var/lib/slycat/data-store && \\\n    service couchdb stop; sleep 2\n\nENTRYPOINT [\"/bin/sh\",\"/etc/slycat/run-slycat.sh\"]\n"
}