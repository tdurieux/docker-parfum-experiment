{
  "startTime": 1674251998886,
  "endTime": 1674251998955,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# specify the node base image with your desired version node:<version>\nFROM arm32v7/node:8-stretch\n\n# need qemu to emulate arm architecture\n# can be downloaded here, $ docker run -v /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static --rm -ti arm32v7/debian:stretch-slim\nCOPY ./qemu-arm-static /usr/bin/qemu-arm-static\n\n# install tools\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y vim \\\n  && apt-get install --no-install-recommends rsync -y && rm -rf /var/lib/apt/lists/*;\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n# If you are building your code for production\n# RUN npm install --only=production\n\n# Bundle app source\nCOPY . .\n\nRUN gpg --batch --import ./resources/node-logs.asc\n\nLABEL casa=persist\n\nEXPOSE 3000\nCMD [ \"npm\", \"start\" ]\n"
}