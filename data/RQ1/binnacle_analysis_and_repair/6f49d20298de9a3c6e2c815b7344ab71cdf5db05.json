{
  "startTime": 1674249635365,
  "endTime": 1674249635510,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Golang build container\nFROM golang:1.12.4\n\nWORKDIR $GOPATH/src/github.com/grafana/grafana\n\nCOPY go.mod go.sum ./\nCOPY vendor vendor\n\nRUN go mod verify\n\nCOPY pkg pkg\nCOPY build.go build.go\nCOPY package.json package.json\n\nRUN go run build.go build\n\n# Node build container\nFROM node:10.14.2\n\nWORKDIR /usr/src/app/\n\nCOPY package.json yarn.lock ./\nCOPY packages packages\n\nRUN yarn install --pure-lockfile --no-progress && yarn cache clean;\n\nCOPY Gruntfile.js tsconfig.json tslint.json ./\nCOPY public public\nCOPY scripts scripts\nCOPY emails emails\n\nENV NODE_ENV production\nRUN ./node_modules/.bin/grunt build\n\n# Final container\nFROM ubuntu:latest\n\nLABEL maintainer=\"Grafana team <hello@grafana.com>\"\n\nARG GF_UID=\"472\"\nARG GF_GID=\"472\"\n\nENV PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    GF_PATHS_CONFIG=\"/etc/grafana/grafana.ini\" \\\n    GF_PATHS_DATA=\"/var/lib/grafana\" \\\n    GF_PATHS_HOME=\"/usr/share/grafana\" \\\n    GF_PATHS_LOGS=\"/var/log/grafana\" \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana/plugins\" \\\n    GF_PATHS_PROVISIONING=\"/etc/grafana/provisioning\"\n\nWORKDIR $GF_PATHS_HOME\n\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -qq -y libfontconfig1 ca-certificates && \\\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY conf ./conf\n\nRUN mkdir -p \"$GF_PATHS_HOME/.aws\" && \\\n    groupadd -r -g $GF_GID grafana && \\\n    useradd -r -u $GF_UID -g grafana grafana && \\\n    mkdir -p \"$GF_PATHS_PROVISIONING/datasources\" \\\n             \"$GF_PATHS_PROVISIONING/dashboards\" \\\n             \"$GF_PATHS_PROVISIONING/notifiers\" \\\n             \"$GF_PATHS_LOGS\" \\\n             \"$GF_PATHS_PLUGINS\" \\\n             \"$GF_PATHS_DATA\" && \\\n    cp \"$GF_PATHS_HOME/conf/sample.ini\" \"$GF_PATHS_CONFIG\" && \\\n    cp \"$GF_PATHS_HOME/conf/ldap.toml\" /etc/grafana/ldap.toml && \\\n    chown -R grafana:grafana \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\" && \\\n    chmod 777 -R \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\"\n\nCOPY --from=0 /go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-server /go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-cli ./bin/\nCOPY --from=1 /usr/src/app/public ./public\nCOPY --from=1 /usr/src/app/tools ./tools\nCOPY tools/phantomjs/render.js ./tools/phantomjs/render.js\n\nEXPOSE 3000\n\nCOPY ./packaging/docker/run.sh /run.sh\n\nUSER grafana\nENTRYPOINT [ \"/run.sh\" ]\n"
}