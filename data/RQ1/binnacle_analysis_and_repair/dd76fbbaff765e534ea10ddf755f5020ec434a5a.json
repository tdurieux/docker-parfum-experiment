{
  "startTime": 1674246297806,
  "endTime": 1674246297881,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Datawire. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License\n\n# Our base image was built from https://github.com/datawire/envoy, commit\n# 6557e9ea7, on the flynn/feature/extauth branch. We need this instead of\n# the official Envoy image so that we can support Ambassador's ability to\n# use an external authentication service.\n#\n# To reproduce the base image,\n#\n# git clone https://github.com/datawire/envoy.git datawire-envoy\n# cd datawire-envoy\n# git checkout flynn/feature/extauth\n#\n# and then read DATAWIRE/README.md.\n\n# FROM datawire/ambassador-envoy-alpine-stripped:v1.6.0-446-g100a92e2\nFROM quay.io/datawire/ambassador-envoy:v1.7.0-64-g09ba72b1-alpine-stripped\n\nMAINTAINER Datawire <flynn@datawire.io>\nLABEL PROJECT_REPO_URL         = \"git@github.com:datawire/ambassador.git\" \\\n      PROJECT_REPO_BROWSER_URL = \"https://github.com/datawire/ambassador\" \\\n      DESCRIPTION              = \"Ambassador\" \\\n      VENDOR                   = \"Datawire\" \\\n      VENDOR_URL               = \"https://datawire.io/\"\n\n# This Dockerfile is set up to install all the application-specific stuff into\n# /ambassador.\n#\n# NOTE: If you don't know what you're doing, it's probably a mistake to\n# blindly hack up this file.\n\nRUN apk --no-cache add curl python3 socat\n\n# Set WORKDIR to /ambassador which is the root of all our apps then COPY\n# only requirements.txt to avoid screwing up Docker caching and causing a\n# full reinstall of all dependencies when dependencies are not changed.\nENV AMBASSADOR_ROOT=/ambassador\nWORKDIR ${AMBASSADOR_ROOT}\nCOPY requirements.txt .\n\n# Install application dependencies\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Install the application itself\nCOPY ./ ambassador\nRUN cd ambassador && python3 setup.py --quiet install\nRUN rm -rf ./ambassador\n\n# MKDIR an empty /ambassador/ambassador-config. You can dump a\n# configmap over this with no trouble, or you can let\n# annotations do the right thing\nRUN mkdir ambassador-config\n\n# COPY in a default config for use with --demo.\nCOPY default-config/ ambassador-demo-config\n\n# Fix permissions to allow running as a non root user\nRUN chgrp -R 0 ${AMBASSADOR_ROOT} && \\\n    chmod -R u+x ${AMBASSADOR_ROOT} && \\\n    chmod -R g=u ${AMBASSADOR_ROOT} /etc/passwd\n\n# COPY the entrypoint script and make it runnable.\nCOPY kubewatch.py .\nCOPY hot-restarter.py .\nCOPY start-envoy.sh .\nCOPY entrypoint.sh .\nRUN chmod 755 start-envoy.sh entrypoint.sh\n\nENTRYPOINT [ \"./entrypoint.sh\" ]\n"
}