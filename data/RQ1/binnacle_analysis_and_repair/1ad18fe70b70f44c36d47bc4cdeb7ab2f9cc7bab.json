{
  "startTime": 1674244301497,
  "endTime": 1674244301642,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Image: thingdown/blogdown\n# Base: alpine:3.5\n############################################################\n\nFROM alpine:3.5\n\nMAINTAINER Jam Risser (jamrizzi)\n\nEXPOSE 8801\n\nENV ROOT_URI=http://example.com\n\nWORKDIR /app/\n\nRUN apk add --no-cache \\\n        dnsmasq \\\n        nginx \\\n        supervisor \\\n        tini && \\\n    apk add --no-cache --virtual build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        curl \\\n        gettext-dev \\\n        git \\\n        nasm \\\n        nodejs-current \\\n        optipng && \\\n    npm install -g bower && \\\n    mkdir -p /run/nginx && \\\n    curl -f -L -o /sbin/envstamp https://github.com/jamrizzi/envstamp/releases/download/v0.1.0/envstamp && \\\n    chmod +x /sbin/envstamp && npm cache clean --force;\n\nCOPY ./package.json /app\nCOPY ./package-lock.json /app\nRUN npm install && npm cache clean --force;\nCOPY ./.bowerrc /app\nCOPY ./bower.json /app\nRUN bower install\nCOPY ./ /app\nRUN ln -sf /usr/bin/optipng /app/node_modules/optipng-bin/vendor/optipng && \\\n    mkdir /etc/supervisord && \\\n    mkdir /scripts && \\\n    mv /app/deployment/nginx.conf /etc/nginx/conf.d/default.conf && \\\n    mv /app/deployment/supervisord.conf /etc/supervisord/supervisord.conf && \\\n    mv /app/deployment/nginx.sh /scripts/nginx.sh && \\\n    cp -r /app/deployment/app/* /app/app && \\\n    npm run dist && \\\n    mv /app/dist /dist && \\\n    rm -rf /app && \\\n    mv /dist /app && \\\n    chown -R nobody:nobody /app && \\\n    apk del build-deps\n\nENTRYPOINT [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord/supervisord.conf\"]\n"
}