{
  "startTime": 1674244354601,
  "endTime": 1674244355002,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 1,
        "columnEnd": 113
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER a.sevilla@anchormen.nl\n\nENV SPARK_VERSION 2.2.0\nENV R_BASE_VERSION 3.4.3\nENV ANACONDA_VERSION 5.0.1\n\nRUN apt-get -y update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tapt-transport-https \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tdefault-jdk \\\n\t\ted \\\n\t\tfile \\\n\t\tfonts-texgyre \\\n\t\tgit \\\n\t\tless \\\n\t\tlibapparmor1 \\\n\t\t# To install httr package, the following library is needed \n\t\tlibcurl4-openssl-dev \\\n\t\tlibedit2 \\\n\t\t# To install rgdal package, the following library is needed\n\t\tlibgdal-dev \\\n\t\t# To install rgeos package, the following library is needed\n\t\tlibgeos-dev \\\n\t\t# To install RPostgreSQL package, the following library is needed\n\t\tlibpq-dev \\\n\t\t# To install rgdal package, the following library is needed\n\t\tlibproj-dev \\\n\t\t# To install git2r package, the following libraries are needed\n\t\tlibssh2-1 \\\n\t\tlibssh2-1-dev \\\n\t\t# To install httr package, the following library is needed\n\t\tlibssl-dev \\\n\t\t# To install package xml2, the following library is needed\n\t\tlibxml2-dev \\\n\t\tlocales \\\n\t\tlsb-release \\\n\t\tnano \\\n\t\topenconnect \\\n\t\topenssh-client \\\n\t\tpsmisc \\\n\t\tpython-setuptools \\\n\t\tsoftware-properties-common \\\n\t\tsudo \\\n\t\tunzip \\\n\t\tvim-tiny \\\n\t\twget \\\n\t&& rm -rf /var/lib/apt/lists/* \n\n# Configure default locale, see https://github.com/rocker-org/rocker/issues/19\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n\t&& locale-gen en_US.utf8 \\\n\t&& /usr/sbin/update-locale LANG=en_US.UTF-8\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# Spark\nRUN mkdir -p /opt \\\n    && cd /opt \\\n    && curl -f https://d3kbcqa49mib13.cloudfront.net/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz | tar -zx \\\n    && ln -s spark-${SPARK_VERSION}-bin-hadoop2.7 spark \\\n    && echo Spark ${SPARK_VERSION} installed in /opt\n\n\nADD start-common.sh start-worker.sh start-master.sh /\nRUN chmod +x /start-common.sh /start-master.sh /start-worker.sh\n\nENV JAVA_HOME /usr/lib/jvm/default-java\nENV PATH $PATH:/opt/spark/bin\nENV SPARK_HOME /opt/spark\n\n# R\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n\t&& add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/' \\\n\t&& apt-get update -y \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tr-base=${R_BASE_VERSION}* \\\n\t\tr-base-dev=${R_BASE_VERSION}* \\\n\t\tr-recommended=${R_BASE_VERSION}* \\\n        && echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n\t&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& R -e \"install.packages('devtools')\"\n\nENV R_HOME /usr/lib/R\n\n# Install additional R packages from CRAN or github\n\n# For Zeppelin\nRUN R -e \"install.packages(c('knitr', 'ggplot2', 'googleVis', 'data.table', 'Rcpp'))\"\nRUN R -e \"devtools::install_github('ramnathv/rCharts')\"\n\n# Time Series Forecast\nRUN R -e \"devtools::install_github('robjhyndman/forecast')\"\n\n# PCA Analysis\nRUN R -e \"install.packages('factoextra')\"\n\n# Python 3.6 and ANACONDA\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\ \n\twget --quiet https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh -O ~/anaconda.sh && \\ \n\t/bin/bash ~/anaconda.sh -b -p /opt/conda && \\ \n\trm ~/anaconda.sh\n\nRUN TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n\tcurl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n\tdpkg -i tini.deb && \\\n\trm tini.deb && \\\n\tapt-get clean\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nENV PATH $PATH:/opt/conda/bin\nENV PYTHON_VERSION 3.6.3\nENV PYSPARK_PYTHON python3.6\nENV PYSPARK_DRIVER_PYTHON python3.6\nENV PYTHONPATH ${SPARK_HOME}/python/:${SPARK_HOME}/python/lib/py4j-0.10.4-src.zip:${PYTHONPATH}\n\n# Packages for HDFS interaction\nRUN pip install --no-cache-dir hdfs pywebhdfs\n\n\n\n\n\n\n\n"
}