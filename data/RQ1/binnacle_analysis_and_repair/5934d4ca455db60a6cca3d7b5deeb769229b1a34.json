{
  "startTime": 1674238567236,
  "endTime": 1674238567885,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 707
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nLABEL Description=\"Ubuntu 16.04 for static Qt 5.11.2\"\n\n# Dependencies of the Qt offline installer\nRUN apt-get -y update && apt-get install --no-install-recommends -y \\\n    curl libdbus-1-3 libexpat1 \\\n    libgl1-mesa-dev libglu1-mesa-dev libfontconfig1-dev libssl-dev \\\n    libfreetype6 libgl1-mesa-glx libglib2.0-0 \\\n    libx11-6 libx11-xcb1 \\\n    g++ build-essential cmake wget git clang++-6.0 \\\n    software-properties-common \\\n    autoconf automake autopoint bison flex gperf libtool libtool-bin intltool lzip python ruby unzip p7zip-full libgdk-pixbuf2.0-dev libltdl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Hack to make clang work with Qt\nRUN ln -s /usr/bin/clang++-6.0 /usr/bin/clang++ && \\\n    ln -s /usr/bin/clang-6.0   /usr/bin/clang\n\n# Get OpenSSL\nRUN cd /opt && wget https://www.openssl.org/source/openssl-1.0.2r.tar.gz && \\\n    tar xvf openssl-1.0.2r.tar.gz && \\\n    cd openssl-1.0.2r && ./Configure linux-x86_64 && make -j$(nproc) && \\\n    cd /opt && rm openssl-1.0.2r.tar.gz\n\n# Get Qt5.11.2\nRUN cd /opt &&  \\\n    wget https://download.qt.io/archive/qt/5.11/5.11.2/single/qt-everywhere-src-5.11.2.tar.xz && \\\n    tar xvf qt-everywhere-src-5.11.2.tar.xz && \\\n    cd qt-everywhere-src-5.11.2 && \\\n    OPENSSL_LIBS='-L/opt/openssl-1.0.2r -lssl -lcrypto' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -static -prefix /opt/Qt/5.11.2/static -skip qtlocation -skip qtmacextras -skip qtpurchasing -skip qtscript -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtdatavis3d -skip qtdoc -skip qtcharts -skip qtdeclarative -skip qt3d -skip qtwebengine -skip qtandroidextras -skip qtwebview -skip qtgamepad -skip qtquickcontrols -skip qtquickcontrols2 -skip qtremoteobjects -skip qtwebview -skip qtwebchannel -skip qtwebglplugin -nomake examples -nomake tests -qt-zlib -qt-libpng -qt-xcb -qt-xkbcommon -feature-fontconfig -no-feature-getentropy -release -openssl-linked -platform linux-clang -opensource -confirm-license && rm qt-everywhere-src-5.11.2.tar.xz\n\n# Run the make multiple times, because for some reason (multithreading, probably) it fails\n# the first time.\nRUN cd /opt/qt-everywhere-src-5.11.2 && ( make -j$(nproc) || make -j4 || make )\n\nRUN mkdir -p /opt/Qt/5.11.2 && cd /opt/qt-everywhere-src-5.11.2 && make -j4 install\n\nRUN cd /opt && rm qt-everywhere-src-5.11.2.tar.xz && rm -rf qt-everywhere-src-5.11.2\n\n# Get and build MXE\nRUN cd /opt && \\\n    git clone https://github.com/mxe/mxe.git && \\\n    cd /opt/mxe && \\\n    make -j$(nproc) MXE_TARGETS=x86_64-w64-mingw32.static qtbase qtwebsockets\n\n# Add rust\nRUN apt install --no-install-recommends -y gcc-aarch64-linux-gnu && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain 1.32.0  -y\nRUN echo 'source $HOME/.cargo/env' >> $HOME/.bashrc\nRUN ~/.cargo/bin/rustup target add x86_64-pc-windows-gnu\nRUN ~/.cargo/bin/rustup target add aarch64-unknown-linux-gnu\n\n# Append the linker to the cargo config for Windows cross compile\nRUN echo \"[target.x86_64-pc-windows-gnu]\" >> ~/.cargo/config && \\\n    echo \"linker = 'x86_64-w64-mingw32.static-gcc'\" >> ~/.cargo/config\n\nRUN echo \"[target.aarch64-unknown-linux-gnu]\" >> ~/.cargo/config && \\\n    echo \"linker = '/usr/bin/aarch64-linux-gnu-gcc'\" >> ~/.cargo/config\n\nENV CC_x86_64_pc_windows_gnu=\"x86_64-w64-mingw32.static-gcc\"\nENV CC_aarch64_unknown_linux_gnu=\"aarch64-linux-gnu-gcc\"\nENV PATH=\"/opt/mxe/usr/bin:${PATH}\"\n"
}