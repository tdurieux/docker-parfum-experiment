{
  "startTime": 1674250575427,
  "endTime": 1674250575517,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using multistage build:\n# \thttps://docs.docker.com/develop/develop-images/multistage-build/\n# \thttps://whitfin.io/speeding-up-rust-docker-builds/\n####################### VAULT BUILD IMAGE  #######################\nFROM alpine as vault\n\nENV VAULT_VERSION \"v2.10.1\"\n\nENV URL \"https://github.com/dani-garcia/bw_web_builds/releases/download/$VAULT_VERSION/bw_web_$VAULT_VERSION.tar.gz\"\n\nRUN apk add --no-cache --update-cache --upgrade \\\n    curl \\\n    tar\n\nRUN mkdir /web-vault\nWORKDIR /web-vault\n\nRUN curl -f -L $URL | tar xz\nRUN ls\n\n########################## BUILD IMAGE  ##########################\n# Musl build image for statically compiled binary\nFROM clux/muslrust:nightly-2018-12-01 as build\n\n# set sqlite as default for DB ARG for backward comaptibility\nARG DB=sqlite\n\nENV USER \"root\"\n\n# Install needed libraries\nRUN apt-get update && apt-get install -y\\\n    libmysqlclient-dev\\\n    --no-install-recommends\\\n && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\n# Copies the complete project\n# To avoid copying unneeded files, use .dockerignore\nCOPY . .\n\nRUN rustup target add x86_64-unknown-linux-musl\n\n# Make sure that we actually build the project\nRUN touch src/main.rs\n\n# Build\nRUN cargo build --features ${DB} --release\n\n######################## RUNTIME IMAGE  ########################\n# Create a new stage with a minimal image\n# because we already have a binary built\nFROM alpine:3.9\n\nENV ROCKET_ENV \"staging\"\nENV ROCKET_PORT=80\nENV ROCKET_WORKERS=10\nENV SSL_CERT_DIR=/etc/ssl/certs\n\n# Install needed libraries\nRUN apk add \\\n        openssl \\\n        mariadb-connector-c \\\n        ca-certificates \\\n    && rm /var/cache/apk/*\n\nRUN mkdir /data\nVOLUME /data\nEXPOSE 80\nEXPOSE 3012\n\n# Copies the files from the context (Rocket.toml file and web-vault)\n# and the binary from the \"build\" stage to the current stage\nCOPY Rocket.toml .\nCOPY --from=vault /web-vault ./web-vault\nCOPY --from=build /app/target/x86_64-unknown-linux-musl/release/bitwarden_rs .\n\n# Configures the startup!\nCMD ./bitwarden_rs\n"
}