{
  "startTime": 1674235260010,
  "endTime": 1674235260311,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Couchbase Docker Team <docker@couchbase.com>\n\n# Install dependencies:\n#  runit: for container process management\n#  wget: for downloading .deb\n#  chrpath: for fixing curl, below\n#  tzdata: timezone info used by some N1QL functions\n# Additional dependencies for system commands used by cbcollect_info:\n#  lsof: lsof\n#  lshw: lshw\n#  sysstat: iostat, sar, mpstat\n#  net-tools: ifconfig, arp, netstat\n#  numactl: numactl\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq runit wget chrpath tzdata \\\n    lsof lshw sysstat net-tools numactl python-httplib2 && \\\n    apt-get autoremove && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nARG CB_VERSION=5.0.1\nARG CB_RELEASE_URL=https://packages.couchbase.com/releases/5.0.1\nARG CB_PACKAGE=couchbase-server-community_5.0.1-ubuntu16.04_amd64.deb\nARG CB_SHA256=44570a34323934a9e668787c26b13e8556e678de2de15052e383e5573cf34931\n\nENV PATH=$PATH:/opt/couchbase/bin:/opt/couchbase/bin/tools:/opt/couchbase/bin/install\n\n# Create Couchbase user with UID 1000 (necessary to match default\n# boot2docker UID)\nRUN groupadd -g 1000 couchbase && useradd couchbase -u 1000 -g couchbase -M\n\n# Install couchbase\nRUN export INSTALL_DONT_START_SERVER=1 && \\\n    wget -N --no-verbose $CB_RELEASE_URL/$CB_PACKAGE && \\\n    echo \"$CB_SHA256  $CB_PACKAGE\" | sha256sum -c - && \\\n    dpkg -i ./$CB_PACKAGE && rm -f ./$CB_PACKAGE\n\n# Add runit script for couchbase-server\nCOPY scripts/run /etc/service/couchbase-server/run\nRUN chown -R couchbase:couchbase /etc/service\n\n# Add dummy script for commands invoked by cbcollect_info that\n# make no sense in a Docker container\nCOPY scripts/dummy.sh /usr/local/bin/\nRUN ln -s dummy.sh /usr/local/bin/iptables-save && \\\n    ln -s dummy.sh /usr/local/bin/lvdisplay && \\\n    ln -s dummy.sh /usr/local/bin/vgdisplay && \\\n    ln -s dummy.sh /usr/local/bin/pvdisplay\n\n# Fix curl RPATH\nRUN chrpath -r '$ORIGIN/../lib' /opt/couchbase/bin/curl\n\n# Add bootstrap script\nCOPY scripts/entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"couchbase-server\"]\n\n# 8091: Couchbase Web console, REST/HTTP interface\n# 8092: Views, queries, XDCR\n# 8093: Query services (4.0+)\n# 8094: Full-text Search (4.5+)\n# 8095: Analytics (5.5+)\n# 8096: Eventing (5.5+)\n# 11207: Smart client library data node access (SSL)\n# 11210: Smart client library/moxi data node access\n# 11211: Legacy non-smart client library data node access\n# 18091: Couchbase Web console, REST/HTTP interface (SSL)\n# 18092: Views, query, XDCR (SSL)\n# 18093: Query services (SSL) (4.0+)\n# 18094: Full-text Search (SSL) (4.5+)\n# 18095: Analytics (SSL) (5.5+)\n# 18096: Eventing (SSL) (5.5+)\nEXPOSE 8091 8092 8093 8094 8095 8096 11207 11210 11211 18091 18092 18093 18094 18095 18096\nVOLUME /opt/couchbase/var\n\n"
}