{
  "startTime": 1674252548917,
  "endTime": 1674252549476,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "ARG PLEX_VER=1.16.0.1226-7eb2c8f6f\nARG PLEX_SHA=edc394304a7f40575b16320ee35b6490eaa6b1b1\nARG LIBGCC1_VER=6.3.0-18+deb9u1\nARG XMLSTAR_VER=1.6.1\nARG CURL_VER=curl-7_65_1\nARG ZLIB_VER=1.2.11\n\nFROM spritsail/debian-builder:stretch-slim as builder\n\nARG PLEX_VER\nARG PLEX_SHA\nARG LIBGCC1_VER\nARG LIBXML2_VER=v2.9.8\nARG LIBXSLT_VER=v1.1.32\nARG XMLSTAR_VER\nARG LIBRE_VER=2.8.2\nARG CURL_VER\nARG ZLIB_VER\n\nARG MAKEFLAGS=-j2\n\n# Download and build zlib\nWORKDIR /tmp/zlib\nRUN curl -sSf https://www.zlib.net/zlib-$ZLIB_VER.tar.xz \\\n        | tar xJ --strip-components=1 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --shared \\\n && make DESTDIR=/prefix install\n\n# Download and build libxml2\nWORKDIR /tmp/libxml2\nRUN git clone https://gitlab.gnome.org/GNOME/libxml2.git --branch $LIBXML2_VER --depth 1 . \\\n && ./autogen.sh \\\n        --prefix=/usr \\\n        --with-zlib=/prefix/usr \\\n        --without-catalog \\\n        --without-docbook \\\n        --without-ftp \\\n        --without-http \\\n        --without-iconv \\\n        --without-iso8859x \\\n        --without-legacy \\\n        --without-modules \\\n        --without-python \\\n && make DESTDIR=/prefix install\n\n# Download and build libxslt\nWORKDIR /tmp/libxslt\nRUN git clone https://gitlab.gnome.org/GNOME/libxslt.git --branch $LIBXSLT_VER --depth 1 . \\\n && ./autogen.sh \\\n        --prefix=/usr \\\n        --with-zlib=/prefix/usr \\\n        --with-libxml-src=\"../libxml2\" \\\n        --without-crypto \\\n        --without-plugins \\\n        --without-python \\\n && make DESTDIR=/prefix install\n\n# Download and build xmlstarlet\nADD xmlstarlet-*.patch /tmp\nWORKDIR /tmp/xmlstarlet\nRUN git clone git://git.code.sf.net/p/xmlstar/code --branch $XMLSTAR_VER --depth 1 . \\\n && git apply /tmp/xmlstarlet*.patch \\\n && autoreconf -sif \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --disable-build-docs \\\n        --with-libxml-prefix=/prefix/usr \\\n        --with-libxslt-prefix=/prefix/usr \\\n && make DESTDIR=/prefix install\n\n# Download and build LibreSSL as a cURL dependency\nWORKDIR /tmp/libressl\nRUN curl -f -sSL https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRE_VER}.tar.gz \\\n        | tar xz --strip-components=1 \\\n    # Install to the default system directories so cURL can find it\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n && make install\n\n# Download and build curl\nWORKDIR /tmp/curl\nRUN git clone https://github.com/curl/curl.git --branch $CURL_VER --depth 1 . \\\n && autoreconf -sif \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --enable-ipv6 \\\n        --enable-optimize \\\n        --enable-symbol-hiding \\\n        --enable-versioned-symbols \\\n        --enable-threaded-resolver \\\n        --with-ssl \\\n        --with-zlib=/prefix/usr \\\n        --disable-crypto-auth \\\n        --disable-curldebug \\\n        --disable-dependency-tracking \\\n        --disable-dict \\\n        --disable-gopher \\\n        --disable-imap \\\n        --disable-libcurl-option \\\n        --disable-ldap \\\n        --disable-ldaps \\\n        --disable-manual \\\n        --disable-ntlm-wb \\\n        --disable-pop3 \\\n        --disable-rtsp \\\n        --disable-smb \\\n        --disable-smtp \\\n        --disable-sspi \\\n        --disable-telnet \\\n        --disable-tftp \\\n        --disable-tls-srp \\\n        --disable-verbose \\\n        --without-axtls \\\n        --without-libmetalink \\\n        --without-libpsl \\\n        --without-librtmp \\\n        --without-winidn \\\n && make DESTDIR=/prefix install\n\nWORKDIR /prefix\n\n# Fetch Plex and required libraries\nRUN curl -fsSL https://ftp.de.debian.org/debian/pool/main/g/gcc-${LIBGCC1_VER:0:1}/libgcc1_${LIBGCC1_VER}_amd64.deb | dpkg-deb -x - . \\\n && curl -fsSL -o plexmediaserver.deb https://downloads.plex.tv/plex-media-server-new/${PLEX_VER}/debian/plexmediaserver_${PLEX_VER}_amd64.deb \\\n\n && echo \"$PLEX_SHA  plexmediaserver.deb\" | sha1sum -c - \\\n && dpkg-deb -x plexmediaserver.deb . \\\n\n && cd usr/lib/plexmediaserver \\\n && rm -f \\\n        \"Plex Media Server Tests\" \\\n        MigratePlexServerConfig.sh \\\n        lib/libcrypto.so* \\\n        lib/libcurl.so* \\\n        lib/libssl.so* \\\n        lib/libxml2.so* \\\n        lib/libxslt.so* \\\n        lib/libz.so* \\\n        Resources/start.sh \\\n    # Place shared libraries in usr/lib so they can be actually shared\n && mv lib/* ../\n\n    # Strip all unneeded symbols for optimum size\nRUN find -exec sh -c 'file \"{}\" | grep -q ELF && strip --strip-debug \"{}\"' \\; \\\n    # Disable executable stack in all libraries. This should already be the case\n    # but it seems libgnsdk is not playing along \\\n && apt-get -y --no-install-recommends install execstack \\\n && execstack -c usr/lib/*.so* \\\n\n && mkdir -p /output/usr/lib /output/usr/bin \\\n && mv lib/x86_64-linux-gnu/*.so* \\\n       usr/lib/plexmediaserver \\\n       usr/lib/*.so* \\\n       /output/usr/lib \\\n && mv usr/bin/curl /output/usr/bin \\\n && mv usr/bin/xml /output/usr/bin/xmlstarlet && rm -rf /var/lib/apt/lists/*;\n\nADD entrypoint /output/usr/local/bin/\nADD *.sh /output/usr/local/bin/\nRUN chmod +x /output/usr/local/bin/*\n\n#=========================\n\nFROM spritsail/libressl\n\nARG PLEX_VER\nARG LIBSTDCPP_VER\nARG LIBGCC1_VER\nARG CURL_VER\nARG XMLSTAR_VER\n\nLABEL maintainer=\"Spritsail <plex@spritsail.io>\" \\\n      org.label-schema.vendor=\"Spritsail\" \\\n      org.label-schema.name=\"Plex Media Server\" \\\n      org.label-schema.url=\"https://www.plex.tv/downloads/\" \\\n      org.label-schema.description=\"Tiny Docker image for Plex Media Server, built on busybox\" \\\n      org.label-schema.version=${PLEX_VER} \\\n      io.spritsail.version.plex=${PLEX_VER} \\\n      io.spritsail.version.curl=${CURL_VER} \\\n      io.spritsail.version.libgcc1=${LIBGCC1_VER} \\\n      io.spritsail.version.libstdcpp=${LIBSTDCPP_VER} \\\n      io.spritsail.version.xmlstarlet=${XMLSTAR_VER}\n\nWORKDIR /usr/lib/plexmediaserver\n\nCOPY --from=builder /output/ /\n\nENV SUID=900 SGID=900 \\\n    PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=\"6\" \\\n    PLEX_MEDIA_SERVER_MAX_STACK_SIZE=\"3000\" \\\n    PLEX_MEDIA_SERVER_TMPDIR=\"/tmp\" \\\n    PLEX_MEDIA_SERVER_HOME=\"/usr/lib/plexmediaserver\" \\\n    PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=\"/var/lib/plexmediaserver\"\n\nHEALTHCHECK --interval=10s --timeout=5s \\\n    CMD [ \"wget\", \"-O\", \"/dev/null\", \"-T\", \"10\", \"-q\", \"localhost:32400/identity\" ]\n\nEXPOSE 32400\n\nVOLUME [\"/config\", \"/transcode\"]\n\nRUN mkdir -p \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR\" \\\n && ln -sfv /config \"$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server\"\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"/usr/local/bin/entrypoint\"]\n"
}