{
  "startTime": 1674242038718,
  "endTime": 1674242038803,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# In order to support graphical interfaces,\n# this should be run with\n# docker run -it --rm \\\n#     -e DISPLAY=$DISPLAY \\\n#     -v /tmp/.X11-unix:/tmp/.X11-unix \\ \n#     ros-indigo-full-catkin <cmd>\n#\n# The -e and -v commands are needed to display on the host X server.\n# For hardware support, you will also need:\n#  --privileged   (to access the graphics card)\n#  It may also be required to call\n#  $ xhost +\n#  before running the container.\n\nFROM jenniferbuehler/ros-indigo-full-catkin\n\nMAINTAINER Jennifer Buehler\n\n# Install system essentials\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    cmake \\\n    libsoqt4-dev \\\n    libcoin80-dev \\\n    libqt4-dev \\\n    libblas-dev \\\n    liblapack-dev \\\n    libqhull-dev \\\n    sudo \\\n    vim \\\n    && rm -rf /var/lib/apt/lists/*\n\n# need g++ for compiling with cmake even if gcc\n# is already installed\nRUN apt-get update && apt-get install --no-install-recommends -y g++ \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install required ROS dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-indigo-eigen-conversions \\\n    ros-indigo-household-objects-database \\\n    ros-indigo-household-objects-database-msgs \\\n    ros-indigo-manipulation-msgs \\\n    ros-indigo-object-recognition-msgs \\\n    ros-indigo-roslint \\\n    && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nCOPY graspit_tools /catkin_ws/src/graspit_tools\nCOPY grasp_planning_graspit_ros /catkin_ws/src/grasp_planning_graspit_ros\nCOPY grasp_planning_graspit /catkin_ws/src/grasp_planning_graspit\nCOPY grasp_planning_graspit_msgs /catkin_ws/src/grasp_planning_graspit_msgs\nCOPY urdf2graspit /catkin_ws/src/urdf2graspit\nCOPY jaco_graspit_sample /catkin_ws/src/jaco_graspit_sample\n\n# Build\nRUN bin/bash -c \"source /.bashrc \\\n    && cd /catkin_ws \\\n    && catkin_make \\\n    && catkin_make install\"\n\n# set GRASPIT environment to /graspit_home\nRUN bin/bash -c \"mkdir -p /graspit_home/models/robots\"\nRUN bin/bash -c \"mkdir -p /graspit_home/models/objects\"\nRUN bin/bash -c \"mkdir -p /graspit_home/worlds\"\nENV GRASPIT /graspit_home\n\nRUN bin/bash -c \"source .bashrc\"\n\nCMD [\"bash\",\"-l\"]\n"
}