{
  "startTime": 1674253178805,
  "endTime": 1674253178963,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA=\"9.0\"\nARG CUDNN=\"7\"\n\nFROM nvidia/cuda:${CUDA}-cudnn${CUDNN}-devel-ubuntu16.04\n\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\n\nRUN apt-get update && apt-get install -y --no-install-recommends --allow-downgrades --allow-change-held-packages \\\n\t\tapt-transport-https \\\n\t\tapt-utils \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        git \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libglib2.0-0 \\\n        libxext6 \\\n        libsm6 \\\n        libxrender-dev \\\n        mercurial \\\n        subversion \\\n        locales \\\n        software-properties-common \\\n        tmux \\\n        unzip \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nCOPY conda_requirements.txt .\nRUN conda install --yes \\\n    -c conda-forge \\\n    -c pytorch \\\n    -c menpo \\\n    --file conda_requirements.txt \\\n\t&& conda clean -tipsy\n\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# install pycocotools\nRUN git clone https://github.com/cocodataset/cocoapi.git \\\n && cd cocoapi/PythonAPI \\\n && python setup.py build_ext install\n\n# install PyTorch Detection\nARG FORCE_CUDA=\"1\"\nENV FORCE_CUDA=${FORCE_CUDA}\nRUN git clone https://github.com/facebookresearch/maskrcnn-benchmark.git \\\n && cd maskrcnn-benchmark \\\n && python setup.py build develop\n\nCOPY tmux.conf /root/.tmux.conf\nWORKDIR /workspace\nCMD /bin/bash"
}