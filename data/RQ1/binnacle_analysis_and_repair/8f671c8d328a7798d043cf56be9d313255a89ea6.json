{
  "startTime": 1674244749289,
  "endTime": 1674244749516,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk as builder\n\nCOPY . /build\nWORKDIR /build\nRUN \\\n  echo \"Install Maven 3.3.x\" \\\n  && curl -f -sL https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz | tar -xz -C /opt \\\n  && echo \"Link current Maven\" \\\n  && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n  && echo \"\\ncurrent maven version:\" \\\n  && /opt/maven/bin/mvn --version \\\n  && echo \"install yarn\" \\\n  && apt-get update -y \\\n  && apt-get install --no-install-recommends -y apt-transport-https curl \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  && apt-get update -y \\\n  && curl -f -sL https://deb.nodesource.com/setup_9.x | bash - \\\n  && apt-get install --no-install-recommends -y nodejs yarn \\\n  && curl -f -L https://www.npmjs.com/install.sh | sh \\\n  && echo \"\\ncurrent yarn version:\" \\\n  && npm install -g npm \\\n  && yarn --version \\\n  && echo \"fetch jai-core to fix bug with missing maven artifacts\" \\\n  && /opt/maven/bin/mvn dependency:get -DremoteRepositories=http://maven.geotoolkit.org -Dartifact=javax.media:jai_core:1.1.3 -Ddest=/tmp && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\nRUN \\\n  ./sbt \"project workbench\" universal:package-zip-tarball || echo \"\" \\\n  && ./sbt \"project workbench\" universal:package-zip-tarball || echo \"\"\nRUN \\\n  mkdir -p /build/app \\\n  && tar -xvzf /build/silk-workbench/target/universal/silk-workbench*.tgz -C /build/app && rm /build/silk-workbench/target/universal/silk-workbench*.tgz\n\nFROM openjdk:8u151-jre\nENV \\\n  SILK_HOME=\"/opt/silk\" \\\n  WORKDIR=\"/opt/silk/workspace\" \\\n  # set JAVA OPTIONS\n  # provide a random env better suited for headless work such as docker images \\\n  # http:\\/\\/www.labouisse.com\\/misc\\/2014\\/06\\/19\\/tomcat-startup-time-surprises \\\n  DEFAULT_JAVA_OPTS=\"-server -Djava.security.egd=file:/dev/./urandom\" \\\n  JAVA_OPTS=\"-Xms1g -Xmx2g\" \\\n  # configure application port and expose it\n  PORT=80 \\\n  SERVER_CONTEXTPATH=\"/\"\n\n# add configuration & webapp\nCOPY --from=builder /build/app/silk-workbench* /silk-workbench\n\n# expose port\nEXPOSE ${PORT}\n\n# set working dir\nWORKDIR ${WORKDIR}\nVOLUME \"${WORKDIR}\"\n\nHEALTHCHECK --interval=5s --timeout=10s --retries=20 \\\n  CMD curl \"http://localhost:${PORT}${SERVER_CONTEXTPATH}\"\n\n# start application\nCMD /silk-workbench/bin/silk-workbench -Dplay.server.http.port=${PORT} -Dpidfile.path=/dev/null\n"
}