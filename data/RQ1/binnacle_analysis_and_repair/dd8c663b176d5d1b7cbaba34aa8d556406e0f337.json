{
  "startTime": 1674249154319,
  "endTime": 1674249154423,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.6.6-alpine\n\nARG APP_NAME=hello\nARG PHOENIX_SUBDIR=.\nENV MIX_ENV=prod REPLACE_OS_VARS=true TERM=xterm\nWORKDIR /opt/app\nRUN apk update \\\n    && apk --no-cache --update add nodejs nodejs-npm \\\n    && mix local.rebar --force \\\n    && mix local.hex --force\nCOPY . .\n\nRUN mix do deps.get, deps.compile, compile\nRUN cd ${PHOENIX_SUBDIR}/assets \\\n    && npm install \\\n    && ./node_modules/brunch/bin/brunch build -p \\\n    && cd .. \\\n    && mix phx.digest && npm cache clean --force;\nRUN mix release --env=prod --verbose \\\n    && mv _build/prod/rel/${APP_NAME} /opt/release \\\n    && mv /opt/release/bin/${APP_NAME} /opt/release/bin/start_server\n\nFROM alpine:latest\nRUN apk update && apk --no-cache --update add bash openssl-dev ca-certificates\n\nRUN addgroup -g 1000 appuser && \\\n    adduser -S -u 1000 -G appuser appuser\n\nRUN mkdir -p /opt/app/var\nRUN chown appuser /opt/app/var\n\nUSER appuser\n\nENV MIX_ENV=prod REPLACE_OS_VARS=true\nWORKDIR /opt/app\nCOPY --from=0 /opt/release .\nENV RUNNER_LOG_DIR /var/log\nCMD [\"/opt/app/bin/start_server\", \"foreground\", \"boot_var=/tmp\"]\n"
}