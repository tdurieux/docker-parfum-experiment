{
  "startTime": 1674237121828,
  "endTime": 1674237122126,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 56,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "# This file was generated by ansible for {{ansible_fqdn}}\n# This Dockerfile is used to build an image containing basic stuff to be used as a Jenkins slave build node.\n#FROM        ubuntu:latest\nFROM        ubuntu:14.04\n\n# Volume can be accessed outside of container\nVOLUME      [{{ docker_volume_directory }}]\n\nMAINTAINER  Alban Andrieu \"https://github.com/AlbanAndrieu\"\n\nENV\t\t\tDEBIAN_FRONTEND noninteractive\nENV         JENKINS_HOME {{ jenkins_home }}\nENV         WORKDIR /home/vagrant\nENV         ANSIBLE_LIBRARY {{ docker_working_directory }}/library\nENV         PYTHONPATH {{ docker_working_directory }}/lib:$PYTHON_PATH\nENV         PATH {{ docker_working_directory }}/bin:/sbin:/usr/sbin:/usr/bin:/bin:$PATH\n\n# Working dir\nWORKDIR {{ docker_working_directory }}\n\n# Because docker replaces /sbin/init: https://github.com/dotcloud/docker/issues/1024\nRUN dpkg-divert --local --rename --add /sbin/initctl\n\n# Make sure the package repository is up to date.\n#RUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\n#RUN echo \"deb http://archive.ubuntu.com/ubuntu trusty main universe\" > /etc/apt/sources.list\nRUN apt-get clean && apt-get -y update\n\n# COPY\n#COPY /workspace/users/albandri10/env/ansible/roles/jenkins-slave $WORKDIR\n\n#RUN git pull && git submodule init && git submodule update && git submodule status\n#RUN git submodule foreach git checkout master\n\nADD roles $WORKDIR/roles\n\nRUN ls -lrta $WORKDIR/roles/*\n\n#ADD defaults $WORKDIR/ansible-jenkins-slave/defaults\n#ADD meta $WORKDIR/ansible-jenkins-slave/meta\n#ADD files $WORKDIR/ansible-jenkins-slave/files\n##ADD handlers $WORKDIR/ansible-jenkins-slave/handlers\n#ADD tasks $WORKDIR/ansible-jenkins-slave/tasks\n#ADD templates $WORKDIR/ansible-jenkins-slave/templates\n#ADD vars $WORKDIR/ansible-jenkins-slave/vars\n\n# Here we continue to use add because\n# there are a limited number of RUNs\n# allowed.\nADD hosts /etc/ansible/hosts\nADD jenkins-slave-docker.yml $WORKDIR/jenkins-slave.yml\n\n# Install ansible\nRUN apt-get install --no-install-recommends -y python-dev python-yaml python-jinja2 git unzip python-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir paramiko PyYAML jinja2 httplib2 boto && pip install --no-cache-dir ansible\n#RUN git clone http://github.com/ansible/ansible.git {{ docker_working_directory }}\n#RUN mkdir {{ docker_working_directory }}\n\n# Install JDK 7 (latest edition)\n#RUN apt-get install -y --no-install-recommends openjdk-7-jdk\n\n# Add user jenkins to the image\n#RUN         adduser --quiet jenkins --home {{ jenkins_home }}\n# Set password for the jenkins user (you may want to alter this).\n#RUN         echo jenkins:jenkins | chpasswd\n\n# Execute\nRUN         ansible-playbook $WORKDIR/jenkins-slave.yml -c local\n\n# Install a basic SSH server\nRUN apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /var/run/sshd\n#RUN         apt-get update && \\\n#            apt-get install -y openssh-server openjdk-7-jre-headless\n\n# Clean up APT when done.\nRUN         apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Standard SSH port\nEXPOSE      22\n# Standard MySQL port for Sonar\n#EXPOSE      3306\n\n#ENTRYPOINT  [\"/etc/init.d/jenkins-swarm-client\"]\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n#CMD [\"-g\", \"deamon off;\"]\n"
}