{
  "startTime": 1674241121521,
  "endTime": 1674241121836,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER interro_gator\n\n# set up a workspace so we can cache python stuff\nRUN rm -rf /.src && mkdir /.src\nCOPY requirements.txt /.src/requirements.txt\n\n# add corenlp\n# COPY ~/corenlp /.src\n\n# use the workspace for everything\nWORKDIR /.src\n\n# install the basics\nRUN apk add --no-cache --update \\\n    python3 \\\n    python-dev \\\n    py-pip \\\n    build-base \\\n    git \\\n    libpng \\\n    freetype \\\n    pkgconf \\\n    libxft-dev \\\n    libxml2-dev \\\n    readline\n\n# install java for parsing\nRUN apk --update --no-cache add openjdk8-jre-base\n\n# needed for numpy\nRUN ln -s /usr/include/locale.h /usr/include/xlocale.h\nRUN ln -s /usr/include/libxml2/libxml/xmlversion.h /usr/include/xmlversion.h\nRUN mkdir /usr/include/libxml\nRUN ln -s /usr/include/libxml2/libxml/xmlversion.h /usr/include/libxml/xmlversion.h\nRUN ln -s /usr/include/libxml2/libxml/xmlexports.h /usr/include/xmlexports.h\nRUN ln -s /usr/include/libxml2/libxml/xmlexports.h /usr/include/libxml/xmlexports.h\n\n# stop pip from complaining\nRUN pip install --no-cache-dir --upgrade pip\n\n# python heavyweight stuff\nRUN pip install --no-cache-dir cython\nRUN pip install --no-cache-dir numpy\nRUN pip install --no-cache-dir colorama\n\n# remove old stuff --- not sure it does much\nRUN rm -rf /var/cache/apk/*\n\n# get matplotlib github version\nRUN git clone git://github.com/matplotlib/matplotlib.git\nRUN cd matplotlib && python setup.py install && cd ..\n\n# install corpkit requirements\nRUN pip install --no-cache-dir -r requirements.txt\n\nRUN pip install --no-cache-dir docker-py\n\n# add everything from corpkit to working dir\nCOPY . /.src\n\n# install corpkit itself\nRUN python /.src/setup.py install\n\n# download might be needed for licence issues\n#RUN python -m corpkit.download.corenlp /\n\nCMD python -m corpkit.env docker=corpkit\n\nWORKDIR /projects\n\n"
}