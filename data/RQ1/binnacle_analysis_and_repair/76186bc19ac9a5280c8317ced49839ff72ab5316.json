{
  "startTime": 1674239318836,
  "endTime": 1674239318942,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8 AS base\n\n# Install python and modules that can't be installed via pip\n# Delete the uncompiled variants to shave off ~10MB of the docker file\nRUN addgroup -S -g 9898 pypiserver \\\n    && adduser -S -u 9898 -G pypiserver pypiserver \\\n    && mkdir -p /data/packages \\\n    && chown -R pypiserver:pypiserver /data/packages \\\n    # Set the setgid bit so anything added here gets associated with the\n    # pypiserver group\n    && chmod g+s /data/packages \\\n    && apk --no-cache add python py2-bcrypt py2-cffi py2-six \\\n    && find /usr -name \"*.py\" ! -name \"__*\" -exec rm {} \\;\n\nFROM base as builder\n\n# Copy the requirements and install them\n# Do this in a separate image in a separate directory\n# to not have all the pip stuff in the final image\nCOPY docker-requirements.txt /requirements.txt\n\n# Install python packages\nRUN apk add --no-cache py2-pip \\\n    && mkdir /install \\\n    && pip install --no-cache-dir --prefix=/install --requirement /requirements.txt \\\n    && find /install -name \"*.py\" ! -name \"__*\" -exec rm {} \\;\n\nFROM base\n\n# Copy the libraries installed via pip\nCOPY --from=builder /install /usr\n\nCOPY . /code\n\nRUN apk add --no-cache py2-setuptools \\\n    && cd code \\\n    && python setup.py install \\\n    && cd / \\\n    && rm -rf code\n\nVOLUME /data/packages\nUSER pypiserver\nWORKDIR /data\nEXPOSE 8080\n\nENTRYPOINT [\"pypi-server\", \"-p\", \"8080\"]\nCMD [\"packages\"]\n"
}