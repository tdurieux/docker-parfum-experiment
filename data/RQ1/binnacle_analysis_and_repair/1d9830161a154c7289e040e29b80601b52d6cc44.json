{
  "startTime": 1674235443351,
  "endTime": 1674235443677,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 25,
        "columnEnd": 202
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 25,
        "columnEnd": 202
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y wget libc-bin build-essential gcc git g++ unixodbc pkg-config unixodbc-dev libaio1 openssh-server curl python-pip bash lsb-release bash-completion pkg-config && rm -rf /var/lib/apt/lists/*;\n\nENV NOTVISIBLE \"in users profile\"\nRUN rm /etc/ssh/ssh_host_rsa_key\nRUN rm /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa && \\\n    ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa\nRUN echo \"root:dev\" | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir docker-compose\n\nWORKDIR /\n\n\nRUN wget https://www.unixodbc.org/unixODBC-2.3.5.tar.gz && \\\n    tar xzvf unixODBC-2.3.5.tar.gz && \\\n    cd /usr/local/lib/ && \\\n    ln -s libodbc.so.2.0.0 libodbc.so.1 && \\\n    ln -s libodbcinst.so.2.0.0 libodbcinst.so.1 && \\\n    cd - && \\\n    cd unixODBC-2.3.5 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --sysconfdir=/etc --disable-gui --disable-drivers --enable-iconv --with-iconv-char-enc=UTF8 --with-iconv-ucode-enc=UTF16LE && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf unixODBC-2.3.5 unixODBC-2.3.5.tar.gz\n\n\n\n\n\nWORKDIR /usr/local\nRUN wget https://download.docker.com/linux/static/stable/x86_64/docker-18.09.1.tgz && \\\n    tar xvzf docker-18.09.1.tgz && \\\n    rm docker-18.09.1.tgz && \\\n    cp /usr/local/docker/docker /usr/local/bin/docker\n\nRUN wget https://dl.google.com/go/go1.12.1.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go1.12.1.linux-amd64.tar.gz && \\\n    rm go1.12.1.linux-amd64.tar.gz && \\\n    ln -s /usr/local/go/bin/go /usr/local/bin/go\n\n\nWORKDIR /\nRUN git clone https://github.com/viant/endly.git\nCOPY dep.tar.gz .\nRUN tar xvzf dep.tar.gz && \\\n    rm dep.tar.gz && \\\n    cp oci8.pc /endly/endly && \\\n    cp oci8.pc /usr/lib/oracle/12.2/client64/lib/\n\n\nWORKDIR /endly/endly\nENV LD_LIBRARY_PATH=/usr/lib/oracle/12.2/client64/lib/\nENV PKG_CONFIG_PATH=/endly/endly\n\nRUN sed -i 's/\\/\\/cgo/ /g' /endly/bootstrap/bootstrap.go\nRUN go build endly.go\nRUN cp endly /usr/local/bin/\n\nWORKDIR /\nRUN tar cvzf /compact.tar.gz /usr/local/bin/endly  /usr/local/bin/docker /usr/local/bin/docker-compose \\\n    /usr/bin/python2.7 /usr/bin/python2 /usr/bin/python /usr/lib/python2.7 /usr/local/lib/python2.7/dist-packages \\\n    /usr/local/lib/l* /etc/vertica.ini /etc/odbcinst.ini /opt/vertica /usr/lib/oracle /usr/include/oracle /etc/environment\n\n\n\nRUN [ \"/bin/bash\", \"-c\", \"mkdir -p /var/run/sshd\" ]\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]"
}