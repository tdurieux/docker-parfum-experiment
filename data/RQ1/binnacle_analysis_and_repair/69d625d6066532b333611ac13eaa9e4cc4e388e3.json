{
  "startTime": 1674235930657,
  "endTime": 1674235931133,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 112,
        "columnEnd": 123
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 147
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 140,
        "columnEnd": 151
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 64,
        "columnEnd": 90
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 108,
        "columnEnd": 135
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 97,
        "columnEnd": 124
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 80,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux1_x86_64@sha256:b03e30ce7f306d711c6e60bf6cc3313fee40bfed84d2774deeb608fabc410031\nRUN yum install -y zlib-devel bzip2-devel flex && rm -rf /var/cache/yum\n\n############\n# CMake\n############\n\n# Need to build this from source, since the binaries from Kitware don't\n# run with the old version of the libraries in this Centos version\nRUN curl -f -OL https://cmake.org/files/v3.7/cmake-3.7.2.tar.gz && tar xfz cmake-3.7.2.tar.gz && cd cmake-3.7.2 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j2 install && rm cmake-3.7.2.tar.gz\nRUN rm -rf cmake-3.7.2.tar.gz cmake-3.7.2\n\n\n############\n# HDF5\n############\n\nRUN curl -f -OL https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.17/src/hdf5-1.8.17.tar.bz2 && tar xfj hdf5-1.8.17.tar.bz2 && rm hdf5-1.8.17.tar.bz2\nRUN cd hdf5-1.8.17 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=-fPIC CXXFLAGS=-fPIC --prefix=/usr/local --with-pic --disable-shared --with-zlib=/usr/include/,/usr/lib64/ && make -j2 install\n\n# --disable-shared doesn't add libz to the archive, so it\n# must be done manually at the end, there aren't any collisions in\n# the .a file, so currently safe\nRUN cd hdf5-1.8.17 && ar x /usr/lib64/libz.a && ar r /usr/local/lib/libhdf5.a *.o\nRUN rm -rf hdf5-1.8.17.tar.bz2 hdf5-1.8.17\n\n\n############\n# Boost\n############\n\nRUN curl -f -OL https://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz && tar xfz boost_1_59_0.tar.gz && rm boost_1_59_0.tar.gz\nRUN cd boost_1_59_0 && sed -i -e \"s/_PyUnicode_AsString/(void*)_PyUnicode_AsString/\" libs/python/src/converter/builtin_converters.cpp\nRUN cd boost_1_59_0 && ./bootstrap.sh --with-libraries=date_time,iostreams,filesystem,program_options,regex,serialization,system,test && ./b2 -s NO_BZIP2=1 -j2 -q cxxflags=-fPIC cflags=-fPIC threading=multi link=static --build-type=minimal install\nRUN cd boost_1_59_0 && ./b2 --clean\nRUN rm -rf boost_1_59_0.tar.gz # don't delete build folder, needed to build boost.python for different python versions on-the-fly\n\n############\n# Doxygen\n############\n\n# Needed for docstrings generation and system doxygen is too old\n# after 1.8.6, we can't use anymore system flex, see https://stackoverflow.com/questions/20844635\n\nRUN curl -f -OL https://github.com/doxygen/doxygen/archive/Release_1_8_5.tar.gz && tar xfz Release_1_8_5.tar.gz && cd doxygen-Release_1_8_5 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j2 && make install && rm Release_1_8_5.tar.gz\nRUN rm -rf Release_1_8_5 doxygen-Release_1_8_5\n\n"
}