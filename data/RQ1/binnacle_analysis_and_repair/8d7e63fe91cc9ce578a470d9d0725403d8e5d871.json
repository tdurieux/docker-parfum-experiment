{
  "startTime": 1674234817291,
  "endTime": 1674234817432,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM manageiq/manageiq-pods:backend-latest\nMAINTAINER ManageIQ https://github.com/ManageIQ/manageiq-appliance-build\n\n## Set build ARGs\nARG REF=master\n\n## Set ENV, LANG only needed if building with docker-1.8\nENV SUI_ROOT=/opt/manageiq/manageiq-ui-service\n\n## Atomic/OpenShift Labels\nLABEL name=\"manageiq\" \\\n      vendor=\"ManageIQ\" \\\n      version=\"Master\" \\\n      release=${REF} \\\n      url=\"http://manageiq.org/\" \\\n      summary=\"ManageIQ appliance image\" \\\n      description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.k8s.display-name=\"ManageIQ\" \\\n      io.k8s.description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.openshift.expose-services=\"80:http\" \\\n      io.openshift.tags=\"ManageIQ,miq,manageiq\"\n\n## Install EPEL repo, yum necessary packages for the build without docs, clean all caches\nRUN yum -y install centos-release-scl-rh && \\\n    yum -y install httpd --setopt=tsflags=nodocs && \\\n    yum clean all && rm -rf /var/cache/yum\n\n## GIT clone service UI repo (SUI)\nRUN mkdir -p ${SUI_ROOT} && \\\n    curl -f -L https://github.com/ManageIQ/manageiq-ui-service/tarball/${REF} | tar vxz -C ${SUI_ROOT} --strip 1\n\n## Setup environment\nRUN rm -f /etc/httpd/conf.d/ssl.conf && \\\n    rm -f /etc/httpd/conf.d/manageiq-http*.conf\n\n## Change workdir to application root, build/install gems\nWORKDIR ${APP_ROOT}\nRUN source /etc/default/evm && \\\n    export RAILS_USE_MEMORY_STORE=\"true\" && \\\n    rake update:ui && \\\n    bin/rails log:clear tmp:clear && \\\n    rake evm:compile_assets && \\\n    # Cleanup install artifacts\n    npm cache clean --force && \\\n    bower cache clean && \\\n    rm -rvf ${APP_ROOT}/tmp/cache/assets && \\\n    rm -vf ${APP_ROOT}/log/*.log\n\n## Build SUI\nRUN source /etc/default/evm && \\\n    cd ${SUI_ROOT} && \\\n    yarn install --production && \\\n    yarn run build && \\\n    yarn cache clean\n\n## Expose required container ports\nEXPOSE 80\n\nCOPY container-assets/check-dependent-services.sh /bin\nCOPY container-assets/manageiq-http.conf /etc/httpd/conf.d\n\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--single-child\", \"--\"]\nCMD [\"entrypoint\"]\n"
}