{
  "startTime": 1674243923306,
  "endTime": 1674243923429,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 0,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 0,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 0,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 0,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 \n# Var for first config \n# Server Name \nENV SESSIONNAME \"Ark Docker\" \n# Map name \nENV SERVERMAP \"TheIsland\" \n# Server password \nENV SERVERPASSWORD \"\" \n# Admin password \nENV ADMINPASSWORD \"adminpassword\" \n# Nb Players \nENV NBPLAYERS 70 \n# If the server is updating when start with docker start \nENV UPDATEONSTART 1 \n# if the server is backup when start with docker start \nENV BACKUPONSTART 1 \n# Server PORT (you can't remap with docker, it doesn't work) \nENV SERVERPORT 27015 \n# Steam port (you can't remap with docker, it doesn't work) \nENV STEAMPORT 7778 \n# if the server should backup after stopping \nENV BACKUPONSTOP 0 \n# If the server warn the players before stopping \nENV WARNONSTOP 0 \n# UID of the user steam \nENV UID 1000 \n# GID of the user steam \nENV GID 1000 \n# Install dependencies \nRUN apt-get update && \\\n apt-get install --no-install-recommends -y perl-modules curl lib32gcc1 lsof sudo libc6-i386 && rm -rf /var/lib/apt/lists/*;\n\n# Run commands as the steam user \nRUN adduser \\  \n\\--disabled-login \\  \n\\--shell /bin/bash \\  \n\\--gecos \"\" \\  \nsteam \n# Add to sudo group \nRUN usermod -a -G sudo steam \n\n# Copy & rights to folders \nCOPY run.sh /home/steam/run.sh \nCOPY user.sh /home/steam/user.sh \nCOPY crontab /home/steam/crontab \nCOPY arkmanager-user.cfg /home/steam/arkmanager.cfg \nCOPY GameUserSettings.ini /home/steam/GameUserSettings.ini \n\nRUN touch /root/.bash_profile \nRUN chmod 777 /home/steam/run.sh \nRUN chmod 777 /home/steam/user.sh \nRUN mkdir /ark \n\n# install arkmanager \nRUN curl -f -sL https://git.io/vtf5N | sudo bash -s steam\n\n# Allow crontab to call arkmanager \nRUN ln -s /usr/local/bin/arkmanager /usr/bin/arkmanager \n\n# Define default config file in /etc/arkmanager \nCOPY arkmanager-system.cfg /etc/arkmanager/arkmanager.cfg \n\n# Define default config file in /etc/arkmanager \nCOPY instance.cfg /etc/arkmanager/instances/main.cfg \n\nRUN chown steam -R /ark && chmod 755 -R /ark \n\n#USER steam \n# download steamcmd \nRUN mkdir /home/steam/steamcmd &&\\  \ncd /home/steam/steamcmd && \\\n curl -f https://media.steampowered.com/installer/steamcmd_linux.tar.gz | tar -vxz\n\n# First run is on anonymous to download the app \n# We can't download from docker hub anymore -_- \n#RUN /home/steam/steamcmd/steamcmd.sh +login anonymous +quit \nEXPOSE ${STEAMPORT} 32330 ${SERVERPORT} \nEXPOSE ${STEAMPORT}/udp ${SERVERPORT}/udp \n\nVOLUME /ark \n\n# Change the working directory to /arkd \nWORKDIR /ark \n\n# Update game launch the game. \nENTRYPOINT [\"/home/steam/user.sh\"] \n\n"
}