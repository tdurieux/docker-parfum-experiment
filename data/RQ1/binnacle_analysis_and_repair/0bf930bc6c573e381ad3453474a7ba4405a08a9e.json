{
  "startTime": 1674238961557,
  "endTime": 1674238961658,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM p4lang/behavioral-model:no-pi\nLABEL maintainer=\"Antonin Bas <antonin@barefootnetworks.com>\"\nLABEL description=\"This Docker image includes all of the PI artifacts, \\\nincluding the Thrift-based PI implementation for the bmv2 backend. It is \\\ncurrently used to run CI tests.\"\n\n# Default to using 2 make jobs, which is a good default for CI. If you're\n# building locally or you know there are more cores available, you may want to\n# override this.\nARG MAKEFLAGS=-j2\n\n# Select the type of image we're building. Use `build` for a normal build, which\n# is optimized for image size. Use `test` if this image will be used for\n# testing; in this case, the source code and build-only dependencies will not be\n# removed from the image.\nARG IMAGE_TYPE=build\n\n# Select the compiler to use.\n# We install the default version of GCC (GCC 5), as well as GCC 7, clang 3.8 and\n# clang 6.0.\nARG CC=gcc\nARG CXX=g++\n\nENV PI_DEPS automake \\\n            build-essential \\\n            clang-3.8 \\\n            clang-format-3.8 \\\n            clang-6.0 \\\n            g++ \\\n            g++-7 \\\n            libboost-dev \\\n            libboost-system-dev \\\n            libboost-thread-dev \\\n            libtool \\\n            libtool-bin \\\n            pkg-config \\\n            libjudy-dev \\\n            libreadline-dev \\\n            libpcap-dev \\\n            libmicrohttpd-dev \\\n            doxygen \\\n            valgrind\nENV PI_RUNTIME_DEPS libboost-system1.58.0 \\\n                    libboost-thread1.58.0 \\\n                    libjudydebian1 \\\n                    libpcap0.8 \\\n                    python\n\nCOPY proto/sysrepo/docker_entry_point.sh /docker_entry_point.sh\nCOPY . /PI/\nWORKDIR /PI/\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository -y ppa:ubuntu-toolchain-r/test && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $PI_DEPS $PI_RUNTIME_DEPS && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-Werror --with-bmv2 --with-proto --with-cli --with-internal-rpc --with-sysrepo && \\\n    ./proto/sysrepo/install_yangs.sh && \\\n    make && \\\n    make install-strip && \\\n    (test \"$IMAGE_TYPE\" = \"build\" && \\\n      apt-get purge -y $PI_DEPS && \\\n      apt-get autoremove --purge -y && \\\n      rm -rf /PI /var/cache/apt/* /var/lib/apt/lists/* && \\\n      echo 'Build image ready') || \\\n    (test \"$IMAGE_TYPE\" = \"test\" && \\\n      echo 'Test image ready')\n\n# start sysrepo daemon (sysrepod)\nENTRYPOINT [\"/docker_entry_point.sh\"]\n"
}