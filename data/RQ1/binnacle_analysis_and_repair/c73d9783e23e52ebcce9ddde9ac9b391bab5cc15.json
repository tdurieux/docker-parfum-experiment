{
  "startTime": 1674237181113,
  "endTime": 1674237181307,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 1,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n# ERROR: no download agent available; install curl, wget, or fetch\n\t\tcurl \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\nENV JULIA_PATH /usr/local/julia\nENV PATH $JULIA_PATH/bin:$PATH\n\n# https://julialang.org/juliareleases.asc\n# Julia (Binary signing key) <buildbot@julialang.org>\nENV JULIA_GPG 3673DF529D9049477F76B37566E3C7DC03D6E495\n\n# https://julialang.org/downloads/\nENV JULIA_VERSION 1.1.1\n\nRUN set -eux; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tgnupg \\\n\t\t\tdirmngr \\\n\t\t; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\tfi; \\\n\n# https://julialang.org/downloads/#julia-command-line-version\n# https://julialang-s3.julialang.org/bin/checksums/julia-1.1.1.sha256\n# this \"case\" statement is generated via \"update.sh\"\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n# amd64\n\t\tamd64) tarArch='x86_64'; dirArch='x64'; sha256='f0a83a139a89a2ccf2316814e5ee1c0c809fca02cbaf4baf3c1fd8eb71594f06' ;; \\\n# arm64v8\n\t\tarm64) tarArch='aarch64'; dirArch='aarch64'; sha256='3d9ba9c2204ea920006b3a91ecd2803cac808b29250f2120000e29fc0384099a' ;; \\\n# i386\n\t\ti386) tarArch='i686'; dirArch='x86'; sha256='3e6941326522ac4bc34c5663c2c5752417e92677ff9befc56ba264eb283f37f1' ;; \\\n\t\t*) echo >&2 \"error: current architecture ($dpkgArch) does not have a corresponding Julia binary release\"; exit 1 ;; \\\n\tesac; \\\n\n\tfolder=\"$(echo \"$JULIA_VERSION\" | cut -d. -f1-2)\"; \\\n\tcurl -fL -o julia.tar.gz.asc \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc\"; \\\n\tcurl -fL -o julia.tar.gz     \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz\"; \\\n\n\techo \"${sha256}  *julia.tar.gz\" | sha256sum -c -; \\\n\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$JULIA_GPG\"; \\\n\tgpg --batch --verify julia.tar.gz.asc julia.tar.gz; \\\n\tcommand -v gpgconf > /dev/null && gpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" julia.tar.gz.asc; \\\n\n\tmkdir \"$JULIA_PATH\"; \\\n\ttar -xzf julia.tar.gz -C \"$JULIA_PATH\" --strip-components 1; \\\n\trm julia.tar.gz; \\\n\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\n# smoke test\n\tjulia --version\n\nCMD [\"julia\"]\n"
}