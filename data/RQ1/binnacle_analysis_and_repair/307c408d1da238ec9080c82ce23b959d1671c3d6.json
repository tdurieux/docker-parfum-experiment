{
  "startTime": 1674242106180,
  "endTime": 1674242106224,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile.build represents the build environment of the driver, used during\n# the development phase to test and in CI to build and test.\n\n# The prefered base image is the lastest stable Alpine image, if alpine doesn't\n# meet the requirements you can switch the from to the latest stable slim\n# version of Debian (eg.: `debian:jessie-slim`).\nFROM alpine:3.6\n\n# To avoid files written in the volume by root or foreign users, we create a\n# container local user with the same UID of the user executing the build.\n# The following commands are defined to use in busybox based distributions,\n# if you are using a standard distributions, replace the `adduser` command with:\n#   `useradd --uid ${BUILD_UID} --home /opt/driver ${BUILD_USER}`\nRUN mkdir -p /opt/driver/src && \\\n    adduser ${BUILD_USER} -u ${BUILD_UID} -D -h /opt/driver/src\n\n\n# As minimal build tools you need: make, curl and git, install using the same\n# command the specific tools required to build the driver.\nRUN apk add --no-cache make git curl ca-certificates \\\n    nodejs=\"6.10.3-r1\" nodejs-npm\n\nRUN npm install -g yarn && npm cache clean --force;\n\n# The volume with the full source code is mounted at `/opt/driver/src` so, we\n# set the workdir to this path.\nWORKDIR /opt/driver/src\n"
}