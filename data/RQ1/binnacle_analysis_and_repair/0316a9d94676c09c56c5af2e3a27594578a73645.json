{
  "startTime": 1674235961307,
  "endTime": 1674235961594,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine as build-stage\n\nWORKDIR /app\n\n# install build dependencies\nRUN apk add \\\n    --no-cache \\\n    bash \\\n    build-base \\\n    fftw-dev \\\n    git \\\n    make \\\n    python\n\nRUN apk add \\\n    --no-cache \\\n    --repository https://dl-4.alpinelinux.org/alpine/edge/main \\\n    --repository http://dl-4.alpinelinux.org/alpine/edge/testing \\\n    vips-dev\n\n# install application dependencies\nCOPY package.json yarn.lock ./\nRUN JOBS=max yarn install --non-interactive --frozen-lockfile && yarn cache clean;\n\n# copy in application source\nCOPY . .\n\n# run tests and build typescript sources\nRUN make lib ci-test\n\n# prune modules\nRUN yarn install --non-interactive --frozen-lockfile --production && yarn cache clean;\n\n# copy built application to runtime image\nFROM node:10-alpine\nWORKDIR /app\nRUN apk add --no-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing \\\n    fftw vips\nCOPY --from=build-stage /app/config config\nCOPY --from=build-stage /app/lib lib\nCOPY --from=build-stage /app/node_modules node_modules\n\n# run in production mode\nENV NODE_ENV production\nCMD [ \"node\", \"lib/app.js\" ]\n"
}