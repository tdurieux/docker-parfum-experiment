{
  "startTime": 1674238552312,
  "endTime": 1674238552733,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 15,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 207
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 25,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# As of 2018-06-29 https://github.com/aria2/aria2/blob/master/Dockerfile.raspberrypi, aria2 is build upon ubuntu trusty (which is debian 8). So pick a debian 8 as well\nFROM arm32v7/debian:8.11 AS aria2-builder\n\n# aria2 build\nRUN mkdir -p /builds && mkdir -p /builds/aria2c \\\n    && apt-get update \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get install --no-install-recommends -y curl git \\\n    make g++ libssl-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config libxml2-dev libcppunit-dev autoconf automake autotools-dev autopoint libtool openssl \\\n    && ARIA2_VERSION=\"1.34.0\" \\\n    && mkdir aria_build && cd aria_build \\\n    && curl -f -L https://github.com/aria2/aria2/releases/download/release-\"$ARIA2_VERSION\"/aria2-\"$ARIA2_VERSION\".tar.gz > aria2.tar.gz \\\n    && tar -xzf aria2.tar.gz \\\n    && cd aria2-$ARIA2_VERSION \\\n    && autoreconf -i \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ca-bundle='/etc/ssl/certs/ca-certificates.crt' \\\n    && make \\\n    && mv src/aria2c /builds/aria2c \\\n    && cd ../.. \\\n    && rm -rf aria_build \\\n    && rm -rf /var/lib/apt/lists/* && rm aria2.tar.gz\n\n\n\nFROM arm32v7/golang:1.10.0-stretch AS go-builder\n\n# goreman build\nRUN mkdir -p /builds && mkdir -p /builds/goreman \\\n    && export GOPATH=`pwd` \\\n    && go get github.com/mattn/goreman \\\n    && go build -o /builds/goreman/goreman github.com/mattn/goreman\n\nRUN mkdir -p /builds && mkdir -p /builds/gosu \\\n    && apt-get update && apt-get install --no-install-recommends -y curl \\\n    && GITHUB_REPO=\"https://github.com/tianon/gosu\" \\\n    && LATEST=$( curl -f -s $GITHUB_REPO\"/releases/latest\" | grep -Eo \"[0-9].[0-9]*\") \\\n    && curl -f -L $GITHUB_REPO\"/releases/download/\"$LATEST\"/gosu-armhf\" > /builds/gosu/gosu \\\n    && chmod +x /builds/gosu/gosu \\\n    && unset GITHUB_REPO && unset LATEST \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n\nFROM arm32v7/httpd:2.4.33\n# BE CAREFULL the arm32v7/httpd image MUST match the version of debian used to build aria2. otherwise shared library versions might not be the same.\n# A better approach will be to build static version of aria2.\n\n# download aria2 dependendies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      busybox \\\n      ca-certificates \\\n      libc-ares2 \\\n      libssh2-1 \\\n      libxml2 \\\n      openssl \\\n      libsqlite3-0 \\\n      zlib1g \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Grab aria2c, goreman and gosu binaries\nCOPY --from=aria2-builder /builds/aria2c/aria2c /usr/bin/\nCOPY --from=go-builder /builds/goreman/goreman /usr/local/bin/\nCOPY --from=go-builder /builds/gosu/gosu /usr/local/bin/\n\nADD ./docs /webui-aria2\n\nRUN groupadd -r aria \\\n    && useradd -m -r -g aria aria -u 1000 \\\n    && echo \"web: gosu aria /bin/busybox httpd -f -p 8080 -h /webui-aria2\\nbackend: gosu aria bash -c 'shopt -s dotglob nullglob && /usr/bin/aria2c --dir=/data/downloads/ --conf-path=/home/aria/.aria2/aria2.conf /data/downloads/*.torrent'\" > Procfile\n\n# aria2 downloads directory\nVOLUME /data/downloads\n\n# aria2 conf directory\nVOLUME /home/aria/.aria2\n\n# webui static content web server and aria2 RPC port\nEXPOSE 8080 6800\n\nCMD [\"start\"]\nENTRYPOINT [\"/usr/local/bin/goreman\"]\n"
}