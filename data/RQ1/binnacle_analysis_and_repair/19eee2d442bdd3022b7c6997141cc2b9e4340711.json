{
  "startTime": 1674243794736,
  "endTime": 1674243794924,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 40,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 40,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# ==============================================================================\n#  Copyright 2018-2019 Intel Corporation\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n# ==============================================================================\n\n# Environment to build and unit-test ngraph-tensorflow-bridge\n\nFROM ubuntu:16.04\n\n# Default python environment is python 3, thus python3-pip and virtualenv\n# python3-dev is needed for TensorFlow build\n# git is needed to clone tensorflow repository\n# unzip and wget are needed for installing bazel\n# sudo is required for installing the TF wheel into /usr/local/...\n# zlib1g, zlib1g-dev and bash-completion are required by bazel install\n# zip and golang-go are needed to run TensorFlow tests\n# curl and locate are needed by Tensorflow's configure command\n# clang-format-3.9 is needed for code-style checks\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-pip virtualenv \\\n    python3-dev \\\n    git \\\n    unzip wget \\\n    sudo \\\n    zlib1g zlib1g-dev bash-completion \\\n    build-essential cmake \\\n    libtinfo-dev \\\n    zip golang-go \\\n    locate curl \\\n    clang-format-3.9 && rm -rf /var/lib/apt/lists/*;\n\n# Install gcc 4.8 and configure it to be the preferred gcc XXXXX\n\nRUN which gcc && gcc --version || true\nRUN which c++ && c++ --version || true\n\nRUN apt-get install --no-install-recommends -y gcc-4.8 g++-4.8 && rm -rf /var/lib/apt/lists/*;\n\nRUN which gcc && gcc --version || true\nRUN which c++ && c++ --version || true\n\n# Setup gcc-4.8 compiler per https://github.com/NervanaSystems/ngraph/blob/master/INSTALL\n# If you are using gcc-4.8, it may be necessary to add symlinksfrom `gcc` to\n# `gcc-4.8`, and from `g++` to `g++-4.8`, in your PATH, even if you have\n# specify CMAKE_C_COMPILER and CMAKE_CXX_COMPILER when building. (You should\n# NOT supply the `-DNGRAPH_USE_PREBUILT_LLVM` flag in this case, because the\n# prebuilt tarball supplied on llvm.org is not compatible with a gcc-4.8\n# based build.)\nRUN ln -f -s /usr/bin/gcc-4.8 /usr/bin/gcc || true\nRUN ln -f -s /usr/bin/g++-4.8 /usr/bin/g++ || true\nRUN which gcc && gcc --version || true\nRUN which c++ && c++ --version || true\n\n# The \"locate\" command uses a prepopulated index.  If this index is not built,\n# then \"locate\" will find absolutely nothing.  In Tensorflow's configure,\n# this manifests itself as a silent failure of the configure script to run to\n# completion.  Therefore, updatedb MUST BE RUN to provide an index for \"locate\".\nRUN updatedb\n\n# The pip-upgrade for pip, setuptools, and virtualenv is to avoid a nasty\n#   bug in setuptools: \"_NamespacePath object has no attribute sort\"\nRUN pip3 install --no-cache-dir --upgrade pip setuptools virtualenv==16.1.0\n\n# We include pytest so the Docker image can be used for daily validation\nRUN pip3 install --no-cache-dir --upgrade pytest\n\n# Bazel requires the OpenJDK\nRUN apt-get update && apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n#\n# This bazel version works with current TF\nARG BAZEL_VERSION=0.24.1\nRUN wget --no-verbose -c https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb\nRUN dpkg -i bazel_${BAZEL_VERSION}-linux-x86_64.deb || true\n\n# Copy in the run-as-user.sh script\n# This will allow the builds, which are done in a mounted directory, to\n# be run as the user who runs \"docker run\".  This then allows the mounted\n# directory to be properly deleted by the user later (e.g. by jenkins).\nWORKDIR /home\n"
}