{
  "startTime": 1674244968060,
  "endTime": 1674244968194,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.4.3 \n# Install apt based dependencies required to run Rails as \n# well as RubyGems. As the Ruby image itself is based on a \n# Debian image, we use apt-get to install those. \n# --- \n# Also, let's enable backports and install sphinxsearch \n# so we get searchd, needed to generate Sphinx config. \nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" \\  \n> /etc/apt/sources.list.d/backports.list; \\\n apt-get update && apt-get install --no-install-recommends -y \\\nbuild-essential \\\nsphinxsearch && rm -rf /var/lib/apt/lists/*;\n\n# Configure the main working directory. This is the base \n# directory used in any further RUN, COPY, and ENTRYPOINT \n# commands. \nRUN mkdir -p /app \nWORKDIR /app \n\n# Copy the Gemfile as well as the Gemfile.lock and install \n# the RubyGems. This is a separate step so the dependencies \n# will be cached unless changes to one of those two files \n# are made. \nCOPY Gemfile Gemfile.lock ./ \nRUN bundle install \n\n# Copy the main application. \nCOPY . ./ \n\n# Expose port 3000 to the Docker host, so we can access it \n# from the outside. \nEXPOSE 3000 \n# The default command to run when the container starts. \nCMD [\"rails\", \"c\"] \n\n"
}