{
  "startTime": 1674243247882,
  "endTime": 1674243248171,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 26,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install YETI dependencies\nRUN apt-get update && apt-get upgrade -y && apt-get autoremove -y && apt-get install -y --no-install-suggests --no-install-recommends \\\n  build-essential \\\n  python-dev \\\n  libxml2-dev \\\n  libxslt-dev \\\n  zlib1g-dev \\\n  python-pip \\\n  python-setuptools \\\n  python-dev \\\n  python-wheel \\\n  locales \\\n  git \\\n  libmagic1 \\\n  curl \\\n  apt-transport-https \\\n  uwsgi-plugin-python \\\n  uwsgi && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /usr/share/man/* /root/.cache/*\n\n# Setup locales\nRUN locale-gen en_US.UTF-8 && \\\n        echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment && \\\n        echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n        echo \"LANG=en_US.UTF-8\" > /etc/locale.conf\n\n# Install frontend dependencies\nRUN apt-get update && apt-get install -y --no-install-suggests --no-install-recommends gnupg2 && \\\n        curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n        curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n        echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n        apt-get update && apt-get install --no-install-recommends -y nodejs yarn && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /usr/share/man/* /root/.cache/*\n\n\n# Upgrade pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# Install & Configure YETI\nADD . /opt/yeti\nWORKDIR /opt/yeti\nRUN pip install --no-cache-dir -r requirements.txt && \\\n        pip install --no-cache-dir uwsgi && \\\n        yarn install && \\\n        mv yeti.conf.sample yeti.conf && \\\n        sed -i '25s/# host = 127.0.0.1/host = mongodb/' yeti.conf && \\\n        sed -i '38s/# host = 127.0.0.1/host = redis/' yeti.conf && yarn cache clean;\n\n# Configure image\nADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /usr/local/bin/\nRUN groupadd yeti && \\\n        useradd -r --home-dir /opt/yeti -g yeti yeti && \\\n        mv extras/docker/scripts/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh && \\\n        chmod 755 /usr/local/bin/wait-for-it.sh /usr/local/bin/docker-entrypoint.sh && \\\n        chown -R yeti.yeti /opt/yeti\nRUN mkdir /var/log/yeti; chown yeti /var/log/yeti\n\nUSER yeti\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"docker-entrypoint.sh\", \"webserver\"]\n"
}