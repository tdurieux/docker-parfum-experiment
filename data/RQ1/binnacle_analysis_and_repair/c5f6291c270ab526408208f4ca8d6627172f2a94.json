{
  "startTime": 1674239590278,
  "endTime": 1674239590443,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "FROM openjdk:8\n\nMAINTAINER Mohamed Khemakhem <mohamed.khemakhem@inria.fr>\n\nRUN \\\n  export DEBIAN_FRONTEND=noninteractive && \\\n  sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n  apt-get update && \\\n  apt-get -y upgrade\n\nRUN \\\n   wget -q https://services.gradle.org/distributions/gradle-3.3-bin.zip \\\n    && unzip gradle-3.3-bin.zip -d /opt \\\n    && rm gradle-3.3-bin.zip\n\nENV GRADLE_HOME /opt/gradle-3.3\nENV PATH $PATH:/opt/gradle-3.3/bin\n\nRUN \\\n  apt-get install -y --no-install-recommends software-properties-common && \\\n  apt-get install --no-install-recommends -y vim wget curl git maven && rm -rf /var/lib/apt/lists/*;\n\n#To clone from fork\n RUN \\\n  git clone https://github.com/MedKhem/grobid && \\\n  cd grobid && \\\n  ./gradlew clean install\n\n# To copy from a local directory\n#COPY grobid-master.zip grobid-master.zip\n#RUN unzip grobid-master.zip && mv grobid-master grobid && rm grobid-master.zip && cd #grobid && ./gradlew clean install\n\nRUN rm -r /grobid/grobid-service/ && rm -r /grobid/grobid-trainer/resources/\n\n#To clone from fork\n RUN \\\n  cd /grobid && \\\n  git clone https://github.com/MedKhem/grobid-dictionaries\n#\n## To copy from a local directory\n##COPY grobid-dictionaries /grobid/grobid-dictionaries\n#\n#\nRUN \\\n  cd /grobid/grobid-dictionaries && \\\n  mv toyData resources && \\\nmvn install:install-file -Dfile=grobidDependencies/grobid-core-0.5.4-SNAPSHOT.jar -DgroupId=org.grobid -DartifactId=grobid-core -Dversion=0.5.4-SNAPSHOT -Dpackaging=jar && \\\nmvn install:install-file -Dfile=grobidDependencies/grobid-trainer-0.5.4-SNAPSHOT.jar -DgroupId=org.grobid -DartifactId=grobid-trainer -Dversion=0.5.4-SNAPSHOT -Dpackaging=jar && \\\n mvn -Dmaven.test.skip=true clean install && \\\n mvn generate-resources -P train_dictionary_segmentation -e && \\\n mvn generate-resources -P train_dictionary_body_segmentation -e && \\\n mvn generate-resources -P train_lexicalEntries -e && \\\n mvn generate-resources -P train_form -e && \\\n mvn generate-resources -P train_sense -e && \\\n mvn generate-resources -P train_etymQuote -e && \\\n mvn generate-resources -P train_etym -e && \\\n mvn generate-resources -P train_sub_sense -e && \\\n  mvn generate-resources -P train_gramGrp -e && \\\n mvn generate-resources -P train_crossRef -e\n\n# && \\\n# mvn -Dmaven.test.skip=true jetty:run-war && \\\n# kill -INT 888\n\n\nWORKDIR /grobid/grobid-dictionaries\nEXPOSE 8080\n\n\n############Useful commands\n\n##See images\n# docker images -a\n\n##See containers\n# docker ps -a\n\n##To Stop all containers\n#docker stop $(docker ps -qa)\n\n##To remove alla containers\n#docker rm $(docker ps -qa)\n\n##To remove all images\n#docker rmi $(docker images -qa)\n\n##To build an image inside forbid\n#docker build -f FirstGrobidDictionaries -t docker-grobid-training .\n\n##To run a container based on the created image inside forbid\n#docker run docker-grobid-training:latest"
}