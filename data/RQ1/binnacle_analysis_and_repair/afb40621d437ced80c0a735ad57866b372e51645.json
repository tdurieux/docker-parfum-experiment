{
  "startTime": 1674248766581,
  "endTime": 1674248766905,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nARG HAPROXY_MAJOR=1.8\nARG HAPROXY_VERSION=1.8.12\nARG HAPROXY_MD5=9f37013ec1e76942a67a9f7c067af9f2\nARG MODSEC_VERSION=2.9.2\nARG MODSEC_MD5=4d9454efb19269c4288ae408ea438b76\n\nRUN apk add --no-cache --virtual .build-modsecurity \\\n        curl \\\n        openssl \\\n        tar \\\n        make \\\n        gcc \\\n        libc-dev \\\n        linux-headers \\\n        apache2-dev \\\n        pcre-dev \\\n        libxml2-dev \\\n        libevent-dev \\\n        curl-dev \\\n        yajl-dev\\\n    && curl -fsSLo /tmp/modsecurity.tar.gz https://www.modsecurity.org/tarball/${MODSEC_VERSION}/modsecurity-${MODSEC_VERSION}.tar.gz \\\n    && curl -fsSLo /tmp/haproxy.tar.gz https://www.haproxy.org/download/${HAPROXY_MAJOR}/src/haproxy-${HAPROXY_VERSION}.tar.gz \\\n    && echo \"$MODSEC_MD5  /tmp/modsecurity.tar.gz\" | md5sum -c \\\n    && mkdir -p /usr/src/modsecurity \\\n    && tar xzf /tmp/modsecurity.tar.gz --strip-components=1 -C /usr/src/modsecurity \\\n    && rm /tmp/modsecurity.tar.gz \\\n    && echo \"$HAPROXY_MD5  /tmp/haproxy.tar.gz\" | md5sum -c \\\n    && mkdir -p /usr/src/haproxy \\\n    && tar xzf /tmp/haproxy.tar.gz -C /usr/src/haproxy --strip-components=1 \\\n    && rm /tmp/haproxy.tar.gz \\\n    && cd /usr/src/modsecurity \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/src/modsecurity/INSTALL \\\n        --disable-apache2-module \\\n        --enable-standalone-module \\\n        --enable-pcre-study \\\n        --without-lua \\\n        --enable-pcre-jit \\\n    && make -C standalone install \\\n    && mkdir -p INSTALL/include \\\n    && cp standalone/*.h apache2/*.h INSTALL/include \\\n    && cd / \\\n    && make -C /usr/src/haproxy/contrib/modsecurity \\\n        MODSEC_INC=/usr/src/modsecurity/INSTALL/include \\\n        MODSEC_LIB=/usr/src/modsecurity/INSTALL/lib \\\n        APACHE2_INC=/usr/include/apache2 \\\n        APR_INC=/usr/include/apr-1 \\\n    && mv /usr/src/haproxy/contrib/modsecurity/modsecurity /usr/local/bin/ \\\n    && rm -rf /usr/src/haproxy /usr/src/modsecurity \\\n    && deps=$( \\\n        scanelf --needed --nobanner --format '%n#p' /usr/local/bin/modsecurity \\\n            | tr ',' '\\n' | sed 's/^/so:/' \\\n    ) \\\n    && apk add --no-cache $deps \\\n    && apk del .build-modsecurity\n\nARG OWASP_MODSEC_VERSION=v3.0.2\nARG OWASP_MODSEC_MD5=9cef8c63937a92dc350275fcf348baab\n\nRUN mkdir -p /etc/modsecurity/owasp-modsecurity-crs \\\n    && wget -qO/etc/modsecurity/modsecurity.conf https://github.com/SpiderLabs/ModSecurity/raw/v2/master/modsecurity.conf-recommended \\\n    && wget -qO/etc/modsecurity/unicode.mapping https://github.com/SpiderLabs/ModSecurity/raw/v2/master/unicode.mapping \\\n    && wget -qO/tmp/owasp.tar.gz https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/${OWASP_MODSEC_VERSION}.tar.gz \\\n    && echo \"$OWASP_MODSEC_MD5  /tmp/owasp.tar.gz\" | md5sum -c \\\n    && tar xzf /tmp/owasp.tar.gz --strip-components=1 -C /etc/modsecurity/owasp-modsecurity-crs \\\n    && rm /tmp/owasp.tar.gz \\\n    && find \\\n            /etc/modsecurity/owasp-modsecurity-crs \\\n            -type f -name '*.example' \\\n        | while read -r f; do cp -p \"$f\" \"${f%.example}\"; done \\\n    && sed -i.example \\\n        's/^SecRuleEngine .*/SecRuleEngine On/' \\\n        /etc/modsecurity/modsecurity.conf \\\n    && sed -i.example \\\n        's/^\\(SecDefaultAction \"phase:[12]\\),log,auditlog,pass\"/\\1,log,noauditlog,deny,status:403\"/' \\\n        /etc/modsecurity/owasp-modsecurity-crs/crs-setup.conf \\\n    && find \\\n            /etc/modsecurity/owasp-modsecurity-crs \\\n            -type f -maxdepth 1 -name '*.conf' \\\n        | sort | sed 's/^/Include /' > /etc/modsecurity/owasp-modsecurity-crs.conf \\\n    && find \\\n            /etc/modsecurity/owasp-modsecurity-crs/rules \\\n            -type f -maxdepth 1 -name '*.conf' \\\n        | sort | sed 's/^/Include /' >> /etc/modsecurity/owasp-modsecurity-crs.conf\n\nRUN apk add --no-cache tini\n\nCOPY . /\n\nENTRYPOINT [\"tini\", \"--\", \"/start.sh\"]\n"
}