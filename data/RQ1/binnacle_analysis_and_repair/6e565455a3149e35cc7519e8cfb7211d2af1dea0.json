{
  "startTime": 1674243327345,
  "endTime": 1674243327755,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 46,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 402,
        "columnEnd": 460
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 80,
        "columnEnd": 217
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 80,
        "columnEnd": 217
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 356,
        "columnEnd": 395
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "#Dockerfile to build an image for running Selenium tests\n#Pull ubuntu 16.04 base image\nFROM ubuntu\nMAINTAINER Qxf2 Services\n\n# Essential tools and xvfb\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    unzip \\\n    curl \\\n    wget \\\n    xvfb && rm -rf /var/lib/apt/lists/*;\n\n# Chrome browser to run the tests\nARG CHROME_VERSION=latest\nRUN if [ ${CHROME_VERSION} = \"latest\" ]; then \\\n curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub -o /tmp/google.pub && cat /tmp/google.pub | apt-key add -; rm /tmp/google.pub  && echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/google.list  && mkdir -p /usr/share/desktop-directories  && apt-get -y update && apt-get install --no-install-recommends -y google-chrome-stable; else curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add && wget https://www.slimjet.com/chrome/download-chrome.php?file=lnx%2Fchrome64_$CHROME_VERSION.deb && dpkg -i download-chrome*.deb || true && apt-get install -y -f && rm -rf /var/lib/apt/lists/*; fi\n\n# Disable the SUID sandbox so that chrome can launch without being in a privileged container\nRUN dpkg-divert --add --rename --divert /opt/google/chrome/google-chrome.real /opt/google/chrome/google-chrome \\\n        && echo \"#!/bin/bash\\nexec /opt/google/chrome/google-chrome.real --no-sandbox --disable-setuid-sandbox \\\"\\$@\\\"\" > /opt/google/chrome/google-chrome \\\n        && chmod 755 /opt/google/chrome/google-chrome\n\n# Chrome Driver\nARG CHROME_DRIVER_VERSION=latest\nRUN CD_VERSION=$(if [ ${CHROME_DRIVER_VERSION:-latest} = \"latest\" ]; then echo $(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE); else echo $CHROME_DRIVER_VERSION; fi) \\\n  && wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip \\\n  && rm -rf /opt/selenium/chromedriver \\\n  && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n  && rm /tmp/chromedriver_linux64.zip \\\n  && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CD_VERSION \\\n  && chmod 755 /opt/selenium/chromedriver-$CD_VERSION \\\n  && ln -fs /opt/selenium/chromedriver-$CD_VERSION /usr/bin/chromedriver\n\nRUN if [ ${CHROME_DRIVER_VERSION} != \"latest\" ]; then \\\n mkdir -p /opt/selenium && curl -f https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -o /opt/selenium/chromedriver_linux64.zip && cd /opt/selenium; unzip /opt/selenium/chromedriver_linux64.zip; rm -rf chromedriver_linux64.zip; ln -fs /opt/selenium/chromedriver /usr/local/bin/chromedriver;fi\n\n#Firefox browser to run the tests\nARG FIREFOX_VERSION=latest\nRUN FIREFOX_DOWNLOAD_URL=$(if [ $FIREFOX_VERSION = \"latest\" ]; then echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\"; else echo \"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2\"; fi) \\\n  && apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install firefox \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n  && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n  && apt-get -y purge firefox \\\n  && rm -rf /opt/firefox \\\n  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n  && rm /tmp/firefox.tar.bz2 \\\n  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n\n#Geckodriver\nARG GECKODRIVER_VERSION=latest\nRUN GK_VERSION=$(if [ ${GECKODRIVER_VERSION:-latest} = \"latest\" ]; then echo $(wget -qO- \"https://api.github.com/repos/mozilla/geckodriver/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([0-9.]+)\".*/\\1/'); else echo $GECKODRIVER_VERSION; fi) \\\n  && echo \"Using GeckoDriver version: \"$GK_VERSION \\\n  && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GK_VERSION/geckodriver-v$GK_VERSION-linux64.tar.gz \\\n  && rm -rf /opt/geckodriver \\\n  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \\\n  && rm /tmp/geckodriver.tar.gz \\\n  && mv /opt/geckodriver /opt/geckodriver-$GK_VERSION \\\n  && chmod 755 /opt/geckodriver-$GK_VERSION \\\n  && ln -fs /opt/geckodriver-$GK_VERSION /usr/bin/geckodriver\n\n# Python 3.5 and Python Pip\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n    python3 \\\n    python3-setuptools \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;"
}