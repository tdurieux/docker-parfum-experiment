{
  "startTime": 1674245783113,
  "endTime": 1674245783574,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# avoid questions from debconf\nENV DEBIAN_FRONTEND noninteractive\n\n# packages neded for NEURON and graphics\n# - Includes fixes the issue where importing OpenGL in python throws an error\n#    (I assume that this works by installing the OpenGL for qt4 and then updating? it's not clear...)\n#    I think that this is an error in the repos, not our fault.\n# - These packages are needed for X display libxaw7 libxmu6 libxpm4\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git python3-pyqt5 python3-pip python3-pyqtgraph \\\n                       python3-opengl zlib1g-dev zlib1g zlibc libx11-dev mercurial \\\n                       bison flex automake libtool libxext-dev libncurses-dev \\\n                       python3-dev xfonts-100dpi cython libopenmpi-dev python3-scipy \\\n                       python3-pyqt4.qtopengl libxaw7 libxmu6 libxpm4 \\\n                       git vim iputils-ping net-tools iproute2 nano sudo \\\n                       telnet && \\\n    apt-get remove -y python3-matplotlib && rm -rf /var/lib/apt/lists/*;\n\n# use pip for matplotlib to get latest version (2.x) since apt-get was using older\n# version (1.5) which does not have set_facecolor\n# make sure matplotlib version 2 is used -- is this strictly needed?\nRUN pip3 install --no-cache-dir PyOpenGL matplotlib && \\\n    pip3 install --no-cache-dir --upgrade PyOpenGL matplotlib\n\n# create the group hnn_group and user hnn_user\nRUN groupadd hnn_group && useradd -m -b /home/ -g hnn_group hnn_user\n\n# add hnn_user to the sudo group\nRUN adduser hnn_user sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# copy the start script into the container\nCOPY start_hnn.sh /home/hnn_user/\nRUN sudo chown hnn_user:hnn_group /home/hnn_user/start_hnn.sh && \\\n    sudo chmod +x /home/hnn_user/start_hnn.sh\n\nUSER hnn_user\n# install NEURON dependencies\nRUN cd /home/hnn_user && \\\n    git clone https://github.com/neuronsimulator/nrn && \\\n    git clone https://github.com/neuronsimulator/iv\n\nRUN cd /home/hnn_user/iv && \\\n    git checkout d4bb059 && \\\n    ./build.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/hnn_user/iv/build && \\\n    make -j4 && \\\n    make install -j4\nRUN cd /home/hnn_user/nrn && \\\n    ./build.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-nrnpython=python3 --with-paranrn --disable-rx3d \\\n      --with-iv=/home/hnn_user/iv/build --prefix=/home/hnn_user/nrn/build && \\\n    make -j4 && \\\n    make install -j4 && \\\n    cd src/nrnpython && \\\n    python3 setup.py install --user\n\n# create the global session variables\nRUN echo '# these lines define global session variables for HNN' >> ~/.bashrc && \\\n    echo 'export CPU=$(uname -m)' >> ~/.bashrc && \\\n    echo 'export PATH=$PATH:/home/hnn_user/nrn/build/$CPU/bin' >> ~/.bashrc\n\n# allow user to specify architecture if different than x86_64\nARG CPU=x86_64\n# supply the path NEURON binaries for building hnn\nENV PATH=${PATH}:/home/hnn_user/nrn/build/$CPU/bin\n\n# setup HNN itself\n# HNN repo from github - moved to github on April 8, 2018\nRUN cd /home/hnn_user && \\\n    git clone https://github.com/jonescompneurolab/hnn.git hnn_repo\n# make compiles the mod files\nRUN cd /home/hnn_user/hnn_repo && \\\n    make\n\n# cleanup these folders\nRUN cd /home/hnn_user/iv && \\\n    make clean && \\\n    cd /home/hnn_user/nrn && \\\n    make clean\n\n# run sudo to get rid of message on first login about using sudo\nRUN sudo -l\n\n# create the hnn shared folder (don't rely on docker daemon\n# to create it)\nRUN mkdir /home/hnn_user/hnn\n\n# if users open up a shell, they should go to the hnn repo checkout\nWORKDIR /home/hnn_user\n\nCMD /home/hnn_user/start_hnn.sh\n"
}