{
  "startTime": 1674246434918,
  "endTime": 1674246435230,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2017 Cisco Systems\n\nFROM ubuntu:16.04\nMAINTAINER Jonas Zaddach <jzaddach@cisco.com>\n\nENV PREFIX /home\nENV KAMINO_VERSION 1.1.2\nENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk-amd64\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk-headless curl git \\\n                       python build-essential unzip && rm -rf /var/lib/apt/lists/*;\n                       #msitools \\\n                       #bsdiff\n\nRUN mkdir /data\nRUN mkdir ${PREFIX}/packages\nWORKDIR ${PREFIX}/packages\n\n# Build and install Z3\nRUN git clone https://github.com/Z3Prover/z3 z3\nWORKDIR z3\nRUN python scripts/mk_make.py --java\nWORKDIR build\nRUN make -j8\nRUN make install\n\n# Install kamino\nWORKDIR ${PREFIX}/packages\nRUN mkdir kamino\nWORKDIR kamino\nRUN curl -f -L https://github.com/McGill-DMaS/Kam1n0-Plugin-IDA-Pro/releases/download/${KAMINO_VERSION}/kam1n0_server_${KAMINO_VERSION}_linux_64.tar.gz | tar xz\nWORKDIR ${PREFIX}/packages/kamino/lib\nRUN cp ${PREFIX}/packages/z3/build/libz3.so liblibz3.so\nRUN cp ${PREFIX}/packages/z3/build/libz3java.so liblibz3java.so\n\nRUN apt-get install --no-install-recommends -y gdb && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR ${PREFIX}/packages/kamino\nCOPY files/server/start.sh .\nRUN chmod +x start.sh\n\nVOLUME /data\nEXPOSE 9988\n\nENTRYPOINT [\"./start.sh\", \"--architecture\", \"metapc.xml\"]\n#ENTRYPOINT [\"./start.sh\", \"--architecture\", \"symbolic\"]\n"
}