{
  "startTime": 1674248694179,
  "endTime": 1674248694292,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 79,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 93,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Package creation tool for Kurento projects - Dockerfile\n#\n# This Docker image is used to generate Debian packages from Kurento projects.\n# It runs [kurento-buildpackage.sh][1] from a properly configured system.\n#\n# [1]: https://github.com/Kurento/adm-scripts/blob/master/kurento-buildpackage.sh\n#\n#\n# Build command\n# -------------\n#\n# docker build [Args...] --tag kurento/kurento-buildpackage:<UbuntuVersion> .\n#\n#\n# Build arguments\n# ---------------\n#\n# --build-arg UBUNTU_VERSION=<UbuntuVersion>\n#\n#   <UbuntuVersion> is like \"xenial\", \"bionic\", etc.\n#   Valid values are listed here: https://hub.docker.com/_/buildpack-deps/\n#\n#   Optional. Default: \"xenial\".\n#\n#\n# Run command\n# -----------\n#\n# git clone https://github.com/Kurento/kms-core.git\n# cd kms-core/\n# docker run --rm \\\n#     --mount type=bind,src=\"$PWD\",dst=/hostdir \\\n#     kurento/kurento-buildpackage:xenial \\\n#     --install-kurento nightly \\\n#     [RunArguments...]\n#\n#\n# Run arguments\n# -------------\n#\n# It is possible to pass arguments to the `kurento-buildpackage.sh` script in\n# this image: just append them to the `docker run` call.\n#\n# The argument '--install-kurento <Version>' is strongly recommended, because\n# this Docker image doesn't include any build dependencies.\n#\n# Use '--help' to read about arguments accepted by *kurento-buildpackage*.\n\n\n\nARG UBUNTU_VERSION=xenial\n\nFROM buildpack-deps:${UBUNTU_VERSION}-curl\n\n# Configure environment:\n# * DEBIAN_FRONTEND: Disable interactive questions and messages\n# * LANG: Set the default locale for all commands\n# * PATH: Add the auxiliary scripts to the current PATH\n# * PYTHONUNBUFFERED: Disable stdin/stdout/stderr buffering in Python\nENV DEBIAN_FRONTEND=noninteractive \\\n    LANG=C.UTF-8 \\\n    PATH=\"/adm-scripts:${PATH}\" \\\n    PYTHONUNBUFFERED=1\n\n# Configure `apt-get`:\n# * Disable installation of recommended and suggested packages\nRUN echo 'APT::Install-Recommends \"false\";' >/etc/apt/apt.conf.d/00recommends \\\n && echo 'APT::Install-Suggests \"false\";' >>/etc/apt/apt.conf.d/00recommends\n\n# Install a basic set of packages\n# * build-essential, cmake, pkg-config: For C/C++ based projects\n# * Miscellaneous tools that are used by CI scripts\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n        build-essential \\\n        cmake \\\n        pkg-config \\\n\n        gnupg \\\n        iproute2 \\\n        zip unzip \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install dependencies of 'kurento-buildpackage'\n# (listed in the tool's help/header)\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n        python3 python3-pip python3-setuptools python3-wheel \\\n        devscripts \\\n        dpkg-dev \\\n        lintian \\\n        git \\\n        openssh-client \\\n        lsb-release \\\n        equivs \\\n        coreutils \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install 'git-buildpackage'\nRUN PIP_VERSION=\"$(python3 -c 'import pip; print(pip.__version__)')\" \\\n    dpkg --compare-versions \"$PIP_VERSION\" ge \"1.6.0\" && ARGS=\"--no-cache-dir\"; \\\n    pip3 $ARGS install --upgrade gbp==0.9.10\n\n# Configure Git user, which will appear in the Debian Changelog files\n# (this is needed by git-buildpackage)\nRUN git config --system user.name \"kurento-buildpackage\" \\\n && git config --system user.email \"kurento@googlegroups.com\"\n\n\n\n# ------------ Final configuration ------------\n\n# Configure `apt-get`:\n# * Automatically cleaning the apt cache breaks 'd-devlibdeps' (d-shlibs) < 0.83\n#   so this workaround is needed:\n#   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=916856\n#\n#   Also, this enables persistently caching downloaded packages. This allows\n#   setting up a persistent cache in an external Docker volume. Useful if you're\n#   doing lots of (re)builds and want to avoid downloading the same packages\n#   over and over again...\nRUN rm -f /etc/apt/apt.conf.d/docker-clean\n\n\n\n# ------------ Runtime command ------------\n\nCOPY entrypoint.sh /\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD []\n"
}