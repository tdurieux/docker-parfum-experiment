{
  "startTime": 1674240119369,
  "endTime": 1674240119773,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 56,
        "columnStart": 1,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 80,
        "columnStart": 1,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic-20181204\n\n# environment variables\nENV \\\n\tAPP_USER=xiph \\\n\tAPP_DIR=/opt/app \\\n\tLC_ALL=C.UTF-8 \\\n\tLANG=C.UTF-8 \\\n\tLANGUAGE=C.UTF-8 \\\n\tDEBIAN_FRONTEND=noninteractive\n\n# add runtime user\nRUN \\\n\tgroupadd --gid 1000 ${APP_USER} && \\\n\tuseradd --uid 1000 --gid ${APP_USER} --shell /bin/bash --create-home ${APP_USER}\n\n# install common/useful packages\nRUN \\\n\techo \"deb http://archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse\"           >/etc/apt/sources.list && \\\n\techo \"deb http://security.ubuntu.com/ubuntu bionic-security main restricted universe multiverse\" >>/etc/apt/sources.list && \\\n\techo \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse\"  >>/etc/apt/sources.list && \\\n\tapt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbuild-essential \\\n\t\tbzip2 \\\n\t\tca-certificates \\\n\t\tcheck \\\n\t\tcurl \\\n\t\tfile \\\n\t\tgettext-base \\\n\t\tgit-core \\\n\t\tiproute2 \\\n\t\tiputils-ping \\\n\t\tjq \\\n\t\tless \\\n\t\tlibjpeg-dev \\\n\t\tlibogg-dev \\\n\t\tlibpng-dev \\\n\t\tlibtool \\\n\t\tlocales \\\n\t\tnetcat-openbsd \\\n\t\tnet-tools \\\n\t\topenssl \\\n\t\tpkg-config \\\n\t\tprocps \\\n\t\tpsmisc \\\n\t\trsync \\\n\t\tstrace \\\n\t\ttcpdump \\\n\t\ttzdata \\\n\t\tunzip \\\n\t\tuuid \\\n\t\tvim \\\n\t\twget \\\n\t\txz-utils && \\\n\tapt-get clean && \\\n\trm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n# install daalatool\nENV \\\n\tDAALATOOL_DIR=/opt/daalatool\n\nRUN \\\n\tmkdir -p $(dirname ${DAALATOOL_DIR}) && \\\n\tgit clone https://github.com/xiph/daala.git ${DAALATOOL_DIR} && \\\n\tcd ${DAALATOOL_DIR} && \\\n\t./autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-player && \\\n\tmake tools -j4\n\n# install rd_tool dependencies\nRUN \\\n\tapt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tbc \\\n\t\tpython3-numpy \\\n\t\tpython3-scipy \\\n\t\tssh \\\n\t\ttime \\\n\t\t&& \\\n\tapt-get clean && \\\n\trm -rf /var/lib/apt/lists && \\\n\trm -vf /etc/ssh/ssh_host_* && rm -rf /var/lib/apt/lists/*;\n\n# set working directory\nWORKDIR /home/${APP_USER}\n\n# environment variables\nENV \\\n\tWORK_DIR=/data/work\n\n# set entrypoint\nADD etc/entrypoint.worker /etc/entrypoint.worker\nENTRYPOINT [ \"/etc/entrypoint.worker\" ]\n"
}