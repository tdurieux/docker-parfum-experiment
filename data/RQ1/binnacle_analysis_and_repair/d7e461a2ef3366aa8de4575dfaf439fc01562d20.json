{
  "startTime": 1674241803019,
  "endTime": 1674241803166,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 3,
        "columnEnd": 25
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM dockerfile/ubuntu\nFROM phusion/baseimage:0.9.11\n\nMAINTAINER Michiel van Oosten\n\n# Regenerate SSH host keys. baseimage-docker does not contain any, so you\n# have to do that yourself. You may also comment out this instruction; the\n# init system will auto-generate one during boot.\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\nADD docker/scripts /root/scripts\nADD docker/.bashrc /root/\nADD docker/.z /root/\nADD docker/.gitconfig /root/\n\n# setting environment variables\nRUN echo \"/root\" > /etc/container_environment/HOME\n\n# my build instructions:\n\nRUN apt-get update && apt-get install -y --no-install-recommends rlwrap wget && rm -rf /var/lib/apt/lists/*;\n\n# haproxy\n# RUN   \\\n#     cd /opt && \\\n#     apt-get install -qq build-essential libssl-dev libev-dev wget rlwrap&& \\\n#     wget http://www.haproxy.org/download/1.5/src/haproxy-1.5.1.tar.gz && \\\n#     tar xzvf haproxy-1.5.1.tar.gz && \\\n#     cd haproxy-1.5.1 && \\\n#     make TARGET=linux26 USE_OPENSSL=1 && \\\n#     sudo make install && \\\n#     rm -rf /opt/haproxy-1.5.1 && \\\n#     rm -f /opt/haproxy-1.5.1.tar.gz\n\n# or just:   \nADD docker/haproxy /usr/local/sbin/\n\nRUN useradd haproxy   \n\n# serf\nADD docker/serf /usr/local/sbin\n\n# ADD docker/node /opt/node #one can add the node dir to the project instead perhaps\n\n# # Install Node\nRUN \\\n  cd /opt && \\\n  wget https://nodejs.org/dist/v0.10.28/node-v0.10.28-linux-x64.tar.gz && \\\n  tar -xzf node-v0.10.28-linux-x64.tar.gz && \\\n  mv node-v0.10.28-linux-x64 node && \\\n\n  cd /usr/local/bin && \\\n  ln -s /opt/node/bin/* . && \\\n  rm -f /opt/node-v0.10.28-linux-x64.tar.gz\n\nRUN \\\n   npm install -g nodemon && npm cache clean --force;\n\n# Set the working directory\nWORKDIR   /src\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}