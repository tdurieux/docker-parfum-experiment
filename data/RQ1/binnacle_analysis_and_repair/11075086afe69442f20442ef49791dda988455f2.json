{
  "startTime": 1674244451141,
  "endTime": 1674244451533,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM andreptb/tomcat:7-jdk8\n\n# DO NOT TOUCH ABOVE THIS LINE\n\n# INSTRUCTIONS\n# 1. Configure the OXL file and other settings in the ENV statement below\n# 2a. For AWS deployment, send the modified Dockerfile and accompanying Dockerrun.aws.json to ElasticBeanStalk (\"eb init\", \"eb create\" from within an empty folder containing a copy of the two files)) and run it there. It will take around 10 minutes to build the image and start it before you can access it at http://<beanstalk-load-balancer-name>/client/ (NB. Do not include :8080 in the URL)\n# 2b. Or, for local deployment in Docker, continue from step 3\n# 3. Build with \"docker image build --squash -t knetminer .\"\n# 4. Run the resulting image with \"docker run -p8080:8080 -it --rm knetminer\". You can access it at http://localhost:8080/client/\n\nENV oxl_file=https://s3.eu-west-2.amazonaws.com/nfventures-testing.knetminer/default.oxl  \\\n    semantic_motifs_file=https://s3.eu-west-2.amazonaws.com/nfventures-testing.knetminer/SemanticMotifs.txt  \\\n    basemap_file=https://s3.eu-west-2.amazonaws.com/nfventures-testing.knetminer/basemap.xml  \\\n    sample_query_file=https://s3.eu-west-2.amazonaws.com/nfventures-testing.knetminer/sampleQuery.xml  \\\n    background_image_file=https://s3.eu-west-2.amazonaws.com/nfventures-testing.knetminer/background.jpg  \\\n    release_notes_file=https://s3.eu-west-2.amazonaws.com/nfventures-testing.knetminer/release_notes.html  \\\n    tax_id=3702  \\\n    species_name=\"Arabidopsis thaliana\" \\\n    species_link_name=arabidopsis \\\n    keywords=\"arabidopsis, thaliana, knetminer, quickstart, demonstration\" \\\n    description=\"Arabidopsis Knetminer\" \\\n    reference_genome=true \\\n    git_branch=20181001_rhlastweek\n\n# DO NOT TOUCH BELOW THIS LINE\n\nEXPOSE 8080\nENV ds=/root/knetminer/common/quickstart/datasource/src/main \\\n    cl=/root/knetminer/common/quickstart/client/src/main/webapp/html \\\n    common=/root/knetminer/common\nWORKDIR /root\n\nRUN set -x \\\n && apk add --no-cache maven nodejs-npm git libxml2-utils \\\n && npm config set unsafe-perm true \\\n && npm install bower gulp -g \\\n && echo '{\"allow_root\":true}' > /root/.bowerrc \\\n && git clone --single-branch -b ${git_branch} https://github.com/Rothamsted/knetminer.git \\\n && cd knetminer \\\n && mkdir -p ${cl}/data ${cl}/image \\\n && wget -O /root/data.oxl ${oxl_file} \\\n && wget -O ${ds}/resources/SemanticMotifs.txt ${semantic_motifs_file} \\\n && wget -O ${cl}/data/basemap.xml ${basemap_file} \\\n && wget -O ${cl}/data/sampleQuery.xml ${sample_query_file} \\\n && wget -O ${cl}/image/background.jpg ${background_image_file} \\\n && wget -O ${cl}/release_notes.html ${release_notes_file} \\\n && mv ${ds}/resources/config.xml.template ${ds}/resources/config.xml \\\n && mv ${ds}/java/rres/knetminer/datasource/provider/Quickstart.java.template ${ds}/java/rres/knetminer/datasource/provider/Quickstart.java \\\n && mv ${cl}/release.html.template ${cl}/release.html \\\n && mv ${cl}/index.jsp.template ${cl}/index.jsp \\\n && mv ${cl}/javascript/utils-config.js.template ${cl}/javascript/utils-config.js \\\n && chromosomes=$(echo \"cat //genome/chromosome/@number\" | xmllint --shell ${cl}/data/basemap.xml | sed -n 's/[^\\\"]*\\\"\\([^\\\"]*\\)\\\"[^\\\"]*/\\1/gp' | sed -e :a -e '$!N; s/\\n/,/; ta';) \\\n && sed -e \"s/!!REFGENOME!!/${reference_genome}/g\" -i'' ${cl}/javascript/utils-config.js \\\n && sed -e \"s/!!SPECIES!!/${species_name}/g\" -i'' ${cl}/javascript/utils-config.js \\\n && sed -e \"s/!!LINKNAME!!/${species_link_name}/g\" -i'' ${cl}/javascript/utils-config.js \\\n && sed -e \"s/!!SPECIES!!/${species_name}/g\" -i'' ${cl}/release.html \\\n && sed -e \"/!!RELEASE!!/{r ${cl}/release_notes.html\" -e \"d}\" -i'' ${cl}/release.html \\\n && sed -e \"s/!!SPECIES!!/${species_name}/g\" -i'' ${cl}/index.jsp \\\n && sed -e \"s/!!CHROMOSOMES!!/${chromosomes}/g\" -i'' ${cl}/index.jsp \\\n && sed -e \"s/!!METAKEYWORDS!!/${keywords}/g\" -i'' ${cl}/index.jsp \\\n && sed -e \"s/!!METADESC!!/${description}/g\" -i'' ${cl}/index.jsp \\\n && sed -e \"s/!!REFGENOME!!/${reference_genome}/g\" -i'' ${ds}/resources/config.xml \\\n && sed -e \"s/!!TAXID!!/${tax_id}/g\" -i'' ${ds}/resources/config.xml \\\n && sed -e \"s/!!LINKNAME!!/${species_link_name}/g\" -i'' ${ds}/java/rres/knetminer/datasource/provider/Quickstart.java \\\n && mvn install \\\n && cd ${common} \\\n && mvn install \\\n && cd ${common}/server-datasource-api \\\n && mvn install \\\n && cd ${common}/server-datasource-ondexlocal \\\n && mvn install \\\n && cd ${common}/server-base \\\n && mvn install \\\n && cd ${common}/client-base \\\n && mvn install \\\n && cd ${common}/quickstart \\\n && mvn install \\\n && mv ${common}/quickstart/client/target/client.war ${CATALINA_HOME}/webapps \\\n && mv ${common}/quickstart/ws/target/ws.war ${CATALINA_HOME}/webapps \\\n && rm -rf /root/.m2 /root/knetminer && npm cache clean --force;\n\nCMD [\"catalina.sh\", \"run\"]\n"
}