{
  "startTime": 1674246515746,
  "endTime": 1674246516100,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:latest\nMAINTAINER Vilibald Wanča (wvi@apiary.io)\n\nENV EMCC_SDK_VERSION 1.37.15\nENV EMCC_SDK_ARCH 32\nENV EMCC_BINARYEN_VERSION 1.37.14\n\nWORKDIR /\n\nRUN apt-get update && apt-get install -y --no-install-recommends gnupg ca-certificates build-essential cmake curl git-core openjdk-8-jre-headless python \\\n    && apt-mark hold openjdk-8-jre-headless \\\n    && apt-mark hold make \\\n    && curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && curl -f https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz > emsdk-portable.tar.gz \\\n    && tar xzf emsdk-portable.tar.gz \\\n    && rm emsdk-portable.tar.gz \\\n    && cd emsdk-portable \\\n    && ./emsdk update \\\n    && ./emsdk install --build=MinSizeRel sdk-tag-$EMCC_SDK_VERSION-${EMCC_SDK_ARCH}bit \\\n    && ./emsdk install --build=MinSizeRel binaryen-tag-${EMCC_BINARYEN_VERSION}-${EMCC_SDK_ARCH}bit \\\n\n    && mkdir -p /clang \\\n    && cp -r /emsdk-portable/clang/tag-e$EMCC_SDK_VERSION/build_tag-e${EMCC_SDK_VERSION}_${EMCC_SDK_ARCH}/bin /clang \\\n    && mkdir -p /clang/src \\\n    && cp /emsdk-portable/clang/tag-e$EMCC_SDK_VERSION/src/emscripten-version.txt /clang/src/ \\\n    && mkdir -p /emscripten \\\n    && cp -r /emsdk-portable/emscripten/tag-$EMCC_SDK_VERSION/* /emscripten \\\n    && cp -r /emsdk-portable/emscripten/tag-${EMCC_SDK_VERSION}_${EMCC_SDK_ARCH}bit_optimizer/optimizer /emscripten/ \\\n    && mkdir -p /binaryen \\\n    && cp -r /emsdk-portable/binaryen/tag-${EMCC_BINARYEN_VERSION}_${EMCC_SDK_ARCH}bit_binaryen/* /binaryen \\\n    && echo \"import os\\nLLVM_ROOT='/clang/bin/'\\nNODE_JS='nodejs'\\nEMSCRIPTEN_ROOT='/emscripten'\\nEMSCRIPTEN_NATIVE_OPTIMIZER='/emscripten/optimizer'\\nSPIDERMONKEY_ENGINE = ''\\nV8_ENGINE = ''\\nTEMP_DIR = '/tmp'\\nCOMPILER_ENGINE = NODE_JS\\nJS_ENGINES = [NODE_JS]\\nBINARYEN_ROOT = '/binaryen/'\\n\" > ~/.emscripten \\\n    && rm -rf /emsdk-portable \\\n    && rm -rf /emscripten/tests \\\n    && rm -rf /emscripten/site \\\n    && rm -rf /binaryen/src /binaryen/lib /binaryen/CMakeFiles \\\n    && for prog in em++ em-config emar emcc emconfigure emmake emranlib emrun emscons emcmake; do \\\n           ln -sf /emscripten/$prog /usr/local/bin; done \\\n    && apt-get -y --purge remove gnupg curl git-core build-essential gcc \\\n    && apt-get -y clean \\\n    && apt-get -y autoclean \\\n    && apt-get -y autoremove \\\n    && echo \"Installed ... testing\" && rm -rf /var/lib/apt/lists/*;\nRUN emcc --version \\\n    && mkdir -p /tmp/emscripten_test && cd /tmp/emscripten_test \\\n    && printf '#include <iostream>\\nint main(){std::cout<<\"HELLO\"<<std::endl;return 0;}' > test.cpp \\\n    && em++ -O2 test.cpp -o test.js && nodejs test.js \\\n    && em++ test.cpp -o test.js && nodejs test.js \\\n    && em++ -s WASM=1 test.cpp -o test.js && nodejs test.js \\\n    && cd / \\\n    && rm -rf /tmp/emscripten_test \\\n    && echo \"All done.\"\n\nVOLUME [\"/src\"]\nWORKDIR /src\n\n"
}