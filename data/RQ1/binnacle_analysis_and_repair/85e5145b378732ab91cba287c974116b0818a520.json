{
  "startTime": 1674238634037,
  "endTime": 1674238634089,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Prepare\nFROM node:10.9.0-alpine AS base\n\nWORKDIR /opt/app\n\n# Install\nFROM base AS dependencies\n\nCOPY package.json yarn.lock ./\n\nRUN yarn --production --ignore-scripts --prefer-offline\nRUN cp -R node_modules production_node_modules\n\nRUN yarn\n\n# Build\nFROM base AS build\n\nCOPY --from=dependencies /opt/app/node_modules ./node_modules\n\nENV CI true\nCOPY tsconfig.json tslint.json ./\n\nCOPY src ./src\n\nCOPY package.json .\n\nRUN yarn build\n\n# Test\nCOPY jest.config.js .\nCOPY jest ./jest\n\nRUN yarn test && yarn cache clean;\n\n# Run\nFROM base AS run\n\nCOPY --from=dependencies /opt/app/production_node_modules ./node_modules\nCOPY --from=dependencies /opt/app/package.json .\nCOPY --from=build /opt/app/build ./build\n\nENV PORT 3001\nENV NODE_ENV production\n\nEXPOSE $PORT\n\nUSER node\n\nCMD [ \"node\", \"build/server.js\" ]\n"
}