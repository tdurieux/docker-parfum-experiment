{
  "startTime": 1674243265250,
  "endTime": 1674243265311,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 204
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# NOTICE: This docker image is built based sequenceiq/ambari which is open sourced under github: https://github.com/sequenceiq/docker-ambari\nFROM sequenceiq/ambari:1.7.0\nMAINTAINER dev@eagle.apache.org\n\n# Eagle environment\nENV EAGLE_HOME=/usr/hdp/current/eagle\nRUN yum install -y java-1.8.0-openjdk && rm -rf /var/cache/yum\nRUN mkdir -p /usr/java\nRUN ln -s /usr/lib/jvm/jre-1.8.0-openjdk.x86_64 /usr/java/default\nENV JAVA_HOME /usr/java/default\n\n# Install Eagle Package\n#\n# [Option #1] Download eagle package from external link\n# ENV EAGLE_DOWNLOAD_LINK http://66.211.190.194/eagle-0.1.0.tar.gz\n# RUN curl -sL $EAGLE_DOWNLOAD_LINK | tar -xz -C /usr/hdp/current\n# RUN cd /usr/hdp/current && ln -s ./eagle-0.1.0 eagle\n\n# [Option #2] Load eagle package from locally built,\n# In such way, should build with `eagle-docker.sh buid` instead of executing native\n# `docker build` directly, to prepare the eagle package into build/eagle\nADD target/eagle-current /usr/hdp/current/eagle\n\n\n# Load External Packages\nRUN yum install -y kafka zookeeper storm hbase tez hadoop snappy snappy-devel hadoop-libhdfs ambari-log4j hive hive-hcatalog hive-webhcat webhcat-tar-hive webhcat-tar-pig mysql-connector-java mysql-server && rm -rf /var/cache/yum\n\nENV SERF_HOME /usr/local/serf\n\nADD resource/serf /usr/local/serf\n\n# Load Static Resources\nADD resource/install-cluster.sh /tmp/\nADD resource/eagle-singlenode.json /tmp/\nADD resource/eagle-multinode.json /tmp/\nADD resource/wait-for-eagle.sh /tmp/\nADD resource/deploy-eagle.sh /usr/hdp/current/eagle/deploy.sh\n\nEXPOSE 8744 8080 2181 2888 6667 60020 60030 60010 9090\n"
}