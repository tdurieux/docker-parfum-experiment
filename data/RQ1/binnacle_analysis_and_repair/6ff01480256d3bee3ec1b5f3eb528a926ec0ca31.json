{
  "startTime": 1674251143765,
  "endTime": 1674251143939,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 14,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 14,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedDockerfile": "FROM artbio/ansible-galaxy-os:1604\n\nLABEL maintainer_2=\"Christophe Antoniewski <drosofff@gmail.com>\"\n\nRUN DEBIAN_FRONTEND=noninteractive  apt-get update  && \\\n    \\\n    \\\n    echo \"===> Allow start of services\"  && \\\n    echo \"exit 0\" > /usr/sbin/policy-rc.d && \\\n\n    apt-get install -y -qq --no-install-recommends \\\n    apt-transport-https software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends sudo -o Dpkg::Options::=\"--force-confold\" && rm -rf /var/lib/apt/lists/*;\n\n \\\nRUN DEBIAN_FRONTEND=noninteractive  apt-get update   && \\\n              echo \"===> Updating TLS certificates...\" && \\\n              apt-get install --no-install-recommends -y openssl ca-certificates && rm -rf /var/lib/apt/lists/*; ONBUILD\n\n\n\nCOPY  .  /setup\nWORKDIR /setup\n\nRUN sed -i -e 's/^# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/'  /etc/locale.gen && locale-gen\n\nENV LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8\n\n# work around for AUFS bug\n# as per https://github.com/docker/docker/issues/783#issuecomment-56013588\nRUN mkdir /etc/ssl/private-copy /var/lib/postgresql-copy && \\\n    mv /var/lib/postgresql/* /var/lib/postgresql-copy && \\\n    mv /etc/ssl/private/* /etc/ssl/private-copy/ && \\\n    rm -R /var/lib/postgresql /etc/ssl/private/ && \\\n    mv /var/lib/postgresql-copy /var/lib/postgresql && \\\n    mv /etc/ssl/private-copy /etc/ssl/private && \\\n    chmod -R 0700 /var/lib/postgresql /etc/ssl/private && \\\n    chown -R 1550:1550 /var/lib/postgresql /var/run/postgresql \\\n    /var/log/postgresql /etc/ssl/private /etc/postgresql\n\nRUN echo 'root ALL=(ALL:ALL) ALL' >> /etc/sudoers && echo 'postgres ALL=(ALL:ALL) ALL' >> /etc/sudoers\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# Warning: The following requirements pull down requires an ansible-galaxy-os compatible with ubuntu-xenial and postgresql 9.5\n# see for instance https://github.com/ARTbio/ansible-galaxy-os/tree/ubuntu-xenial, if not already merged\nRUN ansible-galaxy install -r requirements_roles.yml -p roles -f && \\\n    ansible-playbook -i inventory_files/docker -c local galaxy.yml\n\nENV NGINX_GALAXY_LOCATION=\"\" \\\nGALAXY_CONFIG_ADMIN_USERS=\"admin@galaxy.org\" \\\nNAT_MASQUERADE=false\n\nONBUILD  WORKDIR  /setup\nONBUILD  COPY  .  /setup\nADD startup.sh /startup.sh\nRUN chmod +x /startup.sh\n\n# Expose port 80 (webserver), 21 (FTP server), 8800 (Proxy), 9002 (supvisord web app)\nEXPOSE :80\nEXPOSE :21\nEXPOSE :8800\nEXPOSE :9002\n\nCMD [\"/startup.sh\", \"/setup/inventory_files/docker\"]\n"
}