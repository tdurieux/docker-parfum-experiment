{
  "startTime": 1674251917777,
  "endTime": 1674251918002,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 28,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Mozilla Kinto server\nFROM python:3.7-slim\n\nRUN groupadd --gid 10001 app && \\\n    useradd --uid 10001 --gid 10001 --home /app --create-home app\nWORKDIR /app\nCOPY . /app\n\nENV KINTO_INI /etc/kinto/kinto.ini\nENV PORT 8888\n\n# Install build dependencies, build the virtualenv and remove build\n# dependencies all at once to build a small image.\nRUN \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y gcc libpq5 curl libssl-dev libffi-dev libpq-dev gnupg2; rm -rf /var/lib/apt/lists/*; \\\n    curl -f -sL https://deb.nodesource.com/setup_10.x | bash -; \\\n    apt-get install --no-install-recommends -y nodejs; \\\n    cd kinto/plugins/admin; npm install; npm cache clean --force; npm run build; \\\n    pip3 install --no-cache-dir -e /app[postgresql,memcached,monitoring] -c /app/requirements.txt; \\\n    pip3 install --no-cache-dir kinto-attachment kinto-emailer kinto-elasticsearch kinto-portier kinto-redis; \\\n    kinto init --ini $KINTO_INI --host 0.0.0.0 --backend=memory --cache-backend=memory; \\\n    apt-get purge -y -qq gcc libssl-dev libffi-dev libpq-dev curl nodejs; \\\n    apt-get autoremove -y -qq; \\\n    apt-get clean -y\n\nUSER app\n# Run database migrations and start the kinto server\nCMD kinto migrate --ini $KINTO_INI && kinto start --ini $KINTO_INI --port $PORT\n"
}