{
  "startTime": 1674239154979,
  "endTime": 1674239155381,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Hadrien Mary <hadrien.mary@gmail.com>\n\n# Install core dependencies\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install -y \\\n        gcc g++ build-essential cmake bash libxcb1-dev libicu-dev \\\n        libssl-dev linux-headers-generic curl git libxrender-dev \\\n        libpng3 libpng-dev libjpeg-turbo8 libjpeg-turbo8-dev libicu55 libicu-dev \\\n        libgles2-mesa libgles2-mesa-dev libfreetype6-dev libsqlite3-dev \\\n\tlibgstreamer0.10-0 libgstreamer0.10-dev \\\n        libogg-dev libvorbis-dev bzip2 gperf bison ruby flex && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Choose Qt version\n\nENV QT_VERSION_MAJOR 5.9\nENV QT_VERSION 5.9.4\n\n# Compile and install Qt Base\n\nENV QT_DIST /usr/local/Qt-\"$QT_VERSION\"\nENV QT_BASE_SRC https://download.qt.io/official_releases/qt/\"$QT_VERSION_MAJOR\"/\"$QT_VERSION\"/submodules/qtbase-opensource-src-\"$QT_VERSION\".tar.xz\nENV QT_BASE_DIR /qtbase-opensource-src-\"$QT_VERSION\"\n\nRUN curl -f -sSL $QT_BASE_SRC | tar xJ \\\n    && cd $QT_BASE_DIR \\\n    && bash ./configure --help \\\n    && bash ./configure -opensource -confirm-license -static -no-accessibility -sql-sqlite -sqlite -no-qml-debug \\\n       -no-harfbuzz -openssl-linked -qt-pcre -no-dbus -nomake tools \\\n       -no-xkbcommon-evdev -no-xinput2 -no-xcb-xlib -no-glib -qt-xcb -no-compile-examples -nomake examples \\\n       -no-gif -qt-doubleconversion -no-gtk \\\n    && make install\n\nENV PATH $QT_DIST/bin:$PATH\n\n# Compile and install Qt Script\n\nENV QT_SCRIPT_SRC https://download.qt.io/official_releases/qt/\"$QT_VERSION_MAJOR\"/\"$QT_VERSION\"/submodules/qtscript-opensource-src-\"$QT_VERSION\".tar.xz\nENV QT_SCRIPT_DIR /qtscript-opensource-src-\"$QT_VERSION\"\n\nRUN curl -f -sSL $QT_SCRIPT_SRC | tar xJ \\\n    && cd $QT_SCRIPT_DIR \\\n    && qmake \\\n    && make install \\\n    && cd /\n\n# Compile and install Qt SVG\n\nENV QT_SVG_SRC https://download.qt.io/official_releases/qt/\"$QT_VERSION_MAJOR\"/\"$QT_VERSION\"/submodules/qtsvg-opensource-src-\"$QT_VERSION\".tar.xz\nENV QT_SVG_DIR /qtsvg-opensource-src-\"$QT_VERSION\"\n\nRUN curl -f -sSL $QT_SVG_SRC | tar xJ \\\n    && cd $QT_SVG_DIR \\\n    && qmake \\\n    && make install \\\n    && cd /\n\n# Compile and install Qt WebKit\n\nENV QT_WEBKIT_SRC https://download.qt.io/community_releases/\"$QT_VERSION_MAJOR\"/\"$QT_VERSION\"/qtwebkit-opensource-src-\"$QT_VERSION\".tar.xz\nENV QT_WEBKIT_DIR /qtwebkit-opensource-src-\"$QT_VERSION\"\n\n#RUN curl -sSL $QT_WEBKIT_SRC | tar xJ \\\n#    && cd $QT_WEBKIT_DIR \\\n#    && qmake \\\n#    && make install \\\n#    && cd /\n\n# Clean compilation files\n\nRUN cd $QT_BASE_DIR && make clean \\\n    && cd $QT_SCRIPT_DIR && make clean \\\n    && cd $QT_SVG_DIR && make clean\n\nADD build.sh /build.sh\nCMD [\"bash\", \"/build.sh\"]\n"
}