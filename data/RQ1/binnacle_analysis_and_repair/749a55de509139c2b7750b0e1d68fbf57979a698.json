{
  "startTime": 1674240776302,
  "endTime": 1674240776361,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 180
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:27\nMAINTAINER Kamran Azeem & Henrik HÃ¸egh (kaz@praqma.net, heh@praqma.net)\n\n# Install some tools in the container.\nRUN yum -y install procps-ng hostname bind-utils iputils iproute net-tools nmap tcpdump telnet traceroute mtr openssh-clients nginx postgresql mariadb nmap-ncat rsync ftp jq git \\\n    && yum clean all  \\\n    && mkdir /certs \\\n    && chmod 700 /certs && rm -rf /var/cache/yum\n\n# Interesting:\n# Users of this image may wonder, why this multitool runs a web server?\n# Well, normally, if a container does not run a daemon,\n#   ,then running it involves creating a special deployment.yaml file,\n#   ,which keeps the pod alive, so we can connect to it and do our testing, etc.\n# If you don't want to create that extra file,\n#   ,then it is best to 'also' run a web server (as a daemon) in the container - as default process.\n# This helps when you are on kubernetes platform and simply execute:\n#   $ kubectl run multitool --image=praqma/network-multitool --replicas=1\n\n# The multitool container starts - as web server. Then, you simply connect to it using:\n#   $ kubectl exec -it multitool-3822887632-pwlr1  bash\n\n# This is why it is good to have a webserver in this tool.\n# Besides, I believe that having a web server in a multitool is like having yet another tool!\n# Personally, I think this is cool! Henrik thinks the same!\n\n# Copy a simple index.html to eliminate text (index.html) noise which comes with default nginx image.\n# (I created an issue for this purpose here: https://github.com/nginxinc/docker-nginx/issues/234)\nCOPY index.html /usr/share/nginx/html/\n\n\n# Copy a custom nginx.conf with log files redirected to stderr and stdout\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY nginx-connectors.conf /etc/nginx/conf.d/\nCOPY server.* /certs/\n\nEXPOSE 80 443\n\nCOPY start_nginx.sh /\n\n# Run the startup script instead, which updates the index.html with our hostname, and starts nginx.\nCMD [\"/start_nginx.sh\"]\n\n\n###################################################################################################\n\n# Build and Push (to dockerhub) instructions:\n# -------------------------------------------\n# docker build -t network-multitool .\n# docker tag network-multitool praqma/network-multitool\n# docker login\n# docker push praqma/network-multitool\n\n\n# Pull (from dockerhub):\n# ----------------------\n# docker pull praqma/network-multitool\n\n\n# Usage - on Docker:\n# ------------------\n# docker run --rm -it praqma/network-multitool /bin/bash\n# OR\n# docker run -p 80:80 -p 443:443 -d  praqma/network-multitool\n\n\n# Usage - on Kubernetes:\n# ---------------------\n# kubectl run multitool --image=praqma/network-multitool --replicas=1\n"
}