{
  "startTime": 1674239905164,
  "endTime": 1674239905460,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 20,
        "columnEnd": 97
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 106
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 130
      }
    }
  ],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM ubuntu:16.04\nMAINTAINER Yanhui Zhao (yanhui.zhao@outlook.com)\n\n#set up your proxy below, please refer to readme in the Docker folder\nARG proxy_host=\"\"\nARG proxy_port=\"\"\nENV http_proxy ${proxy_host:+\"http://${proxy_host}:${proxy_port}\"}\nENV https_proxy ${http_proxy}\nENV HTTP_PROXY ${http_proxy}\nENV HTTPS_PROXY ${http_proxy}\n\nRUN echo The proxy set : ${http_proxy}\n\nRUN apt-get -y update && \\\n    apt-get install --no-install-recommends -y default-jdk cmake check git pkg-config autoconf man build-essential gcc g++ uuid-dev pandoc devscripts flex doxygen && rm -rf /var/lib/apt/lists/*;\n\n# required packages by pmdk\nRUN apt install --no-install-recommends -y autoconf asciidoc xmlto automake libtool libkmod-dev libudev-dev uuid-dev libjson-c-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean\n\nRUN curl -f -O http://mirror.cogentco.com/pub/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz && \\\n    tar xvf apache-maven-3.5.4-bin.tar.gz && \\\n    mv apache-maven-3.5.4 /usr/local/apache-maven && rm apache-maven-3.5.4-bin.tar.gz\n\nENV M2_HOME /usr/local/apache-maven\nENV M2 $M2_HOME/bin\nENV PATH $M2:$PATH\nENV JAVA_HOME /usr/lib/jvm/default-java\nENV PATH $JAVA_HOME/bin:$PATH\n\nRUN mkdir -p /ws\nRUN cd /ws && git clone https://github.com/NonVolatileComputing/pmalloc.git && \\\n    cd pmalloc && mkdir build && cd build && cmake .. && make && make install\n\nRUN cd /ws && git clone https://github.com/pmem/nvml.git && \\\n    cd nvml && git checkout 630862e82f && make && make install\n\n\n# deploy ndctl required by pmdk\nRUN cd /ws && git clone https://github.com/pmem/ndctl.git && \\\n    cd ndctl && git checkout ndctl-60.y && \\\n    ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS='-g -O0' --prefix=/usr --sysconfdir=/etc --libdir=/usr/lib && \\\n    make && make check && make install\n\n# deploy pmdk\nRUN cd /ws && git clone https://github.com/pmem/pmdk.git && \\\n    cd pmdk && git checkout stable-1.4 && make && \\\n#    the test run time is too long\n#    cp src/test/testconfig.sh.example src/test/testconfig.sh && make check && \\\n    make install\n\n\nRUN touch /etc/profile.d/mvn.sh && chmod +x /etc/profile.d/mvn.sh && \\\n    if [ \"x\" != \"x${proxy_host}\" ]; then echo export MAVEN_OPTS=\"\\\" -DproxySet=\\\\\\\"true\\\\\\\" -DproxyHost=${proxy_host} -DproxyPort=${proxy_port} \\\"\" > /etc/profile.d/mvn.sh; fi\n\nRUN cat /etc/profile.d/mvn.sh > ~/.bash_profile\nRUN cat /etc/profile.d/mvn.sh > ~/.bashrc\n\nRUN . /etc/profile.d/mvn.sh && cd /ws && git clone https://github.com/apache/mnemonic.git && \\\n    cd mnemonic && mvn clean package install\n\nENV MNEMONIC_HOME /ws/mnemonic\n\n#RUN cd /ws/mnemonic && bin/runall.sh -y\n\nWORKDIR /ws\n\nCMD [\"bash\"]\n\n"
}