{
  "startTime": 1674236050019,
  "endTime": 1674236050256,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM i386/debian:stretch-backports\n\n################################################################################\n### set metadata\nENV TOOL_NAME=msconvert\nENV TOOL_VERSION=3.0.18205\nENV CONTAINER_VERSION=1.3\nENV CONTAINER_GITHUB=https://github.com/phnmnl/container-pwiz\n\nLABEL version=1.3\nLABEL software.version=3.0.18205\nLABEL software=msconvert\nLABEL base.image=\"i386/debian:stretch-backports\"\nLABEL description=\"Convert LC/MS or GC/MS RAW vendor files to mzML.\"\nLABEL website=https://github.com/phnmnl/container-pwiz\nLABEL documentation=https://github.com/phnmnl/container-pwiz\nLABEL license=https://github.com/phnmnl/container-pwiz\nLABEL tags=\"Metabolomics\"\n\n# we need wget, bzip2, wine from winehq,\n# xvfb to fake X11 for winetricks during installation,\n# and winbind because wine complains about missing\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install wget gnupg && \\\n    echo \"deb http://dl.winehq.org/wine-builds/debian/ stretch main\" >> \\\n      /etc/apt/sources.list.d/winehq.list && \\\n    wget https://dl.winehq.org/wine-builds/winehq.key -qO- | apt-key add - && \\\n    apt-get update && \\\n    apt-get -y --install-recommends install \\\n      bzip2 unzip curl \\\n      winehq-devel \\\n      winbind \\\n      xvfb \\\n      cabextract \\\n      && \\\n    apt-get -y clean && \\\n    rm -rf \\\n      /var/lib/apt/lists/* \\\n      /usr/share/doc \\\n      /usr/share/doc-base \\\n      /usr/share/man \\\n      /usr/share/locale \\\n      /usr/share/zoneinfo \\\n      && \\\n    wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks \\\n      -O /usr/local/bin/winetricks && chmod +x /usr/local/bin/winetricks\n\n# put C:\\pwiz on the Windows search path\nENV WINEARCH win32\nENV WINEDEBUG -all,err+all\nENV WINEPATH \"C:\\pwiz\"\nENV DISPLAY :0\n\n# To be singularity friendly, avoid installing anything to /root\nRUN mkdir /wineprefix/\nENV WINEPREFIX /wineprefix\nWORKDIR /wineprefix\n\n# wineserver needs to shut down properly!!!\nADD waitonprocess.sh /wineprefix/waitonprocess.sh\nRUN chmod +x waitonprocess.sh\n\n# Install dependencies\nRUN winetricks -q win7 && xvfb-run winetricks -q vcrun2008 corefonts && xvfb-run winetricks -q dotnet452 && xvfb-run winetricks --force -q dotnet462  && ./waitonprocess.sh wineserver\n\n#\n# download ProteoWizard and extract it to C:\\pwiz\n#\n\n# Pull latest version from TeamCity\nRUN wget -O- \"https://teamcity.labkey.org/httpAuth/app/rest/builds/?locator=buildType:bt36,status:success,running:false,count:1&guest=1\" | sed -e 's#.*build id=\\\"\\([0-9]*\\)\\\".*#\\1#' >/tmp/pwiz.build\n\n# To specify a particular build,\n# e.g. https://teamcity.labkey.org/viewLog.html?buildId=574320&buildTypeId=bt36&tab=artifacts&guest=1\n# Don't forget to also change TOOL_VERSION=3.0.XXXX at the top of this file\n\n#RUN echo \"606438\" >/tmp/pwiz.build\n\n#RUN wget -O /tmp/pwiz.version https://teamcity.labkey.org/repository/download/bt36/`cat /tmp/pwiz.build`:id/VERSION?guest=1\nRUN wget -O /tmp/pwiz.artifacts https://teamcity.labkey.org/httpAuth/app/rest/builds/id:`cat /tmp/pwiz.build`/artifacts/children/?guest=1\nRUN mkdir /wineprefix/drive_c/pwiz && \\\n    wget -O /tmp/pwiz.tar.bz2 https://teamcity.labkey.org`cat /tmp/pwiz.artifacts | grep -o 'content href=\"[^\"]*bz2' | sed 's/content href=\"//g'`?guest=1\nRUN tar -f /tmp/pwiz.tar.bz2 --directory=/wineprefix/drive_c/pwiz -xj && rm /tmp/pwiz.tar.bz2\n\n## Add wrapper with xauth handling\nADD MSconvertGUI.sh /usr/local/bin\n\n## Prepare for container testing following\n## https://github.com/phnmnl/phenomenal-h2020/wiki/Testing-Guide-Proposal-3\nADD runTest1.sh /usr/local/bin/runTest1.sh\nRUN chmod +x /usr/local/bin/runTest1.sh\n\nADD runTest2.sh /usr/local/bin/runTest2.sh\nRUN chmod +x /usr/local/bin/runTest2.sh\n\n# Prepare that a user-specific WINEPREFIX can be set,\n# since the global wineprefix is owned by root\nADD mywine /usr/local/bin/mywine\nRUN mkdir /mywineprefix ; rm '/wineprefix/dosdevices/c:' ; ln -sf /wineprefix/drive_c /wineprefix/dosdevices/c\\: ; chmod 777 /mywineprefix ; chmod +x /usr/local/bin/mywine ; ln -sf /wineprefix/drive_c '/wineprefix/dosdevices/c:'\n\n# Set up working directory and permissions to let user xclient save data\nRUN mkdir /data\nWORKDIR /data\n\nCMD [\"mywine\", \"msconvert\" ]\n\n## If you need a proxy during build, don't put it into the Dockerfile itself:\n## docker build --build-arg http_proxy=http://www-cache.ipb-halle.de:3128/  -t phnmnl/pwiz:3.0.9098-0.1 .\n"
}