{
  "startTime": 1674236693203,
  "endTime": 1674236693264,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Build ui bundle stage\nFROM node:9.10.0-alpine as bundle-builder\n\n# Install native deps build tools\nRUN apk add --no-cache make gcc g++ python\n\nRUN\tmkdir -p /usr/app\nWORKDIR /usr/app\nCOPY public-src public-src\n\nWORKDIR /usr/app/public-src\nRUN npm install && npm cache clean --force;\nRUN npm run build:prod\n\n# Final image build with node env and static bundle\nFROM node:9.10.0-alpine\n\nRUN apk add --update --no-cache openssl\n\nRUN\tmkdir -p /usr/app\nWORKDIR /usr/app\n\nCOPY package.json .\nRUN npm install --only=production && npm cache clean --force;\nCOPY config.js .\nCOPY server.js .\nCOPY bin bin\nCOPY --from=bundle-builder /usr/app/public/ public\n\nENV NPM_CONFIG_LOGLEVEL error\nENV NODE_ENV production\nENV HOST \"0.0.0.0\"\nEXPOSE 8090\n\nCMD [\"npm\", \"start\"]\n"
}