{
  "startTime": 1674245698191,
  "endTime": 1674245698765,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 259
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 348
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 259
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 348
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 259
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 348
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 283
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 372
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\n\nMAINTAINER Eric Fairbanks <ericpfairbanks@gmail.com>\n\n# Install dependencies and audio tools\nRUN apt-get update\n\n# Install jackd by itself first without extras since installing alongside other tools seems to cause problems\nRUN apt-get -y --no-install-recommends install jackd && rm -rf /var/lib/apt/lists/*;\n\n# Install pretty much everything we need here\nRUN DEBIAN_FRONTEND='noninteractive' apt-get --no-install-recommends -y install build-essential xvfb git yasm supervisor libsndfile1-dev libsamplerate0-dev liblo-dev libasound2-dev wget ghc emacs-nox haskell-mode zlib1g-dev xz-utils htop screen openssh-server cabal-install curl sudo && rm -rf /var/lib/apt/lists/*;\n\n# Install jack libs last\nRUN apt-get -y --no-install-recommends install libjack-jackd2-dev && rm -rf /var/lib/apt/lists/*;\n\n# Build Dirt synth\nWORKDIR /repos\nRUN git clone --recursive https://github.com/tidalcycles/Dirt.git\nWORKDIR Dirt\nRUN make\n\n# Build & Install libmp3lame\nWORKDIR /repos\nRUN git clone https://github.com/rbrito/lame.git\nWORKDIR lame\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr lame\n\n# Build & Install ffmpeg, ffserver\nWORKDIR /repos\nRUN git clone https://github.com/efairbanks/FFmpeg.git ffmpeg\nWORKDIR ffmpeg\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-indev=jack --enable-libmp3lame --enable-nonfree --prefix=/usr\nRUN make install\nWORKDIR /repos\nRUN rm -fr ffmpeg\n\n# Initialize and configure sshd\nRUN mkdir /var/run/sshd\nRUN echo 'root:algorave' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# Expose sshd service\nEXPOSE 22\n\n# Expose ffserver streaming service\nEXPOSE 8090\n\n# Pull Tidal Emacs binding\nRUN mkdir /repos/tidal\nWORKDIR /repos\nWORKDIR tidal\nRUN wget https://raw.githubusercontent.com/tidalcycles/Tidal/master/tidal.el\n\nENV HOME /root\nWORKDIR /root\n\nRUN ln -s /repos /root/repos\nRUN ln -s /work /root/work\n\n# Install tidal\nRUN cabal update\nRUN cabal install tidal-0.9.6\n\n# build and install supercollider\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install cmake build-essential libjack-jackd2-dev libsndfile1-dev libasound2-dev libavahi-client-dev libicu-dev libreadline6-dev libfftw3-dev libxt-dev libudev-dev libcwiid-dev pkg-config qt5-default qt5-qmake qttools5-dev qttools5-dev-tools qtdeclarative5-dev libqt5webkit5-dev qtpositioning5-dev libqt5sensors5-dev libqt5opengl5-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /repos\nRUN git clone https://github.com/supercollider/supercollider.git\nWORKDIR /repos/supercollider\nRUN git checkout 3.8\nRUN git submodule init && git submodule update\nRUN mkdir /repos/supercollider/build\nWORKDIR /repos/supercollider/build\nRUN cmake -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/qt5/ ..\nRUN make\nRUN make install\nRUN ldconfig\n\n# Install supercollider plugins\nWORKDIR /usr/share/SuperCollider/Extensions\nRUN git clone https://github.com/musikinformatik/SuperDirt\nRUN git clone https://github.com/tidalcycles/Dirt-Samples\nRUN git clone https://github.com/supercollider-quarks/Vowel\n\n# Install default configurations\nCOPY configs/emacsrc /root/.emacs\nCOPY configs/screenrc /root/.screenrc\nCOPY configs/ffserver.conf /root/ffserver.conf\n\n# Install default Tidal files\nCOPY tidal/init.tidal /root/init.tidal\nCOPY tidal/hello.tidal /root/hello.tidal\n\n# Prepare scratch workspace for version control\nRUN sudo mkdir /work\nWORKDIR /work\nRUN mkdir /root/.ssh\nADD https://raw.githubusercontent.com/DoubleDensity/scratchpool/master/id_rsa-scratchpool /root/.ssh/id_rsa\nCOPY configs/sshconfig /root/.ssh/config\nRUN ssh-keyscan -H github.com >> ~/.ssh/known_hosts\nRUN git clone https://github.com/DoubleDensity/scratchpool.git\nWORKDIR /work/scratchpool\nRUN git config user.name \"SuperTidebox User\"\nRUN git config user.email \"supertidal@jankycloud.com\"\n\n# Install Tidebox supervisord config\nCOPY configs/tidebox.ini /etc/supervisor/conf.d/tidebox.conf\n\n# Copy inital supercollider/superdirt startup file\nCOPY configs/firststart.scd /root/.sclang.sc\n\n# Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n\n# Install Quarks\nWORKDIR /root\nRUN xvfb-run sclang -l sclang_conf.yaml\n#RUN xvfb-run sclang -l sclang_conf.yaml\n\n# Copy permanent supercollider/superdirt startup file\nCOPY configs/startup.scd /root/.sclang.sc\n\n# Make dummy sclang_conf.yaml to force sclang to recompile class library\nRUN touch /root/sclang_conf.yaml\n\n# set root shell to screen\nRUN echo \"/usr/bin/screen\" >> /etc/shells\nRUN usermod -s /usr/bin/screen root\n\nCMD [\"/usr/bin/supervisord\"]\n"
}