{
  "startTime": 1674250393283,
  "endTime": 1674250393550,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is intended to build a production-ready app image\nFROM phusion/passenger-ruby24:0.9.30\n\n# Add the app's binaries path to $PATH\nENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH\nENV APP_HOME /home/app/chemotion_ELN\nENV BUNDLE_PATH /bundle\n\n# Set correct environment variables\nENV HOME /root\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# Expose the web port\nEXPOSE 3000\n\n# prepare\nRUN add-apt-repository ppa:inkscape.dev/stable && \\\n  apt-get -y update --fix-missing && \\\n  apt-get -y --no-install-recommends install ca-certificates apt-transport-https git \\\n      imagemagick libmagic-dev libmagickcore-dev libmagickwand-dev curl \\\n      libappindicator1 swig \\\n      fonts-liberation xvfb gconf-service libasound2 libgconf-2-4 cmake \\\n      libnspr4 libnss3 libpango1.0-0 libxss1 xdg-utils libpq-dev \\\n      gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi \\\n      xfonts-base xfonts-scalable apt-utils cmake inkscape \\\n      libeigen3-dev build-essential wget nodejs sudo postgresql-client \\\n      libmagickcore-dev libmagickwand-dev imagemagick tzdata --fix-missing && rm -rf /var/lib/apt/lists/*;\n\n# node + npm via nvm; install npm packages\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | NVM_DIR=/usr/local/nvm bash\nRUN mkdir -p $APP_HOME\nWORKDIR $APP_HOME\nADD . $APP_HOME\n\nRUN /bin/bash -c 'bundle install'\nRUN /bin/bash -c 'source /usr/local/nvm/nvm.sh;\\\n  nvm install;\\\n  nvm use;\\\n  npm install'\n\nRUN echo '[ -s /usr/local/nvm/nvm.sh ] && . /usr/local/nvm/nvm.sh' >> /home/app/.bashrc\n\n# nginx. https://github.com/phusion/passenger-docker#configuring-nginx\nRUN rm -f /etc/service/nginx/down\nRUN rm /etc/nginx/sites-enabled/default\nADD chemotion_eln.conf /etc/nginx/sites-enabled/chemotion_eln.conf\nADD secret_key.conf /etc/nginx/main.d/secret_key.conf\nADD gzip_max.conf /etc/nginx/conf.d/gzip_max.conf\nADD postgres-env.conf /etc/nginx/main.d/postgres-env.conf\n\n# configure app\nRUN cp -a config/database.yml.example config/database.yml\nRUN cp -a config/storage.yml.example config/storage.yml\nRUN chmod +x run.sh\n\n# RUN chown -R app:app $APP_HOME\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/* /tmp/*\n"
}