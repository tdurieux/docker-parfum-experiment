{
  "startTime": 1674245116555,
  "endTime": 1674245116637,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Cross compile an llvm-mingw toolchain for windows.\n#\n# This needs to be built with --build-arg BASE=<image>, where image is the name\n# of a docker image that contains a working llvm-mingw cross compiler\n# from a similar enough version.\n#\n# This builds LLVM and all other build tools that need to run on the target\n# platform, but just copies over the runtime libraries from the existing\n# toolchain in the base docker image.\n\nARG BASE=mstorsjo/llvm-mingw:dev\nFROM $BASE\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -qqy zip && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG CROSS_ARCH=x86_64\nENV CROSS_TOOLCHAIN_PREFIX=/opt/llvm-mingw-$CROSS_ARCH\n\nENV EXEEXT=.exe\nENV HOST=$CROSS_ARCH-w64-mingw32\n\nARG FULL_LLVM\n\nCOPY build-llvm.sh .\nRUN ./build-llvm.sh $CROSS_TOOLCHAIN_PREFIX\nCOPY strip-llvm.sh .\nRUN ./strip-llvm.sh $CROSS_TOOLCHAIN_PREFIX\n\nARG TOOLCHAIN_ARCHS=\"i686 x86_64 armv7 aarch64\"\n\nCOPY build-mingw-w64.sh ./\nRUN ./build-mingw-w64.sh $CROSS_TOOLCHAIN_PREFIX --skip-include-triplet-prefix\n\nCOPY wrappers/*.sh wrappers/*.c wrappers/*.h ./wrappers/\nCOPY install-wrappers.sh .\nRUN ./install-wrappers.sh $CROSS_TOOLCHAIN_PREFIX\n\nCOPY prepare-cross-toolchain.sh .\nRUN ./prepare-cross-toolchain.sh $TOOLCHAIN_PREFIX $CROSS_TOOLCHAIN_PREFIX $CROSS_ARCH\n\nARG TAG\nRUN ln -s $CROSS_TOOLCHAIN_PREFIX llvm-mingw && \\\n    zip -9r /llvm-mingw-$TAG$CROSS_ARCH.zip llvm-mingw && \\\n    ls -lh /llvm-mingw-$TAG$CROSS_ARCH.zip\n"
}