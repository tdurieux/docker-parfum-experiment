{
  "startTime": 1674245130780,
  "endTime": 1674245131021,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 173
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 20,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Takipi\nFROM alpine:3.3\n\nMAINTAINER Chen Harel \"https://github.com/chook\"\n\n# Install dependencies\nRUN apk --update --no-cache add curl ca-certificates tar sqlite icu bash && \\\n    curl -f -Ls https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64/glibc-2.21-r2.apk > /tmp/glibc-2.21-r2.apk && \\\n    apk add --no-cache --allow-untrusted /tmp/glibc-2.21-r2.apk\n\nENV LANG C.UTF-8\n\n# Java Version\nENV JAVA_VERSION_MAJOR 8\nENV JAVA_VERSION_MINOR 91\nENV JAVA_VERSION_BUILD 14\nENV JAVA_PACKAGE       jdk\n\n# Download and unarchive Java\nRUN mkdir /opt && curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" \\\n  https://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz \\\n    | tar -xzf - -C /opt && \\\n    ln -s /opt/jdk1.8.0_91 /opt/jdk && \\\n    rm -rf /opt/jdk/*src.zip \\\n           /opt/jdk/lib/missioncontrol \\\n           /opt/jdk/lib/visualvm \\\n           /opt/jdk/lib/*javafx* \\\n           /opt/jdk/jre/lib/plugin.jar \\\n           /opt/jdk/jre/lib/ext/jfxrt.jar \\\n           /opt/jdk/jre/bin/javaws \\\n           /opt/jdk/jre/lib/javaws.jar \\\n           /opt/jdk/jre/lib/desktop \\\n           /opt/jdk/jre/plugin \\\n           /opt/jdk/jre/lib/deploy* \\\n           /opt/jdk/jre/lib/*javafx* \\\n           /opt/jdk/jre/lib/*jfx* \\\n           /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n           /opt/jdk/jre/lib/amd64/libprism_*.so \\\n           /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n           /opt/jdk/jre/lib/amd64/libglass.so \\\n           /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n           /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n           /opt/jdk/jre/lib/amd64/libjfx*.so \\\n    && addgroup -g 999 app && adduser -D  -G app -s /bin/false -u 999 app \\\n    && rm -rf /tmp/* \\\n    && rm -rf /var/cache/apk/* \\\n    && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n# Set environment\nENV JAVA_HOME /opt/jdk\nENV PATH ${PATH}:/opt/jdk/bin\t\n\n### Takipi Installation\n\n# Takipi installer dependencies (we need xz for a future untar process)\nRUN apk --update --no-cache add xz\nRUN curl -f -Ls https://www.archlinux.org/packages/core/x86_64/gcc-libs/download > /tmp/gcc-libs.tar.gz && \\\n\tmkdir /usr/libgcc && tar -xvf /tmp/gcc-libs.tar.gz -C /usr/libgcc && rm /tmp/gcc-libs.tar.gz\nRUN curl -f -Ls https://www.archlinux.org/packages/core/x86_64/zlib/download/ > /tmp/zlib.tar.gz && \\\n\tmkdir /usr/zlib && tar -xvf /tmp/zlib.tar.gz -C /usr/zlib && rm /tmp/zlib.tar.gz\nRUN echo /usr/zlib/usr/lib >> /etc/ld.so.conf\nRUN echo /usr/libgcc/usr/lib >> /etc/ld.so.conf\nRUN /usr/glibc/usr/bin/ldconfig\n\n# Install Takipi\nRUN curl -f -Ls /dev/null http://get.takipi.com/takipi-t4c-installer | \\\n\tbash /dev/stdin -i --sk=S3875#YAFwDEGg5oSIU+TM#G0G7VATLOqJIKtAMy1MObfFINaQmVT5hGYLQ+cpPuq4=#87a1\nRUN echo /opt/takipi/lib >> /etc/ld.so.conf\nRUN /usr/glibc/usr/bin/ldconfig\n\n### Takipi installation complete\n\n# Getting Java tester\nRUN wget https://s3.amazonaws.com/app-takipi-com/chen/scala-boom.jar -O scala-boom.jar\n\n# Running a java process with Takipi\nCMD java -agentlib:TakipiAgent -jar scala-boom.jar\n"
}