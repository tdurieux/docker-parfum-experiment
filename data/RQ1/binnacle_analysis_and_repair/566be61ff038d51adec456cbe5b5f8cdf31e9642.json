{
  "startTime": 1674237115712,
  "endTime": 1674237116116,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 62,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 88,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04\nMAINTAINER sergey.serebryakov@hpe.com\n\n# FIXME: Install OpenBLAS and compile numpy from sources linking with OpenBLAS.\n# FIXME: What about OpenCV?\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        numactl \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-scipy && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN git clone https://github.com/xianyi/OpenBLAS.git && cd ./OpenBLAS && \\\n    make -j\"$(nproc)\" && make install PREFIX=/opt/OpenBLAS && \\\n    cd .. && rm -rf ./OpenBLAS\n\n# This is where Caffe will be installed\nENV CAFFE_ROOT=/opt/caffe\n\n# NVIDIA Caffe's version to clone\nARG version=master\nARG cuda_arch_bin=\"30 35 50 60 61\"\nARG cuda_arch_ptx=\"50\"\n\n# Sergey: I did not have time to figure this out, on some systems I need to specify paths to NVML library manually.\n#         You will need this if you get bunch of errors saying nvml* functions are not resolved.\n#cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 -DNDEBUG=1 -DNVML_FOUND=1 -DNVML_LIBRARY=/usr/local/cuda/lib64/stubs/libnvidia-ml.so -DNVML_INCLUDE_DIR=/usr/local/cuda/include .. && \\\n#cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 -DNDEBUG=1 -DNVML_FOUND=0 .. && \\\nRUN git clone https://github.com/NVIDIA/caffe nvidia_caffe && cd ./nvidia_caffe && \\\n    git reset --hard ${version} && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && pip install --no-cache-dir scikit-image && cd .. && \\\n    git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j install && cd .. && rm -rf nccl && \\\n    mkdir build && cd build && \\\n    cmake -DCUDA_ARCH_NAME=\"Manual\"\\\n          -DCUDA_ARCH_BIN=\"${cuda_arch_bin}\"\\\n          -DCUDA_ARCH_PTX=\"${cuda_arch_ptx}\"\\\n          -DUSE_CUDNN=1\\\n          -DUSE_NCCL=1\\\n          -DNDEBUG=1\\\n          -DNVML_FOUND=1\\\n          -DNVML_LIBRARY=/usr/local/cuda/lib64/stubs/libnvidia-ml.so\\\n          -DNVML_INCLUDE_DIR=/usr/local/cuda/include\\\n          -DBLAS=open\\\n          -DBLAS_INCLUDE=/opt/OpenBLAS/include\\\n          -DBLAS_LIB=/opt/OpenBLAS/lib\\\n          -DCMAKE_INSTALL_PREFIX=$CAFFE_ROOT .. && \\\n    make -j\"$(nproc)\" && make install && \\\n    cd ../../ && rm -rf ./nvidia_caffe\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/bin:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/lib\" >> /etc/ld.so.conf.d/caffe.conf && \\\n    echo \"/opt/OpenBLAS/lib\" >> /etc/ld.so.conf.d/caffe.conf && \\\n    ldconfig\n\nWORKDIR /workspace\n"
}