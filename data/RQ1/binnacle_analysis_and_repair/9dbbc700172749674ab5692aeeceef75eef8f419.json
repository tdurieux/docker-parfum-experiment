{
  "startTime": 1674240945678,
  "endTime": 1674240946336,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 208,
        "lineEnd": 209,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 211,
        "lineEnd": 212,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 199,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 199,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 117,
        "lineEnd": 173,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 199,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 199,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# Build image\nFROM ubuntu:16.04 AS build-env\n\n# install base packages, supervisor, cron, logrotate\nRUN apt-get -y update \\\n    && apt-get install --no-install-recommends -yq \\\n       autoconf \\\n       build-essential \\\n       gcc \\\n       git \\\n       libjansson-dev \\\n       make \\\n       openssl \\\n       software-properties-common \\\n       unzip \\\n       wget \\\n       zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    ZEPHIR_VERSION=0.11.12 \\\n    ZEPHIR_PARSER_VERSION=v1.3.1 \\\n    NGINX_VERSION=1.16.0 \\\n    NGINX_USER=www-data \\\n    NGINX_CONF_PATH=/etc/nginx \\\n    NGINX_LOG_PATH=/var/log/nginx \\\n    NGINX_BUILD=Ubuntu \\\n    PCRE_VERSION=8.43 \\\n    PCRE_PATH=/var/lib/pcre \\\n    OPENSSL_VERSION=openssl-1.0.2o\n\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php \\\n    && apt-get update -y\n\n# PHP 7.2 with dependencies\nRUN apt-get \\\n    -o Dpkg::Options::=\"--force-confdef\" \\\n    -o Dpkg::Options::=\"--force-confold\" \\\n    install -y -f --no-install-recommends \\\n        jq \\\n        libc6-dev \\\n        libexpat-dev \\\n        libgeoip-dev \\\n        libpcre3-dev \\\n        libssh2-1-dev \\\n        libssl-dev \\\n        libxslt1-dev \\\n        libyaml-dev \\\n        lsb-release \\\n        php7.2-cli \\\n        php7.2-common \\\n        php7.2-dev \\\n        php7.2-xml \\\n        re2c && rm -rf /var/lib/apt/lists/*;\n\n# Nginx dependencies\nRUN apt-get \\\n    -o Dpkg::Options::=\"--force-confdef\" \\\n    -o Dpkg::Options::=\"--force-confold\" \\\n    install -y -f --no-install-recommends \\\n        libexpat-dev \\\n        libmaxminddb-dev \\\n        mmdb-bin \\\n        libmaxminddb0 && rm -rf /var/lib/apt/lists/*;\n\n# Turn the detached message off\nRUN git config --global advice.detachedHead false\n\nCOPY ./installers /installers\n\n# Build custom extensions and move it to /artifacts folder\nRUN mkdir /artifacts \\\n    && bash /installers/zephir-parser.sh \\\n    && bash /installers/zephir.sh \\\n    && bash /installers/pinba.sh\n\n# Update openssl from openssl 1.0.2g to 1.0.2o\nRUN bash /installers/openssl.sh\n\n# configure NGINX from source\nRUN bash /installers/nginx.sh\nCOPY ./configs/etc/nginx/nginx.conf /etc/nginx/nginx.conf\n\n# Application image\nFROM phalconphp/base:ubuntu-16.04\n\nLABEL description=\"Application image to use for production with PHP and Nginx\" \\\n      maintainer=\"Serghei Iakovlev <serghei@phalconphp.com>\" \\\n      vendor=Phalcon \\\n      name=\"com.phalconphp.images.ubuntu-16.04.php-7.2\"\n\nARG GITHUB_TOKEN\nARG GITHUB_USER\nARG PINBA_SERVER\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    FPM_MAX_CHILDREN=32 \\\n    FPM_START_SERVERS=6 \\\n    FPM_MIN_SPARE_SERVERS=2 \\\n    FPM_MAX_SPARE_SERVERS=8 \\\n    FPM_PROCESS_IDLE_TIMEOUT=5 \\\n    FPM_MAX_REQUEST=1024 \\\n    PATH=/root/composer/vendor/bin:$PATH \\\n    COMPOSER_HOME=/root/composer \\\n    COMPOSER_ALLOW_SUPERUSER=1 \\\n    PCRE_PATH=/var/lib/pcre \\\n    PINBA_SERVER=${PINBA_SERVER:-} \\\n    GITHUB_USER=${GITHUB_USER:-} \\\n    GITHUB_TOKEN=${GITHUB_TOKEN:-}\n\n# TODO: HEALTHCHECK\n\nCOPY ./configs/etc/dpkg/dpkg.cfg.d/ /etc/dpkg/dpkg.cfg.d/\n\nRUN LC_ALL=C.UTF-8 apt-add-repository -y ppa:ondrej/php\n\n# Install php 7.2 with libs and other software\nRUN apt-get update -y \\\n    && apt-get \\\n    -o Dpkg::Options::=\"--force-confdef\" \\\n    -o Dpkg::Options::=\"--force-confold\" \\\n    install -y -f --no-install-recommends \\\n      dnsutils \\\n      iproute2 \\\n      libc6-dev \\\n      libgeoip-dev \\\n      libpcre3-dev \\\n      libssh2-1-dev \\\n      libssl-dev \\\n      libyaml-dev \\\n      lsb-release \\\n      php-amqp \\\n      php-apcu-bc \\\n      php-igbinary \\\n      php-memcache \\\n      php-pear \\\n      php-sodium \\\n      php-ssh2 \\\n      php-xdebug \\\n      php-yaml \\\n      php7.2-bcmath \\\n      php7.2-cgi \\\n      php7.2-cli \\\n      php7.2-common \\\n      php7.2-curl \\\n      php7.2-dba \\\n      php7.2-dev \\\n      php7.2-fpm \\\n      php7.2-gd \\\n      php7.2-gmp \\\n      php7.2-imagick \\\n      php7.2-imap \\\n      php7.2-intl \\\n      php7.2-json \\\n      php7.2-mbstring \\\n      php7.2-memcached \\\n      php7.2-mongodb \\\n      php7.2-msgpack \\\n      php7.2-mysql \\\n      php7.2-odbc \\\n      php7.2-opcache \\\n      php7.2-pgsql \\\n      php7.2-phalcon \\\n      php7.2-pspell \\\n      php7.2-recode \\\n      php7.2-redis \\\n      php7.2-soap \\\n      php7.2-tidy \\\n      php7.2-xml \\\n      php7.2-zip \\\n      software-properties-common \\\n      swig \\\n      tmpreaper \\\n      unzip \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\n# Create required directories\nRUN mkdir -p \\\n    /app \\\n    /tmp/xdebug-{profile,outpt} \\\n    /run/php \\\n    /var/log/php \\\n    /var/lib/nginx/{cache,proxy} \\\n    $COMPOSER_HOME\n\nCOPY --from=build-env /artifacts/ /\nCOPY ./configs/etc/php/7.2/ /etc/php/7.2/\n\nRUN wget -qO- https://getcomposer.org/installer | \\\n       php -- --install-dir=/usr/local/bin --filename=composer \\\n    && chmod +x /usr/local/bin/composer\n\n# Disable following modules by default\nRUN phpdismod -v 7.2 apcu_bc \\\n    && phpdismod -v 7.2 apcu \\\n    && phpdismod -v 7.2 mongodb \\\n    && phpdismod -v 7.2 pinba \\\n    && phpdismod -v 7.2 xdebug\n\n# Nginx with GeoIP setup\nRUN apt-get install --no-install-recommends -y \\\n    libjansson-dev \\\n    libmaxminddb0 \\\n    mmdb-bin \\\n    nginx \\\n    openssl \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /usr/share/GeoIP \\\n    && wget -qO - \\\n      https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz \\\n      | gunzip -c > /usr/share/GeoIP/maxmind-city.mmdb \\\n    && wget -qO - \\\n      https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz \\\n      | gunzip -c > /usr/share/GeoIP/maxmind-country.mmdb\n\nCOPY --from=build-env $PCRE_PATH $PCRE_PATH\nCOPY --from=build-env /usr/sbin/nginx /usr/sbin/nginx\nCOPY ./configs/etc/nginx/ /etc/nginx/\n\n# Supervisor && logrotate\nCOPY ./configs/etc/supervisor/ /etc/supervisor/\nCOPY ./configs/etc/logrotate.d/ /etc/logrotate.d/\n\n# Startup scripts\nCOPY ./entrypoint.sh /entrypoint.sh\nCOPY ./entrypoint.d /entrypoint.d\n\n# Final check and preparing entrypoint\nRUN echo \\\n    && nginx -v \\\n    && php --version | head -n 1 \\\n    && composer --version --no-ansi \\\n    && zephir --version \\\n    && php -r 'echo \"Phalcon \" . \\Phalcon\\Version::get() . \"\\n\";' \\\n    && echo -n \"Zephir Parser \" && php \\\n      -d extension=`php-config --extension-dir`/zephir_parser.so \\\n      --ri \"Zephir Parser\" | grep Version | awk '{print $3}' \\\n    && echo \\\n    && chmod +x /entrypoint.sh\n\n# Cleanup\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /tmp/* /var/tmp/* \\\n    && rm -rf /usr/share/doc/* \\\n    && rm -rf /usr/share/man/* \\\n    && rm -rf /usr/share/locale/* \\\n    && rm -f /var/log/php7.2-fpm.log \\\n    && find /var/cache/apt/archives /var/lib/apt/lists \\\n       -not -name lock \\\n       -type f \\\n       -delete \\\n    && find /var/cache -type f -not -name lock -delete \\\n    && find /var/log -type f | while read f; do echo -n '' > ${f}; done\n\nVOLUME /app \\\n       /var/log/nginx \\\n       /var/log/php \\\n       /tmp/xdebug-profile \\\n       /tmp/xdebug-outupt \\\n       /var/lib/nginx/cache \\\n       /var/lib/nginx/proxy\n\nWORKDIR /app\n\n# Local Variables:\n# tab-width: 4\n# End:\n"
}