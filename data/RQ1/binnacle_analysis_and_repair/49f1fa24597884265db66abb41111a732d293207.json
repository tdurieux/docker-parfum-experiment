{
  "startTime": 1674248982673,
  "endTime": 1674248982739,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The base image we inherit from is marsha:latest, but you can override this by\n# passing a build argument to your build command, e.g.:\n#\n# docker build --build-arg BASE_TAG=${CIRCLE_SHA1} .\n#\nARG BASE_TAG=latest\n\nFROM marsha:${BASE_TAG}\n\n# Switch back to the root user to install development dependencies\nUSER root:root\n\n# Install vim\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    vim && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install development dependencies\nRUN pip install --no-cache-dir .[dev]\n\n# Install dockerize. It is used to ensure that the database service is accepting\n# connections before trying to access it from the main application.\nENV DOCKERIZE_VERSION v0.6.1\nRUN curl -f -L \\\n    --output dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && \\\n    tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && \\\n    rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n"
}