{
  "startTime": 1674236122103,
  "endTime": 1674236122327,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 71
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\n\nARG perf_test_version=\"2.7.0\"\n\nRUN set -eux; \\\n\n\tapt-get update; \\\n\tapt-get install --yes --no-install-recommends \\\n\t\tca-certificates \\\n\t\twget \\\n\t\tgnupg && rm -rf /var/lib/apt/lists/*;\n\n# change the JAVA_URL variable below as well\nENV JAVA_VERSION=\"11.0.3\"\n# https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.3%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.3_7.tar.gz.sha256.txt\nENV JAVA_SHA256=\"23cded2b43261016f0f246c85c8948d4a9b7f2d44988f75dad69723a7a526094\"\nENV JAVA_URL=\"https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.3%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.3_7.tar.gz\"\n\nRUN set -eux; \\\n\n    JAVA_PATH=\"/usr/lib/jdk-$JAVA_VERSION\"; \\\n\n    wget --progress dot:giga --output-document \"$JAVA_PATH.tar.gz\" \"$JAVA_URL\"; \\\n\techo \"$JAVA_SHA256  *$JAVA_PATH.tar.gz\" | sha256sum --check --strict -; \\\n\tmkdir -p \"$JAVA_PATH\"; \\\n\ttar --extract --file \"$JAVA_PATH.tar.gz\" --directory \"$JAVA_PATH\" --strip-components 1; rm \"$JAVA_PATH.tar.gz\" \\\n\t$JAVA_PATH/bin/jlink --compress=2 --output /jre --add-modules java.base,java.management,java.xml,java.naming,java.sql; \\\n\t/jre/bin/java -version\n\n# pgpkeys.uk is quite reliable, but allow for substitutions locally\nARG PGP_KEYSERVER=pgpkeys.uk\n# If you are building this image locally and are getting `gpg: keyserver receive failed: No data` errors,\n# run the build with a different PGP_KEYSERVER, e.g. docker build --tag rabbitmq:3.7 --build-arg PGP_KEYSERVER=pgpkeys.eu 3.7/ubuntu\n# For context, see https://github.com/docker-library/official-images/issues/4252\n\n# https://www.rabbitmq.com/signatures.html#importing-gpg\nENV RABBITMQ_PGP_KEY_ID=\"0x0A9AF2115F4687BD29803A206B73A36E6026DFCA\"\nENV PERF_TEST_HOME=\"/perf_test\"\n\nRUN set -eux; \\\n\n    PERF_TEST_URL=https://github.com/rabbitmq/rabbitmq-perf-test/releases/download/v$perf_test_version/rabbitmq-perf-test-$perf_test_version-bin.tar.gz; \\\n    PERF_TEST_PATH=\"/usr/local/src/perf-test-$perf_test_version\"; \\\n\n    wget --progress dot:giga --output-document \"$PERF_TEST_PATH.tar.gz.asc\" \"$PERF_TEST_URL.asc\"; \\\n    wget --progress dot:giga --output-document \"$PERF_TEST_PATH.tar.gz\" \"$PERF_TEST_URL\"; \\\n    PERF_TEST_SHA256=\"$(wget -qO- $PERF_TEST_URL.sha256)\"; \\\n    echo \"$PERF_TEST_SHA256  *$PERF_TEST_PATH.tar.gz\" | sha256sum --check --strict -; \\\n\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver \"$PGP_KEYSERVER\" --recv-keys \"$RABBITMQ_PGP_KEY_ID\"; \\\n    gpg --batch --verify \"$PERF_TEST_PATH.tar.gz.asc\" \"$PERF_TEST_PATH.tar.gz\"; \\\n    gpgconf --kill all; \\\n    rm -rf \"$GNUPGHOME\"; \\\n\n    mkdir -p \"$PERF_TEST_HOME\"; \\\n    tar --extract --file \"$PERF_TEST_PATH.tar.gz\" --directory \"$PERF_TEST_HOME\" --strip-components 1 && rm \"$PERF_TEST_PATH.tar.gz\"\n\nFROM ubuntu:18.04\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.11-openjdk/jre\nRUN mkdir -p $JAVA_HOME\nCOPY --from=builder /jre $JAVA_HOME/\nRUN ln -svT $JAVA_HOME/bin/java /usr/local/bin/java\n\nRUN mkdir -p /perf_test\nWORKDIR /perf_test\nCOPY --from=builder /perf_test ./\nRUN bin/runjava com.rabbitmq.perf.PerfTest --help\n\nENTRYPOINT [\"bin/runjava\", \"com.rabbitmq.perf.PerfTest\"]\n"
}