{
  "startTime": 1674244424916,
  "endTime": 1674244425059,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 3,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to run a Django-based web application\n# Based on a Python 3.6 image\n#\n# Copyright 2017-2019 ControlScan, Inc.\n#\n# This file is part of Cyphon Engine.\n#\n# Cyphon Engine is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, version 3 of the License.\n#\n# Cyphon Engine is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Cyphon Engine. If not, see <http://www.gnu.org/licenses/>.\n#\n############################################################\n\nFROM python:3.6-alpine\n\nMAINTAINER Cyphon <cyphondev@controlscan.com>\n\nARG UID=1000\nARG GID=1000\n\nENV CYPHON_HOME /usr/src/app\nENV LOG_DIR     /var/log/cyphon\nENV PATH        $PATH:$CYPHON_HOME\nENV NLTK_DATA   /usr/share/nltk_data\n\n# copy requirements.txt to the image\nCOPY requirements.txt $CYPHON_HOME/requirements.txt\n\n# install Alpine and Python dependencies\nRUN apk add -U --no-cache \\\n      --repository http://dl-5.alpinelinux.org/alpine/edge/main/ \\\n      --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ \\\n      binutils \\\n      gdal \\\n      postgis \\\n      proj4-dev \\\n      py-gdal \\\n      su-exec \\\n&& ln -s /usr/lib/libgdal.so.20 /usr/lib/libgdal.so \\\n&& ln -s /usr/lib/libgeos_c.so.1 /usr/lib/libgeos_c.so \\\n&& apk add -U --no-cache \\\n      --repository http://dl-5.alpinelinux.org/alpine/edge/main/ \\\n      --repository http://dl-5.alpinelinux.org/alpine/edge/testing/ \\\n      -t build-deps \\\n      build-base \\\n      libffi-dev \\\n      libressl-dev \\\n      openssl-dev \\\n      linux-headers \\\n      musl-dev \\\n      postgis \\\n      postgresql-dev \\\n      python3-dev \\\n      jpeg-dev \\\n      zlib-dev \\\n      tiff-dev \\\n&& pip install --no-cache-dir --upgrade pip \\\n&& pip install --no-cache-dir -r $CYPHON_HOME/requirements.txt \\\n&& apk del build-deps \\\n&& python -m nltk.downloader -d /usr/local/share/nltk_data punkt wordnet\n\n# create unprivileged user\nRUN addgroup -S -g $GID cyphon && adduser -S -G cyphon -u $UID cyphon\n\n# create application subdirectories\nRUN mkdir -p $CYPHON_HOME \\\n             $CYPHON_HOME/media \\\n             $CYPHON_HOME/static \\\n             $LOG_DIR\n\n# copy project to the image\nCOPY cyphon $CYPHON_HOME/cyphon\n\n# copy entrypoint scripts to the image\nCOPY entrypoints $CYPHON_HOME/entrypoints\n\nCOPY cyphon/cyphon/settings/base.example.py $CYPHON_HOME/cyphon/cyphon/settings/base.py\nCOPY cyphon/cyphon/settings/conf.example.py $CYPHON_HOME/cyphon/cyphon/settings/conf.py\nCOPY cyphon/cyphon/settings/dev.example.py $CYPHON_HOME/cyphon/cyphon/settings/dev.py\nCOPY cyphon/cyphon/settings/prod.example.py $CYPHON_HOME/cyphon/cyphon/settings/prod.py\n\n# set owner:group and permissions\nRUN chown -R cyphon:cyphon $CYPHON_HOME \\\n && chmod -R 775 $CYPHON_HOME \\\n && chown -R cyphon:cyphon $LOG_DIR \\\n && chmod -R 775 $LOG_DIR\n\nWORKDIR $CYPHON_HOME/cyphon\n\nVOLUME [\"$CYPHON_HOME/keys\", \"$CYPHON_HOME/media\", \"$CYPHON_HOME/static\"]\n\nEXPOSE 8000\n\nCMD $CYPHON_HOME/entrypoints/run.sh\n"
}