{
  "startTime": 1674245863493,
  "endTime": 1674245863886,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 42,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "#\n# This Docker image file encapsulates Metasploit Framework, which is distributed\n# from https://github.com/rapid7/metasploit-framework\n#\n# To run this image after installing Docker, use a command like this:\n#\n# sudo docker run --rm -it -p 443:443 -v ~/.msf4:/root/.msf4 -v /tmp/msf:/tmp/data remnux/metasploit\n#\n# The -p parameter exposes the ports on which you expect to receive inbound connections from\n# reverse shells and such. Once the app starts, run the desired Metasploit command, such as\n# \"msfconsole\" inside its container.\n#\n# After running the image, you'll have files from your Metasploit session in the ~/.msf4 and\n# /tmp/msf directories on your host. The next time you run the app, it will pick up from where\n# it left off by reading the files in those locations. If you wish to start from scratch,\n# remove those directories (\"sudo rm -rf ~/.msf4 /tmp/msf\").\n#\n# In addition to including Metasploit Framework, the image also includes Nmap and tmux.\n#\n\nFROM ubuntu:14.04\nMAINTAINER milo2012\n\nWORKDIR /usr/share\n#/opt\nUSER root\n\n# Base packages\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n  git build-essential zlib1g zlib1g-dev \\\n  libxml2 libxml2-dev libxslt-dev locate curl \\\n  libreadline6-dev libcurl4-openssl-dev git-core \\\n  libssl-dev libyaml-dev openssl autoconf libtool \\\n  ncurses-dev bison curl wget xsel postgresql \\\n  postgresql-contrib postgresql-client libpq-dev \\\n  libapr1 libaprutil1 libsvn1 \\\n  libpcap-dev libsqlite3-dev libgmp3-dev \\\n  nasm tmux vim nmap \\\n  && rm -rf /var/lib/apt/lists/*\n\n# startup script and tmux configuration file\nRUN curl -f -sSL https://github.com/REMnux/docker/raw/master/metasploit/conf/tmux.conf --output /root/.tmux.conf\n\n# Get Metasploit\nRUN git clone https://github.com/rapid7/metasploit-framework.git metasploit-framework\nWORKDIR metasploit-framework\n\n# Install PosgreSQL\nRUN curl -f -sSL https://github.com/REMnux/docker/raw/master/metasploit/scripts/db.sql --output /tmp/db.sql\nRUN /etc/init.d/postgresql start && su postgres -c \"psql -f /tmp/db.sql\"\nRUN curl -f -sSL https://github.com/REMnux/docker/raw/master/metasploit/conf/database.yml --output /usr/share/metasploit-framework/config/database.yml\n\n# RVM\nRUN curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import\nRUN curl -f -L https://get.rvm.io | bash -s stable\nRUN /bin/bash -l -c \"rvm requirements\"\nRUN /bin/bash -l -c \"rvm install 2.3.1\"\nRUN /bin/bash -l -c \"rvm use 2.3.1 --default\"\nRUN /bin/bash -l -c \"source /usr/local/rvm/scripts/rvm\"\nRUN /bin/bash -l -c \"gem install bundler --no-ri --no-rdoc\"\nRUN /bin/bash -l -c \"source /usr/local/rvm/scripts/rvm && which bundle\"\nRUN /bin/bash -l -c \"which bundle\"\n\n# Get dependencies\nRUN /bin/bash -l -c \"BUNDLEJOBS=$(expr $(cat /proc/cpuinfo | grep vendor_id | wc -l) - 1)\"\nRUN /bin/bash -l -c \"bundle config --global jobs $BUNDLEJOBS\"\nRUN /bin/bash -l -c \"bundle install\"\n\n# Symlink tools to $PATH\nRUN for i in `ls /usr/share/local/metasploit-framework/tools/*/*`; do ln -s $i /usr/local/bin/; done\nRUN ln -s /usr/share/local/metasploit-framework* /usr/local/bin\n\n# settings and custom scripts folder\nVOLUME /root/.msf4/\nVOLUME /tmp/data/\n\nRUN apt-get install --no-install-recommends git-core -y && rm -rf /var/lib/apt/lists/*;\nRun git clone https://github.com/SpiderLabs/msfrpc /tmp/msfrpc\nRUN cd /tmp/msfrpc && cd python-msfrpc && python setup.py install\nRUN apt-get install --no-install-recommends python-setuptools python-dev -y && easy_install pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir tabulate termcolor python-libnmap msgpack-python tabulate beautifulsoup4 lxml termcolor requests\nRUN cd /usr/local/bin && git clone https://github.com/milo2012/metasploitHelper\nADD extras/init.sh /usr/local/bin/init.sh\nRUN chmod a+xr /usr/local/bin/init.sh\nADD msfHelper.py /usr/local/bin/metasploitHelper\nRUN cd /usr/local/bin/metasploitHelper && python msfHelper.py -h\nRUN /bin/bash\n\n# Starting script (DB + updates)\nCMD /usr/local/bin/init.sh\n\n"
}