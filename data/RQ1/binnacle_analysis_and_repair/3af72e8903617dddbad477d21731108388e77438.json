{
  "startTime": 1674236683780,
  "endTime": 1674236683940,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 9,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 9,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM elixir:1.6.5-slim\n\n# Compile app\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Install HTTPS support for apt-get and other necessary utilities not included in the slim slim base image:\n# curl (for installing stuff), git (for mix deps.get), and make (for the Elixir OAuth package), inotify-tools (for live reloading in dev)\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https curl git make inotify-tools gnupg g++ && rm -rf /var/lib/apt/lists/*;\n\n# Install the Javascript dependencies\n# We have to explicitly set up the system to install Node 7; by default it's 0.10, oddly\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n      && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n      && curl -f -sL https://deb.nodesource.com/setup_8.x | bash \\\n      && apt-get install --no-install-recommends -y nodejs yarn && rm -rf /var/lib/apt/lists/*;\nADD package.json .\nADD yarn.lock .\n# Phoenix dependencies required for yarn to run\nADD deps ./deps\nRUN yarn install && yarn cache clean;\n\nADD ./elm/elm-package.json ./elm/elm-package.json\nWORKDIR /usr/src/app/elm\nRUN yarn global add elm \\\n      && elm-package install -y\nWORKDIR /usr/src/app\n\n# Install Elixir Deps\nADD mix.* ./\nRUN mix local.hex --force \\\n  && mix local.rebar --force \\\n  && mix hex.info\nRUN mix deps.get\n\n# Install app\nADD . .\nRUN mix compile\n\n# Install all Elm dependencies\nRUN cd elm && elm-package install --yes\n\n# Exposes this port from the docker container to the host machine\nEXPOSE 4000\n\nCMD mix phoenix.server\n"
}