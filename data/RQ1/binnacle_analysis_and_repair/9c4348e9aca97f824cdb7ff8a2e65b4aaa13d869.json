{
  "startTime": 1674251004716,
  "endTime": 1674251005126,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker images for nginx module development\nFROM buildpack-deps:jessie-curl\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --no-install-suggests -y \\\n            automake \\\n            gcc \\\n            libc6-dev \\\n            libjansson-dev \\\n            libpcre3-dev \\\n            libssl-dev \\\n            libtool \\\n            libz-dev \\\n            make \\\n            pkg-config \\\n            valgrind \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Add nginx source\nRUN mkdir -p /usr/src/nginx && \\\n    curl -f -SL https://nginx.org/download/nginx-1.13.0.tar.gz \\\n    | tar -xzC /usr/src/nginx && rm -rf /usr/src/nginx\n\n# Install libjwt\nCOPY libjwt /usr/src/libjwt\nWORKDIR /usr/src/libjwt\nRUN autoreconf -i && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr/\" && \\\n    make && \\\n    make install\n\n# Add module config\nCOPY config /usr/src/nginx/nginx-jwt/\n\n# Configure nginx (same options as official nginx debian build)\nWORKDIR /usr/src/nginx/nginx-1.13.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-compat \\\n    --with-file-aio \\\n    --with-threads \\\n    --with-http_addition_module \\\n    --with-http_auth_request_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_mp4_module \\\n    --with-http_random_index_module \\\n    --with-http_realip_module \\\n    --with-http_secure_link_module \\\n    --with-http_slice_module \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-http_v2_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-stream \\\n    --with-stream_realip_module \\\n    --with-stream_ssl_module \\\n    --with-stream_ssl_preread_module \\\n    --add-module=../nginx-jwt\n\n# Build nginx (will fail)\nRUN make || true\n\n# Add module source (here, for faster recompilation)\nCOPY ngx_http_jwt_module.c /usr/src/nginx/nginx-jwt/\n\n# Build nginx (now really)\nRUN make && make install\n\nRUN useradd nginx\nRUN mkdir -p /var/log/nginx /var/cache/nginx\n\n# Forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n  && ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}