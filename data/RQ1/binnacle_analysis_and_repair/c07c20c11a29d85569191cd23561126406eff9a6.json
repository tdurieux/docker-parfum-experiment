{
  "startTime": 1674234860778,
  "endTime": 1674234860944,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 18,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 18,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# backend build (api server)\nFROM golang:1.10.2-alpine AS api-build\n\nCOPY ./api /go/src/commento/api\nWORKDIR /go/src/commento/api\n\nRUN apk update && apk add --no-cache bash make git curl\nRUN curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n\nRUN make prod -j$(($(nproc) + 1))\n\n\n# frontend build (html, js, css, images)\nFROM node:10.3.0-alpine AS frontend-build\n\nCOPY ./frontend /commento/frontend/\nWORKDIR /commento/frontend/\n\nRUN apk update && apk add --no-cache bash make\nRUN npm install -g html-minifier@3.5.7 uglify-js@3.4.1 sass@1.5.1 && npm cache clean --force;\n\nRUN make prod -j$(($(nproc) + 1))\n\n\n# templates build\nFROM alpine:3.7 AS templates-build\n\nCOPY ./templates /commento/templates\nWORKDIR /commento/templates\n\nRUN apk update && apk add --no-cache bash make\n\nRUN make prod -j$(($(nproc) + 1))\n\n\n# db build\nFROM alpine:3.7 AS db-build\n\nCOPY ./db /commento/db\nWORKDIR /commento/db\n\nRUN apk update && apk add --no-cache bash make\n\nRUN make prod -j$(($(nproc) + 1))\n\n\n# final image\nFROM alpine:3.7\n\nCOPY --from=api-build /go/src/commento/api/build/prod/commento /commento/commento\nCOPY --from=frontend-build /commento/frontend/build/prod/*.html /commento/\nCOPY --from=frontend-build /commento/frontend/build/prod/css/*.css /commento/css/\nCOPY --from=frontend-build /commento/frontend/build/prod/js/*.js /commento/js/\nCOPY --from=frontend-build /commento/frontend/build/prod/images/* /commento/images/\nCOPY --from=frontend-build /commento/frontend/build/prod/fonts/* /commento/fonts/\nCOPY --from=templates-build /commento/templates/build/prod/templates/ /commento/templates/\nCOPY --from=db-build /commento/db/build/prod/db/ /commento/db/\n\nRUN apk update && apk add ca-certificates --no-cache\n\nEXPOSE 8080\n\nWORKDIR /commento/\n\nENV COMMENTO_BIND_ADDRESS=\"0.0.0.0\"\nENTRYPOINT [\"/commento/commento\"]\n"
}