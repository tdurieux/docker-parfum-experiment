{
  "startTime": 1674251191898,
  "endTime": 1674251191972,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 3,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 3,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# \n# VERSION 0.5 \n# DOCKER-VERSION 1.9.1 \n# AUTHOR: Paolo Cozzi <paolo.cozzi@ptp.it> \n# DESCRIPTION: An image python base image which isoSegmenter will run \n# TO_BUILD: docker build --rm -t bunop/isosegmenter . \n# TO_RUN: docker run -ti bunop/isosegmenter /bin/bash \n# TO_TAG: docker tag bunop/isosegmenter:latest bunop/isosegmenter:0.5 \n# \nFROM python:2.7 \nMAINTAINER Paolo Cozzi <paolo.cozzi@ptp.it> \n\n# Set corrent working directory \nWORKDIR /root \n\n# Install deb dependancies. Then clean packages and histories \nRUN apt-get update \\\n&& apt-get install --no-install-recommends -y libgd-dev \\\nlibgif-dev \\\n&& apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# now clone isoSegmenter project \nRUN git clone https://github.com/bunop/isoSegmenter.git /root/isoSegmenter \n\n# Setting working directory \nWORKDIR /root/isoSegmenter \n\n# setting isosegmente version \nENV VERSION=v1.5.1 \n# checking out a tagged release \nRUN git fetch && \\  \ngit checkout $VERSION && \\  \ngit checkout -b $VERSION \n\n# Byte compiling libraries \nRUN pip install --no-cache-dir .\n\n# Adding a volume \nRUN mkdir /data \nVOLUME /data \n\n# Setting /data as working directory \nWORKDIR /data/ \n\n# executing a default command \nCMD [ \"python\", \"/usr/local/bin/isoSegmenter.py\", \"--help\" ] \n\n"
}