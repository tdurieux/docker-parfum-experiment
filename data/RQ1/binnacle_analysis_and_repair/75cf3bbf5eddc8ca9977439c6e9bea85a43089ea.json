{
  "startTime": 1674239689365,
  "endTime": 1674239689734,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 1,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 22,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 22,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile to create Applatix tomcat postgres image\n#\n# https://github.com/Applatix/docker-images/tree/master/postgres\n#\n\n# Pull base image.\nFROM ubuntu:14.04\nMAINTAINER Jarvis <jarvis@jarviswang.me>\n\nRUN locale-gen en_GB.UTF-8\nENV LANG en_GB.UTF-8\nENV LC_CTYPE en_GB.UTF-8\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n#  There are some warnings (in red) that show up during the build. You can hide them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\n# Install required packages\nRUN \\\n\tsed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n\tapt-get update && \\\n\tapt-get install --no-install-recommends -y wget curl build-essential software-properties-common python-software-properties nano && rm -rf /var/lib/apt/lists/*;\n\n\n\n# Install ``python-software-properties``, ``software-properties-common``\n#  There are some warnings (in red) that show up during the build. You can hide them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\n# Install JDK 8.\nRUN \\\n\tsed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n\tapt-get update && \\\n\tapt-get install --no-install-recommends -y wget curl build-essential software-properties-common python-software-properties nano && \\\n\tadd-apt-repository ppa:openjdk-r/ppa && \\\n\tapt-get update && \\\n\tapt-get -y --no-install-recommends install openjdk-8-jdk && \\\n\tupdate-alternatives --config java && \\\n\texport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre && \\\n\texport JRE_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre && rm -rf /var/lib/apt/lists/*;\n\n# Fix certificate issues\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y ca-certificates-java && \\\n\tapt-get clean && \\\n\tupdate-ca-certificates -f && \\\n\trm -rf /var/lib/apt/lists/* && \\\n\trm -rf /var/cache/oracle-jdk8-installer;\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/jre\n\n#install TOMCAT\n\nRUN \\\n\tgroupadd tomcat && \\\n\tuseradd -s /bin/false -g tomcat -d /opt/tomcat tomcat && \\\n\tcd /tmp && \\\n\tcurl -f -O -L https://dn.jarvisoj.com/misc/apache-tomcat-8.5.34.tar.gz && \\\n\tmkdir /opt/tomcat && \\\n\ttar xzvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1 && \\\n\tcd /opt/tomcat && \\\n\tchgrp -R tomcat /opt/tomcat && \\\n\tchmod -R g+r conf && \\\n\tchmod g+x conf && \\\n\tchown -R tomcat webapps/ work/ temp/ logs/ && rm apache-tomcat-8*tar.gz\n\n\n# Add admin/admin user\n# ADD tomcat-users.xml /opt/tomcat/conf/\n\n\nENV CATALINA_HOME /opt/tomcat\nENV PATH $PATH:$CATALINA_HOME/bin\n\nEXPOSE 8080\nEXPOSE 8009\n\n#ADD tomcat.service /etc/systemd/system/\nVOLUME \"/opt/tomcat/webapps\"\nWORKDIR /opt/tomcat\n\n\n\nCOPY ./phrackCTF/ /opt/tomcat/webapps/phrackCTF/\nCOPY ./config/mail.properties /opt/tomcat/webapps/phrackCTF/WEB-INF/classes/\nCOPY ./config/spring-mail.xml /opt/tomcat/webapps/phrackCTF/WEB-INF/classes/\nCOPY ./config/spring-shiro.xml /opt/tomcat/webapps/phrackCTF/WEB-INF/classes/\nCOPY ./config/system.properties /opt/tomcat/webapps/phrackCTF/WEB-INF/classes/\nRUN chown -R tomcat:tomcat /opt/tomcat/webapps/phrackCTF/\n\n#install postgres\n\n# Add the PostgreSQL PGP key to verify their Debian packages.\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n\n# Add PostgreSQL's repository. It contains the most recent stable release of PostgreSQL, ``9.3``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6 && rm -rf /var/lib/apt/lists/*;\n\n# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``\n\nUSER root\n\nADD phrackCTF.sql /tmp/phrackCTF.sql\nRUN chmod 755 /tmp/phrackCTF.sql\nADD countries.sql /tmp/countries.sql\nRUN chmod 755 /tmp/countries.sql\n\nUSER postgres\n\n# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and\n# then create a database `docker` owned by the ``docker`` role.\n# Note: here we use ``&&\\`` to run commands one after the other - the ``\\``\n#       allows the RUN command to span multiple lines.\n\nRUN    /etc/init.d/postgresql start &&\\\n    psql --command \"ALTER USER postgres WITH PASSWORD 'ZUBkij7Z';\" &&\\\n    createdb -O postgres phrackCTF -E 'UTF8' &&\\\n    psql phrackCTF postgres -f /tmp/phrackCTF.sql &&\\\n    psql phrackCTF postgres -f /tmp/countries.sql\n\n\nUSER root\n\nRUN mkdir /etc/ssl/private-copy\nRUN mv /etc/ssl/private/* /etc/ssl/private-copy/\nRUN rm -r /etc/ssl/private\nRUN mv /etc/ssl/private-copy /etc/ssl/private\nRUN chmod -R 0700 /etc/ssl/private\nRUN chown -R postgres /etc/ssl/private\n\nADD run.sh /bin\nRUN chmod +x /bin/run.sh\nRUN chmod 755 /bin/run.sh\n\n# Adjust PostgreSQL configuration so that remote connections to the database are possible.\n\nadd pg_hba.conf /etc/postgresql/9.6/main/\n\n#RUN echo \"host all  all    0.0.0.0/0  trust\" >> /etc/postgresql/9.3/main/pg_hba.conf\n\n# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.6/main/postgresql.conf\n\n# Expose the PostgreSQL port\nEXPOSE 5432\n\n# Add VOLUMEs to allow backup of config, logs and databases\nVOLUME  [\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql/data\"]\n\n# Define default command.\n\nCMD [\"/bin/run.sh\"]\n\n"
}