{
  "startTime": 1674248747894,
  "endTime": 1674248748202,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 11,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 13,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 29,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 11,
        "columnEnd": 203
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 11,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/rpi-raspbian\n\n# less priviledge user, the id should map the user the downloaded files belongs to\nRUN groupadd -r aria && useradd -r -g aria aria -u 1000\n\n# webui + aria2\nRUN apt-get update \\\n        && apt-get install --no-install-recommends -y busybox curl \\\n        git \\\n        make g++ libssl-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config libxml2-dev libcppunit-dev autoconf automake autotools-dev autopoint libtool \\\n        && ARIA2_VERSION=\"1.31.0\" \\\n        && mkdir aria_build && cd aria_build \\\n        && curl -f -L https://github.com/aria2/aria2/releases/download/release-\"$ARIA2_VERSION\"/aria2-\"$ARIA2_VERSION\".tar.gz > aria2.tar.gz \\\n        && tar -xzf aria2.tar.gz \\\n        && cd aria2-$ARIA2_VERSION \\\n        && autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make \\\n        && mv src/aria2c /usr/bin/ \\\n        && cd ../.. \\\n        && rm -rf aria_build \\\n        && apt-get remove --purge --auto-remove make g++ libssl-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config libxml2-dev libcppunit-dev autoconf automake autotools-dev autopoint libtool \\\n        && apt-get install --no-install-recommends -y libxml2 libsqlite3-0 libc-ares2 zlib1g \\\n        && rm -rf /var/lib/apt/lists/* && rm aria2.tar.gz\n\nADD . /webui-aria2\n\n# gosu install latest\nRUN GITHUB_REPO=\"https://github.com/tianon/gosu\" \\\n  && LATEST=$( curl -f -s $GITHUB_REPO\"/releases/latest\" | grep -Eo \"[0-9].[0-9]*\") \\\n  && curl -f -L $GITHUB_REPO\"/releases/download/\"$LATEST\"/gosu-armhf\" > /usr/local/bin/gosu \\\n  && chmod +x /usr/local/bin/gosu\n\n# goland install (compile source code for ARM since no version are currently available)\nRUN curl -f -L \"https://storage.googleapis.com/golang/go1.8.linux-armv6l.tar.gz\" > go.tar.gz \\\n  && tar -xzf go.tar.gz -C /usr/local \\\n  && export GOROOT=\"/usr/local/go\" && export GOPATH=`pwd` \\\n  && $GOROOT/bin/go get github.com/mattn/goreman && $GOROOT/bin/go build -o /usr/local/bin/goreman github.com/mattn/goreman \\\n  && apt-get remove --purge --auto-remove git \\\n  && rm go.tar.gz && rm -rf $GOROOT && rm -rf $GOPATH/src && rm -rf $GOPATH/pkg \\\n  && unset GOROOT && unset GOPATH\n\n# goreman setup\nRUN echo \"web: gosu aria /bin/busybox httpd -f -p 8080 -h /webui-aria2\\nbackend: gosu aria /usr/bin/aria2c --conf-path=/data/.aria2/aria2.conf\" > Procfile\n\n# aria2 downloads directory\nVOLUME /data\n\n# aria2 RPC port, map as-is or reconfigure webui\nEXPOSE 6800/tcp\n\n# webui static content web server, map wherever is convenient\nEXPOSE 8080/tcp\n\nCMD [\"start\"]\nENTRYPOINT [\"/usr/local/bin/goreman\"]\n"
}