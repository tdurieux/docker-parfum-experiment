{
  "startTime": 1674236546164,
  "endTime": 1674236547008,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\n##############################\n# Download dependencies\n##############################\n\nRUN dpkg --add-architecture i386 && \\\n    apt-get -y upgrade && \\\n    apt-get -y dist-upgrade && \\\n    apt-get update\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    software-properties-common git curl bzip2 gcc g++ binutils make autoconf openssl \\\n    libssl-dev ant libopus0 libpcre3 libpcre3-dev build-essential nasm libc6:i386 libstdc++6:i386 zlib1g:i386 \\\n    openjdk-8-jdk unzip && rm -rf /var/lib/apt/lists/*;\n\n##############################\n# Configuration\n##############################\n\n# ENV TARGET_ARCHS \"armeabi armeabi-v7a x86 mips arm64-v8a x86_64 mips64\"\nENV TARGET_ARCHS \"armeabi-v7a x86 arm64-v8a x86_64\"\nENV ANDROID_NDK_DOWNLOAD_URL \"https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip\"\nENV ANDROID_SDK_DOWNLOAD_URL \"https://dl.google.com/android/repository/tools_r25.2.5-linux.zip\"\nENV ANDROID_SETUP_APIS \"23 25\"\nENV ANDROID_BUILD_TOOLS_VERSION 25\nENV ANDROID_TARGET_API 23\n\nENV PJSIP_DOWNLOAD_URL \"http://www.pjsip.org/release/2.7.1/pjproject-2.7.1.tar.bz2\"\n\nENV SWIG_DOWNLOAD_URL \"http://prdownloads.sourceforge.net/swig/swig-3.0.7.tar.gz\"\n\nENV OPENSSL_DOWNLOAD_URL \"https://www.openssl.org/source/openssl-1.0.2g.tar.gz\"\n\nENV OPENH264_DOWNLOAD_URL \"https://github.com/cisco/openh264/archive/v1.7.0.tar.gz\"\nENV OPENH264_TARGET_NDK_LEVEL 23\n\nENV OPUS_DOWNLOAD_URL \"http://downloads.xiph.org/releases/opus/opus-1.2.1.tar.gz\"\nENV OPUS_ANDROID_MK_DOWNLOAD_URL \"https://trac.pjsip.org/repos/raw-attachment/ticket/1904/Android.mk\"\n\nENV PATH /sources/android_ndk:$PATH\n\n##############################\n# Download sources\n##############################\n\nRUN mkdir -p /sources/android_ndk && \\\n    mkdir -p /sources/android_sdk && \\\n    mkdir -p /sources/pjsip && \\\n    mkdir -p /sources/swig && \\\n    mkdir -p /sources/openssl && \\\n    mkdir -p /sources/opus && \\\n    mkdir -p /sources/openh264\n\n# Download Android NDK\nRUN cd /sources/android_ndk && \\\n\tcurl -f -L -# -o ndk.zip \"$ANDROID_NDK_DOWNLOAD_URL\" && \\\n    unzip ndk.zip && \\\n    rm -rf ndk.zip && \\\n    mv android-*/* ./\n\n# Download Android SDK & APIs\nRUN cd /sources/android_sdk && \\\n    curl -f -L -# -o sdk.zip \"$ANDROID_SDK_DOWNLOAD_URL\" && \\\n    unzip sdk.zip\n\nRUN cd /sources/android_sdk/tools && \\\n    ALL_SDK=$(./android list sdk --all) && \\\n    IFS=\" \" && \\\n    for api in $ANDROID_SETUP_APIS; \\\n    do \\\n      PACKAGE=$(echo \"${ALL_SDK}\" | grep \"API ${api}\" | head -n 1 | awk '{print $1}' | cut -d'-' -f 1); \\\n      echo yes | ./android update sdk --all --filter ${PACKAGE} --no-ui --force; \\\n    done && \\\n    PACKAGE=$(echo \"${ALL_SDK}\" | grep \"Android SDK Platform-tools\" | head -n 1 | awk '{print $1}' | cut -d'-' -f 1) && \\\n    echo yes | ./android update sdk --all --filter ${PACKAGE} --no-ui --force && \\\n    PACKAGE=$(echo \"${ALL_SDK}\" | grep \"Build-tools\" | grep \"${BUILD_TOOLS_VERSION}\" | head -n 1 | awk '{print $1}' | cut -d'-' -f 1) && \\\n    echo yes | ./android update sdk --all --filter ${PACKAGE} --no-ui --force\n\n# Download Pjsip\nRUN cd /sources/pjsip && \\\n    curl -f -L -# -o pjsip.tar.bz2 \"$PJSIP_DOWNLOAD_URL\" && \\\n    tar xjf pjsip.tar.bz2 && \\\n    rm -rf pjsip.tar.bz2 && \\\n    mv pjproject-*/* ./\n\n# Download Swig\nRUN cd /sources/swig && \\\n    curl -f -L -# -o swig.tar.gz \"$SWIG_DOWNLOAD_URL\" && \\\n    tar xzf swig.tar.gz && \\\n    rm -rf swig.tar.gz && \\\n    mv swig-*/* ./\n\n# Download OpenSSL\nRUN cd /sources/openssl && \\\n    curl -f -L -# -o openssl.tar.gz \"$OPENSSL_DOWNLOAD_URL\" && \\\n    tar xzf openssl.tar.gz && \\\n    rm -rf openssl.tar.gz && \\\n    mv openssl-*/* ./\n\n# Download Opus\nRUN cd /sources/opus && \\\n    curl -f -L -# -o opus.tar.gz \"$OPUS_DOWNLOAD_URL\" && \\\n    tar xzf opus.tar.gz && \\\n    rm -rf opus.tar.gz && \\\n    mv opus-*/* ./ && \\\n    mkdir ./jni && \\\n    cd ./jni && \\\n    curl -f -L -# -o Android.mk \"$OPUS_ANDROID_MK_DOWNLOAD_URL\"\n\n# Download OpenH264\nRUN cd /sources/openh264 && \\\n    curl -f -L -# -o openh264.tar.gz \"$OPENH264_DOWNLOAD_URL\" && \\\n    tar xzf openh264.tar.gz && \\\n    rm -rf openh264.tar.gz && \\\n    mv openh264-*/* ./\n\n##############################\n# Build swig, openssl, opus, openh264\n##############################\n\nRUN mkdir -p /output/openssl/ && \\\n    mkdir -p /output/openh264/ && \\\n    mkdir -p /output/pjsip && \\\n    mkdir -p /output/opus\n\n# Build opus\nADD ./build_opus.sh /usr/local/sbin/\nRUN IFS=\" \" && \\\n    for arch in $TARGET_ARCHS; \\\n    do \\\n      build_opus.sh ${arch}; \\\n    done\n\n# Build swig\nRUN cd /sources/swig && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install\n\n# Build OpenH264\nADD ./build_openh264.sh /usr/local/sbin/\nRUN IFS=\" \" && \\\n    for arch in $TARGET_ARCHS; \\\n    do \\\n      build_openh264.sh ${arch}; \\\n    done\n\n# Build openssl\nADD ./build_openssl.sh /usr/local/sbin/\nRUN IFS=\" \" && \\\n    for arch in $TARGET_ARCHS; \\\n    do \\\n      build_openssl.sh ${arch}; \\\n    done\n\n# Build pjsip\nADD ./build_pjsip.sh /usr/local/sbin/\nRUN IFS=\" \" && \\\n    for arch in $TARGET_ARCHS; \\\n    do \\\n      build_pjsip.sh ${arch}; \\\n    done\n\n# Dist\nRUN mkdir -p /dist/android/src/main && \\\n    mv /output/pjsip/* /dist/android/src/main && \\\n    rm -rf /dist/android/src/main/java/org/pjsip/pjsua2/app\n\nRUN IFS=\" \" && \\\n    for arch in $TARGET_ARCHS; \\\n    do \\\n      mv /output/openh264/${arch}/lib/libopenh264.so /dist/android/src/main/jniLibs/${arch}/; \\\n    done\n"
}