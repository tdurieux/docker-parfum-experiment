{
  "startTime": 1674245241519,
  "endTime": 1674245241944,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 18,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 18,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file aimed for developers and optimized for quick re-builds\n# Shouild be used by running `make localdocker`\nFROM livepeer/ffmpeg-base:latest as builder\n\nFROM golang:1-stretch as builder2\nENV PKG_CONFIG_PATH /root/compiled/lib/pkgconfig\nWORKDIR /root\nRUN apt update \\\n    && apt install --no-install-recommends -y \\\n    git gcc g++ gnutls-dev && rm -rf /var/lib/apt/lists/*;\n    # git gcc g++ gnutls-dev linux-headers\nCOPY --from=builder /root/compiled /root/compiled/\n\nENV PKG_CONFIG_PATH /root/compiled/lib/pkgconfig\nWORKDIR /go/src/github.com/livepeer/go-livepeer\n\nRUN go get github.com/golang/glog\nRUN go get -u -v github.com/livepeer/m3u8\nRUN go get github.com/aws/aws-sdk-go/aws\nRUN go get -u google.golang.org/grpc\nRUN go get github.com/pkg/errors\nRUN go get github.com/stretchr/testify/mock\nRUN go get -u -v go.opencensus.io/stats\nRUN go get -u -v go.opencensus.io/tag\nRUN go get -u -v contrib.go.opencensus.io/exporter/prometheus\n\nCOPY vendor vendor\n# .dockerbuild.deps contains list of packages used by go-client\n# needed to build them before building our code so it will be cached\n# by docker and reused on next builds.\n# it was generated manually by running `go build -v` and capturing output\n# should be updated only if we remove some dependency from vendor dir\nCOPY .dockerbuild.deps .dockerbuild.deps\n\n# this will pre-build and cache files in /vendor dir\nRUN go list -v -export $(cat .dockerbuild.deps)\n\n# ipfs, monitor and pm dirs special cased as presumanbly being\n# less frequent changed\n# adding 'export` to other dirs probably won't add any improvements\n# to re-build speed\nCOPY ipfs ipfs\nRUN go list -v -export github.com/livepeer/go-livepeer/ipfs\nCOPY monitor monitor\nRUN go list -v -export github.com/livepeer/go-livepeer/monitor\nCOPY pm pm\nRUN go list -v -export github.com/livepeer/go-livepeer/pm\nCOPY VERSION VERSION\n\n\nCOPY cmd cmd\nCOPY common common\nCOPY core core\nCOPY server server\nCOPY discovery discovery\nCOPY drivers drivers\nCOPY net net\nCOPY eth eth\nCOPY .git.describe .git.describe\n\nRUN echo \"Please build using 'make localdocker'\"\nRUN test -n \"$(cat .git.describe)\"\nRUN go build -ldflags=\"-X github.com/livepeer/go-livepeer/core.LivepeerVersion=$(cat VERSION)-$(cat .git.describe)\" -v cmd/livepeer/livepeer.go\n\nFROM debian:stretch-slim\n\nWORKDIR /root\nRUN apt update && apt install --no-install-recommends -y ca-certificates jq libgnutls30 && apt clean && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /root/.lpData/mainnet/keystore && \\\n  mkdir -p /root/.lpData/rinkeby/keystore && \\\n  mkdir -p /root/.lpData/devenv/keystore && mkdir -p /root/.lpData/offchain/keystore\nCOPY --from=builder2 /go/src/github.com/livepeer/go-livepeer/livepeer /usr/bin/livepeer\n\nCOPY docker/start.sh .\nRUN chmod +x start.sh\n\nEXPOSE 7935/tcp\nEXPOSE 8935/tcp\nEXPOSE 1935/tcp\n\nENTRYPOINT [\"/root/start.sh\"]\nCMD [\"--help\"]\n\n# Build Docker image: docker build -t livepeerbinary:debian -f docker/Dockerfile.debian .\n"
}