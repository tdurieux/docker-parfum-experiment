{
  "startTime": 1674253094782,
  "endTime": 1674253095170,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 1,
        "columnEnd": 72
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 2,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 2,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/google-appengine/debian9:latest\n\n# explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 && useradd -r -g cassandra --uid=999 cassandra\n\nRUN set -ex; \\\n\tapt-get update; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tgnupg \\\n\t\t\tdirmngr \\\n\t\t; \\\n\tfi ; \\\n\tif ! command -v free > /dev/null; then \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tprocps \\\n\t\t; \\\n\tfi ; \\\n\trm -rf /var/lib/apt/lists/*;\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.10\nENV GOSU_GPG B42F6819007F00F88E364FD4036A9C25BF357DD4\n\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& found='' && \\\n\tfor server in \\\n\t\tpool.sks-keyservers.net \\\n\t\tna.pool.sks-keyservers.net \\\n\t\teu.pool.sks-keyservers.net \\\n\t\toc.pool.sks-keyservers.net \\\n\t\tha.pool.sks-keyservers.net \\\n\t\thkp://p80.pool.sks-keyservers.net:80 \\\n\t\thkp://keyserver.ubuntu.com:80 \\\n\t\tpgp.mit.edu; \\\n\tdo \\\n\t\tgpg --batch --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n\t\t\t&& found=yes && break; \\\n\tdone; \\\n\ttest -n \"$found\" \\\n\t&& gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget\n\n# solves warning: \"jemalloc shared library could not be preloaded to speed up memory allocations\"\nRUN apt-get update && apt-get install -y --no-install-recommends libjemalloc1 && rm -rf /var/lib/apt/lists/*\n\n# https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS 514A2AD631A57A16DD0047EC749D6EEC0353B12C A26E528B271F19B9E5D8E19EA278B781FE4B2BDA\n\nRUN set -ex; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tfound='' && \\\n\tfor server in \\\n\t\tpool.sks-keyservers.net \\\n\t\tna.pool.sks-keyservers.net \\\n\t\teu.pool.sks-keyservers.net \\\n\t\toc.pool.sks-keyservers.net \\\n\t\tha.pool.sks-keyservers.net \\\n\t\thkp://p80.pool.sks-keyservers.net:80 \\\n\t\thkp://keyserver.ubuntu.com:80 \\\n\t\tpgp.mit.edu; \\\n\tdo \\\n\t\tgpg --batch --no-tty --keyserver $server --recv-keys \"${key}\" \\\n\t\t\t&& found=yes && break; \\\n\tdone; \\\n\ttest -n \"$found\"; \\\n\tdone; \\\n\tgpg --batch --no-tty --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\tapt-key list\n\nRUN echo 3.11.4 | sed 's-\\([^.]\\+\\)\\.\\([^.]\\+\\).*$-deb http://www.apache.org/dist/cassandra/debian \\1\\2x main-' >> /etc/apt/sources.list.d/cassandra.list\n\nENV CASSANDRA_VERSION 3.11.4\n\nRUN set -x; \\\n\tif [ \"${CASSANDRA_VERSION%%.*}\" = \"3\" ]; then \\\n\t\tapt-get update && apt-get upgrade; \\\n\t\tapt-get install --no-install-recommends -y openjdk-8-jre-headless ntp; rm -rf /var/lib/apt/lists/*; \\\n\tfi\n\nENV JMX_EXPORTER_VERSION 0.11.0\nENV JMX_EXPORTER_PATH /opt/jmx-exporter\nENV JMX_EXPORTER_JAR jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\nENV JMX_EXPORTER_AGENT ${JMX_EXPORTER_PATH}/${JMX_EXPORTER_JAR}\nENV JMX_EXPORTER_CONFIG ${JMX_EXPORTER_PATH}/cassandra.yml\nENV JMX_EXPORTER_LICENSE ${JMX_EXPORTER_PATH}/LICENSE\nENV JMX_EXPORTER_NOTICE ${JMX_EXPORTER_PATH}/NOTICE\n\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends ca-certificates wget \\\n\t&& mkdir -p $JMX_EXPORTER_PATH \\\n\t&& wget -O $JMX_EXPORTER_AGENT https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/$JMX_EXPORTER_VERSION/$JMX_EXPORTER_JAR \\\n\t&& wget -O $JMX_EXPORTER_CONFIG https://raw.githubusercontent.com/prometheus/jmx_exporter/master/example_configs/cassandra.yml \\\n\t&& wget -O $JMX_EXPORTER_LICENSE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/LICENSE \\\n\t&& wget -O $JMX_EXPORTER_NOTICE https://raw.githubusercontent.com/prometheus/jmx_exporter/master/NOTICE \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget \\\n\t&& apt-get install --no-install-recommends -y cassandra=\"$CASSANDRA_VERSION\" \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# https://issues.apache.org/jira/browse/CASSANDRA-11661\nRUN sed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' /etc/cassandra/cassandra-env.sh\n\nENV CASSANDRA_CONFIG /etc/cassandra\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n\t&& chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\" \\\n\t&& chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\" \"$JMX_EXPORTER_PATH\"\nVOLUME /var/lib/cassandra\n\n# 7000: intra-node communication\n# 7001: TLS intra-node communication\n# 7199: JMX\n# 9042: CQL\n# 9160: thrift service\n# 9404: JMX Exporter for Prometheus metrics\nEXPOSE 7000 7001 7199 9042 9160 9404\nCMD [\"cassandra\", \"-f\"]\n\n"
}