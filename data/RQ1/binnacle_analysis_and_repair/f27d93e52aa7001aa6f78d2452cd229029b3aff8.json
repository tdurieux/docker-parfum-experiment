{
  "startTime": 1674250366683,
  "endTime": 1674250366993,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 2,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 137
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7 as builder\n\nRUN apk add --no-cache \\\n     ca-certificates \\\n     autoconf \\\n     automake \\\n     build-base \\\n     libressl \\\n     libtool \\\n     gmp-dev \\\n     python \\\n     python-dev \\\n     python3 \\\n     sqlite-dev \\\n     wget \\\n     git \\\n     file \\\n     gnupg \\\n     swig \\\n     zlib-dev\n\nWORKDIR /opt\n\nARG BITCOIN_VERSION=0.17.0\nENV BITCOIN_TARBALL bitcoin-${BITCOIN_VERSION}-x86_64-linux-gnu.tar.gz\nENV BITCOIN_URL https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/$BITCOIN_TARBALL\nENV BITCOIN_ASC_URL https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/SHA256SUMS.asc\nENV BITCOIN_PGP_KEY 01EA5486DE18A882D4C2684590C8019E36C2E964\n\nRUN mkdir /opt/bitcoin && cd /opt/bitcoin \\\n    && wget -qO $BITCOIN_TARBALL \"$BITCOIN_URL\" \\\n    && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$BITCOIN_PGP_KEY\" \\\n    && wget -qO bitcoin.asc \"$BITCOIN_ASC_URL\" \\\n    && gpg --batch --verify bitcoin.asc \\\n    && grep $BITCOIN_TARBALL bitcoin.asc | tee SHA256SUMS.asc \\\n    && sha256sum -c SHA256SUMS.asc \\\n    && BD=bitcoin-$BITCOIN_VERSION/bin \\\n    && tar -xzvf $BITCOIN_TARBALL $BD/bitcoin-cli --strip-components=1 \\\n    && rm $BITCOIN_TARBALL\n\nENV LITECOIN_VERSION 0.16.3\nENV LITECOIN_PGP_KEY FE3348877809386C\nENV LITECOIN_URL https://download.litecoin.org/litecoin-${LITECOIN_VERSION}/linux/litecoin-${LITECOIN_VERSION}-x86_64-linux-gnu.tar.gz\nENV LITECOIN_ASC_URL https://download.litecoin.org/litecoin-${LITECOIN_VERSION}/linux/litecoin-${LITECOIN_VERSION}-linux-signatures.asc\n\n# install litecoin binaries\nRUN mkdir /opt/litecoin && cd /opt/litecoin \\\n    && wget -qO litecoin.tar.gz \"$LITECOIN_URL\" \\\n    && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$LITECOIN_PGP_KEY\" \\\n    && wget -qO litecoin.asc \"$LITECOIN_ASC_URL\" \\\n    && gpg --batch --verify litecoin.asc \\\n    && BD=litecoin-$LITECOIN_VERSION/bin \\\n    && tar -xzvf litecoin.tar.gz $BD/litecoin-cli --strip-components=1 --exclude=*-qt \\\n    && rm litecoin.tar.gz\n\nENV LIGHTNINGD_VERSION=master\n\nWORKDIR /opt/lightningd\nCOPY . /tmp/lightning\nRUN git clone --recursive /tmp/lightning . && \\\n    git checkout $(git --work-tree=/tmp/lightning --git-dir=/tmp/lightning/.git rev-parse HEAD)\n\nARG DEVELOPER=0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/tmp/lightning_install && make -j3 DEVELOPER=${DEVELOPER} && make install\n\nFROM alpine:3.7\n\nRUN apk add --no-cache \\\n     gmp-dev \\\n     sqlite-dev \\\n     inotify-tools \\\n     socat \\\n     bash \\\n     zlib-dev \\\n     tini\n\nENV GLIBC_VERSION 2.27-r0\nENV GLIBC_SHA256 938bceae3b83c53e7fa9cc4135ce45e04aae99256c5e74cf186c794b97473bc7\nENV GLIBCBIN_SHA256 3a87874e57b9d92e223f3e90356aaea994af67fb76b71bb72abfb809e948d0d6\n# Download and install glibc (https://github.com/jeanblanchard/docker-alpine-glibc/blob/master/Dockerfile)\nRUN apk add --update curl && \\\n  curl -f -Lo /etc/apk/keys/sgerrand.rsa.pub https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/sgerrand.rsa.pub && \\\n  curl -f -Lo glibc.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk\" && \\\n  echo \"$GLIBC_SHA256  glibc.apk\" | sha256sum -c - && \\\n  curl -f -Lo glibc-bin.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk\" && \\\n  echo \"$GLIBCBIN_SHA256  glibc-bin.apk\" | sha256sum -c - && \\\n  apk add glibc-bin.apk glibc.apk && \\\n  /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n  echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n  apk del curl && \\\n  rm -rf glibc.apk glibc-bin.apk /var/cache/apk/*\n\nENV LIGHTNINGD_DATA=/root/.lightning\nENV LIGHTNINGD_RPC_PORT=9835\n\nVOLUME [ \"/root/.lightning\" ]\nCOPY --from=builder /tmp/lightning_install/ /usr/local/\nCOPY --from=builder /opt/bitcoin/bin /usr/bin\nCOPY --from=builder /opt/litecoin/bin /usr/bin\nCOPY tools/docker-entrypoint.sh entrypoint.sh\n\nEXPOSE 9735 9835\nENTRYPOINT  [ \"/sbin/tini\", \"-g\", \"--\", \"./entrypoint.sh\" ]\n"
}