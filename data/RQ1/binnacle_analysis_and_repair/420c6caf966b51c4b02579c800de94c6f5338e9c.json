{
  "startTime": 1674245337494,
  "endTime": 1674245338037,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 374
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 374
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 374
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 208
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 208
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 398
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM jack482653/android-ndk-docker\nENV NDK_ROOT=/opt/android-ndk-r12b/\n#FROM ubuntu:16.04\n\n#######################\n# Install dependencies\n#######################\nRUN apt-get -yqq update\n\n# Generic dependencies\nRUN apt-get -yqq --no-install-recommends install python python-pip python-dev pkg-config python-matplotlib libfreetype6 libfreetype6-dev software-properties-common libpq-dev gcc git vim cmake libtool autoconf && rm -rf /var/lib/apt/lists/*;\n\n# Dependencies from proj-crawler and violation-validation\nRUN apt-get -yqq --no-install-recommends install md5deep libblas-dev liblapack-dev libatlas-base-dev gfortran libxml2-dev libxslt1-dev zlib1g-dev libffi6 build-essential libssl-dev libffi-dev language-pack-en && rm -rf /var/lib/apt/lists/*;\n\n# Dependencies from indexing, clang tool\nWORKDIR /opt/android-ndk-r12b/build/tools/\nRUN python make_standalone_toolchain.py --arch=arm --stl=gnustl --install-dir=/opt/android-ndk-r12b/toolchains/arm-linux-androidabi-clang/ --api=21\nENV NDK_TOOLCHAIN=/opt/android-ndk-r12b/toolchains/arm-linux-androidabi-clang/\nENV PATH /opt/android-ndk-r12b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin:$PATH\n\n# Dependencies for nomos\n#install deps\nRUN dpkg-reconfigure locales\nRUN apt-get update -yqq\nRUN apt-get install --no-install-recommends -yqq debhelper libglib2.0-dev libmagic-dev libxml2-dev libtext-template-perl librpm-dev subversion rpm libpcre3-dev libssl-dev php-pgsql php-pear php-cli apache2 libapache2-mod-php binutils bzip2 cabextract cpio sleuthkit genisoimage poppler-utils rpm upx-ucl unrar-free unzip p7zip-full p7zip wget subversion libpq-dev postgresql nodejs node-gyp npm git && rm -rf /var/lib/apt/lists/*;\n#linux binary fix\nRUN ln -s /usr/bin/nodejs /usr/bin/node\nENV IN_DOCKER_CONTAINER true\nRUN git clone https://github.com/lingfennan/srclib-nomos.git /nomos_src/\n#make nomos binary\nWORKDIR /nomos_src/nomos\nRUN make clean\nRUN make CFLAGS=-I/usr/include/glib-2.0\nRUN ln -s /nomos_src/nomos/nomossa /usr/local/bin/nomos\n# Dependencies for ninka\nRUN apt-get install --no-install-recommends -yqq cpanminus && rm -rf /var/lib/apt/lists/*;\nRUN cpanm IO::CaptureOutput\nRUN git clone https://github.com/dmgerman/ninka.git /ninka_src && cd /ninka_src && perl Makefile.PL && make && make install\n\n\n#######################\n# Install Java. https://github.com/William-Yeh/docker-java8/blob/master/Dockerfile\n#######################\n# add webupd8 repository\nRUN \\\n    echo \"===> add webupd8 repository...\"  && \\\n    echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list  && \\\n    echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list  && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886  && \\\n    apt-get update  && \\\n    \\\n    echo \"===> install Java\"  && \\\n    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  && \\\n    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yqq oracle-java8-installer oracle-java8-set-default && \\\n\n\n    echo \"===> clean up...\" && \\\n    rm -rf /var/cache/oracle-jdk8-installer && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Define commonly used JAVA_HOME variable\n# ENV JAVA_HOME /usr/lib/jvm/java-8-oracle\n\n###############################\n# INSTALL the dependencies from dependencies/\n###############################\nCOPY dep/ /home/user/dependencies\nWORKDIR /home/user/dependencies\nRUN apt-get update\n# TODO: Need a comprehensive list that can be installed!\n# RUN cat available-devs.txt | xargs apt-get install -yqq\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r requirements.txt\n\n# COPY the actual code into docker\nCOPY . /home/user/osspolice\nWORKDIR /home/user/osspolice/main/\n\n# Setup language\nENV LANG en_US.UTF-8\n\n#######################\n# Add user\n#######################\nRUN groupadd user && useradd --create-home --home-dir /home/user -g user user\nRUN chown -R user:user /home/user/\nUSER user\n\n#######################\n# Add ENV and ENTRYPOINT\n#######################\nCMD [\"celery\", \"worker\", \"-A\", \"celery_tasks\"]\n\n"
}