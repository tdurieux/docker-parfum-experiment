{
  "startTime": 1674244623492,
  "endTime": 1674244623584,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 12,
        "columnEnd": 126
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 12,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 12,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 32,
        "columnStart": 12,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# buildbot/buildbot-worker\n\n# please follow docker best practices\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\n\n# Provides a base Ubuntu (16.04) image with latest buildbot worker installed\n# the worker image is not optimized for size, but rather uses ubuntu for wider package availability\n\nFROM        ubuntu:16.04\nMAINTAINER  Buildbot maintainers\n\nCOPY . /usr/src/buildbot-worker\nCOPY docker/buildbot.tac /buildbot/buildbot.tac\n\n# Last build date - this can be updated whenever there are security updates so\n# that everything is rebuilt\nENV         security_updates_as_of 2016-10-07\n\n# This will make apt-get install without question\nARG         DEBIAN_FRONTEND=noninteractive\n\n# Install security updates and required packages\nRUN apt-get update && \\\n            apt-get -y upgrade && \\\n            apt-get -y --no-install-recommends install -q \\\n                build-essential \\\n                git \\\n                subversion \\\n                python-dev \\\n                libffi-dev \\\n                libssl-dev \\\n                python-pip \\\n                curl && \\\n            rm -rf /var/lib/apt/lists/* && \\\n# Test runs produce a great quantity of dead grandchild processes.  In a\n# non-docker environment, these are automatically reaped by init (process 1),\n# so we need to simulate that here.  See https://github.com/Yelp/dumb-init\n            curl -f -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 && \\\n            chmod +x /usr/local/bin/dumb-init && \\\n# ubuntu pip version has issues so we should upgrade it: https://github.com/pypa/pip/pull/3287\n            pip install --no-cache-dir -U pip virtualenv && \\\n# Install required python packages, and twisted\n            pip --no-cache-dir install \\\n                'twisted[tls]' && \\\n            pip install --no-cache-dir /usr/src/buildbot-worker && \\\n\n    useradd -ms /bin/bash buildbot && chown -R buildbot /buildbot\n\nUSER buildbot\n\nWORKDIR /buildbot\n\nCMD [\"/usr/local/bin/dumb-init\", \"twistd\", \"-ny\", \"buildbot.tac\"]\n"
}