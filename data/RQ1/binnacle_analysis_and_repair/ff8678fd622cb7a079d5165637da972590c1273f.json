{
  "startTime": 1674236469702,
  "endTime": 1674236470061,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use phusion/baseimage as base image. To make your builds reproducible, make\n# sure you lock down to a specific version, not to `latest`!\n# See https://github.com/phusion/baseimage-docker/blob/master/Changelog.md for\n# a list of version numbers.\nFROM phusion/baseimage:0.9.16\nMAINTAINER Zuhkov <zuhkov@gmail.com>\n\n# Set correct environment variables.\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\nENV LC_ALL C.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\n\n# Configure user nobody to match unRAID's settings\n RUN \\\n usermod -u 99 nobody && \\\n usermod -g 100 nobody && \\\n usermod -d /home nobody && \\\n chown -R nobody:users /home\n\n# Disable SSH\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh\n\n# Install locales\nRUN locale-gen cs_CZ.UTF-8\nRUN locale-gen de_DE.UTF-8\nRUN locale-gen en_US.UTF-8\nRUN locale-gen es_ES.UTF-8\nRUN locale-gen fr_FR.UTF-8\nRUN locale-gen it_IT.UTF-8\nRUN locale-gen pl_PL.UTF-8\nRUN locale-gen pt_BR.UTF-8\nRUN locale-gen ru_RU.UTF-8\nRUN locale-gen sl_SI.UTF-8\nRUN locale-gen uk_UA.UTF-8\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0xcbcb082a1bb943db && \\\n    echo \"deb http://mariadb.mirror.iweb.com/repo/5.5/ubuntu `lsb_release -cs` main\" \\\n    > /etc/apt/sources.list.d/mariadb.list\n\nRUN curl -f -sL https://deb.nodesource.com/setup | sudo bash -\n\n# Install Paperwork prereqs\nRUN add-apt-repository ppa:nginx/stable && \\\n    apt-get update -q && \\\n    apt-get install -y --no-install-recommends mariadb-server nginx php5-cli php5-common \\\n      php5-curl php5-fpm php5-tidy wget unzip software-properties-common pwgen \\\n       git php5-mysql php5-gd php5-mcrypt nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Configure php-fpm\n#RUN echo \"cgi.fix_pathinfo = 0\" >> /etc/php5/fpm/php.ini\nRUN echo \"extension=mcrypt.so\" >> /etc/php5/fpm/php.ini && \\\n    echo \"extension=mcrypt.so\" >> /etc/php5/cli/php.ini && \\\n    echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# Tweak my.cnf\nRUN sed -i -e 's#\\(bind-address.*=\\).*#\\1 0.0.0.0#g' /etc/mysql/my.cnf && \\\n    sed -i -e 's#\\(log_error.*=\\).*#\\1 /config/databases/mysql_safe.log#g' /etc/mysql/my.cnf && \\\n    sed -i -e 's/\\(user.*=\\).*/\\1 nobody/g' /etc/mysql/my.cnf && \\\n    echo '[mysqld]' > /etc/mysql/conf.d/innodb_file_per_table.cnf && \\\n    echo 'innodb_file_per_table' >> /etc/mysql/conf.d/innodb_file_per_table.cnf\n\nCOPY www.conf /etc/php5/fpm/pool.d/www.conf\n\nRUN mkdir /etc/service/php5-fpm\nCOPY php5-fpm.sh /etc/service/php5-fpm/run\n\nRUN mkdir /etc/service/nginx\nCOPY nginx.sh /etc/service/nginx/run\n\nRUN chmod +x /etc/service/php5-fpm/run && \\\n    chmod +x /etc/service/nginx/run\n\n# Move to pulling specific versions once Paperwork has them\n#ENV PAPERWORK_VERSION 1.0\n\n# Install composer\nRUN cd /tmp && \\\n    curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer\n\nRUN mkdir -p /var/www /config/databases /etc/firstrun\nRUN cd /var/www && \\\n    git clone https://github.com/twostairs/paperwork.git && \\\n    cd ./paperwork/frontend/ && \\\n    composer install && \\\n    wget https://www.npmjs.org/install.sh && \\\n    bash ./install.sh && \\\n    npm install -g gulp && \\\n    npm install && \\\n    gulp && npm cache clean --force;\n\nCOPY firstrun.sh /etc/my_init.d/firstrun.sh\nCOPY mariadb.sh /etc/service/mariadb/run\nCOPY database.php /etc/firstrun/database.php\nRUN chmod +x /etc/my_init.d/firstrun.sh && \\\n    chmod +x /etc/service/mariadb/run && \\\n    chown -R nobody:users /var/www/paperwork && \\\n    chmod 755 -R /var/www/paperwork && \\\n    chown -R nobody:users /config && \\\n    chmod 755 -R /config && \\\n    chown -R nobody:users /var/log/mysql* && \\\n    chown -R nobody:users /var/lib/mysql && \\\n    chown -R nobody:users /etc/mysql && \\\n    chown -R nobody:users /var/run/mysqld && \\\n    rm /var/www/paperwork/frontend/app/config/database.php\n\n# Configure nginx to serve Paperwork app\nCOPY nginx-paperwork /etc/nginx/sites-available/default\n\nEXPOSE 80/tcp 3306\n\nVOLUME [\"/config\"]\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}