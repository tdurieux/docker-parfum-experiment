{
  "startTime": 1674236368991,
  "endTime": 1674236369158,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 21,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bigm/base-deb-tools\n\n# git\nRUN /xt/tools/_apt_install git-flow\n\n# interact with S3 bucket\nRUN /xt/tools/_apt_install python-magic s3cmd\n\n# Amazon CLI\nRUN /xt/tools/_apt_install python-pip jq\nRUN pip install --no-cache-dir awscli\n\n# docker\nRUN /xt/tools/_apt_install docker.io\n\n# install Go language\nRUN mkdir /goroot && curl -f https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz | tar xvzf - -C /goroot --strip-components=1\nRUN mkdir /gopath\nENV GOROOT /goroot\nENV GOPATH /gopath\nENV PATH $PATH:$GOROOT/bin:$GOPATH/bin\nRUN go get github.com/tools/godep\n\n# some dev tools for future scripts\nRUN /xt/tools/_apt_install dialog autossh\n\n# PHP to run xtcloud build tool\nRUN /xt/tools/_apt_install php5-cli php-pear libyaml-dev php5-dev build-essential \\\n    && yes \"\" | pecl install yaml \\\n    && echo \"extension=yaml.so\" > /etc/php5/mods-available/yaml.ini \\\n    && php5enmod yaml \\\n    && /xt/tools/_apt_remove php5-dev php-pear build-essential\n\n# rsync client needed for deployment\nRUN /xt/tools/_apt_install rsync\n\n# INI file manipulation from shell scripts\nRUN pip install --no-cache-dir crudini\n\n## kubernetes\n#ENV VERSION_KUBERNETES 0.18.2\n#RUN wget https://storage.googleapis.com/kubernetes-release/release/v${VERSION_KUBERNETES}/bin/linux/amd64/kubectl \\\n#    && chmod +x kubectl \\\n#    && mv kubectl /usr/local/bin/\n\n# fleetctl - https://github.com/coreos/fleet/releases\nENV VERSION_FLEET 0.11.5\nWORKDIR /tmp\nRUN wget -nv https://github.com/coreos/fleet/releases/download/v${VERSION_FLEET}/fleet-v${VERSION_FLEET}-linux-amd64.tar.gz && \\\n  tar -xvf fleet-v${VERSION_FLEET}-linux-amd64.tar.gz && \\\n  mv /tmp/fleet-v${VERSION_FLEET}-linux-amd64/fleetctl /usr/local/bin/fleetctl && \\\n  rm -rf /tmp/fleet-v${VERSION_FLEET}-linux-amd64 /tmp/fleet-v${VERSION_FLEET}-linux-amd64.tar.gz\n#ENV FLEETCTL_ENDPOINT http://10.1.42.1:4001\n\n# etcdctl - https://github.com/coreos/etcd/releases\nENV VERSION_ETCD 2.2.4\nWORKDIR /tmp\nRUN wget -nv https://github.com/coreos/etcd/releases/download/v${VERSION_ETCD}/etcd-v${VERSION_ETCD}-linux-amd64.tar.gz && \\\n  tar -xvf etcd-v${VERSION_ETCD}-linux-amd64.tar.gz && \\\n  mv /tmp/etcd-v${VERSION_ETCD}-linux-amd64/etcdctl /usr/local/bin/etcdctl && \\\n  rm -rf /tmp/etcd-v${VERSION_ETCD}-linux-amd64 /tmp/etcd-v${VERSION_ETCD}-linux-amd64.tar.gz\n#ENV ETCDCTL_PEERS 10.1.42.1:4001\n\n# Ansible\nRUN /xt/tools/_ppa_install ppa:ansible/ansible ansible\nRUN ansible-galaxy install defunctzombie.coreos-bootstrap\n\n# NFS client\nRUN /xt/tools/_apt_install nfs-common portmap\n\n# mosh client\nRUN /xt/tools/_apt_install mosh sshfs\n\n# final settings\nENV PATH $PATH:/xt/hosting/bin\nRUN echo \"set-option -g default-shell /bin/zsh\" > /root/.tmux.conf\nRUN echo \"export TERM=xterm-color\" >> /root/.bashrc\nWORKDIR /prj\nCMD [\"zsh\"]\n"
}