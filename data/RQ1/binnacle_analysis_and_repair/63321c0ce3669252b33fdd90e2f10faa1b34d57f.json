{
  "startTime": 1674242828208,
  "endTime": 1674242828723,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tatsushid/tinycore:7.2-x86_64\n\n# Instructions are run with 'tc' user\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=C.UTF-8 LC_ALL=C\n\nRUN tce-load -wic gnupg curl \\\n    && rm -rf /tmp/tce/optional/*\n\n# gpg: key F73C700D: public key \"Larry Hastings <larry@hastings.org>\" imported\nRUN gpg2 --keyserver pool.sks-keyservers.net --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D\n\nENV PYTHON_VERSION 3.4.5\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 9.0.1\n\nRUN tce-load -wic \\\n        bzip2-dev \\\n        flex \\\n        file \\\n        gcc \\\n        make \\\n        linux-4.2.1_api_headers \\\n        glibc_add_lib \\\n        glibc_base-dev \\\n        openssl-dev \\\n        gdbm-dev \\\n        ncurses-dev \\\n        readline-dev \\\n        sqlite3-dev \\\n        liblzma-dev \\\n        zlib_base-dev \\\n        tk-dev \\\n        libX11-dev \\\n        libXss \\\n        xorg-proto \\\n    && cd /tmp \\\n    && curl -f -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n    && curl -f -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n    && gpg2 --verify python.tar.xz.asc \\\n    && rm python.tar.xz.asc \\\n    && tar -xJf python.tar.xz \\\n    && rm python.tar.xz \\\n    && cd \"/tmp/Python-$PYTHON_VERSION\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared \\\n    && make \\\n    && mkdir tmp_install \\\n    && make install DESTDIR=tmp_install \\\n    && for F in `find tmp_install | xargs file | grep \"executable\" | grep ELF | grep \"not stripped\" | cut -f 1 -d :`; do \\\n            [ -f $F ] && strip --strip-unneeded $F; \\\n        done \\\n    && for F in `find tmp_install | xargs file | grep \"shared object\" | grep ELF | grep \"not stripped\" | cut -f 1 -d :`; do \\\n            [ -f $F ] && if [ ! -w $F ]; then chmod u+w $F && strip -g $F && chmod u-w $F; else strip -g $F; fi \\\n        done \\\n    && for F in `find tmp_install | xargs file | grep \"current ar archive\" | cut -f 1 -d :`; do \\\n            [ -f $F ] && strip -g $F; \\\n        done \\\n    && find tmp_install \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' + \\\n    && find tmp_install \\( -type d -a -name test -o -name tests \\) | xargs rm -rf \\\n    && $(cd tmp_install; sudo cp -R . /) \\\n    && rm -rf \"/tmp/Python-$PYTHON_VERSION\" \\\n    && cd /tmp/tce/optional \\\n    && for PKG in `ls *-dev.tcz`; do \\\n            echo \"Removing $PKG files\"; \\\n            for F in `unsquashfs -l $PKG | grep squashfs-root | sed -e 's/squashfs-root//'`; do \\\n                [ -f $F -o -L $F ] && sudo rm -f $F; \\\n            done; \\\n            INSTALLED=$(echo -n $PKG | sed -e s/.tcz//); \\\n            sudo rm -f /usr/local/tce.installed/$INSTALLED; \\\n        done \\\n    && for PKG in binutils.tcz \\\n                cloog.tcz \\\n                flex.tcz \\\n                file.tcz \\\n                gcc.tcz \\\n                gcc_libs.tcz \\\n                linux-4.2.1_api_headers.tcz \\\n                make.tcz \\\n                sqlite3-bin.tcz \\\n                xz.tcz \\\n                xorg-proto.tcz; do \\\n            echo \"Removing $PKG files\"; \\\n            for F in `unsquashfs -l $PKG | grep squashfs-root | sed -e 's/squashfs-root//'`; do \\\n                [ -f $F -o -L $F ] && sudo rm -f $F; \\\n            done; \\\n            INSTALLED=$(echo -n $PKG | sed -e s/.tcz//); \\\n            sudo rm -f /usr/local/tce.installed/$INSTALLED; \\\n        done \\\n    && sudo rm -f /usr/bin/file \\\n    && sudo /sbin/ldconfig \\\n    && rm -rf /tmp/tce/optional/* \\\n    && curl -f -SL 'https://bootstrap.pypa.io/get-pip.py' | sudo python3 \\\n    && sudo pip3 install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \\\n    && sudo find /usr/local \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' + \\\n    && find /usr/local \\( -type d -a -name test -o -name tests \\) | sudo xargs rm -rf \\\n    && sudo rm -rf /usr/src/python\n\n# Instructions after here are run with 'root' user\nUSER root\n\nRUN cd /usr/local/bin \\\n    && ln -s easy_install-3.4 easy_install \\\n    && ln -s idel3 idle \\\n    && ln -s pydoc3 pydoc \\\n    && ln -s python3 python \\\n    && ln -s python3-config python-config\n\nCMD [\"python3\"]\n"
}