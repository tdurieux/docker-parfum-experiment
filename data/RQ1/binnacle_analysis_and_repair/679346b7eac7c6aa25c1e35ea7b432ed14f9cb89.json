{
  "startTime": 1674246033613,
  "endTime": 1674246033885,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 127
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel\n\n# Install system packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      software-properties-common && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      bzip2 \\\n      build-essential \\\n      gcc-6 \\\n      g++-6 \\\n      git \\\n      cmake \\\n      graphviz \\\n      libgl1-mesa-glx \\\n      libhdf5-dev \\\n      openmpi-bin \\\n      wget && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install conda and related packages\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\n\nRUN wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh && \\\n    echo \"c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a  *Miniconda3-4.2.12-Linux-x86_64.sh\" | sha256sum -c - && \\\n    /bin/bash /Miniconda3-4.2.12-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-4.2.12-Linux-x86_64.sh && \\\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh\n\nARG python_version=3.6\n\nRUN conda install -y python=${python_version} && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir \\\n      sklearn_pandas && \\\n    conda install \\\n      bcolz \\\n      h5py \\\n      matplotlib \\\n      mkl \\\n      nose \\\n      notebook \\\n      Pillow \\\n      pandas \\\n      pydot \\\n      pygpu \\\n      pyyaml \\\n      scikit-learn \\\n      six && \\\n    conda clean -yt\n\n# Install oytorch\nRUN conda install torchvision pytorch=0.4.1 -c pytorch\n\n# Install Sean Naren's warp-ctc\nRUN git clone https://github.com/SeanNaren/warp-ctc.git\nRUN cd warp-ctc; mkdir build; cd build; cmake ..; make\nRUN cd warp-ctc; cd pytorch_binding; python setup.py install\n\n# We need gcc-6 and g++-6 to compile nms\nRUN rm -rf /usr/bin/gcc && rm -rf /usr/bin/g++ && \\\n    ln -s /usr/bin/gcc-6 /usr/bin/gcc && \\\n    ln -s /usr/bin/g++-6 /usr/bin/g++\n\n# Install opencv3 Python bindings\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      libgtk2.0-0 \\\n      libcanberra-gtk-module && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN conda install -y -c menpo opencv3=3.1.0 && \\\n    conda clean -ya\n\nWORKDIR /workspace\n"
}