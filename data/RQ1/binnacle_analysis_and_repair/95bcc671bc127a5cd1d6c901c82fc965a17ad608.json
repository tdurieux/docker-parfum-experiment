{
  "startTime": 1674249013714,
  "endTime": 1674249013929,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 42,
        "columnStart": 26,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 42,
        "columnStart": 26,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Originaly from https://github.com/M0E-lnx/ubuntu-32bit with thanks,\n# and then https://github.com/matthew-brett/trusty/blob/32/Dockerfile\n\nFROM scratch\nADD debian-stretch-i386.tgz /\n\n# a few minor docker-specific tweaks\n# see https://github.com/docker/docker/blob/master/contrib/mkimage/debootstrap\nRUN echo '#!/bin/sh' > /usr/sbin/policy-rc.d \\\n    && echo 'exit 101' >> /usr/sbin/policy-rc.d \\\n    && chmod +x /usr/sbin/policy-rc.d \\\n    \\\n    && dpkg-divert --local --rename --add /sbin/initctl \\\n    && cp -a /usr/sbin/policy-rc.d /sbin/initctl \\\n    && sed -i 's/^exit.*/exit 0/' /sbin/initctl \\\n    \\\n    && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \\\n    \\\n    && echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \\\n    && echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \\\n    && echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \\\n    \\\n    && echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \\\n    \\\n    && echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes\n\n#    && echo 'deb http://archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list \\\n#    && echo 'deb http://archive.ubuntu.com/ubuntu/ trusty-updates universe' >> /etc/apt/sources.list\n\n#\n# Pillow customization\n#\n\nRUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y \\\n    install xvfb sudo \\\n    git wget python-numpy python-scipy netpbm \\\n    python-qt4 ghostscript libffi-dev libjpeg-turbo-progs \\\n    python-setuptools python-virtualenv \\\n    python-dev python3-dev cmake \\\n    libtiff5-dev libjpeg62-turbo-dev zlib1g-dev \\\n    libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev \\\n    python-tk python3-tk \\\n    libharfbuzz-dev libfribidi-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd pillow && addgroup pillow sudo && \\\n    mkdir /home/pillow && chown pillow:pillow /home/pillow\n\nRUN virtualenv -p /usr/bin/python2.7 --system-site-packages /vpy && \\\n    /vpy/bin/pip install --upgrade pip && \\\n    /vpy/bin/pip install cffi olefile pytest pytest-cov && \\\n    /vpy/bin/pip install numpy --only-binary=:all: || true && \\\n    chown -R pillow:pillow /vpy && \\\n    virtualenv -p /usr/bin/python3.5 --system-site-packages /vpy3 && \\\n    /vpy3/bin/pip install --upgrade pip && \\\n    /vpy3/bin/pip install cffi olefile pytest pytest-cov && \\\n    /vpy3/bin/pip install numpy --only-binary=:all: || true && \\\n    chown -R pillow:pillow /vpy3\n\nADD depends /depends\nRUN cd /depends && ./install_openjpeg.sh && ./install_imagequant.sh && ./install_raqm.sh\n\nUSER pillow\nENTRYPOINT [\"linux32\"]\nCMD [\"depends/test.sh\"]\n\n#docker run -v $TRAVIS_BUILD_DIR:/Pillow pythonpillow/ubuntu-trusty-x86\n"
}