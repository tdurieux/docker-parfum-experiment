{
  "startTime": 1674249636419,
  "endTime": 1674249636631,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 134
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM composer:1.6\nFROM php:7.2-fpm-alpine3.8\n\nRUN apk add --no-cache \\\n\t\tgit\n\nENV APCU_VERSION 5.1.11\nENV XDEBUG_VERSION 2.6.0\nENV YAML_VERSION 2.0.2\n\nRUN set -xe \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\ticu-dev \\\n\t\tpostgresql-dev \\\n\t\tmysql-dev \\\n\t\tzlib-dev \\\n\t\tlibzip-dev \\\n\t\tyaml-dev \\\n\t&& docker-php-ext-install \\\n\t\tintl \\\n\t\tpdo_pgsql \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t&& pecl install \\\n\t\tapcu-${APCU_VERSION} \\\n\t\txdebug-${XDEBUG_VERSION} \\\n\t    yaml-${YAML-VERSION} \\\n\t&& docker-php-ext-enable --ini-name 20-apcu.ini apcu \\\n\t&& docker-php-ext-enable --ini-name 05-opcache.ini opcache \\\n\t&& docker-php-ext-enable --ini-name xdebug.ini xdebug \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .php-phpexts-rundeps $runDeps \\\n\t&& apk del .build-deps \\\n    && { \\\n       echo \"xdebug.remote_enable=On\"; \\\n       echo \"xdebug.remote_autostart=Off\"; \\\n    }  >> /usr/local/etc/php/conf.d/xdebug.ini\n\n# Install blackfire extension\nRUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini && rm /tmp/blackfire-probe.tar.gz\n\nCOPY --from=0 /usr/bin/composer /usr/bin/composer\nCOPY docker/php/php.ini /usr/local/etc/php/php.ini\nCOPY docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\n\n\nWORKDIR /srv/symfony\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php-fpm\"]\n\n# https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER 1\nRUN composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative\n\n# Prevent the reinstallation of vendors at every changes in the source code\nCOPY composer.json ./\nRUN composer install --prefer-dist --no-dev --no-autoloader --no-scripts --no-progress --no-suggest \\\n\t&& composer clear-cache\n\nCOPY . ./\n\nRUN mkdir -p var/cache var/logs var/sessions \\\n\t&& composer dump-autoload --classmap-authoritative --no-dev \\\n\t&& chown -R www-data var\n"
}