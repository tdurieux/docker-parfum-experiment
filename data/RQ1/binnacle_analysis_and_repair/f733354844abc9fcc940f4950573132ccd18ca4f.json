{
  "startTime": 1674236599991,
  "endTime": 1674236600259,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.3\nMAINTAINER peng@sleede.com\n\n# First we need to be able to fetch from https repositories\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-transport-https \\\n      ca-certificates apt-utils && rm -rf /var/lib/apt/lists/*;\n\n\n# Add sources for external tools to APT\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb https://deb.nodesource.com/node_10.x jessie main\" > /etc/apt/sources.list.d/nodesource.list\nRUN echo \"deb-src https://deb.nodesource.com/node_10.x jessie main\" >> /etc/apt/sources.list.d/nodesource.list\n\n# Install apt based dependencies required to run Rails as\n# well as RubyGems. As the Ruby image itself is based on a\n# Debian image, we use apt-get to install those.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      nodejs \\\n      supervisor \\\n      yarn && rm -rf /var/lib/apt/lists/*;\n\n# throw errors if Gemfile has been modified since Gemfile.lock\nRUN bundle config --global frozen 1\n\n# Run Bundle in a cache efficient way\nWORKDIR /tmp\nCOPY Gemfile /tmp/\nCOPY Gemfile.lock /tmp/\nRUN bundle install --binstubs\n\n\n# Clean up APT when done.\n#RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Web app\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nRUN mkdir -p /usr/src/app/config && rm -rf /usr/src/app/config\nRUN mkdir -p /usr/src/app/invoices && rm -rf /usr/src/app/invoices\nRUN mkdir -p /usr/src/app/exports && rm -rf /usr/src/app/exports\nRUN mkdir -p /usr/src/app/log && rm -rf /usr/src/app/log\nRUN mkdir -p /usr/src/app/public/uploads && rm -rf /usr/src/app/public/uploads\nRUN mkdir -p /usr/src/app/public/assets && rm -rf /usr/src/app/public/assets\nRUN mkdir -p /usr/src/app/accounting && rm -rf /usr/src/app/accounting\nRUN mkdir -p /usr/src/app/tmp/sockets && rm -rf /usr/src/app/tmp/sockets\nRUN mkdir -p /usr/src/app/tmp/pids && rm -rf /usr/src/app/tmp/pids\n\nWORKDIR /usr/src/app\n\nCOPY docker/database.yml /usr/src/app/config/database.yml\nCOPY package.json /usr/src/app/package.json\nCOPY yarn.lock /usr/src/app/yarn.lock\n\n# Run Yarn\nRUN yarn install && yarn cache clean;\n\nCOPY . /usr/src/app\n\n# Volumes\nVOLUME /usr/src/app/invoices\nVOLUME /usr/src/app/exports\nVOLUME /usr/src/app/public\nVOLUME /usr/src/app/public/uploads\nVOLUME /usr/src/app/public/assets\nVOLUME /usr/src/app/accounting\nVOLUME /var/log/supervisor\n\n# Expose port 3000 to the Docker host, so we can access it\n# from the outside.\nEXPOSE 3000\n\n# The main command to run when the container starts. Also\n# tell the Rails dev server to bind to all interfaces by\n# default.\nCOPY docker/supervisor.conf /etc/supervisor/conf.d/fablab.conf\nCMD [\"/usr/bin/supervisord\"]\n"
}