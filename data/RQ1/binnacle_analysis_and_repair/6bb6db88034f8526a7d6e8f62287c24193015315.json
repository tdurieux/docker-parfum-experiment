{
  "startTime": 1674242609119,
  "endTime": 1674242609668,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 170
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 5,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker image for Pentaho BA server community edition.\n#\n\n# Pull base image\nFROM zhicwu/java:8\n\n# Set maintainer\nMAINTAINER Zhichun Wu <zhicwu@gmail.com>\n\n# Set environment variables\nENV BISERVER_VERSION=7.0 BISERVER_BUILD=7.0.0.0-25 PDI_PATCH=7.0.0.0.3 \\\n\tBISERVER_HOME=/biserver-ce BISERVER_USER=pentaho \\\n\tKETTLE_HOME=/biserver-ce/pentaho-solutions/system/kettle \\\n\tJNA_VERSION=4.2.2 OSHI_VERSION=3.2 POSTGRESQL_DRIVER_VERSION=9.4.1212 \\\n\tMYSQL_DRIVER_VERSION=5.1.41 JTDS_VERSION=1.3.1 CASSANDRA_DRIVER_VERSION=0.6.3 \\\n\tH2DB_VERSION=1.4.193 HSQLDB_VERSION=2.3.4 XMLA_PROVIDER_VERSION=1.0.0.103\n\n# Set label\nLABEL java_server=\"Pentaho BA Server $BISERVER_VERSION Community Edition\"\n\n# Install vanilla Pentaho server along with minor changes to configuration\nRUN echo \"Download and unpack Pentaho server...\" \\\n\t&& wget --progress=dot:giga https://downloads.sourceforge.net/project/pentaho/Business%20Intelligence%20Server/${BISERVER_VERSION}/pentaho-server-ce-${BISERVER_BUILD}.zip \\\n\t&& unzip -q *.zip \\\n\t&& rm -f *.zip \\\n\t&& mv /pentaho-server $BISERVER_HOME \\\n\t&& ln -s $BISERVER_HOME /pentaho-server \\\n\t&& find $BISERVER_HOME -name \"*.bat\" -delete \\\n\t&& find $BISERVER_HOME -name \"*.exe\" -delete \\\n\t&& mkdir -p $BISERVER_HOME/data/.hsqldb \\\n\t&& /bin/cp -rf $BISERVER_HOME/data/hsqldb/* $BISERVER_HOME/data/.hsqldb/. \\\n\t&& echo \"Install APR for Tomcat...\" \\\n\t\t&& tar zxf $BISERVER_HOME/tomcat/bin/tomcat-native.tar.gz \\\n\t\t&& cd tomcat-native*/native \\\n\t\t&& apt-get update \\\n\t\t&& apt-get install --no-install-recommends -y libjna-java libapr1-dev gcc make \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-apr=/usr/bin/apr-config --disable-openssl --with-java-home=$JAVA_HOME --prefix=$BISERVER_HOME/tomcat \\\n\t\t&& make \\\n\t\t&& make install \\\n\t\t&& sed -i -e 's|\\(SSLEngine=\"\\).*\\(\"\\)|\\1off\\2|' $BISERVER_HOME/tomcat/conf/server.xml \\\n\t\t&& cd / \\\n\t\t&& rm -rf tomcat-native* $BISERVER_HOME/tomcat/bin/tomcat-native.tar.gz \\\n\t\t&& apt-get autoremove -y libapr1-dev gcc make \\\n\t\t&& apt-get clean \\\n\t\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& echo \"Update server configuration...\" \\\n\t\t&& cd $BISERVER_HOME \\\n\t\t&& sed -i -e 's/\\(exec \".*\"\\) start/\\1 run/' tomcat/bin/startup.sh \\\n\t\t&& rm -f promptuser.* pentaho-solutions/system/default-content/* \\\n\t\t&& sed -i -e 's|\\(      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel\">\\)|      <MimeTypeDefinition mimeType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\">\\n        <extension>xlsx</extension>\\n      </MimeTypeDefinition>\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel\">\\)|      <MimeTypeDefinition mimeType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\">\\n        <extension>xltx</extension>\\n      </MimeTypeDefinition>\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel\">\\)|      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel.sheet.macroEnabled.12\">\\n        <extension>xlsm</extension>\\n      </MimeTypeDefinition>\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel\">\\)|      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel.template.macroEnabled.12\">\\n        <extension>xltm</extension>\\n      </MimeTypeDefinition>\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel\">\\)|      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel.addin.macroEnabled.12\">\\n        <extension>xlam</extension>\\n      </MimeTypeDefinition>\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel\">\\)|      <MimeTypeDefinition mimeType=\"application/vnd.ms-excel.sheet.binary.macroEnabled.12\">\\n        <extension>xlsb</extension>\\n      </MimeTypeDefinition>\\n\\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(        <extension>xls</extension>\\)|\\1\\n        <extension>xlt</extension>\\n        <extension>xla</extension>|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(        <extension>sql</extension>\\)|\\1\\n        <extension>txt</extension>\\n        <extension>csv</extension>|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& sed -i -e 's|\\(,csv,\\)|\\1sql,|' pentaho-solutions/system/*.xml \\\n\t\t&& sed -i -e 's|\\(,xlsx,\\)|\\1xltx,xlsm,xltm,xlam,xlsb,|' pentaho-solutions/system/*.xml \\\n\t&& echo \"Add Pentaho user...\" \\\n\t\t&& useradd -md $BISERVER_HOME -s /bin/bash $BISERVER_USER\n\n# Change work directory\nWORKDIR $BISERVER_HOME\n\n# Add latest JDBC drivers and XMLA connector\nRUN echo \"Download and install JDBC drivers...\" \\\n\t&& wget --progress=dot:giga https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar \\\n\t\t\thttp://central.maven.org/maven2/mysql/mysql-connector-java/${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}.jar \\\n\t\t\thttp://central.maven.org/maven2/net/sourceforge/jtds/jtds/${JTDS_VERSION}/jtds-${JTDS_VERSION}.jar \\\n\t\t\thttp://central.maven.org/maven2/com/github/zhicwu/cassandra-jdbc-driver/${CASSANDRA_DRIVER_VERSION}/cassandra-jdbc-driver-${CASSANDRA_DRIVER_VERSION}-shaded.jar \\\n\t\t\thttp://central.maven.org/maven2/com/h2database/h2/${H2DB_VERSION}/h2-${H2DB_VERSION}.jar \\\n\t\t\thttp://central.maven.org/maven2/org/hsqldb/hsqldb/${HSQLDB_VERSION}/hsqldb-${HSQLDB_VERSION}.jar \\\n\t&& wget --progress=dot:giga  -O tomcat/webapps/pentaho/docs/xmla-connector.exe https://sourceforge.net/projects/xmlaconnect/files/XMLA_Provider_v${XMLA_PROVIDER_VERSION}.exe/download \\\n\t&& sed -i -e 's|\\( class=\"bannercontent\">.*\\)\\(<br /></td>\\)|\\1<br />To access OLAP cube via Excel/SharePoint, please install <a href=\"xmla-connector.exe\">XMLA Connector</a> from <a href=\"http://www.arquery.com\">Arquery</a>.\\2|' tomcat/webapps/pentaho/docs/InformationMap.jsp \\\n\t&& rm -f tomcat/lib/postgre*.jar tomcat/lib/mysql*.jar tomcat/lib/jtds*.jar tomcat/lib/h2*.jar tomcat/lib/hsqldb*.jar \\\n\t&& mv *.jar $BISERVER_HOME/tomcat/lib/.\n\n# Install plugins\nRUN echo \"Download plugins...\" \\\n\t&& wget -P $BISERVER_HOME/tomcat/webapps/pentaho/WEB-INF/lib https://github.com/zhicwu/saiku/releases/download/3.8.8-SNAPSHOT/saiku-olap-util-3.8.8.jar \\\n\t&& wget -O btable.zip https://sourceforge.net/projects/btable/files/Version3.0-3.6/BTable-pentaho7-3.6-STABLE.zip/download \\\n\t&& wget -O saiku-chart-plus.zip https://sourceforge.net/projects/saikuchartplus/files/SaikuChartPlus3/saiku-chart-plus-vSaiku3-plugin-pentaho.zip/download \\\n\t&& wget -O jamon.zip https://sourceforge.net/projects/jamonapi/files/jamonapi/v2_81/jamonall-2.81.zip/download \\\n\t&& wget --progress=dot:giga https://github.com/zhicwu/saiku/releases/download/3.8.8-SNAPSHOT/saiku-plugin-p6-3.8.8.zip \\\n\t\t\thttps://github.com/zhicwu/cte/releases/download/7.0-SNAPSHOT/cte-7.0-snapshot.zip \\\n\t\t\thttp://ctools.pentaho.com/files/d3ComponentLibrary/14.06.18/d3ComponentLibrary-14.06.18.zip \\\n\t\t\thttps://github.com/rpbouman/pash/raw/master/bin/pash.zip \\\n\t&& echo \"Installing plugins...\" \\\n\t\t&& for i in *.zip; do echo \"Unpacking $i...\" && unzip -q -d pentaho-solutions/system $i && rm -f $i; done \\\n\t\t&& rm -f pentaho-solutions/system/BTable/resources/datasources/*.cda \\\n\t&& echo \"Update configuration...\" \\\n\t\t&& sed -i -e 's|\\(<entry key=\"jpeg\" value-ref=\"streamConverter\"/>\\)|\\1<entry key=\"saiku\" value-ref=\"streamConverter\"/>|' pentaho-solutions/system/importExport.xml \\\n\t\t&& sed -i -e 's|\\(<value>.xcdf</value>\\)|\\1<value>.saiku</value>|' pentaho-solutions/system/importExport.xml \\\n\t\t&& sed -i -e 's|\\(<value>xcdf</value>\\)|\\1<value>saiku</value>|' pentaho-solutions/system/importExport.xml \\\n\t\t&& sed -i -e 's|\\(<extension>xcdf</extension>\\)|\\1<extension>saiku</extension>|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \\\n\t\t&& touch pentaho-solutions/system/saiku/ui/js/saiku/plugins/CCC_Chart/cdo.js \\\n\t\t&& wget -P pentaho-solutions/system/saiku/components/saikuWidget https://github.com/OSBI/saiku/raw/release-3.8/saiku-bi-platform-plugin-p5/src/main/plugin/components/saikuWidget/SaikuWidgetComponent.js \\\n\t\t&& sed -i -e \"s|\\(: data.query.queryModel.axes.FILTER\\)\\(.*\\)|\\1 == undefined ? [] \\1\\2|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \\\n\t\t&& sed -i -e \"s|\\(: data.query.queryModel.axes.COLUMNS\\)\\(.*\\)|\\1 == undefined ? [] \\1\\2|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \\\n\t\t&& sed -i -e \"s|\\(: data.query.queryModel.axes.ROWS\\)\\(.*\\)|\\1 == undefined ? [] \\1\\2|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \\\n\t\t&& sed -i -e 's|\\(var query = Saiku.tabs._tabs\\[0\\].content.query;\\)|\\1\\nif (query == undefined ) query = Saiku.tabs._tabs[1].content.query;|' pentaho-solutions/system/saiku/ui/js/saiku/plugins/BIServer/plugin.js \\\n\t\t&& sed -i -e 's|self.template()|\"Error!\"|' pentaho-solutions/system/saiku/ui/saiku.min.js \\\n\t\t&& sed -i -e 's|http://meteorite.bi/|/|' pentaho-solutions/system/saiku/ui/saiku.min.js \\\n\t\t&& sed -i -e \"s|\\(request.setRequestHeader('Authorization', auth);\\)|// \\1|\" pentaho-solutions/system/saiku/ui/js/saiku/embed/SaikuEmbed.js \\\n\t&& echo \"Enable JAMon API...\" \\\n\t\t&& mv pentaho-solutions/system/jamonall-2.81/jamon-2.81.jar tomcat/lib/. \\\n\t\t&& unzip -q -d tomcat/webapps/jamon pentaho-solutions/system/jamonall-2.81/jamon.war \\\n\t\t&& rm -rf pentaho-solutions/system/__MACOSX tomcat/webapps/jamon/WEB-INF/lib/hsqldb.jar *.zip \\\n\t\t&& rm -rf pentaho-solutions/system/jamonall* \\\n\t\t&& sed -i -e 's|\\(<Engine name=\"Catalina\" defaultHost=\"localhost\">\\)|\\1\\n      <Valve className=\"com.jamonapi.http.JAMonTomcatValve\"/>|' tomcat/conf/server.xml\n\n# Download patches and dependencies\nRUN echo \"Download patches and dependencies...\" \\\n\t&& wget https://maven.java.net/content/repositories/releases/net/java/dev/jna/jna/$JNA_VERSION/jna-$JNA_VERSION.jar \\\n\t\t\thttps://maven.java.net/content/repositories/releases/net/java/dev/jna/jna-platform/$JNA_VERSION/jna-platform-$JNA_VERSION.jar \\\n\t\t\thttp://central.maven.org/maven2/com/github/dblock/oshi-core/$OSHI_VERSION/oshi-core-$OSHI_VERSION.jar \\\n\t&& mv *.jar tomcat/webapps/pentaho/WEB-INF/lib/. \\\n\t&& wget --progress=dot:giga https://github.com/zhicwu/pdi-cluster/releases/download/${PDI_PATCH}/pentaho-kettle-${PDI_PATCH}.jar \\\n\t\t\thttps://github.com/zhicwu/pdi-cluster/releases/download/${PDI_PATCH}/pentaho-platform-${PDI_PATCH}.jar\n\n# Add entry point, tempaltes and cron jobs\nCOPY docker-entrypoint.sh $BISERVER_HOME/docker-entrypoint.sh\nCOPY repository.xml.template $BISERVER_HOME/pentaho-solutions/system/jackrabbit/repository.xml.template\nCOPY purge-old-files.sh /etc/cron.hourly/purge-old-files\n\n# Post configuration\nRUN echo \"Post configuration...\" \\\n\t&& chmod 0700 /etc/cron.hourly/* \\\n\t&& chmod +x $BISERVER_HOME/*.sh\n\nENTRYPOINT [\"/sbin/my_init\", \"--\", \"./docker-entrypoint.sh\"]\n\n#VOLUME [\"$BISERVER_HOME/.pentaho\", \"$BISERVER_HOME/data/hsqldb\", \"$BISERVER_HOME/tomcat/logs\", \"$BISERVER_HOME/pentaho-solutions/system/jackrabbit/repository\", \"$BISERVER_HOME/tmp\"]\n\n#  8080 - HTTP\n#  8009 - AJP\n# 11098 - JMX RMI Registry\n# 44444 - RMI Server\n#EXPOSE 8080 8009 11098 44444\n\n#CMD [\"biserver\"]\n"
}