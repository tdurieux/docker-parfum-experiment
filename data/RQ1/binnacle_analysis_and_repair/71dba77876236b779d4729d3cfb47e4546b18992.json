{
  "startTime": 1674243981698,
  "endTime": 1674243981813,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM tano297/bonnet:cuda9-cudnn7-tf17-trt304\n\n# recommended from nvidia to use the cuda devices\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\n# install missing small dependencies\nRUN apt install --no-install-recommends python3-tk -y && rm -rf /var/lib/apt/lists/*;\n\n# Replace 1000 with your user / group id (if needed)\nRUN export uid=1000 gid=1000 && \\\nmkdir -p /home/developer && \\\nmkdir -p /etc/sudoers.d && \\\necho \"developer:x:${uid}:${gid}:Developer,,,:/home/developer:/bin/bash\" >> /etc/passwd && \\\necho \"developer:x:${uid}:\" >> /etc/group && \\\necho \"developer ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/developer && \\\nchmod 0440 /etc/sudoers.d/developer && \\\nchown ${uid}:${gid} -R /home/developer && \\\nadduser developer sudo\n\n# Set the working directory to $HOME/bonnet_wrkdir\nENV HOME /home/developer\nWORKDIR $HOME/bonnet_wrkdir\n\n# Copy the current directory contents into the container at $HOME/bonnet_wrkdir\nADD . $HOME/bonnet_wrkdir\n\n# ownership of directory\nRUN chown -R developer:developer $HOME/bonnet_wrkdir\nRUN chmod 755 $HOME/bonnet_wrkdir\n\n# user stuff (and env variables)\nUSER developer\nRUN cp /etc/skel/.bashrc /home/developer/ && \\\n    echo 'source /opt/ros/kinetic/setup.bash' >> /home/developer/.bashrc && \\\n    echo 'export PYTHONPATH=/usr/local/lib/python3.5/dist-packages/cv2/:$PYTHONPATH' >> /home/developer/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH' >> /home/developer/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64/:$LD_LIBRARY_PATH' >> /home/developer/.bashrc && \\\n    echo 'export NO_AT_BRIDGE=1' >> /home/developer/.bashrc && \\\n    sudo ls\n\n# run the standalone build\nENV LD_LIBRARY_PATH /usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64/:$LD_LIBRARY_PATH\nENV PATH /usr/local/cuda-9.0/bin:$PATH\nENTRYPOINT [\"/bin/bash\",\"-c\"]\n\n# for visual output build and run like\n# nvidia-docker build -t bonnet .\n# nvidia-docker run -ti --rm -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Xauthority:/home/developer/.Xauthority -v /home/$USER/Desktop:/shared --net=host --pid=host --ipc=host bonnet /bin/bash"
}