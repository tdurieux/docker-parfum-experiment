{
  "startTime": 1674248745934,
  "endTime": 1674248746005,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# for optimized python builds\n# we follow solution #2 described in https://pythonspeed.com/articles/multi-stage-docker-python/\n\nFROM python:3-slim as builder\n\nRUN python -m venv /root/.venv\n\nENV PATH=\"/root/.venv/bin:$PATH\"\n\nARG LNDMANAGE_HOST_SRC_PATH\n\nCOPY \"$LNDMANAGE_HOST_SRC_PATH/requirements.txt\" .\n\nRUN pip install --no-cache-dir -r requirements.txt\n\n# ---------------------------------------------------------------------------------------------------------------------------\n\nFROM python:3-slim as final\n\n# install fish shell for convenience\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tfish && rm -rf /var/lib/apt/lists/*;\n\n# this is for better handling docker-compose signals\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\n\n# copy python environment from builder\nCOPY --from=builder /root/.venv /root/.venv\n\nENV PATH=\"/root/.venv/bin:$PATH:/root\"\n\n# copy sources under /root/lndmanage\nWORKDIR /root/lndmanage\nARG LNDMANAGE_HOST_SRC_PATH\nCOPY \"$LNDMANAGE_HOST_SRC_PATH\" .\n\n# this should be fast because it is cached from builder image\nRUN pip install --no-cache-dir -r requirements.txt\n\nWORKDIR /root\nCOPY \"home\" ."
}