{
  "startTime": 1674234483040,
  "endTime": 1674234483246,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedDockerfile": "FROM continuumio/miniconda\n\n# PLEASE NOTE: I, pelson, tried my best to refine this Dockerfile but was unable to build fontforge without it SegFaulting upon\n# python -c \"import fontforge; fontforge.font()\". At the time of writing, I've decided that whilst it is entirely necessary to resolve this,\n# I'm unable to put the necessary time to do so. For the time-being, I will simply document this fact, and make the working build available\n# on docker hub.\n\n\nMAINTAINER IPython Project <ipython-dev@python.org>\n# MAINTAINER Phil Elson <pelson.pub@gmail.com>\n\n\nRUN conda install -y -c conda-forge \\\n        harfbuzz cairo freetype pkg-config \\\n        python=2.7 pango glib freetype libxml2 pkg-config \\\n && conda install -y -c bioconda potrace \\\n && export PREFIX=/opt/conda\n\nRUN git clone https://github.com/fontforge/fontforge.git\n\nRUN conda install -y -c conda-forge automake\nRUN conda install -y -c conda-forge libtool\n\n# RUN git clone https://github.com/fontforge/fontforge.git \\\nRUN cd fontforge \\\n && ./bootstrap --force\n\nRUN apt-get install --no-install-recommends gcc -y && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends make -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends libx11-dev libxext-dev libxrender-dev libice-dev libsm-dev -y && rm -rf /var/lib/apt/lists/*;\nRUN cd fontforge && \\\n  export PREFIX=/opt/conda && export LDFLAGS=\"-L${PREFIX}/lib\" && export CFLAGS=\"-I${PREFIX}/include\" && export PREFIX=/opt/conda && export PANGO_CFLAGS=\"-I${PREFIX}/include/pango-1.0\" && export PANGO_LIBS=\"-lpango-1.0\" \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PREFIX} --without-x \\\n && make && make install\n\nRUN conda install -y -c conda-forge scikit-image nomkl\nRUN conda install -y -c conda-forge parse\n\nRUN conda install -y -c kalefranz imagemagick\n"
}