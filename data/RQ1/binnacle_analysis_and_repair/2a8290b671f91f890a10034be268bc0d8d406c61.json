{
  "startTime": 1674248963235,
  "endTime": 1674248963490,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 28,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 37,
        "columnStart": 28,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 28,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for purkinje development\nFROM ubuntu:16.04\nMAINTAINER Bernhard Biskup <bbiskup@gmx.de>\n\n# Install dependencies\nRUN echo 'Running installation'\nWORKDIR /code\n\nENV DEBIAN_FRONTEND noninteractive\nENV NODE_DIR=node-v6.2.0-linux-x64\nENV NODE_ARCHIVE=$NODE_DIR.tar.xz\nENV PATH=/opt/node/bin:$PATH\n\nRUN apt-get -q -y update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n\n\nRUN echo 1 > cache_bust.txt\n# Install Google Chrome APT repository\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list\n\nRUN apt-get -q -y update && apt-get install --no-install-recommends -y \\\n        dbus-x11 \\\n        default-jre-headless \\\n        firefox \\\n        gcc \\\n        git \\\n        google-chrome-stable \\\n        libyaml-dev \\\n        make \\\n        python2.7 \\\n        python2.7-dev \\\n        python3.5 \\\n        python3.5-dev \\\n        software-properties-common \\\n        wget \\\n        xvfb \\\n        xz-utils \\\n    && rm -rf /var/lib/apt/lists/*\n\n# To avoid chrome waiting for gnome keyring\nENV DBUS_SESSION_BUS_ADDRESS /dev/null\nRUN dpkg -r libfolks-eds25 gnome-keyring seahorse gcr evolution-data-server oneconf python-ubuntuone-storageprotocol ubuntu-sso-client python-ubuntu-sso-client pinentry-gnome3\n\n# TODO remove git dependency when removing bower\n\n# Install node.js; use most recent version to have access to latest features\nWORKDIR /opt\nRUN wget -q https://nodejs.org/dist/v6.2.0/$NODE_ARCHIVE && \\\n    tar xJf $NODE_ARCHIVE && \\\n    ln -s /opt/$NODE_DIR /opt/node && \\\n    rm $NODE_ARCHIVE\nWORKDIR /code\nRUN node --version\nRUN npm --version\n\n# make npm less noisy\nRUN npm config set loglevel warn\nRUN python2.7 --version\nRUN ln -sf /usr/bin/python2.7 /usr/bin/python\n\n# Ubuntu's python-pip throws exception with requests lib\n# see https://bugs.launchpad.net/ubuntu/+source/python-pip/+bug/1306991\nRUN wget -q https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nADD package.json /code/package.json\nADD bower.json /code/bower.json\nADD .jshintrc /code/.jshintrc\nADD .bowerrc /code/.bowerrc\n\nRUN npm install && npm cache clean --force;\n\n# Set up Chrome webdriver for Protractor\nRUN echo 1 > cache_bust.txt  # force layer invalidation\nRUN ./node_modules/protractor/bin/webdriver-manager update --standalone\n\nRUN npm install -g bower && npm cache clean --force;\nRUN bower --allow-root --quiet install -F 2>&1 > bower.log\n\nADD requirements.txt /code/requirements.txt\nADD dev-requirements.txt /code/dev-requirements.txt\n\n# Python\nRUN pip install --no-cache-dir -q --upgrade -r dev-requirements.txt --cache-dir $HOME/.pip-cache\n\n# Avoid Flask freezing\n# watchdog not compatible with gevent\n# see https://github.com/gorakhargosh/watchdog/issues/306\nRUN pip uninstall -y watchdog\n\nRUN echo \"Installed Python packages:\"\nRUN pip freeze\n\nADD pytest.ini /code/pytest.ini\nADD tox.ini /code/tox.ini\nADD MANIFEST.in /code/MANIFEST.in\nADD setup.py /code/setup.py\nADD Makefile /code/Makefile\nADD purkinje /code/purkinje\nADD ./docker/purkinje*.yml /code/\n\nADD README.rst README.rst\nADD CHANGES.rst CHANGES.rst\n\n\nRUN pip install --no-cache-dir -e .\nRUN python setup.py sdist\n\nENV NODE_ARCHIVE \"\"\nENV NODE_DIR \"\"\n\nADD docker/purkinje.docker.yml purkinje.yml\n\nENTRYPOINT [\"purkinje\", \"-c\", \"purkinje.yml\"]\n"
}