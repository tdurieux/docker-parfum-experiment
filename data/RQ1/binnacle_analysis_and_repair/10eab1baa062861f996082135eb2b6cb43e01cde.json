{
  "startTime": 1674239285655,
  "endTime": 1674239285902,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# handle certificate and downloads in another stage to reduce image size\nFROM alpine as certs\nARG version\n\nRUN apk update && apk add --no-cache ca-certificates\nENV CELLS_VERSION ${version}\n\nWORKDIR /pydio\n\nRUN wget \"https://download.pydio.com/pub/cells/release/${CELLS_VERSION}/linux-amd64/cells\"\nRUN wget \"https://download.pydio.com/pub/cells/release/${CELLS_VERSION}/linux-amd64/cells-ctl\"\n\nRUN chmod +x /pydio/cells\nRUN chmod +x /pydio/cells-ctl\n\n# Creates the final image\nFROM busybox:glibc\nARG version\n\nWORKDIR /pydio\n\nENV CELLS_BIND localhost:8080\nENV CELLS_EXTERNAL localhost:8080\n\n# Add necessary files\nCOPY docker-entrypoint.sh /pydio/docker-entrypoint.sh\nCOPY libdl.so.2 /pydio/libdl.so.2\nCOPY --from=certs /etc/ssl/certs /etc/ssl/certs\nCOPY --from=certs /pydio/cells-ctl .\nCOPY --from=certs /pydio/cells .\n\n# Final configuration\nRUN ln -s /pydio/cells /bin/cells \\\n    && ln -s /pydio/cells-ctl /bin/cells-ctl \\\n    && ln -s /pydio/libdl.so.2 /lib64/libdl.so.2 \\\n    && ln -s /pydio/docker-entrypoint.sh /bin/docker-entrypoint.sh \\\n    && chmod +x /pydio/docker-entrypoint.sh\n\nVOLUME [\"/root/.config\"]\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"cells\", \"start\"]\n"
}