{
  "startTime": 1674246246071,
  "endTime": 1674246246508,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ai4eregistry.azurecr.io/1.0-base-py-ubuntu16.04:latest\n\nRUN echo \"source activate ai4e_py_api\" >> ~/.bashrc \\\n    && conda install -c conda-forge -n ai4e_py_api numpy pandas\n\nRUN pip install --no-cache-dir --upgrade pip\n\n# Azure blob packages should already be installed in the base image. Just need to install Azure ML SDK\nRUN pip install --no-cache-dir azureml-sdk==1.0.33\n\n# Note: supervisor.conf reflects the location and name of your api code.\n# If the default (./my_api/runserver.py) is renamed, you must change supervisor.conf\nCOPY ./supervisord.conf /etc/supervisord.conf\n# startup.sh is a helper script\nCOPY ./startup.sh /\nRUN chmod +x /startup.sh\n\nCOPY ./LocalForwarder.config /lf/\n\n# Copy your API code\nCOPY ./orchestrator_api /app/orchestrator_api/\n\n# Add this API directory to PYTHONPATH\nENV PYTHONPATH=\"${PYTHONPATH}:/app/\"\n\n# Application Insights keys and trace configuration\nENV APPINSIGHTS_INSTRUMENTATIONKEY= \\\n    APPINSIGHTS_LIVEMETRICSSTREAMAUTHENTICATIONAPIKEY= \\\n    LOCALAPPDATA=/app_insights_data \\\n    OCAGENT_TRACE_EXPORTER_ENDPOINT=localhost:55678\n\n# The following variables will allow you to filter logs in AppInsights\nENV SERVICE_OWNER=AI4E_Test \\\n    SERVICE_CLUSTER=Local\\ Docker \\\n    SERVICE_MODEL_NAME=batch_animal_detection \\\n    SERVICE_MODEL_FRAMEWORK=Python \\\n    SERVICE_MODEL_FRAMEOWRK_VERSION=3.6.6 \\\n    SERVICE_MODEL_VERSION=1.0\n\nENV API_PREFIX=/v2/camera-trap/detection-batch\n\nENV AZUREML_PASSWORD=\n\nENV STORAGE_ACCOUNT_NAME= \\\n    STORAGE_ACCOUNT_KEY=\n\n# Expose the port that is to be used when calling your API\nEXPOSE 80\n#HEALTHCHECK --interval=1m --timeout=3s --start-period=20s \\\n#  CMD curl -f http://localhost/ || exit 1\nENTRYPOINT [ \"/startup.sh\" ]\n"
}