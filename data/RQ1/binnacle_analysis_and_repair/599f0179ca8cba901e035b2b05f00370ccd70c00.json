{
  "startTime": 1674240732251,
  "endTime": 1674240732386,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        curl bzip2 software-properties-common pkg-config ca-certificates \\\n        cmake autoconf automake libtool flex sudo git tzdata openssh-server \\\n        libglib2.0-0 libxext6 libsm6 libxrender1 libreadline-dev \\\n        graphviz libgraphviz-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Set timezone\nENV TZ Asia/Tokyo\nRUN echo $TZ > /etc/timezone && rm /etc/localtime && \\\n    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \\\n    dpkg-reconfigure -f noninteractive tzdata\n\n# Install miniconda\nENV MINICONDA_VERSION 4.5.11\nRUN curl -f -s -o miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    bash miniconda.sh -b -p /opt/miniconda && rm miniconda.sh\nENV PATH /opt/miniconda/bin:$PATH\n\n# Create conda environments and install modules\nADD environment.yml /src/environment.yml\nRUN conda env create -f /src/environment.yml\nADD requirements.txt /src/requirements.txt\nRUN bash -c \"source activate default && pip install -r /src/requirements.txt\"\nRUN bash -c \"source activate default && \\\n        jupyter nbextension enable --py --sys-prefix widgetsnbextension && \\\n        jupyter labextension install @jupyter-widgets/jupyterlab-manager && \\\n        python -m nltk.downloader -d /opt/miniconda/envs/default/share/nltk_data punkt\"\nENV PYTHONHASHSEED 0\n\nADD . /src\nWORKDIR /src\n\nRUN bash -c \"source activate default && python setup.py build_ext\"\nRUN bash -c \"source activate default && python setup.py develop\"\nWORKDIR /work\nENTRYPOINT [\"/work/entrypoint.sh\"]\nCMD /bin/bash\n"
}