{
  "startTime": 1674253126712,
  "endTime": 1674253126817,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 50,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:7.5-cudnn5-devel-ubuntu14.04\nMAINTAINER caffe-maint@googlegroups.com\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        libgeos-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-scipy \\\n        python-opencv && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\n# FIXME: clone a specific git tag and use ARG instead of ENV once DockerHub supports this.\nENV CLONE_TAG=master\n\n# Set this with `docker build --build-arg CLONE_REPO=$(git remote get-url --all origin) .`\n# Note that will only work for https urls since ssh is not installed in the image\n\nARG CLONE_REPO\n\nRUN git clone -b ${CLONE_TAG} --depth 1 $CLONE_REPO .\n\n# CUDA_ARCH_NAME=Manual is a workaround the lack of compute_60 or higher in cuda7.5's cuda\n# Required for recent GPUs\nRUN for req in $(cat python/requirements.txt); do pip install --no-cache-dir $req; done && \\\n    mkdir build && cd build && \\\n    cmake .. -DCUDA_ARCH_NAME=Manual && \\\n    make -j\"$(nproc)\"\n\n# HACK: OpenCV can be confused by (the lack of) this driver in some systems\nRUN ln /dev/null /dev/raw1394\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\nWORKDIR /opt/caffe\n"
}