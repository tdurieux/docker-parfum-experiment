{
  "startTime": 1674248555286,
  "endTime": 1674248555671,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nRUN rm -f /usr/lib/x86_64-linux-gnu/libnccl_static.a \\\n          /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\n# Install package dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        libtool \\\n        pkg-config \\\n        ca-certificates \\\n        wget \\\n        git \\\n        python \\\n        python3 \\\n        python-dev \\\n        python3-dev \\\n        libprotobuf-dev \\\n        protobuf-compiler \\\n        cmake \\\n        swig \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install pip\nRUN cd /usr/local/src && \\\n    wget https://bootstrap.pypa.io/get-pip.py && \\\n    python2 get-pip.py && \\\n    pip2 install --no-cache-dir --upgrade pip && \\\n    python3 get-pip.py && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    rm -f get-pip.py\n\n# Build and install onnx\nRUN cd /usr/local/src && \\\n    git clone --recurse-submodules https://github.com/onnx/onnx.git && \\\n    cd onnx && \\\n    git checkout dee6d89 && \\\n    pip2 install --no-cache-dir pybind11 && \\\n    pip2 install --no-cache-dir protobuf && \\\n    pip2 install --no-cache-dir numpy && \\\n    pip3 install --no-cache-dir numpy && \\\n    python setup.py build && \\\n    python setup.py install && \\\n    cd ../ && \\\n    rm -rf onnx/\n\n# Install TensorRT\nWORKDIR /usr/local/src\nENV TENSORRT_VERSION 3.0\nCOPY TensorRT-${TENSORRT_VERSION}.*.tar.gz .\nRUN tar -xvf TensorRT-${TENSORRT_VERSION}.*.tar.gz && \\\n    cd TensorRT-${TENSORRT_VERSION}.* && \\\n    cp lib/* /usr/lib/x86_64-linux-gnu/ && \\\n    rm /usr/lib/x86_64-linux-gnu/libnv*.a && \\\n    cp include/* /usr/include/x86_64-linux-gnu/ && \\\n    cp bin/* /usr/bin/ && \\\n    mkdir /usr/share/doc/tensorrt && \\\n    cp -r doc/* /usr/share/doc/tensorrt/ && \\\n    mkdir /usr/src/tensorrt && \\\n    cp -r samples /usr/src/tensorrt/ && \\\n    pip2 install --no-cache-dir python/tensorrt-${TENSORRT_VERSION}.*-cp27-cp27mu-linux_x86_64.whl && \\\n    pip3 install --no-cache-dir python/tensorrt-${TENSORRT_VERSION}.*-cp35-cp35m-linux_x86_64.whl && \\\n    pip2 install --no-cache-dir uff/uff-*-py2.py3-none-any.whl && \\\n    pip3 install --no-cache-dir uff/uff-*-py2.py3-none-any.whl && \\\n    cd ../ && \\\n    rm -rf TensorRT-${TENSORRT_VERSION}.* && rm -rf /usr/src/tensorrt\n\n# Build the library\n\nENV ONNX2TRT_VERSION 0.1.0\n\nWORKDIR /opt/onnx2trt\nCOPY . .\nRUN rm -rf build/ && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    ldconfig && \\\n    cd .. && \\\n    python setup.py build && \\\n    python setup.py install && \\\n    rm -rf ./build/\n\nWORKDIR /workspace\n\nRUN cp /opt/onnx2trt/onnx_backend_test.py .\n\nRUN [\"/bin/bash\"]\n"
}