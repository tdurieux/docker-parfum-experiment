{
  "startTime": 1674240468644,
  "endTime": 1674240468842,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n#FROM gliderlabs/alpine:3.1\n\n# explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999 postgres\n\n# grab gosu for easy step-down from root\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc \\\n\t&& rm /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget\n\n# make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \\\n\t&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n\nENV PG_MAJOR 9.4\nENV PG_VERSION 9.4.9-0+deb8u1\n\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\n\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y postgresql-common \\\n\t&& sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tpostgresql-$PG_MAJOR=$PG_VERSION \\\n\t\tpostgresql-contrib-$PG_MAJOR=$PG_VERSION \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql\n\nENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH\nENV PGDATA /var/lib/postgresql/data\nVOLUME /var/lib/postgresql/data\n\nADD init/docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n#EXPOSE 5432\nCMD [\"postgres\"]\n\n#------------------------HAT SPECIFIC-------------------------------\n\n#Setup environment variables used by docker-deploy-db.sh in docker\n# Here just the default values get set, can be overriden by providing --env parameters\nENV HAT_HOME=/opt/hat\nENV DATABASE=hat20\nENV DBUSER=hat20\nENV DBPASS=hat20\n\nENV HAT_OWNER=bob@gmail.com\nENV HAT_OWNER_ID=5974832d-2dc1-4f49-adf1-c6d8bc790274\nENV HAT_OWNER_NAME=bob\nENV HAT_OWNER_PASSWORD=pa55word\n\nENV HAT_PLATFORM=hatdex.org\nENV HAT_PLATFORM_ID=47dffdfd-55e8-4575-836c-151e30bb5a50\nENV HAT_PLATFORM_NAME=hatdex\nENV HAT_PLATFORM_PASSWORD_HASH='$2a$04$oL2CXTHzB..OekL1z8Vijus3RkHQjSsbkAYOiA5Rj.7.6GA7a4qAq'\n\n#Required by the postgres container (docker-entrypoint.sh)\n#Also sets up authMethod=md5\n#Check : https://github.com/docker-library/postgres/blob/ed23320582f4ec5b0e5e35c99d98966dacbc6ed8/9.4/docker-entrypoint.sh\nENV POSTGRES_PASSWORD=$DBPASS\nENV POSTGRES_USER=$DBUSER\nENV POSTGRES_DB=$DBPASS\n\n#Get HAT sql files sql.\nRUN mkdir -p /opt/hat\nADD required/ /opt/hat/\n\n#This will initialize the database\nADD init/docker-deploy-db.sh /docker-entrypoint-initdb.d/\n\n"
}