{
  "startTime": 1674245428624,
  "endTime": 1674245428976,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH=amd64\n\nFROM alpine as qemu\n\nRUN apk add --no-cache curl\n\nARG QEMU_VERSION=3.1.0-2\nARG QEMU_ARCHS=\"arm aarch64\"\n\nRUN for i in ${QEMU_ARCHS}; \\\n\tdo \\\n\tcurl -fsSL https://github.com/multiarch/qemu-user-static/releases/download/v${QEMU_VERSION}/qemu-${i}-static.tar.gz \\\n\t| tar zxvf - -C /usr/bin; \\\n\tdone \\\n\t&& chmod +x /usr/bin/qemu-*\n\n# ----------------------------------------------------------------------------\n\nFROM ${ARCH}/alpine:3.9 as libressl\n\nENV LIBRESSL_VERSION=\"2.8.3\"\nENV LIBRESSL_SHA=\"3967e08b3dc2277bf77057ea1f11148df7f96a2203cd21cf841902f2a1ec11320384a001d01fa58154d35612f7981bf89d5b1a60a2387713d5657677f76cc682\"\nENV LIBRESSL_DOWNLOAD_URL=\"https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz\"\n\n# install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n\n# install build dependencies\nRUN apk add --no-cache build-base curl file linux-headers\n\n# work in temp dir\nWORKDIR /tmp/src\n\n# download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${LIBRESSL_DOWNLOAD_URL}\" -o libressl.tar.gz \\\n\t&& echo \"${LIBRESSL_SHA} *libressl.tar.gz\" | sha512sum -c - \\\n\t&& tar xzf libressl.tar.gz --strip-components=1 \\\n\t&& rm -f libressl.tar.gz \\\n\t&& CFLAGS=\"-DLIBRESSL_APPS=off -DLIBRESSL_TESTS=off\" \\\n\t\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--prefix=/opt/libressl --enable-static=no \\\n\t&& make -j$(getconf _NPROCESSORS_ONLN) \\\n\t&& make install \\\n\t&& rm -rf \\\n\t\t/opt/libressl/share \\\n\t\t/opt/libressl/include\\* \\\n\t\t/opt/libressl/lib/libtls.* \\\n\t\t/opt/libressl/bin/ocspcheck \\\n\t\t/opt/libressl/lib/pkgconfig \\\n\t\t/opt/libressl/lib/*.la \\\n\t&& strip --strip-all \\\n\t\t/opt/libressl/bin/* \\\n\t\t/opt/libressl/lib/lib*\n\n# ----------------------------------------------------------------------------\n\nFROM ${ARCH}/alpine:3.9 as unbound\n\nENV UNBOUND_VERSION=\"1.9.0\"\nENV UNBOUND_SHA=\"7dfa8e078507fc24a2d0938eea590389453bacfcac023f1a41af19350ea1f7b87d0c82d7eead121a11068921292a96865e177274ff27ed8b8868445f80f7baf6\"\nENV UNBOUND_DOWNLOAD_URL=\"https://www.unbound.net/downloads/unbound-${UNBOUND_VERSION}.tar.gz\"\n\n# install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n\n# create unbound group and user\nRUN addgroup unbound && adduser -D -H -s /sbin/nologin -G unbound unbound\n\n# install build dependencies\nRUN apk add --no-cache build-base curl file linux-headers libevent libevent-dev expat expat-dev\n\n# work in temp dir\nWORKDIR /tmp/src\n\n# copy libressl\nCOPY --from=libressl /opt/libressl /opt/libressl\n\n# download, verify, extract, build, clean, strip\nRUN curl -fsSL \"${UNBOUND_DOWNLOAD_URL}\" -o unbound.tar.gz \\\n\t&& echo \"${UNBOUND_SHA} *unbound.tar.gz\" | sha512sum -c - \\\n\t&& tar xzf unbound.tar.gz --strip-components=1 \\\n\t&& rm -f unbound.tar.gz \\\n\t&& RANLIB=\"gcc-ranlib\" \\\n\t\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--prefix=/opt/unbound --with-pthreads \\\n\t\t--with-username=unbound --with-ssl=/opt/libressl --with-libevent \\\n\t\t--enable-event-api --enable-static=no --enable-pie --enable-relro-now \\\n\t&& make -j$(getconf _NPROCESSORS_ONLN) \\\n\t&& make install \\\n\t&& mv /opt/unbound/etc/unbound/unbound.conf /opt/unbound/etc/unbound/unbound.conf.example \\\n\t&& rm -rf \\\n\t\t/opt/unbound/share \\\n\t\t/opt/unbound/include \\\n\t\t/opt/unbound/lib/pkgconfig \\\n\t\t/opt/unbound/lib/*.la \\\n\t&& strip --strip-all \\\n\t\t/opt/unbound/lib/lib* \\\n\t\t/opt/unbound/sbin/unbound \\\n\t\t/opt/unbound/sbin/unbound-anchor \\\n\t\t/opt/unbound/sbin/unbound-checkconf \\\n\t\t/opt/unbound/sbin/unbound-control \\\n\t\t/opt/unbound/sbin/unbound-host\n\n# ----------------------------------------------------------------------------\n\nFROM ${ARCH}/alpine:3.9\n\nARG BUILD_DATE\nARG BUILD_VERSION\nARG VCS_REF\n\nLABEL maintainer=\"kylemharding@gmail.com\"\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.name=\"klutchell/unbound\"\nLABEL org.label-schema.description=\"Unbound is a validating, recursive, caching DNS resolver\"\nLABEL org.label-schema.url=\"https://unbound.net/\"\nLABEL org.label-schema.vcs-url=\"https://github.com/klutchell/unbound\"\nLABEL org.label-schema.docker.cmd=\"docker run -p 53:53/tcp -p 53:53/udp klutchell/unbound\"\nLABEL org.label-schema.build-date=\"${BUILD_DATE}\"\nLABEL org.label-schema.version=\"${BUILD_VERSION}\"\nLABEL org.label-schema.vcs-ref=\"${VCS_REF}\"\n\n# copy libressl and unbound\nCOPY --from=unbound /opt/ /opt/\n\n# work in unbound root directory\nWORKDIR /opt/unbound/etc/unbound\n\n# copy default config file\nCOPY a-records.conf unbound.conf ./\n\n# copy startup script\nCOPY startup.sh /\n\n# install qemu binaries used for cross-compiling\nCOPY --from=qemu /usr/bin/qemu-* /usr/bin/\n\n# create unbound group and user\nRUN addgroup unbound && adduser -D -H -s /sbin/nologin -G unbound unbound\n\n# install runtime dependencies\nRUN apk add --no-cache libevent expat curl drill ca-certificates\n\n# set execute bit\nRUN chmod +x /startup.sh\n\n# remove qemu binaries used for cross-compiling\nRUN rm /usr/bin/qemu-*\n\n# add unbound binaries to path\nENV PATH /opt/unbound/sbin:\"${PATH}\"\n\n# expose dns ports\nEXPOSE 53/tcp 53/udp\n\n# run startup script\nCMD [ \"/bin/sh\", \"-xe\", \"/startup.sh\" ]"
}