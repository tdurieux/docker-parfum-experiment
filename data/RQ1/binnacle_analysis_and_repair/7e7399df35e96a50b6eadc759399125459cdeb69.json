{
  "startTime": 1674239256359,
  "endTime": 1674239256843,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER lyysdy@foxmail.com\n\nUSER root\n\n# install dev tools\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -qqy \\\n       curl \\\n       tar \\\n       g++-4.8 \\\n       gcc \\\n       libtool \\\n       pkg-config \\\n       autoconf \\\n       openssh-server \\\n       openssh-client \\\n       rsync \\\n       build-essential \\\n       automake \\\n       vim \\\n       gdb \\\n       git \\\n       libopenmpi-dev \\\n       openmpi-bin \\\n       cmake \\\n       gfortran \\\n       python-nose \\\n       python-numpy \\\n       python-scipy \\\n       python-dev \\\n       python-pip \\\n       libopenblas-dev \\\n       software-properties-common \\\n       libssl-dev \\\n       libzmq3-dev \\\n       python-zmq && rm -rf /var/lib/apt/lists/*;\n\n# java\nRUN mkdir -p /usr/local/java/default && \\\n    curl -f -Ls 'https://download.oracle.com/otn-pub/java/jdk/8u65-b17/jdk-8u65-linux-x64.tar.gz' -H 'Cookie: oraclelicense=accept-securebackup-cookie' | \\\n    tar --strip-components=1 -xz -C /usr/local/java/default/\n\nENV JAVA_HOME /usr/local/java/default/\nENV PATH $PATH:$JAVA_HOME/bin\n\n# hadoop\nRUN wget -cq -t 0 https://www.eu.apache.org/dist/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\nRUN tar -xz -C /usr/local/ -f hadoop-2.6.0.tar.gz \\\n    && rm hadoop-2.6.0.tar.gz \\\n    && cd /usr/local && ln -s ./hadoop-2.6.0 hadoop \\\n    && cp -r /usr/local/hadoop/include/* /usr/local/include\n\nENV HADOOP_PREFIX /usr/local/hadoop\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/local/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n\n# fixing the libhadoop.so like a boss\nRUN rm  /usr/local/hadoop/lib/native/* \\\n    && curl -f -Ls https://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.6.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n\n# install Theano-dev\nRUN mkdir -p /theano \\\n    && cd /theano \\\n    && git clone git://github.com/Theano/Theano.git \\\n    && cd /theano/Theano \\\n    && python setup.py develop\n\n# Install Jupyter Notebook for iTorch\nRUN pip install --no-cache-dir notebook ipywidgets\n\n# Run Torch7 installation scripts\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive && cd /root/torch && \\\n  bash install-deps && \\\n  ./install.sh\n\n\n# Export environment variables manually\nENV LUA_PATH='/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua'\nENV LUA_CPATH='/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so'\nENV PATH=/root/torch/install/bin:$PATH\nENV LD_LIBRARY_PATH=/root/torch/install/lib:$LD_LIBRARY_PATH\nENV DYLD_LIBRARY_PATH=/root/torch/install/lib:$DYLD_LIBRARY_PATH\nENV LUA_CPATH='/root/torch/install/lib/?.so;'$LUA_CPATH\n\nWORKDIR /dmtk\n\nRUN cd /dmtk && git clone https://github.com/Microsoft/multiverso.git && cd multiverso \\\n\t&& mkdir build && cd build \\\n\t&& cmake .. && make && make install\n\n# python tests\nRUN cd /dmtk/multiverso/binding/python \\\n\t&& python setup.py install \\\n\t&& nosetests\n\n# lua tests\nRUN cd /dmtk/multiverso/binding/lua \\\n\t&& make install \\\n\t&& make test\n\n# run cpp tests\nRUN cd /dmtk/multiverso/build \\\n   && mpirun -np 4 ./Test/multiverso.test kv \\\n   && mpirun -np 4 ./Test/multiverso.test array \\\n   && mpirun -np 4 ./Test/multiverso.test net \\\n   && mpirun -np 4 ./Test/multiverso.test ip \\\n   && mpirun -np 4 ./Test/multiverso.test checkpoint \\\n   && mpirun -np 4 ./Test/multiverso.test restore \\\n   && mpirun -np 4 ./Test/multiverso.test allreduce\n# - mpirun -np 4 ./Test/multiverso.test matrix  # TODO the matrix test won't stop\n# - mpirun -np 4 ./Test/multiverso.test TestSparsePerf # TODO TestSparsePerf takes too much time\n# - mpirun -np 4 ./Test/multiverso.test TestDensePerf # TODO TestDensePerf takes too much time\n\n# clean unnessary packages\nRUN apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n"
}