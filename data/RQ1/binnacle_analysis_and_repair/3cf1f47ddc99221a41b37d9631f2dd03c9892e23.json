{
  "startTime": 1674236809303,
  "endTime": 1674236809563,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 153
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 261
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 261
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine\nMAINTAINER Leonardo Loures <luvres@hotmail.com>\n\nRUN apk update && apk upgrade \\\n    && apk add openssh rsync curl procps supervisor vim bash ncurses bash-completion \\\n    && rm -rf /var/cache/apk/*\n\n# SSH Key Passwordless\nRUN /usr/bin/ssh-keygen -A \\\n    && ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/id_rsa \\\n    && cp /etc/ssh/id_rsa.pub /etc/ssh/authorized_keys\nRUN mkdir -p /root/.ssh \\\n    && cp /etc/ssh/ssh_config /root/.ssh/config \\\n    && cp /etc/ssh/authorized_keys /root/.ssh/authorized_keys \\\n    && cp /etc/ssh/id_rsa /root/.ssh/id_rsa\nRUN chmod 700 /root/.ssh \\\n    && chmod 600 /root/.ssh/config \\\n    && chmod 600 /root/.ssh/id_rsa \\\n    && chmod 600 /root/.ssh/authorized_keys\nRUN sed -i '/StrictHostKeyChecking/s/ask/no/g' /etc/ssh/ssh_config \\\n    && sed -i '/StrictHostKeyChecking/s/#//g' /etc/ssh/ssh_config\n\n# Supervidor\nADD supervisord.conf /etc/supervisord.conf\n\n# glibc\nENV GLIB_VERSION 2.25-r0\nRUN apk --update --no-cache add ca-certificates \\\n    && curl -f -Ls https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIB_VERSION}/glibc-${GLIB_VERSION}.apk > /tmp/glibc-${GLIB_VERSION}.apk \\\n    && apk add --no-cache --allow-untrusted /tmp/glibc-${GLIB_VERSION}.apk\n\n# Java\nRUN JAVA_VERSION_MAJOR=8 && \\\n    JAVA_VERSION_MINOR=141 && \\\n    JAVA_VERSION_BUILD=15 && \\\n    JAVA_PACKAGE=jdk && \\\n    URL=336fa29ff2bb4ef291e347e091f7f4a7 && \\\n    mkdir /opt && \\\n    curl -f -jkSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${URL}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz \\\n    | tar -xzf - -C /opt \\\n    && ln -s /usr/local/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk \\\n    && rm -rf /opt/jdk/*src.zip \\\n           /opt/jdk/lib/missioncontrol \\\n           /opt/jdk/lib/visualvm \\\n           /opt/jdk/lib/*javafx* \\\n           /opt/jdk/jre/plugin \\\n           /opt/jdk/jre/bin/javaws \\\n           /opt/jdk/jre/bin/jjs \\\n           /opt/jdk/jre/bin/orbd \\\n           /opt/jdk/jre/bin/pack200 \\\n           /opt/jdk/jre/bin/policytool \\\n           /opt/jdk/jre/bin/rmid \\\n           /opt/jdk/jre/bin/rmiregistry \\\n           /opt/jdk/jre/bin/servertool \\\n           /opt/jdk/jre/bin/tnameserv \\\n           /opt/jdk/jre/bin/unpack200 \\\n           /opt/jdk/jre/lib/javaws.jar \\\n           /opt/jdk/jre/lib/deploy* \\\n           /opt/jdk/jre/lib/desktop \\\n           /opt/jdk/jre/lib/*javafx* \\\n           /opt/jdk/jre/lib/*jfx* \\\n           /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n           /opt/jdk/jre/lib/amd64/libprism_*.so \\\n           /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n           /opt/jdk/jre/lib/amd64/libglass.so \\\n           /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n           /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n           /opt/jdk/jre/lib/amd64/libjfx*.so \\\n           /opt/jdk/jre/lib/ext/jfxrt.jar \\\n           /opt/jdk/jre/lib/ext/nashorn.jar \\\n           /opt/jdk/jre/lib/oblique-fonts \\\n           /opt/jdk/jre/lib/plugin.jar \\\n           /tmp/* /var/cache/apk/*\nENV JAVA_HOME=/opt/jdk\nENV PATH=${PATH}:${JAVA_HOME}/bin:${JAVA_HOME}/sbin\n\n# Hadoop\nENV HADOOP_VERSION 2.8.0\nRUN curl -f https://ftp.unicamp.br/pub/apache/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz | tar -xzf - -C /usr/local/ \\\n    && rm -fR /usr/local/hadoop-${HADOOP_VERSION}/share/doc \\\n              /usr/local/hadoop-${HADOOP_VERSION}/share/hadoop/common/jdiff \\\n    && ln -s /usr/local/hadoop-${HADOOP_VERSION}/ /opt/hadoop\nENV HADOOP_HOME=/opt/hadoop\nENV HADOOP_INSTALL=$HADOOP_HOME\nENV HADOOP_COMMON_HOME=$HADOOP_HOME\nENV HADOOP_MAPRED_HOME=$HADOOP_HOME\nENV HADOOP_HDFS_HOME=$HADOOP_HOME\nENV YARN_HOME=$HADOOP_HOME\nENV PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\n\n# Configurations Pseudo Distributed\nADD hadoop-env.sh $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nADD core-site.xml $HADOOP_HOME/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_HOME/etc/hadoop/hdfs-site.xml\nADD mapred-site.xml $HADOOP_HOME/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_HOME/etc/hadoop/yarn-site.xml\nADD start.sh /etc/start.sh\nRUN chmod +x /etc/start.sh\n\nRUN hdfs namenode -format\n\nWORKDIR /home/root\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090 8020 9000\n\n# Mapred ports\nEXPOSE 10020 19888\n\n# Yarn ports\nEXPOSE 8030 8031 8032 8033 8040 8042 8088\n\n#Other ports\nEXPOSE 49707 22 2122\n\n\nENTRYPOINT [\"/etc/start.sh\"]\n\n"
}