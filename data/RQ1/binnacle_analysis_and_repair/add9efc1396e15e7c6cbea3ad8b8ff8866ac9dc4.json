{
  "startTime": 1674241146829,
  "endTime": 1674241147080,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ubuntu_version\nFROM ubuntu:${ubuntu_version}\n\nARG ubuntu_version\nARG php_version\nARG php_packages\nARG php_ext_conf_dir\nARG oci8_version\n\nLABEL maintainer=\"Tasso Evangelista <tasso@tassoevan.me>\"\n\nVOLUME /host\nENV DEBIAN_FRONTEND noninteractive\n\n# Install build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y unzip build-essential libaio1 re2c wget ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP and PHP development packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ${php_packages} && rm -rf /var/lib/apt/lists/*;\nRUN php -r 'exit(substr(PHP_VERSION, 0, strlen(getenv(\"php_version\"))) === getenv(\"php_version\") ? 0 : 1);'\n\n# Install Oracle Instant Client Basic and SDK\nRUN mkdir -p /opt/oracle/instantclient\nADD instantclient/instantclient-basic-linux.x64-12.2.0.1.0.zip /tmp/basic.zip\nRUN unzip -q /tmp/basic.zip -d /opt/oracle\nRUN mv /opt/oracle/instantclient_12_2 /opt/oracle/instantclient/lib\nADD instantclient/instantclient-sdk-linux.x64-12.2.0.1.0.zip /tmp/sdk.zip\nRUN unzip -q /tmp/sdk.zip -d /opt/oracle\nRUN mv /opt/oracle/instantclient_12_2/sdk/include /opt/oracle/instantclient/include\nRUN ln -s /opt/oracle/instantclient/lib/libclntsh.so.12.1 /opt/oracle/instantclient/lib/libclntsh.so\nRUN ln -s /opt/oracle/instantclient/lib/libocci.so.12.1 /opt/oracle/instantclient/lib/libocci.so\nRUN echo /opt/oracle/instantclient/lib >> /etc/ld.so.conf\nRUN ldconfig\n\n# Build and install PHP OCI8 extension\nRUN echo 'instantclient,/opt/oracle/instantclient/lib' | pecl install oci8-${oci8_version}\nRUN echo 'extension=oci8.so' > ${php_ext_conf_dir}/oci8.ini\nRUN if [ \"${ubuntu_version}\" = 'trusty' ]; \\\n    then ln -s ../../mods-available/oci8.ini /etc/php5/cli/conf.d/20-oci8.ini; \\\n    elif [ \"${ubuntu_version}\" = 'xenial' ] || [ \"${ubuntu_version}\" = 'bionic' ]; \\\n    then phpenmod oci8; \\\n    fi\nRUN php -r 'exit(function_exists(\"oci_connect\") ? 0 : 1);'\n\n# Build and install PHP PDO-OCI extension\nRUN wget -O /tmp/php-${php_version}.zip \\\n        https://github.com/php/php-src/archive/php-${php_version}.zip\nRUN unzip /tmp/php-${php_version}.zip -d /tmp\nRUN if [ \"${ubuntu_version}\" = 'precise' ] || [ \"${ubuntu_version}\" = 'trusty' ]; \\\n    then ln -s /usr/include/php5/ /usr/include/php && \\\n        sed 's/10.1/12.1/' -i /tmp/php-src-php-${php_version}/ext/pdo_oci/config.m4; \\\n    fi\nWORKDIR /tmp/php-src-php-${php_version}/ext/pdo_oci\nRUN phpize\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-pdo-oci=/opt/oracle/instantclient\nRUN make install\nWORKDIR /\nRUN echo 'extension=pdo_oci.so' > ${php_ext_conf_dir}/pdo_oci.ini\nRUN if [ \"${ubuntu_version}\" = 'trusty' ]; \\\n    then ln -s ../../mods-available/pdo_oci.ini /etc/php5/cli/conf.d/21-pdo_oci.ini; \\\n    elif [ \"${ubuntu_version}\" = 'xenial' ] || [ \"${ubuntu_version}\" = 'bionic' ]; \\\n    then phpenmod pdo_oci; \\\n    fi\nRUN php -r 'exit(in_array(\"oci\", PDO::getAvailableDrivers()) ? 0 : 1);'\n\n# Copy compiled binaries to volume\nCMD ext_dir=`php -r 'echo ini_get(\"extension_dir\");'` && \\\n    host_owner=`stat -c '%u:%g' /host` && \\\n    cp \"${ext_dir}/oci8.so\" /host/oci8.so && \\\n    chown ${host_owner} /host/oci8.so && \\\n    cp \"${ext_dir}/pdo_oci.so\" /host/pdo_oci.so && \\\n    chown ${host_owner} /host/pdo_oci.so\n"
}