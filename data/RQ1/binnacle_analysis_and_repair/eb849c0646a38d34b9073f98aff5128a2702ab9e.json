{
  "startTime": 1674249480282,
  "endTime": 1674249480891,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 2,
        "columnEnd": 118
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\nMAINTAINER http://github.com/radiomics\n\nRUN yum update -y && \\\n  yum groupinstall -y \"Development Tools\" && \\\n  yum install -y curl \\\n   curl-devel \\\n   coreutils \\\n   freetype-devel \\\n   gcc \\\n   gcc-c++ \\\n   gettext \\\n   libpng-devel \\\n   openssl-devel \\\n   perl \\\n   perl-CPAN \\\n   perl-ExtUtils-MakeMaker \\\n   wget \\\n   zlib-devel && rm -rf /var/cache/yum\n\nWORKDIR /etc/yum.repos.d\nRUN wget https://people.centos.org/tru/devtools-2/devtools-2.repo\nRUN yum install -y devtoolset-2-gcc \\\n  devtoolset-2-binutils \\\n  devtoolset-2-gcc-gfortran \\\n  devtoolset-2-gcc-c++ && rm -rf /var/cache/yum\nENV CC /opt/rh/devtoolset-2/root/usr/bin/gcc\nENV CXX /opt/rh/devtoolset-2/root/usr/bin/g++\nENV FC /opt/rh/devtoolset-2/root/usr/bin/gfortran\n\n# Build and install git from source.\n#WORKDIR /usr/src\n#ENV GIT_VERSION 2.11.0\n#RUN wget https://github.com/git/git/archive/v${GIT_VERSION}.tar.gz -O git-${GIT_VERSION}.tar.gz && \\\n#  tar xvzf git-${GIT_VERSION}.tar.gz && \\\n#  cd git-${GIT_VERSION} && \\\n#  make prefix=/usr all && \\\n#  make prefix=/usr install && \\\n#  cd .. && rm -rf git-${GIT_VERSION}*\n\n# Build and install git from source.\nWORKDIR /usr/src\nENV GIT_VERSION 2.5.0\nRUN wget --no-check-certificate https://www.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.gz && \\\n  tar xvzf git-${GIT_VERSION}.tar.gz && \\\n  cd git-${GIT_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n  make && \\\n  make install && \\\n  cd .. && rm -rf git-${GIT_VERSION}* && rm git-${GIT_VERSION}.tar.gz\n\n# Build and install CMake from source.\nWORKDIR /usr/src\nRUN git clone git://cmake.org/cmake.git CMake && \\\n  cd CMake && \\\n  git checkout v3.7.2 && \\\n  mkdir /usr/src/CMake-build && \\\n  cd /usr/src/CMake-build && \\\n  /usr/src/CMake/bootstrap \\\n    --parallel=$(grep -c processor /proc/cpuinfo) \\\n    --prefix=/usr && \\\n  make -j$(grep -c processor /proc/cpuinfo) && \\\n  ./bin/cmake \\\n    -DCMAKE_BUILD_TYPE:STRING=Release \\\n    -DCMAKE_USE_OPENSSL:BOOL=ON . && \\\n  make install && \\\n  cd .. && rm -rf CMake* && rm -rf /usr/src/CMake-build\n\n# Build and install Python from source.\nWORKDIR /usr/src\nENV PYTHON_VERSION 2.7.10\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \\\n  tar xvzf Python-${PYTHON_VERSION}.tgz && \\\n  cd Python-${PYTHON_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j$(grep -c processor /proc/cpuinfo) && \\\n  make install && \\\n  cd .. && rm -rf Python-${PYTHON_VERSION}* && rm Python-${PYTHON_VERSION}.tgz\n\n# Build and install ninja from source.\nWORKDIR /usr/src\nRUN git clone https://github.com/martine/ninja.git && \\\n  cd ninja && \\\n  git checkout v1.6.0 && \\\n  ./configure.py --bootstrap && \\\n  mv ninja /usr/bin/ && \\\n  cd .. && rm -rf ninja\n\n# Setup necessary python packages\nWORKDIR /usr/src\nRUN python --version && \\\n  wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py && \\\n  python get-pip.py && \\\n  pip install --no-cache-dir wheel >=0.29.0 && \\\n  pip install --no-cache-dir setuptools >=28.0.0 && \\\n  pip install --no-cache-dir scipy && \\\n  pip install --no-cache-dir trimesh && \\\n  pip install --no-cache-dir scikit-image && \\\n  pip install --no-cache-dir --trusted-host www.itk.org -f https://itk.org/SimpleITKDoxygen/html/PyDownloadPage.html SimpleITK >=0.9.1 && \\\n  python -c \"import SimpleITK; print('SimpleITK Version:' + SimpleITK.Version_VersionString())\"\n\n# Install PyRadiomics\nWORKDIR /usr/src\nRUN git clone https://github.com/radiomics/pyradiomics.git && \\\n  cd pyradiomics && \\\n  pip install --no-cache-dir -r requirements.txt && \\\n  python setup.py install\n\nWORKDIR /usr/src\nENTRYPOINT [\"pyradiomics\"]\n"
}