{
  "startTime": 1674243500493,
  "endTime": 1674243500760,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine\nMAINTAINER Patrick Copeland ptcnop\n\nENV YARA_VERSION 3.8.1\nENV YARA_PY_VERSION 3.8.1\nENV SSDEEP ssdeep-2.13\n\nCOPY requirements.txt /opt/multiscanner/\n\nRUN apk add --no-cache \\\n        bash \\\n        bison \\\n        file \\\n        jansson \\\n        jpeg \\\n        libffi \\\n        python3 \\\n        su-exec \\\n        tini \\\n        zip \\\n        zlib \\\n  && apk add --no-cache -t .build-deps \\\n       autoconf \\\n       automake \\\n       build-base \\\n       file-dev \\\n       flex \\\n       git \\\n       jansson-dev \\\n       jpeg-dev \\\n       libc-dev \\\n       libffi-dev \\\n       libtool \\\n       musl-dev \\\n       postgresql-dev \\\n       py3-pip \\\n       python3-dev \\\n       zlib-dev \\\n  # ssdeep\n  && echo \"Install ssdeep from source...\" \\\n  && cd /tmp \\\n  && wget -O /tmp/$SSDEEP.tar.gz https://downloads.sourceforge.net/project/ssdeep/$SSDEEP/$SSDEEP.tar.gz \\\n  && tar zxvf $SSDEEP.tar.gz \\\n  && cd $SSDEEP \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  # yara\n  && echo \"Install Yara from source...\" \\\n  && cd /tmp/ \\\n  && git clone --recursive --branch v$YARA_VERSION https://github.com/VirusTotal/yara.git \\\n  && cd /tmp/yara \\\n  && ./bootstrap.sh \\\n  && sync \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-crypto \\\n  --enable-magic \\\n  --enable-cuckoo \\\n  --enable-dotnet \\\n  && make \\\n  && make install \\\n  && echo \"Install yara-python...\" \\\n  && cd /tmp/ \\\n  && git clone --recursive --branch v$YARA_PY_VERSION https://github.com/VirusTotal/yara-python \\\n  && cd yara-python \\\n  && python3 setup.py build --dynamic-linking \\\n  && python3 setup.py install \\\n  && echo \"Downloading yara signatures...\" \\\n  && git clone --depth 1 https://github.com/Yara-Rules/rules.git /opt/multiscanner/etc/yarasigs/Yara-Rules \\\n  # install ms dependencies\n  && cd /opt/multiscanner \\\n  && pip3 install --no-cache-dir --upgrade pip \\\n  && pip3 install --no-cache-dir -r requirements.txt \\\n  # clean up\n  && rm -rf /tmp/* \\\n  && apk del --purge .build-deps && rm $SSDEEP.tar.gz\n\nCOPY . /opt/multiscanner\nCOPY ./docker_utils/*.ini /opt/multiscanner/\nCOPY ./etc/pdf_config.json /opt/multiscanner/\nCOPY ./etc/ember_model_2017.txt /opt/multiscanner/etc/ember/\n\nWORKDIR /opt/multiscanner\n\nRUN pip3 install --no-cache-dir .\n\nRUN wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -O /wait-for-it.sh \\\n  && chmod +x /wait-for-it.sh\n\n# Run script\nCMD multiscanner\n"
}