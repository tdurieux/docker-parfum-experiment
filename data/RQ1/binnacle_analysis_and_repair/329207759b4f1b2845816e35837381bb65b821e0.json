{
  "startTime": 1674252954502,
  "endTime": 1674252954624,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 8,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VERSION_ID\nFROM nvidia/base/ubuntu:${VERSION_ID}\n\n# runc dependencies\nRUN apt-get update && \\\n    if [ \"$(lsb_release -cs)\" = \"trusty\" ]; then \\\n        apt-get install --no-install-recommends -t \"trusty-backports\" -y libseccomp-dev; \\\n    else \\\n        apt-get install --no-install-recommends -y libseccomp-dev; \\\n    fi && \\\n    apt-get install --no-install-recommends -y \\\n        pkg-config \\\n        libapparmor-dev \\\n        libselinux1-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN go get github.com/LK4D4/vndr\n\n# runc\nWORKDIR $GOPATH/src/github.com/opencontainers/runc\n\nRUN git clone https://github.com/opencontainers/runc.git .\n\n# packaging\nARG PKG_VERS\nARG PKG_REV\n\nENV DEBFULLNAME \"NVIDIA CORPORATION\"\nENV DEBEMAIL \"cudatools@nvidia.com\"\nENV REVISION \"$PKG_VERS-$PKG_REV\"\nENV SECTION \"\"\n\n# output directory\nENV DIST_DIR=/tmp/nvidia-container-runtime-$PKG_VERS\nRUN mkdir -p $DIST_DIR /dist\n\nARG RUNC_COMMIT\nCOPY runc/$RUNC_COMMIT/ /tmp/patches/runc\n\nRUN git checkout $RUNC_COMMIT && \\\n    git apply /tmp/patches/runc/* && \\\n    if [ -f vendor.conf ]; then vndr; fi && \\\n    make BUILDTAGS=\"seccomp apparmor selinux\" && \\\n    mv runc $DIST_DIR/nvidia-container-runtime\n\nWORKDIR $DIST_DIR\nCOPY debian ./debian\n\nRUN sed -i \"s;@VERSION@;${REVISION#*+};\" debian/changelog && \\\n    if [ \"$REVISION\" != \"$(dpkg-parsechangelog --show-field=Version)\" ]; then exit 1; fi\n\nCMD export DISTRIB=\"$(lsb_release -cs)\" && \\\n    debuild -eREVISION -eDISTRIB -eSECTION --dpkg-buildpackage-hook='sh debian/prepare' -i -us -uc -b && \\\n    mv /tmp/*.deb /dist\n"
}