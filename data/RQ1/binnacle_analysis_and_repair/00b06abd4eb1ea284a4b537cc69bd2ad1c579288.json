{
  "startTime": 1674244410715,
  "endTime": 1674244411153,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/blacklabelops/jira\nFROM blacklabelops/alpine:3.7\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n\n# Set timezone and locales\nRUN set -ex \\\n    && apk update \\\n    && apk upgrade \\\n    && apk add --no-cache tzdata \\\n    && echo \"${TIMEZONE}\" > /etc/TZ \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n\n# Note that you also need to update buildscripts/release.sh when the\n# Jira version changes\nARG JIRA_VERSION=7.3.8\nARG JIRA_PRODUCT=jira-software\n# Permissions, set the linux user id and group id\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n# Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\n\nENV JIRA_USER=jira                            \\\n    JIRA_GROUP=jira                           \\\n    JIRA_CONTEXT_PATH=ROOT                    \\\n    JIRA_HOME=/var/atlassian/jira             \\\n    JIRA_INSTALL=/opt/atlassian/jira                    \\\n    JIRA_SCRIPTS=/usr/local/share/atlassian   \\\n    MYSQL_DRIVER_VERSION=5.1.44              \\\n    DOCKERIZE_VERSION=v0.4.0\nENV JAVA_HOME=$JIRA_INSTALL/jre\n\nENV PATH=$PATH:$JAVA_HOME/bin\n\nCOPY imagescripts ${JIRA_SCRIPTS}\nCOPY atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin /tmp/jira.bin\n\nRUN apk add --update                                    \\\n      ca-certificates                                   \\\n      gzip                                              \\\n      curl                                              \\\n      tini                                              \\\n      wget                                              \\\n      xmlstarlet                                    &&  \\\n    # Install latest glibc\n    export GLIBC_VERSION=2.26-r0 && \\\n    wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk && \\\n    apk add --allow-untrusted /tmp/glibc-${GLIBC_VERSION}.apk && \\\n    wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk && \\\n    apk add --allow-untrusted /tmp/glibc-bin-${GLIBC_VERSION}.apk && \\\n    wget --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk && \\\n    apk --allow-untrusted add /tmp/glibc-i18n-${GLIBC_VERSION}.apk && \\\n    # Install Jira\n    export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin && \\\n    mkdir -p ${JIRA_HOME}                           &&  \\\n    mkdir -p ${JIRA_INSTALL}                        &&  \\\n    #wget -O /tmp/jira.bin https://www.atlassian.com/software/jira/downloads/binary/${JIRA_BIN} && \\\n    chmod +x /tmp/jira.bin                          &&  \\\n    /tmp/jira.bin -q -varfile                           \\\n      ${JIRA_SCRIPTS}/response.varfile              &&  \\\n    # Install database drivers\n    rm -f                                               \\\n      ${JIRA_INSTALL}/lib/mysql-connector-java*.jar && \\\n    wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \\\n      https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz && \\\n    tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                              \\\n      --directory=/tmp && \\\n    cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar     \\\n      ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar && \\\n    # Add user\n    export CONTAINER_USER=jira && \\\n    export CONTAINER_UID=1000 && \\\n    export CONTAINER_GROUP=jira && \\\n    export CONTAINER_GID=1000 && \\\n    addgroup -g $CONTAINER_GID $CONTAINER_GROUP && \\\n    adduser -u $CONTAINER_UID                           \\\n            -G $CONTAINER_GROUP                         \\\n            -h /home/$CONTAINER_USER                    \\\n            -s /bin/bash                                \\\n            -S $CONTAINER_USER && \\\n    # Adding letsencrypt-ca to truststore\n    export KEYSTORE=$JAVA_HOME/lib/security/cacerts && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der && \\\n    # Install atlassian ssl tool\n    wget -O /home/${JIRA_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class && \\\n    # Set permissions\n    chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_HOME} && \\\n    chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_INSTALL} && \\\n    chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_SCRIPTS} && \\\n    chown -R $JIRA_USER:$JIRA_GROUP /home/${JIRA_USER} && \\\n    # Install dockerize\n    wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz && \\\n    tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz && \\\n    rm /tmp/dockerize.tar.gz && \\\n    # Remove obsolete packages\n    apk del                                             \\\n      ca-certificates                                   \\\n      gzip                                              \\\n      wget && \\\n    # Clean caches and tmps\n    rm -rf /var/cache/apk/* && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/log/*\n# add patch\nADD atlassian-extras-3.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/lib/atlassian-extras-3.2.jar\nADD atlassian-universal-plugin-manager-plugin-2.22.2.jar $JIRA_INSTALL/atlassian-jira/WEB-INF/atlassian-bundled-plugins/atlassian-universal-plugin-manager-plugin-2.22.2.jar\n\n# Image Metadata\nLABEL com.blacklabelops.application.jira.version=$JIRA_PRODUCT-$JIRA_VERSION \\\n      com.blacklabelops.application.jira.userid=$CONTAINER_UID \\\n      com.blacklabelops.application.jira.groupid=$CONTAINER_GID \\\n      com.blacklabelops.image.builddate.jira=${BUILD_DATE}\n\nUSER jira\nWORKDIR ${JIRA_HOME}\nVOLUME [\"/var/atlassian/jira\"]\nEXPOSE 8080\nENTRYPOINT [\"/sbin/tini\",\"--\",\"/usr/local/share/atlassian/docker-entrypoint.sh\"]\nCMD [\"jira\"]\n"
}