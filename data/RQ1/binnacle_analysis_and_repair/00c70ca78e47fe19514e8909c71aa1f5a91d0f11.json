{
  "startTime": 1674246029703,
  "endTime": 1674246031539,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 296,
        "lineEnd": 296,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 357,
        "lineEnd": 357,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 359,
        "lineEnd": 359,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 438,
        "lineEnd": 438,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 511,
        "lineEnd": 511,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 613,
        "lineEnd": 613,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 304,
        "lineEnd": 304,
        "columnStart": 8,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 495,
        "lineEnd": 495,
        "columnStart": 23,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 529,
        "lineEnd": 529,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 530,
        "lineEnd": 530,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 2,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 388,
        "lineEnd": 388,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 466,
        "lineEnd": 470,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 493,
        "lineEnd": 493,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 528,
        "lineEnd": 528,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 543,
        "lineEnd": 543,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 555,
        "lineEnd": 555,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 571,
        "lineEnd": 572,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 585,
        "lineEnd": 588,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 2,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 466,
        "lineEnd": 470,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 493,
        "lineEnd": 493,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 528,
        "lineEnd": 528,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 555,
        "lineEnd": 555,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 571,
        "lineEnd": 572,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 585,
        "lineEnd": 588,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 591,
        "lineEnd": 591,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 2,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 388,
        "lineEnd": 388,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 466,
        "lineEnd": 470,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 493,
        "lineEnd": 493,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 528,
        "lineEnd": 528,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 543,
        "lineEnd": 543,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 555,
        "lineEnd": 555,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 571,
        "lineEnd": 572,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 585,
        "lineEnd": 588,
        "columnStart": 2,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 157,
        "lineEnd": 158,
        "columnStart": 2,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 180,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 464,
        "lineEnd": 468,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 491,
        "lineEnd": 491,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 526,
        "lineEnd": 526,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 553,
        "lineEnd": 553,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 568,
        "lineEnd": 569,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 582,
        "lineEnd": 585,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 588,
        "lineEnd": 588,
        "columnStart": 5,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'workspace' base Image, visit its repository on Github\n#    https://github.com/Laradock/workspace\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https://hub.docker.com/r/laradock/workspace/tags/\n#\n# Note: Base Image name format {image-tag}-{php-version}\n#\n\nARG PHP_VERSION=${PHP_VERSION}\n\nFROM laradock/workspace:2.2-${PHP_VERSION}\n\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\n\n# Start as root\nUSER root\n\n###########################################################################\n# Laradock non-root user:\n###########################################################################\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\nRUN groupadd -g ${PGID} laradock && \\\n    useradd -u ${PUID} -g laradock -m laradock -G docker_env && \\\n    usermod -p \"*\" laradock\n\n#\n#--------------------------------------------------------------------------\n# Mandatory Software's Installation\n#--------------------------------------------------------------------------\n#\n# Mandatory Software's such as (\"php-cli\", \"git\", \"vim\", ....) are\n# installed on the base image 'laradock/workspace' image. If you want\n# to add more Software's or remove existing one, you need to edit the\n# base image (https://github.com/Laradock/workspace).\n#\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n# Example:\n#   - INSTALL_NODE=false\n#   - ...\n#\n\n###########################################################################\n# Set Timezone\n###########################################################################\n\nARG TZ=UTC\nENV TZ ${TZ}\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n###########################################################################\n# User Aliases\n###########################################################################\n\nUSER root\n\nCOPY ./aliases.sh /root/aliases.sh\nCOPY ./aliases.sh /home/laradock/aliases.sh\n\nRUN sed -i 's/\\r//' /root/aliases.sh && \\\n    sed -i 's/\\r//' /home/laradock/aliases.sh && \\\n    chown laradock:laradock /home/laradock/aliases.sh && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~/.bashrc && \\\n    echo \"source ~/aliases.sh\" >> ~/.bashrc && \\\n  echo \"\" >> ~/.bashrc\n\nUSER laradock\n\nRUN echo \"\" >> ~/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~/.bashrc && \\\n    echo \"source ~/aliases.sh\" >> ~/.bashrc && \\\n  echo \"\" >> ~/.bashrc\n\n###########################################################################\n# Composer:\n###########################################################################\n\nUSER root\n\n# Add the composer.json\nCOPY ./composer.json /home/laradock/.composer/composer.json\n\n# Make sure that ~/.composer belongs to laradock\nRUN chown -R laradock:laradock /home/laradock/.composer\n\nUSER laradock\n\n# Check if global install need to be ran\nARG COMPOSER_GLOBAL_INSTALL=false\nENV COMPOSER_GLOBAL_INSTALL ${COMPOSER_GLOBAL_INSTALL}\n\nRUN if [ ${COMPOSER_GLOBAL_INSTALL} = true ]; then \\\n    # run the install\n    composer global install \\\n;fi\n\nARG COMPOSER_REPO_PACKAGIST\nENV COMPOSER_REPO_PACKAGIST ${COMPOSER_REPO_PACKAGIST}\n\nRUN if [ ${COMPOSER_REPO_PACKAGIST} ]; then \\\n    composer config -g repo.packagist composer ${COMPOSER_REPO_PACKAGIST} \\\n;fi\n\n# Export composer vendor path\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"~/.composer/vendor/bin:$PATH\"' >> ~/.bashrc\n\n###########################################################################\n# Non-root user : PHPUnit path\n###########################################################################\n\n# add ./vendor/bin to non-root user's bashrc (needed for phpunit)\nUSER laradock\n\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"/var/www/vendor/bin:$PATH\"' >> ~/.bashrc\n\n###########################################################################\n# Crontab\n###########################################################################\n\nUSER root\n\nCOPY ./crontab /etc/cron.d\n\nRUN chmod -R 644 /etc/cron.d\n\n###########################################################################\n# SOAP:\n###########################################################################\n\nUSER root\n\nARG INSTALL_SOAP=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_SOAP} = true ]; then \\\n  apt-get -y --no-install-recommends install libxml2-dev php${PHP_VERSION}-soap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# LDAP:\n###########################################################################\n\nARG INSTALL_LDAP=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_LDAP} = true ]; then \\\n    apt-get install --no-install-recommends -y libldap2-dev && \\\n    apt-get install --no-install-recommends -y php${PHP_VERSION}-ldap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# IMAP:\n###########################################################################\n\nARG INSTALL_IMAP=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_IMAP} = true ]; then \\\n    apt-get install --no-install-recommends -y php${PHP_VERSION}-imap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# xDebug:\n###########################################################################\n\nUSER root\n\nARG INSTALL_XDEBUG=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    apt-get update && \\\n    # Load the xdebug extension only with phpunit commands\n    apt-get install --no-install-recommends -y --force-yes php${PHP_VERSION}-xdebug && \\\n    sed -i 's/^;//g' /etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini && \\\n    echo \"alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'\" >> ~/.bashrc \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n# ADD for REMOTE debugging\nCOPY ./xdebug.ini /etc/php/${PHP_VERSION}/cli/conf.d/xdebug.ini\n\n\n###########################################################################\n# ssh:\n###########################################################################\n\nARG INSTALL_WORKSPACE_SSH=false\n\nCOPY insecure_id_rsa /tmp/id_rsa\nCOPY insecure_id_rsa.pub /tmp/id_rsa.pub\n\nRUN if [ ${INSTALL_WORKSPACE_SSH} = true ]; then \\\n    rm -f /etc/service/sshd/down && \\\n    cat /tmp/id_rsa.pub >> /root/.ssh/authorized_keys \\\n        && cat /tmp/id_rsa.pub >> /root/.ssh/id_rsa.pub \\\n        && cat /tmp/id_rsa >> /root/.ssh/id_rsa \\\n        && rm -f /tmp/id_rsa* \\\n        && chmod 644 /root/.ssh/authorized_keys /root/.ssh/id_rsa.pub \\\n    && chmod 400 /root/.ssh/id_rsa \\\n    && cp -rf /root/.ssh /home/laradock \\\n    && chown -R laradock:laradock /home/laradock/.ssh \\\n;fi\n\n###########################################################################\n# MongoDB:\n###########################################################################\n\nARG INSTALL_MONGO=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    pecl -q install mongodb && \\\n    echo \"extension=mongodb.so\" >> /etc/php/${PHP_VERSION}/mods-available/mongodb.ini && \\\n    ln -s /etc/php/${PHP_VERSION}/mods-available/mongodb.ini /etc/php/${PHP_VERSION}/cli/conf.d/30-mongodb.ini \\\n;fi\n\n###########################################################################\n# AMQP:\n###########################################################################\n\nARG INSTALL_AMQP=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_AMQP} = true ]; then \\\n    apt-get install --no-install-recommends librabbitmq-dev -y && \\\n    pecl -q install amqp && \\\n    echo \"extension=amqp.so\" >> /etc/php/${PHP_VERSION}/mods-available/amqp.ini && \\\n    ln -s /etc/php/${PHP_VERSION}/mods-available/amqp.ini /etc/php/${PHP_VERSION}/cli/conf.d/30-amqp.ini \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# PHP REDIS EXTENSION\n###########################################################################\n\nARG INSTALL_PHPREDIS=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_PHPREDIS} = true ]; then \\\n    # Install Php Redis extension\n    printf \"\\n\" | pecl -q install -o -f redis && \\\n    echo \"extension=redis.so\" >> /etc/php/${PHP_VERSION}/mods-available/redis.ini && \\\n    phpenmod redis \\\n;fi\n\n###########################################################################\n# Swoole EXTENSION\n###########################################################################\n\nARG INSTALL_SWOOLE=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_SWOOLE} = true ]; then \\\n    # Install Php Swoole Extension\n    pecl -q install swoole && \\\n    echo \"extension=swoole.so\" >> /etc/php/${PHP_VERSION}/mods-available/swoole.ini && \\\n    ln -s /etc/php/${PHP_VERSION}/mods-available/swoole.ini /etc/php/${PHP_VERSION}/cli/conf.d/20-swoole.ini \\\n;fi\n\n###########################################################################\n# Node / NVM:\n###########################################################################\n\n# Check if NVM needs to be installed\nARG NODE_VERSION=stable\nENV NODE_VERSION ${NODE_VERSION}\nARG INSTALL_NODE=false\nARG NPM_REGISTRY\nENV NPM_REGISTRY ${NPM_REGISTRY}\nENV NVM_DIR /home/laradock/.nvm\n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash && \\\n        . $NVM_DIR/nvm.sh && \\\n        nvm install ${NODE_VERSION} && \\\n        nvm use ${NODE_VERSION} && \\\n        nvm alias ${NODE_VERSION} && \\\n        if [ ${NPM_REGISTRY} ]; then \\\n        npm config set registry ${NPM_REGISTRY} \\\n        ;fi && \\\n        npm install -g gulp bower vue-cli && \\\n        ln -s `npm bin --global` /home/laradock/.node-bin \\\n; npm cache clean --force; fi\n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    find $NVM_DIR -type f -name node -exec ln -s {} /usr/local/bin/node \\; && \\\n    NODE_MODS_DIR=\"$NVM_DIR/versions/node/$(node -v)/lib/node_modules\" && \\\n    ln -s $NODE_MODS_DIR/bower/bin/bower /usr/local/bin/bower && \\\n    ln -s $NODE_MODS_DIR/gulp/bin/gulp.js /usr/local/bin/gulp && \\\n    ln -s $NODE_MODS_DIR/npm/bin/npm-cli.js /usr/local/bin/npm && \\\n    ln -s $NODE_MODS_DIR/npm/bin/npx-cli.js /usr/local/bin/npx && \\\n    ln -s $NODE_MODS_DIR/vue-cli/bin/vue /usr/local/bin/vue && \\\n    ln -s $NODE_MODS_DIR/vue-cli/bin/vue-init /usr/local/bin/vue-init && \\\n    ln -s $NODE_MODS_DIR/vue-cli/bin/vue-list /usr/local/bin/vue-list \\\n;fi\n\n# Wouldn't execute when added to the RUN statement in the above block\n# Source NVM when loading bash since ~/.profile isn't loaded on non-login shell\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"$HOME/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc \\\n;fi\n\n# Add NVM binaries to root's .bashrc\nUSER root\n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"/home/laradock/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc \\\n;fi\n\n# Add PATH for node\nENV PATH $PATH:/home/laradock/.node-bin\n\nRUN if [ ${NPM_REGISTRY} ]; then \\\n    . ~/.bashrc && npm config set registry ${NPM_REGISTRY} \\\n;fi\n\n###########################################################################\n# YARN:\n###########################################################################\n\nUSER laradock\n\nARG INSTALL_YARN=false\nARG YARN_VERSION=latest\nENV YARN_VERSION ${YARN_VERSION}\n\nRUN if [ ${INSTALL_YARN} = true ]; then \\\n    [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && \\\n    if [ ${YARN_VERSION} = \"latest\" ]; then \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \\\n    else \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \\\n    fi && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"$HOME/.yarn/bin:$PATH\"' >> ~/.bashrc \\\n; else \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \\\n    fi \\\n\n\nfi\n\n# Add YARN binaries to root's .bashrc\nUSER root\n\nRUN if [ ${INSTALL_YARN} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export YARN_DIR=\"/home/laradock/.yarn\"' >> ~/.bashrc && \\\n    echo 'export PATH=\"$YARN_DIR/bin:$PATH\"' >> ~/.bashrc \\\n;fi\n\n\n###########################################################################\n# PHP V8JS:\n###########################################################################\n\nUSER root\n\nARG INSTALL_V8JS=false\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN if [ ${INSTALL_V8JS} = true ]; then \\\n    add-apt-repository -y ppa:pinepain/libv8-archived \\\n    && apt-get update -yqq \\\n    && apt-get install --no-install-recommends -y php${PHP_VERSION}-xml php${PHP_VERSION}-dev php-pear libv8-5.4 \\\n    && pecl install v8js \\\n    && echo \"extension=v8js.so\" >> /etc/php/${PHP_VERSION}/cli/php.ini \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Laravel Envoy:\n###########################################################################\n\nUSER laradock\n\nARG INSTALL_LARAVEL_ENVOY=false\n\nRUN if [ ${INSTALL_LARAVEL_ENVOY} = true ]; then \\\n    # Install the Laravel Envoy\n    composer global require \"laravel/envoy=~1.0\" \\\n;fi\n\n###########################################################################\n# Laravel Installer:\n###########################################################################\n\nUSER root\n\nARG COMPOSER_REPO_PACKAGIST\nENV COMPOSER_REPO_PACKAGIST ${COMPOSER_REPO_PACKAGIST}\n\nRUN if [ ${COMPOSER_REPO_PACKAGIST} ]; then \\\n    composer config -g repo.packagist composer ${COMPOSER_REPO_PACKAGIST} \\\n;fi\n\nARG INSTALL_LARAVEL_INSTALLER=false\n\nRUN if [ ${INSTALL_LARAVEL_INSTALLER} = true ]; then \\\n    # Install the Laravel Installer\n  composer global require \"laravel/installer\" \\\n;fi\n\n###########################################################################\n# Deployer:\n#######################################X####################################\n\nUSER root\n\nARG INSTALL_DEPLOYER=false\n\nRUN if [ ${INSTALL_DEPLOYER} = true ]; then \\\n    curl -f -LO https://deployer.org/deployer.phar && \\\n    mv deployer.phar /usr/local/bin/dep && \\\n    chmod +x /usr/local/bin/dep \\\n; fi\n\n###########################################################################\n# Prestissimo:\n###########################################################################\nUSER laradock\n\nARG INSTALL_PRESTISSIMO=false\n\nRUN if [ ${INSTALL_PRESTISSIMO} = true ]; then \\\n    # Install Prestissimo\n    composer global require \"hirak/prestissimo\" \\\n;fi\n\n###########################################################################\n# Linuxbrew:\n###########################################################################\n\nUSER root\n\nARG INSTALL_LINUXBREW=false\n\nRUN if [ ${INSTALL_LINUXBREW} = true ]; then \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y build-essential make cmake scons curl git \\\n      ruby autoconf automake autoconf-archive \\\n      gettext libtool flex bison \\\n      libbz2-dev libcurl4-openssl-dev \\\n      libexpat-dev libncurses-dev && \\\n    # Install the Linuxbrew\n    git clone --depth=1 https://github.com/Homebrew/linuxbrew.git ~/.linuxbrew && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export PKG_CONFIG_PATH\"=/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig:/usr/lib64/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.bashrc && \\\n    # Setup linuxbrew\n    echo 'export LINUXBREWHOME=\"$HOME/.linuxbrew\"' >> ~/.bashrc && \\\n    echo 'export PATH=\"$LINUXBREWHOME/bin:$PATH\"' >> ~/.bashrc && \\\n    echo 'export MANPATH=\"$LINUXBREWHOME/man:$MANPATH\"' >> ~/.bashrc && \\\n    echo 'export PKG_CONFIG_PATH=\"$LINUXBREWHOME/lib64/pkgconfig:$LINUXBREWHOME/lib/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=\"$LINUXBREWHOME/lib64:$LINUXBREWHOME/lib:$LD_LIBRARY_PATH\"' >> ~/.bashrc \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n\n###########################################################################\n# Image optimizers:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGE_OPTIMIZERS=false\n\nRUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \\\n    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle && \\\n    if [ ${INSTALL_NODE} = true ]; then \\\n        . ~/.bashrc && npm install -g svgo \\\n    ; npm cache clean --force; fi \\\n; rm -rf /var/lib/apt/lists/*; fi\n\nUSER laradock\n\n###########################################################################\n# Symfony:\n###########################################################################\n\nUSER root\n\nARG INSTALL_SYMFONY=false\n\nRUN if [ ${INSTALL_SYMFONY} = true ]; then \\\n  mkdir -p /usr/local/bin \\\n  && curl -f -LsS https://symfony.com/installer -o /usr/local/bin/symfony \\\n  && chmod a+x /usr/local/bin/symfony \\\n  #  Symfony 3 alias\n  && echo 'alias dev=\"php bin/console -e=dev\"' >> ~/.bashrc \\\n  && echo 'alias prod=\"php bin/console -e=prod\"' >> ~/.bashrc \\\n\n\n\n; fi\n\n###########################################################################\n# PYTHON:\n###########################################################################\n\nARG INSTALL_PYTHON=false\n\nRUN if [ ${INSTALL_PYTHON} = true ]; then \\\n  apt-get -y --no-install-recommends install python python-pip python-dev build-essential \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir --upgrade virtualenv \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ImageMagick:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGEMAGICK=false\n\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get update \\\n    && apt-get install --no-install-recommends -y --force-yes imagemagick php-imagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Terraform:\n###########################################################################\n\nUSER root\n\nARG INSTALL_TERRAFORM=false\n\nRUN if [ ${INSTALL_TERRAFORM} = true ]; then \\\n    apt-get -y --no-install-recommends install sudo wget unzip \\\n    && wget https://releases.hashicorp.com/terraform/0.10.6/terraform_0.10.6_linux_amd64.zip \\\n    && unzip terraform_0.10.6_linux_amd64.zip \\\n    && mv terraform /usr/local/bin \\\n    && rm terraform_0.10.6_linux_amd64.zip \\\n; rm -rf /var/lib/apt/lists/*; fi\n###########################################################################\n# pgsql client\n###########################################################################\n\nUSER root\n\nARG INSTALL_PG_CLIENT=false\n\nRUN if [ ${INSTALL_PG_CLIENT} = true ]; then \\\n    apt-get -y --no-install-recommends install postgresql-client \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Dusk Dependencies:\n###########################################################################\n\nUSER root\n\nARG CHROME_DRIVER_VERSION=stable\nENV CHROME_DRIVER_VERSION ${CHROME_DRIVER_VERSION}\nARG INSTALL_DUSK_DEPS=false\n\nRUN if [ ${INSTALL_DUSK_DEPS} = true ]; then \\\n  apt-get -y --no-install-recommends install zip wget unzip xdg-utils \\\n    libxpm4 libxrender1 libgtk2.0-0 libnss3 libgconf-2-4 xvfb \\\n    gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi \\\n    xfonts-base xfonts-scalable x11-apps \\\n  && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n  && dpkg -i --force-depends google-chrome-stable_current_amd64.deb \\\n  && apt-get -y -f install \\\n  && dpkg -i --force-depends google-chrome-stable_current_amd64.deb \\\n  && rm google-chrome-stable_current_amd64.deb \\\n  && wget https://chromedriver.storage.googleapis.com/${CHROME_DRIVER_VERSION}/chromedriver_linux64.zip \\\n  && unzip chromedriver_linux64.zip \\\n  && mv chromedriver /usr/local/bin/ \\\n  && rm chromedriver_linux64.zip \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Check PHP version:\n###########################################################################\n\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n\n\n###########################################################################\n# Install PHP-CS-Fixer\n##########################################################################\n\nRUN curl -f -L https://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -o php-cs-fixer \\\n && chmod a+x php-cs-fixer \\\n && mv php-cs-fixer /usr/local/bin/php-cs-fixer\n\n\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nUSER root\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\n# Set default work directory\nWORKDIR /var/www\n"
}