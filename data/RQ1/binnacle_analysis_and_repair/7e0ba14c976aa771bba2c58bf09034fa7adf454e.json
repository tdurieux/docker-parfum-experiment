{
  "startTime": 1674238616739,
  "endTime": 1674238616943,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 85
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2018 Google LLC All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM rust:1.25.0 as builder\nRUN useradd -m build\n\n# Rust SDK depends on https://github.com/pingcap/grpc-rs and it requires CMake and Go\n\n## Cmake\nENV CMAKE_MINOR_VERSION=v3.10 \\\n    CMAKE_FULL_VERSION=3.10.3\nRUN mkdir -p /usr/src/cmake \\\n  && curl -fSLO https://cmake.org/files/${CMAKE_MINOR_VERSION}/cmake-${CMAKE_FULL_VERSION}.tar.gz \\\n  && curl -fSLO https://cmake.org/files/${CMAKE_MINOR_VERSION}/cmake-${CMAKE_FULL_VERSION}-SHA-256.txt \\\n  && sha256sum -c cmake-${CMAKE_FULL_VERSION}-SHA-256.txt 2>&1 | grep OK \\\n  && tar xf cmake-${CMAKE_FULL_VERSION}.tar.gz -C /usr/src/cmake --strip-components=1 \\\n  && rm -f cmake-${CMAKE_FULL_VERSION}.* \\\n  && cd /usr/src/cmake \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j$(nproc) && make install && rm -rf /usr/src/cmake\n\n## Go\nENV GO_VERSION=1.10.2 \\\n    GO_CHECKSUM=4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff\nRUN mkdir -p /usr/local/go \\\n  && curl -fSO https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz \\\n  && shasum -a 256 go${GO_VERSION}.linux-amd64.tar.gz | grep ${GO_CHECKSUM} \\\n  && tar xf go${GO_VERSION}.linux-amd64.tar.gz -C /usr/local/go --strip-components=1 \\\n  && rm -f go${GO_VERSION}.linux-amd64.tar.gz\nENV PATH $PATH:/usr/local/go/bin\n\n# SDK\nCOPY sdk/src /home/builder/agones/sdks/rust/src\nCOPY sdk/Cargo.toml /home/builder/agones/sdks/rust/\nCOPY sdk/Cargo.lock /home/builder/agones/sdks/rust/\n\n# Example\nCOPY src /home/builder/agones/examples/rust-simple/src\nCOPY Cargo.toml /home/builder/agones/examples/rust-simple/\nCOPY Cargo.lock /home/builder/agones/examples/rust-simple/\nCOPY Makefile /home/builder/agones/examples/rust-simple/\n\nWORKDIR /home/builder/agones/examples/rust-simple\nRUN make build\n\nFROM debian:stretch\nRUN useradd -m server\n\nCOPY --from=builder /home/builder/agones/examples/rust-simple/target/release/rust-simple /home/server/rust-simple\nRUN chown -R server /home/server && \\\n    chmod o+x /home/server/rust-simple\n\nUSER server\nENTRYPOINT /home/server/rust-simple\n"
}