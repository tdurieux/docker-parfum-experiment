{
  "startTime": 1674241639611,
  "endTime": 1674241639823,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockfile that adds openrave to the ROS Kinetic with build tools image\n#\n# https://github.com/shadow-robot/sr-build-tools/\n#\n\nFROM shadowrobot/build-tools:xenial-kinetic-mongodb-fix\n\nLABEL Description=\"This image contains ROS kinetic, Shadow Robot's build tools, Mongo, and Openrave.\" \\\n      Author=\"Ethan Fowler <ethan@shadowrobot.com>\" \\\n      Maintainer=\"The Shadow Robot Company Software Team <software@shadowrobot.com>\"\n\nRUN echo \"Updating package list...\" && \\\n    apt-get update && \\\n    \n    echo \"Installing OpenRAVE dependencies\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y ipython minizip python-h5py python-scipy python-sympy qt4-dev-tools \\\n    libassimp-dev libavcodec-dev libavformat-dev libavformat-dev libboost-all-dev \\\n    libboost-date-time-dev libbullet-dev libgsm1-dev liblapack-dev liblog4cxx-dev \\\n    libmpfr-dev libode-dev libogg-dev libpcrecpp0v5 libpcre3-dev libqhull-dev libqt4-dev \\\n    libsoqt-dev-common libsoqt4-dev libswscale-dev libswscale-dev libvorbis-dev libx264-dev \\\n    libxml2-dev libxvidcore-dev libtinyxml2-dev && \\\n\n    echo \"Creating openRAVE workspace\" && \\\n    cd /home/user && \\\n    openrave_ws='/home/user/openrave_ws' && \\\n    mkdir ${openrave_ws} && \\\n\n    echo \"Installing collada-dom\" && \\\n    cd ${openrave_ws} && \\\n    git clone https://github.com/rdiankov/collada-dom.git && \\\n    mkdir collada-dom/build && cd collada-dom/build && \\\n    cmake .. && make -j8 && make install && \\\n\n    echo \"Installing openrave\" && \\\n    cd ${openrave_ws} && \\\n    git clone --branch production https://github.com/rdiankov/openrave.git && \\\n    mkdir openrave/build && cd openrave/build && \\\n    cmake .. -DOPENRAVE_PLUGIN_BULLETRAVE=OFF -DOPENRAVE_PLUGIN_FCLRAVE=OFF \\\n    -DOPT_FCL_COLLISION=OFF && \\\n    make -j8 && make install && \\\n\n    echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(openrave-config' \\\n    '--python-dir)/openravepy/_openravepy_'  >> /home/user/.bashrc && \\\n    echo 'export PYTHONPATH=$PYTHONPATH:$(openrave-config --python-dir)' >> /home/user/.bashrc && \\\n\n    echo \"Fixing ownership of openrave directories...\" && \\\n    chown -R user:user ${openrave_ws} && \\\n    echo \"Removing caches\" && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}