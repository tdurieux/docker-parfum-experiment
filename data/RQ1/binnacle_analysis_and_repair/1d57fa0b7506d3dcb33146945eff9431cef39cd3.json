{
  "startTime": 1674246111524,
  "endTime": 1674246111943,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 24,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 28,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 28,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 138
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER WangYan <i@wangyan.org>\n\n# Build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make gcc curl xz-utils net-tools supervisor iptables gnutls-bin libgnutls28-dev libev-dev \\\n    libwrap0-dev libpam0g-dev liblz4-dev libseccomp-dev libreadline-dev libnl-route-3-dev libkrb5-dev liboath-dev \\\n    libprotobuf-c0-dev libtalloc-dev libhttp-parser-dev libpcl1-dev libopts25-dev autogen protobuf-c-compiler gperf liblockfile-bin nuttcp && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN export LZ4_VERSION=$( curl -f https://github.com/Cyan4973/lz4/releases/latest | sed -n 's/^.*tag\\/\\(.*\\)\".*/\\1/p') && \\\n    curl -f -SL \"https://github.com/Cyan4973/lz4/archive/$LZ4_VERSION.tar.gz\" -o lz4.tar.gz && \\\n    tar -xf lz4.tar.gz && cd ./lz4-* && \\\n    make -j$(nproc) && make install && \\\n    cd ../ && rm -rf ./lz4* && rm lz4.tar.gz\n\nRUN export ocserv_version=$( curl -f -s https://www.infradead.org/ocserv/download.html | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*') && \\\n    curl -f -O ftp://ftp.infradead.org/pub/ocserv/ocserv-$ocserv_version.tar.xz && \\\n    tar xvf ocserv-$ocserv_version.tar.xz && \\\n    cd ocserv-$ocserv_version && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j$(nproc) && make install && \\\n    mkdir -p /etc/ocserv/certs && \\\n    cp doc/sample.config /etc/ocserv/ocserv.conf && \\\n    cd ../ && rm -rf ocserv* && rm ocserv-$ocserv_version.tar.xz\n\n# Ocserv config\nRUN set -x \\\n    && sed -i 's/\\.\\/sample\\.passwd/\\/etc\\/ocserv\\/ocpasswd/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/\\.\\.\\/tests/\\/etc\\/ocserv\\/certs/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/max-clients = 16/max-clients = 32/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/ca\\.pem/ca-cert\\.pem/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/max-same-clients = 2/max-same-clients = 4/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/#enable-auth = \\\"certificate\\\"/enable-auth = \\\"certificate\\\"/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/#compression/compression/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/#no-compress-limit/no-compress-limit/' /etc/ocserv/ocserv.conf \\\n    && sed -i '/^ipv4-network = /{s/192.168.1.0/192.168.99.0/}' /etc/ocserv/ocserv.conf \\\n    && sed -i '/cert-user-oid = /{s/0.9.2342.19200300.100.1.1/2.5.4.3/}' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/192.168.1.2/8.8.8.8/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/^route/#route/' /etc/ocserv/ocserv.conf \\\n    && sed -i 's/^no-route/#no-route/' /etc/ocserv/ocserv.conf\n\nEXPOSE 443\nVOLUME /etc/ocserv/\n\nCOPY cert.sh /cert.sh\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /cert.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n"
}