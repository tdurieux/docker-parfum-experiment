{
  "startTime": 1674250406266,
  "endTime": 1674250407154,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 30,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 6,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:9\n\nMAINTAINER bbernhard version: 0.3\n\nRUN apt-get update && apt-get install --no-install-recommends -y postgresql-9.6 nginx nginx-extras redis-server git supervisor wget build-essential postgresql-server-dev-9.6 postgresql-contrib-9.6 dos2unix neovim postgresql-9.6-postgis-2.3 postgresql-9.6-postgis-2.3-scripts curl autoconf ca-certificates gcc make automake pkg-config uuid-dev zlib1g-dev lsb-release sudo gir1.2-glib-2.0 python3 python3-pip && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update \\\n\t&& wget https://my-netdata.io/kickstart.sh --directory-prefix=/tmp/ \\\n    && chmod u+rx /tmp/kickstart.sh \\\n    && /tmp/kickstart.sh --non-interactive \\\n    && rm /tmp/kickstart.sh \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /root/imagemonkey-core\nRUN git clone https://github.com/bbernhard/imagemonkey-core.git /root/imagemonkey-core \\\n\t&& cd /root/imagemonkey-core \\\n\t&& git checkout develop\n\nRUN chmod +x /root/imagemonkey-core/env/docker/start_postgres.sh \\\n\t&& chmod +x /root/imagemonkey-core/env/docker/startup.sh\n\nRUN cd /tmp && wget https://github.com/arkhipov/temporal_tables/archive/v1.2.0.tar.gz \\\n && mkdir -p /tmp/temporal_table \\\n && cd /tmp/temporal_table && tar xvf /tmp/v1.2.0.tar.gz \\\n && cd /tmp/temporal_table/temporal_tables-1.2.0/ && make && make install && cd /root/ \\\n && cp /root/imagemonkey-core/env/postgres/schema.sql /tmp/schema.sql \\\n && chown postgres:postgres /tmp/schema.sql \\\n && chmod u+rx /tmp/schema.sql \\\n && echo CREATE EXTENSION uuid-ossp; rm /tmp/v1.2.0.tar.gz >> /tmp/create_extension \\\n && chown -R postgres:postgres /tmp/create_extension \\\n && chmod -R u+rx /tmp/create_extension \\\n && cp /root/imagemonkey-core/env/postgres/defaults.sql /tmp/defaults.sql \\\n && chown postgres:postgres /tmp/defaults.sql \\\n && chmod u+rx /tmp/defaults.sql \\\n && cp /root/imagemonkey-core/env/postgres/indexes.sql /tmp/indexes.sql \\\n && chown postgres:postgres /tmp/indexes.sql \\\n && chmod u+rx /tmp/indexes.sql \\\n && cp -r /root/imagemonkey-core/env/postgres/functions /tmp/postgres_functions \\\n && chown -R postgres:postgres /tmp/postgres_functions \\\n && chmod -R u+rx /tmp/postgres_functions \\\n && cp -r /root/imagemonkey-core/env/postgres/stored_procs /tmp/postgres_stored_procs \\\n && chown -R postgres:postgres /tmp/postgres_stored_procs \\\n && chmod -R u+rx /tmp/postgres_stored_procs\n\nRUN /root/imagemonkey-core/env/docker/start_postgres.sh && /bin/su - postgres -c \"psql -c \\\"CREATE database imagemonkey;\\\"\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -c \\\"CREATE USER monkey WITH PASSWORD 'dbRuwMUo4Nfhs5hmMxhk';\\\"\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -c \\\"CREATE EXTENSION \\\"temporal_tables\\\";\\\"\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -c \\\"CREATE EXTENSION \\\"postgis\\\";\\\"\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/schema.sql\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/create_extension\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/defaults.sql\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/indexes.sql\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/postgres_functions/fn_ellipse.sql\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/postgres_functions/third_party/postgis_addons/postgis_addons.sql\" \\\n\t&& /bin/su - postgres -c \"psql -d imagemonkey -f /tmp/postgres_stored_procs/sp_get_image_annotation_coverage.sql\"\n\nRUN rm -rf /tmp/create_extension \\\n && rm -rf /tmp/schema.sql \\\n && rm -rf /tmp/temporal_table \\\n && rm -rf /tmp/defaults.sql \\\n && rm -rf /tmp/indexes.sql \\\n && rm -rf /tmp/postgres_functions \\\n && rm -rf /tmp/postgres_stored_procs\n\nRUN adduser imagemonkey --disabled-password --gecos \"First Last,RoomNumber,WorkPhone,HomePhone\" --home /home/imagemonkey\n\nRUN /bin/su - imagemonkey -c \"mkdir -p /home/imagemonkey/go\"\nENV GOPATH=\"/home/imagemonkey/go\"\nRUN /bin/su - imagemonkey -c \"mkdir -p /home/imagemonkey/bin\"\nENV GOBIN=\"/home/imagemonkey/bin\"\n\n\nRUN cd /tmp/ \\\n   && wget https://dl.google.com/go/go1.12.1.linux-amd64.tar.gz \\\n   && tar -C /usr/local -xzf go1.12.1.linux-amd64.tar.gz \\\n   && cd /root/ && rm go1.12.1.linux-amd64.tar.gz\n\nRUN cp /root/imagemonkey-core/env/docker/conf/supervisor/* /etc/supervisor/conf.d/ \\\n && cp /root/imagemonkey-core/env/docker/src/* /root/imagemonkey-core/src/\n\nRUN cp -r /root/imagemonkey-core/src /tmp/imagemonkey-core-src \\\n && cp /tmp/imagemonkey-core-src/api_secrets.template /tmp/imagemonkey-core-src/api_secrets.go \\\n && cp /tmp/imagemonkey-core-src/web_secrets.template /tmp/imagemonkey-core-src/web_secrets.go \\\n && cp /tmp/imagemonkey-core-src/api_secrets.template /root/imagemonkey-core/src/api_secrets.go \\\n && cp /tmp/imagemonkey-core-src/web_secrets.template /root/imagemonkey-core/src/web_secrets.go \\\n && chown -R imagemonkey:imagemonkey /tmp/imagemonkey-core-src \\\n && chmod -R u+rwx /tmp/imagemonkey-core-src \\\n && cp /root/imagemonkey-core/tests/secrets.go.template /root/imagemonkey-core/tests/secrets.go \\\n && cp /tmp/imagemonkey-core-src/shared_secrets.go.template /root/imagemonkey-core/src/shared_secrets.go \\\n && cp /tmp/imagemonkey-core-src/api_secrets.template /root/imagemonkey-core/src/api_secrets.go\n\n#add sudo (we need that that to install opencv via the gocv script)\nRUN useradd -m docker && echo \"docker:docker\" | chpasswd && adduser docker sudo\n\nENV PATH $PATH:/usr/local/go/bin/\n\n#install gocv\nRUN /usr/local/go/bin/go get -u -d gocv.io/x/gocv \\\n\t&& cd /home/imagemonkey/go/src/gocv.io/x/gocv \\\n\t&& make install\n\n# until this pull request (https://github.com/h2non/bimg/pull/266) is merged and https://github.com/h2non/bimg/issues/269 is resolved, use the fork\nRUN curl -f -s https://raw.githubusercontent.com/bbernhard/bimg/master/preinstall.sh | bash -\n\n# that is a requirement for go-jsonnet\nRUN go get github.com/fatih/color\n\nRUN chown -R imagemonkey:imagemonkey /home/imagemonkey/go && chmod -R u+rwx /home/imagemonkey/go \\\n && /bin/su - imagemonkey -c \"cd /tmp/imagemonkey-core-src/ && export GOPATH=/home/imagemonkey/go && export GOBIN=/home/imagemonkey/bin && /usr/local/go/bin/go get -d && /usr/local/go/bin/go install api.go api_secrets.go auth.go label_graph.go && /usr/local/go/bin/go install web.go web_secrets.go auth.go && /usr/local/go/bin/go install statworker.go web_secrets.go && /usr/local/go/bin/go install populate_labels.go web_secrets.go && /usr/local/go/bin/go install auto_unlocker.go api_secrets.go && /usr/local/go/bin/go install data_processor.go api_secrets.go\" \\\n && rm -rf /tmp/imagemonkey-core/src\n\n#create directories + set permissions\nRUN mkdir -p /home/imagemonkey/public_backups \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/public_backups \\\n && chmod -R u+rwx /home/imagemonkey/public_backups \\\n && touch /home/imagemonkey/public_backups/public_backups.json \\\n && mkdir -p /home/imagemonkey/donations \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/donations \\\n && chmod -R u+rwx /home/imagemonkey/donations \\\n && mkdir -p /home/imagemonkey/unverified_donations \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/unverified_donations \\\n && chmod -R u+rwx /home/imagemonkey/unverified_donations \\\n && mkdir -p /home/imagemonkey/quarantine \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/quarantine \\\n && chmod -R u+rwx /home/imagemonkey/quarantine \\\n && mkdir -p /var/log/imagemonkey-api \\\n && mkdir -p /var/log/imagemonkey-web \\\n && mkdir -p /var/log/imagemonkey-statworker \\\n && mkdir -p /var/log/imagemonkey-auto-unlocker \\\n && mkdir -p /var/log/imagemonkey-data-processor \\\n && cp -r /root/imagemonkey-core/wordlists /home/imagemonkey/ \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/wordlists/ \\\n && chmod -R u+rx /home/imagemonkey/wordlists/\n\n\n# copy to final destination\nRUN cp -r /root/imagemonkey-core/html /home/imagemonkey \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/html \\\n && chmod -R u+rx /home/imagemonkey/html \\\n && cp -r /root/imagemonkey-core/js /home/imagemonkey \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/js \\\n && chmod -R u+rx /home/imagemonkey/js \\\n && cp -r /root/imagemonkey-core/css /home/imagemonkey \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/css \\\n && chmod -R u+rx /home/imagemonkey/css \\\n && cp -r /root/imagemonkey-core/img /home/imagemonkey \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/img \\\n && chmod -R u+rx /home/imagemonkey/img \\\n && mkdir -p /home/imagemonkey/geoip_database/ \\\n && cp -r /root/imagemonkey-core/geoip_database/GeoLite2-Country.mmdb /home/imagemonkey/geoip_database/ \\\n && chown -R imagemonkey:imagemonkey /home/imagemonkey/geoip_database \\\n && chmod -R u+rx /home/imagemonkey/geoip_database\n\nRUN echo \"[]\" > /home/imagemonkey/public_backups/public_backups.json\n\n# change listen address in postgres config file to localhost\nRUN echo listen_addresses='localhost' >> /etc/postgresql/9.6/main/postgresql.conf\n\n#populate labels in database\nRUN /root/imagemonkey-core/env/docker/start_postgres.sh \\\n\t&& cd /home/imagemonkey/bin/ \\\n\t&& ./populate_labels --dryrun=false \\\n\t&& cd /root/\n\n\n\nENV API_BASE_URL http://127.0.0.1:8081\n\nEXPOSE 8080\nEXPOSE 8081\n\n\nENTRYPOINT [\"/root/imagemonkey-core/env/docker/startup.sh\"]\n"
}