{
  "startTime": 1674249559453,
  "endTime": 1674249559768,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 62,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 54,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libcgal-dev \\\n        libeigen3-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-setuptools \\\n        python-scipy \\\n        rsync \\\n        software-properties-common \\\n        vim \\\n        zip && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n        rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        scikit-build \\\n        Cython\n\nENV WORKSPACE=/workspace\nENV PATH=\"${WORKSPACE}/bin:${PATH}\"\nARG WORKSPACE_BIN=$WORKSPACE/bin\nWORKDIR $WORKSPACE_BIN\n\nARG OCNN_ROOT=$WORKSPACE/ocnn\nWORKDIR $OCNN_ROOT\n\nARG OCNN_COMMIT=origin/master\nRUN git clone https://github.com/Microsoft/O-CNN.git . && git reset --hard $OCNN_COMMIT\nRUN cd ocnn/octree && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DOUTPUT_DIRECTORY=$WORKSPACE_BIN .. && \\\n    make && cd ../ && rm -rf build\n\nARG NCCL_COMMIT=286916a1a37ca1fe8cd43e280f5c42ec29569fc5\nWORKDIR $WORKSPACE\nRUN git clone https://github.com/NVIDIA/nccl.git && cd nccl && git reset --hard $NCCL_COMMIT && \\\n    make -j install && cd .. && rm -rf nccl\n\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\nARG CAFFE_COMMIT=6bfc5ca8f7c2a4b7de09dfe7a01cf9d3470d22b3\nRUN git clone https://github.com/BVLC/caffe.git . && git reset --hard $CAFFE_COMMIT && \\\n    rsync -a $OCNN_ROOT/caffe/ ./ && ex -sc '83i|set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} --std=c++11\")' -cx CMakeLists.txt && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && cd .. && \\\n    mkdir build && cd build && \\\n    cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 .. && \\\n    make -j\"$(nproc)\" && \\\n    mkdir $CAFFE_ROOT/include/caffe/proto && \\\n    cp $CAFFE_ROOT/build/include/caffe/proto/caffe.pb.h $CAFFE_ROOT/include/caffe/proto/caffe.pb.h\n\nWORKDIR $OCNN_ROOT\nRUN cd ocnn/octree && pip install --no-cache-dir . && cd ../caffe && pip install --no-cache-dir .\n\nARG OCNN_TOOLS_ROOT=$WORKSPACE/ocnn_tools\nWORKDIR $OCNN_TOOLS_ROOT\n\nARG OCNN_TOOLS_COMMIT=origin/master\nRUN git clone https://github.com/wang-ps/O-CNN.git . && git reset --hard $OCNN_TOOLS_COMMIT\nRUN cd virtual_scanner && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    cp virtualscanner $WORKSPACE_BIN && cd ../ && rm -rf build && \\\n    pip install --no-cache-dir .\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\nWORKDIR /workspace\n"
}