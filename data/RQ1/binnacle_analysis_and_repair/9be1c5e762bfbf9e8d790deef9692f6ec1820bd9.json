{
  "startTime": 1674247937541,
  "endTime": 1674247937845,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########\n# Stage 1:\n# - Install Mono\n# - Build Project\n# - Make Bundle\n########\nFROM debian:stretch-slim AS mkbundle\n\nRUN set -ex \\\n    && apt update \\\n    && apt install --no-install-recommends -y gpg \\\n    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n    && echo \"deb http://download.mono-project.com/repo/debian stretch main\" > /etc/apt/sources.list.d/mono-official.list \\\n    && apt-get update \\\n    && apt install -y --no-install-recommends mono-devel nuget msbuild fsharp && rm -rf /var/lib/apt/lists/*;\n\n# Remember to configurare these ARGS also on Stage 2\nARG PROJECT=SigFoxReceiver\nARG CONFIGURATION=Release\n\nCOPY . /Build/${PROJECT}/\n\nWORKDIR /Build/${PROJECT}\nRUN set -ex \\\n    && nuget restore -PackagesDirectory ../packages -NonInteractive\n\nRUN set -ex \\\n    && msbuild /p:Configuration=${CONFIGURATION}\n\nWORKDIR /Build/${PROJECT}/bin/${CONFIGURATION}\nRUN set -ex \\\n    && mkbundle -o ${PROJECT} --simple ${PROJECT}.exe\n\n########\n# Stage 2: Build Image\n########\nFROM busybox:glibc\nRUN set -ex; ln -s /lib/libc.so.6 /lib/libc.so\nCOPY --from=mkbundle /usr/lib/x86_64-linux-gnu/librt* /lib/\nCOPY --from=mkbundle /usr/lib/x86_64-linux-gnu/libdl* /lib/\nCOPY --from=mkbundle /usr/lib/x86_64-linux-gnu/libgcc* /lib/\n\nARG PROJECT=SigFoxReceiver\nARG CONFIGURATION=Release\n\nCOPY --from=mkbundle /Build/${PROJECT}/bin/${CONFIGURATION}/${PROJECT} /opt/${PROJECT}/bin/\nENV PATH /opt/${PROJECT}/bin:$PATH\nENV COMMAND ${PROJECT}\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"--host\", \"0.0.0.0\", \"--mqttbroker\", \"mqtt\", \"1883\"]\n"
}