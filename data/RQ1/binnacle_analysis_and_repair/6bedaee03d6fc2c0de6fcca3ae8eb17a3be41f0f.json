{
  "startTime": 1674239861775,
  "endTime": 1674239861878,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 33,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VERSION=9\nARG CUDNN_VERSION=7\n\nFROM nvidia/cuda:${CUDA_VERSION}.0-cudnn${CUDNN_VERSION}-devel\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils g++ make git vim cython cmake mercurial python3-setuptools python3-dev && rm -rf /var/lib/apt/lists/*;\nRUN easy_install3 pip\nRUN alias python=python3\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir cython\nRUN BACKEND=cuda pip --no-cache-dir install git+https://github.com/clab/dynet#egg=dynet\nRUN pip install --no-cache-dir visdom pymongo pyyaml jupyter\nRUN jupyter nbextension enable --py widgetsnbextension\n\nCOPY python /baseline/python\nCOPY docs /baseline/docs\n\nRUN echo \"alias python=python3\" >> ~/.bashrc\n\nRUN  cd /baseline/python/ && bash ./install_dev.sh baseline no_test && bash ./install_dev.sh xpctl no_test\n\nRUN cd /baseline/python/hpctl && pip install --no-cache-dir -e .[docker]\n\nVOLUME [\"/data/embeddings\", \"/data/model-store\", \"/data/datasets\", \"/data/model-checkpoints\"]\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nWORKDIR /baseline/python\nCMD [\"bash\"]\n"
}