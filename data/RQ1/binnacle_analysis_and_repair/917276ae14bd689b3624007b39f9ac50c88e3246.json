{
  "startTime": 1674244183030,
  "endTime": 1674244183300,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 9,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER David Manthey <david.manthey@kitware.com>\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --yes --no-install-recommends -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" dist-upgrade && \\\n    apt-get install -y --no-install-recommends git python2.7-dev python-pip libssl-dev sudo net-tools vim locales apt-utils python-setuptools \\\n    # Install packages for routing to mongodb\n    iptables dnsutils \\\n    # Install some additional packages for convenience when testing with bash\n    iputils-ping telnet-ssl tmux less \\\n    && \\\n    sudo rm -rf /var/lib/apt/lists/* /tmp/*\nRUN pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir -U --upgrade-strategy eager 'ansible<2.5'\nRUN locale-gen en_US.UTF-8\nRUN adduser --disabled-password --gecos '' ubuntu && \\\n    adduser ubuntu sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER ubuntu\nENV LANG en_US.UTF-8\nWORKDIR /home/ubuntu\nRUN git clone --depth=1 --no-checkout https://github.com/DigitalSlideArchive/HistomicsTK && \\\n    cd HistomicsTK && \\\n    git checkout master -- ansible/ && \\\n    rm -rf .git\nWORKDIR /home/ubuntu/HistomicsTK\nENV GIRDER_EXEC_USER ubuntu\nCOPY . /home/ubuntu/HistomicsTK/ansible/.\nRUN sudo chown -R ubuntu:ubuntu /home/ubuntu/HistomicsTK/ansible\nWORKDIR /home/ubuntu/HistomicsTK/ansible\n\n# RUN ansible-playbook -i inventory/local docker_ansible.yml --tags common\n\n# RUN ansible-playbook -i inventory/local docker_ansible.yml --tags openslide\n# RUN ansible-playbook -i inventory/local docker_ansible.yml --tags girder --extra-vars=docker=true\nRUN ansible-galaxy install -r requirements.yml -p /home/ubuntu/HistomicsTK/ansible/roles/\nRUN ansible-playbook -i inventory/local docker_ansible.yml --extra-vars=docker=histomicstk && \\\n    git -C /opt/histomicstk/girder/plugins/xtk_demo gc && \\\n    sudo pyclean /opt/histomicstk/girder && \\\n    sudo pyclean /usr/local/lib/python2.7/dist-packages && \\\n    sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /home/ubuntu/.npm \\\n                /home/ubuntu/.cache \\\n                /home/ubuntu/.ansible* \\\n                /home/ubuntu/.wget-hsts \\\n                /root/.npm \\\n                /opt/histomicstk/logs/*.log \\\n                /opt/histomicstk/girder/node_modules \\\n                /opt/histomicstk/openjpeg-* \\\n                /opt/histomicstk/openslide-* \\\n                /opt/histomicstk/tiff-* \\\n                /opt/histomicstk/vips-* \\\n                /opt/histomicstk/ImageMagick* \\\n                /opt/histomicstk/HistomicsTK/_skbuild \\\n                /opt/histomicstk/large_image/build \\\n                /opt/histomicstk/HistomicsTK/.eggs \\\n                /root/.cache/pip\n\nWORKDIR /opt/histomicstk/girder\nEXPOSE 8080\n\n# Install npx and girder node_modules to aid testing\nRUN sudo npm install -g npx && \\\n    sudo rm -rf /home/ubuntu/.npm && \\\n    sudo chown -R root:root /usr/lib/node_modules && npm cache clean --force;\n\nRUN npm install && \\\n    sudo rm -rf /home/ubuntu/.npm \\\n                /root/.npm \\\n                /opt/histomicstk/girder/node_modules \\\n                /tmp/* && npm cache clean --force;\n\n# If the environment variable\n#   HOST_MONGO=true\n# is set, mongodb is added to the /etc/hosts as mapping to the docker host ip\n# address\nCMD sudo -E python /opt/histomicstk/set_environment.py ubuntu && \\\n    sudo -E sysctl -w net.ipv4.conf.eth0.route_localnet=1 && \\\n    sudo -E iptables -t nat -A OUTPUT -o lo -p tcp -m tcp --dport 27017 -j DNAT --to-destination `dig +short mongodb`:27017 && \\\n    sudo -E iptables -t nat -A POSTROUTING -o eth0 -m addrtype --src-type LOCAL --dst-type UNICAST -j MASQUERADE && \\\n    sudo -E su ubuntu -c \\\n    'girder mount /opt/histomicstk/mount >/opt/logs/mount.log 2>&1' ; \\\n    sudo -E su ubuntu -c \\\n    'girder serve >/opt/logs/girder.log 2>&1'\n"
}