{
  "startTime": 1674242195311,
  "endTime": 1674242195549,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nWORKDIR /tmp\nENV LIBVIPS_VERSION_MAJOR 8\nENV LIBVIPS_VERSION_MINOR 2\nENV LIBVIPS_VERSION_PATCH 3\nENV LIBVIPS_VERSION $LIBVIPS_VERSION_MAJOR.$LIBVIPS_VERSION_MINOR.$LIBVIPS_VERSION_PATCH\n\nRUN \\\n\n  apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  automake build-essential curl \\\n  gobject-introspection gtk-doc-tools libglib2.0-dev libjpeg-turbo8-dev \\\n  libpng12-dev libwebp-dev libtiff5-dev libexif-dev libxml2-dev swig libmagickwand-dev libpango1.0-dev \\\n  libmatio-dev libopenslide-dev libcfitsio3-dev && \\\n\n  # Build libvips\n  curl -f -O http://www.vips.ecs.soton.ac.uk/supported/$LIBVIPS_VERSION_MAJOR.$LIBVIPS_VERSION_MINOR/vips-$LIBVIPS_VERSION.tar.gz && \\\n  tar zvxf vips-$LIBVIPS_VERSION.tar.gz && \\\n  cd vips-$LIBVIPS_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-debug=no --without-python --without-orc --without-fftw --without-gsf $1 && \\\n  make && \\\n  make install && \\\n  ldconfig && \\\n\n  # Clean up\n  apt-get remove -y curl automake build-essential && \\\n  apt-get autoremove -y && \\\n  apt-get autoclean && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm vips-$LIBVIPS_VERSION.tar.gz\n\n# gcc for cgo\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tcurl \\\n\t\tgit \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GOLANG_VERSION 1.7.1\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 43ad621c9b014cde8db17393dc108378d37bc853aa351a6c74bf6432c1bbd182\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n\t&& echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C /usr/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nRUN curl -f https://glide.sh/get | sh\n\nCOPY . $GOPATH/src/github.com/plimble/ivy\nWORKDIR $GOPATH/src/github.com/plimble/ivy\n\nRUN glide install && \\\n    ./run.sh -b\n\nCMD [\"./app\"]\n"
}