{
  "startTime": 1674246115386,
  "endTime": 1674246115714,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 192
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------------------------------------------------------------------------\n# First stage: compiling Exekube CLI\n# ------------------------------------------------------------------------------\nFROM golang:1.12-alpine AS builder\n\nRUN apk add --no-cache \\\n        git\n\nENV GOPATH /build\nWORKDIR /build\n\nRUN go get \\\n        github.com/urfave/cli \\\n        github.com/sirupsen/logrus\n\nADD ./cli ./src/github.com/exekube/exekube/cli\n\nRUN go build -o ./bin/xk github.com/exekube/exekube/cli\n\n# ------------------------------------------------------------------------------\n# Second stage: getting all runtime deps\n# ------------------------------------------------------------------------------\nFROM alpine:3.7\n\nRUN apk --no-cache add \\\n        curl \\\n        python \\\n        py-crcmod \\\n        bash \\\n        libc6-compat \\\n        openssh-client \\\n        git \\\n        openssl \\\n        tar \\\n        ca-certificates \\\n        apache2-utils \\\n        tzdata \\\n        jq \\\n        gnupg\n\nENV CLOUD_SDK_VERSION 242.0.0\nENV PATH /google-cloud-sdk/bin:$PATH\nRUN curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n        && tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n        && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \\\n        && ln -s /lib /lib64 \\\n        && gcloud config set core/disable_usage_reporting true \\\n        && gcloud config set component_manager/disable_update_check true \\\n        && gcloud config set metrics/environment github_docker_image \\\n        && gcloud --version \\\n        && gcloud components install alpha beta \\\n        && gcloud components update \\\n        && gcloud config set component_manager/disable_update_check true \\\n        && rm -rf /google-cloud-sdk/.install/.backup\n\nENV KUBECTL_VERSION 1.12.7\nRUN curl -f -L -o kubectl \\\n        https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n        && chmod 0700 kubectl \\\n        && mv kubectl /usr/bin\n\nENV HELM_VERSION 2.13.1\nRUN curl -f -L -o helm.tar.gz \\\n        https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n        && tar -xvzf helm.tar.gz \\\n        && rm -rf helm.tar.gz \\\n        && chmod 0700 linux-amd64/helm \\\n        && mv linux-amd64/helm /usr/bin\n\nENV TERRAFORM_VERSION 0.11.12\nRUN curl -f -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n        && unzip terraform.zip \\\n        && mv terraform /usr/bin \\\n        && rm -rf terraform.zip\n\nENV TERRAGRUNT_VERSION 0.18.3\nRUN curl -f -L -o ./terragrunt \\\n        https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 \\\n        && chmod 0700 terragrunt \\\n        && mv terragrunt /usr/bin\n\nENV TERRAFORM_PROVIDER_HELM_VERSION 0.7.0\nRUN curl -f -L -o ./tph.tar.gz \\\n        https://github.com/gpii-ops/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n        && tar -xvzf tph.tar.gz \\\n        && rm -rf tph.tar.gz \\\n        && cd terraform-provider-helm_linux_amd64 \\\n        && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && mkdir -p /root/.terraform.d/plugins/ \\\n        && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/\n\nENV HELMFILE_VERSION 0.54.2\nRUN curl -f -L -o helmfile \\\n        https://github.com/roboll/helmfile/releases/download/v${HELMFILE_VERSION}/helmfile_linux_amd64 \\\n        && chmod 0700 helmfile \\\n        && mv helmfile /usr/bin\n\nCOPY terraform-plugins /terraform-plugins/\n\nRUN cd /terraform-plugins \\\n    && terraform init \\\n    && find /terraform-plugins \\\n    && cp /terraform-plugins/.terraform/plugins/linux_amd64/terraform-provider* /root/.terraform.d/plugins/ \\\n    && cd \\\n    && rm -fr /terraform-plugins\n\nCOPY modules /exekube-modules/\nCOPY --from=builder /build/bin/xk /usr/local/bin/\nENV PATH /exekube-modules/gcp-project-init:/exekube-modules/gcp-secret-mgmt/scripts:$PATH\n\nENTRYPOINT [\"/usr/local/bin/xk\"]\n"
}