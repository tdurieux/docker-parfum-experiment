{
  "startTime": 1674234537630,
  "endTime": 1674234537907,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk-slim\n\nARG MTA_USER_HOME=/home/mta\nARG MTA_HOME='/opt/sap/mta'\nARG MTA_VERSION=1.1.19\n\nARG NODE_VERSION=v10.13.0\n\nARG MAVEN_VERSION=3.6.0\n\nENV MTA_JAR_LOCATION=\"${MTA_HOME}/lib/mta.jar\"\n\nENV M2_HOME=/opt/maven/apache-maven-${MAVEN_VERSION}\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nCOPY scripts/mtaBuild.sh ${MTA_HOME}/bin/mtaBuild.sh\n\nRUN apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n      curl && \\\n    #\n    # Install mta\n    #\n    mkdir -p $(dirname \"${MTA_JAR_LOCATION}\") && \\\n    curl --fail \\\n         --silent \\\n         --cookie \"eula_3_1_agreed=tools.hana.ondemand.com/developer-license-3_1.txt;\" \\\n         --output \"${MTA_JAR_LOCATION}\" \\\n      \"https://tools.hana.ondemand.com/additional/mta_archive_builder-${MTA_VERSION}.jar\" && \\\n    curl --fail \\\n         --silent \\\n         --output \"${MTA_HOME}/LICENSE.txt\" \\\n       https://tools.hana.ondemand.com/developer-license-3_1.txt && \\\n    ln -s \"${MTA_HOME}/bin/mtaBuild.sh\" /usr/local/bin/mtaBuild && \\\n    INSTALLED_MTA_VERSION=\"$(mtaBuild --version)\" && \\\n    echo \"[INFO] mta version: \\\"${INSTALLED_MTA_VERSION}\\\".\" && \\\n    #\n    # Install git\n    #\n    apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n      git && \\\n    #\n    # Install node\n    #\n    NODE_HOME=/opt/nodejs; mkdir -p ${NODE_HOME} && \\\n    curl --fail --silent --output - \"https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz\" \\\n     | tar -xzv -f - -C \"${NODE_HOME}\" && \\\n    ln -s \"${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/node\" /usr/local/bin/node && \\\n    ln -s \"${NODE_HOME}/node-${NODE_VERSION}-linux-x64/bin/npm\" /usr/local/bin/npm && \\\n    INSTALLED_NODE_VERSION=\"$(node --version)\" && \\\n    echo \"[INFO] node version: \\\"${INSTALLED_NODE_VERSION}\\\".\" && \\\n    #\n    # Provide SAP registry\n    #\n    npm config set @sap:registry https://npm.sap.com --global && \\\n    #\n    # Install maven\n    #\n    echo \"[INFO] installing maven.\" && \\\n    M2_BASE=\"$(dirname ${M2_HOME})\" && \\\n    mkdir -p \"${M2_BASE}\" && \\\n    curl --fail --silent --output - \"https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\" \\\n      | tar -xzvf - -C \"${M2_BASE}\" && \\\n    ln -s \"${M2_HOME}/bin/mvn\" /usr/local/bin/mvn && \\\n    chmod --recursive a+w ${M2_HOME}/conf/* && \\\n    INSTALLED_MAVEN_VERSION=$(mvn -version |head -n1 |cut -d ' ' -f  3) && \\\n    echo \"[INFO] maven version: \\\"${INSTALLED_MAVEN_VERSION}\\\".\" && \\\n    #\n    # Install essential build tools and python, required for building db modules\n    #\n    apt-get install --yes --no-install-recommends \\\n      build-essential \\\n      python-minimal && \\\n    #\n    # Cleanup curl (was only needed for downloading artifacts)\n    #\n    apt-get remove --purge --autoremove --yes \\\n      curl && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    #\n    # Provide dedicated user for running the image\n    #\n    useradd --home-dir \"${MTA_USER_HOME}\" \\\n            --create-home \\\n            --shell /bin/bash \\\n            --user-group \\\n            --uid 1000 \\\n            --comment 'SAP-MTA tooling' \\\n            --password $(echo weUseMta |openssl passwd -1 -stdin) mta && \\\n     # Check below should be active, but we get version 1.1.8 installed\n    # when demanding version 1.1.7. When activating the check below, don't forget to add\n    # ' && \\' to the line above\n    # [ \"${MTA_VERSION}\" = \"${INSTALLED_MTA_VERSION}\" ] || { echo \"[ERROR] Installed mta version '${INSTALLED_MTA_VERSION}' does not match expected mta version '${MTA_VERSION}'.\"; exit 1; }\n   [ \"${NODE_VERSION}\" = \"${INSTALLED_NODE_VERSION}\" ] || { echo \"[ERROR] Installed node version '${INSTALLED_NODE_VERSION}' does not match expected node version '${NODE_VERSION}'.\"; exit 1; } && \\\n   [ \"${MAVEN_VERSION}\" = \"${INSTALLED_MAVEN_VERSION}\" ] || { echo \"[ERROR] Installed maven version '${INSTALLED_MAVEN_VERSION}' does not match expected maven version '${MAVEN_VERSION}'.\"; exit 1; }\n\nWORKDIR /project\n\nENV PATH=./node_modules/.bin:$PATH\n\nUSER mta\n"
}