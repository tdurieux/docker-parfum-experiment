{
  "startTime": 1674243955265,
  "endTime": 1674243955843,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 217,
        "lineEnd": 229,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nARG BUILD_CORES\nENV UID=991 GID=991\n\nARG NGINX_VER=1.15.0\nARG PHP_VER=7.2.6\nARG LIBICONV_VERSION=1.15\nARG OPENSSL_VERSION=1.1.0h\nARG PAGESPEED_VERSION=1.12.34.3-stable\nARG GPG_NGINX=\"B0F4 2533 73F8 F6F5 10D4  2178 520A 9993 A1C0 52F8\"\n\nLABEL description=\"nginx + php image based on Alpine\" \\\n      maintainer=\"Starbix\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"nginx v$NGINX_VER built from source\" \\\n      openssl_version=\"OpenSSL v$OPENSSL_VERSION from source\"\n\nARG PHP_MIRROR=https://secure.php.net\n\nARG NGINX_CONF=\" \\\n    --with-http_ssl_module \\\n    --with-http_v2_module \\\n    --with-http_gzip_static_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-threads \\\n    --with-file-aio \\\n    --with-pcre-jit \\\n    --without-http_geo_module \\\n    --without-http_split_clients_module \\\n    --without-http_memcached_module \\\n    --without-http_empty_gif_module \\\n    --without-http_browser_module\"\n\nARG NGINX_3RD_PARTY_MODULES=\" \\\n    --add-module=/tmp/headers-more-nginx-module \\\n    --add-module=/tmp/ngx_brotli \\\n    --add-module=/tmp/nginx-ct\"\n    # --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}\"\n\nARG PHP_CONF=\" \\\n    --prefix=/usr \\\n    --libdir=/usr/lib/php \\\n    --datadir=/usr/share/php \\\n    --sysconfdir=/php/etc \\\n    --localstatedir=/php/var \\\n    --with-pear=/usr/share/php \\\n    --with-config-file-scan-dir=/php/conf.d \\\n    --with-config-file-path=/php \\\n    --with-pic \\\n    --disable-short-tags \\\n    --without-readline \\\n    --enable-bcmath=shared \\\n    --enable-fpm \\\n    --enable-mysqlnd \\\n    --enable-mbstring \\\n    --with-curl \\\n    --with-libedit \\\n    --with-openssl \\\n    --with-iconv=/usr/local \\\n    --with-gd \\\n    --with-jpeg-dir \\\n    --with-png-dir \\\n    --with-webp-dir \\\n    --with-xpm-dir=no \\\n    --with-freetype-dir \\\n    --enable-gd-native-ttf \\\n    --disable-gd-jis-conv \\\n    --with-zlib\"\n\nARG PHP_EXT_LIST=\" \\\n    mysqli \\\n    ctype \\\n    dom \\\n    json \\\n    xml \\\n    mbstring \\\n    posix \\\n    xmlwriter \\\n    zip \\\n    zlib \\\n    sqlite3 \\\n    pdo_sqlite \\\n    pdo \\\n    pdo_mysql \\\n    pcntl \\\n    curl \\\n    fileinfo \\\n    bz2 \\\n    intl \\\n    openssl \\\n    ldap \\\n    simplexml \\\n    pgsql \\\n    ftp \\\n    exif \\\n    session \\\n    tokenizer \\\n    gmp\"\n\nARG CUSTOM_BUILD_PKGS=\" \\\n    freetype-dev \\\n    openldap-dev \\\n    gmp-dev \\\n    icu-dev \\\n    postgresql-dev \\\n    libpng-dev \\\n    libwebp-dev \\\n    gd-dev \\\n    libjpeg-turbo-dev \\\n    libxpm-dev \\\n    libedit-dev \\\n    libxml2-dev \\\n    libressl-dev \\\n    libbz2 \\\n    sqlite-dev\"\n\nARG CUSTOM_PKGS=\" \\\n    freetype \\\n    openldap \\\n    gmp \\\n    bzip2-dev \\\n    icu \\\n    python-dev \\\n    libpq\"\n\nCOPY rootfs /\n\nRUN NB_CORES=${BUILD_CORES-$(getconf _NPROCESSORS_CONF)} \\\n && apk -U upgrade \\\n && BUILD_DEPS=\" \\\n    linux-headers \\\n    libtool \\\n    build-base \\\n    binutils-gold \\\n    pcre-dev \\\n    zlib-dev \\\n    wget \\\n    gnupg \\\n    autoconf \\\n    gcc \\\n    g++ \\\n    libc-dev \\\n    make \\\n    pkgconf \\\n    curl-dev \\\n    ca-certificates \\\n    go \\\n    cmake \\\n    automake \\\n    file \\\n    jemalloc-dev \\\n    patch \\\n    re2c \\\n    ${CUSTOM_BUILD_PKGS}\" \\\n && apk -U add \\\n    ${BUILD_DEPS} \\\n    s6 \\\n    su-exec \\\n    curl \\\n    jemalloc \\\n    libedit \\\n    libxml2 \\\n    libressl \\\n    libwebp \\\n    gd \\\n    git \\\n    pcre \\\n    zlib \\\n    ${CUSTOM_PKGS} \\\n### Source downloading\n && cd /tmp \\\n && wget https://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n && wget https://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n && wget https://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n && OPENSSL_TARBALL=\"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && wget https://www.openssl.org/source/${OPENSSL_TARBALL} \\\n && mkdir -p /php/conf.d \\\n && mkdir -p /usr/src \\\n && tar xzf ${OPENSSL_TARBALL} -C /usr/src \\\n && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n### openssl\n&& cd /usr/src/openssl-${OPENSSL_VERSION} \\\n&& wget https://raw.githubusercontent.com/cloudflare/sslconfig/master/patches/openssl__1.1.0_chacha20_poly1305.patch \\\n&& patch -p1 < openssl__1.1.0_chacha20_poly1305.patch \\\n\n### modules\n&& cd /tmp && git clone --recurse-submodules https://github.com/eustas/ngx_brotli --depth=1 \\\n&& cd ngx_brotli/deps/brotli \\\n&& mkdir out && cd out \\\n&& ../configure-cmake && make && make install && cd /tmp \\\n&& git clone https://github.com/openresty/headers-more-nginx-module --depth=1 \\\n&& git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 \\\n\n# && wget https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}.tar.gz \\\n# && tar xzvf v${PAGESPEED_VERSION}.tar.gz \\\n# && cd ngx_pagespeed-${PAGESPEED_VERSION}/ \\\n# && PAGESPEED_RELEASE_NUMBER=${PAGESPEED_VERSION/beta/} \\\n# && PAGESPEED_RELEASE_NUMBER=${PAGESPEED_VERSION/stable/} \\\n# && psol_url=https://dl.google.com/dl/page-speed/psol/${NPS_RELEASE_NUMBER}.tar.gz \\\n# && [ -e scripts/format_binary_url.sh ] && psol_url=$(scripts/format_binary_url.sh PSOL_BINARY_URL) \\\n# && wget ${psol_url} \\\n# && tar -xzvf $(basename ${psol_url}) \\\n\n### NGINX installation\n && cd /usr/src/nginx-${NGINX_VER} \\\n && wget https://raw.githubusercontent.com/cloudflare/sslconfig/master/patches/nginx__1.11.5_dynamic_tls_records.patch \\\n && patch -p1 < nginx__1.11.5_dynamic_tls_records.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && patch -p1 < nginx_auto_using_PRIORITIZE_CHACHA.patch \\\n && wget https://raw.githubusercontent.com/kn007/patch/master/nginx__1.13.10_http2_hpack.patch \\\n && patch -p1 < nginx__1.13.10_http2_hpack.patch \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n --prefix=/nginx \\\n --sbin-path=/usr/local/sbin/nginx \\\n --with-cc-opt=\"-m64 -march=native -DTCP_FASTOPEN=23 -O3 -fPIE -fstack-protector-strong -fuse-ld=gold --param=ssp-buffer-size=4 -gsplit-dwarf -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" \\\n --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" \\\n --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' \\\n --with-openssl=/usr/src/openssl-${OPENSSL_VERSION} \\\n --http-log-path=/nginx/logs/nginx_access.log \\\n --error-log-path=/nginx/logs/nginx_error.log \\\n --pid-path=/nginx/run/nginx.pid \\\n --lock-path=/nginx/run/nginx.lock \\\n ${NGINX_CONF} \\\n ${NGINX_3RD_PARTY_MODULES} \\\n && make -j ${NB_CORES} \\\n && make install && make clean \\\n && strip -s /usr/local/sbin/nginx \\\n && mkdir -p /tmp/go/bin \\\n && export GOPATH=/tmp/go \\\n && export GOBIN=$GOPATH/bin \\\n && go get github.com/grahamedgecombe/ct-submit \\\n && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n### GNU Libiconv installation\n && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n && make && make install && libtool --finish /usr/local/lib \\\n\n### PHP installation\n && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n && cd /usr/src/php \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O3 -fstack-protector-strong\" ${PHP_CONF} \\\n && make -j ${NB_CORES} \\\n && make install \\\n && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \\\n && make clean \\\n\n### NGINX amplify\n && cd /tmp \\\n && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/packages/install-source.sh \\\n && chmod u+x install-source.sh \\\n && ./install-source.sh \\\n && cd /usr/lib/python2.7/site-packages/nginx_amplify_agent-*-py2.7.egg/amplify/agent/managers \\\n && rm -rf abstract.py && wget https://raw.githubusercontent.com/Starbix/nginx-amplify-agent/master/amplify/agent/managers/abstract.py \\\n && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n && sync \\\n && docker-php-ext-install ${PHP_EXT_LIST} \\\n && apk del ${BUILD_DEPS} \\\n && rm -rf /tmp/* /var/cache/apk/* /usr/src/* \\\n && mkdir -p /nginx/logs /nginx/client_body_temp /nginx/fastcgi_temp /nginx/proxy_temp /nginx/scgi_temp /nginx/uwsgi_temp /nginx/run /php/php-fpm.d /php/logs /php/run /php/session \\\n && chown -R ${UID}:${GID} /nginx/* && rm /tmp/nginx-${NGINX_VER}.tar.gz\n\nEXPOSE 8000 4430\n\nCMD [\"run.sh\"]\n"
}