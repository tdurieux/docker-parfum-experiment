{
  "startTime": 1674243391365,
  "endTime": 1674243391431,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12 AS build\n\nENV GO111MODULE=on\nENV GOPROXY=https://proxy.golang.org\n\nRUN mkdir /gocache\nENV GOCACHE /gocache\n\nCOPY go.mod /go/src/golang.org/x/build/go.mod\nCOPY go.sum /go/src/golang.org/x/build/go.sum\n\n# Optimization for iterative docker build speed, not necessary for correctness:\n# TODO: write a tool to make writing Go module-friendly Dockerfiles easier.\nRUN go install golang.org/x/crypto/acme/autocert\nRUN go install cloud.google.com/go/storage\nCOPY autocertcache /go/src/golang.org/x/build/autocertcache\nRUN go install golang.org/x/build/autocertcache\n\nCOPY . /go/src/golang.org/x/build/\n# Install binary to /go/bin:\nRUN go install golang.org/x/build/cmd/tip\n\nFROM golang:1.12\n\nRUN apt-get update && apt-get install --no-install-recommends -y -q build-essential git && rm -rf /var/lib/apt/lists/*;\n# golang puts its go install here (weird but true)\nENV GOROOT_BOOTSTRAP /usr/local/go\n\n# We listen on 8080 (for historical reasons). The service.yaml maps public port 80 to 8080.\n# We also listen on 443 for LetsEncrypt TLS.\nEXPOSE 8080 443\n\nCOPY --from=build /go/bin/tip /go/bin/tip\nENTRYPOINT [\"/go/bin/tip\"]\n"
}