{
  "startTime": 1674234490564,
  "endTime": 1674234490628,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 32,
        "columnStart": 36,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.8-stretch\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nENV PATH /usr/local/nvidia/bin/:$PATH\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\n# Tell nvidia-docker the driver spec that we need as well as to\n# use all available devices, which are mounted at /usr/local/nvidia.\n# The LABEL supports an older version of nvidia-docker, the env\n# variables a newer one.\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\n\nWORKDIR /stage/allennlp\n\n# Install base packages.\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y \\\n    bzip2 \\\n    ca-certificates \\\n    curl \\\n    gcc \\\n    git \\\n    libc-dev \\\n    libglib2.0-0 \\\n    libsm6 \\\n    libxext6 \\\n    libxrender1 \\\n    wget \\\n    libevent-dev \\\n    build-essential && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Copy select files needed for installing requirements.\n# We only copy what we need here so small changes to the repository does not trigger re-installation of the requirements.\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY scripts/ scripts/\nCOPY allennlp/ allennlp/\nCOPY pytest.ini pytest.ini\nCOPY .pylintrc .pylintrc\nCOPY tutorials/ tutorials/\nCOPY training_config training_config/\nCOPY setup.py setup.py\nCOPY README.md README.md\n\nRUN pip install --no-cache-dir --editable .\n\n# Compile EVALB - required for parsing evaluation.\n# EVALB produces scary looking c-level output which we don't\n# care about, so we redirect the output to /dev/null.\nRUN cd allennlp/tools/EVALB && make &> /dev/null && cd ../../../\n\n# Caching models when building the image makes a dockerized server start up faster, but is slow for\n# running tests and things, so we skip it by default.\nARG CACHE_MODELS=false\nRUN ./scripts/cache_models.py\n\n\n# Optional argument to set an environment variable with the Git SHA\nARG SOURCE_COMMIT\nENV ALLENNLP_SOURCE_COMMIT $SOURCE_COMMIT\n\nLABEL maintainer=\"allennlp-contact@allenai.org\"\n\nEXPOSE 8000\nCMD [\"/bin/bash\"]\n"
}