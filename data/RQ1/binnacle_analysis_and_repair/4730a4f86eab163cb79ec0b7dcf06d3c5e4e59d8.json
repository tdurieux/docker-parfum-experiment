{
  "startTime": 1674248878402,
  "endTime": 1674248878676,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Creates an Enchiladas container for the Tapestry project.\n# This Dockerfile was originally written by Tanner Hobson (thobson2@vols.utk.edu)\n\nFROM ubuntu:xenial\nMAINTAINER Mohammad Raji <mahmadza@vols.utk.edu>\n\nARG build_parallel\nARG minifyjs\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n            # Needed By: everything\n            build-essential \\\n            # Needed By: everything\n            cmake \\\n            # Needed By: pistache for running tests\n            python \\\n            # Needed By: embree and ospray for their threading framework\n            libtbb-dev \\\n            # Needed By: embree and ospray for OpenGL\n            libglu1-mesa-dev freeglut3-dev mesa-common-dev \\\n            # Needed By: enchiladas for pthreads\n            libc6-dev \\\n            # Needed By: pbnj for netcdf support\n            libnetcdf-c++4-1 libnetcdf-dev libnetcdf-c++4-dev \\\n            # Needed By: enchiladas for minifying JavaScript\n            python-pip \\\n            # Needed By: tapestry studio for exporting to mp4\n            # ffmpeg \\\n            git \\\n            yasm \\\n    && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /opt/\nCOPY rapidjson /opt/rapidjson\nWORKDIR /opt/rapidjson/build/\nRUN true && \\\n    cmake .. \\\n          -DRAPIDJSON_BUILD_EXAMPLES:BOOL=OFF \\\n          -DRAPIDJSON_BUILD_TESTS:BOOL=OFF \\\n    && \\\n    make ${build_parallel} && \\\n    make install && \\\n    rm -rf /opt/rapidjson\n\nWORKDIR /opt/\nADD tbb2017_20161128oss_lin.tgz /opt/\nRUN mv tbb2017_20161128oss tbb\nWORKDIR /opt/tbb/\n\nWORKDIR /opt/\nADD ispc-v1.9.1-linux.tar.gz /opt/\nRUN mv ispc-v1.9.1-linux ispc\nWORKDIR /opt/ispc/\nRUN update-alternatives --install /usr/bin/ispc ispc /opt/ispc/ispc 1\n\nWORKDIR /opt/\nADD embree-2.16.4.x86_64.linux.tar.gz /opt/\nRUN mv embree-2.16.4.x86_64.linux embree\nWORKDIR /opt/embree/\n\nWORKDIR /opt/\nCOPY ospray /opt/ospray\nWORKDIR /opt/ospray/build\n\nRUN true && \\\n    cmake .. \\\n          -Dembree_DIR=/opt/embree \\\n          -DOSPRAY_ENABLE_APPS:BOOL=OFF \\\n          -DTBB_ROOT=/opt/tbb/ \\\n          -DOSPRAY_TASKING_SYSTEM=TBB \\\n    && \\\n    make ${build_parallel} && \\\n    make install && \\\n    rm -rf /opt/ospray\n\n# Install SVT-HEVC for tapestry-gui\nWORKDIR /opt\nRUN true && \\\n    git clone https://github.com/intel/SVT-HEVC && \\\n    cd SVT-HEVC && mkdir build && cd build && cmake .. && make -j `nproc` && make install\n\nWORKDIR /opt\nRUN true && \\\n    git clone https://github.com/FFmpeg/FFmpeg ffmpeg\n\nWORKDIR /opt/ffmpeg/\nRUN git checkout release/4.1 && \\\n    git apply ../SVT-HEVC/ffmpeg_plugin/0001-lavc-svt_hevc-add-libsvt-hevc-encoder-wrapper.patch && \\\n    git apply ../SVT-HEVC/ffmpeg_plugin/0002-doc-Add-libsvt_hevc-encoder-docs.patch && \\\n    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib && \\\n    export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/usr/local/lib/pkgconfig && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-libsvthevc && make -j `nproc` && make install\n\nWORKDIR /opt/\nCOPY enchiladas /opt/enchiladas\nCOPY pbnj /opt/enchiladas/resources/pbnj\nCOPY pistache /opt/enchiladas/resources/pistache\nWORKDIR /opt/enchiladas/build\nRUN true && \\\n    pip install --no-cache-dir rjsmin && \\\n    cmake .. \\\n          -DCMAKE_CXX_COMPILER=g++ \\\n          -DCMAKE_C_COMPILER=gcc \\\n          -DUSE_NETCDF:BOOL=ON \\\n          -DBUILD_EXAMPLES:BOOL=OFF \\\n          -DOSPRAY_INSTALL_DIR=/usr/local/ \\\n           -DTBB_ROOT=/opt/tbb/ \\\n          -Dembree_DIR=/opt/embree \\\n          -DENABLE_MINIFY=${minifyjs:+ON}${minifyjs:-OFF} \\\n    && \\\n    make ${build_parallel} && \\\n    make install\n\n# Copy dependency installation script\nCOPY install_dependencies.sh /opt/install_dependencies.sh\nRUN /opt/install_dependencies.sh\n\nCMD [\"sh\", \"-c\", \"./server /config 9010 ${APP_DIR}\"]\n"
}