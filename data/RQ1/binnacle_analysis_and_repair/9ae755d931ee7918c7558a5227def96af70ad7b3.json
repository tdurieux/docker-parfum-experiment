{
  "startTime": 1674236473101,
  "endTime": 1674236473295,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Woocommerce Docker\n# PHP Docker for Woocommerce on Steroids\n#\n# VERSION 0.3\n\nFROM php:7.2-apache\nMAINTAINER Julian Xhokaxhiu <info [at] julianxhokaxhiu [dot] com>\n\nLABEL Description=\"PHP Docker for Woocommerce on Steroids\" Vendor=\"Julian Xhokaxhiu\" Version=\"0.3\"\n\n# Add pngout binary\nADD ./pngout-static /usr/bin/pngout\n\n# enable extra Apache modules\nRUN a2enmod rewrite \\\n  && a2enmod headers\n\n# install the PHP extensions we need\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n      libpng-dev \\\n      libjpeg-dev \\\n      libxml2-dev \\\n      libxslt-dev \\\n      libgraphicsmagick1-dev \\\n      graphicsmagick \\\n      libjpeg-turbo-progs \\\n      optipng \\\n      pngquant \\\n      gifsicle \\\n      webp \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n  && docker-php-ext-install \\\n      gd \\\n      json \\\n      mysqli \\\n      pdo \\\n      pdo_mysql \\\n      opcache \\\n      gettext \\\n      exif \\\n      calendar \\\n      soap \\\n      xsl \\\n      sockets \\\n      wddx\n\n# install APCu from PECL\nRUN pecl -vvv install apcu && docker-php-ext-enable apcu\n\n# install GMagick from PECL\nRUN pecl -vvv install gmagick-beta && docker-php-ext-enable gmagick\n\n# Download WordPress CLI\nRUN curl -f -L \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" > /usr/bin/wp \\\n    && chmod +x /usr/bin/wp\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n    echo 'opcache.memory_consumption=128'; \\\n    echo 'opcache.interned_strings_buffer=8'; \\\n    echo 'opcache.max_accelerated_files=4000'; \\\n    echo 'opcache.revalidate_freq=60'; \\\n    echo 'opcache.fast_shutdown=1'; \\\n    echo 'opcache.enable_cli=1'; \\\n  } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n# increase upload size\n# see http://php.net/manual/en/ini.core.php\nRUN { \\\n    echo \"upload_max_filesize = 25M\"; \\\n    echo \"post_max_size = 50M\"; \\\n  } > /usr/local/etc/php/conf.d/uploads.ini\n\n# Iron the security of the Docker\nRUN { \\\n    echo \"expose_php = Off\"; \\\n    echo \"display_startup_errors = off\"; \\\n    echo \"display_errors = off\"; \\\n    echo \"html_errors = off\"; \\\n    echo \"log_errors = off\"; \\\n    echo \"error_log = /dev/stderr\"; \\\n    echo \"ignore_repeated_errors = off\"; \\\n    echo \"ignore_repeated_source = off\"; \\\n    echo \"report_memleaks = on\"; \\\n    echo \"track_errors = on\"; \\\n    echo \"docref_root = 0\"; \\\n    echo \"docref_ext = 0\"; \\\n    echo \"error_reporting = -1\"; \\\n    echo \"log_errors_max_len = 0\"; \\\n  } > /usr/local/etc/php/conf.d/security.ini\n\nRUN { \\\n    echo \"ServerSignature Off\"; \\\n    echo \"ServerTokens Prod\"; \\\n    echo \"TraceEnable off\"; \\\n  } >> /etc/apache2/apache2.conf\n\nVOLUME /var/www/html"
}