{
  "startTime": 1674245263866,
  "endTime": 1674245264140,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 218
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 218
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 218
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 178
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 242
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\nMAINTAINER Eugene Ware <eugene@noblesamurai.com>\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get -y upgrade\n\n# Keep upstart from complaining\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -sf /bin/true /sbin/initctl\nRUN mkdir /var/run/sshd\n\n# Basic Requirements\nRUN apt-get -y --no-install-recommends install memcached mysql-server mysql-client nginx php5-fpm php5-mysql php-apc pwgen python-setuptools curl git unzip openssh-server openssl && rm -rf /var/lib/apt/lists/*;\n\n# Wordpress Requirements\nRUN apt-get -y --no-install-recommends install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-memcached php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl && rm -rf /var/lib/apt/lists/*;\n\n# mysql config\nRUN sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n\n# nginx config\nRUN sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf\nRUN sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# php-fpm config\nRUN sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf\nRUN find /etc/php5/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;\n\n# nginx site conf\nADD ./nginx-site.conf /etc/nginx/sites-available/default\n\n# Supervisor Config\nRUN /usr/bin/easy_install supervisor\nADD ./supervisord.conf /etc/supervisord.conf\n\n#Add system user for Wordpress\nRUN useradd -m -d /home/wordpress -p $(openssl passwd -1 'temp') -G sudo -s /bin/bash wordpress\nRUN ln -s /usr/share/nginx/www /home/wordpress/www\n\n# SSH security, turn off root login\nRUN sed -i -e \"s/PermitRootLogin\\syes/PermitRootLogin no/g\" /etc/ssh/sshd_config\n\n# Install Wordpress\nADD http://wordpress.org/latest.tar.gz /usr/share/nginx/latest.tar.gz\nRUN cd /usr/share/nginx/ && tar xvf latest.tar.gz && rm latest.tar.gz\nRUN mv /usr/share/nginx/www/5* /usr/share/nginx/wordpress\nRUN rm -rf /usr/share/nginx/www\nRUN mv /usr/share/nginx/wordpress /usr/share/nginx/www\nRUN chown -R wordpress:www-data /usr/share/nginx/www\nRUN chmod -R 775 /usr/share/nginx/www\n\n# Wordpress Initialization and Startup Script\nADD ./start.sh /start.sh\nRUN chmod 755 /start.sh\n\n# private expose\nEXPOSE 80\nEXPOSE 22\n\nCMD [\"/bin/bash\", \"/start.sh\"]\n"
}