{
  "startTime": 1674237067016,
  "endTime": 1674237067477,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM jacknlliu/ubuntu-init:16.04\n\nLABEL maintainer=\"Jack Liu <jacknlliu@gmail.com>\"\n\n# setup environment\nENV DEBIAN_FRONTEND noninteractive\n\nENV LANG en_US.UTF-8\n\n# define ros distribution version\nENV ROS_DISTRO kinetic\n\nRUN apt-get update -y \\\n    && apt-get install -y -q --no-install-recommends apt-transport-https aptitude locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list  \\\n    \\\n# setup keys\n    && apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116  \\\n    \\\n# update the repository and install ros kinetic\n    && aptitude update -y -q && aptitude install -y -q -R ros-kinetic-desktop-full python-rosinstall ninja-build python3-pip python3-setuptools python3-defusedxml python3-dev \\\n    ros-kinetic-rosbridge-library ros-kinetic-rosbridge-server ros-kinetic-rosbridge-suite\n\n# install ros python3 support\nRUN pip3 install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir catkin-tools rospkg ws4py transforms3d trollius\n\n# install dependecies for ros genmsg\nRUN pip install --no-cache-dir empy\n\n# install additional system packages and ros packages\n# install additional build tool\nRUN aptitude install -y -q -R build-essential gdb tmux \\\n    \\\n# install IDE essential packages and qt5, qtcreator, qtdeclarative5-qtquick2\n    && aptitude install -y -q -R mesa-common-dev libglu1-mesa-dev libfontconfig1 \\\n    \\\n# install intel graphics driver\n    && aptitude install -y -q -R libgl1-mesa-glx libgl1-mesa-dri \\\n    \\\n# install amd graphics open source driver\n    && aptitude install -y -q -R mesa-vdpau-drivers xserver-xorg-video-ati mesa-utils module-init-tools\n\n# install RoboWare\nRUN aptitude install -y -q -R  wget python-pip pylint clang libxss1 libnss3 libnotify4 libxtst6 ~nlibgconf-2 \\\n    && export ROBOWAREVERSION=\"1.1.0-1514335284\"  \\\n    && wget https://github.com/tonyrobotics/RoboWare/raw/master/Studio/roboware-studio_${ROBOWAREVERSION}_amd64.deb -O roboware_amd64.deb \\\n    && chmod a+x roboware_amd64.deb && dpkg -i roboware_amd64.deb \\\n    && apt-get install -y --no-install-recommends -f \\\n    && rm -f roboware_amd64.deb\n\n# install essential tools, ssh sever, sudo\nRUN aptitude install -y -q -R  bash-completion wget vim git iputils-ping iproute2 netcat terminator xauth openssh-server sudo pcmanfm\n\n\n# config sshd\nRUN mkdir -p /var/run/sshd && echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config \\\n  &&  rm -f /etc/service/sshd/down  && /etc/my_init.d/00_regen_ssh_host_keys.sh \\\n  && mkdir -p /opt/scripts/container/\n\n\n# copy entrypoint file\nCOPY ./scripts/* /opt/scripts/container/\nRUN chmod a+rx -R /opt/scripts/ && cp /opt/scripts/container/containerinit.sh /etc/my_init.d/ && chmod a+rx /opt/scripts/container/ros_entrypoint.sh && chmod u+x /etc/my_init.d/containerinit.sh\n\nRUN /opt/scripts/container/quick-fix.sh\n\n\n# aptitude clean\nRUN apt-get autoclean \\\n    && apt-get clean all \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/* /var/tmp/*\n\n# set user ros and sudo\nRUN adduser --gecos \"ROS User\" --home /home/ros --disabled-password ros && \\\n  usermod -a -G dialout ros && \\\n  echo \"ros ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/99_aptget\n\n# switch to user ros, but the HOME is still /, not /home/ros\nUSER ros\n\n# setup ros env\nRUN sudo rosdep init && rosdep update  \\\n  && echo \"source \"/opt/ros/$ROS_DISTRO/setup.bash\"\" >> /home/ros/.bashrc\n\nUSER root\n\n# config gazebo volume\nRUN mkdir -p /home/ros/.gazebo/models && chown -R ros:ros /home/ros/.gazebo\n\n# share this volume with other containers from this image\nVOLUME [\"/home/ros/.gazebo/models\"]\n\n# cd /home/ros default\nWORKDIR /home/ros\n\n# must run /sbin/my_init with root user. So we shouldn't switch to normal user when use docker exec -it ...\nENTRYPOINT [\"/sbin/my_init\", \"--quiet\", \"--\", \"setuser\", \"ros\", \"/opt/scripts/container/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n"
}