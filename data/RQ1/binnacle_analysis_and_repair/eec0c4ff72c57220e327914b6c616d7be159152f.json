{
  "startTime": 1674235588228,
  "endTime": 1674235588868,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile used for regular linux builds.\nFROM ubuntu:16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  gcc \\\n  alien \\\n  fakeroot \\\n  rpm \\\n  git \\\n  python-dev \\\n  python-pip \\\n  desktop-file-utils \\\n  wget \\\n  sudo \\\n  libgstreamer1.0-dev \\\n  libgstreamer-plugins-base1.0-dev \\\n  libgstreamer-plugins-base0.10-0 \\\n  libgstreamer0.10-0 \\\n  libgstreamer0.10-dev \\\n  autoconf2.13 \\\n  build-essential \\\n  ccache \\\n  python-dev \\\n  python-pip \\\n  python-setuptools \\\n  unzip \\\n  uuid \\\n  zip \\\n  libasound2-dev \\\n  libcurl4-openssl-dev \\\n  libdbus-1-dev \\\n  libdbus-glib-1-dev \\\n  libgconf2-dev \\\n  libgtk-3-dev \\\n  libgtk2.0-dev \\\n  libiw-dev \\\n  libnotify-dev \\\n  libpulse-dev \\\n  libx11-xcb-dev \\\n  libxt-dev \\\n  mesa-common-dev \\\n  python-dbus \\\n  xvfb \\\n  yasm \\\n  apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir awscli\n\nRUN echo \"deb http://repo.aptly.info/ squeeze main\" > /etc/apt/sources.list.d/aptly.list; \\\n  apt-key adv --keyserver pool.sks-keyservers.net --recv-keys ED75B5A4483DA07C; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends aptly -y && rm -rf /var/lib/apt/lists/*;\n\n  ENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH\n\nRUN echo \"deb http://ppa.launchpad.net/mercurial-ppa/releases/ubuntu xenial main\" > /etc/apt/sources.list.d/mercurial.list; \\\n  apt-key adv --keyserver pool.sks-keyservers.net --recv-keys 41BD8711B1F0EC2B0D85B91CF59CE3A8323293EE; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends mercurial -y && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN echo \"deb https://deb.nodesource.com/node_10.x xenial main\" > /etc/apt/sources.list.d/nodesource.list; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN set -eux; \\\n\n# this \"case\" statement is generated via \"update.sh\"\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='5a38dbaf7ab2e4335a3dfc42698a5b15e7167c93b0b06fc95f53c1da6379bf1a' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='67a98a67f7f7bf19c5cde166499acb8299f2f8fa88c155093df53b66da1f512a' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='82fe368c4ebf1683d57e137242793a4417042639aace8bd514601db7d79d3645' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='7a1c085591f6c1305877919f8495c04a1c97546d001d1357a7a879cedea5afbb' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n    url=\"https://static.rust-lang.org/rustup/archive/1.7.0/${rustArch}/rustup-init\"; \\\n    wget \"$url\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain 1.32.0; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version\n\nRUN cargo install --version 0.8.2 cbindgen\n\nARG uid\nARG gid\nARG user\nENV SHELL=/bin/bash\n\nRUN groupadd $user -g $gid && useradd -ms /bin/bash $user -u $uid -g $gid && usermod -aG sudo $user\n\n# Enable passwordless sudo for users under the \"sudo\" group\nRUN sed -i.bkp -e \\\n      's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' \\\n      /etc/sudoers\n\nRUN mkdir /builds\n\nUSER $user\nENV CLANG_HOME /home/$user/clang/clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04/\nENV GCC_VERSION=6.0.0\nENV CXX=$CLANG_HOME/bin/clang++\nENV CC=$CLANG_HOME/bin/clang\nENV LLVM_CONFIG=$CLANG_HOME/bin/llvm-config\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\n\n#Install CLang\nRUN mkdir -p /home/$user/clang; \\\n    cd /home/$user/clang; \\\n    wget --output-document=clang.tar.xz --quiet \"https://repository.cliqz.com/dist/android/artifacts/clang/clang%2Bllvm-6.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\"; \\\n    tar xf clang.tar.xz; rm clang.tar.xz \\\n    echo 'export PATH=$CLANG_HOME/bin:$PATH' >> ~/.bashrc; \\\n    echo 'export LD_LIBRARY_PATH=$CLANG_HOME/lib:LD_LIBRARY_PATH' >> ~/.bashrc; \\\n    ln -s /usr/include include; \\\n    ln -s /usr/bin bin; \\\n    mkdir -p lib/gcc/x86_64-linux-gnu/; \\\n    cd lib/gcc/x86_64-linux-gnu/; \\\n    ln -s /usr/lib/gcc/x86_64-linux-gnu/$GCC_VERSION $GCC_VERSION\n\n#Install nasm 2.13\nRUN mkdir -p /home/$user/nasm; \\\n    cd /home/$user/nasm; \\\n    wget --output-document=nasm.tar.xz --quiet \"https://www.nasm.us/pub/nasm/releasebuilds/2.13.03/nasm-2.13.03.tar.xz\"; \\\n    tar xf nasm.tar.xz; rm nasm.tar.xz \\\n    cd nasm-2.13.03; \\\n    sh configure; \\\n    sudo make install\n"
}