{
  "startTime": 1674242391505,
  "endTime": 1674242391753,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 59,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-setuptools \\\n        python-scipy && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV FAST_RCNN_ROOT=/opt\nWORKDIR $FAST_RCNN_ROOT\n\nRUN git clone https://github.com/opencv/opencv.git && \\\n\tcd opencv && \\\n\tmkdir build && \\\n\tcd build && \\\n\tcmake .. -DWITH_FFMPEG=ON && \\\n\tmake -j20 && make install && \\\n\tcd ../..\n\nRUN pip install --no-cache-dir --upgrade pip && \\\n\tpip install --no-cache-dir cython && \\\n\tpip install --no-cache-dir easydict\n\nRUN apt-get update && \\\n\tapt-get -y --no-install-recommends install python-tk && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/natanielruiz/py-faster-rcnn-dockerface py-faster-rcnn && \\\n\tcd py-faster-rcnn && \\\n\tmkdir output && cd output && mkdir faster_rcnn_end2end && cd faster_rcnn_end2end && \\\n\tmkdir wider && cd wider && \\\n\twget \"https://www.dropbox.com/s/dhtawqycd32ca9v/vgg16_dockerface_iter_80000.caffemodel\" && \\\n\tcd ../../.. && \\\n\tcd lib && \\\n\tmake && \\\n\tcd .. && \\\n\trm -r caffe-fast-rcnn && \\\n\tgit clone https://github.com/owphoo/caffe_fast_rcnn.git caffe-fast-rcnn && \\\n\tcd caffe-fast-rcnn && \\\n\tcd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && cd .. && \\\n\tmkdir build && cd build && \\\n\tcmake -DUSE_CUDNN=1 .. && \\\n\tmake -j\"$(nproc)\" && \\\n\tmake pycaffe\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\nWORKDIR /opt/py-faster-rcnn\n"
}