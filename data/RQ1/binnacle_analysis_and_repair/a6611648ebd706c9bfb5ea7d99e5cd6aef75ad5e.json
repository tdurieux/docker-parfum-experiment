{
  "startTime": 1674242470301,
  "endTime": 1674242470685,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 5,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 175
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk as baseequella\n# Currently fails to build openEQUELLA since the build requires the JavaWS deps to\n# build the WebStart / Applets.\n\n# Expects a host volume: \n# -v /host/directory/for/artifacts:/artifacts\n\n# Install needed tools to build openEQUELLA\n# Clean up the apt cache afterwards.\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV VERSION_SBT 1.1.1\nENV VERSION_NODEJS 8.x\nLABEL supported.openequella.versions=\"6.6,6.7\"\n\n# Install basic tools.\nRUN \\\n  apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    apt-transport-https \\\n    curl \\\n    apt-utils \\\n# Clean up the cache\n  && rm -rf /var/lib/apt/lists/*\n\nRUN \\\n\n  echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list \\\n  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 \\\n# Prep for yarn \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n# Prep for nodejs\n  && curl -f -sL https://deb.nodesource.com/setup_$VERSION_NODEJS -o nodesource_setup.sh \\\n  && bash nodesource_setup.sh \\\n# Install the first 3 dev tools for openEQUELLA\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    nodejs \\\n    sbt=$VERSION_SBT \\\n    yarn \\\n  && rm -rf /var/lib/apt/lists/*\n\n# use the /home/equella as your working directory and switch to the equella user.\nRUN useradd -ms /bin/bash equella\nWORKDIR /home/equella\nUSER equella\n\n# Pull down the master branch of openEQUELLA\nRUN \\\n  mkdir /home/equella/repo \\\n  && cd /home/equella/repo \\\n  && git clone https://github.com/equella/Equella.git \\\n  && cd /home/equella/repo/Equella \\\n# Could add a 'git checkout' for a specific version if sbt 1.1.1 is bumped for later versions.\n# Run a arbitrary, no-op task in the Equella/ directory to pull a bunch of the SBT deps. \n# If you are building an older version (such as 6.5), you can skip this command since \n# the old deps will have to be pulled anyways\n  && sbt sbtVersion\n\n# Install psc-package\n\nENV VERSION_PSC_PACKAGE v0.4.2\n\nRUN curl -f --create-dirs -Lo /home/equella/tools/pscPackage/bundle/linux64.tar.gz https://github.com/purescript/psc-package/releases/download/$VERSION_PSC_PACKAGE/linux64.tar.gz \\\n  && cd /home/equella/tools/pscPackage \\\n  && echo \"bdf25acc5b4397bd03fd1da024896c5f33af85ce  bundle/linux64.tar.gz\" | shasum -c - \\\n  && cd /home/equella/tools \\\n  && tar -xvzf pscPackage/bundle/linux64.tar.gz \\\n  && rm -r /home/equella/tools/pscPackage && rm pscPackage/bundle/linux64.tar.gz\nENV PATH \"$PATH:/home/equella/tools/psc-package\"\n\nCOPY move-installer-to-host.sh ./\nCOPY move-upgrader-to-host.sh ./\nCOPY build-installer.sh ./\nCOPY build-upgrader.sh ./\n"
}