{
  "startTime": 1674245839552,
  "endTime": 1674245839900,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM steeve/cross-compiler:darwin-x64\nMAINTAINER Steeve Morin \"steeve.morin@gmail.com\"\n\nRUN mkdir -p /build\nWORKDIR /build\n\n# Install Boost.System\nENV BOOST_VERSION 1.58.0\nRUN curl -f -L https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_`echo ${BOOST_VERSION} | sed 's/\\\\./_/g'`.tar.bz2/download | tar xvj && \\\n    cd boost_`echo ${BOOST_VERSION} | sed 's/\\\\./_/g'`/ && \\\n    ./bootstrap.sh --prefix=${CROSS_ROOT} && \\\n    echo \"using clang : darwin : ${CROSS_TRIPLE}-c++ ;\" > ${HOME}/user-config.jam && \\\n    ./b2 --with-date_time --with-system --prefix=${CROSS_ROOT} toolset=clang-darwin link=static variant=release threading=multi target-os=darwin install && \\\n    ${CROSS_TRIPLE}-ranlib ${CROSS_ROOT}/lib/*.a && \\\n    rm -rf ${HOME}/user-config.jam && \\\n    rm -rf `pwd`\n\n# Install OpenSSL\nENV OPENSSL_VERSION 1.0.2c\nRUN curl -f -L https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar xvz && \\\n    cd openssl-${OPENSSL_VERSION}/ && \\\n    CROSS_COMPILE=${CROSS_TRIPLE}- ./Configure threads no-shared darwin64-x86_64-cc --prefix=${CROSS_ROOT} && \\\n    make && make install && \\\n    ${CROSS_TRIPLE}-ranlib ${CROSS_ROOT}/lib/*.a && \\\n    rm -rf `pwd`\n\n# Install libtorrent\nENV LIBTORRENT_VERSION 1.0.5\nRUN curl -f -L https://sourceforge.net/projects/libtorrent/files/libtorrent/libtorrent-rasterbar-${LIBTORRENT_VERSION}.tar.gz/download | tar xvz && \\\n    cd libtorrent-rasterbar-${LIBTORRENT_VERSION}/ && \\\n    sed -i 's/$PKG_CONFIG openssl --libs-only-/$PKG_CONFIG openssl --static --libs-only-/' ./configure && \\\n    sed -i -e s/Windows.h/windows.h/ -e s/Wincrypt.h/wincrypt.h/ ./ed25519/src/seed.cpp && \\\n\n    OSXCROSS_PKG_CONFIG_PATH=${CROSS_ROOT}/lib/pkgconfig/ \\\n    CC=${CROSS_TRIPLE}-cc CXX=${CROSS_TRIPLE}-c++ \\\n    CFLAGS=\"${CFLAGS} -O2\" \\\n    CXXFLAGS=\"${CXXFLAGS} ${CFLAGS} -O2\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n        --enable-static \\\n        --disable-shared \\\n        --disable-deprecated-functions \\\n        --host=${CROSS_TRIPLE} \\\n        --prefix=${CROSS_ROOT} \\\n        --with-boost=${CROSS_ROOT} --with-boost-libdir=${CROSS_ROOT}/lib && \\\n\n    make && make install && \\\n    ${CROSS_TRIPLE}-ranlib ${CROSS_ROOT}/lib/*.a && \\\n    rm -rf `pwd`\n\n# Install SWIG\n# Need to build from >3.0.2 because Go 1.4.1\nENV SWIG_VERSION 5c57a8c877f88c9388b68067d665c63546244ba0\nRUN apt-get update && apt-get install --no-install-recommends -y automake libpcre3-dev bison yodl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -L https://github.com/swig/swig/archive/${SWIG_VERSION}.tar.gz | tar xvz && \\\n    cd swig-${SWIG_VERSION}/ && \\\n    curl -f -L https://github.com/steeve/swig/compare/swig:${SWIG_VERSION}...packed-struct-libtorrent.diff | patch -p1 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    rm -rf `pwd`\n\n# Install Golang\nENV GO_VERSION 1.4.2\nRUN cd /usr/local && \\\n    curl -f -L https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar xvz && \\\n    cd /usr/local/go/src && \\\n    CC_FOR_TARGET=${CROSS_TRIPLE}-cc CXX_FOR_TARGET=${CROSS_TRIPLE}-c++ GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 ./make.bash\nENV PATH ${PATH}:/usr/local/go/bin\n\nWORKDIR /\nRUN rm -rf /build\n"
}