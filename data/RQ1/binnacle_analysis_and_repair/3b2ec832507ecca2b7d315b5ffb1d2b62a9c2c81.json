{
  "startTime": 1674250452816,
  "endTime": 1674250452924,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 107
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nMAINTAINER Wise.io, Inc. <help@wise.io>\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV PATH /anaconda/bin:$PATH\n# For image inheritance.\nONBUILD ENV PATH /anaconda/bin:$PATH\n\n# Install packages ... change the timezone line if you're not in Pacific time\nRUN apt-get -y update && apt-get install --no-install-recommends -y wget nano locales curl unzip wget openssl libhdf5-dev libpq-dev \\\n    && apt-get clean && dpkg-reconfigure locales && locale-gen en_US.UTF-8 \\\n    && echo \"America/Los_Angeles\" > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install and setup minimal Anaconda Python distribution, then tear down temp files\nRUN wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh \\\n    && bash miniconda.sh -b -p /anaconda \\\n    && conda install scipy numpy scikit-learn nose readline pandas matplotlib seaborn dateutil ipython-notebook nltk \\\n       pip psycopg2 cython hdf5 pytables ipywidgets \\\n    && conda clean -i -l -t -y \\\n    && rm miniconda.sh\n\n# Get the pip packages and clean up\nADD requirements.txt /\nRUN pip install --no-cache-dir -r /requirements.txt && rm -rf /root/.cache/pip/*\n\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\n\n\nENV PEM_FILE /key.pem\n# $PASSWORD will get `unset` within notebook.sh, turned into an IPython style hash\nENV PASSWORD Dont make this your default\nENV USE_HTTP 1\n\n# Add current files to / and set entry point.\nADD . /workspace\nWORKDIR /workspace\nADD notebook.sh /notebook.sh\nRUN chmod a+x /notebook.sh\n\nEXPOSE 8888\n\nCMD [\"/notebook.sh\"]\n\n"
}