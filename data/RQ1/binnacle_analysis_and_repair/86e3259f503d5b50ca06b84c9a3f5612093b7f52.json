{
  "startTime": 1674252454783,
  "endTime": 1674252454894,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Marsha, a FUN LTI video provider\n#\n# Nota bene:\n#\n# this container expects two volumes for statics and media files (that will be\n# served by nginx):\n#\n# * /data/media\n# * /data/static\n#\n# Once mounted, you will need to collect static files via the eponym django\n# admin command:\n#\n#     python ./manage.py collectstatic\n#\n\n# ---- base image to inherit from ----\nFROM python:3.6-stretch as base\n\n# ---- back-end builder image ----\nFROM base as back-builder\n\n# We want the most up-to-date stable pip release\nRUN pip install --no-cache-dir --upgrade pip\n\nWORKDIR /builder\n\nCOPY src/backend/marsha src/backend/setup.* /builder/\n\nRUN mkdir /install && \\\n    pip install --no-cache-dir --prefix=/install .\n\n# ---- front-end builder image ----\nFROM node:10 as front-builder\n\nWORKDIR /app\n\nCOPY ./src/frontend /app/\n\nRUN yarn install --frozen-lockfile && \\\n    yarn build -o /dev/null && \\\n    yarn generate-translations && \\\n    yarn build --mode=production --output-path /app/marsha/static/js/ && yarn cache clean;\n\n# ---- final application image ----\nFROM base\n\n# Install gettext\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    gettext && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Copy installed python dependencies\nCOPY --from=back-builder /install /usr/local\n\n# Copy marsha application (see .dockerignore)\nCOPY . /app/\n\n# Copy front-end dependencies\nCOPY --from=front-builder /app/marsha/static /app/src/backend/marsha/static\n\nWORKDIR /app/src/backend\n\n# Gunicorn\nRUN mkdir -p /usr/local/etc/gunicorn\nCOPY docker/files/usr/local/etc/gunicorn/marsha.py /usr/local/etc/gunicorn/marsha.py\n\n# Give the \"root\" group the same permissions as the \"root\" user on /etc/passwd\n# to allow a user belonging to the root group to add new users; typically the\n# docker user (see entrypoint).\nRUN chmod g=u /etc/passwd\n\n# We wrap commands run in this container by the following entrypoint that\n# creates a user on-the-fly with the container user ID (see USER) and root group\n# ID.\nENTRYPOINT [ \"/app/bin/entrypoint\" ]\n\n# The default command runs gunicorn WSGI server\nCMD gunicorn -c /usr/local/etc/gunicorn/marsha.py marsha.wsgi:application\n\n# Un-privileged user running the application\nUSER 10000\n"
}