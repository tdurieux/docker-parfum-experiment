{
  "startTime": 1674252021775,
  "endTime": 1674252022356,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 33,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################## BASE IMAGE ######################\nFROM biocontainers/biocontainers:v1.0.0_cv4\n\n################## METADATA ######################\nLABEL base_image=\"biocontainers:v1.0.0_cv4\"\nLABEL version=\"2\"\nLABEL software=\"PyMol-Jupyter\"\nLABEL software.version=\"1.0.0\"\nLABEL about.summary=\"a portable way of interacting with PyMol via Jupyter notebook\"\nLABEL about.home=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.documentation=\"http://github.com/ocramz/jupyter-docker-pymol\"\nLABEL about.license_file=\"https://github.com/ocramz/jupyter-docker-pymol/blob/master/LICENSE\"\nLABEL about.license=\"SPDX:MIT\"\nLABEL about.tags=\"Proteomics\"\n\n################## MAINTAINER ######################\n\nMAINTAINER Marco Zocca <zoccaNO.marcoSP@gmailAM.com>\n\n# Environment variables\nENV PYMOL_VERSION_G 1.8\nENV PYMOL_VERSION 1.8.2.0\nENV PYMOL_SHA 6181024fe3f0107f57fcd02914b96747881272ade4fd0f3419784c972debce66\n\nENV TINI_VER v0.9.0\nENV TINI_SHA faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872\n\nENV MINICONDA_VER_G 3\nENV MINICONDA_VER 3.19.0\nENV MINICONDA_VER_BUMP 3.19.1\nENV MINICONDA_SHA 9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0\n\nENV NOTEBOOK_VER 4.2\nENV JUPYTERHUB_VER 0.5\n\nENV USER biodocker\n\nENV IPYNBS_DIR /home/${USER}/notebooks/iPyMol\nENV DL_DIR /home/${USER}/tmp\n\nENV CONDA_DIR /opt/conda\nENV PATH ${CONDA_DIR}/bin:${PATH}\nENV SHELL /bin/bash\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\nUSER root\n\n# Setup `biodocker` home directory\nRUN mkdir -p ${CONDA_DIR}                && \\\n    chown ${USER} ${CONDA_DIR}           && \\\n    mkdir -p ${DL_DIR}                   && \\\n    chown ${USER} ${DL_DIR}              && \\\n    mkdir -p ${IPYNBS_DIR}               && \\\n    chown ${USER} ${IPYNBS_DIR}          && \\\n    mkdir /home/${USER}/work             && \\\n    chown ${USER} /home/${USER}/work     && \\\n    mkdir /home/${USER}/.jupyter         && \\\n    chown ${USER} /home/${USER}/.jupyter && \\\n    mkdir /home/${USER}/.local           && \\\n    chown ${USER} /home/${USER}/.local   && \\\n    echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/${USER}/.curlrc && \\\n    chown ${USER} /home/${USER}/.curlrc\n\n\n# Add example notebook\nADD ipymol/ ${IPYNBS_DIR}\n\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    pkg-config \\\n    language-pack-en-base \\\n    locales &&\\\n    \\\n    echo -e \"en_US.UTF-8 UTF-8\\nLC_ALL=\\\"en_US.UTF-8\\\"\" > /etc/locale.gen && \\\n    locale-gen && \\\n    update-locale && \\\n    dpkg-reconfigure locales && \\\n    \\\n    apt-get install -y --no-install-recommends sudo \\\n    build-essential\\\n    bzip2 \\\n    ca-certificates \\\n    emacs \\\n    git \\\n    jed \\\n    libsm6 \\\n    libxrender1 \\\n    make \\\n    pandoc \\\n    python-pip \\\n    python-dev \\\n    python3 \\\n    python3-dev \\\n    python3-setuptools \\\n    python3-zmq \\\n    python3-pip \\\n    texlive-latex-base \\\n    texlive-latex-extra \\\n    texlive-fonts-extra \\\n    texlive-fonts-recommended \\\n    texlive-generic-recommended \\\n    freeglut3 \\\n    freeglut3-dev \\\n    glew-utils \\\n    liblcms2-dev \\\n    libfreetype6 \\\n    libfreetype6-dev \\\n    libglew-dev \\\n    libjpeg8-dev \\\n    libpng3 libpng12-dev \\\n    libpng-dev \\\n    libtiff5-dev \\\n    libwebp-dev \\\n    libxml2-dev \\\n    pmw \\\n    python-tk \\\n    python3-scipy \\\n    python3-nose \\\n    tcl8.5-dev \\\n    tk8.5-dev \\\n    zlib1g-dev && \\\n    \\\n    apt-get clean && \\\n    apt-get purge && \\\n    \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Use bash rather than sh\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n\nWORKDIR ${DL_DIR}\n\n# Install Tini (Jupyter dep.)\nRUN wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VER}/tini && \\\n    echo \"${TINI_SHA}  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n\n\nUSER ${USER}\n\n\n# Install conda as `biodocker`\nRUN mkdir -p ${CONDA_DIR} && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh && \\\n    echo \"${MINICONDA_SHA}  *Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh\" | sha256sum -c - && \\\n    /bin/bash Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh -f -b -p ${CONDA_DIR} && \\\n    rm Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh && \\\n    ${CONDA_DIR}/bin/conda install --quiet --yes conda==${MINICONDA_VER_BUMP} && \\\n    ${CONDA_DIR}/bin/conda config --system --add channels conda-forge && \\\n    conda clean -tipsy\n\n\n# Install Jupyter notebook as `biodocker`\nRUN conda install --quiet --yes \\\n    \"notebook=${NOTEBOOK_VER}*\" \\\n    terminado \\\n    && conda clean -tipsy\n\n\n\n# Install JupyterHub to get the jupyterhub-singleuser startup script\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir \"jupyterhub==${JUPYTERHUB_VER}\"\n\n\n\n# PyMol\nRUN wget --no-verbose https://sourceforge.net/projects/pymol/files/pymol/${PYMOL_VERSION_G}/pymol-v${PYMOL_VERSION}.tar.bz2 && \\\n    echo \"${PYMOL_SHA}  pymol-v${PYMOL_VERSION}.tar.bz2\" | sha256sum -c - && \\\n    tar jxf pymol-v${PYMOL_VERSION}.tar.bz2 && \\\n    rm pymol-v* && \\\n    cd pymol && \\\n    python3 setup.py build install && rm pymol-v${PYMOL_VERSION}.tar.bz2\n\n\n# iPyMol + dependencies\nRUN pip3 install --no-cache-dir git+https://github.com/ocramz/ipymol.git@python3\n\nUSER root\n\n# NB : Add local files as late as possible to avoid cache busting\n# Start notebook server\nCOPY jupyter-minimal-notebook/start-notebook.sh /usr/local/bin/\n# Start single-user notebook server for use with JupyterHub\nCOPY jupyter-minimal-notebook/start-singleuser.sh /usr/local/bin/\nCOPY jupyter-minimal-notebook/jupyter_notebook_config.py /home/${USER}/.jupyter/\n\nRUN chown -R ${USER}:users /home/${USER}/.jupyter\n\nRUN rm -rf ${DL_DIR}\n\n\n# Switch back to user to avoid accidental container runs as root\nUSER ${USER}\n\n\n\n# Expose port\nEXPOSE 8888\n\n# working directory\nWORKDIR /home/${USER}/data\n\n# mount shared volume\nVOLUME /home/${USER}/data\n\n\nENTRYPOINT [\"tini\", \"--\"]\n\n# command to run when Docker image is run\nCMD [\"jupyter\", \"notebook\", \"--no-browser\"]\n"
}