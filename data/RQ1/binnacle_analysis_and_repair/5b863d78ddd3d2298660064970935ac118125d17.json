{
  "startTime": 1674235999339,
  "endTime": 1674235999606,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 169
      }
    }
  ],
  "repairedDockerfile": "# Use Ruby 2.3.6 as base image\nFROM ruby:2.3.6\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install essential Linux packages\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y build-essential libpq-dev postgresql-client nodejs imagemagick sudo libxss1 libappindicator1 libindicator7 unzip memcached && rm -rf /var/lib/apt/lists/*;\n\n# Files created inside the container repect the ownership\nRUN adduser --shell /bin/bash --disabled-password --gecos \"\" consul \\\n  && adduser consul sudo \\\n  && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nRUN echo 'Defaults secure_path=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bundle/bin\"' > /etc/sudoers.d/secure_path\nRUN chmod 0440 /etc/sudoers.d/secure_path\n\nCOPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh\n\n# Define where our application will live inside the image\nENV RAILS_ROOT /var/www/consul\n\n# Create application home. App server will need the pids dir so just create everything in one shot\nRUN mkdir -p $RAILS_ROOT/tmp/pids\n\n# Set our working directory inside the image\nWORKDIR $RAILS_ROOT\n\n# Use the Gemfiles as Docker cache markers. Always bundle before copying app src.\n# (the src likely changed and we don't want to invalidate Docker's cache too early)\n# http://ilikestuffblog.com/2014/01/06/how-to-skip-bundle-install-when-deploying-a-rails-app-to-docker/\nCOPY Gemfile Gemfile\n\nCOPY Gemfile.lock Gemfile.lock\n\nCOPY Gemfile_custom Gemfile_custom\n\n# Prevent bundler warnings; ensure that the bundler version executed is >= that which created Gemfile.lock\nRUN gem install bundler\n\n# Finish establishing our Ruby environment\nRUN bundle install --full-index\n\n# Install Chromium and ChromeDriver for E2E integration tests\nRUN apt-get update -qq && apt-get install --no-install-recommends -y chromium && rm -rf /var/lib/apt/lists/*;\nRUN wget -N https://chromedriver.storage.googleapis.com/2.38/chromedriver_linux64.zip\nRUN unzip chromedriver_linux64.zip\nRUN chmod +x chromedriver\nRUN mv -f chromedriver /usr/local/share/chromedriver\nRUN ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver\nRUN ln -s /usr/local/share/chromedriver /usr/bin/chromedriver\n\n# Copy the Rails application into place\nCOPY . .\n\n# Define the script we want run once the container boots\n# Use the \"exec\" form of CMD so our script shuts down gracefully on SIGTERM (i.e. `docker stop`)\n# CMD [ \"config/containers/app_cmd.sh\" ]\nCMD [\"bundle\", \"exec\", \"rails\", \"server\", \"-b\", \"0.0.0.0\"]\n"
}