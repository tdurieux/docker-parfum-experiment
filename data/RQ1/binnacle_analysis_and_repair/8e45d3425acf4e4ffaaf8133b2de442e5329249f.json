{
  "startTime": 1674241938333,
  "endTime": 1674241938472,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM yandex/clickhouse-server\n\n# image to build & test clickhouse odbc on ubuntu & docker\n# install all needed build & test dependancies\n\n# docker build . -t clickhouse-odbc-tester\n\nRUN apt-get update -y \\\n    && env DEBIAN_FRONTEND=noninteractive \\\n    && BUILD_PACKAGES=\"build-essential ninja-build libiodbc2-dev cmake git libltdl-dev perl libdbi-perl libdbd-odbc-perl python python-pyodbc\" \\\n    && RUNTIME_PACKAGES=\"unixodbc\" \\\n    && apt-get install --no-install-recommends -y $BUILD_PACKAGES $RUNTIME_PACKAGES && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone --recursive https://github.com/yandex/clickhouse-odbc \\\n    && ( cd clickhouse-odbc/contrib && git clone https://github.com/nanodbc/nanodbc )\n\nRUN mkdir -p clickhouse-odbc/build \\\n    && cd clickhouse-odbc/build \\\n    && cmake -G Ninja -DTEST_DSN=clickhouse_localhost -DTEST_DSN_W=clickhouse_localhost_w .. \\\n    && ninja\n\nRUN ln -s /clickhouse-odbc/build/driver/libclickhouseodbc.so /usr/local/lib/libclickhouseodbc.so \\\n    && ln -s /clickhouse-odbc/build/driver/libclickhouseodbcw.so /usr/local/lib/libclickhouseodbcw.so \\\n    && echo '' >> ~/.odbc.ini \\\n    && echo '[clickhouse_localhost]' >> ~/.odbc.ini \\\n    && echo 'Driver=/usr/local/lib/libclickhouseodbc.so' >> ~/.odbc.ini \\\n    && echo 'url=http://localhost' >> ~/.odbc.ini \\\n    && echo '' >> ~/.odbc.ini \\\n    && echo '[clickhouse_localhost_w]' >> ~/.odbc.ini \\\n    && echo 'Driver=/usr/local/lib/libclickhouseodbcw.so' >> ~/.odbc.ini \\\n    && echo 'url=http://localhost' >> ~/.odbc.ini\n\n# put the test into docker-entrypoint-initdb.d to run the tests on container initialization\n# it just was the simplest\nRUN echo '#!/bin/bash' > /docker-entrypoint-initdb.d/run_ctest.sh \\\n    && echo 'cd clickhouse-odbc/build' >> /docker-entrypoint-initdb.d/run_ctest.sh \\\n    && echo 'ctest -V' >> /docker-entrypoint-initdb.d/run_ctest.sh\n\n# run the tests build time too:\nRUN bash -c '/entrypoint.sh bash -c \"echo ok\"'"
}