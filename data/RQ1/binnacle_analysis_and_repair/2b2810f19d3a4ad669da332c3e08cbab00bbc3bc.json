{
  "startTime": 1674252124161,
  "endTime": 1674252124640,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# Scanner base image for Ubuntu 16.04\n\nARG base_tag\nFROM ${base_tag}\nMAINTAINER Will Crichton \"wcrichto@cs.stanford.edu\"\nARG cores=1\nARG cpu_only=OFF\n\n# Apt-installable dependencies\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository -y ppa:git-core/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      build-essential \\\n      git libgtk2.0-dev pkg-config unzip llvm-5.0-dev clang-5.0 libc++-dev \\\n      libgflags-dev libgtest-dev libssl-dev libcurl3-dev liblzma-dev \\\n      libeigen3-dev libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev \\\n      libgflags-dev libx264-dev libopenjpeg-dev libxvidcore-dev \\\n      libpng-dev libjpeg-dev libbz2-dev python-pip wget \\\n      libleveldb-dev libsnappy-dev libhdf5-serial-dev liblmdb-dev python-dev \\\n      python-tk autoconf autogen libtool libtbb-dev libopenblas-dev \\\n      liblapacke-dev swig yasm python3.5 python3-pip cpio automake libass-dev \\\n      libfreetype6-dev libsdl2-dev libtheora-dev libtool \\\n      libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev \\\n      libxcb-xfixes0-dev mercurial texinfo zlib1g-dev curl libcap-dev \\\n      libgnutls-dev libpq-dev postgresql && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends libboost-all-dev && rm -rf /var/lib/apt/lists/*;\n\n# Non-apt-installable dependencies\nENV deps /deps\nWORKDIR ${deps}\n\n# CMake (we use 3.7 because >3.8 has issues building OpenCV due to http_proxy)\nRUN wget \"https://cmake.org/files/v3.12/cmake-3.12.2.tar.gz\" && \\\n    tar -xf cmake-3.12.2.tar.gz && cd ${deps}/cmake-3.12.2 && \\\n    ./bootstrap --parallel=${cores} -- -DCMAKE_USE_OPENSSL=ON && \\\n    make -j${cores} && \\\n    make install && \\\n    rm -rf ${deps}/cmake-3.12.2.tar.gz ${deps}/cmake-3.12.2\n\n# Python dependencies\nWORKDIR /opt/scanner-base\nADD . .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility,video\n"
}