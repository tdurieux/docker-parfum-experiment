{
  "startTime": 1674242260969,
  "endTime": 1674242261226,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedDockerfile": "FROM digitalanatomist/myupgrade\nMAINTAINER samir.jabari@fau.de\nUSER root\n# create a deep_learning_python2 environment (for OMERO-PY compatibility)\nADD docker/environment-python2-omero.yml .setup/\nRUN conda env update -n deep_learning_python2 -q -f .setup/environment-python2-omero.yml\n# Don't use this:\n#RUN /opt/conda/envs/deep_learning_python2/bin/python -m ipykernel install --user --name deep_learning_python2 &&\\\n  #  fix-permissions /home/$NB_USER &&\\\n  #  fix-permissions $CONDA_DIR\n#COPY --chown=1000:100 docker/logo-32x32.png docker/logo-64x64.png .local/share/jupyter/kernels/deep_learning_python2/\n#COPY --chown=1000:100 docker/deep_learning_python2-kernel.json .local/share/jupyter/kernels/deep_learning_python2/kernel.json\n\n#RUN /opt/conda/envs/deep_learning_python2/bin/pip install ipykernel --user --name deep_learning_python2 --display-name 'OMERO Python 2'&&\\\n\n# R-kernel and R-OMERO prerequisites\nADD docker/environment-r-omero.yml .setup/\nRUN conda env update -n r-omero -q -f .setup/environment-r-omero.yml && \\\n    /opt/conda/envs/r-omero/bin/Rscript -e \"IRkernel::installspec(displayname='OMERO R')\"\n\nRUN mkdir /opt/romero /opt/omero && \\\n    fix-permissions /opt/romero /opt/omero\n# R requires these two packages at runtime\nRUN apt-get install --no-install-recommends -y -q \\\n    libxrender1 \\\n    libsm6 && rm -rf /var/lib/apt/lists/*;\n\n\n# install rOMERO\nENV _JAVA_OPTIONS=\"-Xss2560k -Xmx2g\"\nARG ROMERO_VERSION=v0.4.2\nRUN cd /opt/romero && \\\n    curl -sf https://raw.githubusercontent.com/ome/rOMERO-gateway/$ROMERO_VERSION/install.R --output install.R && \\\n    bash -c \"source activate r-omero && Rscript install.R --version=$ROMERO_VERSION --quiet\"\n\n# OMERO full CLI\n# This currently uses the deep_learning_python2 environment, should we move it to its own?\nARG OMERO_VERSION=5.4.9\nRUN cd /opt/omero && \\\n    /opt/conda/envs/deep_learning_python2/bin/pip install -q omego && \\\n    /opt/conda/envs/deep_learning_python2/bin/omego download -q --sym OMERO.server server --release $OMERO_VERSION && \\\n    rm OMERO.server-*.zip\nADD docker/omero-bin.sh /usr/local/bin/omero\n\n#SOS\nRUN     python3.6 -m pip install pip --upgrade\nRUN     python3.6 -m pip install xlrd docker\nRUN     python3.6 -m pip install markdown wand graphviz imageio pillow\n\nRUN     conda install -y feather-format -c conda-forge\nRUN     python3.6 -m pip install nbformat --upgrade\n## trigger rerun for sos updates\nARG\t    DUMMY=unknown\nRUN     DUMMY=${DUMMY} python3.6 -m pip install sos sos-notebook sos-r sos-julia sos-python sos-matlab sos-javascript sos-bash sos-bioinfo --upgrade\nRUN     python3.6 -m sos_notebook.install\n#RUN     pip install jupyterlab\nRUN     jupyter labextension install jupyterlab-sos\n\n\n\nRUN     fix-permissions /home/$NB_USER\n        #fix-permissions $CONDA_DIR\n\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nENV CUDA_HOME=/usr/local/cuda\nENV CUDA_ROOT=$CUDA_HOME\nENV PATH=$PATH:$CUDA_ROOT/bin:$HOME/bin\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_ROOT/lib64\n\n#USER root\nUSER $NB_USER\n\nCMD [\"start-notebook.sh\", \"--allow-root\"]\n\n#COPY start-notebook.sh /usr/local/bin\n\n\n# Clone the source git repo into notebooks (keep this at the end of the file)\n#COPY --chown=1000:100 . notebooks\n"
}