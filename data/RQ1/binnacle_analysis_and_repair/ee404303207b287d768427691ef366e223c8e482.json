{
  "startTime": 1674240765040,
  "endTime": 1674240765409,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 14,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\n# Set environment variables\nENV LANG=C.UTF-8\n\n# Install stable Debian dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3.7 \\\n        python3-pip \\\n        python3-setuptools \\\n        python3-venv \\\n        unzip \\\n        curl \\\n        gettext \\\n        xz-utils \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /root/.cache/* \\\n && echo \"BASIC APT INSTALLATION IS DONE!\"\n\n# Install pip dependencies\nRUN pip3 install --no-cache-dir --upgrade \\\n        invoke~=1.0 \\\n        markupsafe \\\n        pip \\\n        poetry \\\n        psycopg2-binary \\\n        setuptools \\\n        toml \\\n        toolz \\\n        virtualenvwrapper \\\n && pip3 install --no-cache-dir sidekick \\\n && ln -s /usr/bin/python3 /usr/bin/python \\\n && ln -s /usr/bin/pip3 /usr/bin/pip \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /root/.cache/* \\\n && echo \"EXTRA PACKAGE INSTALLATION IS DONE!\"\n\n# Install node from binaries (nodejs package in Buster does not contain npm!)\nRUN curl -f https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz -o node.tar.xz \\\n && tar -xJf node.tar.xz \\\n && mv node-v8.11.3-linux-x64 node \\\n && mv /node/bin/* /usr/bin/ \\\n && mv /node/lib/node_modules /usr/lib \\\n && mv /node/include/node /usr/include \\\n && rm -rf node* \\\n && echo \"NPM INSTALLATION IS DONE!\" && rm node.tar.xz\n\n# Install global npm packages\nRUN npm install -g \\\n        yarn \\\n        parcel \\\n && echo \"NPM PACKAGES INSTALLATION IS DONE!\" && npm cache clean --force;\n\n# Set theme and environment variables\nENV DJANGO_SETTINGS_MODULE=ej.settings\nENV DJANGO_ENVIRONMENT=production\nENV PYTHONPATH=\"/app/src/:$PYTHONPATH\"\nWORKDIR /app\n\n# Install core Python deps\nCOPY ./etc/requirements-dev.txt /app/etc/requirements-dev.txt\nRUN pip3 install --no-cache-dir -r etc/requirements-dev.txt\nCOPY ./etc/requirements.txt /app/etc/requirements.txt\nRUN pip3 install --no-cache-dir -r etc/requirements.txt\n\n# Install core JS deps\nCOPY ./lib/package.json /app/lib/package.json\nRUN cd lib && npm install \\\n && echo \"INSTALLED JS DEPENDENCIES\" && npm cache clean --force;\n\n# Set environment variables from docker arguments\nARG COUNTRY=brazil\nARG HOSTNAME=localhost\nARG THEME=default\nARG UID=1000\nARG GID=1000\nENV COUNTRY=${COUNTRY}\nENV EJ_THEME=${THEME}\nENV HOSTNAME=${HOSTNAME}\n\n# Create django user\nRUN groupadd -r django -g ${GID} \\\n && useradd -r -g django django -u ${UID} \\\n && chown -R django:django /app \\\n && echo \"DJANGO USER CREATED\"\n\n# Save commit info\nARG COMMIT_TITLE=none\nARG COMMIT_HASH=none\nRUN echo \"${COMMIT_HASH}: ${COMMIT_TITLE}\" > commit.txt\n\n# Entry point defaults to inv run\nEXPOSE 8000\nENTRYPOINT [\"inv\"]\nCMD [\"bash\"]\n"
}