{
  "startTime": 1674241686178,
  "endTime": 1674241686722,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 25,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM behance/docker-nginx:8.5-alpine\nMAINTAINER Bryan Latten <latten@adobe.com>\n\n# Set TERM to suppress warning messages.\nENV CONF_PHPFPM=/etc/php7/php-fpm.conf \\\n    CONF_PHPMODS=/etc/php7/conf.d \\\n    CONF_FPMPOOL=/etc/php7/php-fpm.d/www.conf \\\n    CONF_FPMOVERRIDES=/etc/php/7.0/fpm/conf.d/overrides.user.ini \\\n    APP_ROOT=/app \\\n    SERVER_WORKER_CONNECTIONS=3072 \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=128k \\\n    SERVER_CLIENT_HEADER_BUFFER_SIZE=1k \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=128k \\\n    SERVER_LARGE_CLIENT_HEADER_BUFFERS=\"4 256k\" \\\n    PHP_FPM_MAX_CHILDREN=4096 \\\n    PHP_FPM_START_SERVERS=20 \\\n    PHP_FPM_MAX_REQUESTS=1024 \\\n    PHP_FPM_MIN_SPARE_SERVERS=5 \\\n    PHP_FPM_MAX_SPARE_SERVERS=128 \\\n    PHP_FPM_MEMORY_LIMIT=256M \\\n    PHP_FPM_MAX_EXECUTION_TIME=60 \\\n    PHP_FPM_UPLOAD_MAX_FILESIZE=1M \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=128 \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=16 \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=5 \\\n    CFG_APP_DEBUG=1\n\nRUN apk update && \\\n    apk add --no-cache \\\n      git \\\n      curl \\\n      wget \\\n      php7 \\\n      php7-bcmath \\\n      php7-bz2 \\\n      php7-fpm \\\n      php7-apcu \\\n      php7-calendar \\\n      php7-common \\\n      php7-ctype \\\n      php7-curl \\\n      php7-dom \\\n      php7-exif \\\n      php7-ftp \\\n      php7-gd \\\n      php7-gettext \\\n      php7-iconv \\\n      php7-intl \\\n      php7-json \\\n      php7-mcrypt \\\n      php7-mbstring \\\n      # php7-msgpack@edge \\\n      # php7-memcached@community \\\n      php7-mysqli \\\n      php7-mysqlnd \\\n      php7-opcache \\\n      php7-openssl \\\n      php7-pdo_pgsql \\\n      php7-pgsql \\\n      php7-pcntl \\\n      php7-pdo \\\n      php7-pdo_mysql \\\n      php7-phar \\\n      php7-posix \\\n      php7-session \\\n      php7-simplexml \\\n      php7-sockets \\\n      php7-sysvmsg \\\n      php7-sysvsem \\\n      php7-sysvshm \\\n      php7-shmop \\\n      php7-tokenizer \\\n      php7-xdebug \\\n      php7-xml \\\n      php7-xmlreader \\\n      php7-xmlwriter \\\n      php7-xsl \\\n      php7-zip \\\n      php7-zlib \\\n    && \\\n    # Disable xdebug by default \\\n    sed -i 's/zend_extension\\s\\?=/;zend_extension =/' $CONF_PHPMODS/xdebug.ini && \\\n    # Disable postgres by default \\\n    sed -i 's/extension/;extension/' $CONF_PHPMODS/01_pdo_pgsql.ini && \\\n    sed -i 's/extension/;extension/' $CONF_PHPMODS/00_pgsql.ini && \\\n    /bin/bash -e /clean.sh\n\n# Locate and install latest Alpine-compatible NewRelic, seed with variables to be replaced\n# Requires PHP to already be installed\nRUN NEWRELIC_MUSL_PATH=$( curl -f -s https://download.newrelic.com/php_agent/release/ | grep 'linux-musl.tar.gz' | cut -d '\"' -f2) && \\\n    NEWRELIC_PATH=\"https://download.newrelic.com${NEWRELIC_MUSL_PATH}\" && \\\n    curl -f -L ${NEWRELIC_PATH} -o ./root/newrelic-musl.tar.gz && \\\n    cd /root && \\\n    gzip -dc newrelic-musl.tar.gz | tar xf - && \\\n    rm newrelic-musl.tar.gz && \\\n    NEWRELIC_DIRECTORY=/root/$(basename $(find . -maxdepth 1 -type d -name newrelic\\*)) && \\\n    cd $NEWRELIC_DIRECTORY && \\\n    echo \"\\n\" | ./newrelic-install install && \\\n    chown root:root $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so && \\\n    mv $NEWRELIC_DIRECTORY/agent/x64/newrelic-20160303.so /usr/lib/php7/modules/newrelic.so && \\\n    rm -rf $NEWRELIC_DIRECTORY/agent/x64 && \\\n    # Fix permissions on extracted folder \\\n    chown -R $NOT_ROOT_USER:$NOT_ROOT_USER * && \\\n    /bin/bash -e /clean.sh\n\nRUN curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer\n\nRUN apk update && \\\n    apk add --no-cache \\\n        yaml-dev \\\n        zlib-dev \\\n        libmemcached-dev \\\n        cyrus-sasl-dev \\\n    && \\\n    apk add --no-cache --virtual .phpize_deps \\\n        autoconf file g++ gcc libc-dev make pkgconf re2c php7-dev php7-pear \\\n    && \\\n    sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $(which pecl) && \\\n    pecl install igbinary-3.0.1 && \\\n    echo \"extension=igbinary.so\" > $CONF_PHPMODS/igbinary.ini && \\\n    pecl install yaml-2.0.4 && \\\n    echo \";extension=yaml.so\" > $CONF_PHPMODS/yaml.ini && \\\n    pecl install redis-4.2.0 && \\\n    echo \";extension=redis.so\" > $CONF_PHPMODS/redis.ini && \\\n    pecl install msgpack-2.0.3 && \\\n    echo \"extension=msgpack.so\" > $CONF_PHPMODS/msgpack.ini && \\\n    pecl install memcached-3.1.3 && \\\n    echo \"extension=memcached.so\" > $CONF_PHPMODS/memcached.ini && \\\n    rm -rf /usr/share/php7 && \\\n    apk del .phpize_deps && \\\n    /bin/bash -e /clean.sh\n\n# Overlay the root filesystem from this repo\nCOPY ./container/root /\n\n# - Make additional hacks to migrate files from Ubuntu to Alpine folder structure\nRUN cp /etc/php/7.0/mods-available/* $CONF_PHPMODS && \\\n    rm $CONF_PHPMODS/00_opcache.ini && \\\n    # - Run standard set of tweaks to ensure runs performant, reliably, and consistent between variants\n    touch /var/run/lock && \\\n    chown $NOT_ROOT_USER:$NOT_ROOT_USER /var/log/php7 && \\\n    ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm && \\\n    /bin/bash -e prep-php.sh\n\nRUN goss -g /tests/php-fpm/7.2-alpine.goss.yaml validate && \\\n    /aufs_hack.sh\n"
}