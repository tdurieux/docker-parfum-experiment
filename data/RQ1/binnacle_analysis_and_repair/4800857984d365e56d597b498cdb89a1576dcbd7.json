{
  "startTime": 1674251202925,
  "endTime": 1674251203498,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 161,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 173,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 188,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 200,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 161,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 173,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 188,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 200,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 161,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 173,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 188,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 200,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 1
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 159,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 169,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 184,
        "lineEnd": 185,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 196,
        "lineEnd": 197,
        "columnStart": 4,
        "columnEnd": 1
      }
    }
  ],
  "repairedDockerfile": "ARG NODE_VERSION=${NODE_VERSION}\n\nFROM phusion/baseimage:latest\n\n# Set Environment Variables\nENV DEBIAN_FRONTEND noninteractive\n\nENV LANGUAGE=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LC_CTYPE=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV TERM xterm\n\n# Start as root\nUSER root\n\n###########################################################################\n# Bootstrapping the image:\n###########################################################################\n\nRUN locale-gen en_US.UTF-8\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential \\\n        --allow-change-held-packages \\\n        build-essential \\\n        pkg-config \\\n        libcurl4-openssl-dev \\\n        libedit-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        xz-utils \\\n        libsqlite3-dev \\\n        sqlite3 \\\n        git \\\n        curl \\\n        vim \\\n        nano \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Source the bash\nRUN . ~/.bashrc\n\n###########################################################################\n# Nodedock non-root user:\n###########################################################################\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\n# always run apt update when start and after add new source list, then clean up at end.\nRUN apt-get update -yqq && \\\n    groupadd -g ${PGID} nodedock && \\\n    useradd -u ${PUID} -g nodedock -m nodedock -G docker_env && \\\n    usermod -p \"*\" nodedock\n\n###########################################################################\n# Set Timezone\n###########################################################################\n\nARG TZ=UTC\nENV TZ ${TZ}\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n###########################################################################\n# Node / NVM:\n###########################################################################\n\nUSER nodedock\n\n# Check if NVM needs to be installed\nARG NODE_VERSION=node\nENV NODE_VERSION ${NODE_VERSION}\nARG NODE_ENV=development\nENV NODE_ENV ${NODE_ENV}\nARG INSTALL_NODE=false\nARG NPM_REGISTRY\nENV NPM_REGISTRY ${NPM_REGISTRY}\nENV NVM_DIR /home/nodedock/.nvm\n\n# Install nvm (A Node Version Manager)\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n        && . $NVM_DIR/nvm.sh \\\n        && nvm install ${NODE_VERSION} \\\n        && nvm use ${NODE_VERSION} \\\n        && nvm alias ${NODE_VERSION} \\\n        && if [ ${NPM_REGISTRY} ]; then \\\n        npm config set registry ${NPM_REGISTRY} \\\n        ;fi\n\n# Wouldn't execute when added to the RUN statement in the above block\n# Source NVM when loading bash since ~/.profile isn't loaded on non-login shell\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"$HOME/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc\n\n# Add NVM binaries to root's .bashrc\nUSER root\n\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"/home/nodedock/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc\n\n# Add PATH for node\nENV PATH $PATH:$NVM_DIR/versions/node/v${NODE_VERSION}/bin\n\nRUN if [ ${NPM_REGISTRY} ]; then \\\n    . ~/.bashrc && npm config set registry ${NPM_REGISTRY} \\\n;fi\n\n###########################################################################\n# YARN:\n###########################################################################\n\nUSER nodedock\n\nARG YARN_VERSION=latest\nENV YARN_VERSION ${YARN_VERSION}\n\nRUN [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && \\\n    if [ ${YARN_VERSION} = \"latest\" ]; then \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \\\n    else \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \\\n    fi && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"$HOME/.yarn/bin:$PATH\"' >> ~/.bashrc\n\n# Add YARN binaries to root's .bashrc\nUSER root\n\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export YARN_DIR=\"/home/nodedock/.yarn\"' >> ~/.bashrc && \\\n    echo 'export PATH=\"$YARN_DIR/bin:$PATH\"' >> ~/.bashrc\n\n###########################################################################\n# pgsql client\n###########################################################################\n\nARG INSTALL_PG_CLIENT=false\n\nRUN if [ ${INSTALL_PG_CLIENT} = true ]; then \\\n    mkdir -p /usr/share/man/man1 && \\\n    mkdir -p /usr/share/man/man7 && \\\n    # Install the pgsql client\n    apt-get install --no-install-recommends -y postgresql-client \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Human Language and Character Encoding Support:\n###########################################################################\n\nARG INSTALL_INTL=false\n\nRUN if [ ${INSTALL_INTL} = true ]; then \\\n    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# GHOSTSCRIPT:\n###########################################################################\n\nARG INSTALL_GHOSTSCRIPT=false\n\nRUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \\\n    apt-get install --no-install-recommends -y \\\n    poppler-utils \\\n    ghostscript \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n\n###########################################################################\n# Image optimizers:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGE_OPTIMIZERS=false\n\nRUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \\\n    apt-get install --no-install-recommends -y jpegoptim optipng pngquant gifsicle \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ImageMagick:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGEMAGICK=false\n\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nUSER root\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\nUSER nodedock\n\nWORKDIR /var/www\n\n# Source the bash before running npm start\nRUN . ~/.bashrc\n\nARG NPM_START_SCRIPT=start\n\nENV NPM_START_SCRIPT ${NPM_START_SCRIPT}\n\nCMD [\"sh\", \"-c\", \"npm run ${NPM_START_SCRIPT}\"]\n\nEXPOSE 9000\n"
}