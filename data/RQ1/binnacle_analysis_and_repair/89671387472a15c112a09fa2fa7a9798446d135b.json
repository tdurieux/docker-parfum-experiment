{
  "startTime": 1674245879637,
  "endTime": 1674245879691,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda-ppc64le:9.0-cudnn7-devel-ubuntu16.04\n\nLABEL maintainer=\"William Irons <wdirons@us.ibm.com>\"\n\n# In the Ubuntu 16.04 images, cudnn is placed in system paths. Move them to\n# /usr/local/cuda\nRUN cp -P /usr/include/cudnn.h /usr/local/cuda/include\nRUN cp -P /usr/lib/powerpc64le-linux-gnu/libcudnn* /usr/local/cuda/lib64\n\n# Copy and run the install scripts.\nCOPY install/*.sh /install/\nARG DEBIAN_FRONTEND=noninteractive\nRUN /install/install_bootstrap_deb_packages.sh\nRUN add-apt-repository -y ppa:openjdk-r/ppa\nRUN /install/install_deb_packages.sh\nRUN apt-get update && apt-get install --no-install-recommends -y libopenblas-dev && rm -rf /var/lib/apt/lists/*;\nRUN /install/install_hdf5_ppc64le.sh\nRUN /install/install_pip_packages.sh\nRUN /install/install_bazel_from_source.sh\nRUN /install/install_golang_ppc64le.sh\n\n# Set up the master bazelrc configuration file.\nCOPY install/.bazelrc /etc/bazel.bazelrc\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\n# Configure the build for our CUDA configuration.\nENV TF_NEED_CUDA 1\nENV TF_CUDA_COMPUTE_CAPABILITIES 3.0\n"
}