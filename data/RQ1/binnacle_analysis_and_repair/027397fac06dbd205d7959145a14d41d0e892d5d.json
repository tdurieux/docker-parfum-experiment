{
  "startTime": 1674251394826,
  "endTime": 1674251395006,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 9,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 9,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "#######\n# DEVELOPMENT IMAGE OF KOHA\n# Based on debian jessy Koha\n# USES a docker image built from GITREF from koha-salt-docker\n#######\nARG KOHA_BASE_IMAGE_TAG\nFROM digibib/koha:${KOHA_BASE_IMAGE_TAG}\n\nMAINTAINER Oslo Public Library \"digitalutvikling@gmail.com\"\n\nENV REFRESHED_AT 2018-03-05\n\n#########################\n# KOHA INSTANCE VARIABLES\n#########################\n\nENV KOHA_ADMINUSER admin\nENV KOHA_ADMINPASS secret\nENV KOHA_INSTANCE name\nENV KOHA_ZEBRAUSER zebrauser\nENV KOHA_ZEBRAPASS lkjasdpoiqrr\n\n################################\n# KOHA DEV ENVIRONMENT VARIABLES\n################################\n\nENV AUTHOR_NAME  john_doe\nENV AUTHOR_EMAIL john@doe.com\nENV BUGZ_USER    bugsquasher\nENV BUGZ_PASS    bugspass\nENV KOHA_REPO    https://github.com/Koha-Community/Koha.git\nENV GITBZ_REPO   https://github.com/digibib/git-bz.git\nENV QATOOLS_REPO https://github.com/Koha-Community/qa-test-tools.git\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    sudo apt-get install --no-install-recommends -q -y cpanminus vim net-tools git-email telnet screen wget less curl htop && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# kohadev dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y libtemplate-plugin-json-escape-perl libtext-bidi-perl libwww-csrf-perl \\\n    libdancer-perl libobject-tiny-perl libxml-libxml-simple-perl libconfig-merge-perl \\\n    libdbix-connector-perl make libtest-warnings-perl libplack-middleware-debug-perl \\\n    libsereal-encoder-perl libsereal-decoder-perl libmojolicious-plugin-openapi-perl \\\n    libsearch-elasticsearch-perl libcatmandu-marc-perl libcatmandu-store-elasticsearch-perl && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /kohadev && cd /kohadev && \\\n    git clone --depth=1 $KOHA_REPO kohaclone && \\\n    git clone $GITBZ_REPO gitbz && \\\n    cd gitbz && git checkout -b fishsoup origin/fishsoup && \\\n    ln -s /kohadev/gitbz/git-bz /usr/local/bin/git-bz\n\n\n# Global dev settings\nADD koha-common.tmpl /etc/default/koha-common\nADD plack.psgi /etc/koha/plack.psgi\n\n# Override with kohadev templates\nADD supervisord.conf.tmpl /templates/global/supervisord.conf.tmpl\nADD apache-envvars.tmpl /templates/global/apache-envvars.tmpl\nADD koha-conf.xml.tmpl /templates/instance/koha-conf.xml.tmpl\nADD apache.tmpl /templates/instance/apache.tmpl\n\nWORKDIR /root\n\n# LinkMobiblity SMS Driver - SMS modules need to be in shared perl libs\nRUN mkdir -p /usr/share/perl5/SMS/Send/NO && \\\n  cp /koha/Deichman/LinkMobilityHTTP.pm /usr/share/perl5/SMS/Send/NO/LinkMobilityHTTP.pm\n\nCOPY docker-entrypoint.sh /root/entrypoint.sh\nENTRYPOINT [\"/root/entrypoint.sh\"]\n\nEXPOSE 6001 8080 8081\n\nVOLUME [\"/kohadev\"]\n\n# Script and deps for checking if koha is up & ready (to be executed using docker exec)\nRUN apt-get install --no-install-recommends -y python-requests && apt-get clean && rm -rf /var/lib/apt/lists/*;\nCOPY docker-wait_until_ready.py /root/wait_until_ready.py\n"
}