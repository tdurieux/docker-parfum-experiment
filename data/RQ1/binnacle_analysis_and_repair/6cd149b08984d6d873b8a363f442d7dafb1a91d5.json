{
  "startTime": 1674237295883,
  "endTime": 1674237295990,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for ElastiCluster\n#\n# Copyright (c) 2018 Riccardo Murri <riccardo.murri@gmail.com>\n# Originally contributed by Hatef Monajemi, 2017\n# (see https://github.com/gc3-uzh-ch/elasticluster/pull/504#issuecomment-343693251)\n#\n# This file is part of ElastiCluster.  It can be distributed and\n# modified under the same conditions as ElastiCluster.\n#\n\nFROM python:2.7-slim\n\n\n# Prepare the image:\n# 1. move user `root`'s home to `/home` where we shall mount\n#    the corresponding host directories where user data resides\n# 2. create mountpoints for volumes\nRUN : \\\n    && mkdir -p /home /home/.ssh /home/.elasticluster \\\n    && sed -re '1s|:/root:|:/home:|' -i /etc/passwd \\\n    ;\nVOLUME /home/.ssh\nVOLUME /home/.elasticluster\n\n\n# Copy ElastiCluster sources\nCOPY ./ /home\n\n\n# Install ElastiCluster\n#\n# This happens in three stages:\n# 1. install OS-level deps of Python packages; note that we install\n#    explicitly both the development version of a library (needed by\n#    `setup.py` in some Python packages) and the DLL-only version of\n#    the same -- this is to avoid that DDLs are removed by\n#    `apt-get autoremove` later on\n# 2. install ElastiCluster and dependent Python packages (with `pip install`)\n# 3. cleanup and remove software used for installation to get a leaner image\n#\nWORKDIR /home\nRUN : \\\n    && apt-get update \\\n    && apt-get install --yes --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           g++ \\\n           gcc \\\n           libc6 libc6-dev \\\n           libexpat1 libexpat1-dev \\\n           libffi6 libffi-dev \\\n           libssl1.1 libssl-dev \\\n           make \\\n           openssh-client \\\n    && pip install --no-cache-dir -e . \\\n    && rm -rf /home/.cache \\\n    && apt-get remove --purge -y \\\n           make \\\n           g++ \\\n           gcc \\\n           libc6-dev \\\n           libexpat1-dev \\\n           libffi-dev \\\n           libssl-dev \\\n    && apt-get autoremove --yes \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt/* \\\n    && rm -rf /var/cache/debconf/*.dat-old \\\n    ;\n\n\n# Deploy adapter script (needs to be done last, otherwise it fails\n# when running Python commands above)\nCOPY ./etc/docker/sitecustomize.py /usr/local/lib/python2.7/site-packages/sitecustomize.py\n\n\n# Run this command by default\nENTRYPOINT [\"/usr/local/bin/python\", \"-m\", \"elasticluster\"]\nCMD [\"--help\"]\n"
}