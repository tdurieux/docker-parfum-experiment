{
  "startTime": 1674252905973,
  "endTime": 1674252906102,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG UID=1000\n\nVOLUME /root/go/src/github.com/skydive-project/skydive\nVOLUME /root/go/.cache/govendor\nVOLUME /root/.cache/go-build\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install software-properties-common \\\n    && add-apt-repository -y ppa:ubuntu-toolchain-r/ppa \\\n    && apt-get -y update \\\n    && apt-get -y --no-install-recommends install git make flex bison wget unzip golang libpcap0.8-dev npm \\\n         clang llvm zlib1g-dev liblzma-dev libc++-dev libc-dev linux-libc-dev libxml2-dev libvirt-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# EBPF requires llvm-6.0 clang-6.0 however the cross compulation docker image can't install them\n\nRUN PROTOC_VER=3.7.1; \\\n    ARCH=$(uname -m); \\\n    if [ $ARCH != x86_64 ]; then ARCH=${ARCH%%64*}${ARCH##*64}_64 ; fi ; \\\n    FILE=protoc-${PROTOC_VER}-linux-${ARCH}.zip; \\\n    wget --no-verbose https://github.com/google/protobuf/releases/download/v${PROTOC_VER}/${FILE} \\\n    && unzip ${FILE} \\\n    && mv bin/protoc /usr/bin/ \\\n    && mv include/google /usr/include \\\n    && rm \"${FILE}\"\n\nRUN mkdir -p /root/go/bin && chmod a+wrx /root/go/bin\n\nRUN arch=\"$(dpkg --print-architecture)\" \\\n    && wget --no-verbose -O /gosu \"https://github.com/tianon/gosu/releases/download/1.11/gosu-${arch##*-}\" \\\n    && chmod a+x /gosu\n\nENV UID=$UID\n\nRUN chown -R $UID /root/\nWORKDIR /root/go/src/github.com/skydive-project/skydive\n\nCMD chown -R $UID /root/go/.cache/govendor \\\n    && chown -R $UID /root/.cache/go-build \\\n    && /gosu $UID env \\\n    HOME=/root \\\n    GOPATH=/root/go \\\n    PATH=/root/go/bin:$PATH \\\n    CGO_ENABLED=1 \\\n    GOOS=linux \\\n    make install WITH_OPENCONTRAIL=true WITH_EBPF=true\n"
}