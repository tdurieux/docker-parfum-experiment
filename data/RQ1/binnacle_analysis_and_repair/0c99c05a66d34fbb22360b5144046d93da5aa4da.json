{
  "startTime": 1674253016222,
  "endTime": 1674253016563,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 12,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "ARG BUILD_FROM\nFROM $BUILD_FROM\nLABEL maintainer=\"Michael Hansen <hansen.mike@gmail.com>\"\n\nARG BUILD_ARCH\nARG CPU_ARCH\nENV LANG C.UTF-8\n\nARG MAKE_THREADS=4\n\nWORKDIR /\n\nCOPY etc/qemu-arm-static /usr/bin/\nCOPY etc/qemu-aarch64-static /usr/bin/\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y bash jq unzip \\\n                       python3 python3-pip python3-dev \\\n                       build-essential portaudio19-dev swig \\\n                       libfst-dev libfst-tools \\\n                       libatlas-base-dev \\\n                       sox espeak flite alsa-utils \\\n                       git curl \\\n                       autoconf libtool automake bison \\\n                       sphinxbase-utils sphinxtrain && rm -rf /var/lib/apt/lists/*;\n\nCOPY download/phonetisaurus-2019_${BUILD_ARCH}.deb /phonetisaurus.deb\nRUN dpkg -i /phonetisaurus.deb && \\\n    rm /phonetisaurus.deb\n\n# Install Opengrm\nCOPY download/opengrm-ngram-1.3.3.tar.gz /\nRUN cd / && tar -xf opengrm-ngram-1.3.3.tar.gz && \\\n    cd opengrm-ngram-1.3.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $MAKE_THREADS && \\\n    make install && \\\n    ldconfig && \\\n    rm -rf /opengrm* && rm opengrm-ngram-1.3.3.tar.gz\n\n# Install Python dependencies\nRUN python3 -m pip install --no-cache-dir wheel\n\nCOPY download/jsgf2fst-0.1.0.tar.gz \\\n     /download/\n\nRUN apt-get install --no-install-recommends -y libfreetype6-dev libpng-dev pkg-config libffi-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\nCOPY requirements.txt /requirements.txt\nRUN if [ \"$BUILD_ARCH\" != \"amd64\" ]; then \\\n    grep -v flair /requirements.txt > /requirements-noflair.txt; \\\n    mv /requirements-noflair.txt /requirements.txt; \\\n    fi\nRUN python3 -m pip install --no-cache-dir -r /requirements.txt\n\n# Install Pocketsphinx Python module with no sound\nCOPY download/pocketsphinx-python.tar.gz /\nRUN python3 -m pip install --no-cache-dir /pocketsphinx-python.tar.gz && \\\n    rm -rf /pocketsphinx-python*\n\n# Install snowboy\nCOPY download/snowboy-1.3.0.tar.gz /\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ]; then pip3 install --no-cache-dir /snowboy-1.3.0.tar.gz; fi\n\n# Install Mycroft Precise\nCOPY download/precise-engine_0.3.0_${CPU_ARCH}.tar.gz /precise-engine.tar.gz\nRUN if [ \"$BUILD_ARCH\" != \"aarch64\" ]; then \\\n    cd / && tar -xzf /precise-engine.tar.gz && \\\n    ln -s /precise-engine/precise-engine /usr/bin/precise-engine && \\\n    rm /precise-engine.tar.gz; \\\n    fi\n\nRUN apt-get install --no-install-recommends -y flite libttspico-utils && rm -rf /var/lib/apt/lists/*;\n\nCOPY download/kaldi_${BUILD_ARCH}.tar.gz /kaldi.tar.gz\nRUN mkdir -p /opt && \\\n    tar -C /opt -xzf /kaldi.tar.gz && \\\n    rm /kaldi.tar.gz\n\nRUN ldconfig\n\n# Copy bw and mllr_solve to /usr/bin\nRUN find / -name bw -exec cp '{}' /usr/bin/ \\;\nRUN find / -name mllr_solve -exec cp '{}' /usr/bin/ \\;\n\nENV RHASSPY_APP /usr/share/rhasspy\n\n# Copy script to run\nCOPY docker/run.sh /run.sh\nRUN chmod +x /run.sh\n\n\n\nCOPY profiles/zh/profile.json \\\n     profiles/zh/custom_words.txt \\\n     profiles/zh/espeak_phonemes.txt \\\n     profiles/zh/phoneme_examples.txt \\\n     profiles/zh/frequent_words.txt \\\n     profiles/zh/sentences.ini \\\n     profiles/zh/stop_words.txt ${RHASSPY_APP}/profiles/zh/\n\nCOPY profiles/hi/ \\\n     profiles/hi/profile.json \\\n     profiles/hi/custom_words.txt \\\n     profiles/hi/espeak_phonemes.txt \\\n     profiles/hi/phoneme_examples.txt \\\n     profiles/hi/frequent_words.txt \\\n     profiles/hi/sentences.ini \\\n     profiles/hi/stop_words.txt ${RHASSPY_APP}/profiles/hi/\n\nCOPY profiles/el/profile.json \\\n     profiles/el/custom_words.txt \\\n     profiles/el/espeak_phonemes.txt \\\n     profiles/el/phoneme_examples.txt \\\n     profiles/el/frequent_words.txt \\\n     profiles/el/sentences.ini \\\n     profiles/el/stop_words.txt ${RHASSPY_APP}/profiles/el/\n\nCOPY profiles/de/profile.json \\\n     profiles/de/custom_words.txt \\\n     profiles/de/espeak_phonemes.txt \\\n     profiles/de/phoneme_examples.txt \\\n     profiles/de/frequent_words.txt \\\n     profiles/de/sentences.ini \\\n     profiles/de/stop_words.txt ${RHASSPY_APP}/profiles/de/\n\nCOPY profiles/it/profile.json \\\n     profiles/it/custom_words.txt \\\n     profiles/it/espeak_phonemes.txt \\\n     profiles/it/phoneme_examples.txt \\\n     profiles/it/frequent_words.txt \\\n     profiles/it/sentences.ini \\\n     profiles/it/stop_words.txt ${RHASSPY_APP}/profiles/it/\n\nCOPY profiles/es/profile.json \\\n     profiles/es/custom_words.txt \\\n     profiles/es/espeak_phonemes.txt \\\n     profiles/es/phoneme_examples.txt \\\n     profiles/es/frequent_words.txt \\\n     profiles/es/sentences.ini \\\n     profiles/es/stop_words.txt ${RHASSPY_APP}/profiles/es/\n\nCOPY profiles/fr/profile.json \\\n     profiles/fr/custom_words.txt \\\n     profiles/fr/espeak_phonemes.txt \\\n     profiles/fr/phoneme_examples.txt \\\n     profiles/fr/frequent_words.txt \\\n     profiles/fr/sentences.ini \\\n     profiles/fr/stop_words.txt ${RHASSPY_APP}/profiles/fr/\n\nCOPY profiles/ru/profile.json \\\n     profiles/ru/custom_words.txt \\\n     profiles/ru/espeak_phonemes.txt \\\n     profiles/ru/phoneme_examples.txt \\\n     profiles/ru/frequent_words.txt \\\n     profiles/ru/sentences.ini \\\n     profiles/ru/stop_words.txt ${RHASSPY_APP}/profiles/ru/\n\nCOPY profiles/nl/profile.json \\\n     profiles/nl/custom_words.txt \\\n     profiles/nl/espeak_phonemes.txt \\\n     profiles/nl/phoneme_examples.txt \\\n     profiles/nl/frequent_words.txt \\\n     profiles/nl/sentences.ini \\\n     profiles/nl/stop_words.txt ${RHASSPY_APP}/profiles/nl/\n\nCOPY profiles/vi/profile.json \\\n     profiles/vi/custom_words.txt \\\n     profiles/vi/espeak_phonemes.txt \\\n     profiles/vi/phoneme_examples.txt \\\n     profiles/vi/frequent_words.txt \\\n     profiles/vi/sentences.ini \\\n     profiles/vi/stop_words.txt ${RHASSPY_APP}/profiles/vi/\n\nCOPY profiles/pt/profile.json \\\n     profiles/pt/custom_words.txt \\\n     profiles/pt/espeak_phonemes.txt \\\n     profiles/pt/phoneme_examples.txt \\\n     profiles/pt/frequent_words.txt \\\n     profiles/pt/sentences.ini \\\n     profiles/pt/stop_words.txt ${RHASSPY_APP}/profiles/pt/\n\nCOPY profiles/en/profile.json \\\n     profiles/en/custom_words.txt \\\n     profiles/en/espeak_phonemes.txt \\\n     profiles/en/phoneme_examples.txt \\\n     profiles/en/frequent_words.txt \\\n     profiles/en/sentences.ini \\\n     profiles/en/stop_words.txt ${RHASSPY_APP}/profiles/en/\n\nCOPY profiles/defaults.json ${RHASSPY_APP}/profiles/\nCOPY docker/rhasspy ${RHASSPY_APP}/bin/\nCOPY dist/ ${RHASSPY_APP}/dist/\nCOPY etc/wav/* ${RHASSPY_APP}/etc/wav/\nCOPY rhasspy/profile_schema.json ${RHASSPY_APP}/rhasspy/\nCOPY *.py ${RHASSPY_APP}/\nCOPY rhasspy/*.py ${RHASSPY_APP}/rhasspy/\n\nENV CONFIG_PATH /data/options.json\n\nENTRYPOINT [\"/run.sh\"]"
}