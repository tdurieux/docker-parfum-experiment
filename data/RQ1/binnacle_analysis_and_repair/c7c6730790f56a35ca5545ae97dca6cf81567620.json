{
  "startTime": 1674251218753,
  "endTime": 1674251218793,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To run:\n# docker build -t redoc .\n# docker run -it --rm -p 80:80 -e SPEC_URL='http://localhost:8000/swagger.yaml' redoc\n# Ensure http://localhost:8000/swagger.yaml is served with cors. A good solution is:\n# npm i -g http-server\n# http-server -p 8000 --cors\n\nFROM node:alpine\n\nRUN apk update && apk add --no-cache git\n\n# Install dependencies\nWORKDIR /build\nCOPY package.json yarn.lock /build/\nRUN yarn install --frozen-lockfile --ignore-optional --ignore-scripts && yarn cache clean;\n\n# copy only required for the build files\nCOPY src /build/src\nCOPY webpack.config.ts tsconfig.json custom.d.ts /build/\nCOPY typings/styled-patch.d.ts /build/typings/styled-patch.d.ts\n\nRUN npm run bundle:standalone\n\nFROM nginx:alpine\n\nENV PAGE_TITLE=\"ReDoc\"\nENV PAGE_FAVICON=\"favicon.png\"\nENV SPEC_URL=\"http://petstore.swagger.io/v2/swagger.json\"\nENV PORT=80\nENV REDOC_OPTIONS=\n\n# copy files to the nginx folder\nCOPY --from=0 build/bundles /usr/share/nginx/html\nCOPY config/docker/index.tpl.html /usr/share/nginx/html/index.html\nCOPY demo/favicon.png /usr/share/nginx/html/\nCOPY config/docker/nginx.conf /etc/nginx/\nCOPY config/docker/docker-run.sh /usr/local/bin\n\nEXPOSE 80\n\nCMD [\"sh\", \"/usr/local/bin/docker-run.sh\"]\n"
}