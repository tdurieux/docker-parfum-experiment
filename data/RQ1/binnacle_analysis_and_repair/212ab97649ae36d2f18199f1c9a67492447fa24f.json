{
  "startTime": 1674244555695,
  "endTime": 1674244555843,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 9,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 20,
        "columnStart": 9,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 9,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 20,
        "columnStart": 9,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM        apiaryio/base-dev-nodejs\nMAINTAINER  Apiary <sre@apiary.io>\n\nENV REFRESHED_AT 2015-09-21\n\nRUN npm install -g aglio && npm cache clean --force;\nRUN sudo mkdir -p /doc\n\nRUN sudo apt-get update -qqy && \\\n    sudo apt-get install --no-install-recommends -y software-properties-common python-software-properties && \\\n    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && \\\n    sudo apt-get update -y && \\\n    sudo apt-get install --no-install-recommends -y \\\n      gcc-4.7 \\\n      g++-4.7 \\\n      gdb \\\n      build-essential \\\n      git-core \\\n      ruby \\\n      ruby-dev \\\n      bundler && \\\n    sudo apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"gem: --no-ri --no-rdoc\" > ~/.gemrc\n\nRUN git clone --recursive https://github.com/apiaryio/drafter.git /tmp/drafter\nRUN cd /tmp/drafter && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && sudo make install\n\nCMD bash\n"
}