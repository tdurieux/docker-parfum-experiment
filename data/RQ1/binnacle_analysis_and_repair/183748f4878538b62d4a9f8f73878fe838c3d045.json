{
  "startTime": 1674250686000,
  "endTime": 1674250686346,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION=2.6\nARG ALPINE_VERSION=3.8\nFROM ruby:${RUBY_VERSION}-alpine${ALPINE_VERSION} AS aquarium\nRUN apk update && apk add --no-cache \\\n    bind-tools \\\n    build-base \\\n    file \\\n    git \\\n    imagemagick \\\n    iptables \\\n    libxml2 \\\n    libxslt \\\n    mariadb-dev \\\n    mysql-client \\\n    nodejs \\\n    nodejs-npm \\\n    openjdk8-jre \\\n    sqlite-dev \\\n    yarn\n\nRUN mkdir /aquarium\n\n# directories used by puma configuration in production\nRUN mkdir -p /aquarium/shared/sockets\nRUN mkdir -p /aquarium/shared/log\nRUN mkdir -p /aquarium/shared/pids\n\nWORKDIR /aquarium\n\n# install js components\nCOPY package.json ./package.json\nCOPY yarn.lock ./yarn.lock\nRUN yarn install --modules-folder public/node_modules && yarn cache clean\n\n# Change where bundler puts gems\n# see https://bundler.io/v2.0/guides/bundler_docker_guide.html\nENV GEM_HOME=\"/usr/local/bundle\"\nENV PATH $GEM_HOME/bin:$GEM_HOME/gems/bin:$PATH\n\n# Install gems needed by Aquarium\nCOPY Gemfile Gemfile.lock ./\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\n# rails 4.2.11.1 requires bundler < 2.0\nRUN gem install bundler --version '< 2.0' && \\\n    bundle install --jobs 20 --retry 5\nCOPY . ./\n\n# include entrypoint scripts for starting Aquarium and Krill\nRUN chmod +x ./docker/aquarium-entrypoint.sh\nRUN chmod +x ./docker/krill-entrypoint.sh\n"
}