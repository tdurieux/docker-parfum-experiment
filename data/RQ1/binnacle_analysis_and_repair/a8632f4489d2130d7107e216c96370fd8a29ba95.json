{
  "startTime": 1674234827052,
  "endTime": 1674234827350,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 58,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 81,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nLABEL maintainer \"brad@bradchoate.com\"\nENV PYTHONUNBUFFERED 1\n\n# Installs the base system dependencies for running the site.\n# None of this will change with the codebase itself, so this\n# whole layer and steps to build it should be cached.\nRUN apt-get -y update && apt-get install --no-install-recommends -y \\\n        supervisor \\\n        libmysqlclient-dev \\\n        mysql-client \\\n        python-dev \\\n        libjpeg-dev \\\n        libcurl4-openssl-dev \\\n        curl \\\n        wget \\\n        vim \\\n        htop \\\n        libpcre3 \\\n        libpcre3-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        ruby-sass \\\n        python-pip && \\\n    rm -rf /var/lib/apt/lists/* && \\\n\n    pip install --no-cache-dir -U pip setuptools distribute && \\\n    # fixes a weird issue where distribute complains about setuptools \"0.7\"\n    # (incorrectly matching version \"20.7.0\" which ubuntu 16.04 has preinstalled)\n    rm -rf /usr/lib/python2.7/dist-packages/setuptools-20.7.0.egg-info && \\\n\n    # install nginx + upload module\n    mkdir -p /tmp/install && \\\n    cd /tmp/install && \\\n    wget https://nginx.org/download/nginx-0.8.55.tar.gz && tar zxf nginx-0.8.55.tar.gz && \\\n    wget https://github.com/fdintino/nginx-upload-module/archive/2.2.0.tar.gz && tar zxf 2.2.0.tar.gz && \\\n    cd /tmp/install/nginx-0.8.55 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-http_ssl_module \\\n        --with-http_stub_status_module \\\n        --with-pcre \\\n        --sbin-path=/usr/sbin/nginx \\\n        --pid-path=/run/nginx.pid \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/srv/mltshp.com/nginx-error.log \\\n        --http-log-path=/srv/mltshp.com/nginx-access.log \\\n        --add-module=/tmp/install/nginx-upload-module-2.2.0 && \\\n    make && make install && \\\n    mkdir -p /etc/nginx && \\\n    rm -rf /tmp/install && \\\n    groupadd ubuntu --gid=1010 && \\\n    useradd ubuntu --create-home --home-dir=/home/ubuntu \\\n        --uid=1010 --gid=1010 && \\\n    mkdir -p /mnt/tmpuploads/0 /mnt/tmpuploads/1 /mnt/tmpuploads/2  \\\n        /mnt/tmpuploads/3 /mnt/tmpuploads/4 /mnt/tmpuploads/5 \\\n        /mnt/tmpuploads/6 /mnt/tmpuploads/7 /mnt/tmpuploads/8 \\\n        /mnt/tmpuploads/9 && \\\n    chmod 777 /mnt/tmpuploads/* && \\\n    mkdir -p /srv/mltshp.com/uploaded /srv/mltshp.com/logs && \\\n    chown -R ubuntu:ubuntu /srv/mltshp.com && rm nginx-0.8.55.tar.gz\n\n# Install python dependencies which will be cached on the\n# contents of requirements.txt:\nCOPY requirements.txt /tmp\nRUN pip install --no-cache-dir -r /tmp/requirements.txt && rm /tmp/requirements.txt\n\n# Copy configuration settings into place\nCOPY setup/production/supervisord-web.conf /etc/supervisor/conf.d/mltshp.conf\nCOPY setup/production/nginx.conf /etc/nginx/nginx.conf\n\n# Add \".\" for the app code itself (also allows for local dev)\nADD . /srv/mltshp.com/mltshp\nWORKDIR /srv/mltshp.com/mltshp\n\n# Compile sass files\nRUN sass --update --stop-on-error --style compressed static/sass:static/css\n\nEXPOSE 80\nCMD [\"/usr/bin/supervisord\"]\n"
}