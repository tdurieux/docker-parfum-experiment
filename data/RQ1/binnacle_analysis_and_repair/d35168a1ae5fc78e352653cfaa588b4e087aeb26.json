{
  "startTime": 1674241314737,
  "endTime": 1674241315034,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 1,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:5.6.8-fpm\nMAINTAINER Matt Glaman <nmd.matt@gmail.com>\n# Install modules\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng12-dev \\\n        libxml2-dev \\\n    && docker-php-ext-install mcrypt pdo_mysql mysql mysqli mbstring opcache soap bcmath \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install gd && rm -rf /var/lib/apt/lists/*;\n\n# Make memcache available\nRUN curl -f -L -o /root/memcache.tgz https://pecl.php.net/get/memcache-3.0.6.tgz && \\\n\tcd /root && \\\n\ttar -zxvf memcache.tgz && \\\n\tcd /root/memcache-3.0.6 && \\\n\t/usr/local/bin/phpize && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/bin/php-config && \\\n\tmake && \\\n\tmake install && \\\n\tcd /root && \\\n\trm -fr /root/memcache-3.0.6 && \\\n\trm -fr /root/memcache.tgz\n\n# Setup xdebug\nRUN curl -f -L -o /root/xdebug.tgz https://pecl.php.net/get/xdebug-2.3.2.tgz && \\\n\tcd /root && \\\n\ttar -zxvf xdebug.tgz && \\\n\tcd /root/xdebug-2.3.2 && \\\n\t/usr/local/bin/phpize && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug --with-php-config=/usr/local/bin/php-config && \\\n\tmake && \\\n\tmake install && \\\n\tcd /root && \\\n\trm -fr /root/xdebug-2.3.2 && \\\n\trm -fr /root/xdebug.tgz\n\n# Setup xhprof\nRUN curl -f -L -o /root/xhprof.tgz https://pecl.php.net/get/xhprof-0.9.4.tgz && \\\n    cd /root && \\\n    tar -zxvf xhprof.tgz && \\\n    cd /root/xhprof-0.9.4/extension && \\\n    /usr/local/bin/phpize && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/bin/php-config && \\\n    make && \\\n    make install && \\\n    cd /root && \\\n    rm -fr /root/xhprof-0.9.4.tgz && \\\n    rm -fr /root/xhprof.tgz\n\n# Setup redis\nRUN pecl install redis\n\nRUN export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\"` \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION} \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\"`/blackfire.so \\\n    && echo \"extension=blackfire.so\\nblackfire.agent_socket=\\${BLACKFIRE_PORT}\" > $PHP_INI_DIR/conf.d/blackfire.ini && rm /tmp/blackfire-probe.tar.gz\n\nCMD [\"php-fpm\"]\n"
}