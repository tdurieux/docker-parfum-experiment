{
  "startTime": 1674234635449,
  "endTime": 1674234635862,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 36,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 41,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 36,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 41,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\n\n# CUDA includes\nENV CUDA_PATH /usr/local/cuda\nENV CUDA_INCLUDE_PATH /usr/local/cuda/include\nENV CUDA_LIBRARY_PATH /usr/local/cuda/lib64\n\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\n\nENV CUDNN_VERSION 6.0.20\nRUN apt-get update && apt-get install -y --allow-unauthenticated --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         ca-certificates \\\n         libjpeg-dev \\\n         libpng-dev \\\n         libcudnn6=$CUDNN_VERSION-1+cuda8.0 \\\n         libcudnn6-dev=$CUDNN_VERSION-1+cuda8.0 && \\\n     rm -rf /var/lib/apt/lists/*\n\n### From previous Docker template\n# Ubuntu Packages\nRUN apt-get update && apt-get update -y --allow-unauthenticated && \\\n    apt-get install --no-install-recommends -y --allow-unauthenticated \\\n    software-properties-common \\\n    apt-utils \\\n    nano \\\n    vim \\\n    man \\\n    build-essential \\\n    wget \\\n    sudo \\\n    git \\\n    mercurial \\\n    subversion && \\\n    rm -rf /var/lib/apt/lists/* \\ \n    nvidia-profiler# --no-install-recommends\t\n\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y wget bzip2 ca-certificates \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 \\\n    git mercurial subversion && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl grep sed dpkg && \\\n    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n    curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n    dpkg -i tini.deb && \\\n    rm tini.deb && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV PATH /opt/conda/bin:$PATH\nRUN apt-get update --fix-missing && sudo apt-get install --no-install-recommends -y libgl1-mesa-dev libgl1-mesa-glx libosmesa6-dev libglfw3-dev && rm -rf /var/lib/apt/lists/*;\n\n## Miniconda end\n\nRUN conda create -y --name pytorch-py36 python=3.6.3 numpy pyyaml scipy ipython mkl\n\n# RUN pip install line_profiler\nRUN conda install pytorch torchvision cuda80 -c pytorch\nRUN conda install -y mpi4py opencv\nRUN pip install --no-cache-dir gym gym[atari] pandas hashfs pydevd remote_pdb rpdb matplotlib visdom\nRUN pip install --no-cache-dir sacred GitPython pymongo tinydb tinydb-serialization tensorflow pptree progressbar2 ipdb namedlist pyyaml cython\n\nRUN pip install --no-cache-dir -e git+https://github.com/openai/mujoco-py.git#egg=mujoco_py\nRUN pip install --no-cache-dir -e git+https://github.com/openai/baselines.git#egg=baselines\nRUN pip install --no-cache-dir 'gym[atari]'\n\n# WORKDIR /workspace\n# RUN chmod -R a+w /workspace\n\n# Section to get permissions right, and avoid running inside as root {{\n    # Create a user matching the UID, and create/chmod home dir (== project directory)\n    # (uid corresponds to breord in CS network)\n    RUN useradd -d /project -u <<UID>> --create-home user\n    USER user\n    WORKDIR /project/\n    ADD . /project/\n\nENV PYTHONPATH \"$PYTHONPATH:/project/\"\n\nENTRYPOINT [\"/opt/conda/bin/python\"]\n"
}