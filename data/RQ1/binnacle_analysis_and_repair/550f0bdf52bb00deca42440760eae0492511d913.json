{
  "startTime": 1674239589438,
  "endTime": 1674239589953,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10\n\n# alpine includes \"postgres\" user/group in base install\n#   /etc/passwd:22:postgres:x:70:70::/var/lib/postgresql:/bin/sh\n#   /etc/group:34:postgres:x:70:\n# the home directory for the postgres user, however, is not created by default\n# see https://github.com/docker-library/postgres/issues/274\nRUN set -ex; \\\n\tpostgresHome=\"$(getent passwd postgres)\"; \\\n\tpostgresHome=\"$(echo \"$postgresHome\" | cut -d: -f6)\"; \\\n\t[ \"$postgresHome\" = '/var/lib/postgresql' ]; \\\n\tmkdir -p \"$postgresHome\"; \\\n\tchown -R postgres:postgres \"$postgresHome\"\n\n# su-exec (gosu-compatible) is installed further down\n\n# make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\n# alpine doesn't require explicit locale-file generation\nENV LANG en_US.utf8\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nENV PG_MAJOR 9.4\nENV PG_VERSION 9.4.23\nENV PG_SHA256 0d009c08b0c82b12484950bba10ae8bfd6f0c7bafd8f086ab756c483dd231d9b\n\nRUN set -ex \\\n\t\\\n\t&& apk add --no-cache --virtual .fetch-deps \\\n\t\tca-certificates \\\n\t\topenssl \\\n\t\ttar \\\n\t\\\n\t&& wget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\" \\\n\t&& echo \"$PG_SHA256  *postgresql.tar.bz2\" | sha256sum -c - \\\n\t&& mkdir -p /usr/src/postgresql \\\n\t&& tar \\\n\t\t--extract \\\n\t\t--file postgresql.tar.bz2 \\\n\t\t--directory /usr/src/postgresql \\\n\t\t--strip-components 1 \\\n\t&& rm postgresql.tar.bz2 \\\n\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tbison \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\tflex \\\n\t\tgcc \\\n#\t\tkrb5-dev \\\n\t\tlibc-dev \\\n\t\tlibedit-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n#\t\topenldap-dev \\\n\t\topenssl-dev \\\n# configure: error: prove not found\n\t\tperl-utils \\\n# configure: error: Perl module IPC::Run is required to run TAP tests\n\t\tperl-ipc-run \\\n#\t\tperl-dev \\\n#\t\tpython-dev \\\n#\t\tpython3-dev \\\n#\t\ttcl-dev \\\n\t\tutil-linux-dev \\\n\t\tzlib-dev \\\n\n\t&& cd /usr/src/postgresql \\\n# update \"DEFAULT_PGSOCKET_DIR\" to \"/var/run/postgresql\" (matching Debian)\n# see https://anonscm.debian.org/git/pkg-postgresql/postgresql.git/tree/debian/patches/51-default-sockets-in-var.patch?id=8b539fcb3e093a521c095e70bdfa76887217b89f\n\t&& awk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new \\\n\t&& grep '/var/run/postgresql' src/include/pg_config_manual.h.new \\\n\t&& mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n# explicitly update autoconf config.guess and config.sub so they support more arches/libcs\n\t&& wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb' \\\n\t&& wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb' \\\n# configure options taken from:\n# https://anonscm.debian.org/cgit/pkg-postgresql/postgresql.git/tree/debian/rules?h=9.5\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n# \"/usr/src/postgresql/src/backend/access/common/tupconvert.c:105: undefined reference to `libintl_gettext'\"\n#\t\t--enable-nls \\\n\t\t--enable-integer-datetimes \\\n\t\t--enable-thread-safety \\\n\t\t--enable-tap-tests \\\n# skip debugging info -- we want tiny size instead\n#\t\t--enable-debug \\\n\t\t--disable-rpath \\\n\t\t--with-uuid=e2fs \\\n\t\t--with-gnu-ld \\\n\t\t--with-pgport=5432 \\\n\t\t--with-system-tzdata=/usr/share/zoneinfo \\\n\t\t--prefix=/usr/local \\\n\t\t--with-includes=/usr/local/include \\\n\t\t--with-libraries=/usr/local/lib \\\n\t\t\\\n# these make our image abnormally large (at least 100MB larger), which seems uncouth for an \"Alpine\" (ie, \"small\") variant :)\n#\t\t--with-krb5 \\\n#\t\t--with-gssapi \\\n#\t\t--with-ldap \\\n#\t\t--with-tcl \\\n#\t\t--with-perl \\\n#\t\t--with-python \\\n#\t\t--with-pam \\\n\t\t--with-openssl \\\n\t\t--with-libxml \\\n\t\t--with-libxslt \\\n\t&& make -j \"$(nproc)\" world \\\n\t&& make install-world \\\n\t&& make -C contrib install \\\n\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .postgresql-rundeps \\\n\t\t$runDeps \\\n\t\tbash \\\n\t\tsu-exec \\\n# tzdata is optional, but only adds around 1Mb to image size and is recommended by Django documentation:\n# https://docs.djangoproject.com/en/1.10/ref/databases/#optimizing-postgresql-s-configuration\n\t\ttzdata \\\n\t&& apk del .fetch-deps .build-deps \\\n\t&& cd / \\\n\t&& rm -rf \\\n\t\t/usr/src/postgresql \\\n\t\t/usr/local/share/doc \\\n\t\t/usr/local/share/man \\\n\t&& find /usr/local -name '*.a' -delete\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample\n\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql\n\nENV PGDATA /var/lib/postgresql/data\n# this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)\nRUN mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\"\nVOLUME /var/lib/postgresql/data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 5432\nCMD [\"postgres\"]\n"
}