{
  "startTime": 1674243564538,
  "endTime": 1674243564914,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 17,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN set -eux; \\\n\tif [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \\\n# if this file exists, we're likely in \"debian:xxx-slim\", and locales are thus being excluded so we need to remove that exclusion (since we need locales)\n\t\tgrep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \\\n\t\tsed -ri '/\\/usr\\/share\\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \\\n\t\t! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \\\n\tfi; \\\n\tapt-get update; apt-get install --no-install-recommends -y locales; rm -rf /var/lib/apt/lists/*; \\\n\tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\n# install \"nss_wrapper\" in case we need to fake \"/etc/passwd\" and \"/etc/group\" (especially for OpenShift)\n# https://github.com/docker-library/postgres/issues/359\n# https://cwrap.org/nss_wrapper.html\n\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends ca-certificates curl locales dirmngr gnupg gosu libnss-wrapper && \\\n\tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && \\\n\techo \"debconf debconf/frontend select Noninteractive\" | debconf-set-selections && rm -rf /var/lib/apt/lists/*;\n\n# explicitly set user/group IDs\nRUN gosu nobody true && \\\n\tgroupadd -r postgres --gid=999 && \\\n\tuseradd -r -g postgres --uid=999 postgres\n\nENV LANG=en_US.UTF-8 \\\n\tLC_ALL=en_US.UTF-8 \\\n\tPG_MAJOR=10 \\\n\tPGDATA=/var/lib/postgresql/data\n\nRUN key=\"B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \\\n\trm -rf \"$GNUPGHOME\" && \\\n\techo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list; \\\n\techo \"deb-src http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" >> /etc/apt/sources.list.d/pgdg.list; \\\n\tapt-get update\n\nRUN apt-get install --no-install-recommends -y postgresql-common postgresql-10 && \\\n\tsed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=$PATH:/usr/lib/postgresql/$PG_MAJOR/bin\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n\t&& ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n\t&& sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\n\nRUN mkdir /docker-entrypoint-initdb.d && \\\n\tmkdir -p /var/run/postgresql && \\\n\tchown -R postgres:postgres /var/run/postgresql && \\\n\tchmod 2777 /var/run/postgresql && \\\n\tmkdir -p \"$PGDATA\" && \\\n\tchown -R postgres:postgres \"$PGDATA\" \\\n\t&& chmod 777 \"$PGDATA\"\n\n# recover docker-entrypoint.sh\nRUN curl -f \"https://raw.githubusercontent.com/docker-library/postgres/master/$PG_MAJOR/docker-entrypoint.sh\" -o /usr/local/bin/docker-entrypoint.sh && \\\n\tchmod +x /usr/local/bin/docker-entrypoint.sh && \\\n\tln -s usr/local/bin/docker-entrypoint.sh /# backwards compat\n\n### end postgres 10\n\n\nRUN apt-get install -y --no-install-recommends \\\n\tpostgresql-server-dev-10 postgresql-plpython-10 postgresql-plpython3-10 \\\n\tpython2 python-dev python-pip python-setuptools python-wheel \\\n\tpython3 python3-dev python3-pip python3-setuptools python3-wheel && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Python 2 libraries native to Redshift. Versions available here:\n# https://docs.aws.amazon.com/redshift/latest/dg/udf-python-language-support.html\n# NOTE: pandas 0.18.1 instead of 0.14.1 due to lack of wheel for <0.18.1\nRUN /usr/bin/python2.7 -m pip install \\\n\tnumpy==1.8.2 \\\n\tpandas==0.18.1 \\\n\tpython-dateutil==2.2 \\\n\tpytz==2015.7 \\\n\tscipy==0.12.1 \\\n\tsix==1.3.0 \\\n\tpsycopg2==2.7.5 \\\n\tenum34==1.1.6\n# wsgiref==0.1.2 (Installed by default)\n\nRUN apt-get install -y --no-install-recommends make gcc && rm -rf /var/lib/apt/lists/*;\n\n# Compile query_group redshift compat extension\nCOPY \"extensions/\" \"/tmp/extensions/\"\nRUN make -C \"/tmp/extensions/\" && \\\n\tmake -C \"/tmp/extensions/\" install\n\n# Install query_group extension\nRUN sed \"/shared_preload_libraries/d\" -i /usr/share/postgresql/postgresql.conf.sample && \\\n\techo \"shared_preload_libraries = 'query_group'\" >> /usr/share/postgresql/postgresql.conf.sample\n\n# Clean up unused packages and temp files\nRUN rm -rf /var/lib/apt/lists/* && \\\n\tapt-get purge -y gcc make python2-dev python3-dev postgresql-server-dev-10 curl gnupg dirmngr && \\\n\tapt-get autoremove -y --purge && \\\n\trm -r /tmp/extensions\n\nCOPY [ \\\n\t\"sql/00_extensions.sql\", \\\n\t\"sql/00_stl_tables.sql\", \\\n\t\"sql/00_stv_tables.sql\", \\\n\t\"sql/01_functions.sql\", \\\n\t\"/docker-entrypoint-initdb.d/\"]\n\nENV POSTGRES_DB dev\n\nVOLUME /var/lib/postgresql/data\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432\nCMD [\"postgres\"]\n"
}