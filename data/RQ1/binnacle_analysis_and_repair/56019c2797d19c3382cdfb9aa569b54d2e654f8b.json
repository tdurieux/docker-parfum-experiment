{
  "startTime": 1674238519142,
  "endTime": 1674238519296,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# buildbot/buildbot-master\n\n# please follow docker best practices\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\n#\n\n# Use a multi-stage build:\n# https://docs.docker.com/develop/develop-images/multistage-build/\n#\n# Provide an intermediate Docker image named \"buildbot-build\".\n# This intermediate image builds binary wheels\n# which get installed in the final image.\n# This allows us to avoid installing build tools like gcc in the final image.\n\nFROM        alpine:3.7 AS buildbot-build\nMAINTAINER  Buildbot maintainers\n\n# Last build date - this can be updated whenever there are security updates so\n# that everything is rebuilt\nENV         security_updates_as_of 2018-04-10\n\n\nCOPY . /usr/src/buildbot\nRUN \\\n    echo @edgecommunity http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories && \\\n    echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && \\\n    apk add --no-cache \\\n        git \\\n        python3-dev \\\n        libffi-dev \\\n        libressl-dev \\\n        postgresql-dev \\\n        py3-pip \\\n        alpine-sdk \\\n        tar \\\n        tzdata \\\n        curl && \\\n# install pip dependencies\n    pip3 install --no-cache-dir --upgrade pip setuptools wheel && \\\n    pip3 install --no-cache-dir \"buildbot[bundle,tls]\" && \\\n    pip3 install --no-cache-dir -r /usr/src/buildbot/requirements-docker-extras.txt && \\\n    pip3 install --no-cache-dir \"/usr/src/buildbot\" && \\\n    mkdir -p wheels && \\\n    pip3 list --format freeze | grep -v '^buildbot=' > wheels/wheels.txt && \\\n    cd wheels && \\\n    pip3 wheel -r wheels.txt\n\n\n\n#==============================================================================================\n# Build the final image here.  Use build artifacts from the buildbot-build\n# container.\n\n# Note that the UI and worker packages are the latest version published on pypi\n# This is to avoid pulling node inside this container\n\nFROM        alpine:3.7\nMAINTAINER  Buildbot maintainers\n\n# Last build date - this can be updated whenever there are security updates so\n# that everything is rebuilt\nENV         security_updates_as_of 2018-04-11\n\n\nCOPY . /usr/src/buildbot\n\n# Build wheels in other container using the Dockerfile.build\n# and copy them into this container.\n# We do this to avoid having to pull gcc for building native extensions.\nCOPY --from=buildbot-build /wheels /wheels\nRUN \\\n    echo @edgecommunity http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories && \\\n    echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && \\\n    apk add --no-cache \\\n        git \\\n        python3 \\\n        postgresql-libs \\\n        py3-pip \\\n        gosu@testing \\\n        dumb-init \\\n        tar \\\n        tzdata \\\n        curl \\\n        openssh && \\\n# install pip dependencies\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    pip3 install --no-cache-dir /wheels/*.whl && \\\n    pip3 install --no-cache-dir \"buildbot[bundle,tls]\" && \\\n    pip3 install --no-cache-dir \"/usr/src/buildbot\" && \\\n    rm -r /root/.cache /wheels\n\n\nWORKDIR /var/lib/buildbot\nCMD [\"dumb-init\", \"/usr/src/buildbot/docker/start_buildbot.sh\"]\n"
}