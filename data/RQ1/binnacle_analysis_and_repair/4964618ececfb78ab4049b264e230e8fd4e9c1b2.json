{
  "startTime": 1674248414562,
  "endTime": 1674248416030,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 208,
        "lineEnd": 208,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 226,
        "lineEnd": 226,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Copyright (c) 2015 Jonathan Yantis\n# Released under the MIT license\n############################################################\n\n# ├─yantis/archlinux-tiny\n#    ├─yantis/archlinux-small\n#       ├─yantis/archlinux-mac-installer\n\n# Dockerhub can not handle uploading layers above 500MB\n# The layers time out on upload. Also, if a single RUN command\n# takes to long to run Dockerhub will fail to build it so\n# breaking them down into smaller chunks even if more redundant.\n# Dockerhub also can not handle lots of pacman signature checks\n# As it times out at exactly two hours.\n\nFROM yantis/archlinux-small\nMAINTAINER Jonathan Yantis <yantis@yantis.net>\n\n\n###############################################################################\n# Install permanent additions to the container.\n###############################################################################\n    # Don't update to avoid breaking things\nRUN pacman --noconfirm -Syy && \\\n\n    # create run remote script and make it exectutable\n    bash -c \"echo 'curl -L \\$1 | sh' > /bin/run-remote-script\" && \\\n    chmod +x /bin/run-remote-script && \\\n\n\n    # Disable sig checking on the main repos since that is what times it out.\n    # Not really want I want to do but with the 100+ build errors on dockerhub\n    # This is the only solution that works.\n    # It gets it all from mirrors.kernel.org so it should be fine.\n    sed -i \"s/\\[core\\]/\\[core\\]\\nSigLevel = Never/\" /etc/pacman.conf && \\\n    sed -i \"s/\\[extra\\]/\\[extra\\]\\nSigLevel = Never/\" /etc/pacman.conf && \\\n    sed -i \"s/\\[community\\]/\\[community\\]\\nSigLevel = Never/\" /etc/pacman.conf && \\\n\n    # Remove the texinfo-fake package since we are installing perl for rsync.\n    # pacman --noconfirm -Rdd texinfo-fake && \\\n\n    # Install stuff we will need later\n    pacman --noconfirm --needed -S \\\n            perl \\\n            texinfo \\\n            rsync \\\n            squashfs-tools && \\\n\n    # Clean up to make this as small as possible\n    localepurge && \\\n\n    # Remove info, man and docs (only in this container.. not on our new install)\n    rm -r /usr/share/info/* && \\\n    rm -r /usr/share/man/* && \\\n\n    # Delete any backup files like /etc/pacman.d/gnupg/pubring.gpg~\n    find /. -name \"*~\" -type f -delete && \\\n\n    # Clean up pacman\n    bash -c \"echo 'y' | pacman -Scc >/dev/null 2>&1\" && \\\n    paccache -rk0 >/dev/null 2>&1 &&  \\\n    pacman-optimize && \\\n    rm -r /var/lib/pacman/sync/*\n\n\n###############################################################################\n# Build and Cache NVIDA Drivers\n# 349xx series drivers are problematic on the Macbooks so using 346xx\n###############################################################################\nRUN pacman --noconfirm -Sy binutils gcc make autoconf fakeroot && \\\n\n    # create custom cache locations\n    mkdir -p /var/cache/pacman/custom && \\\n\n    # build and cache nvidia-346xx-dkms package\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/nvidia-346xx-dkms.tar.gz && \\\n    tar -xvf /tmp/nvidia-346xx-dkms.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/nvidia-346xx-dkms && \\\n    runuser -l docker -c \"(cd /tmp/nvidia-346xx-dkms && makepkg -scd --noconfirm)\" && \\\n    mv /tmp/nvidia-346xx-dkms/*.xz /var/cache/pacman/custom/ && \\\n    rm -r /tmp/* && \\\n\n    # build and cache nvidia-346xx-utils package\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/nvidia-346xx-utils.tar.gz && \\\n    tar -xvf /tmp/nvidia-346xx-utils.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/nvidia-346xx-utils && \\\n    runuser -l docker -c \"(cd /tmp/nvidia-346xx-utils && makepkg -scd --noconfirm)\" && \\\n    mv /tmp/nvidia-346xx-utils/*.xz /var/cache/pacman/custom/ && \\\n    rm -r /tmp/* && \\\n\n    # build and cache nvidia-hook package\n    # Doesn't exit anymore. Lets hope it doesn't break things\n    # wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/nvidia-hook.tar.gz && \\\n    # tar -xvf /tmp/nvidia-hook.tar.gz -C /tmp && \\\n    # chown -R docker:docker /tmp/nvidia-hook && \\\n    # runuser -l docker -c \"(cd /tmp/nvidia-hook && makepkg -scd --noconfirm)\" && \\\n    # mv /tmp/nvidia-hook/*.xz /var/cache/pacman/custom/ && \\\n    # rm -r /tmp/* && \\\n\n    # Remove anything we added that we do not need\n    pacman --noconfirm -Rs  binutils gcc make autoconf fakeroot && \\\n\n    # Remove info & man\n    rm -r /usr/share/info/* && \\\n    rm -r /usr/share/man/* && \\\n\n    # Clean up pacman\n    bash -c \"echo 'y' | pacman -Scc >/dev/null 2>&1\" && \\\n    paccache -rk0 >/dev/null 2>&1 &&  \\\n    pacman-optimize && \\\n    rm -r /var/lib/pacman/sync/* && rm /tmp/nvidia-346xx-dkms.tar.gz\n\n\n###############################################################################\n# Build any packages we may need to install.\n###############################################################################\nRUN pacman --noconfirm --needed -Sy base-devel && \\\n\n    # Build & cache xf86-input-mtrack-git package\n    # wget -P /tmp https://aur.archlinux.org/packages/xf/xf86-input-mtrack-git/xf86-input-mtrack-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/xf86-input-mtrack-git.tar.gz && \\\n    tar -xvf /tmp/xf86-input-mtrack-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/xf86-input-mtrack-git && \\\n    runuser -l docker -c \"(cd /tmp/xf86-input-mtrack-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/xf86-input-mtrack-git/*.xz /var/cache/pacman/custom/ && \\\n\n    # Build & cache nvidia-bl-dkms package\n    # wget -P /tmp https://aur.archlinux.org/packages/nv/nvidia-bl-dkms/nvidia-bl-dkms.tar.gz && \\\n    # tar -xvf /tmp/nvidia-bl-dkms.tar.gz -C /tmp && \\\n    # chown -R docker:docker /tmp/nvidia-bl-dkms && \\\n    # runuser -l docker -c \"(cd /tmp/nvidia-bl-dkms && makepkg -sc --noconfirm)\" && \\\n    # mv /tmp/nvidia-bl-dkms/*.xz /var/cache/pacman/custom/ && \\\n\n    # extract the firmware for the b43 (even if the user doesn't need it. It doesn't hurt)\n    # https://wiki.archlinux.org/index.php/Broadcom_wireless\n    pacman --noconfirm -S b43-fwcutter && \\\n    curl -f -LO http://downloads.openwrt.org/sources/broadcom-wl-4.178.10.4.tar.bz2 && \\\n    tar xjf broadcom-wl-4.178.10.4.tar.bz2 && \\\n    mkdir /firmware && \\\n    b43-fwcutter -w /firmware broadcom-wl-4.178.10.4/linux/wl_apsta.o && \\\n    rm -r broadcom-wl* && \\\n    pacman --noconfirm -Rs b43-fwcutter && \\\n\n    # create general cache location\n    mkdir -p /var/cache/pacman/general && \\\n\n    # Build & cache thermald package\n    # wget -P /tmp https://aur.archlinux.org/packages/th/thermald/thermald.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/thermald.tar.gz && \\\n    tar -xvf /tmp/thermald.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/thermald && \\\n    runuser -l docker -c \"(cd /tmp/thermald && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/thermald/*.xz /var/cache/pacman/general/ && \\\n\n    # build and cache mbpfan-git package\n    # wget -P /tmp https://aur.archlinux.org/packages/mb/mbpfan-git/mbpfan-git.tr.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/mbpfan-git.tar.gz && \\\n    tar -xvf /tmp/mbpfan-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/mbpfan-git && \\\n    runuser -l docker -c \"(cd /tmp/mbpfan-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/mbpfan-git/*.xz /var/cache/pacman/custom/ && \\\n    rm -r /tmp/* && \\\n\n    # Download broadcom and intel drivers.\n    pacman --noconfirm -Sw --cachedir /var/cache/pacman/custom \\\n            broadcom-wl-dkms \\\n            xf86-video-intel && \\\n\n    # Download and cache Liberation TTF Mono Powerline Fonts\n    # wget -P /tmp https://aur.archlinux.org/packages/tt/ttf-liberation-mono-powerline-git/ttf-liberation-mono-powerline-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/ttf-literation-mono-powerline-git.tar.gz && \\\n    tar -xvf /tmp/ttf-literation-mono-powerline-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/ttf-literation-mono-powerline-git && \\\n    runuser -l docker -c \"(cd /tmp/ttf-literation-mono-powerline-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/ttf-literation-mono-powerline-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Download and cache oh-my-zsh\n    # wget -P /tmp https://aur.archlinux.org/packages/oh/oh-my-zsh-git/oh-my-zsh-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/oh-my-zsh-git.tar.gz && \\\n    tar -xvf /tmp/oh-my-zsh-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/oh-my-zsh-git && \\\n    runuser -l docker -c \"(cd /tmp/oh-my-zsh-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/oh-my-zsh-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Download and cache bullet-train-oh-my-zsh-theme-git\n    # wget -P /tmp https://aur.archlinux.org/packages/bu/bullet-train-oh-my-zsh-theme-git/bullet-train-oh-my-zsh-theme-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/bullet-train-oh-my-zsh-theme-git.tar.gz && \\\n    tar -xvf /tmp/bullet-train-oh-my-zsh-theme-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/bullet-train-oh-my-zsh-theme-git && \\\n    runuser -l docker -c \"(cd /tmp/bullet-train-oh-my-zsh-theme-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/bullet-train-oh-my-zsh-theme-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Download and cache fasd\n    # wget -P /tmp https://aur.archlinux.org/packages/fa/fasd-git/fasd-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/fasd-git.tar.gz && \\\n    tar -xvf /tmp/fasd-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/fasd-git && \\\n    runuser -l docker -c \"(cd /tmp/fasd-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/fasd-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Download and cache zsh-dwim-git\n    # wget -P /tmp https://aur.archlinux.org/packages/zs/zsh-dwim-git/zsh-dwim-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/zsh-dwim-git.tar.gz && \\\n    tar -xvf /tmp/zsh-dwim-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/zsh-dwim-git && \\\n    runuser -l docker -c \"(cd /tmp/zsh-dwim-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/zsh-dwim-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Download and cache zaw\n    # wget -P /tmp https://aur.archlinux.org/packages/za/zaw-git/zaw-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/zaw-git.tar.gz && \\\n    tar -xvf /tmp/zaw-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/zaw-git && \\\n    runuser -l docker -c \"(cd /tmp/zaw-git && makepkg -sc --noconfirm)\" && \\\n    mv /tmp/zaw-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Download and cache sddm-archlinux-theme-git\n    # wget -P /tmp https://aur.archlinux.org/packages/sd/sddm-archlinux-theme-git/sddm-archlinux-theme-git.tar.gz && \\\n    wget -P /tmp https://aur.archlinux.org/cgit/aur.git/snapshot/sddm-archlinux-theme-git.tar.gz && \\\n    tar -xvf /tmp/sddm-archlinux-theme-git.tar.gz -C /tmp && \\\n    chown -R docker:docker /tmp/sddm-archlinux-theme-git && \\\n    runuser -l docker -c \"(cd /tmp/sddm-archlinux-theme-git && makepkg -sdc --noconfirm)\" && \\\n    mv /tmp/sddm-archlinux-theme-git/*.xz /var/cache/pacman/general/ && \\\n    rm -r /tmp/* && \\\n\n    # Remove anything we added that we do not need\n    pacman --noconfirm -Rs dbus-glib dri2proto dri3proto fontsproto glproto \\\n    libxml2 libxss mesa pixman presentproto randrproto renderproto flex \\\n    resourceproto videoproto xf86driproto xineramaproto xorg-util-macros \\\n    gcc binutils guile make libxfont xorg-bdftopcf \\\n    xorg-font-utils fontconfig libtool m4 git inputproto \\\n    dbus systemd package-query bison autoconf \\\n    freetype2 harfbuzz graphite libpng xorg-server-devel \\\n    gettext && \\\n\n    # Clean up to make this as small as possible\n    localepurge && \\\n\n    # Remove info, man and docs (only in this container.. not on our new install)\n    rm -r /usr/share/info/* && \\\n    rm -r /usr/share/man/* && \\\n    rm -r /usr/share/doc/* && \\\n\n    # Delete any backup files like /etc/pacman.d/gnupg/pubring.gpg~\n    find /. -name \"*~\" -type f -delete && \\\n\n    # Clean up pacman\n    bash -c \"echo 'y' | pacman -Scc >/dev/null 2>&1\" && \\\n    paccache -rk0 >/dev/null 2>&1 && \\\n    pacman-optimize && \\\n    rm -r /var/lib/pacman/sync/* && rm /tmp/xf86-input-mtrack-git.tar.gz\n\n###############################################################################\n# Cache packages that have happened since the last airootfs image\n# Purposely add another layer here to break up the size.\n# Since we kept the one above clean it should add minimal overhead.\n###############################################################################\nRUN pacman --noconfirm -Syw --cachedir /var/cache/pacman/general \\\n            btrfs-progs \\\n            ca-certificates-utils \\\n            ca-certificates \\\n            dnsmasq \\\n            glib2 \\\n            glibc \\\n            gnupg \\\n            gnutls \\\n            grml-zsh-config \\\n            gssproxy \\\n            lftp \\\n            libinput \\\n            libssh2 \\\n            libsystemd \\\n            libtasn1 \\\n            lz4 \\\n            man-pages \\\n            nano \\\n            nettle \\\n            ntp \\\n            partclone \\\n            openconnect \\\n            systemd-sysvcompat \\\n            tcpdump \\\n            testdisk && \\\n    rm -r /var/lib/pacman/sync/*\n\n###############################################################################\n# Just download these since we don't actually need them for the docker container.\n# Make sure none of these are in the list above.\n# Broke into two layers for better download speeds on the container.\n###############################################################################\n\nRUN pacman --noconfirm -Syw --cachedir /var/cache/pacman/general \\\n            base-devel \\\n            acpi \\\n            alsa-utils \\\n            arch-install-scripts \\\n            aria2 \\\n            c-ares \\\n            cpupower \\\n            ctags \\\n            dkms \\\n            feh \\\n            git \\\n            haveged \\\n            htop \\\n            gnome-keyring \\\n            gnome-terminal \\\n            google-chrome  \\\n            linux \\\n            linux-headers \\\n            hfsprogs \\\n            intel-ucode \\\n            imagemagick \\\n            lm_sensors \\\n            mlocate \\\n            networkmanager \\\n            network-manager-applet \\\n            pavucontrol \\\n            package-query \\\n            pciutils \\\n            powertop \\\n            pulseaudio-alsa \\\n            pulseaudio && \\\n\n    # Clean up pacman\n    rm -r /var/lib/pacman/sync/*\n\nRUN pacman --noconfirm -Syw --cachedir /var/cache/pacman/general \\\n            libical \\\n            solid \\\n            gamin \\\n            bluez \\\n            plasma \\\n            konsole \\\n            python-dateutil \\\n            python-docutils \\\n            python-pyasn1\\\n            python-rsa \\\n            python-setuptools \\\n            python-six \\\n            reflector \\\n            rsync \\\n            sqlite \\\n            sddm \\\n            systemd \\\n            terminus-font \\\n            tree \\\n            tmux \\\n            vim  \\\n            xfce4 \\\n            xfce4-whiskermenu-plugin \\\n            xorg-server \\\n            xorg-server-utils \\\n            xorg-xinit \\\n            xorg-xev \\\n            yajl \\\n            yaourt \\\n            zsh-syntax-highlighting && \\\n\n            # Clean up pacman\n            rm -r /var/lib/pacman/sync/*\n\n\n# # Download and cache Infinality Fonts\n# RUN bash -c \"echo \\\"[infinality-bundle-fonts]\\\" >> /etc/pacman.conf\" && \\\n#     bash -c \"echo \\\"Server = http://bohoomil.com/repo/fonts \\\" >>/etc/pacman.conf\" && \\\n#     bash -c \"echo \\\"SigLevel = Never\\\" >> /etc/pacman.conf\" && \\\n\n#     bash -c \"echo \\\"[infinality-bundle]\\\" >> /etc/pacman.conf\" && \\\n#     bash -c \"echo \\\"Server = http://bohoomil.com/repo/x86_64 \\\" >>/etc/pacman.conf\" && \\\n#     bash -c \"echo \\\"SigLevel = Never\\\" >> /etc/pacman.conf\" && \\\n\n#     rm /var/cache/pacman/general/ttf-dejavu-* && \\\n#     rm /var/cache/pacman/general/freetype2-* && \\\n#     rm /var/cache/pacman/general/fontconfig-* && \\\n#     rm /var/cache/pacman/general/cairo-* && \\\n#     rm /var/cache/pacman/general/cantarell-fonts-* && \\\n\n#     pacman --noconfirm -Syw --cachedir /var/cache/pacman/general \\\n#             infinality-bundle \\\n#             ibfonts-meta-base \\\n#             otf-cantarell-ib \\\n#             ibfonts-meta-extended-lt \\\n#             otf-oswald-ib \\\n#             otf-quintessential-ib \\\n#             otf-tex-gyre-ib \\\n#             t1-cursor-ib \\\n#             t1-urw-fonts-ib \\\n#             ttf-caladea-ib \\\n#             ttf-cantoraone-ib \\\n#             ttf-carlito-ib \\\n#             ttf-ddc-uchen-ib \\\n#             ttf-droid-ib \\\n#             ttf-gelasio-ib \\\n#             ttf-lohit-odia-ib \\\n#             ttf-lohit-punjabi-ib \\\n#             ttf-merriweather-ib \\\n#             ttf-merriweather-sans-ib \\\n#             # ttf-noto-serif-multilang-ib \\\n#             ttf-opensans-ib \\\n#             ttf-signika-family-ib \\\n#             ttf-ubuntu-font-family-ib && \\\n\n#     # Clean up pacman\n#     rm -r /var/lib/pacman/sync/*\n\nCMD /bin/zsh\n\n"
}