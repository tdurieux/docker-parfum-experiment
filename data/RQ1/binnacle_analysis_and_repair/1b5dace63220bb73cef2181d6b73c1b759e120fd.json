{
  "startTime": 1674248340770,
  "endTime": 1674248341182,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start with Ubuntu base image\nFROM ubuntu:16.04\nMAINTAINER Kai Arulkumaran <design@kaixhin.com>\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  autoconf \\\n  automake \\\n  build-essential \\\n  cmake \\\n  curl \\\n  git \\\n  gfortran \\\n  libatlas-base-dev \\\n  libboost-filesystem-dev \\\n  libboost-python-dev \\\n  libboost-system-dev \\\n  libboost-thread-dev \\\n  libtool \\\n  libgflags-dev \\\n  libgoogle-glog-dev \\\n  libhdf5-serial-dev \\\n  libleveldb-dev \\\n  liblmdb-dev \\\n  libopencv-dev \\\n  libsnappy-dev \\\n  python-all-dev \\\n  python-dev \\\n  python-h5py \\\n  python-matplotlib \\\n  python-numpy \\\n  python-opencv \\\n  python-pil \\\n  python-pip \\\n  python-pydot \\\n  python-scipy \\\n  python-skimage \\\n  python-sklearn \\\n  python-setuptools \\\n  unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install Protobuf 3\nENV PROTOBUF_ROOT /root/protobuf\nRUN git clone https://github.com/google/protobuf.git $PROTOBUF_ROOT -b '3.2.x' && cd $PROTOBUF_ROOT && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make \"-j$(nproc)\" && \\\n  make install && \\\n  ldconfig && \\\n  cd python && python setup.py install --cpp_implementation\n\n# Install NVIDIA Caffe 0.15\nENV CAFFE_ROOT /root/caffe\nRUN git clone https://github.com/NVIDIA/caffe.git $CAFFE_ROOT -b 'caffe-0.15' && cd $CAFFE_ROOT && \\\n  pip install --no-cache-dir -r python/requirements.txt && \\\n  mkdir build && cd build && \\\n  cmake .. && \\\n  make -j\"$(nproc)\" && \\\n  make install\n\n# Install DIGITS\nENV DIGITS_ROOT /root/digits\nRUN git clone https://github.com/NVIDIA/DIGITS.git $DIGITS_ROOT && cd $DIGITS_ROOT && \\\n  pip install --no-cache-dir -r requirements.txt && \\\n  pip install --no-cache-dir -e .\n\n# Enable volumes for host persistence\nVOLUME /data\nVOLUME /jobs\n\nENV DIGITS_JOBS_DIR=/jobs\nENV DIGITS_LOGFILE_FILENAME=/jobs/digits.log\n\n# Expose server port\nEXPOSE 5000\n# Set working directory\nWORKDIR /root/digits\n# Start server\nCMD [\"./digits-devserver\"]\n"
}