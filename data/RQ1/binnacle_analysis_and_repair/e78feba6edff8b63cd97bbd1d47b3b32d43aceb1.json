{
  "startTime": 1674249285013,
  "endTime": 1674249285331,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 12,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 42,
        "columnStart": 12,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 12,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM        debian:wheezy-slim\n\nARG         BUILD_DATE\nARG         DEBIAN_FRONTEND=noninteractive\n\nLABEL       maintainer=\"Emmanuel Dyan <emmanueldyan@gmail.com>\"\nLABEL       org.label-schema.build-date=$BUILD_DATE\n\n# Set a default conf for apt install\nRUN echo 'apt::install-recommends \"false\";' > /etc/apt/apt.conf.d/no-install-recommends && \\\n            # Set right repos\n            echo \"deb http://archive.debian.org/debian wheezy main contrib\" > /etc/apt/sources.list && \\\n            echo \"deb http://archive.debian.org/debian wheezy-backports main contrib\" >> /etc/apt/sources.list && \\\n            # Upgrade the system + Install all packages\n            apt-get update && \\\n            apt-get upgrade -y && \\\n            # Because else it doesn't work ;)\n            apt-get install --no-install-recommends --reinstall -y --force-yes perl-base=5.14.2-21+deb7u3 libc6=2.13-38+deb7u10 libc-bin=2.13-38+deb7u10 && \\\n            apt-get install --no-install-recommends -y \\\n                iptables \\\n                # All PHP Packages\n                php-apc \\\n                php5-cli \\\n                php5-curl \\\n                # php5-ffmpeg \\\n                php5-fpm \\\n                php5-gd \\\n                php5-geoip \\\n                php5-imagick \\\n                php5-imap \\\n                php5-intl \\\n                php5-json \\\n                php5-ldap \\\n                php5-mcrypt \\\n                php5-memcache \\\n                php5-memcached \\\n                php5-mysql \\\n                php5-odbc \\\n                php5-pgsql \\\n                php5-sqlite \\\n                php5-tidy \\\n                php5-xdebug \\\n                php5-xsl && \\\n            # Now Build\n            apt-get install --no-install-recommends -y \\\n                build-essential php-pear php5-dev libcurl4-openssl-dev pkg-config && \\\n            pecl channel-update pecl.php.net && \\\n            pecl install xhprof-beta mongo && \\\n            echo \"extension=xhprof.so\" > /etc/php5/mods-available/xhprof.ini && \\\n            php5enmod xhprof && \\\n            echo \"extension=mongo.so\" > /etc/php5/mods-available/mongo.ini && \\\n            php5enmod mongo && \\\n            apt-get purge -y build-essential php-pear php5-dev libcurl4-openssl-dev pkg-config && \\\n            # Clean\n            apt-get autoremove -y && \\\n            apt-get autoclean && \\\n            apt-get clean && \\\n            find /root /tmp -mindepth 1 -delete && \\\n            rm -rf /build /var/lib/apt/lists/* /usr/share/man/* /usr/share/doc/* \\\n                   /var/cache/* /var/log/* /usr/share/php/docs /usr/share/php/tests\n\nCOPY        php-cli.ini    /etc/php5/cli/conf.d/30-custom-php.ini\nCOPY        php-fpm.ini    /etc/php5/fpm/conf.d/30-custom-php.ini\nCOPY        www.conf       /etc/php5/fpm/pool.d/\n\n# For custom Configuration that comes from outside (via a docker compose mount)\nRUN         mkdir /etc/php5/fpm/user-conf.d && \\\n            echo \"; Default empty file\" > /etc/php5/fpm/user-conf.d/example.conf && \\\n            # Global Logs\n            mkdir /var/log/php && \\\n            # Create home for www-data\n            mkdir /home/www-data && \\\n            chown www-data:www-data /home/www-data && \\\n            usermod -d /home/www-data www-data\n\nCOPY        run.sh     /run.sh\nRUN         chmod +x    /run.sh\n\nENV         ENVIRONMENT dev\nENV         FPM_UID 33\nENV         FPM_GID 33\n\nEXPOSE      9000\n\nCMD         [\"/run.sh\"]\n"
}