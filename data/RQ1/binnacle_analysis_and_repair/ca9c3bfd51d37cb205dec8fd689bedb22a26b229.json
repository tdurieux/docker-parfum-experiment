{
  "startTime": 1674241622347,
  "endTime": 1674241622468,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    pkg-config \\\n    git \\\n    automake \\\n    libtool \\\n    m4 \\\n    autoconf \\\n    make \\\n    file \\\n    binutils && rm -rf /var/lib/apt/lists/*;\n\nCOPY xargo.sh /\nRUN bash /xargo.sh\n\nRUN dpkg --add-architecture i386 && apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        wine-stable \\\n        wine64 \\\n        wine32 \\\n        libz-mingw-w64-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends g++-mingw-w64-x86-64 && rm -rf /var/lib/apt/lists/*;\n\n# run-detectors are responsible for calling the correct interpreter for exe\n# files. For some reason it does not work inside a docker container (it works\n# fine in the host). So we replace the usual paths of run-detectors to run wine\n# directly. This only affects the guest, we are not messing up with the host.\n#\n# See /usr/share/doc/binfmt-support/detectors\nRUN mkdir -p /usr/lib/binfmt-support/ && \\\n    rm -f /usr/lib/binfmt-support/run-detectors /usr/bin/run-detectors && \\\n    ln -s /usr/bin/wine /usr/lib/binfmt-support/run-detectors && \\\n    ln -s /usr/bin/wine /usr/bin/run-detectors\n\nCOPY windows-entry.sh /\nENTRYPOINT [\"/windows-entry.sh\"]\n\nENV CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER=x86_64-w64-mingw32-gcc \\\n    CARGO_TARGET_X86_64_PC_WINDOWS_GNU_RUNNER=wine \\\n    CC_x86_64_pc_windows_gnu=x86_64-w64-mingw32-gcc-posix \\\n    CXX_x86_64_pc_windows_gnu=x86_64-w64-mingw32-g++-posix\n"
}