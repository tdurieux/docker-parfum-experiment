{
  "startTime": 1674247960395,
  "endTime": 1674247961011,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 16,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 24,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 27,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Reid Burke <me@reidburke.com>\n\nRUN apt-get -q -y update \\\n    && apt-get -q --no-install-recommends -y install cron logrotate make build-essential libssl-dev \\\n        zlib1g-dev libpcre3 libpcre3-dev curl pgp yasm \\\n    && apt-get -q -y build-dep nginx \\\n    && apt-get -q -y clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\n\nRUN cd /root \\\n    && curl -f -L https://downloads.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.4.tar.gz > fdk-aac.tgz \\\n    && mkdir fdk-aac && tar xzf fdk-aac.tgz -C fdk-aac --strip 1 && cd fdk-aac \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && rm fdk-aac.tgz\n\nRUN cd /root \\\n    && curl -f -L ftp://ftp.videolan.org/pub/x264/snapshots/x264-snapshot-20160225-2245.tar.bz2 > x264.tar.bz2 \\\n    && mkdir x264 && tar xjf x264.tar.bz2 -C x264 --strip 1 && cd x264 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static && make install && rm x264.tar.bz2\n\nRUN cd /root \\\n    && curl -f -L https://libav.org/releases/libav-11.4.tar.gz > libav.tgz \\\n    && mkdir libav && tar xzf libav.tgz -C libav --strip 1 && cd libav \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-gpl --enable-nonfree \\\n        --enable-libfdk-aac --enable-libx264 \\\n    && make install && rm libav.tgz\n\nRUN groupadd nginx\nRUN useradd -m -g nginx nginx\nRUN mkdir -p /var/log/nginx /var/cache/nginx\n\nRUN cd /root && curl -f -L https://github.com/arut/nginx-rtmp-module/archive/v1.1.7.tar.gz > nginx-rtmp.tgz \\\n    && mkdir nginx-rtmp && tar xzf nginx-rtmp.tgz -C nginx-rtmp --strip 1 && rm nginx-rtmp.tgz\n\nRUN mkdir /www && cp /root/nginx-rtmp/stat.xsl /www/info.xsl && chown -R nginx:nginx /www\n\nRUN cd /root \\\n    && curl -f -L -O http://nginx.org/download/nginx-1.8.1.tar.gz \\\n    && curl -f -L -O http://nginx.org/download/nginx-1.8.1.tar.gz.asc \\\n    && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-key A1C052F8 \\\n    && gpg --batch nginx-1.8.1.tar.gz.asc \\\n    && tar xzf nginx-1.8.1.tar.gz && cd nginx-1.8.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/etc/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx.pid \\\n        --lock-path=/var/run/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx \\\n        --group=nginx \\\n        --with-http_ssl_module \\\n        --with-http_realip_module \\\n        --with-http_addition_module \\\n        --with-http_sub_module \\\n        --with-http_dav_module \\\n        --with-http_flv_module \\\n        --with-http_mp4_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n        --with-http_random_index_module \\\n        --with-http_secure_link_module \\\n        --with-http_stub_status_module \\\n        --with-http_auth_request_module \\\n        --with-mail \\\n        --with-mail_ssl_module \\\n        --with-file-aio \\\n        --add-module=/root/nginx-rtmp \\\n        --with-ipv6 \\\n   && make install && rm nginx-1.8.1.tar.gz\n\nRUN ldconfig\n\nEXPOSE 80\nEXPOSE 1935\n\nRUN mkdir -p /etc/nginx/templates\n\nADD sbin/substitute-env-vars.sh /usr/sbin/substitute-env-vars.sh\nADD sbin/render-templates.sh /usr/sbin/render-templates.sh\nADD sbin/entrypoint.sh /usr/sbin/entrypoint.sh\n\nADD templates/nginx.conf.tmpl /etc/nginx/templates/nginx.conf.tmpl\n\nENTRYPOINT [\"/usr/sbin/entrypoint.sh\"]\nCMD [\"/usr/sbin/nginx\", \"-c\", \"/etc/nginx/nginx.conf\"]\n"
}