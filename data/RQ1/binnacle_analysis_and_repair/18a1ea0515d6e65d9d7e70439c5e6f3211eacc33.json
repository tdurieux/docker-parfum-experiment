{
  "startTime": 1674244168993,
  "endTime": 1674244169524,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 28,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 56,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 42,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 42,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.0.16-fpm\n\nMAINTAINER \"Magento\"\n\nENV PHP_EXTRA_CONFIGURE_ARGS=\"--enable-fpm --with-fpm-user=magento2 --with-fpm-group=magento2\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    sudo \\\n    wget \\\n    unzip \\\n    cron \\\n    curl \\\n    libmcrypt-dev \\\n    libicu-dev \\\n    libxml2-dev libxslt1-dev \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libpng12-dev \\\n    git \\\n    vim \\\n    openssh-server \\\n    supervisor \\\n    mysql-client \\\n    ocaml \\\n    expect \\\n    && curl -f -L https://github.com/bcpierce00/unison/archive/2.48.4.tar.gz | tar zxv -C /tmp && \\\n             cd /tmp/unison-2.48.4 && \\\n             sed -i -e 's/GLIBC_SUPPORT_INOTIFY 0/GLIBC_SUPPORT_INOTIFY 1/' src/fsmonitor/linux/inotify_stubs.c && \\\n             make && \\\n             cp src/unison src/unison-fsmonitor /usr/local/bin && \\\n             cd /root && rm -rf /tmp/unison-2.48.4 \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-configure hash --with-mhash \\\n    && docker-php-ext-install -j$(nproc) mcrypt intl xsl gd zip pdo_mysql opcache soap bcmath json iconv \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n    && pecl install xdebug && docker-php-ext-enable xdebug \\\n    && echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_port=9000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_connect_back=0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_host=127.0.0.1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.idekey=PHPSTORM\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.max_nesting_level=1000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && chmod 666 /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && mkdir /var/run/sshd \\\n    && apt-get clean && apt-get update && apt-get install --no-install-recommends -y nodejs \\\n    && ln -s /usr/bin/nodejs /usr/bin/node \\\n    && apt-get install --no-install-recommends -y npm \\\n    && npm update -g npm && npm install -g grunt-cli && npm install -g gulp \\\n    && echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config \\\n    && apt-get install --no-install-recommends -y apache2 \\\n    && a2enmod rewrite \\\n    && a2enmod proxy \\\n    && a2enmod proxy_fcgi \\\n    && rm -f /etc/apache2/sites-enabled/000-default.conf \\\n    && useradd -m -d /home/magento2 -s /bin/bash magento2 && adduser magento2 sudo \\\n    && echo \"magento2 ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n    && touch /etc/sudoers.d/privacy \\\n    && echo \"Defaults        lecture = never\" >> /etc/sudoers.d/privacy \\\n    && mkdir /home/magento2/magento2 && mkdir /var/www/magento2 \\\n    && mkdir /home/magento2/state \\\n    && curl -f -sS https://accounts.magento.cloud/cli/installer -o /home/magento2/installer \\\n    && rm -r /usr/local/etc/php-fpm.d/* \\\n    && sed -i 's/www-data/magento2/g' /etc/apache2/envvars && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# PHP config\nADD conf/php.ini /usr/local/etc/php\n\n# SSH config\nCOPY conf/sshd_config /etc/ssh/sshd_config\nRUN chown magento2:magento2 /etc/ssh/ssh_config\n\n# supervisord config\nADD conf/supervisord.conf /etc/supervisord.conf\n\n# php-fpm config\nADD conf/php-fpm-magento2.conf /usr/local/etc/php-fpm.d/php-fpm-magento2.conf\n\n# apache config\nADD conf/apache-default.conf /etc/apache2/sites-enabled/apache-default.conf\n\n# unison script\nADD conf/.unison/magento2.prf /home/magento2/.unison/magento2.prf\n\nADD conf/unison.sh /usr/local/bin/unison.sh\nADD conf/entrypoint.sh /usr/local/bin/entrypoint.sh\nADD conf/check-unison.sh /usr/local/bin/check-unison.sh\nRUN chmod +x /usr/local/bin/unison.sh && chmod +x /usr/local/bin/entrypoint.sh \\\n    && chmod +x /usr/local/bin/check-unison.sh\n\nENV PATH $PATH:/home/magento2/scripts/:/home/magento2/.magento-cloud/bin\nENV PATH $PATH:/var/www/magento2/bin\n\nENV USE_SHARED_WEBROOT 1\nENV SHARED_CODE_PATH /var/www/magento2\nENV WEBROOT_PATH /var/www/magento2\nENV MAGENTO_ENABLE_SYNC_MARKER 0\n\nRUN mkdir /windows \\\n && cd /windows \\\n && curl -f -L -o unison-windows.zip https://www.irif.fr/~vouillon/unison/unison%202.48.3.zip \\\n && unzip unison-windows.zip \\\n && rm unison-windows.zip \\\n && mv 'unison 2.48.3 text.exe' unison.exe \\\n && rm 'unison 2.48.3 GTK.exe' \\\n && chown -R magento2:magento2 .\n\nRUN mkdir /mac-osx \\\n && cd /mac-osx \\\n && curl -f -L -o unison-mac-osx.zip https://unison-binaries.inria.fr/files/Unison-OS-X-2.48.15.zip \\\n && unzip unison-mac-osx.zip \\\n && rm unison-mac-osx.zip \\\n && chown -R magento2:magento2 .\n\n# Initial scripts\nCOPY scripts/ /home/magento2/scripts/\nRUN sed -i 's/^/;/' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && cd /home/magento2/scripts && composer install && chmod +x /home/magento2/scripts/m2init \\\n    && sed -i 's/^;;*//' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\nRUN chown -R magento2:magento2 /home/magento2 && \\\n    chown -R magento2:magento2 /var/www/magento2 && \\\n    chmod 755 /home/magento2/scripts/bin/magento-cloud-login\n\n# Delete user password to connect with ssh with empty password\nRUN passwd magento2 -d\n\nEXPOSE 80 22 5000 44100\nWORKDIR /home/magento2\n\nUSER root\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}