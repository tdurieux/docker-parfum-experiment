{
  "startTime": 1674246778480,
  "endTime": 1674246778574,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest as builder\nWORKDIR /src/lyra\nRUN pwd\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash -\n\n# download and maximise caching go modules\nCOPY go.mod .\nCOPY go.sum .\nRUN GO111MODULE=on go mod download\nCOPY . .\nRUN make docker-build\n# Copy binaries over to a new container\nFROM alpine\nWORKDIR /src/lyra/\nENV PATH /src/lyra/build/bin:$PATH\nCOPY --from=builder /src/lyra/build/bin/lyra /src/lyra/build/bin/lyra\nRUN apk add --no-cache ca-certificates\nRUN mkdir /src/lyra/local\nCOPY --from=builder /src/lyra/build/goplugins /src/lyra/build/goplugins\nCOPY --from=builder /src/lyra/workflows /src/lyra/workflows\nCOPY --from=builder /src/lyra/examples /src/lyra/examples\nCOPY --from=builder /src/lyra/docs /src/lyra/docs\nCOPY --from=builder /src/lyra/build/types /src/lyra/build/types\nCOPY --from=builder /src/lyra/data.yaml /src/lyra\nCMD lyra apply foobernetes\n"
}