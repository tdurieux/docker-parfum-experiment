{
  "startTime": 1674234645756,
  "endTime": 1674234646005,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 16,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start with cuDNN base image\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu14.04\nMAINTAINER Kai Arulkumaran <design@kaixhin.com>\n\n# Install git, wget, python-dev, pip, BLAS + LAPACK and other dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  gfortran \\\n  git \\\n  wget \\\n  liblapack-dev \\\n  libopenblas-dev \\\n  python-dev \\\n  python-pip \\\n  python-nose \\\n  python-numpy \\\n  python-scipy && rm -rf /var/lib/apt/lists/*;\n\n# Remove OS-installed six\nRUN rm /usr/lib/python2.7/dist-packages/six*\n\n# Set CUDA_ROOT\nENV CUDA_ROOT /usr/local/cuda/bin\n\n# Install CMake 3\nRUN cd /root && wget https://www.cmake.org/files/v3.8/cmake-3.8.1.tar.gz && \\\n  tar -xf cmake-3.8.1.tar.gz && cd cmake-3.8.1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j \"$(nproc)\" && \\\n  make install && rm cmake-3.8.1.tar.gz\n\n# Install Cython\nRUN pip install --no-cache-dir Cython\n\n# Clone libgpuarray repo and move into it\nRUN cd /root && git clone https://github.com/Theano/libgpuarray.git && cd libgpuarray && \\\n# Make and move into build directory\n  mkdir Build && cd Build && \\\n# CMake\n  cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr && \\\n# Make\n  make -j\"$(nproc)\" && \\\n  make install\n# Install pygpu\nRUN cd /root/libgpuarray && \\\n  python setup.py build_ext -L /usr/lib -I /usr/include && \\\n  python setup.py install\n\n# Install bleeding-edge Theano\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade six\nRUN pip install --no-cache-dir --upgrade --no-deps git+git://github.com/Theano/Theano.git\n# Set up .theanorc for CUDA\nRUN echo \"[global]\\ndevice=cuda\\nfloatX=float32\\noptimizer_including=cudnn\\n[lib]\\ncnmem=0.1\\n[nvcc]\\nfastmath=True\\n[dnn]\\nenabled=True\\ninclude_path=/usr/local/cuda/include\\nlibrary_path=/usr/local/cuda/lib64\" > /root/.theanorc\n"
}