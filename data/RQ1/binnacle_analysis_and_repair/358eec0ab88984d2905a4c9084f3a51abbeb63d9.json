{
  "startTime": 1674243982699,
  "endTime": 1674243982842,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 16,
        "columnEnd": 28
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine\n\nRUN apk update\n\nRUN npm i -g npm && npm cache clean --force;\n\nRUN apk add --no-cache libexecinfo libexecinfo-dev\n\nRUN apk --no-cache add --virtual builds-deps build-base \\\n  snappy g++ snappy-dev gcc libgcc libstdc++ linux-headers autoconf automake make nasm python git && \\\n  npm install --quiet node-gyp -g && npm cache clean --force;\n\nRUN npm config set python /usr/bin/python\n\nRUN npm install yarn -g && npm cache clean --force;\n\nRUN npm install pm2 -g --unsafe-perm && npm cache clean --force;\n\n# Import MongoDB public GPG key AND create a MongoDB list file\n## RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\n# RUN echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list\n## RUN apt-get update\n# RUN apt-get install -y mongodb-org; exit 0\n# RUN mkdir -p /data/db\n# RUN mongod --logpath mongod.log --fork\n\n# Make our app folder (empty for now)\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\n\n# Provides cached layer for node_modules and bower_components\nADD package.json /tmp/package.json\nCOPY .snyk /tmp/.snyk\nCOPY yarn.lock /tmp/yarn.lock\nRUN cd /tmp/ && yarn install && yarn cache clean;\nRUN cp -a /tmp/node_modules /usr/src/app/\nRUN cd /usr/src/app\n\nWORKDIR /usr/src/app\n\n# Bundle app source\nADD . /usr/src/app\n\nRUN $(npm bin)/tsc\n\nEXPOSE 5500 5501 5050 5555\n\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.5.0/wait /wait\nRUN chmod +x /wait\n\nCMD /wait && yarn run prod\n"
}