{
  "startTime": 1674245338157,
  "endTime": 1674245338241,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 3,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gliderlabs/alpine:3.2 \n# install frequently used packages \nRUN apk-install git bash \n\n# install node \nRUN apk-install nodejs \n\n# install python (gliderlabs/python-runtime) \nRUN apk-install python3 python3-dev build-base \\\n&& pip3 install --no-cache-dir virtualenv \\\n&& echo \"Dockerfile\" >> /etc/buildfiles \\\n&& echo \".onbuild\" >> /etc/buildfiles \\\n&& echo \"requirements.txt\" >> /etc/buildfiles\n\nRUN npm install -g webpack && npm cache clean --force;\n\nWORKDIR /app \nCOPY package.json /app/ \nRUN npm install && rm /app/package.json && npm cache clean --force;\n\n# ONBUILD actions \nONBUILD COPY . /app \nONBUILD RUN /app/.onbuild || true \nONBUILD RUN virtualenv /env && /env/bin/pip install -r /app/requirements.txt \n \\\nRUN npm install && npm cache clean --force; ONBUILD\n\nEXPOSE 8080 \nCMD [\"/env/bin/python\", \"main.py\"] \n\n"
}