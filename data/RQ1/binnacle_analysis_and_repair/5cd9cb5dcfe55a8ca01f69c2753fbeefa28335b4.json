{
  "startTime": 1674250200917,
  "endTime": 1674250201023,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3.3-fpm-alpine3.9 AS base\n\nRUN apk update \\\n    && apk add --no-cache nginx \\\n    && apk add --no-cache gettext\n\n# PHP_CPPFLAGS are used by the docker-php-ext-* scripts\nENV PHP_CPPFLAGS=\"$PHP_CPPFLAGS -std=c++11\"\n\nRUN docker-php-ext-install opcache\n\n# Images should install their own site specific config\nRUN rm /etc/nginx/conf.d/*\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/nginx-site.template /etc/nginx/conf.d/\nCOPY ./docker/run_app.sh /etc/run_app.sh\n\n###################################################################################\n# Has all the files AND composer installed constructs everything needed for the app\nFROM base AS builder\nWORKDIR /app\n\n# Used by the test watcher\nRUN apk add --no-cache entr\n\n# Composer needs git and some zip deps\nRUN apk add --no-cache git libzip-dev\nRUN docker-php-ext-install zip\nCOPY ./docker/install_composer.sh /tmp/install_composer.sh\nRUN /tmp/install_composer.sh && rm /tmp/install_composer.sh\n\n# Install the dependencies\nCOPY ./composer.* /app/\nRUN php composer.phar install\n\n# Copy over our app code\nCOPY  ./www /app/www/\nCOPY  ./src /app/src/\n\n###################################################################################\n# Uses the base to build everything prod needs\nFROM builder AS prod-source\n\n# We make a nice index.html file built from the README\nCOPY ./scripts /app/scripts\nCOPY ./README.md /app\nRUN php /app/scripts/build_index.php \\\n && rm README.md \\\n && rm -rf scripts/\n\n# None of the dev dependencies are needed by this point\nRUN rm -rf vendor/ \\\n && php composer.phar install --no-dev \\\n && php composer.phar dump-autoload --no-dev\n\n# The built image doesnt need composer\nRUN rm composer.*\n\n###################################################################################\n# This is the final image that we'll serve from\nFROM base AS prod\nWORKDIR /app\nRUN { \\\n        echo 'opcache.memory_consumption=128'; \\\n        echo 'opcache.interned_strings_buffer=8'; \\\n        echo 'opcache.max_accelerated_files=4000'; \\\n        echo 'opcache.revalidate_freq=2'; \\\n        echo 'opcache.fast_shutdown=1'; \\\n        echo 'opcache.enable_cli=1'; \\\n    } > /usr/local/etc/php/conf.d/php-opocache-cfg.ini\n\n# The builder has already pulled all composer deps & built the autoloader\nCOPY --from=prod-source /app /app\n\nEXPOSE $PORT\nCMD [\"/etc/run_app.sh\"]\nHEALTHCHECK CMD curl -f http://localhost:${PORT}/health-check || exit 1"
}