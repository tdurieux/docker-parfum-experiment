{
  "startTime": 1674250717170,
  "endTime": 1674250717280,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Requires Docker 17.09 or later (multi stage builds)\n#\n# Orchestrator will look for a configuration file at /etc/orchestrator.conf.json.\n# It will listen on port 3000.\n# If not present a minimal configuration will be generated using the following environment variables:\n#\n# Default variables which can be used are:\n#\n# ORC_TOPOLOGY_USER (default: orchestrator): username used by orchestrator to login to MySQL when polling/discovering\n# ORC_TOPOLOGY_PASSWORD (default: orchestrator):  password needed to login to MySQL when polling/discovering\n# ORC_DB_HOST (default: orchestrator):  orchestrator backend MySQL host\n# ORC_DB_PORT (default: 3306):  port used by orchestrator backend MySQL server\n# ORC_DB_NAME (default: orchestrator): database named used by orchestrator backend MySQL server\n# ORC_USER (default: orc_server_user): username used to login to orchestrator backend MySQL server\n# ORC_PASSWORD (default: orc_server_password): password used to login to orchestrator backend MySQL server\n\nFROM golang:1.12.6-alpine3.9\n\nENV GOPATH=/tmp/go\n\nRUN apk update\nRUN apk upgrade\nRUN apk add --no-cache --update libcurl\nRUN apk add --no-cache --update rsync\nRUN apk add --no-cache --update gcc\nRUN apk add --no-cache --update g++\nRUN apk add --no-cache --update build-base\nRUN apk add --no-cache --update bash\nRUN apk add --no-cache --update git\n\nRUN mkdir -p $GOPATH/src/github.com/github/orchestrator\nWORKDIR $GOPATH/src/github.com/github/orchestrator\nCOPY . .\nRUN bash build.sh -b\nRUN rsync -av $(find /tmp/orchestrator-release -type d -name orchestrator -maxdepth 2)/ /\nRUN rsync -av $(find /tmp/orchestrator-release -type d -name orchestrator-cli -maxdepth 2)/ /\nRUN cp /usr/local/orchestrator/orchestrator-sample-sqlite.conf.json /etc/orchestrator.conf.json\n\nFROM alpine:3.8\n\nRUN apk add --no-cache bash\nRUN apk add --no-cache curl\nRUN apk add --no-cache jq\n\nEXPOSE 3000\n\nCOPY --from=0 /usr/local/orchestrator /usr/local/orchestrator\nCOPY --from=0 /etc/orchestrator.conf.json /etc/orchestrator.conf.json\n\nWORKDIR /usr/local/orchestrator\nADD docker/entrypoint.sh /entrypoint.sh\nCMD /entrypoint.sh\n"
}