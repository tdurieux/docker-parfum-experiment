{
  "startTime": 1674244630424,
  "endTime": 1674244630584,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 1,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm-alpine\nMAINTAINER Michael Struski <no-reply@struscode.com>\n\nCOPY bashrc /etc/bash.bashrc\nCOPY profile /etc/profile\n\nRUN apk add --no-cache git openssh-client nginx mysql-client \\\n    supervisor curl bash nano sed\n\n# START - COPIED FROM OFFICIAL WORDPRESS DOCKERFILE - https://github.com/docker-library/wordpress/blob/master/php7.2/fpm-alpine/Dockerfile\n# Modifications made to original:\n#     - Jetpack plugin - added libxml2-dev package and php extensions: xml and xmlrpc - remove if plugin not used\n# install the PHP extensions we need\nRUN set -ex; \\\n\n\tapk add --no-cache --virtual .build-deps \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibpng-dev \\\n\t\tlibxml2-dev \\\n\t; \\\n\n\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \\\n\tdocker-php-ext-install gd mysqli opcache zip xml xmlrpc; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .wordpress-phpexts-rundeps $runDeps; \\\n\tapk del .build-deps\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nENV WORDPRESS_VERSION 5.1.1\nENV WORDPRESS_SHA1 f1bff89cc360bf5ef7086594e8a9b68b4cbf2192\n\nRUN set -ex; \\\n\tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\"; \\\n\techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \\\n# upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress\n\ttar -xzf wordpress.tar.gz -C /usr/src/; \\\n\trm wordpress.tar.gz;\n# END - COPIED FROM OFFICIAL WORDPRESS DOCKERFILE - https://github.com/docker-library/wordpress/blob/master/php7.2/fpm-alpine/Dockerfile\n\n# based on tutorial https://codeable.io/wordpress-developers-intro-to-docker-part-two/\nENV WORDPRESS_ROOT /usr/src/wordpress\n\nRUN adduser -D deployer -s /bin/bash -G www-data\n\n#Modify to reflect your project's domain name\nVOLUME /var/www/example.com\nWORKDIR /var/www/example.com\n\nCOPY wp-config.php $WORDPRESS_ROOT\nRUN chown -R deployer:www-data $WORDPRESS_ROOT \\\n    && chmod 770 $WORDPRESS_ROOT \\\n    && chmod 640 $WORDPRESS_ROOT/wp-config.php\n\nCOPY cron.conf /etc/crontabs/deployer\nRUN chmod 600 /etc/crontabs/deployer\n\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n    && chmod +x wp-cli.phar \\\n    && mv wp-cli.phar /usr/local/bin/wp\n\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY wordpress.conf /etc/nginx/conf.d/\nCOPY restrictions.conf /etc/nginx/restrictions.conf\nCOPY html/index.html /var/www/html\nRUN  mv /usr/local/etc/php-fpm.d/www.conf /usr/local/etc/php-fpm.d/www.conf-original\nCOPY php-fpm.conf /usr/local/etc/php-fpm.d/www.conf\n\nCOPY supervisor/supervisord.conf /etc/supervisord.conf\nCOPY supervisor/stop-supervisor.sh /usr/local/bin/\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/*.sh\nENTRYPOINT [ \"entrypoint.sh\" ]\nCMD [ \"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\" ]"
}