{
  "startTime": 1674241509445,
  "endTime": 1674241510542,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 249
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 249
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 20,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 24,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 24,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 24,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 23,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 21,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 22,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker container for openSUSE 11.2\n\n# See https://github.com/ceejatec/naked-docker/ for details about the\n# construction of the base image.\n\nFROM ceejatec/naked-opensuse:11.2\nMAINTAINER ceej@couchbase.com\n\nUSER root\nRUN zypper install -y openssh sudo && zypper clean\n\n# Set up for SSH daemon\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config && \\\n    sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config && \\\n    sed -ri 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config && \\\n    ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa && \\\n    ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa\n\n# Create buildbot user with password-less sudo privs, and give\n# ownership of /opt/buildbot\nRUN groupadd -g1000 buildbot && \\\n    useradd buildbot -g buildbot -u1000 -G wheel -m -s /bin/bash && \\\n    mkdir /opt/buildbot && chown -R buildbot:buildbot /opt/buildbot && \\\n    echo 'buildbot:buildbot' | chpasswd && \\\n    sed -ri 's/ALL\\) ALL/ALL) NOPASSWD:ALL/' /etc/sudoers\n\nADD .ssh /home/buildbot/.ssh\nRUN chown -R buildbot:buildbot /home/buildbot/.ssh && \\\n    chmod 700 /home/buildbot/.ssh && \\\n    chmod 600 /home/buildbot/.ssh/*\n\n### Install Couchbase build dependencies ######################################\n# * Packages from the base CentOS repository\nRUN zypper install -y \\\n                binutils \\\n                curl \\\n                ed \\\n                make \\\n                man \\\n                ncurses-devel \\\n                libopenssl-devel \\\n                python-devel \\\n                lsb-release \\\n                ruby rubygems rubygem-rake \\\n                tar \\\n                unzip && \\\n                zypper clean\n\n# * golang\nRUN mkdir /tmp/deploy && \\\n    curl -f https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz -o /tmp/deploy/go.tar.gz && \\\n    cd /usr/local && tar xzf /tmp/deploy/go.tar.gz && \\\n    cd bin && for file in /usr/local/go/bin/*; do ln -s $file; done && \\\n    rm -fr /tmp/deploy && rm /tmp/deploy/go.tar.gz\n\n# * repo\nRUN curl -f https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo && \\\n    chmod a+x /usr/local/bin/repo && \\\n    zypper install -y python-xml && zypper clean\n\n# GCC (from ceejatec/opensuse-gcc-build)\nCOPY build/local /usr/local\nRUN  (echo \"/usr/local/lib64\"; cat /etc/ld.so.conf) > /tmp/ld.so.conf && \\\n     mv /tmp/ld.so.conf /etc && ldconfig && \\\n     ln -s gcc /usr/local/bin/cc\n\n# * CMake (from cmake.org)\nRUN mkdir /tmp/deploy && cd /tmp/deploy && \\\n    curl -f -O http://www.cmake.org/files/v3.1/cmake-3.1.3.tar.gz && \\\n    tar xzf cmake-3.1.3.tar.gz && \\\n    cd cmake-3.1.3 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --no-system-libs && \\\n    make -j8 all && make install && \\\n    cd /tmp && rm -rf /tmp/deploy && rm cmake-3.1.3.tar.gz\n\n# * git\nRUN mkdir /tmp/deploy && \\\n    zypper install -y curl-devel gettext-tools && \\\n    curl -f https://www.kernel.org/pub/software/scm/git/git-1.9.4.tar.gz -o /tmp/deploy/git.tar.gz && \\\n    cd /tmp/deploy && tar xzf git.tar.gz && \\\n    cd git-1.9.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j8 NO_PERL=YesPlease && make NO_PERL=YesPlease install && \\\n    cd /tmp && rm -rf /tmp/deploy && \\\n    zypper remove -y cvs gettext-runtime curl-devel gettext-devel gettext-tools libcurl-devel libgomp44 tcsh && \\\n    zypper clean && \\\n    cd /usr/local/libexec/git-core && \\\n    find . -samefile git -name 'git-*' -exec ln -sf git {} \\; && \\\n    find . -samefile git-remote-ftp -name 'git-*' -exec ln -sf git-remote-ftp {} \\; && \\\n    (strip * || true) && \\\n    ln -s /usr/local/bin/git /usr/bin/git && rm git.tar.gz\n\n# Install autoconf and friends - necessary for building some third-party deps\n# from source, not for Couchbase. (The \"full\" version of perl is also required\n# for some third-party builds, so don't remove that after building libtool.)\nRUN zypper install -y perl && \\\n    mkdir /tmp/deploy && \\\n    curl -f -L https://ftp.gnu.org/gnu/m4/m4-1.4.17.tar.bz2 -o /tmp/deploy/m4-1.4.17.tar.bz2 && \\\n    cd /tmp/deploy && tar -xjf m4-1.4.17.tar.bz2 && \\\n    cd m4-1.4.17 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make -j8 && make install && \\\n    curl -f -L https://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz -o /tmp/deploy/autoconf-2.69.tar.gz && \\\n    cd /tmp/deploy && tar -xzf autoconf-2.69.tar.gz && \\\n    cd autoconf-2.69 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make -j8 && make install && \\\n    curl -f -L https://ftpmirror.gnu.org/automake/automake-1.14.tar.gz -o /tmp/deploy/automake-1.14.tar.gz && \\\n    cd /tmp/deploy && tar -xzf automake-1.14.tar.gz && \\\n    cd automake-1.14 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make && make install && \\\n    curl -f -L https://ftpmirror.gnu.org/libtool/libtool-2.4.2.tar.gz -o /tmp/deploy/libtool-2.4.2.tar.gz && \\\n    cd /tmp/deploy && tar -xzf libtool-2.4.2.tar.gz && \\\n    cd libtool-2.4.2 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make -j8 && make install && \\\n    cd /tmp && rm -rf /tmp/deploy && zypper clean && rm m4-1.4.17.tar.bz2\n\n# * ccache (from source)\nRUN mkdir /tmp/deploy && \\\n    curl -f -L https://www.samba.org/ftp/ccache/ccache-3.1.9.tar.bz2 -o /tmp/deploy/ccache.tar.bz2 && \\\n    cd /tmp/deploy && tar -xjf ccache.tar.bz2 && \\\n    cd ccache-3.1.9 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/buildbot && make -j8 && \\\n    make install && rm -rf /home/buildbot/share && \\\n    ln -s ccache /home/buildbot/bin/gcc && \\\n    ln -s ccache /home/buildbot/bin/g++ && \\\n    ln -s ccache /home/buildbot/bin/cc && \\\n    ln -s ccache /home/buildbot/bin/c++ && \\\n    rm -fr /tmp/deploy && rm ccache.tar.bz2\n\n# Install requirements for buildbot and buildbot tasks\nRUN zypper install -y python-setuptools python-dateutil perl-libwww-perl perl-XML-Simple && \\\n    easy_install buildbot_slave && \\\n    mkdir /home/buildbot/buildbot_slave && \\\n    buildslave create-slave /home/buildbot/buildbot_slave 10.1.1.210:9999 suse-11-builddocker-01 suse-11-builddocker-01 && \\\n    echo \"Couchbase Build Team <build-team@couchbase.com>\" > /home/buildbot/buildbot_slave/info/admin && \\\n    echo \"SUSE 11 x86_64 Couchbase Build Slave running in Docker\" > /home/buildbot/buildbot_slave/info/host && \\\n    chown -R buildbot:buildbot /home/buildbot/buildbot_slave && \\\n    zypper clean\nRUN mkdir /tmp/deploy && \\\n    curl -f -L 'https://downloads.sourceforge.net/project/s3tools/s3cmd/1.5.0-rc1/s3cmd-1.5.0-rc1.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fs3tools%2Ffiles%2Fs3cmd%2F1.5.0-rc1%2F&ts=1406252479&use_mirror=superb-dca2' -o /tmp/deploy/s3cmd.tar.gz && \\\n    cd /tmp/deploy && tar -xvf s3cmd.tar.gz && cd s3cmd-1.5.0-rc1 && \\\n    python setup.py build && python setup.py install && \\\n    cd /tmp && rm -rf /tmp/deploy && rm s3cmd.tar.gz\n\nADD .s3cfg /home/buildbot/.s3cfg\nRUN chown buildbot:buildbot /home/buildbot/.s3cfg\n\n# Expose SSH daemon and run our builder startup script\nEXPOSE 22\n\n# Override default command for buildbot purposes\nCMD su - buildbot -c \"buildslave start /home/buildbot/buildbot_slave\"; /usr/sbin/sshd -D\n\n"
}