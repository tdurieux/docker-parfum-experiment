{
  "startTime": 1674242319200,
  "endTime": 1674242319947,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 232,
        "lineEnd": 234,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 7,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 7,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n###############\n#\n# Example Apache Yetus Dockerfile that includes all functionality supported\n# as well as enough bits to build and release Apache Yetus itself.\n#\n###############\n\nFROM ubuntu:xenial\n\n## NOTE to committers: if this gets moved from Xenial to something else, be\n## sure to also fix the gpg link in asf-site-src as appropriate\n\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nENV DEBIAN_FRONTEND noninteractive\nENV DEBCONF_TERSE true\n\n######\n# Install some basic Apache Yetus requirements\n# some git repos need ssh-client so do it too\n# Adding libffi-dev for all the programming languages\n# that take advantage of it.\n######\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    git \\\n    libffi-dev \\\n    locales \\\n    pkg-config \\\n    rsync \\\n    software-properties-common \\\n    ssh-client \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n###\n# Set the locale\n###\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n####\n# Install java (first, since we want to dicate what form of Java)\n####\n\n####\n# OpenJDK 8\n####\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y openjdk-8-jdk-headless \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n####\n# Install ant\n####\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y ant \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n####\n# Install GNU automake, GNU make, and related\n####\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y autoconf automake libtool make \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n####\n# Install bats (TAP-capable unit testing for shell scripts)\n####\nRUN git clone --branch v1.1.0 \\\n      https://github.com/bats-core/bats-core.git \\\n      /tmp/bats-core \\\n    && /tmp/bats-core/install.sh /usr/local \\\n    && rm -rf /tmp/bats-core\n\n####\n# Install cmake\n####\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y cmake \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n###\n# Install docker\n###\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\nRUN add-apt-repository -y \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y docker-ce \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n######\n# Install findbugs\n######\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y findbugs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nENV FINDBUGS_HOME /usr\n\n#####\n# Install SpotBugs\n#####\nRUN curl -fsSL https://repo.maven.apache.org/maven2/com/github/spotbugs/spotbugs/3.1.12/spotbugs-3.1.12.tgz -o spotbugs.tgz \\\n    && curl -fsSL https://repo.maven.apache.org/maven2/com/github/spotbugs/spotbugs/3.1.12/spotbugs-3.1.12.tgz.sha1 -o spotbugs.tgz.sha1 \\\n    && echo -n \"  spotbugs.tgz\" >> spotbugs.tgz.sha1 \\\n    && shasum -c spotbugs.tgz.sha1 \\\n    && mkdir -p /opt/spotbugs \\\n    && tar -C /opt/spotbugs --strip-components 1  -xpf spotbugs.tgz \\\n    && rm spotbugs.tgz spotbugs.tgz.sha1\nENV SPOTBUGS_HOME /opt/spotbugs\n\n####\n# Install GNU C/C++\n####\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y g++ gcc libc-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n######\n# Install maven\n######\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y maven \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n######\n# Install perl\n######\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y perl libperl-critic-perl \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n######\n# Install python3 and pylint3\n######\nRUN add-apt-repository -y ppa:deadsnakes/ppa\n# hadolint ignore=DL3008\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n   python3.7 \\\n   python3.7-dev \\\n   && apt-get clean \\\n   && rm -rf /var/lib/apt/lists/*\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py \\\n   && python3.7 get-pip.py \\\n   && rm /usr/local/bin/pip\n# astroid and pylint go hand-in-hand.  Upgrade both at the same time.\n# hadolint ignore=DL3013\nRUN pip3 install --no-cache-dir -v astroid==2.2.4 pylint==2.3.1 docker-compose==1.24.0\nRUN mv /usr/local/bin/pylint /usr/local/bin/pylint3\n\n######\n# Install python, pylint2, and yamllint\n######\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y python \\\n    python2.7 \\\n    python-pip \\\n    python-pkg-resources \\\n    python-setuptools \\\n    python-wheel \\\n    python-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nRUN pip2 install --no-cache-dir -v astroid==1.6.5 pylint==1.9.2 python-dateutil==2.7.3 yamllint==1.12.1\nRUN mv /usr/local/bin/pylint /usr/local/bin/pylint2\n\n#####\n# backward compatibility\n#####\nRUN ln -s /usr/local/bin/pylint2 /usr/local/bin/pylint\n\n####\n# Install ruby and associated bits\n###\nRUN echo 'gem: --no-rdoc --no-ri' >> /root/.gemrc\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n    ruby \\\n    ruby-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nRUN gem install rake -v 12.3.2\nRUN gem install rubocop -v 0.67.2\nRUN gem install bundler -v 1.17.3\n# set some reasonable defaults for ruby\n# user's can always override these as needed\nENV PATH ${PATH}:/var/tmp/.bundler-gems/bin\nENV BUNDLE_PATH /var/tmp/.bundler-gems\n\n####\n# Install shellcheck (shell script lint)\n# NOTE: A bunch of stuff is removed to shrink the size of the Docker image\n# Be very careful changing the code here, layer size may grow very large!\n####\nRUN apt-get -q update && apt-get -q install --no-install-recommends -y cabal-install \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cabal update \\\n    && cabal install -j ShellCheck \\\n    && cp -p /root/.cabal/bin/shellcheck /usr/local/bin/shellcheck \\\n    && apt remove -y ghc cabal-install \\\n    && apt autoremove -y \\\n    && rm -rf /root/.cabal\n\n###\n# Install hadolint\n####\nRUN curl -f -L -s -S \\\n   https://github.com/hadolint/hadolint/releases/download/v1.16.2/hadolint-Linux-x86_64 \\\n   -o /bin/hadolint && \\\n   chmod a+rx /bin/hadolint && \\\n   shasum -a 512 /bin/hadolint | \\\n   awk '$1!=\"7044f2f5a8a9f2a52d9921f34a5cca5fee6a26c1de052f5348d832624976eb760195c65d79a69454f3056359e23b382353977340a7a1ca5c7805b164690c0485\" {exit(1)}'\n\n###\n# Install npm and JSHint\n###\n# hadolint ignore=DL3008\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash - \\\n    && apt-get -q install --no-install-recommends -y nodejs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* && \\\n    npm install -g jshint@2.10.2 markdownlint-cli@0.15.0 && npm cache clean --force;\n\n###\n# Install golang and supported helpers\n###\n# hadolint ignore=DL3008\nRUN add-apt-repository -y ppa:longsleep/golang-backports \\\n    && apt-get -q update \\\n    && apt-get -q install --no-install-recommends -y golang-go \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nRUN go get -u github.com/mgechev/revive \\\n    && go get -u github.com/mrtazz/checkmake \\\n    && (GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.16.0) \\\n    && (GO111MODULE=on go get github.com/uber/prototool/cmd/prototool@6a473a4f1d86e7c8ff6a844d7dc4f7c3f6207a3f) \\\n    && mv /root/go/bin/* /usr/local/bin \\\n    && rm -rf /root/go\n\n####\n# YETUS CUT HERE\n# Anthing after the above line is ignored by Yetus, so could\n# include other requirements not needed by your development\n# (but not build) environment\n###\n"
}