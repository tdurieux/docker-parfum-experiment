{
  "startTime": 1674241950410,
  "endTime": 1674241950794,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# This dockerfile defines the expected runtime environment before the project is installed\nFROM ubuntu:bionic as builder\nLABEL maintainer=\"Bal√°zs Dukai <b.dukai@tudelft.nl>\"\nLABEL description=\"Build environment for 3dfier, includes PostgreSQL\"\n\n# required repositories\nRUN set -x; \\\n    apt-get clean \\\n    && apt-get update; \\\n    apt-get install --no-install-recommends -y software-properties-common; rm -rf /var/lib/apt/lists/*; \\\n    apt-get install --no-install-recommends -y tzdata; \\\n    echo \"Europe/Amsterdam\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata; \\\n    apt-get update\n\n# C++ packages\nRUN set -x \\\n    && apt-get install -y --no-install-recommends --no-install-suggests \\\n        gcc \\\n        g++ \\\n        cmake \\\n        libboost-dev \\\n        libboost-filesystem-dev \\\n        libboost-locale-dev \\\n        libboost-thread-dev \\\n        libboost-iostreams-dev \\\n        libboost-program-options-dev \\\n        libyaml-cpp-dev \\\n        libgmp-dev \\\n        libmpfr-dev \\\n        gdbserver \\\n        unzip \\\n        wget \\\n    && apt-get update \\\n    && apt-get upgrade -y && rm -rf /var/lib/apt/lists/*;\n\n# PostgreSQL\nRUN set -x \\\n    && apt-get install --no-install-recommends -y postgresql && rm -rf /var/lib/apt/lists/*;\n\n# GIS packages\nRUN set -x \\\n    && apt-get install --no-install-recommends -y \\\n        libgdal-dev \\\n        libproj-dev \\\n    && apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get autoremove --purge -y \\\n    && apt-get autoclean -y \\\n    && rm -rf /var/cache/apt/* /tmp/* && rm -rf /var/lib/apt/lists/*;\n\n\n#RUN export CC=gcc-8 && export CXX=g++-8\n\nENV IN_DIR \"/opt\"\n\n# get LASzip\nRUN set -ex; \\\n    cd $IN_DIR; \\\n    wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz; \\\n    wget https://github.com/LASzip/LASzip/releases/download/v2.2.0/laszip-src-2.2.0.tar.gz.md5; \\\n    md5sum -c laszip-src-2.2.0.tar.gz.md5; \\\n    rm laszip-src-2.2.0.tar.gz.md5; \\\n    tar -xf laszip-src-2.2.0.tar.gz; \\\n    rm laszip-src-2.2.0.tar.gz\n\n# The Makefile need to be modified in order to be compliant to what libLAS\n# is looking for. https://github.com/libLAS/libLAS/issues/9\nRUN set -x; \\\n    cd $IN_DIR/laszip-src-2.2.0; \\\n    sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.am; \\\n    sed -i 's/laszipdir = $(includedir)\\//laszipdir = $(includedir)\\/laszip/' ./include/laszip/Makefile.in; \\\n    mkdir build; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$IN_DIR/laszip-src-2.2.0/build; \\\n    make && make install && make clean\n\n#Libraries have been installed in:\n#   /home/bdukai/Desktop/laszip-src-2.2.0/build/lib\n#\n#If you ever happen to want to link against installed libraries\n#in a given directory, LIBDIR, you must either use libtool, and\n#specify the full pathname of the library, or use the `-LLIBDIR'\n#flag during linking and do at least one of the following:\n#   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n#     during execution\n#   - add LIBDIR to the `LD_RUN_PATH' environment variable\n#     during linking\n#   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n#   - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n#\n#See any operating system documentation about shared libraries for\n#more information, such as the ld(1) and ld.so(8) manual pages.\n\nRUN set -x; \\\n    cd $IN_DIR; \\\n    wget https://download.osgeo.org/liblas/libLAS-1.8.1.tar.bz2; \\\n    tar -xf libLAS-1.8.1.tar.bz2; \\\n    rm libLAS-1.8.1.tar.bz2; \\\n    cd libLAS-1.8.1; \\\n    mkdir build; \\\n    mkdir cmake_build; \\\n    cd cmake_build; \\\n    cmake .. \\\n    -DCMAKE_INSTALL_PREFIX=$IN_DIR/libLAS-1.8.1/build \\\n    -DWITH_GDAL=ON \\\n    -DWITH_LASZIP=ON \\\n    -DLASZIP_INCLUDE_DIR=$IN_DIR/laszip-src-2.2.0/build/include \\\n    -DLASZIP_LIBRARY=$IN_DIR/laszip-src-2.2.0/build/lib/liblaszip.so \\\n    ; \\\n    make && make install && make clean\n\nWORKDIR /opt/\n\nRUN set -x; \\\n    wget https://github.com/CGAL/cgal/archive/releases/CGAL-4.12.tar.gz; \\\n    wget https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-4.12/md5sum.txt; \\\n    md5sum -c md5sum.txt; \\\n    rm md5sum.txt; \\\n    tar -xf CGAL-4.12.tar.gz; \\\n    rm CGAL-4.12.tar.gz; \\\n    cd cgal-releases-CGAL-4.12; \\\n    mkdir build; \\\n    cd build; \\\n    cmake ..; \\\n    make\n\nRUN useradd -ms /bin/bash 3dfier\nUSER 3dfier\nWORKDIR /home/3dfier\n\n"
}