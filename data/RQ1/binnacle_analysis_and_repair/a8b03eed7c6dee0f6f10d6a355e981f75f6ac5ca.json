{
  "startTime": 1674241035279,
  "endTime": 1674241035464,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 37,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10 as base\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\n\nRUN true \\\n && apk add --no-cache \\\n      cairo \\\n      collectd \\\n      collectd-disk \\\n      collectd-nginx \\\n      findutils \\\n      librrd \\\n      logrotate \\\n      memcached \\\n      nginx \\\n      nodejs \\\n      npm \\\n      py3-pyldap \\\n      redis \\\n      runit \\\n      sqlite \\\n      expect \\\n      dcron \\\n      py-mysqldb \\\n      mysql-dev \\\n      mysql-client \\\n      postgresql-dev \\\n      postgresql-client \\\n && rm -rf \\\n      /etc/nginx/conf.d/default.conf \\\n && mkdir -p \\\n      /var/log/carbon \\\n      /var/log/graphite\n\nFROM base as build\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\n\nRUN true \\\n && apk add --no-cache --update \\\n      alpine-sdk \\\n      git \\\n      libffi-dev \\\n      pkgconfig \\\n      py3-cairo \\\n      py3-pip \\\n      py3-pyldap \\\n      py3-virtualenv \\\n      py-rrd \\\n      py-mysqldb \\\n      openldap-dev \\\n      python3-dev \\\n      rrdtool-dev \\\n      wget \\\n && virtualenv /opt/graphite \\\n && . /opt/graphite/bin/activate \\\n && pip3 install --no-cache-dir \\\n      django==1.11.21 \\\n      django-statsd-mozilla \\\n      fadvise \\\n      gunicorn \\\n      msgpack-python \\\n      redis \\\n      rrdtool \\\n      python-ldap \\\n      mysqlclient \\\n      psycopg2\n\nARG version=1.1.5\n\n# install whisper\nARG whisper_version=${version}\nARG whisper_repo=https://github.com/graphite-project/whisper.git\nRUN git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper \\\n && cd /usr/local/src/whisper \\\n && . /opt/graphite/bin/activate \\\n && python3 ./setup.py install\n\n# install carbon\nARG carbon_version=${version}\nARG carbon_repo=https://github.com/graphite-project/carbon.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon \\\n && cd /usr/local/src/carbon \\\n && pip3 install --no-cache-dir -r requirements.txt \\\n && python3 ./setup.py install\n\n# install graphite\nARG graphite_version=${version}\nARG graphite_repo=https://github.com/graphite-project/graphite-web.git\nRUN . /opt/graphite/bin/activate \\\n && git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web \\\n && cd /usr/local/src/graphite-web \\\n && pip3 install --no-cache-dir -r requirements.txt \\\n && python3 ./setup.py install\n\n# install statsd (as we have to use this ugly way)\nARG statsd_version=8d5363cb109cc6363661a1d5813e0b96787c4411\nARG statsd_repo=https://github.com/etsy/statsd.git\nWORKDIR /opt\nRUN git clone \"${statsd_repo}\" \\\n && cd /opt/statsd \\\n && git checkout \"${statsd_version}\" \\\n && npm install && npm cache clean --force;\n\nCOPY conf/opt/graphite/conf/                             /opt/defaultconf/graphite/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/defaultconf/graphite/local_settings.py\n\n# config graphite\nCOPY conf/opt/graphite/conf/*.conf /opt/graphite/conf/\nCOPY conf/opt/graphite/webapp/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nWORKDIR /opt/graphite/webapp\nRUN mkdir -p /var/log/graphite/ \\\n  && PYTHONPATH=/opt/graphite/webapp /opt/graphite/bin/django-admin.py collectstatic --noinput --settings=graphite.settings\n\n# config statsd\nCOPY conf/opt/statsd/config/ /opt/defaultconf/statsd/config/\n\nFROM base as production\nLABEL maintainer=\"Denys Zhdanov <denis.zhdanov@gmail.com>\"\n\nENV STATSD_INTERFACE udp\n\nCOPY conf /\n\n# copy /opt from build image\nCOPY --from=build /opt /opt\n\n\n# defaults\nEXPOSE 80 2003-2004 2013-2014 2023-2024 8080 8125 8125/udp 8126\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\", \"/opt/graphite/webapp/graphite/functions/custom\", \"/etc/nginx\", \"/opt/statsd/config\", \"/etc/logrotate.d\", \"/var/log\", \"/var/lib/redis\"]\n\nSTOPSIGNAL SIGHUP\n\nENTRYPOINT [\"/entrypoint\"]\n"
}