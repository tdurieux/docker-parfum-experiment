{
  "startTime": 1674251164693,
  "endTime": 1674251164816,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build with\n# docker build --build-arg K8S_TOKEN=$JENKINS_TOKEN -t jenkins:docker .\n\nFROM jenkins/jenkins:lts\n\nUSER root\n\nRUN apt update && apt install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg2 software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Docker\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -\nRUN apt-key fingerprint 0EBFCD88\nRUN add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"\nRUN apt update && apt install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Kubernetes & Openshift CLI\nARG OC_RELEASE=openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit\nARG OC_VERSION=v3.11.0\n\nRUN wget https://github.com/openshift/origin/releases/download/$OC_VERSION/$OC_RELEASE.tar.gz\nRUN tar xzvf $OC_RELEASE.tar.gz && rm $OC_RELEASE.tar.gz\n\nRUN mv $OC_RELEASE/oc /usr/local/bin/\nRUN mv $OC_RELEASE/kubectl /usr/local/bin/\n\n# Kubernetes connection\nARG K8S_SERVER=kubernetes:443\nARG K8S_NAMESPACE=default\nARG K8S_SA=jenkins\nARG K8S_TOKEN=xxxx\n\nRUN mkdir -p /etc/kubernetes/\n\nRUN echo \"apiVersion: v1 \\n\\\nclusters: \\n\\\n- cluster: \\n\\\n    insecure-skip-tls-verify: true \\n\\\n    server: https://$K8S_SERVER \\n\\\n  name: $K8S_SERVER \\n\\\ncontexts: \\n\\\n- context: \\n\\\n    cluster: $K8S_SERVER \\n\\\n    namespace: $K8S_NAMESPACE \\n\\\n    user: jenkins/$K8S_SERVER \\n\\\n  name: $K8S_NAMESPACE/$K8S_SERVER/$K8S_SA \\n\\\ncurrent-context: $K8S_NAMESPACE/$K8S_SERVER/$K8S_SA \\n\\\nkind: Config \\n\\\npreferences: {} \\n\\\nusers: \\n\\\n- name: $K8S_SA/$K8S_SERVER \\n\\\n  user: \\n\\\n    token: $K8S_TOKEN\" > /etc/kubernetes/config\n\nRUN chown jenkins: /etc/kubernetes/config\n\n"
}