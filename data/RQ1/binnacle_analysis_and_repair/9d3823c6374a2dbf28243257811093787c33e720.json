{
  "startTime": 1674236137926,
  "endTime": 1674236138053,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/passenger-full:0.9.22 \nMAINTAINER Martin Fenner \"mfenner@datacite.org\" \n# Set correct environment variables \nENV HOME /home/app \n\n# Allow app user to read /etc/container_environment \nRUN usermod -a -G docker_env app \n\n# Use baseimage-docker's init process \nCMD [\"/sbin/my_init\"] \n\n# Install Ruby 2.4.1 \nRUN bash -lc 'rvm --default use ruby-2.4.1' \n\n# Update installed APT packages, clean up when done \nRUN apt-get update && \\  \napt-get upgrade -y -o Dpkg::Options::=\"--force-confold\" && \\  \napt-get clean && \\\n apt-get install --no-install-recommends ntp wget tzdata pandoc -y && \\\nrm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Enable Passenger and Nginx and remove the default site \n# Preserve env variables for nginx \nRUN rm -f /etc/service/nginx/down && \\  \nrm /etc/nginx/sites-enabled/default \nCOPY vendor/docker/webapp.conf /etc/nginx/sites-enabled/webapp.conf \nCOPY vendor/docker/00_app_env.conf /etc/nginx/conf.d/00_app_env.conf \n\n# Remove unused SSH service \nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh \n\n# Use Amazon NTP servers \nCOPY vendor/docker/ntp.conf /etc/ntp.conf \n\n# Copy webapp folder \nCOPY . /home/app/webapp/ \nRUN mkdir -p /home/app/webapp/tmp/pids && \\  \nmkdir -p /home/app/webapp/vendor/bundle && \\  \nchown -R app:app /home/app/webapp && \\  \nchmod -R 755 /home/app/webapp \n\n# Install Ruby gems \nWORKDIR /home/app/webapp \nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && \\  \ngem install bundler && \\\n/sbin/setuser app bundle install --path vendor/bundle && rm -rf /root/.gem;\n\n# Run additional scripts during container startup (i.e. not at build time) \nRUN mkdir -p /etc/my_init.d \n\n# Expose web \nEXPOSE 80 \n\n"
}