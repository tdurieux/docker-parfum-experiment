{
  "startTime": 1674240778340,
  "endTime": 1674240778708,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:16.04\n\nENV LC_ALL C\nENV LANG C\nENV LANGUAGE C\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       build-essential \\\n       bzip2 \\\n       ca-certificates \\\n       ccache \\\n       clang-format-3.8 \\\n       cmake \\\n       curl \\\n       g++ \\\n       git \\\n       libarchive-dev \\\n       libgoogle-glog-dev \\\n       libgtest-dev \\\n       libhdf5-dev \\\n       libleveldb-dev \\\n       liblmdb-dev \\\n       libsnappy-dev \\\n       libssl-dev \\\n       make \\\n       openssl \\\n       unzip \\\n       wget \\\n       zip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n################################################## libarchive\nRUN cd /tmp \\\n    && curl -f -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n    && tar xfa libarchive-3.3.2.tar.gz \\\n    && mkdir libarchive-build \\\n    && cd libarchive-build \\\n    && cmake \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n        -DENABLE_NETTLE=FALSE \\\n        -DENABLE_OPENSSL=FALSE \\\n        -DENABLE_LZO=FALSE \\\n        -DENABLE_LZMA=FALSE \\\n        -DENABLE_BZip2=FALSE \\\n        -DENABLE_LIBXML2=FALSE \\\n        -DENABLE_EXPAT=FALSE \\\n        -DENABLE_PCREPOSIX=FALSE \\\n        -DENABLE_LibGCC=FALSE \\\n        -DENABLE_CNG=FALSE \\\n        -DENABLE_TAR=FALSE \\\n        -DENABLE_TAR_SHARED=FALSE \\\n        -DENABLE_CPIO=FALSE \\\n        -DENABLE_CPIO_SHARED=FALSE \\\n        -DENABLE_CAT=FALSE \\\n        -DENABLE_CAT_SHARED=FALSE \\\n        -DENABLE_XATTR=FALSE \\\n        -DENABLE_ACL=FALSE \\\n        -DENABLE_ICONV=FALSE \\\n        -DENABLE_TEST=FALSE \\\n        ../libarchive-3.3.2 \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm libarchive-3.3.2.tar.gz\n\n################################################## protobuf\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && PROTOVER=3.4.1 \\\n    && curl -f -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n    && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n    && cd protobuf-${PROTOVER} \\\n    && mkdir build \\\n    && cd build \\\n    && cmake \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n        -Dprotobuf_BUILD_TESTS=OFF \\\n        ../cmake \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm protobuf-v${PROTOVER}.tar.gz\n\n################################################## miniconda3\nARG PYTHON_VERSION_MAJOR\nARG PYTHON_VERSION_MINOR\nENV PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}\n\nADD python/setup_requirements.txt /tmp/deps/\nADD python/requirements.txt /tmp/deps/\nADD python/test_requirements.txt /tmp/deps/\n\nRUN umask 0 \\\n    && mkdir -p /tmp/deps \\\n    && cd /tmp/deps \\\n    && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \\\n    && rm -rf Miniconda3-latest-Linux-x86_64.sh \\\n    && . /opt/miniconda3/bin/activate \\\n    && conda create -n nnabla-build python=${PYVERNAME} \\\n    && conda activate nnabla-build \\\n    && pip install --no-cache-dir --only-binary -U -r /tmp/deps/setup_requirements.txt \\\n    && pip install --no-cache-dir --only-binary -U -r /tmp/deps/requirements.txt \\\n    && pip install --no-cache-dir --only-binary -U -r /tmp/deps/test_requirements.txt \\\n    && conda clean -y --all \\\n    && cd / \\\n    && rm -rf /tmp/*\n\nENV PATH /opt/miniconda3/envs/nnabla-build/bin:$PATH\nENV LD_LIBRARY_PATH /opt/miniconda3/envs/nnabla-build/lib:$LD_LIBRARY_PATH\n\nRUN cd /tmp \\\n    && git clone https://github.com/onnx/tensorflow-onnx.git \\\n    && cd tensorflow-onnx \\\n    && python setup.py install \\\n    && rm -rf /tmp/tensorflow-onnx\n"
}