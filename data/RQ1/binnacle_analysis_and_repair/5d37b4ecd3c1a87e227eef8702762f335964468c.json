{
  "startTime": 1674241757548,
  "endTime": 1674241757929,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 11,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 11,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 11,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 11,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 11,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 15,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# @description php 7.1 image base on the alpine 3.7 镜像更小，构建完成只有46M\n#                       some information\n# ------------------------------------------------------------------------------------\n# @link https://hub.docker.com/_/alpine/      alpine image\n# @link https://hub.docker.com/_/php/         php image\n# @link https://github.com/docker-library/php php dockerfiles\n# ------------------------------------------------------------------------------------\n# @build-example docker build . -f Dockerfile -t swoft/swoft-project:v1.0\n# @run-example docker run --rm -d -p 8080:8080 --name swoft-project swoft/swoft-project:1.0\n# @run-example docker run --rm -d -p 8080:8080 --name swoft-project --env-file .env registry.cn-shanghai.aliyuncs.com/limingxinleo/swoft-project:latest\n#\n\nFROM swoft/alphp:base\nLABEL maintainer=\"limx <limingxin@swoft.org>\" version=\"1.0\"\n\n##\n# ---------- env settings ----------\n##\nENV HIREDIS_VERSION=0.13.3 \\\n    SWOOLE_VERSION=4.2.5 \\\n    MONGO_VERSION=1.5.2 \\\n    CPHALCON_VERSION=3.4.1 \\\n    #  install and remove building packages\n    PHPIZE_DEPS=\"autoconf dpkg-dev dpkg file g++ gcc libc-dev make php7-dev php7-pear pkgconf re2c pcre-dev zlib-dev\"\n\n##\n# install php extensions\n##\nRUN set -ex \\\n        && cd /tmp \\\n        && curl -f -SL \"https://github.com/redis/hiredis/archive/v${HIREDIS_VERSION}.tar.gz\" -o hiredis.tar.gz \\\n        && curl -f -SL \"https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz\" -o swoole.tar.gz \\\n        && curl -f -SL \"https://pecl.php.net/get/mongodb-${MONGO_VERSION}.tgz\" -o mongodb.tgz \\\n        && curl -f -SL \"https://github.com/phalcon/cphalcon/archive/v${CPHALCON_VERSION}.zip\" -o cphalcon.zip \\\n        && ls -alh \\\n        && apk update \\\n        # for swoole extension libaio linux-headers\n        && apk add --no-cache libstdc++ openssl php7-xml php7-pcntl git bash \\\n        && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS libaio-dev openssl-dev \\\n        # php extension: mongodb\n        && pecl install mongodb.tgz \\\n        && echo \"extension=mongodb.so\" > /etc/php7/conf.d/mongodb.ini \\\n        # php extension: phalcon\n        && cd /tmp \\\n        && unzip cphalcon.zip \\\n        && rm cphalcon.zip \\\n        && ( \\\n            cd cphalcon-${CPHALCON_VERSION}/build \\\n            && ./install \\\n            && echo \"extension=phalcon.so\" > /etc/php7/conf.d/phalcon.ini \\\n        ) \\\n        && rm -r cphalcon-${CPHALCON_VERSION} \\\n        # hiredis - redis C client, provide async operate support for Swoole\n        && cd /tmp \\\n        && tar -zxvf hiredis.tar.gz \\\n        && cd hiredis-${HIREDIS_VERSION} \\\n        && make -j && make install \\\n        # php extension: swoole\n        && cd /tmp \\\n        && mkdir -p swoole \\\n        && tar -xf swoole.tar.gz -C swoole --strip-components=1 \\\n        && rm swoole.tar.gz \\\n        && ( cd swoole \\\n            && phpize \\\n            && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-async-redis --enable-mysqlnd --enable-openssl \\\n            && make -j$(nproc) && make install) \\\n\n        && rm -r swoole \\\n        && echo \"extension=swoole.so\" > /etc/php7/conf.d/swoole.ini \\\n        && php -v \\\n        # ---------- clear works ----------\n        && apk del .build-deps \\\n        && rm -rf /var/cache/apk/* /tmp/* /usr/share/man \\\n        && echo -e \"\\033[42;37m Build Completed :).\\033[0m\\n\"\n\n# 安装composer\nRUN curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && composer self-update --clean-backups\n\nCOPY . /opt/www/phalcon\n\nWORKDIR /opt/www/phalcon\n\nRUN composer install --no-dev \\\n    && composer dump-autoload -o \\\n    && cp /opt/www/phalcon/config.example.ini /opt/www/phalcon/config.ini \\\n    && php /opt/www/phalcon/run\n\nEXPOSE 8080\n\nENTRYPOINT [\"php\", \"/opt/www/phalcon/server\", \"start\"]"
}