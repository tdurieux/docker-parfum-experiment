{
  "startTime": 1674248351854,
  "endTime": 1674248352126,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedDockerfile": "# GitHub:       https://github.com/gohugoio\n# Twitter:      https://twitter.com/gohugoio\n# Website:      https://gohugo.io/\n\nFROM golang:1.11-stretch AS build\n\n\nWORKDIR /go/src/github.com/gohugoio/hugo\nRUN apt-get install -y --no-install-recommends \\\n    git gcc g++ binutils && rm -rf /var/lib/apt/lists/*;\nCOPY . /go/src/github.com/gohugoio/hugo/\nENV GO111MODULE=on\nRUN go get -d .\n\nARG CGO=0\nENV CGO_ENABLED=${CGO}\nENV GOOS=linux\n\n# default non-existent build tag so -tags always has an arg\nARG BUILD_TAGS=\"99notag\"\nRUN go install -ldflags '-w -extldflags \"-static\"' -tags ${BUILD_TAGS}\n\n# ---\n\nFROM alpine:3.9\nRUN apk add --no-cache ca-certificates\nCOPY --from=build /go/bin/hugo /hugo\nARG  WORKDIR=\"/site\"\nWORKDIR ${WORKDIR}\nVOLUME  ${WORKDIR}\nEXPOSE  1313\nENTRYPOINT [ \"/hugo\" ]\nCMD [ \"--help\" ]\n"
}