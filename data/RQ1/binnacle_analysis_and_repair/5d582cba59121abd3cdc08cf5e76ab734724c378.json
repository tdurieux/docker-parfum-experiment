{
  "startTime": 1674243134081,
  "endTime": 1674243134191,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 225
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Nginx Amplify Agent autotests\n# Based on Gentoo\n############################################################\n\n# Set the base image to Ubuntu\nFROM gentoo/stage3-amd64\n\n# File Author / Maintainer\nMAINTAINER Mike Belov\n\n# Install basic applications\nRUN emerge-webrsync\nRUN emerge app-arch/tar net-misc/curl net-misc/wget nano dialog sys-apps/net-tools\nRUN rm -rf /run && mkdir /run\n\n# Install Python and Basic Python Tools\nADD make.conf /etc/portage/make.conf\nRUN emerge python:2.7\nRUN eselect python set python2.7\n\nRUN emerge python-daemon\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python - 'pip==18.1.0'\n\n# Install nginx\nRUN emerge -1 portage\nRUN emerge nginx\n\n# Copy the application folder inside the container\nADD . /amplify\n\n# Install agent requirements:\nRUN emerge dev-vcs/git\nRUN pip install --no-cache-dir rstr==2.2.3 greenlet==0.4.12 gevent==1.1.0 lockfile==0.11.0 netaddr==0.7.18 netifaces==0.10.4 psutil==4.0.0 requests==2.12.4 python-daemon==2.0.6 setproctitle==1.1.10 flup==1.0.2 scandir==1.5 crossplane==0.1.1 \\\n && pip install --no-cache-dir git+git://github.com/esnme/ultrajson@2f1d4874f4f4d2a40a460678004c80e69387c663#egg=ujson\n\nENV AMPLIFY_ENVIRONMENT development\nENV PYTHONPATH /amplify/\n\n# Set the default directory where CMD will execute\nWORKDIR /amplify\n\n# add config\nADD nginx.conf /etc/nginx/nginx.conf\n\n# add ssl\nADD amplify-agent-test.crt /etc/nginx/certs.d/amplify-agent-test.crt\nADD amplify-agent-test.key /etc/nginx/certs.d/amplify-agent-test.key\n\nCMD /usr/sbin/nginx && python /amplify/nginx-amplify-agent.py start --config=/amplify/etc/agent.conf.development && tail -f /amplify/log/agent.log\n"
}