{
  "startTime": 1674248542509,
  "endTime": 1674248542570,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9 as builder\nWORKDIR /opt/app\n\nCOPY package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . ./\n\nARG BUILD_INFO=\"docker-latest\"\nARG CLIENT_BUILD_ARGS=\"\"\nRUN BASE_URL=\"__BASEURL__\" node build.js --gzip ${CLIENT_BUILD_ARGS}\n\n\nFROM nginx:alpine\nWORKDIR /var/www\n\nRUN \\\n    # Create init file\n    echo \"#!/bin/sh\" >> /init && \\\n    echo 'sed -i \"s|__BACKEND__|${BACKEND_HOST}|\" /etc/nginx/nginx.conf' >> /init && \\\n    echo 'sed -i \"s|__BASEURL__|${BASE_URL:-/}|g\" /var/www/index.htm /var/www/manifest.json' >> /init && \\\n    echo 'exec nginx' >> /init && \\\n    chmod a+x /init\n\nCMD [\"/init\"]\nVOLUME [\"/data\"]\n\nCOPY nginx.conf.docker /etc/nginx/nginx.conf\nCOPY --from=builder /opt/app/public/ .\n"
}