{
  "startTime": 1674250090105,
  "endTime": 1674250090371,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:15.04\n\nMAINTAINER Dan Isla <disla@jpl.nasa.gov>\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV NOTEBOOK_VERSION 4.1.0\n\n# Not essential, but wise to set the lang\n# Note: Users with other languages should set this in their derivative image\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV PYTHONIOENCODING UTF-8\n\n# Remove preinstalled copy of python that blocks our ability to install development python.\nRUN DEBIAN_FRONTEND=noninteractive apt-get remove -yq \\\n        python3-minimal \\\n        python3.4 \\\n        python3.4-minimal \\\n        libpython3-stdlib \\\n        libpython3.4-stdlib \\\n        libpython3.4-minimal\n\n\n# Python binary and source dependencies\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        language-pack-en \\\n        libcurl4-openssl-dev \\\n        libffi-dev \\\n        libsqlite3-dev \\\n        libzmq3-dev \\\n        pandoc \\\n        python \\\n        python3 \\\n        python-dev \\\n        python3-dev \\\n        sqlite3 \\\n        texlive-fonts-recommended \\\n        texlive-latex-base \\\n        texlive-latex-extra \\\n        zlib1g-dev \\\n        libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install Tini\nRUN curl -f -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini && \\\n    echo \"d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Install the recent pip release\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python2 get-pip.py && \\\n    python3 get-pip.py && \\\n    rm get-pip.py && \\\n    pip2 --no-cache-dir install requests[security] && \\\n    pip3 --no-cache-dir install requests[security]\n\n# Install some dependencies.\nRUN pip2 --no-cache-dir install ipykernel && \\\n    pip3 --no-cache-dir install ipykernel && \\\n    \\\n    python2 -m ipykernel.kernelspec && \\\n    python3 -m ipykernel.kernelspec\n\n\nRUN git clone https://github.com/jupyter/notebook.git /usr/src/jupyter-notebook\nWORKDIR /usr/src/jupyter-notebook\nRUN git checkout ${NOTEBOOK_VERSION}\n\n# Install dependencies and run tests.\nRUN BUILD_DEPS=\"nodejs-legacy npm\" && \\\n    apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq $BUILD_DEPS && \\\n\n    pip3 install --no-cache-dir --pre -e /usr/src/jupyter-notebook && \\\n\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get purge -y --auto-remove \\\n        -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS\n\n# Add a notebook profile.\nRUN mkdir -p -m 700 /root/.jupyter/ && \\\n    echo \"c.NotebookApp.ip = '*'\" >> /root/.jupyter/jupyter_notebook_config.py\n\n# Gets pdflatex for nbconvert to PDF, with dependent latex files\n#\n#RUN apt-get install -y --no-install-recommends \\\n#    texlive-latex-base texlive-xetex latex-xcolor texlive-math-extra \\\n#    texlive-latex-extra texlive-fonts-extra\n\n# Install additional Python modules\n#\nRUN pip2 install --no-cache-dir -U pyyaml ipywidgets\nRUN pip3 install --no-cache-dir -U pyyaml ipywidgets\n\nWORKDIR /opt/notebooks\n\nEXPOSE 8888\n\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"jupyter\", \"notebook\"]\n\n#ENTRYPOINT bash -c 'set -eou pipefail; jupyter-notebook --no-browser --port 8888 --ip=* --notebook-dir=/opt/notebooks'\n"
}