{
  "startTime": 1674245672616,
  "endTime": 1674245672728,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 1,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 1,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:7.8.0-alpine\n\nWORKDIR /root\nRUN mkdir geoportal-extensions\nWORKDIR /root/geoportal-extensions\n\nENV PROXY=http://proxy.ign.fr:3128 \\\n    USERNAME=..................... \\\n    PASSWORD=..................... \\\n    TOKEN=........................\n\nRUN export HTTPS_PROXY=$PROXY && \\\n  export HTTP_PROXY=$PROXY && \\\n\tapk update && \\\n\tapk upgrade && \\\n\tapk add --no-cache openssl && \\\n\tapk add --no-cache expect && \\\n\tapk add --no-cache bash && \\\n\tapk add --no-cache perl perl-dev perl-json && \\\n\tapk add --no-cache git\n\nADD CHANGELOG_DRAFT.md CHANGELOG_DRAFT.md\nADD package.json package.json\n\nRUN export HTTPS_PROXY=$PROXY && \\\n  export HTTP_PROXY=$PROXY && \\\n  git clone https://github.com/IGNF/geoportal-extensions.git . && \\\n\tgit checkout feature-publish-release\n\nRUN export HTTPS_PROXY=$PROXY && \\\n  export HTTP_PROXY=$PROXY && \\\n\tnpm config set proxy $PROXY && \\\n\tnpm config set https-proxy $PROXY && \\\n\tnpm install && npm cache clean --force;\n\nCMD\t export HTTPS_PROXY=$PROXY && \\\n  export HTTP_PROXY=$PROXY && \\\n\t./scripts/release.sh \\\n\t\t\t--verbose \\\n\t\t\t--username=$USERNAME --password=$PASSWORD --token=$TOKEN \\\n\t\t\t--leaflet --build --data --json --commit --tag --publish\n"
}