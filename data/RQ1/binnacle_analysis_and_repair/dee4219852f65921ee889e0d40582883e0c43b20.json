{
  "startTime": 1674235372444,
  "endTime": 1674235372777,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Antonin Bas <antonin@barefootnetworks.com>\n\nARG MAKEFLAGS\nENV MAKEFLAGS ${MAKEFLAGS:--j2}\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Build Protocol Buffers.\nENV PROTOCOL_BUFFERS_DEPS autoconf \\\n                          automake \\\n                          g++ \\\n                          libtool \\\n                          make \\\n                          curl \\\n                          unzip\nRUN git clone https://github.com/google/protobuf.git\nWORKDIR /protobuf/\nRUN git checkout tags/v3.2.0\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends $PROTOCOL_BUFFERS_DEPS && \\\n    export CFLAGS=\"-Os\" && \\\n    export CXXFLAGS=\"-Os\" && \\\n    export LDFLAGS=\"-Wl,-s\" && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    ldconfig && \\\n    apt-get purge -y $PROTOCOL_BUFFERS_DEPS && apt-get autoremove --purge -y && \\\n    rm -rf /protobuf /var/cache/apt/* /var/lib/apt/lists/* /var/cache/debconf/* /var/lib/dpkg/*-old /var/log/*\n\nWORKDIR /\n\n# Build gRPC.\n# The gRPC build system should detect that a version of protobuf is already\n# installed and should not try to install the third-party one included as a\n# submodule in the grpc repository.\nENV GRPC_DEPS build-essential \\\n              autoconf \\\n              libtool\nRUN git clone https://github.com/google/grpc.git\nWORKDIR /grpc/\nRUN git checkout tags/v1.3.2 && \\\n    git submodule update --init --recursive\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends $GRPC_DEPS libgflags-dev && \\\n    export LDFLAGS=\"-Wl,-s\" && \\\n    make && \\\n    make grpc_cli && \\\n    make install && \\\n    ldconfig && \\\n    cp /grpc/bins/opt/grpc_cli /usr/bin/ && \\\n    apt-get purge -y $GRPC_DEPS && apt-get autoremove --purge -y && \\\n    rm -rf /grpc /var/cache/apt/* /var/lib/apt/lists/* /var/cache/debconf/* /var/lib/dpkg/*-old /var/log/*\n\nWORKDIR /\n\nENV BM_DEPS automake \\\n            build-essential \\\n            libjudy-dev \\\n            libgmp-dev \\\n            libpcap-dev \\\n            libboost-dev \\\n            libboost-program-options-dev \\\n            libboost-system-dev \\\n            libboost-filesystem-dev \\\n            libboost-thread-dev \\\n            libtool \\\n            pkg-config\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends $BM_DEPS && rm -rf /var/lib/apt/lists/*;\nADD https://api.github.com/repos/p4lang/PI/git/refs/heads/master .PI.head.json\nRUN git clone https://github.com/p4lang/PI/\nWORKDIR /PI\nRUN git submodule update --init --recursive\nRUN export CFLAGS=\"-O0\" && \\\n    export CXXFLAGS=\"-O0\" && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-proto --without-cli --without-internal-rpc && \\\n    make && \\\n    make install && ldconfig && \\\n    rm -rf /PI/\n\nWORKDIR /\nCOPY . /behavioral-model/\n\nWORKDIR /behavioral-model/\n\nRUN export CFLAGS=\"-O0\" && \\\n    export CXXFLAGS=\"-O0\" && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-thrift --without-nanomsg --with-pi && \\\n    make && \\\n    make install && ldconfig\n\nWORKDIR /behavioral-model/targets/simple_switch_grpc\n\nRUN export CFLAGS=\"-O0\" && \\\n    export CXXFLAGS=\"-O0\" && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make\n"
}