{
  "startTime": 1674237290493,
  "endTime": 1674237290797,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "MAINTAINER Mario Cho \"m.cho@lablup.com\"\n\nFROM ubuntu:18.04\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        ca-certificates \\\n        wget curl git-core \\\n        python3 python3-pip \\\n        libssl-dev \\\n        libmpdec2 \\\n        proj-bin libproj-dev \\\n        libgeos-dev libgeos++-dev \\\n        mime-support \\\n\tgnupg \\\n\tdirmngr \\\n        gcc g++ && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/opt/backend.ai/bin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    LANG=C.UTF-8 \\\n    DEBIAN_FRONTEND=noninteractive\n\n# Install commonly-used wheels\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3 && \\\n    python3 -m pip install --no-cache-dir -U setuptools && \\\n    python3 -m pip install --no-cache-dir pyzmq && \\\n    python3 -m pip install --no-cache-dir ipython && \\\n    python3 -m pip install --no-cache-dir jupyter && \\\n    python3 -m pip install --no-cache-dir jupyterlab\n\n# Install jupyter & Julia\nARG JULIA_VERSION\nENV JULIA_VERSION ${JULIA_VERSION:-1.0.4}\nENV JULIA_PATH \"/usr/local/julia\"\nENV PATH $JULIA_PATH:$JULIA_PATH/bin:$PATH\nRUN apt update -y && \\\n    apt install -y --no-install-recommends ca-certificates curl && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) tarArch='x86_64'; dirArch='x64';; \\\n        armhf) tarArch='arm'; dirArch='arm';; \\\n        i386) tarArch='i686'; dirArch='x86';; \\\n        *) echo >&2 \"error: current architecture ($dpkgArch) does not have a corresponding Julia binary release\"; exit 1 ;; \\\n    esac; \\\n    \\\n    curl -fL -o julia.tar.gz     \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz\"; \\\n    \\\n    mkdir \"$JULIA_PATH\"; \\\n    tar -xzf julia.tar.gz -C \"$JULIA_PATH\" --strip-components 1; \\\n    rm julia.tar.gz\n\n#add IJulia package to make Julia kernel available in jupyter\nRUN julia -e 'ENV[\"JUPYTER\"]=\"jupyter\"' && \\\n    julia -e 'ENV[\"PYTHON\"]=\"python3\"' && \\\n    julia -e 'using Pkg; Pkg.add(\"IJulia\");' && \\\n    cp -r /root/.local/share/jupyter/kernels/julia-1.0 /usr/local/share/jupyter/kernels && \\\n    rm -rf /root/.local/share/jupyter\n\nENV JULIA_PKG_LOC /opt/julia\nENV JULIA_LOAD_PATH :/opt/julia\nSHELL [\"/bin/bash\", \"-c\"]\nRUN mkdir ${JULIA_PKG_LOC} && \\\n    mv /root/.julia/packages/* ${JULIA_PKG_LOC} && \\\n    for d in ${JULIA_PKG_LOC}/*; \\\n    do \\\n    sub=$d/$(ls $d); \\\n    shopt -s dotglob; \\\n    mv $sub/* $d; \\\n    rm -rf $sub; \\\n    shopt -u dotglob; \\\n    done && \\\n    rm -rf /root/.julia/* && \\\n    rm -rf /opt/julia/Conda/deps/deps.jl && \\\n    echo 'const ROOTENV = \"/tmp\"' >>  /opt/julia/Conda/deps/deps.jl && \\\n    echo 'const MINICONDA_VERSION = \"3\"' >> /opt/julia/Conda/deps/deps.jl && \\\n    rm -rf /usr/local/share/jupyter/kernels/julia-1.0/kernel.json && \\\n    julia -e 'using IJulia' && \\\n    mv /root/.julia/compiled /opt/julia && \\\n    chmod -R 755 /opt/julia/compiled\nSHELL [\"/bin/sh\", \"-c\"]\nCOPY kernel.json /usr/local/share/jupyter/kernels/julia-1.0\nADD movecompiled.sh /usr/local/bin/movecompiled.sh\nRUN chmod 755 /usr/local/bin/movecompiled.sh\n\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"256m\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.runtime-type=\"julia\" \\\n      ai.backend.runtime-path=\"/usr/bin/python3\" \\\n      ai.backend.service-ports=\"jupyter:http:8080,jupyterlab:http:8090\"\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n\n# vim: ft=dockerfile\n\n"
}