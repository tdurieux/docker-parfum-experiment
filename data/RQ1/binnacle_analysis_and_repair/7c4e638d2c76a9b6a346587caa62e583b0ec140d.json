{
  "startTime": 1674239609866,
  "endTime": 1674239610381,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 1201
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.5.1804 AS build\nWORKDIR /home\n\n# COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel; rm -rf /var/cache/yum\n\n# Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz && \\\n    cd cmake-${CMAKE_VER} && \\\n    ./bootstrap --prefix=\"/usr\" --system-curl && \\\n    make -j8 && \\\n    make install\n\n# Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ && \\\n    cd automake-${AUTOMAKE_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --disable-doc && \\\n    make -j8 && \\\n    make install\n\n\n# Build nginx-rtmp\nARG NGINX_RTMP_VER=v1.2.1\nARG NGINX_RTMP_REPO=https://github.com/arut/nginx-rtmp-module/archive/${NGINX_RTMP_VER}.tar.gz\nARG NGINX_RTMP_PATCH_HLS=https://raw.githubusercontent.com/VCDP/CDN/master/0001-add-hevc-support-for-rtmp-and-hls.patch\nARG NGINX_RTMP_PATCH_DASH=https://raw.githubusercontent.com/VCDP/CDN/master/0002-add-HEVC-support-for-dash.patch\n\nRUN wget -O - ${NGINX_RTMP_REPO} | tar xz && mv nginx-rtmp-module-${NGINX_RTMP_VER#v} nginx-rtmp-module && \\\n    cd nginx-rtmp-module && \\\n    mkdir -p /home/build/var/www/html && \\\n    cp -f stat.xsl /home/build/var/www/html && \\\n    wget -O - ${NGINX_RTMP_PATCH_HLS} | patch -p1 && \\\n    wget -O - ${NGINX_RTMP_PATCH_DASH} | patch -p1;\n\n# Build nginx & nginx-rtmp\nARG NGINX_VER=1.14.2\nARG NGINX_REPO=https://nginx.org/download/nginx-${NGINX_VER}.tar.gz\n\nRUN yum install -y -q openssl-devel pcre2-devel zlib-devel libxslt-devel && rm -rf /var/cache/yum\n\nRUN wget -O - ${NGINX_REPO} | tar xz && \\\n    cd nginx-${NGINX_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/var/www --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/www/log/error.log --pid-path=/var/www/nginx.pid --lock-path=/var/www/nginx.lock --http-log-path=/var/www/log/access.log --http-client-body-temp-path=/var/www/tmp/client_body --http-proxy-temp-path=/var/www/tmp/proxy --http-fastcgi-temp-path=/var/www/tmp/fastcgi --http-uwsgi-temp-path=/var/www/tmp/uwsgi --http-scgi-temp-path=/var/www/tmp/scgi --user=nobody --group=nobody --with-select_module --with-poll_module --with-threads --with-file-aio --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --with-stream --with-stream_ssl_module --with-stream_realip_module --with-stream_ssl_preread_module --with-pcre --add-module=../nginx-rtmp-module && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build;\n\n# NGINX Setup\nCOPY nginx.conf /home/build/etc/nginx\nRUN mkdir -p /home/build/var/www/tmp/client_body && \\\n    mkdir -p /home/build/var/www/tmp/proxy && \\\n    mkdir -p /home/build/var/www/tmp/fastcgi && \\\n    mkdir -p /home/build/var/www/tmp/uwsgi && \\\n    mkdir -p /home/build/var/www/tmp/scgi && \\\n    mkdir -p /home/build/var/www/cache && \\\n    mkdir -p /home/build/var/www/html && \\\n    touch /home/build/var/www/html/index.html;\n\n\nFROM openvisualcloud/vca2-centos75-media-ffmpeg:latest\nLABEL Description=\"This is the base image for a NGINX+RTMP service\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n\n# Prerequisites\nRUN  \\\n    yum install -y -q openssl-libs pcre2 zlib libxslt libxml2 ; \\\n    rm -rf /var/cache/yum/*;\n# Install\nCOPY --from=build /home/build /\nCMD /usr/sbin/nginx\nVOLUME /etc/nginx /var/www/html /var/www/tmp/client_body /var/www/tmp/proxy /var/www/tmp/fastcgi /var/www/tmp/uwsgi /var/www/tmp/scgi /var/www/cache /var/www/dash /var/www/hls\nEXPOSE 80 1935\n\n"
}