{
  "startTime": 1674242732023,
  "endTime": 1674242733020,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 103
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 1,
        "columnEnd": 79
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 8,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 8,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:7\n\nRUN apt-get update -y && \\\n    apt-get install build-essential \\\n                    bison \\\n                    flex \\\n                    cmake \\\n                    rpm \\\n                    alien \\\n                    nsis \\\n                    pkg-config \\\n                    libglib2.0-dev \\\n                    libgnutls-dev \\\n                    libpcap0.8-dev \\\n                    libgpgme11 \\\n                    libgpgme11-dev \\\n                    libhiredis-dev \\\n                    libssh-dev \\\n                    openssh-client \\\n                    doxygen \\\n                    libuuid1 \\\n                    uuid-dev \\\n                    sqlfairy \\\n                    xmltoman \\\n                    sqlite3 \\\n                    libsqlite3-dev \\\n                    libsqlite3-tcl \\\n                    libxml2-dev \\\n                    libxslt1.1 \\\n                    libxslt1-dev \\\n                    libcurl4-gnutls-dev \\\n\t\t    libkrb5-dev \\\n\t\t    libpopt-dev \\\n\t\t    libssl-dev \\\n  \t \t    heimdal-multidev \\\n \t\t    mingw32 \\\n                    xsltproc \\\n                    libmicrohttpd-dev \\\n                    wget \\\n                    rsync \\\n                    texlive-latex-base \\\n                    texlive-latex-recommended \\\n                    texlive-latex-extra \\\n                    unzip \\\n                    wapiti \\\n                    nmap \\\n\t\t    redis-server \\\n\t\t    gnupg \\\n\t\t    libpq-dev \\\n\t\t    postgresql-server-dev-all \\\n\t\t    postgresql-client \\\n\t\t    postgresql-contrib \\\n\t\t    postgresql \\\n                    -y --no-install-recommends --force-yes && \\\n    mkdir /openvas-src && \\\n    cd /openvas-src && \\\n        wget https://wald.intevation.org/frs/download.php/2125/openvas-libraries-8.0.5.tar.gz && \\\n        wget https://wald.intevation.org/frs/download.php/2129/openvas-scanner-5.0.4.tar.gz && \\\n        wget https://wald.intevation.org/frs/download.php/2169/openvas-manager-6.0.6.tar.gz && \\\n        wget https://wald.intevation.org/frs/download.php/2173/greenbone-security-assistant-6.0.6.tar.gz && \\\n        wget https://wald.intevation.org/frs/download.php/2141/openvas-cli-1.4.3.tar.gz && \\\n\twget https://wald.intevation.org/frs/download.php/1975/openvas-smb-1.0.1.tar.gz && \\\n    cd /openvas-src/ && \\\n        tar zxvf openvas-libraries-8.*.tar.gz && \\\n        tar zxvf openvas-scanner-5.*.tar.gz && \\\n        tar zxvf openvas-manager-6.*.tar.gz && \\\n        tar zxvf greenbone-security-assistant-6.*.tar.gz && \\\n        tar zxvf openvas-cli-1.*.tar.gz && \\\n\ttar zxvf openvas-smb-1.*.tar.gz && \\\n    LDFLAGS=\"$LDFLAGS -Wl,--no-as-needed\" && \\\n    cd /openvas-src/openvas-smb-1.* && \\\n        mkdir source && \\\n        cd source && \\\n        cmake .. && \\\n        make && \\\n        make install && \\\n    cd /openvas-src/openvas-libraries-8.* && \\\n        mkdir source && \\\n        cd source && \\\n        cmake .. && \\\n        make && \\\n        make install && \\\n    cd /openvas-src/openvas-scanner-5.* && \\\n        mkdir source && \\\n        cd source && \\\n        cmake .. && \\\n        make && \\\n        make install && \\\n    cd /openvas-src/openvas-manager-6.* && \\\n        mkdir source && \\\n        cd source && \\\n        cmake -DBACKEND=POSTGRESQL .. && \\\n        make && \\\n        make install && \\\n    cd /openvas-src/greenbone-security-assistant-6.* && \\\n        mkdir source && \\\n        cd source && \\\n        cmake .. && \\\n        make && \\\n        make install && \\\n    cd /openvas-src/openvas-cli-1.* && \\\n        mkdir source && \\\n        cd source && \\\n        cmake .. && \\\n        make && \\\n        make install && \\\n    rm -rf /openvas-src && \\\n    mkdir /dirb && \\\n    cd /dirb && \\\n    wget https://downloads.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz && \\\n        tar -zxvf dirb222.tar.gz && \\\n        cd dirb222 && \\\n        chmod 700 -R * && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n        make && \\\n        make install && \\\n    cd / && \\\n    cd /tmp && \\\n    wget https://github.com/Arachni/arachni/releases/download/v1.2.1/arachni-1.2.1-0.5.7.1-linux-x86_64.tar.gz && \\\n        tar -zxvf arachni-1.2.1-0.5.7.1-linux-x86_64.tar.gz && \\\n        mv arachni-1.2.1-0.5.7.1 /opt/arachni && \\\n        ln -s /opt/arachni/bin/* /usr/local/bin/ && \\\n    cd ~ && \\\n    wget https://github.com/sullo/nikto/archive/master.zip && \\\n    unzip master.zip -d /tmp && \\\n    mv /tmp/nikto-master/program /opt/nikto && \\\n    rm -rf /tmp/nikto-master && \\\n    echo \"EXECDIR=/opt/nikto\\nPLUGINDIR=/opt/nikto/plugins\\nDBDIR=/opt/nikto/databases\\nTEMPLATEDIR=/opt/nikto/templates\\nDOCDIR=/opt/nikto/docs\" >> /opt/nikto/nikto.conf && \\\n    ln -s /opt/nikto/nikto.pl /usr/local/bin/nikto.pl && \\\n    ln -s /opt/nikto/nikto.conf /etc/nikto.conf && \\\n    mkdir -p /openvas && \\\n    wget https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup --no-check-certificate -O /openvas/openvas-check-setup && \\\n    chmod a+x /openvas/openvas-check-setup && \\\n    apt-get clean -yq && \\\n    apt-get autoremove -yq && \\\n    apt-get purge -y --auto-remove build-essential cmake && rm openvas-libraries-8.*.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nADD bin/setup.sh /openvas/\nRUN chmod 700 /openvas/*.sh && \\\n\tbash /openvas/setup.sh\n\n#Setup redis config\nRUN sed -i 's|^# unixsocketperm 755|unixsocketperm 755|;s|^# unixsocket /var/run/redis/redis.sock|unixsocket /tmp/redis.sock|;s|^port 6379|#port 6379|' /etc/redis/redis.conf\n\nADD bin/start.sh /openvas/\nRUN chmod 700 /openvas/*.sh\n\n# Expose UI\nEXPOSE 443 9390 9391 9392\n\nCMD [\"/bin/bash\", \"/openvas/start.sh\"]\n"
}