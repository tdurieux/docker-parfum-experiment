{
  "startTime": 1674245183803,
  "endTime": 1674245184008,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\n\nRUN rpm -Uhv https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm && \\\n    yum -y --setopt=tsflags=nodocs install centos-release-scl && \\\n    yum -y --setopt=tsflags=nodocs install rh-python36 gcc mariadb-devel mariadb \\\n    postgresql-devel httpd-devel mod_wsgi mod_ssl gettext && \\\n    yum -y update --setopt=tsflags=nodocs && \\\n    yum clean all\n\n# Apache configuration for non-root users\nEXPOSE 8080\nEXPOSE 8443\nCOPY ./httpd-foreground /httpd-foreground\nCMD /httpd-foreground\nRUN sed -i 's/Listen 80/Listen 8080/' /etc/httpd/conf/httpd.conf && \\\n    sed -i 's/Listen 443/Listen 8443/' /etc/httpd/conf.d/ssl.conf && \\\n    sed -i 's!ErrorLog \"logs/error_log\"!ErrorLog \"/dev/stderr\"!' /etc/httpd/conf/httpd.conf && \\\n    sed -i 's!CustomLog \"logs/access_log\"!CustomLog \"/dev/stdout\"!' /etc/httpd/conf/httpd.conf && \\\n    sed -i 's!ErrorLog logs/ssl_error_log!ErrorLog \"/dev/stderr\"!' /etc/httpd/conf.d/ssl.conf && \\\n    sed -i 's!TransferLog logs/ssl_access_log!TransferLog \"/dev/stdout\"!' /etc/httpd/conf.d/ssl.conf && \\\n    sed -i 's!CustomLog logs/ssl_request_log!CustomLog \"/dev/stdout\"!' /etc/httpd/conf.d/ssl.conf && \\\n    rm -rf /run/httpd && mkdir /run/httpd && chmod -R a+rwx /run/httpd\nCOPY ./etc/kiwi-httpd.conf /etc/httpd/conf.d/\n\n# make sure Python 3.6 is enabled by default\nENV PATH /opt/rh/rh-python36/root/usr/bin${PATH:+:${PATH}}\nENV LD_LIBRARY_PATH /opt/rh/rh-python36/root/usr/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}\nENV PKG_CONFIG_PATH /opt/rh/rh-python36/root/usr/lib64/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}\nENV XDG_DATA_DIRS \"/opt/rh/rh-python36/root/usr/share:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}\"\n\n# Create a virtualenv for the application dependencies\nRUN virtualenv /venv\n\n# Set virtualenv environment variables. This is equivalent to running\n# source /env/bin/activate. This ensures the application is executed within\n# the context of the virtualenv and will have access to its dependencies.\nENV VIRTUAL_ENV /venv\nENV PATH /venv/bin:$PATH\n\n# because we get some errors from other packages which need newer versions\nRUN pip install --no-cache-dir --upgrade pip setuptools\n\n# replace standard mod_wsgi with one compiled for Python 3\nRUN pip install --no-cache-dir --upgrade pip mod_wsgi && \\\n    ln -fs /venv/lib64/python3.6/site-packages/mod_wsgi/server/mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so \\\n           /usr/lib64/httpd/modules/mod_wsgi.so\n\n# install the application\nCOPY ./dist/kiwitcms-*.tar.gz /Kiwi/\nRUN pip install --no-cache-dir /Kiwi/kiwitcms-*.tar.gz\n\n# install DB requirements b/c the rest should already be installed\nCOPY ./requirements/ /Kiwi/requirements/\nRUN pip install --no-cache-dir -r /Kiwi/requirements/mariadb.txt\nRUN pip install --no-cache-dir -r /Kiwi/requirements/postgres.txt\n\nCOPY ./manage.py /Kiwi/\nCOPY ./etc/kiwitcms/ssl/ /Kiwi/ssl/\nRUN sed -i \"s/tcms.settings.devel/tcms.settings.product/\" /Kiwi/manage.py\n\n# create a mount directory so we can properly set ownership for it\nRUN mkdir /Kiwi/uploads\n\n# compile translations\nRUN /Kiwi/manage.py compilemessages\n\n# collect static files\nRUN /Kiwi/manage.py collectstatic --noinput\n\n# from now on execute as non-root\nRUN chown -R 1001 /Kiwi/ /venv/ \\\n    /etc/pki/tls/certs/localhost.crt /etc/pki/tls/private/localhost.key\nUSER 1001\n"
}