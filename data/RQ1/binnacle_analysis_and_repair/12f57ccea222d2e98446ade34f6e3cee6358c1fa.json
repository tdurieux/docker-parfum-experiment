{
  "startTime": 1674234603283,
  "endTime": 1674234603516,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 45,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Minimal docker container to build project\n# Image: rabits/qt:5.12-android\n\nFROM ubuntu:18.04\nMAINTAINER Rabit <home@rabits.org> (@rabits)\n\nARG QT_VERSION=5.12.0\nARG NDK_VERSION=r18b\nARG SDK_PLATFORM=android-21\nARG SDK_BUILD_TOOLS=21.1.2\nARG SDK_PACKAGES=\"tools platform-tools\"\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    QT_PATH=/opt/Qt\nENV QT_ANDROID ${QT_PATH}/${QT_VERSION}/android_armv7\nENV ANDROID_HOME /opt/android-sdk\nENV ANDROID_SDK_ROOT=${ANDROID_HOME} \\\n    ANDROID_NDK_ROOT=/opt/android-ndk \\\n    ANDROID_NDK_TOOLCHAIN_PREFIX=arm-linux-androideabi \\\n    ANDROID_NDK_TOOLCHAIN_VERSION=4.9 \\\n    ANDROID_NDK_HOST=linux-x86_64 \\\n    ANDROID_NDK_PLATFORM=${SDK_PLATFORM}\nENV ANDROID_NDK_TOOLS_PREFIX ${ANDROID_NDK_TOOLCHAIN_PREFIX}\nENV QMAKESPEC android-g++\nENV PATH ${QT_ANDROID}/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}\n\n# Install updates & requirements:\n#  * unzip - unpack platform tools\n#  * git, openssh-client, ca-certificates - clone & build\n#  * locales, sudo - useful to set utf-8 locale & sudo usage\n#  * curl - to download Qt bundle\n#  * make, openjdk-8-jdk-headless, ant - basic build requirements\n#  * libsm6, libice6, libxext6, libxrender1, libfontconfig1, libdbus-1-3, libx11-xcb1 - dependencies of Qt bundle run-file\n#  * libc6:i386, libncurses5:i386, libstdc++6:i386, libz1:i386 - dependencides of android sdk binaries\nRUN dpkg --add-architecture i386 && apt update && apt full-upgrade -y && apt install -y --no-install-recommends \\\n    unzip \\\n    git \\\n    openssh-client \\\n    ca-certificates \\\n    locales \\\n    sudo \\\n    curl \\\n    make \\\n    openjdk-8-jdk-headless \\\n    openjdk-8-jre-headless \\\n    ant \\\n    libsm6 \\\n    libice6 \\\n    libxext6 \\\n    libxrender1 \\\n    libfontconfig1 \\\n    libdbus-1-3 \\\n    libx11-xcb1 \\\n    libc6:i386 \\\n    libncurses5:i386 \\\n    libstdc++6:i386 \\\n    libz1:i386 \\\n    && apt-get -qq clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY extract-qt-installer.sh /tmp/qt/\n\n# Download & unpack Qt toolchains & clean\nRUN curl -f -Lo /tmp/qt/installer.run \"https://download.qt.io/official_releases/qt/$(echo \"${QT_VERSION}\" | cut -d. -f 1-2)/${QT_VERSION}/qt-opensource-linux-x64-${QT_VERSION}.run\" \\\n    && QT_CI_PACKAGES=qt.qt5.$(echo \"${QT_VERSION}\" | tr -d .).android_armv7 /tmp/qt/extract-qt-installer.sh /tmp/qt/installer.run \"$QT_PATH\" \\\n    && find \"${QT_PATH}\" -mindepth 1 -maxdepth 1 ! -name \"${QT_VERSION}\" -exec echo 'Cleaning Qt SDK: {}' \\; -exec rm -r '{}' \\; \\\n    && rm -rf /tmp/qt\n\n# Download & unpack android SDK\nRUN curl -f -Lo /tmp/sdk-tools.zip 'https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip' \\\n    && mkdir -p /opt/android-sdk && unzip -q /tmp/sdk-tools.zip -d /opt/android-sdk && rm -f /tmp/sdk-tools.zip \\\n    && yes | sdkmanager --licenses && sdkmanager --update && sdkmanager --verbose \"platforms;${SDK_PLATFORM}\" \"build-tools;${SDK_BUILD_TOOLS}\" ${SDK_PACKAGES}\n\n# Download & unpack android NDK\nRUN mkdir /tmp/android && cd /tmp/android && curl -f -Lo ndk.zip \"https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip\" \\\n    && unzip -q ndk.zip && mv android-ndk-* $ANDROID_NDK_ROOT && chmod -R +rX $ANDROID_NDK_ROOT \\\n    && rm -rf /tmp/android\n\n# Reconfigure locale\nRUN locale-gen en_US.UTF-8 && dpkg-reconfigure locales\n\n# Add group & user\nRUN groupadd -r user && useradd --create-home --gid user user && echo 'user ALL=NOPASSWD: ALL' > /etc/sudoers.d/user\n\nUSER user\nWORKDIR /home/user\nENV HOME /home/user\n"
}