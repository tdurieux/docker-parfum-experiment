{
  "startTime": 1674236985162,
  "endTime": 1674236985662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV DEBIAN_FRONTEND noninteractive\n\n# update and upgrade packages already installed\nRUN apt-get -y update\nRUN apt-get -y upgrade\n\n# install requirements for installing compilers and dependencies\nRUN apt-get -y --no-install-recommends install build-essential wget curl unzip software-properties-common \\\n  cabal-install libghc-zlib-dev libghc-zlib-bindings-dev libghc-terminfo-dev \\\n  libpython-dev clang-3.6 && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.6 100 && \\\n  update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.6 100\n\n# add external Debian repositories and update packages\nRUN apt-add-repository -y ppa:swi-prolog/stable && \\\n  apt-get -y update\n\n# install compiler and interpreter packages\nRUN apt-get -y --no-install-recommends install \\\n  openjdk-7-jdk ruby nodejs ghc smlnj php5-cli racket swi-prolog \\\n  mono-complete fsharp gcc-multilib nasm clisp erlang golang lua5.2 mono-vbnc \\\n  gfortran fp-compiler && rm -rf /var/lib/apt/lists/*;\n\n# install Scala\nENV SCALA_VERSION 2.11.7\n\nRUN wget https://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.deb && \\\n  dpkg -i scala-$SCALA_VERSION.deb && \\\n  rm scala-$SCALA_VERSION.deb\n\n# install Groovy\nRUN curl -f -s https://get.sdkman.io | bash && \\\n  bash -c \"source /root/.sdkman/bin/sdkman-init.sh && yes | sdk install groovy\"\n\n# install Rust\nRUN wget https://static.rust-lang.org/rustup.sh && \\\n  bash rustup.sh -y --channel=stable && \\\n  rm rustup.sh\n\n# install Idris\nRUN cabal update && \\\n cabal install cabal && \\\n cabal install idris\n\nENV PATH /root/.cabal/bin:$PATH\n\n# install Clojure\nENV CLOJURE_VERSION 1.7.0\n\nRUN wget -P /opt https://central.maven.org/maven2/org/clojure/clojure/$CLOJURE_VERSION/clojure-$CLOJURE_VERSION.jar && \\\n  echo \"java -jar /opt/clojure-$CLOJURE_VERSION.jar \\$@\" > /usr/local/bin/clojure && \\\n  chmod +x /usr/local/bin/clojure\n\n# build Joy\nRUN mkdir /var/lib/joy && cd /var/lib/joy && \\\n  wget https://webstat.latrobe.edu.au/url/www.kevinalbrecht.com/code/joy-mirror/joy.tar.gz && \\\n  tar zxvf joy.tar.gz && make && \\\n  ln -s /var/lib/joy/joy /usr/local/bin && rm joy.tar.gz\n\n# install Kotlin\nENV KOTLIN_VERSION 1.0.0-beta-2423\n\nRUN wget https://github.com/JetBrains/kotlin/releases/download/build-$KOTLIN_VERSION/kotlin-compiler-$KOTLIN_VERSION.zip && \\\n  unzip -d /opt kotlin-compiler-$KOTLIN_VERSION.zip && \\\n  ln -s /opt/kotlinc/bin/kotlinc /usr/local/bin && \\\n  ln -s /opt/kotlinc/bin/kotlin /usr/local/bin && \\\n  rm kotlin-compiler-$KOTLIN_VERSION.zip\n\n# install IO\nRUN wget https://iobin.suspended-chord.info/linux/iobin-linux-x64-deb-current.zip && \\\n  unzip -d /io iobin-linux-x64-deb-current.zip && \\\n  dpkg -i /io/*.deb && \\\n  rm -r /io iobin-linux-x64-deb-current.zip\n\n# install Swift\nENV SWIFT_VERSION 2.2-SNAPSHOT-2015-12-01-b\n\nRUN mkdir -p /opt/swift && \\\n  wget https://swift.org/builds/ubuntu1404/swift-$SWIFT_VERSION/swift-$SWIFT_VERSION-ubuntu14.04.tar.gz && \\\n  tar zxvf swift-$SWIFT_VERSION-ubuntu14.04.tar.gz -C /opt/swift --strip-components=1 && \\\n  rm swift-$SWIFT_VERSION-ubuntu14.04.tar.gz\n\nENV PATH /opt/swift/usr/bin:$PATH\n\n# install Nim\nENV NIM_VERSION 0.14.2\n\nRUN mkdir /opt/nim && cd /opt/nim && \\\n  wget https://nim-lang.org/download/nim-$NIM_VERSION.tar.xz && \\\n  tar xf nim-$NIM_VERSION.tar.xz && rm nim-$NIM_VERSION.tar.xz && \\\n  cd nim-$NIM_VERSION && ./build.sh && cd .. \\\n  ln -s /opt/nim/nim-$NIM_VERSION/bin/nim /usr/local/bin\n\n# configure Node package\nRUN update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10\n\n# config verbosity of Pascal compiler\nRUN sed -i 's/^-l$//' /etc/fpc.cfg\n\n# cleanup\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}