{
  "startTime": 1674246645453,
  "endTime": 1674246645533,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine as builder\nENV NODE_ENV production\nRUN apk --no-cache add build-base python\nRUN npm install npm@6 --global --quiet && npm cache clean --force;\nRUN mkdir -p /opt/target/packages\nWORKDIR /opt/src\nCOPY . .\nRUN npm ci\nARG SCOPE\nRUN npx lerna exec --scope $SCOPE -- 'ln -s ./packages/$(basename $PWD) /opt/target/main'\nRUN npx lerna exec --scope $SCOPE --include-filtered-dependencies -- 'mv $PWD /opt/target/packages/'\nRUN npx npm-package-filter --only $SCOPE --type=package --output /opt/target/package.json\nRUN npx npm-package-filter --only $SCOPE --type=package-lock --output /opt/target/package-lock.json\n\nFROM node:10-alpine\nEXPOSE 5000\nENV NODE_ENV production\nRUN apk --no-cache add build-base python\nRUN npm install npm@6 --global --quiet && npm cache clean --force;\nWORKDIR /usr/src/app\nCOPY --from=builder /opt/target .\nRUN npm ci\nCMD [\"npm\", \"--prefix\", \"main\", \"start\"]\n"
}