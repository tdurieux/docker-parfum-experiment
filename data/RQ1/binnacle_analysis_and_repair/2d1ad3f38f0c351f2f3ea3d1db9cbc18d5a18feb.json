{
  "startTime": 1674234947735,
  "endTime": 1674234947964,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 42,
        "columnEnd": 324
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 57,
        "columnEnd": 103
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 46,
        "columnEnd": 91
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 64,
        "columnEnd": 113
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 85,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 9,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 9,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 9,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 9,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "############################################\n# version : birdben/elk_log_agent:v1\n# desc : 当前版本安装的elk_log_agent\n############################################\n# 设置继承自我们创建的 jdk7 镜像\nFROM birdben/jdk7:v1\n\n# 下面是一些创建者的基本信息\nMAINTAINER birdben (191654006@163.com)\n\n# 设置环境变量，所有操作都是非交互式的\nENV DEBIAN_FRONTEND noninteractive\n\n# 添加 supervisord 的配置文件，并复制配置文件到对应目录下面。（supervisord.conf文件和Dockerfile文件在同一路径）\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# 设置 LOGSTASH 的环境变量，若读者有其他的环境变量需要设置，也可以在这里添加。\nENV LOGSTASH_HOME /software/logstash-1.5.4\n\n# 复制 logstash-1.5.4 文件到镜像中（logstash-1.5.4 文件夹要和Dockerfile文件在同一路径）\nADD logstash-1.5.4 /software/logstash-1.5.4\n\n# 解决环境问题，否则logstash无法从log文件中采集日志。具体环境： Logstash 1.5, Ubuntu 14.04, Oracle JDK7\nRUN ln -s /lib/x86_64-linux-gnu/libcrypt.so.1 /usr/lib/x86_64-linux-gnu/libcrypt.so\n\n# 安装升级gcc\nRUN sudo rm -rf /var/lib/apt/lists/*\nRUN sudo apt-get update\n\nRUN sudo apt-get -y --no-install-recommends install \\\nbuild-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN sudo mkdir -p /software/temp\nRUN wget https://nginx.org/download/nginx-1.8.0.tar.gz && tar -zxvf nginx-1.8.0.tar.gz -C /software/temp && rm nginx-1.8.0.tar.gz\nRUN wget https://zlib.net/zlib-1.2.8.tar.gz && tar -zxvf zlib-1.2.8.tar.gz -C /software/temp && rm zlib-1.2.8.tar.gz\nRUN wget https://www.openssl.org/source/openssl-1.0.1q.tar.gz && tar -zxvf openssl-1.0.1q.tar.gz -C /software/temp && rm openssl-1.0.1q.tar.gz\nRUN wget https://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz && tar -zxvf pcre-8.37.tar.gz -C /software/temp && rm pcre-8.37.tar.gz\nRUN cd /software/temp/nginx-1.8.0 && sudo ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --sbin-path=/software/nginx-1.8.0/nginx --conf-path=/software/nginx-1.8.0/nginx.conf --pid-path=/software/nginx-1.8.0/nginx.pid --with-http_ssl_module --with-pcre=/software/temp/pcre-8.37 --with-zlib=/software/temp/zlib-1.2.8 --with-openssl=/software/temp/openssl-1.0.1q && sudo make && sudo make install\n\n# 设置nginx是非daemon启动\nRUN echo 'daemon off;' >> /software/nginx-1.8.0/nginx.conf\nRUN echo 'master_process off;' >> /software/nginx-1.8.0/nginx.conf\nRUN echo 'error_log  logs/error.log;' >> /software/nginx-1.8.0/nginx.conf\n\n# 设置 NGINX 的环境变量，若读者有其他的环境变量需要设置，也可以在这里添加。\nENV NGINX_HOME /software/nginx-1.8.0\n\n# 挂载/logstash目录\nVOLUME [\"/logstash\"]\n\n# 容器需要开放Nginx 80端口\nEXPOSE 80\n\n# 执行supervisord来同时执行多个命令，使用 supervisord 的可执行路径启动服务。\nCMD [\"/usr/bin/supervisord\"]\n"
}