{
  "startTime": 1674250293529,
  "endTime": 1674250293640,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM statsplot/jshinyserver:latest\n\n\n# =====================================================================\n# https://github.com/rstudio/shiny-examples/tree/master/docker\n# MAINTAINER Winston Chang \"winston@rstudio.com\"\n# Install shiny examples and dependencies;\n# based on statsplot/jshinyserver:latest with CRAN shiny\n# =====================================================================\n\n# =====================================================================\n# R\n# =====================================================================\n\n\n# Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTED=noninteractive\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n\n\n# =====================================================================\n# Shiny Examples\n# =====================================================================\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN R -e \"install.packages(c('devtools', 'packrat'))\"\n\n# For deploying apps from a container\nRUN R -e \"devtools::install_github('rstudio/rsconnect')\"\n\n# Install shiny-examples\nRUN mkdir -p /srv/shiny-server && \\\n\tcd /srv && \\\n    mv shiny-server shiny-server-orig && \\\n    wget -nv https://github.com/rstudio/shiny-examples/archive/master.zip && \\\n    unzip -x master.zip && \\\n    mv shiny-examples-master shiny-server && \\\n    rm master.zip && \\\n    rm -r /srv/shiny-server/docker && \\\n    echo shinyfolder=/srv/shiny-server >> /opt/shiny/server/config/system_linux.conf\n\n# Autodetect packages needed for the examples (will install from CRAN)\nRUN R -e \"install.packages(packrat:::dirDependencies('/srv/shiny-server'))\"\n\n# Packages that need to be installed from GitHub\n# For 087-crandash\nRUN R -e \"devtools::install_github('hadley/shinySignals')\"\nRUN R -e \"devtools::install_github('jcheng5/bubbles')\"\n\n# Install latest shiny from GitHub\n# RUN R -e \"devtools::install_github('rstudio/shiny')\"\n\n# latest shiny from CRAN\n# RUN R -e \"install.packages(c('shiny'))\"\n\n\n"
}