{
  "startTime": 1674236437902,
  "endTime": 1674236438212,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC.\n# This is used to build the DeepVariant release docker image.\n# It can also be used to build local images, especially if you've made changes\n# to the code.\n# Example command:\n# $ git clone https://github.com/google/deepvariant.git\n# $ cd deepvariant\n# $ sudo docker build -t deepvariant .\n#\n# To build for GPU, use a command like:\n# $ sudo docker build --build-arg=FROM_IMAGE=nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 --build-arg=DV_GPU_BUILD=1 -t deepvariant_gpu .\n\n\nARG FROM_IMAGE=ubuntu:16.04\nARG DV_GPU_BUILD=0\nARG VERSION=0.8.0\n\nFROM ${FROM_IMAGE} as builder\nLABEL maintainer=\"https://github.com/google/deepvariant/issues\"\n\nARG DV_GPU_BUILD\nENV DV_GPU_BUILD=${DV_GPU_BUILD}\n\n# Copying DeepVariant source code\nCOPY . /opt/deepvariant\n\nWORKDIR /opt/deepvariant\n\nRUN ./build-prereq.sh \\\n  && PATH=\"${HOME}/bin:${PATH}\" ./build_release_binaries.sh  # PATH for bazel\n\nFROM ${FROM_IMAGE}\nARG DV_GPU_BUILD\nARG VERSION\nENV DV_GPU_BUILD=${DV_GPU_BUILD}\nENV VERSION ${VERSION}\n\nWORKDIR /opt/\nCOPY --from=builder /opt/deepvariant/bazel-genfiles/licenses.zip .\n\nWORKDIR /opt/deepvariant/bin/\nCOPY --from=builder /opt/deepvariant/run-prereq.sh .\nCOPY --from=builder /opt/deepvariant/settings.sh .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/make_examples.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/call_variants.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/postprocess_variants.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_train.zip .\nCOPY --from=builder /opt/deepvariant/bazel-bin/deepvariant/model_eval.zip  .\nCOPY --from=builder /opt/deepvariant/scripts/run_deepvariant.py .\nRUN ./run-prereq.sh\n\n# Create shell wrappers for python zip files for easier use.\nRUN \\\n  BASH_HEADER='#!/bin/bash' && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python /opt/deepvariant/bin/make_examples.zip \"$@\"' > \\\n    /opt/deepvariant/bin/make_examples && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python /opt/deepvariant/bin/call_variants.zip \"$@\"' > \\\n    /opt/deepvariant/bin/call_variants && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python /opt/deepvariant/bin/postprocess_variants.zip \"$@\"' > \\\n    /opt/deepvariant/bin/postprocess_variants && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python /opt/deepvariant/bin/model_train.zip \"$@\"' > \\\n    /opt/deepvariant/bin/model_train && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python /opt/deepvariant/bin/model_eval.zip \"$@\"' > \\\n    /opt/deepvariant/bin/model_eval && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python -u /opt/deepvariant/bin/run_deepvariant.py \"$@\"' > \\\n    /opt/deepvariant/bin/run_deepvariant && \\\n  chmod +x /opt/deepvariant/bin/make_examples \\\n    /opt/deepvariant/bin/call_variants \\\n    /opt/deepvariant/bin/postprocess_variants \\\n    /opt/deepvariant/bin/model_train \\\n    /opt/deepvariant/bin/model_eval \\\n    /opt/deepvariant/bin/run_deepvariant\n\n# Copy models\nWORKDIR /opt/models/wgs\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/wgs/model.ckpt*\n\nWORKDIR /opt/models/wes\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/wes/model.ckpt*\n\nWORKDIR /opt/models/pacbio\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.meta .\nRUN chmod +r /opt/models/pacbio/model.ckpt*\n\nRUN apt-get -y update && \\\n  apt-get install --no-install-recommends -y python-pip parallel && \\\n  python -m pip uninstall -y pip && \\\n  python -m pip install pip==9.0.3 && \\\n  pip install --no-cache-dir absl-py==0.7.1 && rm -rf /var/lib/apt/lists/*;\n"
}