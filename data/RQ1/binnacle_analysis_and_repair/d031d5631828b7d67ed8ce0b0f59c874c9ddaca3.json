{
  "startTime": 1674246517711,
  "endTime": 1674246518114,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 85,
        "columnStart": 65,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 85,
        "columnStart": 65,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Application parameters and variables\nENV NODE_ENV=production\nENV HOST=0.0.0.0\nENV PORT=3000\nENV application_directory=/usr/src/app\nENV ENABLE_XVBF=true\nENV CHROMEDRIVER_SKIP_DOWNLOAD=true\n\n# Build Args\nARG USE_CHROME_STABLE\n\n# Configuration for Chrome\nENV CONNECTION_TIMEOUT=60000\nENV CHROME_PATH=/usr/bin/google-chrome\nENV USE_CHROME_STABLE=${USE_CHROME_STABLE}\n\nRUN mkdir -p $application_directory\n\nWORKDIR $application_directory\n\n# Install app dependencies\nCOPY package.json .\nCOPY tsconfig.json .\n\n# Bundle app source\nCOPY . .\n\n# Dependencies + NodeJS\nRUN apt-get -qq update && \\\n  echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections && \\\n  apt-get -y --no-install-recommends -qq install software-properties-common && \\\n  apt-add-repository \"deb http://archive.canonical.com/ubuntu $(lsb_release -sc) partner\" && \\\n  apt-add-repository ppa:malteworld/ppa && apt-get -qq update && apt-get -y --no-install-recommends -qq install \\\n  adobe-flashplugin \\\n  msttcorefonts \\\n  fonts-noto-color-emoji \\\n  fonts-noto-cjk \\\n  fonts-liberation \\\n  fonts-thai-tlwg \\\n  fonts-indic \\\n  fontconfig \\\n  libappindicator3-1 \\\n  pdftk \\\n  unzip \\\n  locales \\\n  gconf-service \\\n  libasound2 \\\n  libatk1.0-0 \\\n  libc6 \\\n  libcairo2 \\\n  libcups2 \\\n  libdbus-1-3 \\\n  libexpat1 \\\n  libfontconfig1 \\\n  libgcc1 \\\n  libgconf-2-4 \\\n  libgdk-pixbuf2.0-0 \\\n  libglib2.0-0 \\\n  libgtk-3-0 \\\n  libnspr4 \\\n  libpango-1.0-0 \\\n  libpangocairo-1.0-0 \\\n  libstdc++6 \\\n  libx11-6 \\\n  libx11-xcb1 \\\n  libxcb1 \\\n  libxcomposite1 \\\n  libxcursor1 \\\n  libxdamage1 \\\n  libxext6 \\\n  libxfixes3 \\\n  libxi6 \\\n  libxrandr2 \\\n  libxrender1 \\\n  libxss1 \\\n  libxtst6 \\\n  ca-certificates \\\n  libappindicator1 \\\n  libnss3 \\\n  lsb-release \\\n  xdg-utils \\\n  wget \\\n  xvfb \\\n  curl && \\\n  # Install Node\n  curl -f --silent --location https://deb.nodesource.com/setup_10.x | bash - && \\\n  apt-get -y --no-install-recommends -qq install nodejs && \\\n  apt-get -y --no-install-recommends -qq install build-essential && \\\n  # Fonts\n  fc-cache -f -v && rm -rf /var/lib/apt/lists/*;\n\n# It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\n# Install Chrome Stable when specified\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ]; then \\\n    cd /tmp &&\\\n    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb &&\\\n    dpkg -i google-chrome-stable_current_amd64.deb;\\\n  fi\n\n# Build\nRUN if [ \"$USE_CHROME_STABLE\" = \"true\" ]; then \\\n    export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true;\\\n  fi &&\\\n  npm install -g typescript @types/node &&\\\n  npm install &&\\\n  npm run build &&\\\n  npm run symlink-chrome &&\\\n  npm run install-chromedriver && \\\n  npm run meta && npm cache clean --force;\n\n# Cleanup\nRUN apt-get -qq clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Add user\nRUN groupadd -r blessuser && useradd -r -g blessuser -G audio,video blessuser \\\n  && mkdir -p /home/blessuser/Downloads \\\n  && chown -R blessuser:blessuser /home/blessuser \\\n  && chown -R blessuser:blessuser $application_directory\n\n# Run everything after as non-privileged user.\nUSER blessuser\n\n# Expose the web-socket and HTTP ports\nEXPOSE 3000\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [ \"node\", \"./build/index.js\" ]\n"
}