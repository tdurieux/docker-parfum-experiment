{
  "startTime": 1674238516564,
  "endTime": 1674238516694,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ref: https://github.com/Microsoft/CNTK/blob/master/Tools/docker/CNTK-CPUOnly-Image/Dockerfile\nFROM lablup/kernel-python:3.6-ubuntu\n\nENV LANG=C.UTF-8\nENV PYTHONUNBUFFERED 1\nENV CNTK_VERSION=\"2.2\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget bzip2 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        autotools-dev \\\n        build-essential \\\n        cmake \\\n        git \\\n        g++-multilib \\\n        gcc-multilib \\\n        gfortran-multilib \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libjasper-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        liblapacke-dev \\\n        libswscale-dev \\\n        libtiff-dev \\\n        pkg-config \\\n        wget \\\n        zlib1g-dev \\\n        # Protobuf\n        ca-certificates \\\n        curl \\\n        vim-tiny \\\n        zip unzip \\\n        # # For Kaldi\n        # python-dev \\\n        # automake \\\n        # libtool \\\n        # autoconf \\\n        # subversion \\\n        # # For Kaldi's dependencies\n        # libapr1 libaprutil1 libltdl-dev libltdl7 libserf-1-1 libsigsegv2 libsvn1 m4 \\\n        # # For Java Bindings\n        # openjdk-8-jdk \\\n        # For SWIG\n        libpcre3-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# OpenMPI\nRUN apt-get update && apt-get install --no-install-recommends -y openmpi-bin && rm -rf /var/lib/apt/lists/*;\nENV PATH /usr/local/mpi/bin:$PATH\nENV LD_LIBRARY_PATH /usr/lib/openmpi/lib:$LD_LIBRARY_PATH\n\n# Anaconda\n# RUN wget -q https://repo.continuum.io/archive/Anaconda3-4.3.1-Linux-x86_64.sh && \\\n#     sha256sum Anaconda3-4.3.1-Linux-x86_64.sh && \\\n#     bash Anaconda3-4.3.1-Linux-x86_64.sh -b && \\\n#     rm Anaconda3-4.3.1-Linux-x86_64.sh\n# ENV PATH /root/anaconda3/bin:$PATH\n\n# CNTK\nRUN pip install --no-cache-dir https://cntk.ai/PythonWheel/CPU-Only/cntk-2.2-cp36-cp36m-linux_x86_64.whl\nRUN python -c \"import cntk; print(cntk.__version__)\"\n\n# Keras (set backend to use cntk)\nRUN pip install --no-cache-dir keras\nENV KERAS_BACKEND=cntk\n\n# Below scripts are already executed in python/Dockerfile.3.6-ubuntu\n# Install kernel-runner scripts package\nRUN pip install --no-cache-dir \"backend.ai-kernel-runner[python]~=1.0.4\"\n\nCOPY policy.yml /home/backend.ai/policy.yml\n\nLABEL ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\"\n\nCMD [\"/home/backend.ai/jail\", \"-policy\", \"/home/backend.ai/policy.yml\", \\\n     \"/usr/local/bin/python\", \"-m\", \"ai.backend.kernel\", \"python\"]\n"
}