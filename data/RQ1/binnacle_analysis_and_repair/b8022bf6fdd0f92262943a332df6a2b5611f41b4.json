{
  "startTime": 1674242350454,
  "endTime": 1674242350628,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Owl docker image\n# Based on owlbarn/owl master branch\n# By Liang Wang <liang.wang@cl.cam.ac.uk>\n############################################################\n\nFROM ocaml/opam2:ubuntu\nUSER opam\n\n##################### PREREQUISITES ########################\n\nRUN sudo apt-get -y update\nRUN sudo apt-get -y --no-install-recommends install m4 wget unzip aspcud libshp-dev libplplot-dev gfortran && rm -rf /var/lib/apt/lists/*;\nRUN sudo apt-get -y --no-install-recommends install pkg-config git camlp4-extra && rm -rf /var/lib/apt/lists/*;\n\nRUN opam update && opam switch create 4.06.0 && eval $(opam config env)\nRUN opam install -y oasis dune ocaml-compiler-libs ctypes utop plplot base stdio configurator alcotest sexplib\n\n\n#################### SET UP ENV VARS #######################\n\nENV PATH /home/opam/.opam/4.06.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH\nENV CAML_LD_LIBRARY_PATH /home/opam/.opam/4.06.0/lib/stublibs\nENV LD_LIBRARY_PATH /usr/lib/:/usr/local/lib:/home/opam/.opam/4.06.0/lib/:/home/opam/.opam/4.06.0/lib/stublibs/:/usr/lib/x86_64-linux-gnu/:/opt/OpenBLAS/lib\n\n\n#################### INSTALL OPENBLAS ######################\n\nENV OPENBLASPATH /home/opam/OpenBLAS\nRUN cd /home/opam && git clone https://github.com/xianyi/OpenBLAS.git\nRUN cd $OPENBLASPATH && sudo make && sudo make install && sudo make clean\n\n\n################# INSTALL EIGEN LIBRARY ####################\n\nRUN opam source --dev-repo eigen\nRUN cd eigen && git checkout 0.1.1 && \\\n    echo 'version: \"0.1.1\"' >> eigen.opam && opam install -w .\n\n####################   INSTALL OWL  #######################\n\nENV OWLPATH /home/opam/owl\nRUN cd /home/opam && git clone https://github.com/owlbarn/owl.git\nRUN sed -i -- 's/\\\"-llapacke\\\" :: ls/ls/g' $OWLPATH/src/owl/config/configure.ml  # FIXME: hacking\nRUN cd $OWLPATH && make && make install\n\n\n############## SET UP DEFAULT CONTAINER VARS ##############\n\nRUN echo \"#require \\\"owl-top\\\";; open Owl;;\" >> /home/opam/.ocamlinit \\\n    && bash -c 'echo -e \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\" >> /home/opam/.profile' \\\n    && opam config env >> /home/opam/.bashrc \\\n    && bash -c \"source /home/opam/.bashrc\"\n\nWORKDIR $OWLPATH\nENTRYPOINT /bin/bash\n"
}