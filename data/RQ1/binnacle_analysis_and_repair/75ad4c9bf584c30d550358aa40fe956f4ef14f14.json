{
  "startTime": 1674235680774,
  "endTime": 1674235680891,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedDockerfile": "#FROM resin/rpi-raspbian:stretch AS build\nFROM mitchallen/pi-cross-compile AS build\n\n# Make the number of compile jobs configurable.\nARG jobs=8\n\n# Install build tools and remove apt-cache afterwards\nRUN apt-get -q update\nRUN apt-get install -yq --no-install-recommends \\\n  build-essential \\\n  cmake \\\n  libeigen3-dev \\\n  pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Install debugging packages. TODO Remove once this Dockerfile is stable.\nRUN apt-get install -yq --no-install-recommends \\\n  cmake-curses-gui \\\n  git \\\n  vim && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\n# Copy all the app source into docker context\nCOPY . /usr/cycloid\nWORKDIR /usr/cycloid\n\nRUN cat crosscompile.cmake.patch >> crosscompile.cmake\n\n# Build our binary\nWORKDIR /usr/build\nENV PATH \"$PATH:/pitools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin\"\n# LIBRARY_TYPE is a custom way of 'userland' to switch between static/shared.\n# There is also a 'vcos' library whose static behavior can be controlled through\n# VCOS_PTHREADS_BUILD_SHARED; however setting this to FALSE does not work (obvious link error).\n# In order not to modify 'userland', we just set the library install target correctly.\n# VMCS_INSTALL_PREFIX.\nRUN cmake /usr/cycloid/src \\\n  -DCMAKE_TOOLCHAIN_FILE=/usr/cycloid/crosscompile.cmake\\\n  -DBUILD_SHARED_LIBS=OFF -DLIBRARY_TYPE=STATIC \\\n  -DCMAKE_INSTALL_PREFIX=/usr/local -DVMCS_INSTALL_PREFIX=/usr/local\nRUN cmake --build . -- --jobs=$jobs\nRUN cmake --build . -- --jobs=$jobs install\n\n# Travis fails on the resin image if 'RUN' is used with \"exec format error\".\n# FROM resin/rpi-raspbian:stretch\n# COPY --from=build /usr/local /usr/local\n#\n# RUN ldconfig\n# #switch on systemd init system in container\n# ENV INITSYSTEM on\n#\n# CMD drive\n"
}