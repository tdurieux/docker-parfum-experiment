{
  "startTime": 1674245947887,
  "endTime": 1674245948234,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 9,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Install some basic utilities\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    ca-certificates \\\n    sudo \\\n    git \\\n    bzip2 \\\n    axel \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nRUN mkdir /app\nWORKDIR /app\n\n# Create a non-root user and switch to it\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user \\\n && chown -R user:user /app\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-user\nUSER user\n\n# All users can use /home/user as their home directory\nENV HOME=/home/user\nRUN chmod 777 /home/user\n\n# Install Miniconda\nRUN curl -f -so ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p ~/miniconda \\\n && rm ~/miniconda.sh\nENV PATH=/home/user/miniconda/bin:$PATH\n\n# Create a Python 3.6 environment\nRUN /home/user/miniconda/bin/conda install conda-build \\\n && /home/user/miniconda/bin/conda create -y --name py36 python=3.6.4 \\\n && /home/user/miniconda/bin/conda clean -ya\nENV CONDA_DEFAULT_ENV=py36\nENV CONDA_PREFIX=/home/user/miniconda/envs/$CONDA_DEFAULT_ENV\nENV PATH=$CONDA_PREFIX/bin:$PATH\n\n# Ensure conda version is at least 4.4.11\n# (because of this issue: https://github.com/conda/conda/issues/6811)\nENV CONDA_AUTO_UPDATE_CONDA=false\nRUN conda install -y \"conda>=4.4.11\" && conda clean -ya\n\n# Install FFmpeg\nRUN conda install --no-update-deps -y -c conda-forge ffmpeg=3.2.4 \\\n && conda clean -ya\n\n# Install NumPy\nRUN conda install --no-update-deps -y numpy=1.13.3 \\\n && conda clean -ya\n\n# Install build tools\nRUN sudo apt-get update \\\n && sudo apt-get install --no-install-recommends -y build-essential gfortran libncurses5-dev \\\n && sudo rm -rf /var/lib/apt/lists/*\n\n# Build and install CDF\nRUN cd /tmp \\\n && curl -f -O https://spdf.sci.gsfc.nasa.gov/pub/software/cdf/dist/cdf36_4/linux/cdf36_4-dist-all.tar.gz \\\n && tar xzf cdf36_4-dist-all.tar.gz \\\n && cd cdf36_4-dist \\\n && make OS=linux ENV=gnu CURSES=yes FORTRAN=no UCOPTIONS=-O2 SHARED=yes all \\\n && sudo make INSTALLDIR=/usr/local/cdf install && rm cdf36_4-dist-all.tar.gz\n\n# Install other dependencies from pip\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Create empty SpacePy config (suppresses an annoying warning message)\nRUN mkdir /home/user/.spacepy && echo \"[spacepy]\" > /home/user/.spacepy/spacepy.rc\n\n# Copy scripts into the image\nCOPY --chown=user:user . /app\n\n# Set the default command to python3\nCMD [\"python3\"]\n"
}