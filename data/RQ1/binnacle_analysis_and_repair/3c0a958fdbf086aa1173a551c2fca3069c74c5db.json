{
  "startTime": 1674242397724,
  "endTime": 1674242397882,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM arm64v8/ubuntu:18.04\n\n## Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      libtbb-dev \\\n      qt5-default \\\n      libgstreamer1.0-0 \\\n      gstreamer1.0-plugins-base \\\n      gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad \\\n      gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav \\\n      gstreamer1.0-doc \\\n      gstreamer1.0-tools \\\n      gstreamer1.0-x \\\n      gstreamer1.0-alsa \\\n      gstreamer1.0-gl \\\n      gstreamer1.0-gtk3 \\\n      gstreamer1.0-qt5 \\\n      gstreamer1.0-pulseaudio \\\n      libv4l-dev \\\n      libcurl4 \\\n      curl \\\n      git && rm -rf /var/lib/apt/lists/*;\n\n# Install pre-compiled darknet on docker\nCOPY darknet/ darknet/\n\n# Installed opencv precompiled version on jetson\nADD opencv-3.4.3.tar.gz /\n\n# Install node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Technique to rebuild the docker file from here : https://stackoverflow.com/a/49831094/1228937\n# Build using date > marker && docker build .\n# date > marker && sudo docker build -t opendatacam .\nCOPY marker /dev/null\n\nRUN git clone --depth 1 https://github.com/opendatacam/opendatacam /opendatacam\n\nWORKDIR /opendatacam\n\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\n# Install Mongodb\n# NB: for some reason this needs to be at the end otherwise mongod command isn't installed\n# https://github.com/dockerfile/mongodb#run-mongod-w-persistentshared-directory\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 && \\\n    echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list\nRUN apt-get update && apt-get install --no-install-recommends -y openssl libcurl3 mongodb-org && rm -rf /var/lib/apt/lists/*;\nVOLUME [\"/data/db\"]\n\nEXPOSE 8080 8070 8090 27017\n\n# # Because we want to run mongodb and the node.js app\n# # See https://docs.docker.com/config/containers/multi-service_container/\nCOPY docker-start-mongo-and-opendatacam.sh docker-start-mongo-and-opendatacam.sh\nRUN chmod 777 docker-start-mongo-and-opendatacam.sh\nCMD ./docker-start-mongo-and-opendatacam.sh"
}