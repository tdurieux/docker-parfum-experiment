{
  "startTime": 1674241363521,
  "endTime": 1674241363659,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM_TAG=2.176.1\n\nFROM jenkins/jenkins:${FROM_TAG}\n\nARG GOSU_VERSION=1.10\n\n# Install plugins\nCOPY plugins.txt /usr/share/jenkins/ref/\n\n## Issue with jenkins update site and letsencrypt cert. Using -k for the time being\nARG CURL_OPTIONS=-sSfLk\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n\n# Using root to install and run entrypoint.\n# We will change the user to jenkins using gosu\nUSER root\n\nRUN \\\n     # alpine - Install pip and shadow for usermod\n     if [ -f /etc/alpine-release ] ; then \\\n          apk add --no-cache shadow py-setuptools && \\\n          easy_install-2.7 pip==19.1 \\\n          ; \\\n     # debian - Install pip\n     elif [ -f /etc/debian_version ] ; then \\\n          apt-get update -y && \\\n          apt-get install -y --no-install-recommends python-setuptools && \\\n          easy_install pip==19.1 && \\\n          rm -rf /var/lib/apt/lists/* \\\n          ; \\\n     fi\n\nRUN pip install --no-cache-dir awscli PyYAML==3.12 six requests botocore boto3\n\nRUN curl -f -SsL https://releases.hashicorp.com/envconsul/0.7.3/envconsul_0.7.3_linux_amd64.tgz | tar -C /usr/bin -xvzf - && \\\n    chmod +x /usr/bin/envconsul\n\nRUN curl -f -SsLo /usr/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 && \\\n     chmod +x /usr/bin/gosu\n\n# Separate between JENKINS_HOME and WORKSPACE dir. Best if we use NFS for JENKINS_HOME\nRUN mkdir -p /jenkins-workspace-home && \\\n    chown -R jenkins:jenkins /jenkins-workspace-home\n\n# Do things on behalf of jenkins user\nUSER jenkins\n\n# Add all init groovy scripts to ref folder and change their ext to .override\n# so Jenkins will override them every time it starts\nCOPY init-scripts/* /usr/share/jenkins/ref/init.groovy.d/\n\nRUN cd /usr/share/jenkins/ref/init.groovy.d/ && \\\n    for f in *.groovy; do mv \"$f\" \"${f}.override\"; done\n\n# Add configuration handlers groovy scripts\nCOPY config-handlers /usr/share/jenkins/config-handlers\n\nVOLUME /jenkins-workspace-home\n\n# Revert to root\nUSER root\n\nCOPY bin/* /usr/bin/\n\nENV CONFIG_FILE_LOCATION=/dev/shm/jenkins-config.yml\nENV TOKEN_FILE_LOCATION=/dev/shm/.api-token\nENV CONFIG_CACHE_DIR=/dev/shm/.jenkins-config-cache\nENV QUIET_STARTUP_FILE_LOCATION=/dev/shm/quiet-startup-mutex\n\n####################################################################################\n# GENERAL Configuration variables\n####################################################################################\n# Let the master be a master, don't run any jobs on it\nENV JENKINS_ENV_EXECUTERS=0\n# If true, then workspaceDir will changed its defaults from ${JENKINS_HOME}/workspace\n# to /jenkins-workspace-home/workspace/${ITEM_FULLNAME}\n# This is useful in case your JENKINS_HOME is mapped to NFS mount,\n# slowing down the workspace\nENV JENKINS_ENV_CHANGE_WORKSPACE_DIR=true\n####################################################################################\n# ADDITIONAL JAVA_OPTS\n####################################################################################\n# Each JAVA_OPTS_* variable will be added to the JAVA_OPTS variable before startup\n#\n# Don't run the setup wizard\nENV JAVA_OPTS_DISABLE_WIZARD=\"-Djenkins.install.runSetupWizard=false\"\n# See https://wiki.jenkins.io/display/JENKINS/Configuring+Content+Security+Policy\nENV JAVA_OPTS_CSP=\"-Dhudson.model.DirectoryBrowserSupport.CSP=\\\"sandbox allow-same-origin allow-scripts; default-src 'self'; script-src * 'unsafe-eval'; img-src *; style-src * 'unsafe-inline'; font-src *\\\"\"\n# See https://issues.jenkins-ci.org/browse/JENKINS-24752\nENV JAVA_OPTS_LOAD_STATS_CLOCK=\"-Dhudson.model.LoadStatistics.clock=1000\"\n####################################################################################\n\n####################################################################################\n# JNLP Tunnel Variables\n####################################################################################\n# Default port for http\nENV JENKINS_HTTP_PORT_FOR_SLAVES=8080\n# This is used by docker slaves to get the actual jenkins URL\n# in case jenkins is behind a load-balancer or a reverse proxy\n#\n# JENKINS_IP_FOR_SLAVES will be evaluated in the following order:\n#    $JENKINS_ENV_HOST_IP ||\n#    $(eval $JENKINS_ENV_HOST_IP_CMD) ||\n#    ''\n#ENV JENKINS_ENV_HOST_IP=<REAL_IP>\n#ENV JENKINS_ENV_HOST_IP_CMD='<command to fetch ip>'\n# This variable will be evaluated and should retrun a valid IP address:\n# AWS:      JENKINS_ENV_HOST_IP_CMD='curl http://169.254.169.254/latest/meta-data/local-ipv4'\n# General:  JENKINS_ENV_HOST_IP_CMD='ip route | grep default | awk '\"'\"'{print $3}'\"'\"''\n####################################################################################\n\n# If sshd enabled, this will be the port\nEXPOSE 16022\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/bin/entrypoint.sh\"]\n"
}