{
  "startTime": 1674242138739,
  "endTime": 1674242138883,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/rhel7\nMAINTAINER Hazelcast, Inc. Integration Team <info@hazelcast.com>\n\nENV HZ_HOME /opt/hazelcast/\nENV HZ_CP_MOUNT ${HZ_HOME}/external\nENV LANG en_US.utf8\n\nENV USER_NAME=hazelcast\nENV USER_UID=10001\n\nENV HZ_VERSION 3.12.1\n\nARG HZ_MAVEN_DIR=${HZ_VERSION}\nARG REPOSITORY_URL=https://repository.hazelcast.com\nARG NETTY_VERSION=4.1.32.Final\nARG NETTY_TCNATIVE_VERSION=2.0.20.Final\n\nLABEL name=\"hazelcast/hazelcast-enterprise-openshift-rhel\" \\\n      vendor=\"Hazelcast, Inc.\" \\\n      version=\"7.2\" \\\n      architecture=\"x86_64\" \\\n      release=\"${HZ_VERSION}\" \\\n      url=\"http://www.hazelcast.com\" \\\n      summary=\"Hazelcast Openshift Image, certified to RHEL 7\" \\\n      description=\"Starts a standalone Hazelcast server instance to form a cluster based on kubernetes discovery inside Openshift\" \\\n      io.k8s.description=\"Starts a standalone Hazelcast server instance to form a cluster based on kubernetes discovery inside Openshift\" \\\n      io.k8s.display-name=\"Hazelcast\" \\\n      io.openshift.expose-services=\"5701:tcp\" \\\n      io.openshift.tags=\"hazelcast,java8,kubernetes,rhel7\"\n\nRUN mkdir -p $HZ_HOME\nRUN mkdir -p $HZ_CP_MOUNT\nWORKDIR $HZ_HOME\n\nADD hazelcast.xml $HZ_HOME/hazelcast.xml\nADD start.sh $HZ_HOME/start.sh\nADD stop.sh $HZ_HOME/stop.sh\n\n# Add licenses\nADD licenses /licenses\n\n### Atomic Help File\nCOPY description.md /tmp/\n\nRUN yum clean all && yum-config-manager --disable \\* & > /dev/null && \\\n### Add necessary Red Hat repos here\n    yum-config-manager --enable rhel-7-server-rpms,rhel-7-server-optional-rpms & > /dev/null && \\\n    yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical --setopt=tsflags=nodocs && \\\n### Add your package needs to this installation line\n    yum -y install --setopt=tsflags=nodocs golang-github-cpuguy83-go-md2man java-1.8.0-openjdk-devel apr openssl && \\\n### help markdown to man conversion\n    go-md2man -in /tmp/description.md -out /help.1 && \\\n    yum -y remove golang-github-cpuguy83-go-md2man && \\\n    yum -y clean all && rm -rf /var/cache/yum\n\n### add hazelcast enterprise\nADD ${REPOSITORY_URL}/release/com/hazelcast/hazelcast-enterprise-all/${HZ_VERSION}/hazelcast-enterprise-all-${HZ_VERSION}.jar $HZ_HOME\n\n### Adding Logging redirector\nADD https://repo1.maven.org/maven2/org/slf4j/jul-to-slf4j/1.7.12/jul-to-slf4j-1.7.12.jar $HZ_HOME\n\n### Adding JCache\nADD https://repo1.maven.org/maven2/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar $HZ_HOME\n\n### Adding maven wrapper, downloading Hazelcast Kubernetes discovery plugin and dependencies and cleaning up\nCOPY mvnw $HZ_HOME/mvnw\n\n### Configure Hazelcast\nRUN useradd -l -u $USER_UID -r -g 0 -d $HZ_HOME -s /sbin/nologin -c \"${USER_UID} application user\" $USER_NAME\nRUN chown -R $USER_UID:0 $HZ_HOME $HZ_CP_MOUNT\nRUN chmod +x $HZ_HOME/*.sh\n\n### Switch to hazelcast user\nUSER $USER_UID\nRUN cd mvnw && \\\n    chmod +x mvnw && \\\n    ./mvnw -f dependency-copy.xml \\\n    -Dnetty.version=${NETTY_VERSION} \\\n    -Dnetty-tcnative.version=${NETTY_TCNATIVE_VERSION} \\\n    dependency:copy-dependencies && \\\n    cd .. && \\\n    rm -rf $HZ_HOME/mvnw && \\\n    rm -rf $HZ_HOME/.m2 && \\\n    chmod -R +r $HZ_HOME\n\n### Expose port\nEXPOSE 5701\n\n### Start hazelcast standalone server.\nCMD [\"/bin/sh\", \"-c\", \"./start.sh\"]\n"
}