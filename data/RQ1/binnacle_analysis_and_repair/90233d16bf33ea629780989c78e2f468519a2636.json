{
  "startTime": 1674241439520,
  "endTime": 1674241439602,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for CORE3D Danesfield environment.\n#\n# Optional requirements:\n#   nvidia-docker2 (https://github.com/NVIDIA/nvidia-docker)\n#\n# Build:\n#   docker build -t core3d/danesfield .\n#\n# Run:\n#   docker run \\\n#     -i -t --rm \\\n#     -v /path/to/data:/mnt/data \\\n#     core3d/danesfield \\\n#     <command>\n# where <command> is like:\n#   danesfield/tools/generate-dsm.py ...\n#\n# To run with CUDA support, ensure that nvidia-docker2 is installed on the host,\n# then add the following argument to the command line:\n#\n#   --runtime=nvidia\n#\n# Example:\n#   docker run \\\n#     -i -t --rm \\\n#     --runtime=nvidia \\\n#     core3d/danesfield \\\n#     danesfield/tools/material_classifier.py --cuda ...\n\nFROM nvidia/cuda:9.0-runtime-ubuntu16.04\nLABEL maintainer=\"Max Smolens <max.smolens@kitware.com>\"\n\n# Install prerequisites\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    bzip2 \\\n    ca-certificates \\\n    curl \\\n    libgl1-mesa-glx \\\n    libglu1-mesa \\\n    libxt6 \\\n    xvfb \\\n    sudo && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Download and install miniconda3\n# Based on https://github.com/ContinuumIO/docker-images/blob/fd4cd9b/miniconda3/Dockerfile\n# The step to update 'conda' is necessary to avoid the following error when\n# downloading packages (see https://github.com/conda/conda/issues/6811):\n#\n#     IsADirectoryError(21, 'Is a directory')\n#\nENV CONDA_EXECUTABLE /opt/conda/bin/conda\nRUN curl -f --silent -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    ${CONDA_EXECUTABLE} update -n base conda && \\\n    ${CONDA_EXECUTABLE} clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh\n\n# Copy environment definition first so that Conda environment isn't recreated\n# unnecessarily when other source files change.\nCOPY ./deployment/conda/conda_env.yml \\\n     ./danesfield/deployment/conda/conda_env.yml\n\n# Create CORE3D Conda environment\nRUN ${CONDA_EXECUTABLE} env create -f ./danesfield/deployment/conda/conda_env.yml -n core3d && \\\n    ${CONDA_EXECUTABLE} clean -tipsy\n\n# Install core3d-tf_ops package from kitware-danesfield / defaults\nRUN [\"/bin/bash\", \"-c\", \"source /opt/conda/etc/profile.d/conda.sh && \\\n      conda activate core3d && \\\n      conda install -c kitware-danesfield -c kitware-danesfield-df -y core3d-tf_ops && \\\n      conda clean -tipsy\"]\n\n# Install opencv package from conda-forge\nRUN [\"/bin/bash\", \"-c\", \"source /opt/conda/etc/profile.d/conda.sh && \\\n      conda activate core3d && \\\n      conda install -c conda-forge -y opencv && \\\n      conda clean -tipsy\"]\n\n# Install Danesfield package into CORE3D Conda environment\nCOPY . ./danesfield\nRUN rm -rf ./danesfield/deployment\nRUN [\"/bin/bash\", \"-c\", \"source /opt/conda/etc/profile.d/conda.sh && \\\n      conda activate core3d && \\\n      pip install --upgrade pip && \\\n      pip install -e ./danesfield\"]\n\n# Set entrypoint to script that sets up and activates CORE3D environment\nENTRYPOINT [\"/bin/bash\", \"./danesfield/docker-entrypoint.sh\"]\n\n# Set default command when executing the container\nCMD [\"/bin/bash\"]\n"
}