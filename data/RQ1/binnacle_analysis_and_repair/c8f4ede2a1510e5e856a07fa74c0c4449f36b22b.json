{
  "startTime": 1674243361056,
  "endTime": 1674243361209,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "# ch-test-scope: full\nFROM debian9\n\n# The MPICH example has a smaller scope than the OpenMPI example. We want to\n# provide an MPICH build that works on a single node and (via ch-fromhost\n# trickery) on Cray Aires systems. That's it for now.\n\n# We build MPICH rather than install the Debian package because something\n# about Debian's build prevents applications from linking against\n# libmpi.so.12, which is the library we need to replace later. I have not\n# figured out what. While we're at it, tweak some other options as well to\n# produce a bare bones build.\n\nRUN apt-get install --no-install-recommends -y --no-install-suggests \\\n    autoconf \\\n    g++ \\\n    gcc \\\n    git \\\n    libgfortran3 \\\n    libpmi2-0-dev \\\n    make \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# We currently need our own patched patchelf; see issue #256.\nRUN git clone https://github.com/hpc/patchelf.git\nRUN cd patchelf \\\n    && git checkout shrink-soname \\\n    && ./bootstrap.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && make install\nRUN rm -Rf patchelf\n\nENV MPI_VERSION 3.2.1\nENV MPI_URL http://www.mpich.org/static/downloads/${MPI_VERSION}\nRUN wget -nv ${MPI_URL}/mpich-${MPI_VERSION}.tar.gz\nRUN tar xf mpich-${MPI_VERSION}.tar.gz && rm mpich-${MPI_VERSION}.tar.gz\nRUN apt-get install --no-install-recommends -y --no-install-suggests file && rm -rf /var/lib/apt/lists/*;\n\nRUN cd mpich-${MPI_VERSION} \\\n    && CFLAGS=-O3 \\\n       CXXFLAGS=-O3 \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n       --prefix=/usr/local \\\n                   --disable-cxx \\\n                   --disable-fortran \\\n                   --disable-threads \\\n                   --disable-rpath \\\n                   --disable-static \\\n                   --disable-wrapper-rpath \\\n                   --without-ibverbs \\\n                   --without-libfabric \\\n                   --without-slurm \\\n    && make -j$(getconf _NPROCESSORS_ONLN) install\nRUN rm -Rf mpich-${MPI_VERSION}*\nRUN ldconfig\n"
}