{
  "startTime": 1674240859359,
  "endTime": 1674240859665,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 183
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 183
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:15.04\n\nENV CUDA_GCC_VER 4.9\n\nENV CUDA_VER1 7\nENV CUDA_VER2 5\nENV CUDA_VER3 18\n\nENV DRIVER_VER 361.28\n\n\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install \\\n         gcc-${CUDA_GCC_VER} g++-${CUDA_GCC_VER} libssl-dev bc wget \\\n         curl git make dpkg-dev module-init-tools \\\n    && mkdir -p /usr/src/kernels \\\n    && mkdir -p /opt/nvidia \\\n    && apt-get autoremove && apt-get clean && rm -rf /usr/src/kernels && rm -rf /var/lib/apt/lists/*;\n\n# Ensure we're using gcc version GCC_VER\nRUN update-alternatives --install \\\n            /usr/bin/gcc gcc /usr/bin/gcc-${CUDA_GCC_VER} 60 \\\n            --slave \\\n            /usr/bin/g++ g++ /usr/bin/g++-${CUDA_GCC_VER}\n\n#print gcc ver to check\nRUN update-alternatives --config gcc\n\n\n# Download CUDA & Drivers\n\nRUN mkdir -p /opt/nvidia\n\nRUN curl -f https://developer.download.nvidia.com/compute/cuda/${CUDA_VER1}.${CUDA_VER2}/Prod/local_installers/cuda_${CUDA_VER1}.${CUDA_VER2}.${CUDA_VER3}_linux.run > /opt/nvidia/cuda.run\n\nRUN curl -f https://us.download.nvidia.com/XFree86/Linux-x86_64/${DRIVER_VER}/NVIDIA-Linux-x86_64-${DRIVER_VER}.run > /opt/nvidia/driver.run\n\n\n# Download Linux Kernel Source\n\nRUN mkdir -p /usr/src/kernels && rm -rf /usr/src/kernels\nWORKDIR /usr/src/kernels\n\nRUN curl -f https://www.kernel.org/pub/linux/kernel/v`uname -r | grep -o '^[0-9]'`.x/linux-`uname -r | grep -o '[0-9].[0-9].[0-9]'`.tar.xz > linux.tar.xz \\\n    && mkdir linux \\\n    && tar -xvf linux.tar.xz -C linux --strip-components=1 && rm linux.tar.xz\n\nWORKDIR /usr/src/kernels/linux\nRUN zcat /proc/config.gz > .config \\\n    && make modules_prepare \\\n    && echo \"#define UTS_RELEASE \\\"$(uname -r)\\\"\" > include/generated/utsrelease.h\n\nWORKDIR /opt/nvidia\n\nENV CUDATOOLKIT_HOME /opt/nvidia/cudatoolkit\nENV CUDASAMPLES_HOME /opt/nvidia/samples\nENV NVIDIA_DOCKER_PATH /opt/nvidia-docker\n\nRUN chmod +x ./cuda.run \\\n && chmod +x ./driver.run \\\n && mkdir -p $NVIDIA_DOCKER_PATH/bin \\\n && mkdir -p $NVIDIA_DOCKER_PATH/lib64 \\\n && echo \"#!/bin/sh -x\" > install.sh \\\n && echo \"./driver.run --silent --kernel-source-path=/usr/src/kernels/linux\" >> install.sh \\\n && echo \"modprobe nvidia\" >> install.sh \\\n && echo \"mkdir -p /opt/nvidia/cudatoolkit\" >> install.sh \\\n && echo \"mkdir -p /opt/nvidia/samples\" >> install.sh \\\n && echo \"./cuda.run --silent --toolkit --toolkitpath=${CUDATOOLKIT_HOME} --samples --samplespath=${CUDASAMPLES_HOME}\" >> install.sh \\\n && echo \"cd ${CUDASAMPLES_HOME}/NVIDIA_CUDA-${CUDA_VER1}.${CUDA_VER2}_Samples/1_Utilities/deviceQuery && make && ./deviceQuery\" >> install.sh \\\n && echo \"export PATH=$PATH:${NVIDIA_DOCKER_PATH}/bin\" >> install.sh \\\n && echo \"nvidia-docker volume setup\" >> install.sh \\\n && echo \"cp /usr/lib/x86_64-linux-gnu/libcuda.so.${DRIVER_VER} ${NVIDIA_DOCKER_PATH}/lib64\" >> install.sh \\\n && echo \"cp /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.${DRIVER_VER} ${NVIDIA_DOCKER_PATH}/lib64\" >> install.sh \\\n && echo \"cd ${NVIDIA_DOCKER_PATH}/lib64\" >> install.sh \\\n && echo \"ln -s libcuda.so.${DRIVER_VER} libcuda.so.1\" >> install.sh \\\n && echo \"ln -s libnvidia-ml.so.${DRIVER_VER} libnvidia-ml.so.1\" >> install.sh \\\n && chmod +x ./install.sh\n\nCMD ./install.sh\n\n\n"
}