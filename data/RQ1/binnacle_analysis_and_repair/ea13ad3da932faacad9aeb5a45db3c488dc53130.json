{
  "startTime": 1674248368055,
  "endTime": 1674248368430,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Cargill Incorporated\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# docker build -f examples/xo_go/Dockerfile-installed-bionic -t sawtooth-xo-tp-go .\n\n# -------------=== xo-tp-go build ===-------------\n\nFROM ubuntu:bionic as xo-tp-go-builder\n\nENV VERSION=AUTO_STRICT\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg -y && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/ci bionic universe\" >> /etc/apt/sources.list \\\n && echo \"deb http://archive.ubuntu.com/ubuntu bionic-backports universe\" >> /etc/apt/sources.list \\\n && echo 'deb http://ppa.launchpad.net/gophers/archive/ubuntu bionic main' >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD) \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 308C15A29AD198E9 \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 308C15A29AD198E9) \\\n\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n    build-essential \\\n    golang-1.11-go \\\n    git \\\n    libssl-dev \\\n    libzmq3-dev \\\n    openssl \\\n    python3-grpcio-tools \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nENV GOPATH=/go:/go/src/github.com/hyperledger/sawtooth-sdk-go:/go/src/github.com/hyperledger/sawtooth-sdk-go/examples/xo_go\n\nENV PATH=$PATH:/project/bin:/go/bin:/usr/lib/go-1.11/bin\n\nRUN mkdir /go\n\nRUN go get -u \\\n    github.com/golang/protobuf/proto \\\n    github.com/golang/protobuf/protoc-gen-go \\\n    github.com/pebbe/zmq4 \\\n    github.com/brianolson/cbor_go \\\n    github.com/satori/go.uuid \\\n    github.com/btcsuite/btcd/btcec \\\n    github.com/jessevdk/go-flags \\\n    github.com/pelletier/go-toml \\\n    github.com/golang/mock/gomock \\\n    github.com/golang/mock/mockgen \\\n    golang.org/x/crypto/ripemd160 \\\n    golang.org/x/crypto/ssh\n\nCOPY . /go/src/github.com/hyperledger/sawtooth-sdk-go\n\nWORKDIR /go/src/github.com/hyperledger/sawtooth-sdk-go\n\nRUN go generate \\\n && cd examples/xo_go \\\n && if [ -d \"bin\" ]; then rm -rf bin; fi \\\n && mkdir bin \\\n && cd src/sawtooth_xo \\\n && go build -o /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/xo_go/bin/xo-tp-go\n\nRUN pkg=xo_go \\\n && GO_TP_DASH=$(echo $pkg | sed s/_/-/) \\\n && CHANGELOG_DIR=\"debian/usr/share/doc/sawtooth-tp-$GO_TP_DASH\" \\\n && ST_VERSION=$(bin/get_version) \\\n && cd examples/$pkg \\\n && if [ -d \"debian\" ]; then rm -rf debian; fi \\\n && mkdir -p debian/DEBIAN \\\n && mkdir -p $CHANGELOG_DIR \\\n && cp packaging/ubuntu/* debian \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/control \\\n && sed -i -e\"s/@VERSION@/$ST_VERSION/\" debian/changelog \\\n && cp debian/changelog $CHANGELOG_DIR \\\n && mv debian/changelog $CHANGELOG_DIR/changelog.Debian \\\n && gzip --best $CHANGELOG_DIR/changelog \\\n && gzip --best $CHANGELOG_DIR/changelog.Debian \\\n && mv debian/control debian/DEBIAN \\\n && mv debian/postinst debian/DEBIAN \\\n && PACKAGENAME=$(awk '/^Package:/ { print $2 }' debian/DEBIAN/control) \\\n && PACKAGEVERSION=$(dpkg-parsechangelog -S version -l $CHANGELOG_DIR/changelog.gz) \\\n && PACKAGEARCH=$(dpkg-architecture -qDEB_BUILD_ARCH) \\\n && mkdir debian/usr/bin \\\n && cp -R bin/ debian/usr/ \\\n && cp -R packaging/systemd/* debian/ \\\n && fakeroot dpkg-deb --build debian \\\n && echo -- \\\n && echo \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\" \\\n && echo -- \\\n && mv debian.deb \"${PACKAGENAME}_${PACKAGEVERSION}_${PACKAGEARCH}.deb\"\n\n# -------------=== sawtooth-xo-tp-go build ===-------------\n\nFROM ubuntu:bionic\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n systemd && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=xo-tp-go-builder /go/src/github.com/hyperledger/sawtooth-sdk-go/examples/xo_go/sawtooth-xo-tp-go_*.deb /tmp\n\nRUN apt-get update \\\n && dpkg -i /tmp/sawtooth-*.deb || true \\\n && apt-get -f -y install\n\nCMD [\"xo-tp-go\", \"-vv\"]\n"
}