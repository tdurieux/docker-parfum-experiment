{
  "startTime": 1674248092056,
  "endTime": 1674248092228,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 241
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# nZEDb PHP Dockerfile\n# Create a quick and clean dev environment\n#\n\nFROM alpine\nMAINTAINER razorgirl <https://github.com/razorgirl>\n\n# Set correct environment variables.\nENV TZ Europe/London\nENV HOME /root\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# Make sure system is up-to-date.\nRUN \\\n  apk update && \\\n  apk upgrade\n\n# Install PHP.\nRUN apk add --no-cache git php5 php5-pear php5-gd php5-mysql php5-curl php5-json php5-phar php5-imagick php5-pdo_mysql php5-mcrypt php5-common php5-xml php5-openssl php5-zlib php5-ctype php5-exif php5-iconv php5-sockets php5-fpm memcached php5-memcache\n# RUN sed -ri 's/(max_execution_time =) ([0-9]+)/\\1 120/' /etc/php5/php.ini\n# RUN sed -ri 's/(memory_limit =) ([0-9]+)/\\1 -1/' /etc/php5/php.ini\n# RUN sed -ri 's/;(date.timezone =)/\\1 Europe\\/London/' /etc/php5/php.ini\nADD php.ini /etc/php5/php.ini\nADD php-fpm.conf /etc/php5/php-fpm.conf\nRUN \\\n  set -x && \\\n  addgroup -g 82 -S www-data && \\\n  adduser -u 82 -D -S -G www-data www-data\n\n# Install simple_php_yenc_decode.\n# Commented out because it causes problems.\n# RUN \\\n#   apk add git boost-dev build-base && \\\n#   cd /tmp && \\\n#   git clone https://github.com/kevinlekiller/simple_php_yenc_decode\n# ADD simple_php_yenc_decode.sh /tmp/simple_php_yenc_decode/simple_php_yenc_decode.sh\n# RUN \\\n#   cd /tmp/simple_php_yenc_decode/ && \\\n#   ./simple_php_yenc_decode.sh && \\\n#   apk del git boost-dev build-base && \\\n#   apk add boost\n\n# Install yydecode\nRUN \\\n  apk add --no-cache build-base && \\\n  cd /tmp && \\\n  mkdir -p yydecode && \\\n  cd yydecode && \\\n  wget https://netassist.dl.sourceforge.net/project/yydecode/yydecode/0.2.10/yydecode-0.2.10.tar.gz && \\\n  tar xf yydecode-0.2.10.tar.gz && \\\n  cd yydecode-0.2.10 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && \\\n  apk del build-base && rm yydecode-0.2.10.tar.gz\n\n# Expose ports\nEXPOSE 9000\n\n# Clean up when done.\nRUN rm -rf /tmp/* /var/tmp/*\n\n# Run.\nCMD [\"php-fpm\"]\n"
}