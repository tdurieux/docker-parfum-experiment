{
  "startTime": 1674248987466,
  "endTime": 1674248987696,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 50,
        "columnStart": 25,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 50,
        "columnStart": 25,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\n# update apt repository to cloudfront's mirror\nRUN set -x \\\n    && sed -i \"s/deb.debian.org/cloudfront.debian.net/\" /etc/apt/sources.list \\\n    && sed -i \"s/security.debian.org/cloudfront.debian.net/\" /etc/apt/sources.list\n\n# update system\nRUN set -x \\\n    && apt-get update -y\n\n# install necessary packages\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    ant \\\n    libboost-all-dev \\\n    bzip2 \\\n    clang-4.0 \\\n    curl \\\n    debsigs \\\n    dpkg-sig \\\n    expect \\\n    fakeroot \\\n    gcc \\\n    git \\\n    gnupg1 \\\n    openjdk-8-jdk \\\n    libacl1-dev \\\n    libcap-dev \\\n    libcurl4-openssl-dev \\\n    libpam0g-dev \\\n    libffi-dev \\\n    procps \\\n    uuid-dev \\\n    make \\\n    libssl1.0-dev \\\n    libpango-1.0-0 \\\n    r-base \\\n    rrdtool \\\n    sudo \\\n    wget \\\n    libxml-commons-external-java \\\n    mesa-common-dev \\\n    zlib1g \\\n    libattr1-dev \\\n    libcap-dev \\\n    libacl1-dev \\\n    lsof \\\n    python \\\n    libuser1-dev \\\n    libglib2.0-dev \\\n    valgrind && rm -rf /var/lib/apt/lists/*;\n\n## run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n## https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n\n# install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN bash /tmp/install-dependencies\n\n# add clang to system path\nENV PATH=/usr/lib/llvm-4.0/bin:$PATH\n\n# install crashpad and its dependencies\nCOPY dependencies/common/install-crashpad /tmp/\nRUN bash /tmp/install-crashpad\n\n# set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=$GITHUB_LOGIN\n\n# install common dependencies\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/* /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-common\n\n# install Qt SDK\nCOPY dependencies/linux/install-qt-sdk /tmp/\nRUN mkdir -p /opt/RStudio-QtSDK && \\\n    export QT_SDK_DIR=/opt/RStudio-QtSDK/Qt5.12.1 && \\\n    export QT_QPA_PLATFORM=minimal && \\\n    /tmp/install-qt-sdk\n\n# create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nRUN groupadd -g $JENKINS_GID jenkins && \\\n    useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins && \\\n    echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n"
}