{
  "startTime": 1674244691878,
  "endTime": 1674244692197,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 29,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 55,
        "columnEnd": 65
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 39,
        "columnEnd": 44
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 65,
        "columnEnd": 75
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 30,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 77,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 28,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nWORKDIR /src/blockstack\n\n# Install dependencies from apt\nRUN apt-get -y update && \\\n    apt-get install --no-install-recommends -y python-pip python-dev libssl-dev libffi-dev \\\n    rng-tools libgmp3-dev lsof wget curl apt-utils git gnupg sqlite3 \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# We need bitcoind\nRUN add-apt-repository ppa:bitcoin/bitcoin\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y bitcoind && rm -rf /var/lib/apt/lists/*;\n\n# Add standard username and password\nRUN mkdir ~/.bitcoin\nRUN echo \"rpcuser=blockstack\\nrpcpassword=blockstacksystem\\nrpcbind=0.0.0.0\\nrpcallowip=0.0.0.0/0\\n\" > ~/.bitcoin/bitcoin.conf\n\n# Install node\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install node apps\n\n# Blockstack.js\nADD https://api.github.com/repos/blockstack/blockstack.js/git/refs/heads/feature/stacks-transactions+aaron blockstackjs-version.json\nRUN cd /src/ && git clone https://github.com/blockstack/blockstack.js.git\nRUN cd /src/blockstack.js && git checkout feature/stacks-transactions+aaron\nRUN cd /src/blockstack.js && npm i && npm run build && npm i . -g && npm cache clean --force;\n\n# Transaction broadcaster\nADD https://api.github.com/repos/blockstack/transaction-broadcaster/git/refs/heads/master broadcaster-version.json\nRUN cd /src/ && git clone https://github.com/blockstack/transaction-broadcaster.git\nRUN cd /src/transaction-broadcaster && npm i && npm run build && npm i . -g && npm cache clean --force;\n\n# CLI\nADD https://api.github.com/repos/kantai/cli-blockstack/git/refs/heads/master cli-version.json\nRUN cd /src/ && git clone https://github.com/kantai/cli-blockstack.git\nRUN cd /src/cli-blockstack && git checkout master\nRUN cat /src/cli-blockstack/package.json | grep -v '\"blockstack\": \"^19' > /tmp/package.json\nRUN mv /tmp/package.json /src/cli-blockstack/package.json\nRUN cd /src/cli-blockstack && npm i && npm ln blockstack && npm run build && npm i . -g && npm cache clean --force;\n\n# Virtualchain\nADD https://api.github.com/repos/blockstack/virtualchain/git/refs/heads/develop vc-version.json\nRUN cd /src/ && git clone https://github.com/blockstack/virtualchain.git\nRUN cd /src/virtualchain && git checkout develop\nRUN cd /src/virtualchain && pip install --no-cache-dir . --upgrade\n\n# Copy all files from the repo into the container\nCOPY . .\n\n# Upgrade pip and install pyparsing\nRUN pip install --no-cache-dir pyparsing\n\n# Install Blockstack from source\nRUN pip install --no-cache-dir . --upgrade\nRUN pip install --no-cache-dir ./integration_tests --upgrade\n\nRUN cd /src/blockstack/testnet && python index.html.py > index.html\n\nCMD /src/blockstack/testnet/testnet_simple.sh\n"
}