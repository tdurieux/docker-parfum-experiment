{
  "startTime": 1674241829457,
  "endTime": 1674241829889,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedDockerfile": "# Tag: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n# Label: com.nvidia.cuda.version: 9.0.176\n# Label: com.nvidia.cudnn.version: 7.1.2.21\n# Label: com.nvidia.volumes.needed: nvidia_driver\n# Label: maintainer: NVIDIA CORPORATION <cudatools@nvidia.com>\n# Ubuntu 16.04\nFROM nvidia/cuda@sha256:40db1c98b66e133f54197ba1a66312b9c29842635c8cba5ae66fb56ded695b7c\n\nENV TENSORFLOW_VERSION=1.12.0\nENV HADOOP_VERSION=2.7.2\nLABEL HADOOP_VERSION=2.7.2\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install \\\n      nano \\\n      vim \\\n      joe \\\n      wget \\\n      curl \\\n      jq \\\n      gawk \\\n      psmisc \\\n      python \\\n      python-dev \\\n      python-pip \\\n      python3 \\\n      python3-dev \\\n      python3-pip \\\n      python-six \\\n      build-essential \\\n      automake \\\n      openjdk-8-jdk \\\n      lsof \\\n      libcupti-dev \\\n\n      openssh-server \\\n      openssh-client \\\n      build-essential \\\n      autotools-dev \\\n      cmake \\\n      git \\\n      bash-completion \\\n      ca-certificates \\\n      inotify-tools \\\n      rsync \\\n      realpath \\\n      libjpeg-dev \\\n      libpng-dev \\\n      net-tools \\\n      libsm6 \\\n      libxext6 \\\n      rpm \\\n\n      cpio \\\n      net-tools \\\n      libdapl2 \\\n      dapl2-utils \\\n      libmlx4-1 \\\n      libmlx5-1 \\\n      ibutils \\\n      librdmacm1 \\\n      libibverbs1 \\\n      libmthca1 \\\n      ibverbs-utils \\\n      rdmacm-utils \\\n      perftest \\\n      kmod && rm -rf /var/lib/apt/lists/*;\n\n\n# Prepare Hadoop 2.7.2\nRUN wget -qO- https://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz | \\\n    tar xz -C /usr/local && \\\n    mv /usr/local/hadoop-${HADOOP_VERSION} /usr/local/hadoop\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \\\n    HADOOP_INSTALL=/usr/local/hadoop \\\n    NVIDIA_VISIBLE_DEVICES=all\n\nENV HADOOP_PREFIX=${HADOOP_INSTALL} \\\n    HADOOP_BIN_DIR=${HADOOP_INSTALL}/bin \\\n    HADOOP_SBIN_DIR=${HADOOP_INSTALL}/sbin \\\n    HADOOP_HDFS_HOME=${HADOOP_INSTALL} \\\n    HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_INSTALL}/lib/native \\\n    HADOOP_OPTS=\"-Djava.library.path=${HADOOP_INSTALL}/lib/native\"\n\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${HADOOP_BIN_DIR}:${HADOOP_SBIN_DIR} \\\n    LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/cuda/targets/x86_64-linux/lib/stubs:${JAVA_HOME}/jre/lib/amd64/server\n\n\n# Install NCCL v2.3.7, for CUDA 9.0\nRUN wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb && \\\n    dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb && \\\n    apt install -y --no-install-recommends libnccl2=2.3.7-1+cuda9.0 libnccl-dev=2.3.7-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;\n\n\n# Install intel MPI with the version which azure suggests.\nCOPY silent.cfg /silent.cfg\nENV MANPATH=/usr/share/man:/usr/local/man \\\n    COMPILERVARS_ARCHITECTURE=intel64 \\\n    COMPILERVARS_PLATFORM=linux \\\n    INTEL_MPI_PATH=/opt/intel/compilers_and_libraries/linux/mpi\n\n# Install Intel MPI in the Docker Image.\n# You should prepare your own intel mpi license to active your intel MPI, and modify the file silent.cfg to set the configuration of activation type.\nRUN wget https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/9278/l_mpi_p_5.1.3.223.tgz && \\\n    tar -xvf /l_mpi_p_5.1.3.223.tgz && \\\n    cd /l_mpi_p_5.1.3.223 && \\\n    ./install.sh -s /silent.cfg && \\\n    . /opt/intel/bin/compilervars.sh && \\\n    . /opt/intel/compilers_and_libraries/linux/mpi/bin64/mpivars.sh && \\\n    echo \"source /opt/intel/compilers_and_libraries/linux/mpi/bin64/mpivars.sh\" >> /root/.bashrc && \\\n    echo LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:'$LD_LIBRARY_PATH' >> /root/.bashrc && rm /l_mpi_p_5.1.3.223.tgz\n\nENV PATH $PATH:/opt/intel/compilers_and_libraries/linux/mpi/bin64\n\n# Install TensorFlow\nRUN pip3 install --no-cache-dir tensorflow-gpu==${TENSORFLOW_VERSION} h5py && \\\n    pip install --no-cache-dir tensorflow-gpu==${TENSORFLOW_VERSION} h5py\n\n# Install Dependencies\nRUN pip3 install --no-cache-dir scipy jupyter ipykernel numpy toolz pandas scikit-learn pillow && \\\n    pip install --no-cache-dir scipy numpy toolz pandas scikit-learn pillow\n\n# Install Horovod, temporarily using CUDA stubs\nRUN ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs && \\\n\t/bin/bash -c \"source /opt/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh\" && \\\n    pip3 install --no-cache-dir horovod==0.15.2 && \\\n    pip install --no-cache-dir horovod==0.15.2 && \\\n    ldconfig"
}