{
  "startTime": 1674235792016,
  "endTime": 1674235792215,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nRUN apt-get update && apt-get install -y --no-install-recommends \\ \n  automake \\\n  bison \\\n  build-essential \\\n  bzip2 \\\n  ca-certificates \\\n  clang \\\n  checkinstall \\\n  cpio \\\n  curl \\\n  file \\\n  g++-multilib \\\n  gcc-multilib \\\n  git \\\n  gobject-introspection \\\n  gzip \\\n  intltool \\\n  libgirepository1.0-dev \\\n  libgsf-1-dev \\\n  libreadline-dev \\\n  libssl-dev \\\n  libtool \\\n  libxml2-dev \\\n  libyaml-dev \\\n  llvm-dev \\\n  make \\\n  patch \\\n  ruby \\\n  sed \\\n  uuid-dev \\\n  valac \\\n  wget \\\n  xz-utils \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# install wslay\nRUN apt-get install --no-install-recommends -y python-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir sphinx\nWORKDIR /home/mruby/src\nRUN git clone https://github.com/tatsuhiro-t/wslay\nWORKDIR /home/mruby/src/wslay\nRUN autoreconf -i\nRUN automake\nRUN autoconf\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/mruby/opt/wslay\nRUN make\nENV PKG_CONFIG_PATH=/home/mruby/opt/wslay:$PKG_CONFIG_PATH\nENV LD_LIBRARY_PATH=/home/mruby/wslay/lib:$LD_LIBRARY_PATH\n\n# install libressl\nWORKDIR /home/mruby/src\nRUN curl -f https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-2.5.4.tar.gz | tar -xzv\nRUN mv /home/mruby/src/libressl-2.5.4 /home/mruby/src/libressl\nWORKDIR /home/mruby/src/libressl\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/mruby/opt/libressl\nRUN make && make check\nRUN make install\nENV PKG_CONFIG_PATH=/home/mruby/opt/libressl:$PKG_CONFIG_PATH\nENV LD_LIBRARY_PATH=/home/mruby/libressl/lib:$LD_LIBRARY_PATH\n\nENV SHELL /bin/bash\nWORKDIR /home/mruby/code\n"
}