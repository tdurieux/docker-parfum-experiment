{
  "startTime": 1674249785314,
  "endTime": 1674249785430,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 26,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 19,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 170
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER \"The CentOS Project\" <admin@jiobxn.com>\nARG LATEST=\"0\"\nENV container docker\n\nRUN \\cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN yum clean all; yum -y install epel-release; rm -rf /var/cache/yum yum -y update\nRUN yum -y install cockpit bash-completion vim wget python34-setuptools aria2 openssh-server openssh-clients initscripts iptables-services bind-utils net-tools cronie at; rm -rf /var/cache/yum yum clean all\nRUN easy_install-3.4 pip; pip install --no-cache-dir --upgrade youtube-dl you-get\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \\\nsystemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f /lib/systemd/system/multi-user.target.wants/*;\\\nrm -f /etc/systemd/system/*.wants/*;\\\nrm -f /lib/systemd/system/local-fs.target.wants/*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\nrm -f /lib/systemd/system/basic.target.wants/*;\\\nrm -f /lib/systemd/system/anaconda.target.wants/*;\n\nRUN systemctl enable cockpit.socket\nRUN echo -e '#!/bin/bash\\n: ${PASS:=$(pwmake 128)}\\n\\nif [ ! -f /init.ok ]; then \\n  echo \"root:$PASS\" | chpasswd\\n  echo -e \"root password: $PASS\"\\n  touch /init.ok\\nfi\\n\\nexec \"$@\"' >/init.sh\nRUN chmod +x /init.sh\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nENTRYPOINT [\"/init.sh\"]\nCMD [\"/usr/sbin/init\"]\n\n# docker build -t cockpit .\n# docker run -d --restart always --privileged -p 9090:9090 -v /sys/fs/cgroup:/sys/fs/cgroup:ro --name webshell cockpit\n"
}