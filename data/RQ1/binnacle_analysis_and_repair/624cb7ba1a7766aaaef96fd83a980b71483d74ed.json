{
  "startTime": 1674250680398,
  "endTime": 1674250680622,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedDockerfile": "#\n# uIota Dockerfile\n#\n# The resulting image will contain everything needed to build uIota FW.\n#\n# Setup: (only needed once per Dockerfile change)\n# 1. install docker, add yourself to docker group, enable docker, relogin\n# 2. # docker build -t uiota-build .\n#\n# Usage:\n# 3. cd to riot root\n# 4. # docker run -i -t -u $UID -v $(pwd):/data/riotbuild uiota-build ./dist/tools/compile_test/compile_test.py\n\n\nFROM debian:stretch\n\nMAINTAINER Kristoffer Ek <stoffer@skulp.net>\n\n# unrar is non-free\nRUN \"echo\" \"deb http://http.us.debian.org/debian stretch non-free\" >> /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\taptitude \\\n\tautoconf \\\n\tautomake \\\n\tbash \\\n\tbison \\\n\tbzip2 \\\n\tflex \\\n\tg++ \\\n\tgawk \\\n\tgcc \\\n\tgit \\\n\tgnupg \\\n\tgperf \\\n\thelp2man \\\n\tjoe \\\n\tlibexpat-dev \\\n\tlibtool \\\n\tlibtool-bin \\\n\tmake \\\n\tncurses-dev \\\n\tnano \\\n\tpython \\\n\tpython-dev \\\n\tpython-serial \\\n\tsed \\\n\ttexinfo \\\n\tunrar \\\n\tunzip \\\n\tvim \\\n\twget \\\n\tsplint \\\n\tsudo \\\n\tscreen \\\n\tsoftware-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Java\nRUN echo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main\" > /etc/apt/sources.list.d/linuxuprising-java.list && apt-get update\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A\nRUN echo oracle-java11-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections\nRUN echo oracle-java11-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install --no-install-recommends -y --allow-unauthenticated oracle-java11-set-default && rm -rf /var/lib/apt/lists/*;\n\n# Adduser `meterlogger`\nRUN perl -pi -e 's/^#?\\%sudo\\W+ALL=\\(ALL\\:ALL\\)\\W+ALL/\\%sudo\\tALL=\\(ALL\\:ALL\\) NOPASSWD\\: ALL/' /etc/sudoers\nRUN adduser --disabled-password --gecos \"\" meterlogger && usermod -a -G dialout meterlogger\nRUN usermod -a -G sudo meterlogger\n\n# Create our main work directory\nRUN mkdir /meterlogger\nRUN chown -R meterlogger:meterlogger /meterlogger\n\n# Crosstool demands non-root user for compilation\nUSER meterlogger\n\n# esp-open-sdk\nRUN cd /meterlogger && git clone --recursive https://github.com/nabovarme/esp-open-sdk.git && \\\n    cd /meterlogger/esp-open-sdk && git checkout sdk-v2.2.x\nRUN rm -fr /meterlogger/esp-open-sdk/esp-open-lwip\nRUN cd /meterlogger/esp-open-sdk && git clone https://github.com/nabovarme/esp-open-lwip.git && \\\n    cd /meterlogger/esp-open-sdk/esp-open-lwip && git checkout dns_cache\nRUN cd /meterlogger/esp-open-sdk && make STANDALONE=y\n\n# EspStackTraceDecoder.jar\nRUN cd /meterlogger && wget https://github.com/littleyoda/EspStackTraceDecoder/releases/download/untagged-59a763238a6cedfe0362/EspStackTraceDecoder.jar\n\n# meterlogger\nRUN cd /meterlogger && git clone --recursive https://github.com/nabovarme/MeterLogger.git && \\\n    cd /meterlogger/MeterLogger && git checkout dns_cache\n\nUSER root\n\n# Export ENV\nENV PATH /meterlogger/esp-open-sdk/xtensa-lx106-elf/bin:$PATH\nENV XTENSA_TOOLS_ROOT /meterlogger/esp-open-sdk/xtensa-lx106-elf/bin\nENV SDK_BASE /meterlogger/esp-open-sdk/sdk\n\nWORKDIR /meterlogger/MeterLogger\nCMD cp /meterlogger/esp-open-sdk/xtensa-lx106-elf/bin/esptool.py /meterlogger/MeterLogger/tools/ && \\\n\tcd /meterlogger/MeterLogger && \\\n\teval $BUILD_ENV make clean all\n"
}