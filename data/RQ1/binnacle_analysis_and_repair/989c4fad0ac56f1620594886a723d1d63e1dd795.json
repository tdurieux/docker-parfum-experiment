{
  "startTime": 1674240514675,
  "endTime": 1674240514969,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 9,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for running shinken test scripts\n# DO NOT BUILD IT BY YOURSELF, USE\n#`ryba prepare -m '@rybajs/metal/shinken/poller/*'`\nFROM centos:latest\n\n### PACKAGES ###\n# add epel repo\nRUN yum -y install wget && rm -rf /var/cache/yum\nRUN wget -r -l1 --no-parent -A 'epel-release*.rpm' 'https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/'\nRUN rpm -iUvh dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release*.noarch.rpm\nRUN rm -rf dl.fedoraproject.org\n\nRUN yum clean all && yum swap fakesystemd systemd\nRUN yum -y update\n# Install additionnal tools\nRUN yum -y install sudo krb5-workstation libev libev-devel nmap-ncat jwhois cronie && rm -rf /var/cache/yum\n# Install dev tools\nRUN yum -y install git gcc gcc-c++ make snappy-devel openssl-devel expat-devel cyrus-sasl-devel mysql-devel && rm -rf /var/cache/yum\n# Install php\nRUN yum -y install php && rm -rf /var/cache/yum\n# Install PERL\nRUN yum -y install perl perl-devel perl-CPAN perl-libwww-perl perl-DBD-MySQL && rm -rf /var/cache/yum\n# Install python\nRUN yum -y install python-setuptools python-pip python-devel && rm -rf /var/cache/yum\n# Disable require tty for sudo\nRUN sed -i 's/Defaults.*requiretty/# Defaults requiretty/g' /etc/sudoers\n# Install CPANM\n#RUN curl -L http://cpanmin.us | perl - --sudo App::cpanminus\n# Install HDP repo\n# RUN wget {{ executor.hdp_repo }} -O /etc/yum.repos.d/hdp.repo --no-check-certificate\n# RUN sed -i 's/gpgcheck=1/gpgcheck=0/g' /etc/yum.repos.d/hdp.repo\n# RUN yum -y update\n# RUN yum -y install hive\n# Install JAVA\n# COPY {{ executor.java.jdk.location }} /tmp/ryba-java/java.tar.gz\n# RUN tar xzf /tmp/ryba-java/java.tar.gz -C /tmp/ryba-java\n# RUN rm /tmp/ryba-java/java.tar.gz\n# RUN mkdir /usr/java\n# RUN mv /tmp/ryba-java/jdk{{ executor.java.jdk.version }} /usr/java/{{ executor.java.jdk.version }}\n# RUN ln -sf /usr/java/{{ executor.java.jdk.version }} /usr/java/latest\n# RUN ln -sf /usr/java/{{ executor.java.jdk.version }} /usr/java/default\n# COPY java.sh /etc/profile.d/java.sh\n# Install JAVA Policy\n# COPY jce_policy-7/local_policy.jar /usr/java/default/jre/lib/security/local_policy.jar\n# COPY jce_policy-7/US_export_policy.jar /usr/java/default/jre/lib/security/US_export_policy.jar\nCOPY id_rsa /root/.ssh/id_rsa\nCOPY id_rsa.pub /root/.ssh/id_rsa.pub\nRUN chmod -R 600 /root/.ssh\n### LAYOUT ###\nRUN useradd -ms /bin/bash {{ user.name }}\nRUN echo \"{{ user.name }}        ALL=(ALL)       NOPASSWD: ALL\" >> /etc/sudoers\n\nUSER {{ user.name }}\nWORKDIR /home/{{ user.name }}\nRUN wget https://labs.consol.de/assets/downloads/nagios/check_mysql_health-2.2.2.tar.gz -O check_mysql.tar.gz\nRUN tar xzvf check_mysql.tar.gz && rm check_mysql.tar.gz\nRUN rm check_mysql.tar.gz\nWORKDIR check_mysql_health-2.2.2\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/{{ user.name }}\nRUN make\nRUN make install\nRUN rm -rf check_mysql_health-2.2.2\nWORKDIR /home/{{ user.name }}\n# Downloading shinken-plugins\nRUN git clone 'https://github.com/ryba-io/hadoop-monitoring-plugins' plugins\nRUN sudo pip install --no-cache-dir -r plugins/py_requirements.txt\nRUN rm -rf plugins/.git*\nRUN mkdir -p plugins/mysql\nRUN mv libexec/check_mysql_health plugins/mysql/check_health\nRUN rm -rf check_mysql_health*\nRUN rm -r libexec\nWORKDIR /home/{{ user.name }}/plugins\nCMD sudo crond -n\n"
}