{
  "startTime": 1674243895627,
  "endTime": 1674243895852,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-devel-ubuntu16.04\nLABEL maintainer=\"nweir <nweir@iqt.org>\"\n\nENV CUDNN_VERSION 7.3.0.29\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nARG solaris_branch='master'\n\n\n# prep apt-get and cudnn\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t    apt-utils \\\n            libcudnn7=$CUDNN_VERSION-1+cuda9.0 \\\n            libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 && \\\n    apt-mark hold libcudnn7 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install requirements\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bc \\\n    bzip2 \\\n    ca-certificates \\\n    curl \\\n    git \\\n    libgdal-dev \\\n    libssl-dev \\\n    libffi-dev \\\n\t\tlibncurses-dev \\\n    libgl1 \\\n    jq \\\n    nfs-common \\\n    parallel \\\n    python-dev \\\n    python-pip \\\n    python-wheel \\\n    python-setuptools \\\n    unzip \\\n\t\tvim \\\n    wget \\\n    build-essential \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV PATH /opt/conda/bin:$PATH\n\n# install anaconda\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\n# prepend pytorch and conda-forge before default channel\nRUN conda update conda && \\\n    conda config --prepend channels conda-forge && \\\n    conda config --prepend channels pytorch\n\n# get dev version of solaris and create conda environment based on its env file\nWORKDIR /tmp/\nRUN git clone https://github.com/cosmiq/solaris.git && \\\n    cd solaris && \\\n    git checkout ${solaris_branch} && \\\n    conda env create -f environment.yml\nENV PATH /opt/conda/envs/solaris/bin:$PATH\n\nRUN cd solaris && pip install --no-cache-dir .\n\n# install various conda dependencies into the space_base environment\nRUN conda install -n solaris \\\n                     jupyter \\\n                     jupyterlab \\\n                     ipykernel\n\n# add a jupyter kernel for the conda environment in case it's wanted\nRUN source activate solaris && python -m ipykernel.kernelspec \\\n    --name solaris --display-name solaris\n\n# open ports for jupyterlab and tensorboard\nEXPOSE 8888 6006\n\nRUN [\"/bin/bash\"]\n"
}