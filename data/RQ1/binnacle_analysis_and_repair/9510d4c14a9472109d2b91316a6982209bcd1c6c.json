{
  "startTime": 1674236168517,
  "endTime": 1674236168671,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 15,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This generates a production image for RAIS with the S3 plugin enabled\n#\n# Examples:\n#\n#     # Simple case: just build the latest production image\n#     docker build --rm -t uolibraries/rais:latest ./docker\n#\n#     # Generate the build image to simplify local development\n#     docker build --rm -t uolibraries/rais:build --target build ./docker\nFROM fedora:29 AS build\nLABEL maintainer=\"Jeremy Echols <jechols@uoregon.edu>\"\n\n# Install all the build dependencies\nRUN dnf update -y\nRUN dnf upgrade -y\nRUN dnf install -y openjpeg2-devel\nRUN dnf install -y ImageMagick-devel\nRUN dnf install -y git\nRUN dnf install -y gcc\nRUN dnf install -y make\nRUN dnf install -y tar\n\n# Installing GraphicsMagick is wholly unnecessary, but helps when using the\n# build box for things like converting images.  Since opj2_encode doesn't\n# support all formats, and ImageMagick has been iffy with some conversions for\n# us, \"gm convert\" is a handy fallback.  As this is a multi-stage dockerfile,\n# this installation doesn't hurt the final production docker image.\nRUN dnf install -y GraphicsMagick\n\n# Go comes after other installs to avoid re-pulling the more expensive\n# dependencies when changing Go versions\nRUN curl -f -L https://dl.google.com/go/go1.11.2.linux-amd64.tar.gz > /tmp/go.tgz\nRUN cd /opt && tar -xzf /tmp/go.tgz && rm /tmp/go.tgz\n\n# \"Install\" Go\nRUN mkdir -p /usr/local/go\nENV GOPATH /usr/local/go\nENV GOROOT /opt/go\nENV PATH /opt/go/bin:/usr/local/go/bin:$PATH\n\n# Make sure the build box can lint code\nRUN go get -u golang.org/x/lint/golint\n\n# Add the go mod stuff first so we aren't re-downloading dependencies except\n# when they actually change\nWORKDIR /opt/rais-src\nADD ./go.mod /opt/rais-src/go.mod\nADD ./go.sum /opt/rais-src/go.sum\nRUN go mod download\n\n# Make sure we don't just add every little thing, otherwise unimportant changes\n# trigger a rebuild\nADD ./Makefile /opt/rais-src/Makefile\nADD ./src /opt/rais-src/src\nRUN make binaries plugins\n\n# Production image just installs runtime deps and copies in the binaries\nFROM fedora:29 AS production\nLABEL maintainer=\"Jeremy Echols <jechols@uoregon.edu>\"\n\n# Stolen from mariadb dockerfile: add our user and group first to make sure\n# their IDs get assigned consistently\nRUN groupadd -r rais && useradd -r -g rais rais\n\n# Deps\nRUN dnf update -y && dnf upgrade -y && dnf install -y openjpeg2 ImageMagick\n\nENV RAIS_TILEPATH /var/local/images\nRUN touch /etc/rais.toml && chown rais:rais /etc/rais.toml\nCOPY --from=build /opt/rais-src/bin /opt/rais/\n\nUSER rais\nEXPOSE 12415\nENTRYPOINT [\"/opt/rais/rais-server\"]\n"
}