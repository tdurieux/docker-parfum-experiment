{
  "startTime": 1674252338249,
  "endTime": 1674252338783,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 1,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 89,
        "columnStart": 1,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 1,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 89,
        "columnStart": 1,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 93,
        "lineEnd": 94,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 97,
        "columnStart": 1,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM swerpbox/alpine-base\n\nLABEL org.label-schema.vendor=\"SwerpBox: rTorrent/ruTorrent\" \\\n      org.label-schema.build-date=\"2017-02-12T00:12:00+00:00\" \\\n      org.label-schema.name=\"rTorrent and ruTorrent running on Alpine 3.5\" \\\n      org.label-schema.vcs-type=\"git\" \\\n      org.label-schema.vcs-url=\"https://github.com/strues/swerpbox\" \\\n      maintainer=\"Steven Truesdell <steven@strues.io>\"\n\nARG BUILD_CORES\nARG MEDIAINF_VER=\"0.7.90\"\nARG RTORRENT_VER=\"0.9.6\"\nARG LIBTORRENT_VER=\"0.13.6\"\nARG RUTORRENT_ADDR=\"https://github.com/Novik/ruTorrent/archive/master.tar.gz\"\n# install runtime packages\nRUN \\\n  apk add --no-cache \\\n    ca-certificates \\\n    curl \\\n    fcgi \\\n    ffmpeg \\\n    geoip \\\n    gzip \\\n    dtach \\\n    tar \\\n    unrar \\\n    unzip \\\n    wget \\\n    irssi \\\n    irssi-perl \\\n    libressl-dev \\\n    zlib \\\n    zlib-dev \\\n    libxml2-dev \\\n    perl-archive-zip \\\n    perl-net-ssleay \\\n    perl-digest-sha1 \\\n    git \\\n    zip && \\\n # php packages\n  apk add --no-cache --repository http://nl.alpinelinux.org/alpine/edge/community \\\n    php7 \\\n    php7-cgi \\\n    php7-fpm \\\n    php7-json  \\\n    php7-mbstring \\\n    php7-sockets \\\n    php7-opcache \\\n    php7-mcrypt \\\n    php7-xmlrpc \\\n    php7-pear && \\\n\n# install build packages\n  apk add --no-cache --virtual=build-deps \\\n    autoconf \\\n    automake \\\n    build-base \\\n    subversion \\\n    cppunit-dev \\\n    curl-dev \\\n    perl-dev \\\n    file \\\n    g++ \\\n    gcc \\\n    libtool \\\n    make \\\n    ncurses-dev && \\\n\n  cd /tmp && \\\n  git clone https://github.com/esmil/mktorrent && \\\n  svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/stable xmlrpc-c && \\\n  git clone -b ${LIBTORRENT_VER} https://github.com/rakshasa/libtorrent.git && \\\n  git clone -b ${RTORRENT_VER} https://github.com/rakshasa/rtorrent.git && \\\n  cd /tmp/mktorrent && \\\n  make -j ${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} && \\\n  make install && \\\n# install webui\n  mkdir -p /var/www/public/rutorrent /defaults/rutorrent-conf && \\\n# install autodl-irssi perl modules\n  perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => \"follow\"); $c->edit(build_requires_install_policy => \"yes\"); $c->commit' && \\\n  curl -f -L https://cpanmin.us | perl - App::cpanminus && \\\n\tcpanm HTML::Entities XML::LibXML JSON JSON::XS && \\\n\n# compile mediainfo packages\n curl -f -o \\\n /tmp/libmediainfo.tar.gz -L \\\n        \"https://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" && \\\n curl -f -o \\\n /tmp/mediainfo.tar.gz -L \\\n        \"https://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" && \\\n\n mkdir -p /tmp/libmediainfo /tmp/mediainfo && \\\n\n tar xf /tmp/libmediainfo.tar.gz -C \\\n        /tmp/libmediainfo --strip-components=1 && \\\n\n tar xf /tmp/mediainfo.tar.gz -C \\\n        /tmp/mediainfo --strip-components=1 && \\\n\n cd /tmp/libmediainfo && ./SO_Compile.sh && \\\n\n cd /tmp/libmediainfo/ZenLib/Project/GNU/Library && \\\n        make -j $(getconf _NPROCESSORS_ONLN) && \\\n        make install && \\\n\n cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library && \\\n        make -j $(getconf _NPROCESSORS_ONLN) && \\\n        make install && \\\n\n cd /tmp/mediainfo && ./CLI_Compile.sh && \\\n cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI && \\\n        make -j $(getconf _NPROCESSORS_ONLN) && \\\n        make install && \\\n  cd /tmp/xmlrpc-c && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j ${NB_CORES} && \\\n  make install && \\\n  cd /tmp/libtorrent && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j ${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} && \\\n  make install && \\\n  cd /tmp/rtorrent && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-xmlrpc-c && \\\n  make -j ${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} && \\\n  make install && \\\n# cleanup\n apk del --purge build-deps && rm -rf /tmp/* && rm /tmp/libmediainfo.tar.gz\n\n# add local files\nCOPY rootfs/ /\n\n# ports and volumes\n\nEXPOSE 49123 5000\nVOLUME [\"/config\", \"/data\", \"/logs\"]\n"
}