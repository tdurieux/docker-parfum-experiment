{
  "startTime": 1674234801996,
  "endTime": 1674234802091,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Compile DotNetAnywhere's corlib and the wheel part to CIL (.dll)\nFROM mono:5.14 AS wheel-part-csharp-mono\n\nWORKDIR /work\n\nCOPY src/langs/csharp .\n\nRUN curl -f -SL https://github.com/boyanio/DotNetAnywhere/archive/master.tar.gz | tar xz && \\\n    mkdir ../output && \\\n    mcs -target:library -out:../output/wheel-part-csharp.dll wheel-part.cs && \\\n    msbuild /t:Restore ./DotNetAnywhere-master/corlib/corlib.csproj && \\\n    msbuild /p:Configuration=Release ./DotNetAnywhere-master/corlib/corlib.csproj && \\\n    cp ./DotNetAnywhere-master/corlib/bin/Release/netstandard1.3/corlib.dll ../output && \\\n    rm -rf ./DotNetAnywhere-master\n\n# Compile DotNetAnywhere to WebAssembly\nFROM trzeci/emscripten:sdk-tag-1.38.25-64bit AS wheel-part-csharp-wasm\n\nWORKDIR /work\n\nCOPY src/langs/csharp .\n\nRUN curl -f -SL https://github.com/boyanio/DotNetAnywhere/archive/master.tar.gz | tar xz && \\\n    chmod +x ./DotNetAnywhere-master/native/build.sh && \\\n    ./DotNetAnywhere-master/native/build.sh && \\\n    mkdir ../output && \\\n    mv ./DotNetAnywhere-master/build/dna.* ../output && \\\n    rm -rf ./DotNetAnywhere-master\n\n\nFROM alpine:latest AS wheel-part-csharp\n\nWORKDIR /output\n\nCOPY --from=wheel-part-csharp-mono output .\nCOPY --from=wheel-part-csharp-wasm output ."
}