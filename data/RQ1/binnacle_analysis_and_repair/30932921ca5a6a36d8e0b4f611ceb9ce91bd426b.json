{
  "startTime": 1674242967223,
  "endTime": 1674242968678,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 2,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 263,
        "lineEnd": 263,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 318,
        "lineEnd": 318,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 357,
        "lineEnd": 357,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 362,
        "lineEnd": 362,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 408,
        "lineEnd": 408,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 422,
        "lineEnd": 422,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 219,
        "lineEnd": 219,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL maintainer Netlify\n\n################################################################################\n#\n# Dependencies\n#\n################################################################################\n\nENV LANGUAGE en_US:en\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV PANDOC_VERSION 2.4\n\n# language export needed for ondrej/php PPA https://github.com/oerdnj/deb.sury.org/issues/56\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get -y update && \\\n    apt-get install -y --no-install-recommends software-properties-common language-pack-en-base apt-transport-https gnupg-curl && \\\n    echo 'Acquire::Languages {\"none\";};' > /etc/apt/apt.conf.d/60language && \\\n    echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale && \\\n    echo 'LANGUAGE=\"en_US:en\"' >> /etc/default/locale && \\\n    locale-gen en_US.UTF-8 && \\\n    update-locale en_US.UTF-8 && \\\n    apt-key adv --fetch-keys https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc && \\\n    apt-key adv --fetch-keys https://packagecloud.io/github/git-lfs/gpgkey && \\\n    apt-add-repository -y -s 'deb https://packagecloud.io/github/git-lfs/ubuntu/ xenial main' && \\\n    add-apt-repository -y ppa:ondrej/php && \\\n    add-apt-repository -y ppa:openjdk-r/ppa && \\\n    add-apt-repository -y ppa:git-core/ppa && \\\n    add-apt-repository -y ppa:rwky/graphicsmagick && \\\n    add-apt-repository -y ppa:deadsnakes/ppa && \\\n    add-apt-repository -y ppa:kelleyk/emacs && \\\n    apt-add-repository -y 'deb https://packages.erlang-solutions.com/ubuntu xenial contrib' && \\\n    apt-get -y update && \\\n    apt-get install -y --no-install-recommends \\\n        advancecomp \\\n        apache2-utils \\\n        autoconf \\\n        automake \\\n        bison \\\n        build-essential \\\n        bzr \\\n        cmake \\\n        curl \\\n        doxygen \\\n        elixir \\\n        emacs25-nox \\\n        esl-erlang \\\n        expect \\\n        fontconfig \\\n        fontconfig-config \\\n        g++ \\\n        gawk \\\n        git \\\n        git-lfs \\\n        gifsicle \\\n        gobject-introspection \\\n        graphicsmagick \\\n        graphviz \\\n        gtk-doc-tools \\\n        gnupg2 \\\n        imagemagick \\\n        jpegoptim \\\n        jq \\\n        language-pack-ar \\\n        language-pack-ca \\\n        language-pack-cs \\\n        language-pack-da \\\n        language-pack-de \\\n        language-pack-el \\\n        language-pack-es \\\n        language-pack-eu \\\n        language-pack-fi \\\n        language-pack-fr \\\n        language-pack-gl \\\n        language-pack-he \\\n        language-pack-hi \\\n        language-pack-it \\\n        language-pack-ja \\\n        language-pack-ka \\\n        language-pack-ko \\\n        language-pack-nn \\\n        language-pack-pl \\\n        language-pack-pt \\\n        language-pack-ro \\\n        language-pack-ru \\\n        language-pack-sv \\\n        language-pack-ta \\\n        language-pack-th \\\n        language-pack-tr \\\n        language-pack-uk \\\n        language-pack-vi \\\n        language-pack-zh-hans \\\n        language-pack-zh-hant \\\n        libasound2 \\\n        libcurl3 \\\n        libcurl3-gnutls \\\n        libcurl3-openssl-dev \\\n        libenchant1c2a \\\n        libexif-dev \\\n        libffi-dev \\\n        libfontconfig1 \\\n        libgconf-2-4 \\\n        libgd-dev \\\n        libgdbm-dev \\\n        libgif-dev \\\n        libglib2.0-dev \\\n        libgmp3-dev \\\n        libgtk-3-0 \\\n        libgtk2.0-0 \\\n        libicu-dev \\\n        libimage-exiftool-perl \\\n        libjpeg-progs \\\n        libjpeg-turbo8-dev \\\n        libmagickwand-dev \\\n        libmcrypt-dev \\\n        libncurses5-dev \\\n        libnss3 \\\n        libpng12-dev \\\n        libreadline6-dev \\\n        librsvg2-bin \\\n        libsm6 \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtiff5-dev \\\n        libwebp-dev \\\n        libwebp5 \\\n        libxml2-dev \\\n        libxrender1 \\\n        libxslt-dev \\\n        libxss1 \\\n        libxtst6 \\\n        libyaml-dev \\\n        mercurial \\\n        nasm \\\n        openjdk-8-jdk \\\n        optipng \\\n        php5.6 \\\n        php5.6-xml \\\n        php5.6-mbstring \\\n        php5.6-gd \\\n        php5.6-sqlite3 \\\n        php5.6-curl \\\n        php5.6-zip \\\n        php7.2 \\\n        php7.2-xml \\\n        php7.2-mbstring \\\n        php7.2-gd \\\n        php7.2-sqlite3 \\\n        php7.2-curl \\\n        php7.2-zip \\\n        pngcrush \\\n        python-setuptools \\\n        python \\\n        python-dev \\\n        python3 \\\n        python3-dev \\\n        python3.7 \\\n        python3.7-dev \\\n        rsync \\\n        software-properties-common \\\n        sqlite3 \\\n        ssh \\\n        strace \\\n        swig \\\n        tree \\\n        unzip \\\n        virtualenv \\\n        wget \\\n        xfonts-base \\\n        xfonts-75dpi \\\n        xvfb \\\n        zip \\\n# dotnet core dependencies\n\tlibunwind8-dev \\\n\tlibicu-dev \\\n\tlibcurl3 \\\n\tliblttng-ust0 \\\n\tlibkrb5-3 \\\n        && \\\n    /var/lib/dpkg/info/ca-certificates-java.postinst configure && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    apt-get autoremove -y && \\\n    unset DEBIAN_FRONTEND\n\n\n################################################################################\n#\n# Pandoc\n#\n################################################################################\n\nRUN wget -nv https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.xenial_amd64.deb && \\\n    dpkg -i wkhtmltox_0.12.5-1.xenial_amd64.deb && \\\n    rm wkhtmltox_0.12.5-1.xenial_amd64.deb && \\\n    wkhtmltopdf -V\n\n# install Pandoc (more recent version to what is provided in Ubuntu 14.04)\nRUN wget https://github.com/jgm/pandoc/releases/download/$PANDOC_VERSION/pandoc-$PANDOC_VERSION-1-amd64.deb && \\\n    dpkg -i pandoc-$PANDOC_VERSION-1-amd64.deb && \\\n    rm pandoc-$PANDOC_VERSION-1-amd64.deb && \\\n    pandoc -v\n\n################################################################################\n#\n# Libvips\n#\n################################################################################\n\nWORKDIR /tmp\n\n# this actually builds v8.6.2\nRUN \\\n  curl -f -sLo vips-8.6.2.tar.gz https://github.com/jcupitt/libvips/archive/v8.6.2.tar.gz && \\\n  tar xvf vips-8.6.2.tar.gz && \\\n  cd libvips-8.6.2 && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-debug=no --enable-docs=no --without-python --without-orc --without-fftw --without-gsf $1 && \\\n  make && \\\n  make install && \\\n  ldconfig && rm vips-8.6.2.tar.gz\n\n\nWORKDIR /\n\n################################################################################\n#\n# User\n#\n################################################################################\n\nRUN adduser --system --disabled-password --uid 2500 --quiet buildbot --home /opt/buildhome\n\n################################################################################\n#\n# Ruby\n#\n################################################################################\n\n## TODO: Consider switching to rbenv or asdf-vm\nUSER buildbot\nRUN gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB && \\\n    curl -f -sL https://get.rvm.io | bash -s stable --with-gems=\"bundler\" --autolibs=read-fail\n\nENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Match this set latest Stable releases we can support on https://www.ruby-lang.org/en/downloads/\nRUN /bin/bash -c \"source ~/.rvm/scripts/rvm && \\\n                  rvm install 2.6.2 && rvm use 2.6.2 && gem install bundler && \\\n                  rvm use 2.6.2 --default && rvm cleanup all\"\n\nENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nUSER root\n\n################################################################################\n#\n# Node.js\n#\n################################################################################\n\n\nRUN curl -f -o- -L https://yarnpkg.com/install.sh > /usr/local/bin/yarn-installer.sh\n\n# Install node.js\nUSER buildbot\nRUN git clone https://github.com/creationix/nvm.git ~/.nvm && \\\n    cd ~/.nvm && \\\n    git checkout v0.34.0 && \\\n    cd /\n\nENV ELM_VERSION=0.19.0-bugfix6\nENV YARN_VERSION=1.13.0\n\nRUN /bin/bash -c \". ~/.nvm/nvm.sh && \\\n         nvm install 10 && nvm use 10 && npm install -g sm grunt-cli bower elm@$ELM_VERSION && \\\n             bash /usr/local/bin/yarn-installer.sh --version $YARN_VERSION && \\\n         nvm alias default node && nvm cache clear\"\n\nUSER root\n\n################################################################################\n#\n# Python\n#\n################################################################################\n\nENV PIPENV_RUNTIME 2.7\n\nUSER buildbot\n\nRUN virtualenv -p python2.7 --no-site-packages /opt/buildhome/python2.7 && \\\n    /bin/bash -c 'source /opt/buildhome/python2.7/bin/activate' && \\\n    ln -nfs /opt/buildhome/python2.7 /opt/buildhome/python2.7.11\n\nRUN virtualenv -p python3.5 --no-site-packages /opt/buildhome/python3.5 && \\\n    /bin/bash -c 'source /opt/buildhome/python3.5/bin/activate' && \\\n    ln -nfs /opt/buildhome/python3.5 /opt/buildhome/python3.5.6\n\nRUN virtualenv -p python3.7 --no-site-packages /opt/buildhome/python3.7 && \\\n    /bin/bash -c 'source /opt/buildhome/python3.7/bin/activate' && \\\n    ln -nfs /opt/buildhome/python3.7 /opt/buildhome/python3.7.2\n\nRUN /opt/buildhome/python${PIPENV_RUNTIME}/bin/pip install pipenv\n\nUSER root\n\n\n################################################################################\n#\n# Binrc\n#\n################################################################################\n\nENV BINRC_VERSION 0.2.9\n\nRUN mkdir /opt/binrc && cd /opt/binrc && \\\n    curl -f -sL https://github.com/netlify/binrc/releases/download/v${BINRC_VERSION}/binrc_${BINRC_VERSION}_Linux-64bit.tar.gz | tar zxvf - && \\\n    ln -s /opt/binrc/binrc_${BINRC_VERSION}_linux_amd64/binrc_${BINRC_VERSION}_linux_amd64 /usr/local/bin/binrc\n\n# Create a place for binrc to link/persist installs to the PATH\nUSER buildbot\nRUN mkdir -p /opt/buildhome/.binrc/bin\nENV PATH \"/opt/buildhome/.binrc/bin:$PATH\"\n\nUSER root\n\n################################################################################\n#\n# Hugo\n#\n################################################################################\n\nENV HUGO_VERSION 0.54.0\n\nRUN binrc install gohugoio/hugo ${HUGO_VERSION} -c /opt/buildhome/.binrc | xargs -n 1 -I{} ln -s {} /usr/local/bin/hugo_${HUGO_VERSION} && \\\n    ln -s /usr/local/bin/hugo_${HUGO_VERSION} /usr/local/bin/hugo\n\n################################################################################\n#\n# Zip-it-and-ship-it\n#\n################################################################################\n\nENV ZIP_IT_AND_SHIP_IT_VERSION 0.3.1\n\nRUN binrc install netlify/zip-it-and-ship-it ${ZIP_IT_AND_SHIP_IT_VERSION} -c /opt/buildhome/.binrc | xargs -n 1 -I{} ln -s {} /usr/local/bin/zip-it-and-ship-it_${ZIP_IT_AND_SHIP_IT_VERSION} && \\\n    ln -s /usr/local/bin/zip-it-and-ship-it_${ZIP_IT_AND_SHIP_IT_VERSION} /usr/local/bin/zip-it-and-ship-it\n\n################################################################################\n#\n# Clojure\n#\n################################################################################\n\nRUN mkdir /opt/leiningen && cd /opt/leiningen && \\\n    curl -f -sL https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > lein && \\\n    chmod +x lein && \\\n    ln -s /opt/leiningen/lein /usr/local/bin/lein\n\nRUN mkdir /opt/boot-clj && cd /opt/boot-clj && \\\n    curl -f -sL https://github.com/boot-clj/boot-bin/releases/download/2.5.2/boot.sh > boot && \\\n    chmod +x boot && \\\n    ln -s /opt/boot-clj/boot /usr/local/bin/boot\n\nUSER buildbot\n\nRUN lein\n\nRUN boot -u\n\n################################################################################\n#\n# PHP\n#\n################################################################################\n\nUSER root\n\n# set default to 5.6\nRUN update-alternatives --set php /usr/bin/php5.6 && \\\n    update-alternatives --set phar /usr/bin/phar5.6 && \\\n    update-alternatives --set phar.phar /usr/bin/phar.phar5.6\n\nRUN wget -nv https://raw.githubusercontent.com/composer/getcomposer.org/72bb6f65aa902c76c7ca35514f58cf79a293657d/web/installer -O - | php -- --quiet && \\\n    mv composer.phar /usr/local/bin/composer\n\nUSER buildbot\n\nRUN mkdir -p /opt/buildhome/.php && ln -s /usr/bin/php5.6 /opt/buildhome/.php/php\nENV PATH \"/opt/buildhome/.php:$PATH\"\n\n################################################################################\n#\n# Cask\n#\n################################################################################\nUSER buildbot\nRUN rm -rf /opt/buildhome/.cask && git clone https://github.com/cask/cask.git /opt/buildhome/.cask\nENV PATH \"$PATH:/opt/buildhome/.cask/bin\"\n\n###\n# LZ4 Compression\n###\n\nUSER root\nENV LZ4_VERSION 1.8.0\nRUN curl -f -sL https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz | tar xzvf - && \\\n    cd lz4-${LZ4_VERSION} && \\\n    make && \\\n    make install && \\\n    cd .. && rm -rf lz4-${LZ4_VERSION}\n\n################################################################################\n#\n# Go\n#\n################################################################################\nUSER buildbot\nRUN mkdir -p /opt/buildhome/.gimme/bin/ && \\\n    mkdir -p /opt/buildhome/.gimme/env/ && \\\n    curl -f -sL -o /opt/buildhome/.gimme/bin/gimme https://raw.githubusercontent.com/travis-ci/gimme/master/gimme && \\\n    chmod u+x /opt/buildhome/.gimme/bin/gimme\nENV PATH \"$PATH:/opt/buildhome/.gimme/bin\"\nENV GOPATH \"/opt/buildhome/.gimme_cache/gopath\"\nENV GOCACHE \"/opt/buildhome/.gimme_cache/gocache\"\n# Install the default version\nENV GIMME_GO_VERSION \"1.12\"\nENV GIMME_ENV_PREFIX \"/opt/buildhome/.gimme/env\"\nRUN gimme\n\n################################################################################\n#\n# Wasmer\n#\n################################################################################\nRUN curl https://get.wasmer.io -sSfL | sh\n\n################################################################################\n#\n# Dotnet Core\n#\n################################################################################\nWORKDIR /tmp\nRUN wget https://dot.net/v1/dotnet-install.sh\nRUN chmod u+x /tmp/dotnet-install.sh\nRUN /tmp/dotnet-install.sh -c Current\nENV PATH \"$PATH:/opt/buildhome/.dotnet/tools\"\nENV PATH \"$PATH:/opt/buildhome/.dotnet\"\nENV DOTNET_ROOT \"/opt/buildhome/.dotnet\"\n#populate local package cache\nRUN dotnet new\nWORKDIR /\n\n# Cleanup\nUSER root\n\n# Add buildscript for local testing\nADD run-build-functions.sh /usr/local/bin/run-build-functions.sh\nADD run-build.sh /usr/local/bin/build\nADD buildbot-git-config /root/.gitconfig\nRUN rm -r /tmp/*\n\nUSER buildbot\nARG NF_IMAGE_VERSION\nENV NF_IMAGE_VERSION ${NF_IMAGE_VERSION:-latest}\n\nARG NF_IMAGE_TAG\nENV NF_IMAGE_TAG ${NF_IMAGE_TAG:-latest}\n"
}