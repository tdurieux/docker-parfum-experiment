{
  "startTime": 1674235211742,
  "endTime": 1674235211994,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# From https://github.com/tweekmonster/vim-testbed.\nFROM testbed/vim:13@sha256:51f2ade160a9aef6dcfb2722db408d877362c3e7942ce48c72202b215a2acbc0\n\n# Currently tested versions:\n#  - v7.3.429 (Ubuntu Precise, 12.04LTS)\n#  - v7.4.052 (Ubuntu Trusty, 14.04LTS)\n#  - v7.4.1689 (Ubuntu Xenial, 16.04LTS)\n#  - v8.0.586 (Updated Vim 8, https://vim.sourceforge.io/download.php)\n# TODO: clean up names to make them usable as-is in CircleCI config.\n# Uses fixed-profiling patch with vim81 (https://github.com/vim/vim/pull/2499).\nRUN install_vim -tag v7.3.429 -name vim73 --with-features=huge -build \\\n                -tag v7.4.052 -name vim74-trusty --with-features=huge -build \\\n                -tag v7.4.1689 -name vim74-xenial --with-features=huge -build \\\n                -tag v8.0.0586 -name vim80 -py2 -build \\\n                -tag v8.1.0622 -name vim81 -build \\\n                -tag neovim:v0.1.7 -build \\\n                -tag neovim:v0.3.7 -py3 -build \\\n  && rm -rf /vim-build/**/runtime/tutor\n\nENV NEOMAKE_DOCKERFILE_UPDATE=2019-06-02\n\n# Git master in a separate layer, since the above is meant to be stable.\nRUN install_vim -tag master -build \\\n                -tag neovim:master -build \\\n  && rm -rf /vim-build/**/runtime/tutor\n\n# Install tools for running tests (busybox's grep does not have --line-number).\n# openssh for CircleCI to improve Git checkout.\nRUN apk --no-cache add bash curl grep make openssh-client\n\n# Codeclimate reporter.\nRUN curl -f -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /usr/local/bin/cc-test-reporter \\\n  && chmod +x /usr/local/bin/cc-test-reporter\n\n# Install dep plugins (test runner and those used during tests).\n# Keeps git and installs ssh for CircleCI's checkout (and diffing for changed\n# files).  grep for checks.\nENV NEOMAKE_TESTS_DEP_PLUGINS_DIR=/neomake-deps\nENV VIMHELPLINT_DIR=$NEOMAKE_TESTS_DEP_PLUGINS_DIR/vim-vimhelplint\nRUN mkdir $NEOMAKE_TESTS_DEP_PLUGINS_DIR\nRUN apk --no-cache add git \\\n  && git clone -q --depth=1 -b display-source-with-exceptions https://github.com/blueyed/vader.vim $NEOMAKE_TESTS_DEP_PLUGINS_DIR/vader \\\n  && git clone -q --depth=1 https://github.com/tpope/vim-fugitive $NEOMAKE_TESTS_DEP_PLUGINS_DIR/vim-fugitive \\\n  && git clone -q --depth=1 https://github.com/machakann/vim-vimhelplint $NEOMAKE_TESTS_DEP_PLUGINS_DIR/vim-vimhelplint \\\n  && git clone -q --depth=1 -b fixes https://github.com/blueyed/vim-vimlint /tools/vim-vimlint \\\n  && git -C /tools/vim-vimlint reset --hard dd5d9961b2fda173b3501495fdacaf533a1798f2 \\\n  && git clone -q --depth=1 https://github.com/ynkdir/vim-vimlparser /tools/vim-vimlparser\nRUN test -f /vim-build/bin/vim81 && ln -s /vim-build/bin/vim81 /usr/local/bin/vim\nRUN printf '#!/bin/sh -x\\n/tools/vim-vimlint/bin/vimlint.sh -l /tools/vim-vimlint -p /tools/vim-vimlparser \"$@\"\\n' > /usr/local/bin/vimlint\nRUN chmod +x /usr/local/bin/vimlint\n\n# Install covimerage and vint.\nRUN apk --no-cache add python3 \\\n  && pip3 install --no-cache-dir -U pip \\\n  && pip3 install --no-cache-dir python-coveralls covimerage==0.1.5 vim-vint==0.3.21 \\\n  && rm -rf /usr/include /usr/lib/python*/turtle* /usr/lib/python*/tkinter \\\n  && pip3 uninstall --yes pip \\\n  && curl -f https://codecov.io/bash -o /usr/bin/codecov \\\n  && chmod +x /usr/bin/codecov \\\n  && cd /usr/bin && ln -s python3 python\n\nRUN adduser -D -s /bin/bash neomake\nUSER neomake\n"
}