{
  "startTime": 1674244878271,
  "endTime": 1674244878911,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bitnami/minideb:stretch\n\nENV PHP_VERSIONS=\"php5.6 php7.0 php7.1 php7.2 php7.3\"\nENV PHP_DEFAULT_VERSION=\"7.2\"\nENV PHP_INI=/etc/php/$PHP_DEFAULT_VERSION/fpm/php.ini\n\nENV DRUSH_VERSION=8.2.3\nENV DRUSH_LAUNCHER_VERSION=0.6.0\nENV DRUSH_LAUNCHER_FALLBACK=/usr/local/bin/drush8\nENV WP_CLI_VERSION=2.1.0\nENV MAILHOG_VERSION=1.0.0\nENV BACKDROP_DRUSH_VERSION=0.1.0\nENV MKCERT_VERSION=v1.3.0\n\nENV DEBIAN_FRONTEND noninteractive\nENV TERM xterm\nENV MH_SMTP_BIND_ADDR 127.0.0.1:1025\nENV NGINX_SITE_TEMPLATE /etc/nginx/nginx-site.conf\nENV APACHE_SITE_TEMPLATE /etc/apache2/apache-site.conf\nENV WEBSERVER_DOCROOT /var/www/html\n# For backward compatibility only\nENV NGINX_DOCROOT $WEBSERVER_DOCROOT\nENV PATH \"$PATH:/home/.composer/vendor/bin\"\n\n# composer normally screams about running as root, we don't need that.\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_CACHE_DIR /mnt/ddev-global-cache/composer\n# Windows, especially Win10 Home/Docker toolbox, can take forever on composer build.\nENV COMPOSER_PROCESS_TIMEOUT 2000\n\n# Defines vars in colon-separated notation to be subsituted with values for NGINX_SITE_TEMPLATE on start\n# NGINX_DOCROOT is for backward compatibility only, to break less people.\nENV NGINX_SITE_VARS '$WEBSERVER_DOCROOT,$NGINX_DOCROOT'\nENV APACHE_SITE_VARS '$WEBSERVER_DOCROOT'\n\nRUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime && dpkg-reconfigure --frontend noninteractive tzdata\n\nRUN apt-get -qq update && \\\n    apt-get -qq install --no-install-recommends --no-install-suggests -y \\\n        procps \\\n        curl \\\n        ca-certificates \\\n        apt-transport-https \\\n        wget \\\n        fontconfig \\\n        bzip2 \\\n        ghostscript \\\n        gnupg \\\n        locales-all && \\\n    wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \\\n    echo \"deb https://packages.sury.org/php/ stretch main\" > /etc/apt/sources.list.d/php.list && \\\n    wget -q -O - https://packages.blackfire.io/gpg.key | apt-key add - && \\\n    echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list && \\\n    wget -q -O /tmp/nginx_signing.key https://nginx.org/keys/nginx_signing.key && \\\n    apt-key add /tmp/nginx_signing.key && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    echo \"deb http://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list && \\\n    curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n    apt-get -qq update && \\\n    apt-get -qq install --no-install-recommends --no-install-suggests -y \\\n        less \\\n        git \\\n        mysql-client \\\n        nginx \\\n        apache2 \\\n        nodejs \\\n        libcap2-bin \\\n        supervisor \\\n        sudo \\\n        imagemagick \\\n        iputils-ping \\\n        patch \\\n        telnet \\\n        netcat \\\n        iproute2 \\\n        vim \\\n        nano \\\n        gettext \\\n        ncurses-bin \\\n        yarn \\\n        zip \\\n        unzip \\\n        rsync \\\n        locales-all \\\n        libpcre3 \\\n        openssh-client \\\n        php-imagick \\\n        php-uploadprogress && \\\n    for v in $PHP_VERSIONS; do apt-get -qq install --no-install-recommends --no-install-suggests -y $v-apcu $v-bcmath $v-bz2 $v-curl $v-cgi $v-cli $v-common $v-fpm $v-gd $v-intl $v-json $v-mysql $v-pgsql $v-mbstring $v-memcached $v-opcache $v-redis $v-soap $v-sqlite3 $v-readline $v-xdebug $v-xml $v-xmlrpc $v-zip libapache2-mod-$v ; done && \\\n    for v in php5.6 php7.0 php7.1; do apt-get -qq install --no-install-recommends --no-install-suggests -y $v-mcrypt; done && \\\n    apt-get install --no-install-recommends blackfire-php -y --allow-unauthenticated && \\\n    apt-get -qq autoremove -y && \\\n    apt-get -qq clean -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Arbitrary user needs to be able to bind to privileged ports (for nginx and apache2)\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/nginx\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/apache2\n\nADD files /\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN composer global require hirak/prestissimo\nRUN curl -f -sSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/local/bin/drush8 && chmod +x /usr/local/bin/drush8\nRUN curl -f -sSL \"https://github.com/drush-ops/drush-launcher/releases/download/${DRUSH_LAUNCHER_VERSION}/drush.phar\" -o /usr/local/bin/drush && chmod +x /usr/local/bin/drush\nRUN curl -f -sSL \"https://github.com/mailhog/MailHog/releases/download/v${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog\nRUN curl -f -sSL \"https://github.com/wp-cli/wp-cli/releases/download/v${WP_CLI_VERSION}/wp-cli-${WP_CLI_VERSION}.phar\" -o /usr/local/bin/wp-cli\n\nRUN curl -f -sSL \"https://drupalconsole.com/installer\" -L -o /usr/local/bin/drupal && chmod +x /usr/local/bin/drupal\n\n\nRUN curl -f -sSL https://github.com/backdrop-contrib/drush/releases/download/${BACKDROP_DRUSH_VERSION}/drush.zip -o /tmp/backdrop_drush.zip && unzip /tmp/backdrop_drush.zip -d /var/tmp/backdrop_drush_commands\n\nRUN mkdir -p /etc/nginx/sites-enabled /var/log/apache2 /var/run/apache2 /var/lib/apache2/module/enabled_by_admin /var/lib/apache2/module/disabled_by_admin && \\\n    touch /var/log/php-fpm.log && \\\n    chmod ugo+rw /var/log/php-fpm.log && \\\n    chmod ugo+rwx /var/run && \\\n    touch /var/log/nginx/access.log && \\\n    touch /var/log/nginx/error.log && \\\n    chmod -R ugo+rw /var/log/nginx/ && \\\n    chmod ugo+rx /usr/local/bin/* && \\\n    update-alternatives --set php /usr/bin/php${PHP_DEFAULT_VERSION} && \\\n    ln -s /usr/sbin/php-fpm${PHP_DEFAULT_VERSION} /usr/sbin/php-fpm\n\nRUN chmod -R 777 /var/log\n\n# All users will have their home directory in /home, make it fully writeable\nRUN mkdir -p /home/.composer /home/.drush/commands /home/.drush/aliases /mnt/ddev-global-cache/mkcert && chmod -R ugo+rw /home /mnt/ddev-global-cache/\n\nRUN chmod -R ugo+w /usr/sbin /usr/bin /etc/nginx /var/cache/nginx /run /var/www /etc/php/*/*/conf.d/ /var/lib/php/modules /etc/alternatives /usr/lib/node_modules /etc/php /etc/apache2 /var/log/apache2/ /var/run/apache2 /var/lib/apache2 /mnt/ddev-global-cache/*\n\nRUN curl -f -sSL https://github.com/FiloSottile/mkcert/releases/download/$MKCERT_VERSION/mkcert-$MKCERT_VERSION-linux-amd64 -o /usr/local/bin/mkcert && chmod +x /usr/local/bin/mkcert && mkdir -p /home/.local/share && ln -s /mnt/ddev-global-cache/mkcert /home/.local/share/mkcert && mkcert -install\n\n# Except that .my.cnf can't be writeable or mysql won't use it.\nRUN chmod 444 /home/.my.cnf\n\nRUN touch /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log && \\\n  chmod 666 /var/log/nginx/error.log /var/log/nginx/access.log /var/log/php-fpm.log\n\nRUN for v in $PHP_VERSIONS; do a2dismod $v; done\nRUN a2dismod mpm_event\nRUN a2enmod ssl\n\n# ssh is very particular about permissions in ~/.ssh\nRUN chmod -R go-w /home/.ssh\n\n# scripts added last because they're most likely place to make changes, speeds up build\nADD scripts /\nRUN chmod ugo+x /start.sh /healthcheck.sh\n\n\nEXPOSE 80 8025\nHEALTHCHECK --interval=3s --retries=6 CMD [\"/healthcheck.sh\"]\n\nCMD [\"/start.sh\"]\n"
}