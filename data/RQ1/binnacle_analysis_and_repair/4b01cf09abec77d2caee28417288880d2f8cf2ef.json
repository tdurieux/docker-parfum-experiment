{
  "startTime": 1674252583588,
  "endTime": 1674252583812,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 0,
        "columnEnd": 12
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 0,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 160
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nENV PYCHAT_CONFIG=docker_all \\\n    DB_DATA_PATH=/var/lib/mysql \\\n    DB_ROOT_PASS=pypass_root \\\n    DB_USER=pychat \\\n    DB_PASS=pypass \\\n    MAX_ALLOWED_PACKET=200\n\nWORKDIR /srv/http\nRUN set -x  &&\\\nadduser -D -g '' http &&\\\napk update && \\\n apk add --no-cache redis yarn nodejs python3 python3-dev openrc mariadb-dev mariadb-client mariadb build-base curl nginx sassc linux-headers pcre-dev sassc bash libffi-dev && \\\n pip3 install --no-cache-dir mysqlclient && \\\n pip3 install --no-cache-dir uwsgi && \\\n# https://github.com/gliderlabs/docker-alpine/issues/297#issuecomment-368695866 libffi-dev\n# command below deletes gcc and libff-dev so just leave it as it is\n#apk del mariadb-dev python3-dev build-base linux-headers &&\\\n#apk add mariadb-client-libs &&\\\nln -s `which python3` \"$(dirname `which python3`)/python\" && \\\nsed -i 's/^\\(tty\\d\\:\\:\\)/#\\1/g' /etc/inittab && \\\nsed -i \\\n    -e 's/#rc_sys=\".*\"/rc_sys=\"docker\"/g' \\\n    -e 's/#rc_env_allow=\".*\"/rc_env_allow=\"\\*\"/g' \\\n    -e 's/#rc_crashed_stop=.*/rc_crashed_stop=NO/g' \\\n    -e 's/#rc_crashed_start=.*/rc_crashed_start=YES/g' \\\n    -e 's/#rc_provide=\".*\"/rc_provide=\"loopback net\"/g' \\\n    /etc/rc.conf && \\\nrm -f /etc/init.d/hwdrivers \\\n    /etc/init.d/hwclock \\\n    /etc/init.d/hwdrivers \\\n    /etc/init.d/modules \\\n    /etc/init.d/modules-load \\\n    /etc/init.d/modloop && \\\nsed -i 's/cgroup_add_service /# cgroup_add_service /g' /lib/rc/sh/openrc-run.sh && \\\nsed -i 's/VSERVER/DOCKER/Ig' /lib/rc/sh/init.sh && \\\nsed -i \"s|max_allowed_packet\\s*=\\s*1M|max_allowed_packet = ${MAX_ALLOWED_PACKET}|g\" /etc/mysql/my.cnf && \\\nsed -i \"s|max_allowed_packet\\s*=\\s*16M|max_allowed_packet = ${MAX_ALLOWED_PACKET}|g\" /etc/mysql/my.cnf && \\\nsed -i 's|eerror \"Datadir \\x27\\$required_dirs\\x27 is empty or invalid\\.\"|bash /srv/http/download_content.sh create_db|g' /etc/init.d/mariadb && \\\nsed -i '/eerror \"Run \\x27\\/etc\\/init.d\\/mariadb setup\\x27 to create new database.\"/d' /etc/init.d/mariadb && \\\nmkdir ./log\n\nCOPY ./requirements.txt ./\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY ./manage.py ./config.json ./DefaultSmilies.cfpack ./docker-all/chat-uwsgi.ini ./download_content.sh ./\nCOPY ./chat ./chat/\nCOPY ./fe/src ./fe/src\nCOPY ./fe/package.json  ./fe/tsconfig.json  ./fe/webpack.config.js  ./fe/yarn.lock ./fe/\nCOPY ./docker-all/uwsgi ./docker-all/tornado /etc/init.d/\nCOPY ./templates  ./templates\nCOPY ./docker-all/nginx.conf /etc/nginx\nCOPY ./log/concat_logs.py ./log/\n\nRUN chmod a+x /etc/init.d/tornado &&\\\nchmod a+x /etc/init.d/uwsgi &&\\\nrc-update add mariadb default &&\\\nrc-update add nginx default &&\\\nrc-update add uwsgi default &&\\\nrc-update add tornado default &&\\\nrc-update add redis default &&\\\ncp ./chat/settings_example.py ./chat/settings.py &&\\\nbash download_content.sh generate_secret_key &&\\\nbash download_content.sh all &&\\\nchown -R http:http /srv/http/ &&\\\nrm ./chat/settings.py && \\\ncd ./fe && \\\nyarn install && yarn cache clean;\n\nEXPOSE 443\nCMD [\"/sbin/init\"]\n\n\n\n"
}