{
  "startTime": 1674241662412,
  "endTime": 1674241662531,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Chris Cannam <cannam@all-day-breakfast.com>\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    build-essential \\\n    libbz2-dev \\\n    libfftw3-dev \\\n    libfishsound1-dev \\\n    libid3tag0-dev \\\n    liblo-dev \\\n    liblrdf0-dev \\\n    libmad0-dev \\\n    liboggz2-dev \\\n    libpulse-dev \\\n    libsamplerate-dev \\\n    libsndfile-dev \\\n    libsord-dev \\\n    libxml2-utils \\\n    portaudio19-dev \\\n    qt5-default libqt5svg5-dev \\\n    raptor-utils \\\n    librubberband-dev \\\n    git \\\n    mercurial \\\n    curl wget \\\n    autoconf automake libtool lintian && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8 \nENV LANGUAGE en_US:en \nENV LC_ALL en_US.UTF-8\nRUN git clone https://github.com/sandstorm-io/capnproto\nWORKDIR capnproto/c++\nRUN ./setup-autotools.sh && autoreconf -i\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared\nRUN make && make install\nWORKDIR ../..\nRUN hg clone -rsv_v3.0 https://code.soundsoftware.ac.uk/hg/sonic-visualiser\nWORKDIR sonic-visualiser\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j3\nRUN deploy/linux/deploy-deb.sh 3.0 amd64\nRUN tar cvf output.tar *.deb && cp output.tar ..\n"
}