{
  "startTime": 1674245872667,
  "endTime": 1674245873102,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile will build an image that can run a full android emulator + the visual emulator over VNC.\n# This is maintained and intended to be run in AWS Docker instances with ECS support.\n# Based on the work by https://github.com/ConSol/docker-headless-vnc-container\n\nFROM ubuntu:14.04\n\nMAINTAINER Craig Williams \"craig@ip80.com\"\nENV REFRESHED_AT 2015-12-02\n\nENV JAVA_VERSION 8u65\nENV JAVA_HOME /usr/lib/jvm/java-$JAVA_VERSION\n\nENV DEBIAN_FRONTEND noninteractive\nENV DISPLAY :1\nENV NO_VNC_HOME /root/noVNC\nENV VNC_COL_DEPTH 24\nENV VNC_RESOLUTION 1280x1024\nENV VNC_PW vncpassword\n\nENV SAKULI_DOWNLOAD_URL https://labs.consol.de/sakuli/install\n\nRUN set -x \\\n && : \\\n && : add linux-mint dependicies and update packages \\\n && apt-key adv --recv-key --keyserver keyserver.ubuntu.com \"3EE67F3D0FF405B2\" \\\n && echo \"deb http://packages.linuxmint.com/ rafaela main upstream import\" >> /etc/apt/sources.list.d/mint.list \\\n && echo \"deb http://extra.linuxmint.com/ rafaela main \" >> /etc/apt/sources.list.d/mint.list \\\n && : \\\n && : xvnc / xfce installation \\\n && apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends -y \\\n\tfirefox \\\n\tsupervisor \\\n\tunzip \\\n\tvim \\\n\tvnc4server \\\n\twget \\\n\txfce4 \\\n && mkdir -p $NO_VNC_HOME/utils/websockify \\\n && wget -qO- https://github.com/kanaka/noVNC/archive/master.tar.gz | tar xz --strip 1 -C $NO_VNC_HOME \\\n && wget -qO- https://github.com/kanaka/websockify/archive/v0.7.0.tar.gz | tar xz --strip 1 -C $NO_VNC_HOME/utils/websockify \\\n && chmod +x -v /root/noVNC/utils/*.sh \\\n && : \\\n && : Add Oracle JAVA JRE8 \\\n && mkdir -p $JAVA_HOME \\\n && wget -qO- $SAKULI_DOWNLOAD_URL/3rd-party/java/jre-$JAVA_VERSION-linux-x64.tar.gz | tar xz --strip 1 -C $JAVA_HOME \\\n && update-alternatives --install \"/usr/bin/java\" \"java\" \"$JAVA_HOME/bin/java\" 1 \\\n && update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"$JAVA_HOME/bin/javaws\" 1 \\\n && update-alternatives --install \"/usr/lib/firefox/browser/plugins/mozilla-javaplugin.so\" \"mozilla-javaplugin.so\" \"$JAVA_HOME/lib/amd64/libnpjp2.so\" 1 \\\n && : \\\n && : Install chrome browser \\\n && apt-get install --no-install-recommends -y \\\n\tchromium-browser \\\n\tchromium-browser-l10n \\\n\tchromium-codecs-ffmpeg \\\n && ln -s /usr/bin/chromium-browser /usr/bin/google-chrome \\\n && echo \"alias chromium-browser='/usr/bin/chromium-browser --user-data-dir'\" >> /root/.bashrc \\\n && : \\\n && : Setup specifics for android support - glx drivers etc. \\\n && apt-get install --no-install-recommends -y \\\n\tgit \\\n\tlib32gcc1 \\\n\tlib32ncurses5 \\\n\tlib32stdc++6 \\\n\tlib32z1 \\\n\tlibc6-i386 \\\n\tlibgl1-mesa-dev \\\n\tnano \\\n && apt-get clean \\\n && : \\\n && : Install Android SDK \\\n && wget -qO- https://dl.google.com/android/android-sdk_r23.0.2-linux.tgz | tar xz -C /root/ --no-same-permissions \\\n && chmod -R a+rX /root/android-sdk-linux \\\n && : \\\n && : Install Android tools \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter tools --no-ui --force -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter platform-tools --no-ui --force -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter platform --no-ui --force -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter build-tools-21.0.1 --no-ui -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter sys-img-x86-android-18 --no-ui -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter sys-img-x86-android-19 --no-ui -a \\\n && echo y | /root/android-sdk-linux/tools/android update sdk --filter sys-img-x86-android-21 --no-ui -a && rm -rf /var/lib/apt/lists/*;\n\nENV ANDROID_HOME /root/android-sdk-linux\n\n\n# xvnc server porst, if $DISPLAY=:1 port will be 5901\nEXPOSE 5901\n# novnc web port\nEXPOSE 6901\n\nADD .vnc /root/.vnc\nADD .config /root/.config\nADD Desktop /root/Desktop\nADD scripts /root/scripts\nRUN chmod +x /root/.vnc/xstartup /etc/X11/xinit/xinitrc /root/scripts/*.sh /root/Desktop/*.desktop\n\nCMD [\"/root/scripts/vnc_startup.sh\", \"--tail-log\"]\n"
}