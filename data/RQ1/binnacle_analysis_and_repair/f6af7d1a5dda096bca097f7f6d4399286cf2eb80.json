{
  "startTime": 1674242119016,
  "endTime": 1674242119049,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##* FROM maven:3-jdk-8-onbuild-alpine as mvn\nFROM ((docker-dz_spark-onbuild-repository)):((docker-dz_spark-onbuild-tag))((docker-additional-tag)) as BUILD\n\n# https://docs.docker.com/engine/userguide/eng-image/multistage-build/#use-multi-stage-builds\n# https://github.com/Logimethods/docker-eureka\nFROM logimethods/eureka:entrypoint as entrypoint\n\n##- FROM gettyimages/spark:2.2.0-hadoop-2.7\nFROM ${spark_image}:${spark_version}-hadoop-${hadoop_version}\n\n# https://stedolan.github.io/jq/\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  jq netcat-openbsd dnsutils && rm -rf /var/lib/apt/lists/*;\n  # bash iputils-ping curl\n\nCOPY --from=entrypoint eureka_utils.sh /eureka_utils.sh\nCOPY --from=entrypoint entrypoint.sh /entrypoint.sh\n\nCOPY entrypoint_insert.sh /entrypoint_insert.sh\n\nCOPY spark/conf/*.properties ./conf/\n\nCOPY --from=BUILD /usr/src/app/target/*.jar ./add_libs/\n\nEXPOSE 5005 4040\n\nENTRYPOINT [\"/entrypoint.sh\", \"./bin/spark-submit\"]\n"
}