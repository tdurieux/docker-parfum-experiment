{
  "startTime": 1674242990641,
  "endTime": 1674242990820,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Xabier Larrakoetxea <slok69@gmail.com>\n\nENV PYTHONUNBUFFERED 1\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# We need the last version of git for the tsuru auto deploy\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:git-core/ppa -y\n\n# System dependencies\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        nano \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        libpq-dev \\\n        postgresql-client \\\n        git \\\n        curl \\\n        gettext \\\n        libffi-dev \\\n        libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_0.12 | sudo bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n## Python env\nRUN pip3 install --no-cache-dir --upgrade virtualenv\nRUN pip3 install --no-cache-dir --upgrade virtualenvwrapper\n\n\n# Prepare paths\nRUN mkdir -p /app/static\nRUN mkdir -p /app/media\nRUN mkdir -p /app/node_deps\nRUN mkdir /code\n\n# Copy node requirements\nWORKDIR /app/node_deps\nCOPY package.json ./package.json\n\n# Install dependencies\nRUN npm install && npm cache clean --force;\nenv PATH=\"/app/node_deps/node_modules/.bin:$PATH\"\n\n# Create the user/group for the running stuff\nRUN groupadd -g 1000 wiggum\nRUN useradd -m -u 1000 -g 1000 wiggum\n\n# Set permissions\nRUN chown wiggum:wiggum -R /app/\nRUN chown wiggum:wiggum /code\n\n# Default settings\nUSER wiggum\nWORKDIR /code/wiggum\nENV WORKON_HOME=~/.virtualenvs\nENV VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\nRUN echo \"source /usr/local/bin/virtualenvwrapper.sh\" >> $HOME/.bashrc\nRUN echo \"workon wiggum\" >> $HOME/.bashrc\n\n# Copy python requiremetns\nCOPY requirements /tmp/wiggum_requirements\n\n# virtualenv\nRUN /bin/bash -c \"source /usr/local/bin/virtualenvwrapper.sh \\\n    && mkvirtualenv wiggum \\\n    && workon wiggum \\\n    && pip install pudb \\\n    && pip install -r /tmp/wiggum_requirements/dev.txt\"\n\n\nCMD [\"run.sh\"]\n"
}