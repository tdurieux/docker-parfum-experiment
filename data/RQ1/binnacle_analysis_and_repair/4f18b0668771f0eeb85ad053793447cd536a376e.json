{
  "startTime": 1674245792480,
  "endTime": 1674245792577,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3-jdk-8-alpine\nWORKDIR /usr/local/src\nCOPY bootstrap bootstrap\nCOPY commons commons\nCOPY core core\nCOPY tests tests\nCOPY pom.xml .\nRUN sed -i \"s/build.time:.*/build.time: $(date +%F_%T)/\" bootstrap/src/main/resources/application.yml\nRUN mvn clean package -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\n\n\nFROM openjdk:8-jre-alpine\n\nRUN apk add --no-cache curl mongodb\n# We only need the MongoDB shell:\nRUN rm /etc/init.d/mongo* /etc/conf.d/mongo* /usr/bin/mongod /usr/bin/mongos /etc/logrotate.d/mongodb /usr/bin/install_compass\n\nCOPY --from=0 /usr/local/src/bootstrap/target/hesperides-*.jar hesperides.jar\nCOPY mongo_create_collections.js /\nCOPY docker_entrypoint.sh /\nRUN chmod u+x /docker_entrypoint.sh\n\nENTRYPOINT [\"/docker_entrypoint.sh\"]\n\nEXPOSE 8080\n\nHEALTHCHECK --interval=5s --timeout=3s --retries=3 CMD curl --fail http://localhost:8080/rest/manage/health || exit 1\n\n# -XX:+ExitOnOutOfMemoryError // an OutOfMemoryError will often leave the JVM in an inconsistent state. Terminating the JVM will allow it to be restarted by an external process manager\n# -XX:+HeapDumpOnOutOfMemoryError // get a heap dump when the app crashes\nCMD [\"/usr/bin/java\", \\\n     \"-XX:+ExitOnOutOfMemoryError\", \"-XX:+HeapDumpOnOutOfMemoryError\", \\\n     \"-Xms2g\", \"-Xmx4g\", \\\n     \"-jar\", \"/hesperides.jar\" \\\n]\n"
}