{
  "startTime": 1674239231870,
  "endTime": 1674239232087,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-slim\n\nLABEL maintainer=\"support@apify.com\" Description=\"Base image for Apify actors using headless Chrome\"\n\n# This image is based on https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker\n\n# See https://crbug.com/795759\n#RUN apt-get update \\\n# && apt-get install -yq libgconf-2-4\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer installs, work.\n# Also installs Chrome (latest) and ChromeDriver for Selenium (see https://sites.google.com/a/chromium.org/chromedriver/)\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget --no-install-recommends \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y procps unzip git google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n    --no-install-recommends \\\n && curl -f -sS https://chromedriver.storage.googleapis.com/2.46/chromedriver_linux64.zip > /tmp.zip \\\n && unzip tmp.zip \\\n && rm tmp.zip \\\n && mv /chromedriver /bin \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /src/*.deb \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge --auto-remove -y curl unzip \\\n && rm -rf /opt/yarn /usr/local/bin/yarn /usr/local/bin/yarnpkg\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r myuser && useradd -r -g myuser -G audio,video myuser \\\n    && mkdir -p /home/myuser/Downloads \\\n    && chown -R myuser:myuser /home/myuser\n\n# Run everything after as non-privileged user.\nUSER myuser\nWORKDIR /home/myuser\n\n# Copy source code\nCOPY --chown=myuser:myuser package.json main.js start_actor.sh /home/myuser/\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome'})\n# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\n# Sets path to Chrome executable, this is used by Apify.launchPuppeteer()\nENV APIFY_CHROME_EXECUTABLE_PATH=/usr/bin/google-chrome\n\n# Tell Node.js this is a production environemnt\nENV NODE_ENV=production\n\n# Enable Node.js process to use a lot of memory\nENV NODE_OPTIONS=\"--max_old_space_size=16000\"\n\n# Install default dependencies, print versions of everything\nRUN npm --quiet set progress=false \\\n && npm install --only=prod --no-optional --no-package-lock \\\n && echo \"Installed NPM packages:\" \\\n && npm list || true \\\n && echo \"Node.js version:\" \\\n && node --version \\\n && echo \"NPM version:\" \\\n && npm --version \\\n && echo \"Google Chrome version:\" \\\n && bash -c \"$APIFY_CHROME_EXECUTABLE_PATH --version\" \\\n && echo \"ChromeDriver version:\" \\\n && chromedriver --version && npm cache clean --force;\n\n# NOTEs:\n# - This needs to be compatible with CLI.\n# - Using CMD instead of ENTRYPOINT, to allow manual overriding\nCMD ./start_actor.sh\n"
}