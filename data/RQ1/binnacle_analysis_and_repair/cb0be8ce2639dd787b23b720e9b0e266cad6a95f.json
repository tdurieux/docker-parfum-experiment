{
  "startTime": 1674248569368,
  "endTime": 1674248569537,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 45,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 195,
        "columnEnd": 273
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile creates a docker image suitable to run biboumiâ€™s build and\n# tests.  For example, it can be used on with gitlab-ci.\n\nFROM docker.io/fedora:latest\n\nENV LC_ALL C.UTF-8\n\nRUN dnf --refresh install -y\\\n    gcc-c++\\\n    clang\\\n    valgrind\\\n    udns-devel\\\n    c-ares-devel\\\n    sqlite-devel\\\n    libuuid-devel\\\n    libgcrypt-devel\\\n    cmake\\\n    make\\\n    expat-devel\\\n    libidn-devel\\\n    uuid-devel\\\n    systemd-devel\\\n    pandoc\\\n    libasan\\\n    libubsan\\\n    git\\\n    fedora-packager\\\n    python3-lxml\\\n    lcov\\\n    rpmdevtools\\\n    python3-devel\\\n    automake\\\n    autoconf\\\n    flex\\\n    flex-devel\\\n    bison\\\n    libtool-ltdl-devel\\\n    libtool\\\n    openssl-devel\\\n    which\\\n    java-1.8.0-openjdk\\\n    postgresql-devel\\\n    botan2-devel\\\n    && dnf clean all\n\n# Install slixmpp, for e2e tests\nRUN git clone git://git.louiz.org/slixmpp && pip3 install --no-cache-dir pyasn1 && cd slixmpp && python3 setup.py build && python3 setup.py install\n\nRUN useradd tester\n\n# Install charybdis, for e2e tests\nRUN git clone https://github.com/charybdis-ircd/charybdis.git && cd charybdis && cd /charybdis && git checkout 4f2b9a4 && sed s/113/1113/ -i /charybdis/authd/providers/ident.c && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/tester/ircd --bindir=/usr/bin --with-included-boost && make -j8 && make install && rm -rf /charybdis\n\nRUN chown -R tester:tester /home/tester/ircd\n\nUSER tester\n\nRUN yes \"\" | openssl req -nodes -x509 -newkey rsa:4096 -keyout /home/tester/ircd/etc/ssl.key -out /home/tester/ircd/etc/ssl.pem\n\nCOPY coverity /home/tester/coverity\n\nWORKDIR /home/tester\n"
}