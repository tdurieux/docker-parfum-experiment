{
  "startTime": 1674238829234,
  "endTime": 1674238829390,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 3,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.9-alpine as build \nARG ALPINE_REPO=http://dl-cdn.alpinelinux.org \nWORKDIR /app \nRUN ver=$(cat /etc/alpine-release | awk -F '.' '{printf \"%s.%s\", $1, $2;}') \\  \n&& repos=/etc/apk/repositories \\  \n&& mv -f ${repos} ${repos}_bk \\  \n&& echo \"${ALPINE_REPO}/alpine/v${ver}/main\" > ${repos} \\  \n&& echo \"${ALPINE_REPO}/alpine/v${ver}/community\" >> ${repos} \\  \n&& apk add --no-cache tzdata \\  \n&& ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\  \n&& echo Asia/Shanghai > /etc/timezone \\  \n&& apk add --no-cache git openssh-client \nCOPY . /app/ \nRUN npm install --only=production \\  \n&& cp -R node_modules prod_node_modules \\  \n&& npm install \\\n&& npm run build && npm cache clean --force;\n\nFROM node:8.9-alpine \nMAINTAINER dishuostecli \"dishuostec@gmail.com\" \nARG ALPINE_REPO=http://dl-cdn.alpinelinux.org \nWORKDIR /app \nUSER root \nRUN ver=$(cat /etc/alpine-release | awk -F '.' '{printf \"%s.%s\", $1, $2;}') \\  \n&& repos=/etc/apk/repositories \\  \n&& mv -f ${repos} ${repos}_bk \\  \n&& echo \"${ALPINE_REPO}/alpine/v${ver}/main\" > ${repos} \\  \n&& echo \"${ALPINE_REPO}/alpine/v${ver}/community\" >> ${repos} \\  \n&& apk add --no-cache tzdata \\  \n&& ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\  \n&& echo Asia/Shanghai > /etc/timezone \nCOPY cron /app/cron/ \nCOPY package.json /app/ \nCOPY \\--from=build /app/lib /app/lib \nCOPY \\--from=build /app/prod_node_modules /app/node_modules \nEXPOSE 3000 \nCMD [\"npm\", \"start\"] \n\n"
}