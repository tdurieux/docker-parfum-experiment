{
  "startTime": 1674242471693,
  "endTime": 1674242471889,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-cli\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n\n# == MySQL extension == #\nRUN docker-php-ext-install -j$(nproc) pdo pdo_mysql \\\n    && docker-php-ext-enable pdo pdo_mysql\n\n\n# == PostgreSQL extension == #\nRUN apt-get install --no-install-recommends -y libpq-dev \\\n    && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n    && docker-php-ext-install pdo pdo_pgsql pgsql \\\n    && docker-php-ext-enable pdo pdo_pgsql pgsql && rm -rf /var/lib/apt/lists/*;\n\n\n# == Microsoft SQL Seriver extension == #\nRUN apt-get -y --no-install-recommends install unixodbc-dev \\\n    && docker-php-ext-install mbstring pdo \\\n    && pecl install sqlsrv pdo_sqlsrv \\\n    && docker-php-ext-enable sqlsrv pdo_sqlsrv && rm -rf /var/lib/apt/lists/*;\n\n\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nRUN php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\nRUN php composer-setup.php --install-dir=bin --filename=composer\nRUN php -r \"unlink('composer-setup.php');\"\n\nRUN mkdir /var/www/anonymizer\nWORKDIR /var/www/anonymizer\nRUN composer require webnet-fr/database-anonymizer:master-dev symfony/console symfony/config symfony/yaml\n"
}