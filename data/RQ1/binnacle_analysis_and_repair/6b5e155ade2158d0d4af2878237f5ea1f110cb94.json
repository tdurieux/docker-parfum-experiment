{
  "startTime": 1674243776822,
  "endTime": 1674243776938,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        dh-make \\\n        devscripts \\\n        equivs \\\n        lintian \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV DEBFULLNAME \"DIGITS Development Team\"\nENV DEBEMAIL \"digits@nvidia.com\"\n\nARG UPSTREAM_VERSION\nARG DEBIAN_VERSION\n\nWORKDIR /build\nCOPY tarball/* .\nRUN tar -xf *.orig.tar.gz && rm *.orig.tar.gz\nWORKDIR /build/digits\nRUN dh_make -y -s -c bsd -d -t `pwd`/packaging/deb/templates \\\n        -f ../*.orig.tar.gz -p digits_${UPSTREAM_VERSION} \\\n    && dch --create --package digits -v $DEBIAN_VERSION \"v${DEBIAN_VERSION}\" \\\n    && dch -r \"\" \\\n    && cp -R packaging/deb/extras/* debian/\nRUN apt-get update \\\n    && echo y | mk-build-deps -i -r debian/control \\\n    && rm -rf /var/lib/apt/lists/*\nRUN debuild --no-lintian -i -uc -us -b \\\n    && debuild --no-lintian -i -uc -us -S -sa \\\n    && lintian ../*.changes\nRUN mkdir -p /dist \\\n    && cp ../* /dist/ || true\n"
}