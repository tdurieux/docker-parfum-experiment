{
  "startTime": 1674234598631,
  "endTime": 1674234598749,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 62,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_TAG=7.0\nARG OS_TAG=7\nARG NPROC=1\nFROM nvidia/cuda:${CUDA_TAG}-devel-centos${OS_TAG}\nLABEL maintainer=\"AliceVision Team alicevision-team@googlegroups.com\"\n\n# use CUDA_TAG to select the image version to use\n# see https://hub.docker.com/r/nvidia/cuda/\n#\n# CUDA_TAG=8.0-devel\n# docker build --build-arg CUDA_TAG=$CUDA_TAG --tag alicevision:$CUDA_TAG .\n#\n# then execute with nvidia docker (https://github.com/nvidia/nvidia-docker/wiki/Installation-(version-2.0))\n# docker run -it --runtime=nvidia alicevision\n\n\n# OS/Version (FILE): cat /etc/issue.net\n# Cuda version (ENV): $CUDA_VERSION\n\n# Install all compilation tools\n# - file and openssl are needed for cmake\nRUN yum -y install \\\n        file \\\n        build-essential \\\n        make \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        libtool \\\n        nasm \\\n        automake \\\n        openssl-devel \\\n        gcc-gfortran && rm -rf /var/cache/yum\n\n# Manually install cmake 3.11\nWORKDIR /opt\nRUN wget https://cmake.org/files/v3.13/cmake-3.13.2.tar.gz && tar zxvf cmake-3.13.2.tar.gz && cd cmake-3.13.2 && ./bootstrap --prefix=/usr/local  -- -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_USE_OPENSSL:BOOL=ON && make -j8 && make install && rm cmake-3.13.2.tar.gz\n\nENV AV_DEV=/opt/AliceVision_git \\\n    AV_BUILD=/tmp/AliceVision_build \\\n    AV_INSTALL=/opt/AliceVision_install \\\n    AV_BUNDLE=/opt/AliceVision_bundle \\\n    PATH=\"${PATH}:${AV_BUNDLE}\"\n\nCOPY . \"${AV_DEV}\"\n\nWORKDIR \"${AV_BUILD}\"\nRUN cmake \"${AV_DEV}\" -DCMAKE_BUILD_TYPE=Release -DALICEVISION_BUILD_DEPENDENCIES:BOOL=ON -DINSTALL_DEPS_BUILD:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${AV_INSTALL}\" -DALICEVISION_BUNDLE_PREFIX=\"${AV_BUNDLE}\"\n\nWORKDIR \"${AV_BUILD}\"\n# RUN make zlib\n# RUN make geogram\n# RUN make tbb\n# RUN make eigen\n# RUN make opengv\n# RUN make lapack\n# RUN make suitesparse\n# RUN make ceres\n# RUN make openexr\n# RUN make tiff\n# RUN make png\n# RUN make turbojpeg\n# RUN make libraw\n# RUN make boost\n# RUN make openimageio\n# RUN make alembic\n# RUN make popsift\n\nRUN make install && make bundle\n# && cd /opt && rm -rf \"${AV_BUILD}\"\n\nWORKDIR \"${AV_BUNDLE}/share/aliceVision\"\nRUN wget https://gitlab.com/alicevision/trainedVocabularyTreeData/raw/master/vlfeat_K80L3.SIFT.tree\n\n"
}