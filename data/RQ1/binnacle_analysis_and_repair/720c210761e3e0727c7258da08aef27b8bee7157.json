{
  "startTime": 1674241420198,
  "endTime": 1674241420372,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 15,
        "columnEnd": 160
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 15,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 81
      }
    }
  ],
  "repairedDockerfile": "# initialize from the image\n\nFROM debian:9\n\nARG TOOLCHAIN_FLAVOR=linux\nENV TOOLCHAIN_FLAVOR=$TOOLCHAIN_FLAVOR\n\n# install build tools and dependencies\n\nARG EMULATOR=0\nENV EMULATOR=$EMULATOR\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential wget git python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# install dependencies from toolchain source build\n\nRUN if [ \"$TOOLCHAIN_FLAVOR\" = \"src\" ]; then \\\n        apt-get install --no-install-recommends -y autoconf autogen bison dejagnu \\\n                           flex flip gawk git gperf gzip nsis \\\n                           openssh-client p7zip-full perl python-dev \\\n                           libisl-dev tcl tofrodos zip \\\n                           texinfo texlive texlive-extra-utils; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# download toolchain\n\nENV TOOLCHAIN_SHORTVER=8-2018q4\nENV TOOLCHAIN_LONGVER=gcc-arm-none-eabi-8-2018-q4-major\nENV TOOLCHAIN_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/$TOOLCHAIN_SHORTVER/$TOOLCHAIN_LONGVER-$TOOLCHAIN_FLAVOR.tar.bz2\nENV TOOLCHAIN_HASH_linux=fb31fbdfe08406ece43eef5df623c0b2deb8b53e405e2c878300f7a1f303ee52\nENV TOOLCHAIN_HASH_src=bc228325dbbfaf643f2ee5d19e01d8b1873fcb9c31781b5e1355d40a68704ce7\n\nRUN if [ \"$EMULATOR\" = 1 ]; then \\\n        apt-get install --no-install-recommends -y libsdl2-dev libsdl2-image-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# extract toolchain\n\nRUN cd /opt && wget $TOOLCHAIN_URL\n\nRUN cd /opt && echo \"$TOOLCHAIN_HASH_linux  $TOOLCHAIN_LONGVER-linux.tar.bz2\\n$TOOLCHAIN_HASH_src  $TOOLCHAIN_LONGVER-src.tar.bz2\" | sha256sum -c --ignore-missing\n\nRUN cd /opt && tar xfj $TOOLCHAIN_LONGVER-$TOOLCHAIN_FLAVOR.tar.bz2 && rm $TOOLCHAIN_LONGVER-$TOOLCHAIN_FLAVOR.tar.bz2\n\n# build toolchain (if required)\n\nRUN if [ \"$TOOLCHAIN_FLAVOR\" = \"src\" ]; then \\\n        pushd /opt/$TOOLCHAIN_LONGVER ; \\\n        ./install-sources.sh --skip_steps=mingw32 ; \\\n        ./build-prerequisites.sh --skip_steps=mingw32 ; \\\n        ./build-toolchain.sh --skip_steps=mingw32,manual ; \\\n        popd ; \\\n    fi\n\n# download protobuf\n\nENV PROTOBUF_VERSION=3.4.0\nENV PROTOBUF_HASH=e4b51de1b75813e62d6ecdde582efa798586e09b5beaebfb866ae7c9eaadace4\nRUN wget \"https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\"\nRUN echo \"${PROTOBUF_HASH}  protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\" | sha256sum -c\n\n# setup toolchain\n\nENV PATH=/opt/$TOOLCHAIN_LONGVER/bin:$PATH\n\nENV PYTHON=python3\nENV LC_ALL=C.UTF-8 LANG=C.UTF-8\n\n# use zipfile module to extract files world-readable\nRUN $PYTHON -m zipfile -e \"protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\" /usr/local && chmod 755 /usr/local/bin/protoc\n\nENV WORKON_HOME=/tmp/.venvs\n\n# install python dependencies\n\nRUN $PYTHON -m pip install pipenv\n"
}