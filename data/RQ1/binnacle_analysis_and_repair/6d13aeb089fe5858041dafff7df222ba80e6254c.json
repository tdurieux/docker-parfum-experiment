{
  "startTime": 1674252174200,
  "endTime": 1674252174640,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# QIS Application server\n#\n# Runs a pre-configured instance of Apache+QIS on Ubuntu 16.04.\n# Requires qis-postgres and qis-memcached containers at runtime.\n#\n# Environment variables:\n#   HOSTNAME - Required - the host name for Apache to listen on\n#   DB_USER - Required - the database username\n#   DB_PASSWORD - Required - the database password\n#\n#   HTTP_PROCESSES - Optional - set the number of mod_wsgi processes for HTTP\n#   HTTP_THREADS - Optional - set the number of mod_wsgi threads per process for HTTP\n#   HTTPS_PROCESSES - Optional - set the number of mod_wsgi processes for HTTPS\n#   HTTPS_THREADS - Optional - set the number of mod_wsgi threads per process for HTTPS\n#\nFROM ubuntu:16.04\n\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS web application server\"\n\n# Base o/s + app layer\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils curl wget pwgen tar zip unzip vim \\\n            locales openssl ldap-utils libmemcached11 python3 \\\n            postgresql-client-9.5 ghostscript \\\n            imagemagick-6.q16 imagemagick-common libmagickwand-6.q16-2 \\\n            apache2 apache2-utils logrotate libapache2-mod-wsgi-py3 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_GB.UTF-8 && update-locale LANG=en_GB.UTF-8 LC_ALL=en_GB.UTF-8\n\n# Build variables\nARG QIS_VERSION=4.1.3\nARG QIS_USER=qis\nARG QIS_INSTALL_DIR=/opt/qis\nARG QIS_SAMPLES_DIR=/opt/qis-samples\nARG WEB_USER=www-data\n\n# Ports\nEXPOSE 80 443\n\n# Runtime environment variables\nENV HOSTNAME=images.example.com \\\n    DB_USER=qis \\\n    DB_PASSWORD=qispass \\\n    QIS_HOME=$QIS_INSTALL_DIR \\\n    QIS_SAMPLES=$QIS_SAMPLES_DIR \\\n    HTTP_USER=$QIS_USER \\\n    HTTP_PROCESSES=2 \\\n    HTTP_THREADS=15 \\\n    HTTPS_PROCESSES=2 \\\n    HTTPS_THREADS=15\n\n# Create the application user\nRUN useradd --comment \"Quru Image Server\" --groups $WEB_USER --home $QIS_INSTALL_DIR --system --shell /sbin/nologin $QIS_USER\n\n# Create the app dirs\nRUN mkdir -p $QIS_INSTALL_DIR $QIS_SAMPLES_DIR\n\n# Install scripts\nCOPY *.sh /\nRUN chmod a+x /*.sh\n\n# Download and install QIS files\nRUN cd /tmp && \\\n    curl -f -L \"https://github.com/quru/qis/archive/v$QIS_VERSION.tar.gz\" -o qis.tar.gz && \\\n    tar -zxvf qis.tar.gz && \\\n    cd qis-$QIS_VERSION && \\\n    rm -rf src/tests src/*.sh src/runserver.py && \\\n    rm -rf deploy/docker/ci-build-* && \\\n    rm -rf doc/v* && \\\n    rm -rf images/test* && \\\n    cp LICENSE README.md $QIS_INSTALL_DIR && \\\n    cp -r conf $QIS_INSTALL_DIR && \\\n    cp -r deploy $QIS_INSTALL_DIR && \\\n    cp -r doc $QIS_INSTALL_DIR && \\\n    cp -r icc $QIS_INSTALL_DIR && \\\n    cp -r images $QIS_INSTALL_DIR && \\\n    cp -r images/* $QIS_SAMPLES_DIR && \\\n    cp -r licences $QIS_INSTALL_DIR && \\\n    cp -r logs $QIS_INSTALL_DIR && \\\n    cp -r src $QIS_INSTALL_DIR && \\\n    cp deploy/ubuntu16/wsgi.conf /etc/apache2/sites-available/qis-wsgi.conf && \\\n    cp deploy/ubuntu16/httpd.conf.sample /etc/apache2/sites-available/001-qis.conf && \\\n    cp deploy/ubuntu16/httpd-ssl.conf.sample /etc/apache2/sites-available/002-qis-ssl.conf && \\\n    cd - && \\\n    rm -rf /tmp/* && \\\n    chown -R $QIS_USER:$QIS_USER $QIS_INSTALL_DIR $QIS_SAMPLES_DIR && rm qis.tar.gz\n\n# Download and install Python libs\nWORKDIR $QIS_INSTALL_DIR\nRUN curl -f -L \"https://github.com/quru/qis/releases/download/v$QIS_VERSION/QIS-libs-ubuntu-16-py35-x86_64.tar.gz\" -o /tmp/qis-libs.tar.gz && \\\n    tar -zxvf /tmp/qis-libs.tar.gz && \\\n    rm /tmp/qis-libs.tar.gz && \\\n    chown -R $QIS_USER:$QIS_USER lib\n\n# Configure Apache\nRUN ln -s /etc/apache2/mods-available/ssl.load /etc/apache2/mods-enabled/ssl.load && \\\n    ln -s /etc/apache2/mods-available/ssl.conf /etc/apache2/mods-enabled/ssl.conf && \\\n    ln -s /etc/apache2/mods-available/socache_shmcb.load /etc/apache2/mods-enabled/socache_shmcb.load && \\\n    ln -s /etc/apache2/mods-available/expires.load /etc/apache2/mods-enabled/expires.load && \\\n    ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load && \\\n    rm /etc/apache2/sites-enabled/000-default.conf && \\\n    ln -s /etc/apache2/sites-available/qis-wsgi.conf /etc/apache2/sites-enabled/qis-wsgi.conf && \\\n    ln -s /etc/apache2/sites-available/001-qis.conf /etc/apache2/sites-enabled/001-qis.conf && \\\n    ln -s /etc/apache2/sites-available/002-qis-ssl.conf /etc/apache2/sites-enabled/002-qis-ssl.conf\n\n# Persistent storage volumes\nVOLUME [\"$QIS_INSTALL_DIR/images\", \"$QIS_INSTALL_DIR/logs\", \"/var/log/apache2\"]\n\n# Run regular health checks\nHEALTHCHECK --interval=30s --timeout=10s --retries=3 \\\n    CMD [\"/check-qis.sh\"]\n\n# Note the \"exec\" form of CMD allows docker stop signals to be sent to our run script\nCMD [\"/run-qis.sh\"]\n"
}