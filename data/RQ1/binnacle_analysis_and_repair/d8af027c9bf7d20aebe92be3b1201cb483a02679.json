{
  "startTime": 1674242656494,
  "endTime": 1674242656609,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n################## Dockerfile for Doxygen version 1.8.15 ##################\n#\n# This Dockerfile builds a basic installation of Doxygen\n#\n# Doxygen is the de facto standard tool for generating documentation from annotated C++ sources, but it also supports other popular programming languages such as C, Objective-C, C#, PHP, Java, Python, IDL.\n# To build this image, from the directory containing this Dockerfile (assuming that the file is named Dockerfile):\n#\n# docker build -t <image_name> .\n#\n# To use Doxygen run below command:\n# docker run --rm -i -t --name <container_name> -v <your_source_code_dir_absolute_path>:/doxygen/<your_project_name> doxygen /bin/bash\n# For ex. docker run --rm -i -t --name <container_name> -v /home/myproject:/doxygen/myproject doxygen /bin/bash\n#\n# After the container running, go to <your_project_name> directory and generate the document for your source code by command:\n# Example:\n#$ cd /doxygen/myproject\n#$ doxygen <configuration file>\n##############################################################################\n\n# Base image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV SOURCE_DIR=/tmp/source\nWORKDIR $SOURCE_DIR\nARG DOXYGEN_VER=Release_1_8_15\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bison \\\n    cmake \\\n    doxygen-gui \\\n    flex \\\n    git \\\n    graphviz \\\n    libc6 \\\n    libclang1-3.* \\\n    libgcc1 \\\n    libstdc++6 \\\n    libxml2-utils \\\n    python \\\n    qt-sdk \\\n && git clone git://github.com/doxygen/doxygen.git \\\n && cd doxygen && git checkout ${DOXYGEN_VER} \\\n  && mkdir build && cd build \\\n && cmake -G \"Unix Makefiles\" -Dbuild_doc=NO -Dbuild_wizard=YES .. \\\n && make && make install \\\n\n# Clean up of unused packages and source directory.\n && apt-get remove -y  \\\n    bison \\\n    cmake \\\n    flex \\\n    git \\\n    python \\\n    qt-sdk \\\n && apt-get autoremove -y \\\n && apt autoremove -y \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /usr/lib/debug/*\n\n# This dockerfile does not have a CMD statement as the image is intended to be\n# used as a base for building an application. If desired it may also be run as\n# a container e.g. as shown in the header comment above.\n\n# End of Dockerfile\n\n"
}