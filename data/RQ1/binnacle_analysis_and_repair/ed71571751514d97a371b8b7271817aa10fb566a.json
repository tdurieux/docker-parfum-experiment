{
  "startTime": 1674245294693,
  "endTime": 1674245295034,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 12,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 12,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 176
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# million12/nginx-php\n#\nFROM million12/nginx:latest\nMAINTAINER Marcin Ryzycki <marcin@m12.io>\n\nENV \\\n  NVM_DIR=/usr/local/nvm \\\n  NODE_VERSION=6.3.0 \\\n  STATUS_PAGE_ALLOWED_IP=127.0.0.1\n\n# Add install scripts needed by the next RUN command\nADD container-files/config/install* /config/\nADD container-files/etc/yum.repos.d/* /etc/yum.repos.d/\n\nRUN \\\n  yum update -y && \\\n  `# Install some basic web-related tools...` \\\n  yum install -y wget patch tar bzip2 unzip openssh-clients MariaDB-client && \\\n\n  `# Install PHP 7.0 from Remi YUM repository...` \\\n  rpm -Uvh http://rpms.remirepo.net/enterprise/remi-release-7.rpm && \\\n\n  yum install -y \\\n    php70-php \\\n    php70-php-bcmath \\\n    php70-php-cli \\\n    php70-php-common \\\n    php70-php-devel \\\n    php70-php-fpm \\\n    php70-php-gd \\\n    php70-php-gmp \\\n    php70-php-intl \\\n    php70-php-json \\\n    php70-php-mbstring \\\n    php70-php-mcrypt \\\n    php70-php-mysqlnd \\\n    php70-php-opcache \\\n    php70-php-pdo \\\n    php70-php-pear \\\n    php70-php-process \\\n    php70-php-pspell \\\n    php70-php-xml \\\n\n    `# Also install the following PECL packages:` \\\n    php70-php-pecl-imagick \\\n    php70-php-pecl-mysql \\\n    php70-php-pecl-uploadprogress \\\n    php70-php-pecl-uuid \\\n    php70-php-pecl-zip \\\n\n    `# Temporary workaround: one dependant package fails to install when building image (and the yum error is: Error unpacking rpm package httpd-2.4.6-40.el7.centos.x86_64)...` \\\n    || true && \\\n\n  `# Set PATH so it includes newest PHP and its aliases...` \\\n  ln -sfF /opt/remi/php70/enable /etc/profile.d/php70-paths.sh && \\\n  `# The above will set PATH when container starts... but not when php is used on container build time.` \\\n  `# Therefore create symlinks in /usr/local/bin for all PHP tools...` \\\n  ln -sfF /opt/remi/php70/root/usr/bin/{pear,pecl,phar,php,php-cgi,php-config,phpize} /usr/local/bin/. && \\\n\n  php --version && \\\n\n  `# Move PHP config files from /etc/opt/remi/php70/* to /etc/* ` \\\n  mv -f /etc/opt/remi/php70/php.ini /etc/php.ini && ln -s /etc/php.ini /etc/opt/remi/php70/php.ini && \\\n  rm -rf /etc/php.d && mv /etc/opt/remi/php70/php.d /etc/. && ln -s /etc/php.d /etc/opt/remi/php70/php.d && \\\n\n  echo 'PHP 7 installed.' && \\\n\n  `# Install libs required to build some gem/npm packages (e.g. PhantomJS requires zlib-devel, libpng-devel)` \\\n  yum install -y ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel && \\\n\n  `# Install common tools needed/useful during Web App development` \\\n  `# Install Ruby 2` \\\n  yum install -y ruby ruby-devel && \\\n  echo 'gem: --no-document' > /etc/gemrc && \\\n  gem update --system && \\\n  gem install bundler && \\\n\n  `# Install/compile other software (Git, NodeJS)` \\\n  source /config/install.sh && \\\n\n  `# Install nvm and NodeJS/npm` \\\n  export PROFILE=/etc/profile.d/nvm.sh && touch $PROFILE && \\\n  curl -f -sSL https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash && \\\n  source $NVM_DIR/nvm.sh && \\\n  nvm install $NODE_VERSION && \\\n  nvm alias default $NODE_VERSION && \\\n  nvm use default && \\\n\n  `# Install common npm packages: grunt, gulp, bower, browser-sync` \\\n  npm install -g gulp grunt-cli bower browser-sync && \\\n\n  `# Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode` \\\n  echo -e \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config && \\\n\n  `# Install Memcached, Redis PECL extensions from the source. Versions available in yum repo have dependency on igbinary which causes PHP seg faults in some PHP apps (e.g. Flow/Neos)...` \\\n  `# Install PHP Memcached ext from the source...` \\\n  yum install -y libmemcached-devel && \\\n  git clone https://github.com/php-memcached-dev/php-memcached.git && cd php-memcached && git checkout php7 && \\\n  phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n  echo \"extension=memcached.so\" > /etc/php.d/50-memcached.ini && \\\n  `# Install PHP Redis ext from the source...` \\\n  git clone https://github.com/phpredis/phpredis.git && cd phpredis && git checkout php7 && \\\n  phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n  echo \"extension=redis.so\" > /etc/php.d/50-redis.ini && \\\n\n  curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\n  chown www /usr/local/bin/composer && composer --version && \\\n\n  `# Clean YUM caches to minimise Docker image size... #` \\\n  yum clean all && rm -rf /tmp/yum* && rm -rf /root/.gem; && rm -rf /var/cache/yum\n\nADD container-files /\n\n# Add NodeJS/npm to PATH (must be separate ENV instruction as we want to use $NVM_DIR)\nENV \\\n  NODE_PATH=$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules \\\n  PATH=$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n"
}