{
  "startTime": 1674239528929,
  "endTime": 1674239529194,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is part of libertine. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux/libertine/master/COPYRIGHT. No part of libertine, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.\n# Copyright Â© 2018 The developers of libertine. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux/libertine/master/COPYRIGHT.\n\n\nFROM alpine:3.8\nMAINTAINER Raphael Cohn <raphael.cohn@stormmq.com>\n\n\n# 1 Baseline environment\n\n\n# 1.1 Arguments\n# rustup-init version: rustup-init 1.14.0 (1e51b07cc 2018-10-04)\nARG rustToolchainVersion=2018-10-30\nARG glibcTag=glibc-2.28\nARG linuxHeadersVersion=4.4.6-r2\n\n\n# 1.2 User settings\n\nUSER 0:0\nENV HOME=/root\nWORKDIR \"$HOME\"\n\n\n# 1.3 Ensure PATH is consistent and contains /usr/local/sbin\n\nRUN /bin/mkdir -m 0755 -p /usr/local/sbin\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n\n# 1.4 Bring apk package manager up-to-date with known repositories\n\nRUN apk update\nRUN apk upgrade\n\n\n# 2 Development environment for Libertine Linux\n\n\n# 2.1 Essential C compiler\n\nRUN apk add --no-cache binutils fortify-headers g++ gcc gmp-dev libc-dev mpc1-dev mpfr-dev\n\n\n# 2.2 Boostrap rustc and cargo; Rust is needed to bootstrap Rust\n\n\n# 2.2.1 Create a glibc dynamic library (this will be heavily polluted by the host environment)\n\nENV glibcInstallPath=/usr/glibc-compat\n\n\n# 2.2.1.1 Download\n\nRUN apk add --no-cache git\nRUN git clone --depth 1 --single-branch --branch \"$glibcTag\" git://sourceware.org/git/glibc.git\nRUN apk del git\n\n\n# 2.2.1.2 Add build dependencies\n\nRUN apk add --no-cache alpine-sdk bison gawk linux-headers\nRUN mkdir /root/linux-headers\nRUN apk fetch --output /root/linux-headers linux-headers\nWORKDIR /root/linux-headers\nRUN tar --extract --file linux-headers-\"${linuxHeadersVersion}\".apk\n\n\n# 2.2.1.3 Compile\n\nWORKDIR /root/glibc\nRUN mkdir build\nWORKDIR /root/glibc/build\n# Yes, it really is called `configparms`.\nRUN echo \"slibdir=${glibcInstallPath}/lib\" >> configparms\nRUN echo \"rtlibdir=${glibcInstallPath}/lib\" >> configparms\nRUN echo \"sbindir=${glibcInstallPath}/bin\" >> configparms\nRUN echo \"rootsbindir=${glibcInstallPath}/bin\" >> configparms\nRUN echo 'build-programs=yes' >> configparms\nRUN ../configure --enable-static-pie --host=\"x86_64-alpine-linux-musl\" --disable-werror --enable-kernel=3.2 --with-headers=/root/linux-headers/usr/include --prefix \"$glibcInstallPath\"\nRUN make\n\n\n# 2.2.1.4 Install\n\nRUN make install\nRUN mkdir -p /usr/glibc-compat/etc\nRUN printf '%s/lib\\n/usr/local/lib\\n/usr/lib\\n/lib\\n' \"${glibcInstallPath}\" >/usr/glibc-compat/etc/ld.so.conf\nRUN printf 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4\\n' \"${glibcInstallPath}\" >/usr/glibc-compat/etc/nsswitch.configure\nRUN mkdir /lib64\nRUN ln -s \"${glibcInstallPath}\"/lib/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2\nRUN mkdir -p \"${glibcInstallPath}\"/lib/locale\n# To use this particular library with gcc, say, if necesary: gcc -L \"${glibcInstallPath}/lib\" -I \"${glibcInstallPath}/include\" -Wl,--rpath=\"${glibcInstallPath}/lib\" -Wl,--dynamic-linker=\"${glibcInstallPath}/lib/ld-linux-x86-64.so.2\"\n\n\n# 2.2.1.5 Remove build dependencies\n\nRUN rm -rf /root/glibc\nRUN apk del alpine-sdk bison gawk linux-headers\n\n\n# 2.2.2 Configure glibc binaries\n\nRUN \"${glibcInstallPath}\"/bin/localedef -i en_US -f UTF-8 en_US.UTF-8\nRUN \"${glibcInstallPath}\"/bin/ldconfig\nENV PATH=\"${glibcInstallPath}\"/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n\n# 2.2.3 Install, patch and run rustup\n\nRUN apk add --no-cache patchelf\nWORKDIR /root\nCOPY root/rustup-init rustup-init\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/lib:/lib rustup-init\nRUN ./rustup-init --verbose -y --no-modify-path --default-toolchain nightly-\"${rustToolchainVersion}\" --default-host x86_64-unknown-linux-gnu\nRUN rm rustup-init\n\n\n# 2.2.4 Patch Rust binaries to use a RPATH which locates glibc\n\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/cargo\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/cargo-clippy\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/cargo-fmt\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rls\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rust-gdb\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rust-lldb\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rustc\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rustdoc\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rustfmt\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.cargo/bin/rustup\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.rustup/toolchains/nightly-\"${rustToolchainVersion}\"-x86_64-unknown-linux-gnu/bin/cargo\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.rustup/toolchains/nightly-\"${rustToolchainVersion}\"-x86_64-unknown-linux-gnu/bin/rustc\nRUN patchelf --set-rpath \"${glibcInstallPath}\"/lib:/usr/local/lib:/usr/lib:/lib /root/.rustup/toolchains/nightly-\"${rustToolchainVersion}\"-x86_64-unknown-linux-gnu/bin/rustdoc\nRUN apk del patchelf\n\n\n# 2.2.5 Integrate Rust binaries.\n\nENV PATH=/root/.cargo/bin:\"$PATH\"\nRUN rustup target add x86_64-unknown-linux-musl\nRUN rustup update\nRUN rustc -Vv\n\n\n# 2.3 Git for Libertine Linux ./libertine progam\n\nRUN apk add --no-cache git\n\n\n# 2.4 Qemu for Libertine Linux image testings\n\nRUN apk add --no-cache qemu-system-x86_64\n\n\n# 3 Clean up apk\n\nRUN rm -rf /var/cache/apk/*\n\n\n# 4 Leave as needed.\n\nRUN mkdir /root/libertine\nVOLUME /root/libertine\nWORKDIR /root/libertine\nENTRYPOINT [\"./libertine\"]\n"
}