{
  "startTime": 1674241133533,
  "endTime": 1674241133588,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################\n### build environment ###\n#########################\n# base image\nFROM node:10.5-alpine as builder\n\n# set working directory\nRUN mkdir /ngx-barcode-scanner\nWORKDIR /ngx-barcode-scanner\n\n# add `/usr/src/app/node_modules/.bin` to $PATH\nENV PATH /ngx-barcode-scanner/node_modules/.bin:$PATH\n\n# install and cache app dependencies\nCOPY package.json /ngx-barcode-scanner/package.json\nRUN npm set progress=false && npm config set depth 0 && npm cache clean --force\nRUN npm install -g @angular/cli@latest && npm cache clean --force;\nRUN npm i --suppess-warnings && npm cache clean --force;\n\n# add app\nCOPY . /ngx-barcode-scanner\n\n# run tests\n#RUN ng test:ci\n\n# generate build\nRUN npm run build\n\n##################\n### production ###\n##################\n\n# base image\nFROM nginx:alpine\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\n# copy artifact build from the 'build environment'\nCOPY --from=builder /ngx-barcode-scanner/dist /usr/share/nginx/html\n\n# expose port 80\nEXPOSE 80\n\n# run nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}