{
  "startTime": 1674240691542,
  "endTime": 1674240691765,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 181
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 181
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.2-slim\n\nMAINTAINER Nidal Alhariri \"nidal@level09.com\"\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y python-pip python-dev apt-utils libjpeg62-turbo-dev libzip-dev libxml2-dev libssl-dev libffi-dev libxslt1-dev libncurses5-dev python-setuptools libpq-dev git && rm -rf /var/lib/apt/lists/*;\n\n# We copy just the requirements.txt first to leverage Docker cache\nCOPY ./requirements.txt /app/requirements.txt\n\nWORKDIR /app\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . /app\n\nENV FLASK_APP=run.py\nENV C_FORCE_ROOT=\"true\"\nENV SQLALCHEMY_DATABASE_URI=\"postgresql://enferno:verystrongpass@postgres/enferno\"\nENV CELERY_BROKER_URL=\"redis://redis:verystrongpass@redis:6379/10\"\nENV CELERY_RESULT_BACKEND=\"redis://redis:verystrongpass@redis:6379/11\"\n\n\nRUN echo 'alias act=\"source env/bin/activate\"' >> ~/.bashrc\nRUN echo 'alias ee=\"export FLASK_APP=run.py && export FLASK_DEBUG=0\"' >> ~/.bashrc\n\n\n\nCMD [ \"uwsgi\", \"--http\", \"0.0.0.0:5000\", \\\n               \"--protocol\", \"uwsgi\", \\\n               \"--wsgi\", \"run:app\" ]\n\n"
}