{
  "startTime": 1674250776886,
  "endTime": 1674250777041,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "# The backend uses native modules so use this Dockerfile to\n# build and deploy to AWS Lambda.\n#   $ source tasks/docker-build-workspace.sh\n#   $ source tasks/docker-run-workspace.sh\n\nFROM node:carbon\n\nRUN apt-get update -y && \\\n    apt-get upgrade -y && \\\n    apt-get dist-upgrade -y && \\\n    apt-get -y autoremove && \\\n    apt-get clean\n\n# Install dependencies\nRUN apt-get install --no-install-recommends -y \\\n    zip \\\n    unzip \\\n    python3.4 \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install terraform\nRUN curl -fSL \"https://releases.hashicorp.com/terraform/0.11.2/terraform_0.11.2_linux_amd64.zip\" -o terraform.zip && \\\n    unzip terraform.zip -d /opt/terraform && \\\n    ln -s /opt/terraform/terraform /usr/bin/terraform && \\\n    rm -f terraform.zip\n\n# Install Heroku CLI\nRUN wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh\n\n# Install AWS CLI\nRUN pip3 install --no-cache-dir --user awscli && \\\n    export PATH=$PATH:$HOME/.local/bin\n\n# Setup workspace\nWORKDIR /usr/src/app\nCOPY ./ .\n\n# Why isn't .dockerignore working?\nRUN rm -rf node_modules && \\\n    rm -rf backend/build && \\\n    rm -rf backend/frontend && \\\n    rm -rf infrastructure/env-dev/.terraform && \\\n    rm -rf infrastructure/env-production/.terraform\n\n# Install node_modules\nRUN yarn"
}