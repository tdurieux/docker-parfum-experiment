{
  "startTime": 1674245585826,
  "endTime": 1674245586009,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 20,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM unocha/base-php7:%%UPSTREAM%%\n\nMAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>\n\n# Thanks to orakili <docker@orakili.net>\n\n# A little bit of metadata management.\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\nENV DRUSH_VERSION=8 \\\n    DRUSH_RELEASE=8.1.15 \\\n    WP_RELEASE=2.1.0 \\\n    PAGER=more\n\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.name=\"php7\" \\\n      org.label-schema.description=\"This service provides a php-fpm platform with composer, drush and wp-cli.\" \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      info.humanitarianresponse.php=$VERSION \\\n      info.humanitarianresponse.php.modules=\"bcmath bz2 calendar ctype curl dom exif fileinfo fpm ftp gd gettext iconv igbinary imagick imap intl json mcrypt memcached opcache openssl pdo pdo_mysql pdo_pgsql phar posix redis shmop soap sysvmsg sysvsem sysvshm simplexml sockets wddx xml xmlreader xmlwriter xsl zip zlib\" \\\n      info.humanitarianresponse.php.sapi=\"fpm\" \\\n      info.humanitarianresponse.composer=\"1.8.4\" \\\n      info.humanitarianresponse.drush=$DRUSH_RELEASE \\\n      info.humanitarianresponse.wp=$WP_RELEASE\n\nCOPY etc/my.cnf.d/client.cnf /client.cnf\nCOPY drushrc.php /drushrc.php\nCOPY drush8-2282.patch /tmp/drush8-2282.patch\nCOPY drush8-2567.patch /tmp/drush8-2567.patch\n\nRUN apk add --update-cache \\\n        git \\\n        php7 \\\n        mysql-client \\\n        postgresql-client && \\\n    rm -rf /var/cache/apk/* && \\\n    \\\n    # Configure the MySQL client library.\n    mv -f /client.cnf /etc/my.cnf.d/client.cnf && \\\n\n    # Install composer, as suggested by https://getcomposer.org/\n    # and https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md\n    COMPOSER_HASH=$( curl -f -sS https://composer.github.io/installer.sig) && \\\n    php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n    php -r \"if (hash_file('SHA384', 'composer-setup.php') === '$COMPOSER_HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" && \\\n    php composer-setup.php --install-dir=/usr/bin --filename=composer && \\\n    php -r \"unlink('composer-setup.php');\" && \\\n    # Install drush and symlink it somewhere useful.\n    COMPOSER_HOME=/usr/local/drush$DRUSH_VERSION \\\n      composer global require drush/drush:$DRUSH_RELEASE && \\\n    cd /usr/local/drush8/vendor/drush/drush && \\\n      patch -p1 -i /tmp/drush8-2282.patch && \\\n      patch -p1 -i /tmp/drush8-2567.patch && \\\n    cd / && \\\n    ln -sf /usr/local/drush$DRUSH_VERSION/vendor/bin/drush /usr/bin/drush && \\\n    drush status && \\\n    # Install registry_rebuild to the appuser's homedir.\n    drush -y @none dl --destination=/home/appuser/.drush/commands registry_rebuild-7.x && \\\n    # Ensure the appuser's drush directory is writable.\n    chown -R appuser:appuser /home/appuser/.drush && \\\n    # Symlink the appuser's drush module to root's.\n    mkdir -p /root/.drush && \\\n    ln -s /home/appuser/.drush/commands /root/.drush/commands && \\\n    # Add our default drushrc.php file.\n    mkdir -p /etc/drush && \\\n    mv /drushrc.php /etc/drush/drushrc.php && \\\n    # Cleanup.\n    rm -f /tmp/drush8-2282.patch /tmp/drush8-2567.patch && \\\n    # Install wp-cli and symlink it somewhere useful.\n    COMPOSER_HOME=/usr/local/wp$WP_RELEASE  \\\n      composer global require wp-cli/wp-cli:$WP_RELEASE && \\\n    ln -sf /usr/local/wp$WP_RELEASE/vendor/wp-cli/wp-cli/bin/wp /usr/bin/wp && \\\n    wp --info\n"
}