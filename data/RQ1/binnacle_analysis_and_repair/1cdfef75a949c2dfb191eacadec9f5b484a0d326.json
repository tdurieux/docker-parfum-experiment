{
  "startTime": 1674234847294,
  "endTime": 1674234847960,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 187,
        "lineEnd": 187,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 143,
        "lineEnd": 160,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 6,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 6,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 6,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nRUN set -ex \\\n\t&& buildDeps=\" \\\n\t\tdpkg-dev \\\n\t\tgcc \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibexpat1-dev \\\n\t\tlibffi-dev \\\n\t\tlibgdbm-dev \\\n\t\tliblzma-dev \\\n\t\tlibncursesw5-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tmake \\\n\t\ttcl-dev \\\n\t\ttk-dev \\\n\t\twget \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n# as of Stretch, \"gpg\" is no longer included by default\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n\t\" \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\n\n# python 3.7.0 install\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tlibexpat1 \\\n\t\tlibffi6 \\\n\t\tlibgdbm3 \\\n\t\tlibreadline7 \\\n\t\tlibsqlite3-0 \\\n\t\tlibssl1.1 \\\n\t\tnetbase \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.7.0\n\n\nRUN wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& ldconfig \\\n\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 10.0.1\n\nRUN set -ex; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n\t\\\n\tapt-get purge -y --auto-remove wget; \\\n\t\\\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\t\\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\n  # node 9 install\n  RUN groupadd --gid 1000 node \\\n    && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\n  # gpg keys listed at https://github.com/nodejs/node#release-team\n  RUN set -ex \\\n    && for key in \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n      B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n      56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n      77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600; \\\n    do \\\n      gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n    done\n\n  ENV NODE_VERSION 9.11.2\n\n  RUN buildDeps='xz-utils' \\\n      && ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n      && case \"${dpkgArch##*-}\" in \\\n        amd64) ARCH='x64';; \\\n        ppc64el) ARCH='ppc64le';; \\\n        s390x) ARCH='s390x';; \\\n        arm64) ARCH='arm64';; \\\n        armhf) ARCH='armv7l';; \\\n        i386) ARCH='x86';; \\\n        * echo \"unsupported  architecture\"; exit 1;; \\\n      esac \\\n      && set -x \\\n      && apt-get update && apt-get install -y ca-certificates curl wget $buildDeps --no-install-recommends \\\n      && rm -rf /var/lib/apt/lists/* \\\n      && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n      && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n      && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n      && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n      && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n      && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n      && apt-get purge -y --auto-remove $buildDeps \\\n      && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n  ENV YARN_VERSION 1.5.1\n\n  RUN set -ex \\\n    && for key in \\\n      6A010C5166006599AA17F08146C2130DFD2497F5; \\\n    do \\\n      gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n    done \\\n    && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n    && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n    && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n    && mkdir -p /opt \\\n    && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n    && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n    && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n    && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n\nADD . /server\nWORKDIR /server\nRUN npm i --production && npm cache clean --force;\nCMD [\"node\", \"/server/index.js\"]\n"
}