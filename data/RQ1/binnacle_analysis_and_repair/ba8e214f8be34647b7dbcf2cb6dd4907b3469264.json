{
  "startTime": 1674252295895,
  "endTime": 1674252296029,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM spacemacs/emacs25:develop\n\nMAINTAINER JAremko <w3techplaygound@gmail.com>\n\nENV UNAME=\"jare\"\n\nENV CHROME_KEY=\"https://dl-ssl.google.com/linux/linux_signing_key.pub\" \\\n    CHROME_REP=\"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\"\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    curl \\\n    gcc \\\n    python \\\n    rlwrap \\\n    silversearcher-ag \\\n    wget \\\n    && wget -q -O - \"${CHROME_KEY}\" | apt-key add - \\\n    && echo \"${CHROME_REP}\" >> /etc/apt/sources.list.d/google.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends google-chrome-stable \\\n    && rm -rf /tmp/* /var/lib/apt/lists/* \\\n    && google-chrome \\\n    --disable-gpu \\\n    --headless \\\n    --no-sandbox \\\n    https://example.org/\n\nCOPY .spacemacs \"${UHOME}/.spacemacs\"\nCOPY private \"${UHOME}/.emacs.d/private\"\nCOPY .lein \"${UHOME}/.lein\"\n\n# Install Spacemacs layers dependencies and init user\nRUN install-deps\n\nUSER $UNAME\n\n# Install Cask\nENV CASK_EMACS=\"/usr/bin/emacs\"\nRUN curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go \\\n    | python \\\n    && sudo ln -s \"${UHOME}/.cask/bin/cask\" \"/usr/local/bin/cask\"\n\n# Compile emacsql version of sqlite (used by ranger.el)\nRUN emacs --batch -u $UNAME \\\n    --eval=\"(require 'emacsql-sqlite)\" \\\n    --eval=\"(emacsql-sqlite-compile)\"\n\n# Configure git\nRUN git config --global user.name JAremko \\\n    && git config --global user.email w3techplayground@gmail.com\n\n# Install Clojure user level stuff\nRUN echo \"(defproject stub \\\"0.0.1-SNAPSHOT\\\")\" > /tmp/project.clj \\\n    && cd /tmp/ \\\n    && lein deps \\\n    && rm -rf /tmp/*\nUSER root\n"
}