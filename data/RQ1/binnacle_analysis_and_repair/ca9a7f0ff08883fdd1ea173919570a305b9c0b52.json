{
  "startTime": 1674239602571,
  "endTime": 1674239602790,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER David Manthey <david.manthey@kitware.com>\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --yes --no-install-recommends -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" dist-upgrade && \\\n    apt-get install -y --no-install-recommends git python2.7-dev python-pip libssl-dev sudo net-tools vim locales apt-utils python-setuptools && \\\n    # Install some additional packages for convenience when testing with bash\n    apt-get install -y --no-install-recommends iputils-ping telnet-ssl tmux less && \\\n    sudo rm -rf /var/lib/apt/lists/* /tmp/*\nRUN pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir -U --upgrade-strategy eager ansible\nRUN locale-gen en_US.UTF-8\nRUN adduser --disabled-password --gecos '' ubuntu && \\\n    adduser ubuntu sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER ubuntu\nENV LANG en_US.UTF-8\nWORKDIR /home/ubuntu\nRUN git clone --depth=1 --no-checkout https://github.com/DigitalSlideArchive/HistomicsTK && \\\n    cd HistomicsTK && \\\n    git checkout master -- ansible/ && \\\n    rm -rf .git\nWORKDIR /home/ubuntu/HistomicsTK\nENV GIRDER_EXEC_USER ubuntu\nCOPY . /home/ubuntu/HistomicsTK/ansible/.\nRUN sudo chown -R ubuntu:ubuntu /home/ubuntu/HistomicsTK/ansible\nWORKDIR /home/ubuntu/HistomicsTK/ansible\n# RUN ansible-playbook -i inventory/local docker_ansible.yml --tags common\n\nARG MONGO_WORKER_DATABASE\n\n# RUN ansible-playbook -i inventory/local docker_ansible.yml --tags worker --extra-vars=\"docker=true mongo_worker_database=${MONGO_WORKER_DATABASE:-girder_worker}\"\n\nRUN ansible-galaxy install -r requirements.yml -p /home/ubuntu/HistomicsTK/ansible/roles/\nRUN ansible-playbook -i inventory/local docker_ansible.yml --extra-vars=\"docker=girder_worker mongo_worker_database=${MONGO_WORKER_DATABASE:-girder_worker}\" && \\\n    sudo pyclean /usr/local/lib/python2.7/dist-packages && \\\n    sudo rm -rf /var/lib/apt/lists/* /tmp/* \\\n                /home/ubuntu/.cache \\\n                /home/ubuntu/.ansible* \\\n                /home/ubuntu/.wget-hsts \\\n                /opt/histomicstk/openjpeg-* \\\n                /opt/histomicstk/openslide-* \\\n                /opt/histomicstk/tiff-* \\\n                /opt/histomicstk/vips-* \\\n                /opt/histomicstk/ImageMagick* \\\n                /root/.cache/pip\n\nRUN echo 'task_reject_on_worker_lost = True' >> /opt/girder_worker/girder_worker/celeryconfig.py\nRUN echo 'task_acks_late = True' >> /opt/girder_worker/girder_worker/celeryconfig.py\n\nWORKDIR /opt/girder_worker\n\n# If the environment vairable\n#   HOST_MONGO=true\n# is set, mongodb is added to the /etc/hosts as mapping to the docker host ip\n# address\nCMD sudo -E python /opt/girder_worker/set_environment.py ubuntu tmp_root && \\\n    sudo mkdir -p /tmp/girder_worker && \\\n    sudo chmod a+rwx /tmp/girder_worker && \\\n    sudo -E su ubuntu -c \\\n    'python -m girder_worker --concurrency=\"${GIRDER_WORKER_CONCURRENCY:-2}\" -Ofair --prefetch-multiplier=1 >/opt/logs/worker.log 2>&1'\n"
}