{
  "startTime": 1674237029905,
  "endTime": 1674237030128,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6\n\nRUN printf \"deb http://deb.debian.org/debian testing main\\ndeb http://deb.debian.org/debian testing-updates main\\ndeb http://security.debian.org testing/updates main\" >> /etc/apt/sources.list\nRUN apt-get update && \\\n    apt-get install --yes --no-install-recommends apt-transport-https && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nRUN echo 'deb https://deb.nodesource.com/node_6.x jessie main' > /etc/apt/sources.list.d/nodesource.list && \\\n    curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --yes --target-release=jessie --no-install-recommends build-essential git locales nodejs python-pip python-setuptools python-sphinx python-yaml && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n   RUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --no-document --system && rm -rf /root/.gem;\nRUN npm install -g conventional-changelog-cli && npm cache clean --force;\n\nRUN echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen\nRUN locale-gen\nENV LC_ALL en_US.UTF-8\n\nRUN curl -f -o /tmp/chefdk.deb https://packages.chef.io/files/stable/chefdk/1.6.11/debian/8/chefdk_1.6.11-1_amd64.deb && \\\n    dpkg -i /tmp/chefdk.deb && \\\n    rm -rf /tmp/chefdk.deb\n\nENV APP_HOME /cookbooks/opsworks_ruby\nRUN mkdir -p \"$APP_HOME\"\n\nRUN gem install bundler\nRUN pip install --no-cache-dir yamllint\n\nWORKDIR $APP_HOME\n\nCOPY Gemfile* $APP_HOME/\nRUN bundle install -j 4\n\nCOPY package.json $APP_HOME/\nRUN npm install && npm cache clean --force;\n\nCOPY .chef.login $APP_HOME/\nRUN mkdir -p /root/.chef\nRUN printf \"client_key \\\"/cookbooks/opsworks_ruby/client.pem\\\"\\n\" >> /root/.chef/knife.rb\nRUN printf \"node_name \\\"$(cat /cookbooks/opsworks_ruby/.chef.login)\\\"\\n\" >> /root/.chef/knife.rb\nRUN printf \"cookbook_path \\\"/cookbooks\\\"\\n\" >> /root/.chef/knife.rb\n\nCOPY README.md $APP_HOME/\nCOPY metadata.rb $APP_HOME/\nCOPY Berksfile* $APP_HOME/\nRUN chef exec berks\n\n"
}