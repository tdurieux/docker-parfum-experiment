{
  "startTime": 1674252014713,
  "endTime": 1674252015045,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM alpine:3.4\n\n# persistent / runtime deps\nENV PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\tpkgconf \\\n\t\tre2c\nRUN apk add --no-cache --virtual .persistent-deps \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\ttar \\\n\t\txz\n\n# ensure www-data user exists\nRUN set -x \\\n\t&& addgroup -g 82 -S www-data \\\n\t&& adduser -u 82 -D -S -G www-data www-data\n# 82 is the standard uid/gid for \"www-data\" in Alpine\n# http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2\n# http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2\n# http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\n##<autogenerated>##\n##</autogenerated>##\n\nENV GPG_KEYS 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\n\nENV PHP_VERSION 7.0.11\nENV PHP_FILENAME php-7.0.11.tar.xz\nENV PHP_SHA256 d4cccea8da1d27c11b89386f8b8e95692ad3356610d571253d00ca67d524c735\n\nRUN set -xe \\\n\t&& apk add --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t&& mkdir -p /usr/src \\\n\t&& cd /usr/src \\\n\t&& curl -fSL \"https://secure.php.net/get/$PHP_FILENAME/from/this/mirror\" -o php.tar.xz \\\n\t&& echo \"$PHP_SHA256  *php.tar.xz\" | sha256sum -c - \\\n\t&& curl -fSL \"https://secure.php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o php.tar.xz.asc \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& for key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone \\\n\t&& gpg --batch --verify php.tar.xz.asc php.tar.xz \\\n\t&& rm -r \"$GNUPGHOME\" \\\n\t&& apk del .fetch-deps && rm -rf -d && rm -rf /usr/src\n\nCOPY docker-php-source /usr/local/bin/\n\nRUN set -xe \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\tcurl-dev \\\n\t\tlibedit-dev \\\n\t\tlibxml2-dev \\\n\t\topenssl-dev \\\n\t\tsqlite-dev \\\n\t\\\n\t&& docker-php-source extract \\\n\t&& cd /usr/src/php \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\n\t\t--disable-cgi \\\n\n# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)\n\t\t--enable-ftp \\\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\t\t--enable-mbstring \\\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n\t\t--enable-mysqlnd \\\n\n\t\t--with-curl \\\n\t\t--with-libedit \\\n\t\t--with-openssl \\\n\t\t--with-zlib \\\n\t\t\\\n\t\t$PHP_EXTRA_CONFIGURE_ARGS \\\n\t&& make -j\"$(getconf _NPROCESSORS_ONLN)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \\\n\t&& make clean \\\n\t&& docker-php-source delete \\\n\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --recursive /usr/local \\\n\t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r apk info --installed \\\n\t\t\t| sort -u \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .php-rundeps $runDeps \\\n\n\t&& apk del .build-deps\n\nCOPY docker-php-ext-* /usr/local/bin/\n\n##<autogenerated>##\nCMD [\"php\", \"-a\"]\n##</autogenerated>##\n"
}