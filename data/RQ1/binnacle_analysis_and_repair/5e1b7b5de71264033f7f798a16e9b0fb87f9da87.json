{
  "startTime": 1674235204317,
  "endTime": 1674235204608,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 155
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 192
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First stage -- compiling Exekube CLI\nFROM golang:1.9-alpine AS builder\n\nRUN apk add --no-cache \\\n        git\n\nENV GOPATH /build\nWORKDIR /build\n\nRUN go get \\\n        github.com/urfave/cli \\\n        github.com/sirupsen/logrus\n\nADD ./cli ./src/github.com/exekube/exekube/cli\n\nRUN go build -o ./bin/xk github.com/exekube/exekube/cli\n\n# Second stage -- getting all runtime deps\nFROM alpine:3.7\n\nENV ALIYUN_VERSION 3.0.0\nENV HELM_VERSION 2.8.2\nENV KUBECTL_VERSION 1.9.3\nENV TERRAFORM_VERSION 0.11.5\nENV TERRAGRUNT_VERSION 0.14.6\nENV TERRAFORM_PROVIDER_HELM_VERSION 0.6.0\nENV TERRAFORM_PROVIDER_ALICLOUD_VERSION 1.9.1\n\nRUN apk --no-cache add \\\n        curl \\\n        bash \\\n        libc6-compat \\\n        openssh-client \\\n        git \\\n        openssl \\\n        tar \\\n        ca-certificates \\\n        apache2-utils \\\n        jq \\\n        tzdata\n\nRUN curl -f -L -o kubectl \\\n        https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n        && chmod 0700 kubectl \\\n        && mv kubectl /usr/bin\n\n# Alibaba Cloud CLI\nRUN curl -f -L -o aliyun.tgz \\\n        https://aliyun-cli.oss-cn-hangzhou.aliyuncs.com/aliyun-cli-linux-${ALIYUN_VERSION}-amd64.tgz \\\n        && tar xzf aliyun.tgz \\\n        && rm -f aliyun.tgz \\\n        && chmod 0700 aliyun \\\n        && mv aliyun /usr/bin\n\n# Alibaba Cloud terraform provider\nRUN curl -f -L -o tpa.tgz \\\n        https://github.com/alibaba/terraform-provider/releases/download/V${TERRAFORM_PROVIDER_ALICLOUD_VERSION}/terraform-provider-alicloud_linux-amd64.tgz \\\n        && tar -xvzf tpa.tgz \\\n        && rm -f tpa.tgz \\\n        && chmod 0700 bin/terraform-provider-alicloud \\\n        && mv bin/terraform-provider-alicloud bin/terraform-provider-alicloud_v${TERRAFORM_PROVIDER_ALICLOUD_VERSION} \\\n        && mkdir -p /root/.terraform.d/plugins \\\n        && mv bin/terraform-provider-alicloud_v${TERRAFORM_PROVIDER_ALICLOUD_VERSION} /root/.terraform.d/plugins\n\nRUN curl -f -L -o helm.tar.gz \\\n        https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n        && tar -xvzf helm.tar.gz \\\n        && rm -f helm.tar.gz \\\n        && chmod 0700 linux-amd64/helm \\\n        && mv linux-amd64/helm /usr/bin\n\nRUN curl -f -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n        && unzip terraform.zip \\\n        && mv terraform /usr/bin \\\n        && rm -f terraform.zip\n\nRUN curl -f -L -o ./terragrunt \\\n        https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 \\\n        && chmod 0700 terragrunt \\\n        && mv terragrunt /usr/bin\n\nRUN curl -f -L -o ./tph.tar.gz \\\n        https://github.com/mcuadros/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n        && tar -xvzf tph.tar.gz \\\n        && rm -f tph.tar.gz \\\n        && cd terraform-provider-helm_linux_amd64 \\\n        && mv terraform-provider-helm terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && mkdir -p /root/.terraform.d/plugins/ \\\n        && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/\n\nCOPY modules /exekube-modules/\nCOPY --from=builder /build/bin/xk /usr/local/bin/\n\nENTRYPOINT [\"/usr/local/bin/xk\"]\n"
}