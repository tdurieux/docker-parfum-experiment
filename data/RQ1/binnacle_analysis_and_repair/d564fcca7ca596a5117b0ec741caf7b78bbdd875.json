{
  "startTime": 1674249562314,
  "endTime": 1674249562381,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# playbook2image\nFROM rhscl/python-27-rhel7:2.7\n\nMAINTAINER OpenShift Team <dev@lists.openshift.redhat.com>\n\n# TODO: Rename the builder environment variable to inform users about application you provide them\n# ENV BUILDER_VERSION 1.0\n\nLABEL io.k8s.description=\"Ansible playbook to image builder\" \\\n      io.k8s.display-name=\"playbook2image\" \\\n      io.openshift.tags=\"builder,ansible,playbook\" \\\n      io.openshift.expose-services=\"\" \\\n      url=\"https://github.com/openshift/playbook2image/blob/master/README.md\" \\\n      name=\"openshift3/playbook2image\" \\\n      summary=\"Ansible playbook to image builder\" \\\n      description=\"Base image to to ship Ansible playbooks as self-executing container image.\" \\\n      atomic.run=\"once\" \\\n      com.redhat.component=\"playbook2image-docker\" \\\n      vcs-url=\"https://github.com/openshift/playbook2image\" \\\n      vcs-type=\"git\" \\\n      version=\"0.0.1\"\n\n# Install Ansible.\n#\n# The default Dockerfile also installs 'pip' and 'python-devel' so that the\n# builder image can install Python dependencies if the playbooks need them.  In\n# the productized version these are provided by the python-27-rhel7 base image,\n# and dependencies should be packaged and installed with yum instead\nUSER root\n\n# To use a subscription inside container yum command has to be run first (before\n# yum-config-manager) https://access.redhat.com/solutions/1443553\nRUN yum repolist > /dev/null && \\\n    yum-config-manager --enable rhel-7-server-ose-3.6-rpms && \\\n    yum install -y --setopt=tsflags=nodocs ansible && \\\n    yum clean all -y && rm -rf /var/cache/yum\n\nCOPY ./.s2i/bin/ /usr/libexec/s2i\nCOPY user_setup /tmp\nCOPY system-container/exports /exports\n\nENV APP_ROOT=/opt/app-root\nENV USER_NAME=default \\\n    USER_UID=1001 \\\n    APP_HOME=${APP_ROOT}/src \\\n    HOME=${APP_ROOT}/src \\\n    PATH=$PATH:${APP_ROOT}/bin\n\nRUN mkdir -p ${APP_HOME} ${APP_ROOT}/etc ${APP_ROOT}/bin\nRUN chmod -R ug+x ${APP_ROOT}/bin ${APP_ROOT}/etc /tmp/user_setup && \\\n    /tmp/user_setup\n\n# Back to the UID used in the base image\nUSER ${USER_UID}\n\nRUN sed \"s@${USER_NAME}:x:${USER_UID}:0@${USER_NAME}:x:\\${USER_ID}:\\${GROUP_ID}@g\" /etc/passwd > ${APP_ROOT}/etc/passwd.template\n\nWORKDIR ${APP_HOME}\n\nCMD [\"/usr/libexec/s2i/usage\"]\n"
}