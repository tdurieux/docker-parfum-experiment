{
  "startTime": 1674242010400,
  "endTime": 1674242010439,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2-alpine\n\nRUN apk update && apk add --update --no-cache \\\n  # C compiler etc\n  build-base \\\n  # System specs\n  chromium \\\n  chromium-chromedriver \\\n  # Support git sources in the Gemfile\n  git \\\n  # Used by ActiveStorage\n  imagemagick \\\n  # Dependencies for Nokogiri\n  libxml2-dev \\\n  libxslt-dev \\\n  # Webpacker and friends\n  nodejs nodejs-npm \\\n  # Timezone data for Ruby's TZInfo library\n  tzdata \\\n  # Used by the pg gem\n  postgresql-dev\n\nRUN bundle config build.nokogiri --use-system-libraries\n\nWORKDIR /app\n\n# Install JS dependencies before copying app code to use layer caching.\n# Note: In JS heavy apps consider an approach similar to bundler.\nCOPY package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . .\n\n# We use a custom script as entry point to manage our bundle cache\nCOPY ./docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n# Setup environment for cached bundle\nENV BUNDLE_PATH=/gems \\\n    BUNDLE_BIN=/gems/bin \\\n    GEM_HOME=/gems\nENV PATH=\"${BUNDLE_BIN}:${PATH}\"\n"
}