{
  "startTime": 1674238769481,
  "endTime": 1674238769898,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 110,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "##############################################\n#                                            #\n#      Dockerfile base image parameter       #\n#             and default value              #\n#                                            #\n##############################################\n\nARG PYTHON_VERSION=3.7.0\n\nFROM circleci/python:$PYTHON_VERSION-stretch\n\n\n##############################################\n#                                            #\n#           Dockerfile parameters            #\n#             and default values             #\n#   We have to define them after the from.   #\n#                                            #\n##############################################\n\nARG NUMPY_VERSION=1.14.5\nARG GDAL_VERSION=2.4.0\nARG PROJ4_VERSION=4.9.3\nARG GRID_VERSION=1.6\nARG GEOS_VERSION=3.6.2\nARG LIBSPATIALINDEX_VERSION=1.8.5\n\n\n########################################\n#                                      #\n#             Image labels             #\n#                                      #\n########################################\n\nLABEL maintainer=\"Delair <nicolas.goguey@delair.aero>\"\n\n##############################################\n#                                            #\n#            Container preparation           #\n#                                            #\n##############################################\n\nUSER root\n\n# Make sure we're up-to-date and install runtime requirements\nRUN apt-get update -y \\\n && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    bzip2 \\\n    ca-certificates \\\n    curl \\\n    file \\\n    git \\\n    gzip \\\n    openssl \\\n    sqlite \\\n    unzip \\\n    xmlsec1 \\\n    zip && rm -rf /var/lib/apt/lists/*;\n\n\n##############################################\n#                                            #\n#          PROJ.4, GEOS, GDAL, GRID          #\n#                                            #\n##############################################\n\n# Install build requirement\nRUN apt-get install -y --no-install-recommends \\\n    libcurl4-openssl-dev \\\n    libgdal-dev \\\n    libjpeg-dev \\\n    libncurses5-dev \\\n    libpng-dev \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Fetch PROJ.4\nWORKDIR /tmp\nRUN curl -f -L https://download.osgeo.org/proj/proj-${PROJ4_VERSION}.tar.gz | tar zxf -\n\n# Get the nadgrids\nWORKDIR /tmp/proj-${PROJ4_VERSION}/nad\nRUN \\\n  curl -f -L https://download.osgeo.org/proj/proj-datumgrid-${GRID_VERSION}.zip -o proj-datumgrid-${GRID_VERSION}.zip && \\\n  unzip -o -q proj-datumgrid-${GRID_VERSION}.zip\n\n# Build and install PROJ.4\nWORKDIR \"/tmp/proj-${PROJ4_VERSION}\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local\nRUN make -j $(( 2 * $(cat /proc/cpuinfo | egrep ^processor | wc -l) )) \\\n && make install\n\n\n# Fetch GEOS\nWORKDIR /tmp\nRUN curl -f -L https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 | tar jxf -\n\n# Build and install GEOS\nWORKDIR \"/tmp/geos-${GEOS_VERSION}\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local\nRUN make -j $(( 2 * $(cat /proc/cpuinfo | egrep ^processor | wc -l) )) \\\n && make install\n\n\n# Fecth GDAL\nWORKDIR /tmp\nRUN curl -f -L https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz | tar zxf -\n\n# Build and install GDAL\nWORKDIR \"/tmp/gdal-${GDAL_VERSION}\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr/local/gdal \\\n    --with-curl=yes \\\n    --with-geos=/usr/local/bin/geos-config \\\n    --with-proj=/usr/local/proj4 \\\n    --with-python\nRUN make -j $(( 2 * $(cat /proc/cpuinfo | egrep ^processor | wc -l) )) \\\n && make install\n\n# Configuring environment\nENV PATH=\"/usr/local/gdal/bin:$PATH\"\nENV LD_LIBRARY_PATH=\"/usr/local/proj4/lib:/usr/local/gdal/lib:/usr/local/lib:$LD_LIBRARY_PATH\"\nENV GDAL_DATA=\"/usr/local/gdal/share/gdal\"\n\n\n########################################\n#                                      #\n#           libspatialindex            #\n#                                      #\n########################################\n# optionnal / required for the python make_geom_valid like in PostGIS\n\n# Fetch libspatialindex\nWORKDIR /tmp\nRUN curl -f -L https://download.osgeo.org/libspatialindex/spatialindex-src-${LIBSPATIALINDEX_VERSION}.tar.gz | tar zxf -\nWORKDIR /tmp/spatialindex-src-${LIBSPATIALINDEX_VERSION}\n\n# Build and install\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j $(( 2 * $(cat /proc/cpuinfo | egrep ^processor | wc -l) )) \\\n && make install\n\n\n##############################################\n#                                            #\n#             OpenCV prerequisites           #\n#                                            #\n##############################################\n\nWORKDIR /tmp\nRUN apt-get install -y --no-install-recommends \\\n    libsm6 \\\n    libxrender1 \\\n    libxext6 && rm -rf /var/lib/apt/lists/*;\n\n\n########################################\n#                                      #\n#     Python packages installation     #\n#                                      #\n########################################\n\n# Upgrade pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# Install numpy before GDAL\nRUN pip install --no-cache-dir numpy==${NUMPY_VERSION} \\\n && pip install --no-cache-dir GDAL==${GDAL_VERSION}\n\n\n##############################################\n#                                            #\n#                  Cleaning                  #\n#                                            #\n##############################################\n\nRUN apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\n##############################################\n#                                            #\n#            Preping for Execution           #\n#                                            #\n##############################################\n\nENV PATH=\"/home/circleci/.local/bin:$PATH\"\n# USER circleci\nCMD [\"python\"]\n"
}