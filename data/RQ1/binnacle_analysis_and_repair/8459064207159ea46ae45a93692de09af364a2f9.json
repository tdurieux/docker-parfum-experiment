{
  "startTime": 1674252594053,
  "endTime": 1674252594427,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 42,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 42,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Mikkel Vilstrup <mikkel@vilstrup.dk>\n\n##############################################################################\n# Install TensorFlow dependencies\n##############################################################################\nRUN apt-get update && apt-get install -y --no-install-recommends  \\\n    wget ca-certificates \\\n    git \\\n    curl \\\n    libfreetype6-dev \\\n    libpng12-dev l\\\n    ibhdf5-dev \\\n    openmpi-bin \\\n    pkg-config \\\n    zip \\\n    g++ \\\n    zlib1g-dev \\\n    unzip \\\n    build-essential \\\n    openjdk-8-jdk \\\n    openjdk-8-jre-headless \\\n    software-properties-common \\\n    python \\\n    python-dev \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n##############################################################################\n# Install Anaconda\n##############################################################################\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget bzip2 ca-certificates && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh && \\\n    /bin/bash Anaconda3-4.4.0-Linux-x86_64.sh -b -p /opt/conda && \\\n    rm Anaconda3-4.4.0-Linux-x86_64.sh\n\nENV PATH /opt/conda/bin:$PATH\nRUN pip install --no-cache-dir --upgrade pip\n\n##############################################################################\n# Install TensorFlow w/ CPU instructions\n##############################################################################\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\nENV BAZEL_VERSION 0.5.0\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\nRUN git clone https://github.com/tensorflow/tensorflow.git && \\\n    cd tensorflow && \\\n    git checkout r1.2\nWORKDIR /tensorflow\n\n\n# Must set bazel commands:\n# https://stackoverflow.com/questions/41293077/how-to-compile-tensorflow-with-sse4-2-and-avx-instructions\nRUN tensorflow/tools/ci_build/builds/configured CPU \\\n    bazel build -c opt --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n        --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.1 --copt=-msse4.2 \\\n        tensorflow/tools/pip_package:build_pip_package && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip && \\\n    pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl && \\\n    rm -rf /tmp/pip && \\\n    rm -rf /root/.cache\n\n##############################################################################\n# Setup Language to UTF-8 for text\n##############################################################################\n# https://askubuntu.com/a/601498\nRUN apt-get clean && apt-get -y update && apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n##############################################################################\n# Setup Jupyter\n##############################################################################\nCOPY config.py /root/.jupyter/jupyter_notebook_config.py\n\n# Copy sample notebooks.\nCOPY notebooks /notebooks\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\n# Tell docker where to go automatically\nWORKDIR \"/notebooks\"\n\nCMD [\"/run_jupyter.sh\", \"--allow-root\"]\n"
}