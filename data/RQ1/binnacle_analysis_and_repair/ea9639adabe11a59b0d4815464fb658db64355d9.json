{
  "startTime": 1674238888081,
  "endTime": 1674238888506,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 5,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 88,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 3,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk\n\nENV SDK_HOME=/sdk \\\n  LANG=en_US.UTF-8 \\\n  LANGUAGE=en_US:en \\\n  LC_ALL=en_US.UTF-8\n\nWORKDIR $SDK_HOME\n\nRUN apt-get --quiet update --yes \\\n  && apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 git file build-essential ca-certificates openssh-server --no-install-recommends \\\n  && apt-get -q autoremove \\\n  && apt-get -q clean -y && rm -rf /var/lib/apt/lists/* && rm -f /var/cache/apt/*.bin\n\n# configure JDK certs\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure \\\n# configure ssh server\n  && sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g' /etc/pam.d/sshd \\\n  && mkdir -p /var/run/sshd\n\n# Gradle\nENV GRADLE_VERSION 3.3\nENV GRADLE_SDK_URL https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\nRUN curl -f -sSL \"${GRADLE_SDK_URL}\" -o gradle-${GRADLE_VERSION}-bin.zip \\\n  && unzip gradle-${GRADLE_VERSION}-bin.zip -d ${SDK_HOME} \\\n  && rm -rf gradle-${GRADLE_VERSION}-bin.zip\nENV GRADLE_HOME ${SDK_HOME}/gradle-${GRADLE_VERSION}\nENV PATH ${GRADLE_HOME}/bin:$PATH\n\n# android sdk|build-tools|image\nENV ANDROID_TARGET_SDK=\"android-23,android-25,android-26\" \\\n  ANDROID_BUILD_TOOLS=\"build-tools-23.0.1,build-tools-25.0.2,build-tools-26.0.1\" \\\n  ANDROID_SDK_TOOLS=\"25.2.3\" \\\n  ANDROID_HOME=${SDK_HOME}/android-sdk-linux \\\n  PATH=${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:$PATH:${ANDROID_HOME}/cmake/bin\n\nRUN mkdir ${ANDROID_HOME} && wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/tools_r${ANDROID_SDK_TOOLS}-linux.zip \\\n  && unzip android-sdk.zip -d ${ANDROID_HOME}\n\n# Android Cmake\nRUN wget -q https://dl.google.com/android/repository/cmake-3.6.3155560-linux-x86_64.zip -O android-cmake.zip \\\n  && unzip -q android-cmake.zip -d ${ANDROID_HOME}/cmake \\\n  && chmod u+x ${ANDROID_HOME}/cmake/bin/ -R\n\n# COPY package_file ${SDK_HOME}/\n\nRUN echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter \"${ANDROID_TARGET_SDK}\" \\\n  && echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter platform-tools \\\n  && echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter \"${ANDROID_BUILD_TOOLS}\" \\\n  && echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter extra-android-m2repository \\\n  && echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter extra-google-google_play_services \\\n  && echo y | android-sdk-linux/tools/android --silent update sdk --no-ui --all --filter extra-google-m2repository\n  # && echo y | android-sdk-linux/tools/bin/sdkmanager --package_file=package_file\n\n#####################\n#  Install node.js  #\n#####################\n# gpg keys listed at https://github.com/nodejs/node#release-team\n# RUN set -ex \\\n#   && for key in \\\n#     9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n#     94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n#     FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n#     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n#     DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n#     B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n#     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n#     56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n#   ; do \\\n#     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n#     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n#     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; \\\n# done\n\nRUN gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\n\n\n\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 8.5.0\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n&& ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nENV YARN_VERSION 1.1.0\n\nRUN set -ex \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt/yarn \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n&& rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n\n# Install global npm modules\nRUN npm install -g react-native-cli exp@55.0.5 && npm cache clean --force;"
}