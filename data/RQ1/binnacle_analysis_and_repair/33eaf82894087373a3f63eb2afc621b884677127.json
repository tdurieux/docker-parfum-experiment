{
  "startTime": 1674236412950,
  "endTime": 1674236413591,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 15,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 50,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos6\n\n# Install some basic utilities and build tools\nRUN yum makecache && \\\n    rpm --import http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-6 && \\\n    yum -y install epel-release java-1.8.0-openjdk-devel && \\\n    yum -y install git iproute net-tools openssh-server rsync sudo time vim wget unzip && \\\n    yum -y install ant-junit autoconf bison cmake3 flex gperf indent jq libtool make && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# install all software we need\nRUN yum makecache && \\\n    yum -y install python-pip && \\\n    yum -y install python-devel python-psutil python-setuptools && \\\n    yum -y install apr-devel bzip2-devel expat-devel libcurl-devel && \\\n    yum -y install libevent-devel libuuid-devel libxml2-devel libyaml-devel libzstd-devel && \\\n    yum -y install openssl-devel pam-devel readline-devel snappy-devel && \\\n    yum -y install apache-ivy libicu perl-ExtUtils-Embed perl-Env perl-JSON && \\\n    pip install --no-cache-dir psi lockfile && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# setup ssh configuration\nRUN ssh-keygen -t rsa -N \"\" -f /root/.ssh/id_rsa && \\\n    cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && \\\n    chmod 0600 /root/.ssh/authorized_keys && \\\n    echo -e \"password\\npassword\" | passwd 2> /dev/null && \\\n    { ssh-keyscan localhost; ssh-keyscan 0.0.0.0; } >> /root/.ssh/known_hosts && \\\n    #\n    ssh-keygen -f /etc/ssh/ssh_host_key -N '' -t rsa1 && \\\n    ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa && \\\n    ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa && \\\n    sed -i -e 's|Defaults    requiretty|#Defaults    requiretty|' /etc/sudoers && \\\n    sed -ri 's/UsePAM yes/UsePAM no/g;s/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config && \\\n    sed -ri 's@^HostKey /etc/ssh/ssh_host_ecdsa_key$@#&@;s@^HostKey /etc/ssh/ssh_host_ed25519_key$@#&@' /etc/ssh/sshd_config\n\n# newer version of gcc and run environment for gpdb\nRUN yum -y install centos-release-scl && \\\n    yum -y install --nogpgcheck devtoolset-6-gcc devtoolset-6-gcc-c++ && yum clean all && \\\n    ln -s /usr/bin/cmake3 /usr/bin/cmake && \\\n    echo -e 'source /opt/rh/devtoolset-6/enable' >> /opt/gcc_env.sh && \\\n    echo -e 'source /opt/gcc_env.sh' >> /root/.bashrc && \\\n    echo -e '#!/bin/sh' >> /etc/profile.d/jdk_home.sh && \\\n    echo -e 'export JAVA_HOME=/etc/alternatives/java_sdk' >> /etc/profile.d/jdk_home.sh && \\\n    echo -e 'export PATH=$JAVA_HOME/bin:$PATH' >> /etc/profile.d/jdk_home.sh && rm -rf /var/cache/yum\n\n# setup curl and maven\nRUN cd /tmp && wget -q https://curl.haxx.se/download/curl-7.51.0.tar.bz2 && \\\n    tar -xjf curl-*.tar.bz2 && rm curl-*.tar.bz2 && cd curl-* && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --with-gssapi > log-file 2>&1 && make -j4 >> log-file 2>&1 && \\\n    make install >> log-file 2>&1 && rm -rf /tmp/curl-* && \\\n    wget -q https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo \\\n    -O /etc/yum.repos.d/epel-apache-maven.repo && yum install -y apache-maven && \\\n    rm /etc/yum.repos.d/epel-apache-maven.repo && ldconfig && yum clean all && rm -rf /var/cache/yum\n\n# create user gpadmin since GPDB cannot run under root\nRUN groupadd -g 1000 gpadmin && useradd -u 1000 -g 1000 gpadmin && \\\n    echo \"gpadmin  ALL=(ALL)       NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin && \\\n    groupadd supergroup && usermod -a -G supergroup gpadmin && \\\n    #\n    mkdir /home/gpadmin/.ssh && \\\n    ssh-keygen -t rsa -N \"\" -f /home/gpadmin/.ssh/id_rsa && \\\n    cat /home/gpadmin/.ssh/id_rsa.pub >> /home/gpadmin/.ssh/authorized_keys && \\\n    chmod 0600 /home/gpadmin/.ssh/authorized_keys && \\\n    echo -e \"password\\npassword\" | passwd gpadmin 2> /dev/null && \\\n    { ssh-keyscan localhost; ssh-keyscan 0.0.0.0; } >> /home/gpadmin/.ssh/known_hosts && \\\n    chown -R gpadmin:gpadmin /home/gpadmin/.ssh && \\\n    echo -e 'source /opt/gcc_env.sh' >> /home/gpadmin/.bashrc\n"
}