{
  "startTime": 1674249223234,
  "endTime": 1674249223526,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 147
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) 2018 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n\nFROM golang:1.9.2\n\nARG GCLOUD_SDK_VERSION=\"192.0.0\"\nARG HELM_VERSION=\"v2.6.1\"\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Need socat to forward user ssh-agent\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends git socat jq && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN mkdir -p /root/.ssh && \\\n    touch /root/.ssh/known_hosts && \\\n    ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts\n\nRUN go get -u \\\n    github.com/golang/dep/cmd/dep \\\n    github.com/alecthomas/gometalinter \\\n    github.com/kubernetes/gengo/examples/deepcopy-gen \\\n    && gometalinter --install\n\n# NOTE: Install gcloud sdk\nRUN curl -f -sSLo google-cloud-sdk.tar.gz https://storage.googleapis.com/cloud-sdk-release/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    tar zxf google-cloud-sdk.tar.gz && rm google-cloud-sdk.tar.gz && \\\n    ./google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --quiet && \\\n    /go/google-cloud-sdk/bin/gcloud components install kubectl && \\\n    ln -s \"/go/google-cloud-sdk/bin/gcloud\" /usr/local/bin/ && \\\n    ln -s \"/go/google-cloud-sdk/bin/kubectl\" /usr/local/bin/\n\n# NOTE: Install helm\nRUN curl -sfL https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz -o /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz && \\\n    tar xzf /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz && \\\n    mv linux-amd64/helm /usr/local/bin && \\\n    rm /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz && rm -r linux-amd64\n\n# NOTE: Install docker/docker-compose same as circleci\nRUN set -ex \\\n  && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1) \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n  && chmod +x /usr/bin/docker-compose \\\n  && docker-compose version\n"
}