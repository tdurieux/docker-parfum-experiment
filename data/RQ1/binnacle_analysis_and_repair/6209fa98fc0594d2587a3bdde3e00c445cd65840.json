{
  "startTime": 1674251072751,
  "endTime": 1674251072875,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 140
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage:0.11\n\nEXPOSE 80\n\nENV HOME /root\nONBUILD RUN /etc/my_init.d/00_regen_ssh_host_keys.sh\nCMD [\"/sbin/my_init\"]\n\n### see also brutasse/graphite-api\n\nVOLUME /srv/graphite\n\nRUN apt-get update && apt-get upgrade -y\n\n# Dependencies\nRUN apt-get install --no-install-recommends -y language-pack-en python-virtualenv libcairo2-dev nginx memcached python-dev libffi-dev tzdata && rm -rf /var/lib/apt/lists/*;\nRUN rm -f /etc/nginx/sites-enabled/default\n\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nRUN locale-gen en_US.UTF-8 && dpkg-reconfigure locales\n\nENV TZ Etc/UTC\n\n# add our default config and allow subsequent builds to add a different one\nADD graphite-api.yaml /etc/graphite-api.yaml\nRUN chmod 0644 /etc/graphite-api.yaml\nONBUILD ADD graphite-api.yaml /etc/graphite-api.yaml\nONBUILD RUN chmod 0644 /etc/graphite-api.yaml\n\n# Nginx service\nADD nginx.conf /etc/nginx/nginx.conf\nADD graphite_nginx.conf /etc/nginx/sites-available/graphite.conf\nRUN ln -s /etc/nginx/sites-available/graphite.conf /etc/nginx/sites-enabled/\nRUN mkdir /etc/service/nginx\nADD nginx.sh /etc/service/nginx/run\n\n# Add docker host IP in hosts file on startup\nADD dockerhost.sh /etc/my_init.d/dockerhost.sh\nRUN chmod +x /etc/my_init.d/dockerhost.sh\n\n# Memcached service\nRUN mkdir /etc/service/memcached\nADD memcached.sh /etc/service/memcached/run\nADD memcached.conf /etc/memcached.conf\n\n# Install in virtualenv\nRUN virtualenv /srv/graphite-env\n\n# Activate virtualenv and add in path\nENV VIRTUAL_ENV=/srv/graphite-env\nENV PATH=/srv/graphite-env/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nONBUILD ENV VIRTUAL_ENV=/srv/graphite-env\nONBUILD ENV PATH=/srv/graphite-env/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Update python build tools\nRUN pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir -U setuptools wheel\n\n# Install InfluxGraph, dependencies and tools for running webapp\nRUN pip install --no-cache-dir -U gunicorn graphite-api influxgraph\n\n# init scripts\nRUN mkdir /etc/service/graphite-api\nADD graphite-api.sh /etc/service/graphite-api/run\nRUN chmod +x /etc/service/graphite-api/run\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}