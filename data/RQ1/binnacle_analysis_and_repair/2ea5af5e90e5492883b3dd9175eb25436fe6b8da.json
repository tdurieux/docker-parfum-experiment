{
  "startTime": 1674245316607,
  "endTime": 1674245316770,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node as npm\n\nCOPY package.json package-lock.json /tmp/\n\nWORKDIR /tmp\n\nRUN npm install && npm cache clean --force;\n\n# -----------------------------------------------------------------------------\n\nFROM python:3.6-stretch\n\nARG POETRY_ARGS=\"--no-dev --no-interaction --no-ansi\"\n\nENV POETRY_ARGS=${POETRY_ARGS} \\\n    PYTHONPATH=/app/ \\\n    PYTHONFAULTHANDLER=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONHASHSEED=random \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    LANG=C.UTF-8 \\\n    POETRY_VERSION=0.12.16 \\\n    PATH=/app/.local/bin:$PATH\n\n# add a non-privileged user for installing and running the application\n# don't use --create-home option to prevent populating with skeleton files\nRUN mkdir /app && \\\n    chown 10001:10001 /app && \\\n    groupadd --gid 10001 app && \\\n    useradd --no-create-home --uid 10001 --gid 10001 --home-dir /app app\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends locales -y \\\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# install a few essentials and clean apt caches afterwards\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential curl git libpq-dev \\\n        postgresql-client gettext sqlite3 libffi-dev \\\n        inotify-tools wget bzip2 && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN pip install --no-cache-dir -U pip && \\\n    pip install --no-cache-dir \"poetry==$POETRY_VERSION\"\n\nWORKDIR /app\nCOPY poetry.lock pyproject.toml /app/\n\nRUN poetry config settings.virtualenvs.create false && \\\n    poetry install $POETRY_ARGS\n\nCOPY . /app/\n\nCOPY --from=npm /tmp/node_modules /app/node_modules/\n\nRUN chown -R 10001:10001 /app\n\nUSER 10001\n\nENTRYPOINT [\"/app/docker-entrypoint.sh\", \"--\"]\n"
}