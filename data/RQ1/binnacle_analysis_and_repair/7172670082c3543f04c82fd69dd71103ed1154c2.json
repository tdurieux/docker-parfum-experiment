{
  "startTime": 1674245019931,
  "endTime": 1674245020028,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nENV SHELL=/bin/bash\n\nENV RTE_TARGET=x86_64-native-linuxapp-gcc\n\n# verified git commit hash\nENV DPDK_VERSION=3d2e044\n\n# install dependencies and some handy tools\nRUN rpm --rebuilddb; yum -y clean all; yum -y update;\nRUN yum -y install curl pciutils git numactl-devel make gcc openssl-devel && rm -rf /var/cache/yum\n\n# clone DPDK and checkout desired version\nWORKDIR /usr/src\nRUN git clone http://dpdk.org/git/dpdk\nWORKDIR /usr/src/dpdk\nRUN git checkout $DPDK_VERSION\n\n# explicitly enable QAT in the config\nRUN sed s#CONFIG_RTE_LIBRTE_PMD_QAT=n#CONFIG_RTE_LIBRTE_PMD_QAT=y# \\\n        -i config/common_base\n\n# don't build kernel modules as they depend on the host kernel version\nRUN sed s#CONFIG_RTE_EAL_IGB_UIO=y#CONFIG_RTE_EAL_IGB_UIO=n# \\\n        -i config/common_linuxapp\nRUN sed s#CONFIG_RTE_KNI_KMOD=y#CONFIG_RTE_KNI_KMOD=n# \\\n        -i config/common_linuxapp\n\n# build DPDK\nRUN make T=$RTE_TARGET config && \\\n    make T=$RTE_TARGET && \\\n    make T=$RTE_TARGET DESTDIR=install install\n\n# go to the location of dpdk-test-crypto-perf app by default\nWORKDIR /usr/src/dpdk/build/app\n"
}