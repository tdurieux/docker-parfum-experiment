{
  "startTime": 1674234993089,
  "endTime": 1674234993692,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## TODO: Ariellea -- this isn't working due to lack of cpu-checker availability in debian stable.\nFROM debian:stable as debian-stable-nojava\nENV DEBIAN_FRONTEND=\"noninteractive\"\nARG BUILDARCH\nCOPY --from=gcr.io/bazel-public/base:bazelisk /usr/local/bin/bazel /usr/local/bin/bazel\nCOPY --from=gcr.io/bazel-public/base:buildifier /usr/local/bin/buildifier /usr/local/bin/buildifier\nCOPY --from=gcr.io/bazel-public/base:github-release /usr/local/bin/github-release /usr/local/bin/github-release\nCOPY --from=gcr.io/bazel-public/base:saucelabs /usr/local/bin/sc /usr/local/bin/sc\n\n### Install required packages.\nRUN dpkg --add-architecture i386 && \\\n    apt-get -qqy update && \\\n    echo \"Installing base packages\" && \\\n    apt-get -qqy --no-install-recommends install apt-utils curl lsb-release software-properties-common && \\\n    echo \"Installing packages required by Bazel\" && \\\n    apt-get -qqy --no-install-recommends install build-essential clang curl ed git iproute2 iputils-ping netcat-openbsd python python-dev python3 python3-dev unzip wget xvfb zip zlib1g-dev && \\\n    echo \"Installing packages required by Android SDK\" && \\\n    apt-get -qqy --no-install-recommends install expect libbz2-1.0:i386 libncurses5:i386 libstdc++6:i386 libz1:i386 && \\\n    echo \"Installing packages required by Tensorflow\" && \\\n    apt-get -qqy --no-install-recommends install libcurl3-dev swig python-enum34 python-mock python-numpy python-pip python-wheel python3-mock python3-numpy python3-pip python3-wheel && \\\n    echo \"Installing packages required by Envoy\" && \\\n    apt-get -qqy --no-install-recommends install automake autotools-dev cmake libtool m4 ninja-build && \\\n    echo \"Installing packages required by Android emulator\" && \\\n    #apt-get -qqy install cpio cpu-checker lsof qemu-kvm qemu-system-x86 unzip xvfb && \\  ##TODO: ariellea fix cpu-checker\n    apt-get -qqy --no-install-recommends install cpio lsof qemu-kvm qemu-system-x86 unzip xvfb && \\\n    echo \"Installing packages required by Bazel release process\" && \\\n    apt-get -qqy --no-install-recommends install devscripts gnupg pandoc reprepro && \\\n    echo \"Installing packages required by C++ coverage tests\" && \\\n    apt-get -qqy --no-install-recommends install lcov llvm && \\\n    echo \"Installing packages required by Swift toolchain\" && \\\n    apt-get -qqy --no-install-recommends install clang libicu-dev && \\\n    echo \"Installing packages required by rules_webtesting\" && \\\n    apt-get -qqy --no-install-recommends install python-urllib3 python3-urllib3 && \\\n    echo \"Installing packages required by Kythe\" && \\\n    apt-get -qqy --no-install-recommends install bison flex uuid-dev asciidoc graphviz source-highlight && \\\n    echo \"Installing packages required by Bazel (Ubuntu 14.04 and 16.04 only)\" && \\\n    apt-get -qqy --no-install-recommends install realpath libssl-dev && \\\n    apt-get -qqy purge apport && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Install Google Cloud SDK.\n### https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f -L https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get -qqy update && \\\n    apt-get -qqy --no-install-recommends install google-cloud-sdk && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Install Docker.\nRUN apt-get -qqy update && \\\n    apt-get -qqy --no-install-recommends install apt-transport-https ca-certificates && \\\n    curl -f -sSL https://download.docker.com/linux/debian/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=$BUILDARCH] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" && \\\n    apt-get -qqy update && \\\n    apt-get -qqy --no-install-recommends install docker-ce && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Install Node.js and packages required by Gerrit.\n### (see https://gerrit.googlesource.com/gerrit/+show/master/polygerrit-ui/README.md)\nRUN curl -f -L https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get -qqy update && \\\n    apt-get -qqy --no-install-recommends install nodejs && \\\n    npm install --unsafe-perm -g \\\n    eslint@\"=4.19.0\" \\\n    eslint-config-google@\"=0.12.0\" \\\n    eslint-plugin-html@\"=5.0.3\" \\\n    eslint-plugin-promise@\"=4.0.1\" \\\n    typescript \\\n    fried-twinkie@\"^0.2.2\" \\\n    polylint polymer-cli \\\n    web-component-tester@6.8.0 && \\\n    rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\n### Install Python (required our own bazelci.py script).\nRUN export PYTHON_VERSION=\"3.6.8\" && \\\n    mkdir -p /usr/local/src && \\\n    cd /usr/local/src && \\\n    curl -f -LO \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\" && \\\n    tar xfJ \"Python-${PYTHON_VERSION}.tar.xz\" && \\\n    rm \"Python-${PYTHON_VERSION}.tar.xz\" && \\\n    cd \"Python-${PYTHON_VERSION}\" && \\\n    echo \"_ssl _ssl.c -DUSE_SSL -I/usr/include -I/usr/include/openssl -L/usr/lib -lssl -lcrypto\" >> Modules/Setup.dist && \\\n    echo \"Compiling Python ${PYTHON_VERSION} ...\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --quiet --enable-ipv6 && \\\n    make -s -j all && \\\n    echo \"Installing Python ${PYTHON_VERSION} ...\" && \\\n    make -s altinstall && \\\n    pip3.6 install requests uritemplate pyyaml github3.py && \\\n    rm -rf \"/usr/local/src/Python-${PYTHON_VERSION}\"\n\n### Install Go.\nENV GO_HOME \"/opt/go1.12.6.linux-amd64\"\nENV PATH \"${PATH}:${GO_HOME}/bin\"\n\n### Install Swift toolchain (required by rules_swift).\nENV SWIFT_HOME \"/opt/swift-4.2.1-RELEASE-ubuntu14.04\"\nENV PATH \"${PATH}:${SWIFT_HOME}/usr/bin\"\n\nFROM debian-stable-nojava AS debian-stable-java8\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0x219BD9C9 && \\\n    apt-add-repository 'deb http://repos.azulsystems.com/ubuntu stable main' && \\\n    apt-get -qqy update && \\\n    apt-get -qqy --no-install-recommends install zulu-8 && \\\n    rm -rf /var/lib/apt/lists/*\n"
}