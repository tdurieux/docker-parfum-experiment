{
  "startTime": 1674251151020,
  "endTime": 1674251151573,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM   alpine\n\n# ---------------- #\n#   Installation   #\n# ---------------- #\n\n# Install all prerequisites\nRUN apk add --update --no-cache nginx nodejs nodejs-npm git curl wget gcc ca-certificates \\\n                                    python-dev py-pip musl-dev libffi-dev cairo supervisor bash \\\n                                    py-pyldap py-rrd                                                                 &&\\\n        apk --no-cache add ca-certificates wget                                                                      &&\\\n        wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub                  &&\\\n        wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk && \\\n        apk add --no-cache glibc-2.28-r0.apk && \\\n        rm glibc-2.28-r0.apk && \\\n        adduser -D -u 1000 -g 'www' www && \\\n        pip install -U pip pytz gunicorn six --no-cache-dir && \\\n        npm install -g wizzy && \\\n        npm cache clean --force\n\n# Checkout the master branches of Graphite, Carbon and Whisper and install from there\nRUN     mkdir /src                                                                                                   &&\\\n        git clone --depth=1 --branch master https://github.com/graphite-project/whisper.git /src/whisper             &&\\\n        cd /src/whisper                                                                                              &&\\\n        pip install . --no-cache-dir                                                                                 &&\\\n        python setup.py install\n\nRUN     git clone --depth=1 --branch master https://github.com/graphite-project/carbon.git /src/carbon               &&\\\n        cd /src/carbon                                                                                               &&\\\n        pip install . --no-cache-dir                                                                                 &&\\\n        python setup.py install\n\nRUN     git clone --depth=1 --branch master https://github.com/graphite-project/graphite-web.git /src/graphite-web   &&\\\n        cd /src/graphite-web                                                                                         &&\\\n        pip install . --no-cache-dir                                                                                 &&\\\n        python setup.py install                                                                                      &&\\\n        pip install -r requirements.txt --no-cache-dir                                                               &&\\\n        python check-dependencies.py\n\n# Install StatsD\nRUN     git clone --depth=1 --branch master https://github.com/etsy/statsd.git /src/statsd\n\n# Install Grafana\nRUN mkdir /src/grafana                                                                                           &&\\\n        mkdir /opt/grafana && \\\n        curl -f https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.2.2.linux-amd64.tar.gz \\\n             -o /src/grafana.tar.gz && \\\n        tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1 && \\\n        rm /src/grafana.tar.gz\n\n\n# Cleanup Compile Dependencies\nRUN     apk del --no-cache git curl wget gcc python-dev musl-dev libffi-dev\n\n\n# ----------------- #\n#   Configuration   #\n# ----------------- #\n\n# Confiure StatsD\nADD     ./statsd/config.js /src/statsd/config.js\n\n# Configure Whisper, Carbon and Graphite-Web\nADD     ./graphite/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nADD     ./graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py\nADD     ./graphite/carbon.conf /opt/graphite/conf/carbon.conf\nADD     ./graphite/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nADD     ./graphite/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nRUN     mkdir -p /opt/graphite/storage/whisper                                                                       &&\\\n        mkdir -p /opt/graphite/storage/log/webapp                                                                    &&\\\n        touch /opt/graphite/storage/log/webapp/info.log                                                              &&\\\n        touch /opt/graphite/storage/graphite.db /opt/graphite/storage/index                                          &&\\\n        chown -R www /opt/graphite/storage                                                                           &&\\\n        chmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper                                               &&\\\n        chmod 0664 /opt/graphite/storage/graphite.db                                                                 &&\\\n        cp /src/graphite-web/webapp/manage.py /opt/graphite/webapp                                                   &&\\\n        cd /opt/graphite/webapp/ && python manage.py migrate --run-syncdb --noinput\n\n# Configure Grafana and wizzy\nADD     ./grafana/custom.ini /opt/grafana/conf/custom.ini\nRUN     cd /src                                                                                                      &&\\\n        wizzy init                                                                                                   &&\\\n        extract() { cat /opt/grafana/conf/custom.ini | grep $1 | awk '{print $NF}'; }                                &&\\\n        wizzy set grafana url $(extract \";protocol\")://$(extract \";domain\"):$(extract \";http_port\")                  &&\\\n        wizzy set grafana username $(extract \";admin_user\")                                                          &&\\\n        wizzy set grafana password $(extract \";admin_password\")\n\n# Add the default datasource and dashboards\nRUN \tmkdir /src/datasources                                                                                       &&\\\n        mkdir /src/dashboards\nADD     ./grafana/datasources/* /src/datasources\nADD     ./grafana/dashboards/* /src/dashboards/\nADD     ./grafana/export-datasources-and-dashboards.sh /src/\n\n# Configure nginx and supervisord\nADD     ./nginx/nginx.conf /etc/nginx/nginx.conf\nRUN     mkdir /var/log/supervisor\nADD     ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n\n# ---------------- #\n#   Expose Ports   #\n# ---------------- #\n\n# Grafana\nEXPOSE  80\n\n# StatsD UDP port\nEXPOSE  8125/udp\n\n# StatsD Management port\nEXPOSE  8126\n\n# Graphite web port\nEXPOSE 81\n\n# Graphite Carbon port\nEXPOSE 2003\n\n\n# -------- #\n#   Run!   #\n# -------- #\n\nCMD     [\"/usr/bin/supervisord\", \"--nodaemon\", \"--configuration\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n"
}