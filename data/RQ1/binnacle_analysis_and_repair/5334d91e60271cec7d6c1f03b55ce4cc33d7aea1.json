{
  "startTime": 1674246330144,
  "endTime": 1674246330378,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 10,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 9,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 31,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 31,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 54,
        "columnStart": 27,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nLABEL maintainer=\"Lander Usategui <lander at erlerobotics dot com>\"\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV ROS2_DISTRO crystal\n#Prepare work-space\nRUN mkdir -p /root/ros2_mara_ws/src\nWORKDIR /root/ros2_mara_ws\n\nRUN \\\n    echo 'Etc/UTC' > /etc/timezone \\\n      && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n      && apt-get update -qq && apt-get install --no-install-recommends -qq -y tzdata dirmngr gnupg2 lsb-release curl \\\n      # setup ros2 keys\n      && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \\\n      # setup sources.list\n      && echo \"deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros2-latest.list \\\n      && apt-get update -qq && apt-get install --no-install-recommends -qq -y \\\n        build-essential \\\n        cmake \\\n        git \\\n        python3-colcon-common-extensions \\\n        python3-pip \\\n        wget \\\n      && pip3 install --no-cache-dir \\\n          tensorflow \\\n          transforms3d \\\n          billiard \\\n          psutil \\\n      && apt update -qq && apt install --no-install-recommends -qq -y \\\n        python3-vcstool \\\n        python3-numpy \\\n        python3-sip-dev \\\n        libeigen3-dev \\\n        libboost-all-dev \\\n        ros-$ROS2_DISTRO-ros-base \\\n        ros-$ROS2_DISTRO-action-msgs \\\n        ros-$ROS2_DISTRO-message-filters \\\n        ros-$ROS2_DISTRO-yaml-cpp-vendor \\\n        ros-$ROS2_DISTRO-urdf ros-$ROS2_DISTRO-rttest ros-$ROS2_DISTRO-tf2 \\\n        ros-$ROS2_DISTRO-tf2-geometry-msgs \\\n        ros-$ROS2_DISTRO-rclcpp-action \\\n        ros-$ROS2_DISTRO-cv-bridge \\\n        ros-$ROS2_DISTRO-control-msgs \\\n        ros-$ROS2_DISTRO-image-transport \\\n        ros-$ROS2_DISTRO-gazebo-dev \\\n        ros-$ROS2_DISTRO-gazebo-msgs \\\n        ros-$ROS2_DISTRO-gazebo-plugins \\\n        ros-$ROS2_DISTRO-gazebo-ros \\\n        ros-$ROS2_DISTRO-gazebo-ros-pkgs \\\n        libopencv-dev \\\n      && rm -rf /var/lib/apt/lists/* \\\n      && wget https://raw.githubusercontent.com/AcutronicRobotics/MARA/crystal/mara-ros2.repos && vcs import src < mara-ros2.repos \\\n      && wget https://raw.githubusercontent.com/AcutronicRobotics/gym-gazebo2/crystal/provision/additional-repos.repos && vcs import src < additional-repos.repos \\\n      #Generete HRIM packages\n      && cd ~/ros2_mara_ws/src/HRIM \\\n      && pip3 install --no-cache-dir hrim \\\n      && hrim generate models/actuator/servo/servo.xml \\\n      && hrim generate models/actuator/gripper/gripper.xml \\\n      #Compile the work-space\n      && bash -c \" cd /root/ros2_mara_ws \\\n      && source /opt/ros/crystal/setup.bash && colcon build --merge-install --parallel-workers $(nproc) --packages-ignore orocos_kinematics_dynamics individual_trajectories_bridge \\\n      && touch /root/ros2_mara_ws/install/share/orocos_kdl/local_setup.sh /root/ros2_mara_ws/install/share/orocos_kdl/local_setup.bash \\\n      && cd /root && git clone https://github.com/openai/gym && cd /root/gym && pip3 install -e . \\\n      #gym-gazebo2\n      && cd /root && git clone -b crystal https://github.com/AcutronicRobotics/gym-gazebo2 && cd /root/gym-gazebo2 && pip3 install -e . \\\n      #Load provisioning script\n      && echo 'source /root/gym-gazebo2/provision/mara_setup.sh' >> ~/.bashrc \\\n      \"\nCOPY run_environment.sh /\nWORKDIR /root/gym-gazebo2/\nEXPOSE 11596\nENTRYPOINT [\"/run_environment.sh\"]\n"
}