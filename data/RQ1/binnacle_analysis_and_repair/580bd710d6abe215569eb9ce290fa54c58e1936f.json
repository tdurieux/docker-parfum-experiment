{
  "startTime": 1674247962890,
  "endTime": 1674247963089,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons as commons\nFROM golang:alpine as golang\n\nRUN apk add --no-cache git\nRUN go get github.com/a8m/envsubst/cmd/envsubst\n\nFROM docker:stable\n\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=oc\n\nCOPY --from=golang /go/bin/envsubst /bin/envsubst\n\nARG LAGOON_VERSION\nENV LAGOON_VERSION=$LAGOON_VERSION\n\n# Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /sbin/tini /sbin/\nCOPY --from=commons /home /home\n\nRUN chmod g+w /etc/passwd \\\n    && mkdir -p /home\n\nENV TMPDIR=/tmp \\\n    TMP=/tmp \\\n    HOME=/home \\\n    # When Bash is invoked via `sh` it behaves like the old Bourne Shell and sources a file that is given in `ENV`\n    ENV=/home/.bashrc \\\n    # When Bash is invoked as non-interactive (like `bash -c command`) it sources a file that is given in `BASH_ENV`\n    BASH_ENV=/home/.bashrc\n\n# Defining Versions\nENV OC_VERSION=v3.7.2 \\\n    OC_HASH=282e43f \\\n    OC_SHA256=abc89f025524eb205e433622e59843b09d2304cc913534c4ed8af627da238624 \\\n    GLIBC_VERSION=2.28-r0\n\n# To run the openshift client library `oc` we need glibc, install that first. Copied from https://github.com/jeanblanchard/docker-alpine-glibc/blob/master/Dockerfile\nRUN apk add -U --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing aufs-util && \\\n    apk add --update openssl curl jq parallel && \\\n    curl -f -Lo /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    curl -f -Lo glibc.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk\" && \\\n    curl -f -Lo glibc-bin.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk\" && \\\n    apk add glibc-bin.apk glibc.apk && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n    rm -rf glibc.apk glibc-bin.apk /var/cache/apk/* && \\\n    apk add --no-cache bash git openssh py-pip && \\\n    git config --global user.email \"lagoon@lagoon.io\" && git config --global user.name lagoon && \\\n    pip install --no-cache-dir shyaml && \\\n    mkdir -p /openshift-origin-client-tools && \\\n    curl -f -Lo /tmp/openshift-origin-client-tools.tar https://github.com/openshift/origin/releases/download/${OC_VERSION}/openshift-origin-client-tools-${OC_VERSION}-${OC_HASH}-linux-64bit.tar.gz && \\\n    echo \"$OC_SHA256  /tmp/openshift-origin-client-tools.tar\" | sha256sum -c - && \\\n    mkdir /tmp/openshift-origin-client-tools && \\\n    tar -xzf /tmp/openshift-origin-client-tools.tar -C /tmp/openshift-origin-client-tools --strip-components=1 && \\\n    install /tmp/openshift-origin-client-tools/oc /usr/bin/oc && rm -rf /tmp/openshift-origin-client-tools && rm -rf /tmp/openshift-origin-client-tools.tar && \\\n    curl -f -Lo /usr/bin/svcat https://download.svcat.sh/cli/latest/linux/amd64/svcat && \\\n    chmod +x /usr/bin/svcat\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\n"
}