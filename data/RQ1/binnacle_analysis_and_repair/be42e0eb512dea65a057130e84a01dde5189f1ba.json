{
  "startTime": 1674246449456,
  "endTime": 1674246449684,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 38,
        "columnEnd": 159
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 104,
        "columnEnd": 127
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\n\nENV PG_MAJOR 9.2\nENV PG_VERSION 9.2.20\n\nENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH\nENV PGDATA /var/lib/postgresql/data\n\nENV LANG en_US.utf8\n\nRUN apk update && apk add build-base readline-dev openssl-dev zlib-dev libxml2-dev glib-lang wget gnupg ca-certificates libssl1.0 && \\\n    gpg --batch --keyserver ipv4.ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n    gpg --batch --list-keys --fingerprint --with-colons | sed -E -n -e 's/^fpr:::::::::([0-9A-F]+):$/\\1:6:/p' | gpg --batch --import-ownertrust && \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64\" && \\\n    wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64.asc\" && \\\n    gpg --batch --verify /usr/local/bin/gosu.asc && \\\n    rm /usr/local/bin/gosu.asc && \\\n    chmod +x /usr/local/bin/gosu && \\\n    mkdir -p /docker-entrypoint-initdb.d && \\\n    wget https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2 -O /tmp/postgresql-$PG_VERSION.tar.bz2 && \\\n    tar xvfj /tmp/postgresql-$PG_VERSION.tar.bz2 -C /tmp && \\\n    cd /tmp/postgresql-$PG_VERSION && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-integer-datetimes --enable-thread-safety --prefix=/usr/local --with-libedit-preferred --with-openssl && make world && make install world && make -C contrib install && \\\n    cd /tmp/postgresql-$PG_VERSION/contrib && make && make install && \\\n    apk --purge del build-base openssl-dev zlib-dev libxml2-dev wget gnupg ca-certificates && \\\n    rm -r /tmp/postgresql-$PG_VERSION* /var/cache/apk/* && rm /tmp/postgresql-$PG_VERSION.tar.bz2\n\nVOLUME /var/lib/postgresql/data\n\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 5432\nCMD [\"postgres\"]\n"
}