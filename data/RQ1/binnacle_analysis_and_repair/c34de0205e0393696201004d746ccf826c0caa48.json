{
  "startTime": 1674238597578,
  "endTime": 1674238597634,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.11.2-alpine as builder\nLABEL maintainer=\"sahil@ole.org,mappuji@ole.org\"\n\nARG LANGUAGE_MODE=\"single\"\nENV I18N ${LANGUAGE_MODE}\n\nWORKDIR /ng-app\n\nCOPY package.json ./\nCOPY docker/planet/scripts/ ./\nCOPY . .\n\nRUN apk add --no-cache --update \\\n    python \\\n    build-base \\\n    jq\nRUN npm i --silent && npm cache clean --force;\nRUN ./compile_planet.sh\nRUN cat package.json | jq -r .version > dist/version\nRUN ./create_version_json.sh\n\n#####\n\nFROM nginx:1.13.3-alpine\nCOPY docker/planet/default.conf /etc/nginx/conf.d/\nRUN rm -rf /usr/share/nginx/html/*\nCOPY --from=builder /ng-app/dist /usr/share/nginx/html\nRUN apk add --no-cache --update \\\n    fcgiwrap \\\n    spawn-fcgi \\\n    curl \\\n    jq\nCOPY docker/planet/scripts/docker-entrypoint.sh ./\nCOPY docker/planet/nginx/ /usr/share/nginx/html\n\nCMD ./docker-entrypoint.sh\n"
}