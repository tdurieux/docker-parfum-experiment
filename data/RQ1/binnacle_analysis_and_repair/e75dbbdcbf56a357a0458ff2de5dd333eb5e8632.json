{
  "startTime": 1674235207998,
  "endTime": 1674235208192,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# Start with current Ubuntu LTS\nFROM ubuntu:18.04\n\n# Add a PulseAudio's dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    autopoint \\\n    bash-completion \\\n    check \\\n    dbus-x11 \\\n    g++ \\\n    gcc \\\n    gettext \\\n    git-core \\\n    libasound2-dev \\\n    libasyncns-dev \\\n    libavahi-client-dev \\\n    libbluetooth-dev \\\n    libcap-dev \\\n    libfftw3-dev \\\n    libglib2.0-dev \\\n    libgtk-3-dev \\\n    libice-dev \\\n    libjack-dev \\\n    liblircclient-dev \\\n    libltdl-dev \\\n    liborc-0.4-dev \\\n    libsbc-dev \\\n    libsndfile1-dev \\\n    libsoxr-dev \\\n    libspeexdsp-dev \\\n    libssl-dev \\\n    libsystemd-dev \\\n    libtdb-dev \\\n    libudev-dev \\\n    libwebrtc-audio-processing-dev \\\n    libwrap0-dev \\\n    libx11-xcb-dev \\\n    libxcb1-dev \\\n    libxml-parser-perl \\\n    libxml2-utils \\\n    libxtst-dev \\\n    make \\\n    ninja-build \\\n    python3-setuptools \\\n    systemd && rm -rf /var/lib/apt/lists/*;\n\n# Install meson from upstream tarball\nARG MESON_VERSION=0.50.0\nRUN apt-get install --no-install-recommends -y wget && \\\n    wget -q https://github.com/mesonbuild/meson/releases/download/${MESON_VERSION}/meson-${MESON_VERSION}.tar.gz && \\\n    tar -xf meson-${MESON_VERSION}.tar.gz && \\\n    cd meson-${MESON_VERSION} && \\\n    python3 setup.py install && rm meson-${MESON_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n# Add a user and set as default for the build. This is safer, in general, and\n# allows us to avoid having to explicitly allow running as root in the\n# check-daemon stage.\nRUN groupadd -g 1000 a_group && \\\n    useradd a_user -u 1000 -g a_group -m\nUSER a_user:a_group\n\n# And make sure subsequent commands are run in the user's home directory\nWORKDIR /home/a_user\n"
}