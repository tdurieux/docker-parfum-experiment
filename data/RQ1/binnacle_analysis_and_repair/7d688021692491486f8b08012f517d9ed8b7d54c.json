{
  "startTime": 1674246264321,
  "endTime": 1674246264926,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for Conjure\n#\n# Conjure requires Haskell, JRE, CMake, C++, etc.\n# This is based on a merge of the two main parents\n# https://github.com/freebroccolo/docker-haskell/blob/master/8.4/Dockerfile\n# https://github.com/docker-library/openjdk/blob/master/11/jre/slim/Dockerfile\n# with the other components on top of a slim Debian base image.\n\nFROM debian:sid-slim\n\nENV LANG        C.UTF-8\nENV WORK        /conjure\n\n# create a JAVA_HOME that's cross-architecture-safe\nENV JAVA_HOME /docker-java-home\nRUN ln -svT \"/usr/lib/jvm/java-11-openjdk-$(dpkg --print-architecture)\" $JAVA_HOME\nENV JAVA_VERSION 11\n\nRUN set -ex; \\\n# slim variants have no man pages (causes \"update-alternatives\" to fail)\n    if [ ! -d /usr/share/man/man1 ]; then \\\n        mkdir -p /usr/share/man/man1; \\\n    fi; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n     openjdk-11-jre-headless; rm -rf /var/lib/apt/lists/*; \\\n# update-alternatives so future installs of OpenJDK don't change /usr/bin/java\n    update-alternatives --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }'; \\\n# ... and verify it worked for one of the alternatives\n    update-alternatives --query java | grep -q 'Status: manual'\n\nRUN apt-get install -y --no-install-recommends \\\n     ca-certificates \\\n     dirmngr \\\n     git \\\n     gnupg \\\n && echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 \\\n# the following apt-get update is necessary to pick up the Haskell components\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n     bison \\\n     cabal-install-2.2 \\\n     cmake \\\n     flex \\\n     g++ \\\n     ghc-8.4.3 \\\n     libsqlite3-dev \\\n     libtinfo-dev \\\n     make \\\n     netbase \\\n     wget \\\n     zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR $WORK\n\n# default Haskell stack build usually fails on Docker, instead\n# install a known-to-work binary build, see:\n# https://github.com/commercialhaskell/stack/issues/3510#issuecomment-386266579\nRUN apt-get install -y --no-install-recommends \\\n     curl \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz \\\n && curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc \\\n && apt-get purge -y --auto-remove curl \\\n && export GNUPGHOME=$WORK \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 \\\n && gpg --batch --verify stack.tar.gz.asc stack.tar.gz \\\n && tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \\\n && /usr/local/bin/stack config set system-ghc --global true \\\n && /usr/local/bin/stack config set install-ghc --global false \\\n && rm -f stack.tar.gz.asc stack.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nENV PATH        /root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:$PATH\nENV BIN_DIR     /root/.local/bin\n\nRUN git clone https://github.com/conjure-cp/conjure.git\nWORKDIR $WORK/conjure\nRUN git pull\nRUN git checkout v2.3.0\n\nRUN make\nRUN make solvers\n\nRUN apt-get purge -y --auto-remove \\\n     bison \\\n# JRE depends on this, don't remove:\n#     ca-certificates \\\n     cabal-install-2.2 \\\n     cmake \\\n     dirmngr \\\n     flex \\\n     g++ \\\n     ghc-8.4.3 \\\n     git \\\n     gnupg \\\n     libsqlite3-dev \\\n     libtinfo-dev \\\n     make \\\n     netbase \\\n     wget \\\n     zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\n\nWORKDIR $WORK\n\nRUN rm -f pubring.kbx* trustdb.gpg /root/.wget-hsts \\\n && rm -rf crls.d private-keys-v1.d \\\n && rm -rf conjure \\\n# remove stack\n && rm -rf /root/.stack \\\n && rm -rf /usr/local/bin/*\n\nENV PATH        /root/.local/bin:$PATH\n\n# do a test-run of the pipeline, unless command is specified\nCOPY sudoku.essence sudoku.param $WORK/\nCMD conjure solve -ac --solutions-in-one-file --number-of-solutions=all --solver=minion --limit-time=90 sudoku.essence sudoku.param \\\n && mv conjure-output/model000001-sudoku.solutions /tmp/result.txt \\\n && cat /tmp/result.txt \\\n && rm /tmp/result.txt \\\n && rm -rf conjure-output\n"
}