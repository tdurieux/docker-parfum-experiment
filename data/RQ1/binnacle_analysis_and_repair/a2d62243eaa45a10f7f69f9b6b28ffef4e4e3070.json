{
  "startTime": 1674249997324,
  "endTime": 1674249998049,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nARG NGINX_VERSION=1.12.2\nARG NGINX_SHA256=\"305f379da1d5fb5aefa79e45c829852ca6983c7cd2a79328f8e084a324cf0416\"\nARG OPENSSL_VERSION=1.1.0g\nARG OPENSSL_SHA256=\"de4d501267da39310905cb6dc8c6121f7a2cad45a7707f76df828fe1b85073af\"\n\nRUN apt-get update \\\n  && apt-get install wget build-essential libpcre++-dev libz-dev ca-certificates --no-install-recommends -y \\\n  && mkdir -p /usr/local/src \\\n  && cd /usr/local/src \\\n  && wget \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -O \"nginx-${NGINX_VERSION}.tar.gz\" \\\n  && echo \"$NGINX_SHA256\" \"nginx-${NGINX_VERSION}.tar.gz\" | sha256sum -c - \\\n  && tar -zxvf \"nginx-${NGINX_VERSION}.tar.gz\" \\\n  && wget \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" -O \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n  && echo \"$OPENSSL_SHA256\" \"openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c - \\\n  && tar -zxvf \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n  && cd \"nginx-${NGINX_VERSION}\" \\\n  && sed -i 's|--prefix=$ngx_prefix no-shared|--prefix=$ngx_prefix|' auto/lib/openssl/make \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  --prefix=/etc/nginx \\\n  --sbin-path=/usr/sbin/nginx \\\n  --modules-path=/usr/lib/nginx/modules \\\n  --conf-path=/etc/nginx/nginx.conf \\\n  --error-log-path=/var/log/nginx/error.log \\\n  --http-log-path=/var/log/nginx/access.log \\\n  --pid-path=/var/run/nginx.pid \\\n  --lock-path=/var/run/nginx.lock \\\n  --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n  --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n  --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n  --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n  --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n  --user=www-data \\\n  --group=www-data \\\n  --with-compat \\\n  --with-file-aio \\\n  --with-threads \\\n  --with-http_addition_module \\\n  --with-http_auth_request_module \\\n  --with-http_dav_module \\\n  --with-http_flv_module \\\n  --with-http_gunzip_module \\\n  --with-http_gzip_static_module \\\n  --with-http_mp4_module \\\n  --with-http_random_index_module \\\n  --with-http_realip_module \\\n  --with-http_secure_link_module \\\n  --with-http_slice_module \\\n  --with-http_ssl_module \\\n  --with-http_stub_status_module \\\n  --with-http_sub_module \\\n  --with-http_v2_module \\\n  --with-mail \\\n  --with-mail_ssl_module \\\n  --with-stream \\\n  --with-stream_realip_module \\\n  --with-stream_ssl_module \\\n  --with-stream_ssl_preread_module \\\n  --with-openssl=\"/usr/local/src/openssl-${OPENSSL_VERSION}\" \\\n  && make \\\n  && make install \\\n  && mkdir -p /var/cache/nginx/ && rm \"nginx-${NGINX_VERSION}.tar.gz\" && rm -rf /var/lib/apt/lists/*;\n\nENV OPENSSL_DIR=\"/usr/local/src/openssl-${OPENSSL_VERSION}/.openssl\"\n\n# Build GOST-engine for OpenSSL\nARG GOST_ENGINE_VERSION=3bd506dcbb835c644bd15a58f0073ae41f76cb06\nARG GOST_ENGINE_SHA256=\"4777b1dcb32f8d06abd5e04a9a2b5fe9877c018db0fc02f5f178f8a66b562025\"\nRUN apt-get install --no-install-recommends cmake unzip -y \\\n  && cd /usr/local/src \\\n  && wget \"https://github.com/gost-engine/engine/archive/${GOST_ENGINE_VERSION}.zip\" -O gost-engine.zip \\\n  && echo \"$GOST_ENGINE_SHA256\" gost-engine.zip | sha256sum -c - \\\n  && unzip gost-engine.zip -d ./ \\\n  && cd \"engine-${GOST_ENGINE_VERSION}\" \\\n  && sed -i 's|printf(\"GOST engine already loaded\\\\n\");|goto end;|' gost_eng.c \\\n  && mkdir build \\\n  && cd build \\\n  && cmake -DCMAKE_BUILD_TYPE=Release \\\n   -DOPENSSL_ROOT_DIR=\"${OPENSSL_DIR}\" \\\n   -DOPENSSL_INCLUDE_DIR=\"${OPENSSL_DIR}/include\" \\\n   -DOPENSSL_LIBRARIES=\"${OPENSSL_DIR}/lib\" .. \\\n  && cmake --build . --config Release \\\n  && cp ../bin/gost.so \"${OPENSSL_DIR}/lib/engines-1.1\" \\\n  && cp -r \"${OPENSSL_DIR}/lib/engines-1.1\" /usr/lib/x86_64-linux-gnu/ \\\n  && rm -rf \"/usr/local/src/gost-engine.zip\" \"/usr/local/src/engine-${GOST_ENGINE_VERSION}\" && rm -rf /var/lib/apt/lists/*;\n\n# Enable engine\nENV OPENSSL_CONF=/etc/ssl/openssl.cnf\nRUN sed -i '6i openssl_conf=openssl_def' \"${OPENSSL_CONF}\" \\\n  && echo \"\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"# OpenSSL default section\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"[openssl_def]\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"engines = engine_section\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"# Engine scetion\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"[engine_section]\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"gost = gost_section\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"# Engine gost section\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"[gost_section]\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"engine_id = gost\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"dynamic_path = ${OPENSSL_DIR}/lib/engines-1.1/gost.so\" >> \"${OPENSSL_CONF}f\" \\\n  && echo \"default_algorithms = ALL\" >> \"${OPENSSL_CONF}\" \\\n  && echo \"CRYPT_PARAMS = id-Gost28147-89-CryptoPro-A-ParamSet\" >> \"${OPENSSL_CONF}\"\n\nRUN cp \"${OPENSSL_DIR}/bin/openssl\" /usr/bin/openssl\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n\t&& ln -sf /dev/stderr /var/log/nginx/error.log\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}