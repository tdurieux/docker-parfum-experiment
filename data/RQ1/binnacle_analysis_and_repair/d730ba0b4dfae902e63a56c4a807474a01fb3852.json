{
  "startTime": 1674239764660,
  "endTime": 1674239765082,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 10,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 10,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\n# Ubuntu 18.04\n\n\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n\n\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\n\nUSER root\n\nENV  DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n          apt-get -y --no-install-recommends install software-properties-common --fix-missing && \\\n          apt-get update && rm -rf /var/lib/apt/lists/*;\n\n\n# Install all OS dependencies for notebook server that starts but lacks all\n# features (e.g., download as all possible file formats)\n\nRUN apt-get update && apt-get -yq dist-upgrade \\\n && apt-get install -yq --no-install-recommends \\\n    wget \\\n    bzip2 \\\n    ca-certificates \\\n    sudo \\\n    locales \\\n    fonts-liberation \\\n    python3.6 \\\n    curl \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 &&\\\n         ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Configure environment\nENV CONDA_DIR=/opt/conda \\\n    SHELL=/bin/bash \\\n    NB_USER=Deep_Learner \\\n    NB_UID=1000 \\\n    NB_GID=100 \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\nENV PATH=$CONDA_DIR/bin:$PATH \\\n    HOME=/home/$NB_USER\n\nADD fix-permissions /usr/local/bin/fix-permissions\n# Create Deep_Learner user with UID=1000 and in the 'users' group\n# and make sure these dirs are writable by the `users` group.\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown $NB_USER:$NB_GID $CONDA_DIR && \\\n    fix-permissions $HOME && \\\n    fix-permissions $CONDA_DIR\n\nUSER $NB_USER\n\n# Install conda as Deep_Learner and check the md5 sum provided on the download site\nENV MINICONDA_VERSION latest\nRUN cd /tmp && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    #echo \"a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - && \\\n    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    $CONDA_DIR/bin/conda config --system --prepend channels conda-forge && \\\n    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \\\n    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \\\n    $CONDA_DIR/bin/conda update --all --quiet --yes && \\\n    conda clean -tipsy && \\\n    fix-permissions $CONDA_DIR\n\n\n# Install Python, Jupyter Notebook and Hub\nRUN conda install -y \\\n    'python=3.6'  \\\n    'notebook=5.7.2' \\\n    'jupyterhub=0.9.4' \\\n    'jupyterlab=0.35.4' \\\n    'jupyter' \\\n    'six'  &&\\\n    fix-permissions $CONDA_DIR\n\nRUN conda create -n deep_learning_python3 \\\n    'python=3.6' \\\n    'notebook=5.7.2' \\\n    'jupyterlab=0.35.4' &&\\\n    fix-permissions $CONDA_DIR\n\n\n# Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work && \\\n    fix-permissions /home/$NB_USER\nRUN mkdir /home/$NB_USER/work/local && \\\n    fix-permissions /home/$NB_USER\n\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m ipykernel install --user --name deep_learning_python3 --display-name 'Deep Learning Python 3'\n\nRUN conda create -n deep_learning_python2 \\\n    'python=2.7' \\\n    'notebook' \\\n    'jupyterlab' &&\\\n    fix-permissions $CONDA_DIR\n\n\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m ipykernel install --user --name deep_learning_python2 --display-name 'Deep Learning Python 2'\n\n\nUSER root\n\nEXPOSE 8888\nWORKDIR $HOME\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\n# Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\n#COPY ~/juypterhub/jupyter_notebook_config.py /etc/jupyter/\n#RUN fix-permissions /etc/jupyter/\n\n# Switch back to Deep_Learner to avoid accidental container runs as root\nUSER $NB_USER\n"
}