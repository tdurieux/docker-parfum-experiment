{
  "startTime": 1674235554042,
  "endTime": 1674235554217,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is used to generate the docker image dsarchive/histomicstk\n# This docker image includes the HistomicsTK python package along with its\n# dependencies.\n#\n# All plugins of HistomicsTK should derive from this docker image\n\nFROM dsarchive/base_docker_image\nMAINTAINER Deepak Chittajallu <deepak.chittajallu@kitware.com>\n\n# copy HistomicsTK files\nENV htk_path=$PWD/HistomicsTK\nRUN mkdir -p $htk_path\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends memcached && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY . $htk_path/\nWORKDIR $htk_path\n\n# Install HistomicsTK and its dependencies\n#   Upgrade setuptools, as the version in Conda won't upgrade cleanly unless it\n# is ignored.\nRUN pip install --no-cache-dir --upgrade --ignore-installed pip setuptools && \\\n    pip install --no-cache-dir 'bokeh>=0.12.14' && \\\n    # Install large_image\n    pip install --no-cache-dir 'large-image[memcached,openslide,tiff,pil]' -f https://manthey.github.io/large_image_wheels && \\\n    pip install --no-cache-dir scikit-build setuptools-scm Cython cmake && \\\n    # Install HistomicsTK\n    pip install --no-cache-dir . && \\\n    # Create separate virtual environments with CPU and GPU versions of tensorflow\n    pip install --no-cache-dir 'virtualenv<16.4.0' && \\\n    virtualenv --system-site-packages /venv-gpu && \\\n    chmod +x /venv-gpu/bin/activate && \\\n    /venv-gpu/bin/pip install --no-cache-dir 'tensorflow-gpu>=1.3.0' && \\\n    # clean up\n    rm -rf /root/.cache/pip/*\n\n# git clone install slicer_cli_web\nRUN mkdir -p /build && \\\n    cd /build && \\\n    git clone https://github.com/girder/slicer_cli_web.git\n\n# Show what was installed\nRUN pip freeze\n\n# pregenerate font cache\nRUN python -c \"from matplotlib import pylab\"\n\n# pregenerate libtiff wrapper.  This also tests libtiff for failures\nRUN python -c \"import libtiff\"\n\n# define entrypoint through which all CLIs can be run\nWORKDIR $htk_path/histomicstk/cli\n\n# Test our entrypoint.  If we have incompatible versions of numpy and\n# openslide, one of these will fail\nRUN python /build/slicer_cli_web/server/cli_list_entrypoint.py --list_cli\nRUN python /build/slicer_cli_web/server/cli_list_entrypoint.py ColorDeconvolution --help\n\nENTRYPOINT [\"/bin/bash\", \"docker-entrypoint.sh\"]\n"
}