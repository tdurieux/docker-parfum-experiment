{
  "startTime": 1674243667630,
  "endTime": 1674243667760,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image.\nFROM intellabs/vdms:base\n\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir opencv-python && \\\n    pip3 install --no-cache-dir face_recognition && \\\n    pip3 install --no-cache-dir numpy && \\\n    pip3 install --no-cache-dir notebook && \\\n    pip3 install --no-cache-dir vdms\n\nRUN jupyter notebook --generate-config && \\\n    echo \"c.NotebookApp.password='sha1:d12a2dd64552:86359144939d58019e6e5b37e373a50426ad7b2b' \">> /root/.jupyter/jupyter_notebook_config.py\n\n# Decompress Demo Database and Sample Files\nRUN cd /vdms && wget -q remis.io/share/demo.tgz\nCOPY examples /vdms/examples\n\n# Setup entry point\n\nRUN echo '#!/bin/bash' > /start.sh && \\\n    echo 'export LD_LIBRARY_PATH=/vdms/utils:/pmgd/lib:$(find /usr/local/lib/ / -type f -name \"*.so\" | xargs dirname | sort | uniq | tr \"\\n\" \":\")' >> /start.sh && \\\n    echo 'cd /vdms' >> /start.sh && \\\n    echo 'rm -rf db' >> /start.sh && \\\n    echo 'tar xzf demo.tgz' >> /start.sh && \\\n    echo './vdms &' >> /start.sh && \\\n    echo 'cd examples' >> /start.sh && \\\n    echo 'jupyter notebook --port=8888 --no-browser --allow-root --ip=0.0.0.0' >> /start.sh && \\\n    chmod 755 /start.sh\n\n# Add Tini. Tini operates as a process subreaper for jupyter.\n# This prevents kernel crashes.\nENV TINI_VERSION v0.6.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\nEXPOSE 8888\nEXPOSE 55555\nCMD [\"/start.sh\"]\n"
}