{
  "startTime": 1674243579818,
  "endTime": 1674243580071,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 133
      }
    }
  ],
  "repairedDockerfile": "# FROM arm64v8/ubuntu:xenial-20180123\nFROM arm64v8/ubuntu:xenial\n\n\n# AUTHOR bmwshop@gmail.com\n# This is the base container for the Jetson TX2 board with drivers (with cuda)\n\n# base URL for NVIDIA libs\nARG URL=https://developer.download.nvidia.com/devzone/devcenter/mobile/jetpack_l4t/4.1.1/xddsn.im/JetPackL4T_4.1.1_b57\n\n# Update packages, install some useful packages\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils bzip2 curl sudo unp && apt-get clean && rm -rf /var/cache/apt && rm -rf /var/lib/apt/lists/*;\nWORKDIR /tmp\n\n# Install drivers first\nRUN curl -f -sL $URL/Jetson_Linux_R31.1.0_aarch64.tbz2 | tar xvfj -\nRUN chown root /etc/passwd /etc/sudoers /usr/lib/sudo/sudoers.so /etc/sudoers.d/README\n\nRUN sed -i \"s/LDK_NV_TEGRA_DIR}\\/config.tbz2/LDK_NV_TEGRA_DIR}\\/config.tbz2 --exclude=etc\\/hosts --exclude=etc\\/hostname/g\"  /tmp/Linux_for_Tegra/apply_binaries.sh\n\n# #RUN curl -sL http://developer.nvidia.com/embedded/dlc/l4t-jetson-tx2-driver-package-28-2 | tar xvfj -\n## RUN chown root /etc/passwd /etc/sudoers /usr/lib/sudo/sudoers.so /etc/sudoers.d/README\nRUN /tmp/Linux_for_Tegra/apply_binaries.sh -r / && rm -fr /tmp/*\n\n## Pull the rest of the jetpack libs for cuda/cudnn and install\n# RUN curl $URL/cuda-repo-l4t-9-0-local_9.0.252-1_arm64.deb -so cuda-repo-l4t_arm64.deb\nRUN curl -f $URL//cuda-repo-l4t-10-0-local-10.0.117_1.0-1_arm64.deb -so cuda-repo-l4t_arm64.deb\n\nRUN curl -f $URL/libcudnn7_7.3.1.20-1+cuda10.0_arm64.deb -so /tmp/libcudnn_arm64.deb\nRUN curl -f $URL/libcudnn7-dev_7.3.1.20-1+cuda10.0_arm64.deb -so /tmp/libcudnn-dev_arm64.deb\n\n## Install libs: L4T, CUDA, cuDNN\nRUN dpkg -i /tmp/cuda-repo-l4t_arm64.deb\nRUN apt-key add /var/cuda-repo-10-0-local-10.0.117/7fa2af80.pub\nRUN apt-get update && apt-get install --no-install-recommends -y cuda-toolkit-10.0 && rm -rf /var/lib/apt/lists/*;\nRUN dpkg -i /tmp/libcudnn_arm64.deb\nRUN dpkg -i /tmp/libcudnn-dev_arm64.deb\n\n###\n# RUN curl $URL/libopencv-dev_3.3.1_arm64.deb -so /tmp/libopencv-dev_arm64.deb\n# RUN dpkg -i /tmp/libopencv-dev_arm64.deb\n#### libglvnd\nWORKDIR /tmp\nRUN apt-get update\n# RUN apt-get install -y libxext-dev libx11-dev x11proto-gl-dev git build-essential automake autogen autoconf libtool python\nRUN apt-get install --no-install-recommends -y libxext-dev libx11-dev x11proto-gl-dev git automake autoconf libtool python pkg-config && rm -rf /var/lib/apt/lists/*;\n\n\nRUN git clone https://github.com/NVIDIA/libglvnd.git\nWORKDIR /tmp/libglvnd\n\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j 6\nRUN make install\nRUN rm -fr /tmp/libglvnd\n\nWORKDIR /\n\n# the required softlinks\nRUN rm -f /usr/lib/aarch64-linux-gnu/libGL.so\nRUN ln -s /usr/lib/aarch64-linux-gnu/libGLU.so /usr/lib/aarch64-linux-gnu/libGL.so\nRUN ln -s /usr/lib/aarch64-linux-gnu/libcuda.so /usr/lib/aarch64-linux-gnu/libcuda.so.1\nRUN ln -s /usr/lib/aarch64-linux-gnu/tegra/libnvidia-ptxjitcompiler.so.31.1.0 /usr/lib/aarch64-linux-gnu/tegra/libnvidia-ptxjitcompiler.so.1\n\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/aarch64-linux-gnu/tegra\nENV PATH=/usr/local/cuda-10.0/bin:$PATH\nRUN apt-get -y autoremove && apt-get -y autoclean\nRUN rm -rf /var/cache/apt\n"
}