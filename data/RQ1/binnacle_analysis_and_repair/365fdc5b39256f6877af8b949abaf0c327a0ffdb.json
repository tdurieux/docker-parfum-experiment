{
  "startTime": 1674234655273,
  "endTime": 1674234655670,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 28,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:stretch-curl\nLABEL maintainer=bruce.gray@acm.org\n\n# When building from scratch:\n#   docker build -t rperl-image .\n#   docker run --name rperl_instance -ti rperl-image\n# After this has been loaded onto the Docker Hub, a much faster command will be available.\n\n# These packages are prerequisites for RPerl or Pluto.\n# Packages named `lib*-perl` are CPAN modules, which install more cleanly\n# (and quickly) as packages than via `cpanm`.\nRUN set -x \\\n && apt-get update \\\n && apt-get --yes install --no-install-recommends apt-utils \\\n && apt-get --yes install --no-install-recommends \\\n     astyle \\\n     bison \\\n     cpanminus \\\n     file \\\n     flex \\\n     g++ \\\n     gcc \\\n     git \\\n     make \\\n     perltidy \\\n     texinfo \\\n     libc6-dev \\\n     gsl-bin \\\n     libgsl-dev \\\n     libgmp-dev \\\n     libpcre2-dev \\\n     libperl-dev \\\n     libssl-dev \\\n     zlib1g-dev \\\n && apt-get --yes install --no-install-recommends \\\n     libalgorithm-diff-perl \\\n     libalgorithm-diff-xs-perl \\\n     libarchive-extract-perl \\\n     libcapture-tiny-perl \\\n     libcpan-changes-perl \\\n     libextutils-cppguess-perl \\\n     libfile-chdir-perl \\\n     libinline-c-perl \\\n     libinline-perl \\\n     libio-socket-ssl-perl \\\n     libipc-run3-perl \\\n     liblocal-lib-perl \\\n     libmath-bigint-gmp-perl \\\n     libmodule-load-conditional-perl \\\n     libmodule-refresh-perl \\\n     libmodule-runtime-perl \\\n     libmodule-scandeps-perl \\\n     libmro-compat-perl \\\n     libpadwalker-perl \\\n     libparse-yapp-perl \\\n     libperl-critic-perl \\\n     libpkgconfig-perl \\\n     libpod-pseudopod-perl \\\n     libscalar-list-utils-perl \\\n     libscope-guard-perl \\\n     libsort-versions-perl \\\n     libtest-class-perl \\\n     libtest-deep-perl \\\n     libtest-differences-perl \\\n     libtest-exception-perl \\\n     libtest-most-perl \\\n     libtest-number-delta-perl \\\n     libtest-simple-perl \\\n     libtest-taint-perl \\\n     libtest-warn-perl \\\n     libtest2-perl \\\n     libtext-asciitable-perl \\\n     libtext-diff-perl \\\n     libtimedate-perl \\\n     libtry-tiny-perl \\\n && apt-get --yes install --no-install-recommends \\\n     less \\\n     vim-tiny \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Build, install, and clean-up Pluto,\n# the automatic polyhedral parallelizer and locality optimizer.\nRUN mkdir /root/pluto_build \\\n && cd    /root/pluto_build \\\n && curl -fsSLO https://github.com/bondhugula/pluto/files/737550/pluto-0.11.4.tar.gz \\\n && tar zxf pluto-0.11.4.tar.gz \\\n && rm      pluto-0.11.4.tar.gz \\\n && ( cd     pluto-0.11.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make test && make install) \\\n && cd /root \\\n && rm -rf /root/pluto_build\n\n# Create unprivileged user, and set to use local::lib\nRUN useradd --create-home --shell /bin/bash rperl \\\n && echo 'eval $( perl -Mlocal::lib )' >> ~rperl/.bashrc\n\nUSER rperl:rperl\nWORKDIR /home/rperl/\n\n# Needed for local::lib\nRUN mkdir perl5\n\n\n# While the `cpanm -v RPerl` command that runs later will load the same\n# pre-requisites as this line, this line exists to move known pre-reqs\n# into another layer of Docker. The modules are ordered to reduce found\n# dependencies.\nRUN eval $(perl -Mlocal::lib) && cpanm \\\n     Math::GSL \\\n     Importer \\\n     Test2::Tools::Tiny \\\n     Term::Table \\\n     Sub::Info \\\n     Test2 \\\n     Test2::Mock \\\n     FFI::CheckLib \\\n     PkgConfig \\\n     Shell::Guess \\\n     Shell::Config::Generate \\\n     Alien::Build \\\n     Alien::Base::ModuleBuild \\\n     Env::ShellWords \\\n     Parse::Yapp \\\n     Parse::Eyapp \\\n     Alien::gmake \\\n     Alien::PCRE2 \\\n     Alien::JPCRE2 \\\n     App::Pod2CpanHtml \\\n     Inline::CPP \\\n     Inline::Filters \\\n     Perl::Tidy \\\n     Alien::astyle\n\n# Main software we are installing; all the above was just to support this.\n# Note that 30 minutes of build time is in the t/{09,12,13}* tests.\nRUN eval $(perl -Mlocal::lib) && cpanm -v RPerl\n\n# Copy examples from the RPerl book to a hackable location.\n# RUN cp -irp /usr/local/share/perl/5.24.1/RPerl/Learning/ .\nRUN cp -irp /home/rperl/perl5/lib/perl5/RPerl/Learning/ .\n\nRUN echo \"See http://rperl.org/learning/ for full text of the book 'Learning RPerl: The Official Introductory-Level Reference, User Manual, and Educational Documentation for Restricted Perl, The Optimizing Perl 5 Compiler'.\" \\\n  > README\n\nCMD [\"bash\"]\n"
}