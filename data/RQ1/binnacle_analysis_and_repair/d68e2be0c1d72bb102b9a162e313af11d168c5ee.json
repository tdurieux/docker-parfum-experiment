{
  "startTime": 1674239840783,
  "endTime": 1674239841109,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 116,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile - Ubuntu Bionic\n# https://github.com/openresty/docker-openresty\n\nARG RESTY_IMAGE_BASE=\"ubuntu\"\nARG RESTY_IMAGE_TAG=\"bionic\"\n\nFROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}\n\nLABEL maintainer=\"Evan Wies <evan@neomantra.net>\"\n\n# Docker Build Arguments\nARG RESTY_IMAGE_BASE=\"ubuntu\"\nARG RESTY_IMAGE_TAG=\"bionic\"\nARG RESTY_VERSION=\"1.15.8.1\"\nARG RESTY_LUAROCKS_VERSION=\"3.1.3\"\nARG RESTY_OPENSSL_VERSION=\"1.1.0j\"\nARG RESTY_PCRE_VERSION=\"8.42\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\"\\\n    --with-file-aio \\\n    --with-http_addition_module \\\n    --with-http_auth_request_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_geoip_module=dynamic \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_mp4_module \\\n    --with-http_random_index_module \\\n    --with-http_realip_module \\\n    --with-http_secure_link_module \\\n    --with-http_slice_module \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-http_v2_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-ipv6 \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-md5-asm \\\n    --with-pcre-jit \\\n    --with-sha1-asm \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-threads \\\n    \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG RESTY_ADD_PACKAGE_BUILDDEPS=\"\"\nARG RESTY_ADD_PACKAGE_RUNDEPS=\"\"\nARG RESTY_EVAL_PRE_CONFIGURE=\"\"\nARG RESTY_EVAL_POST_MAKE=\"\"\n\nLABEL resty_image_base=\"${RESTY_IMAGE_BASE}\"\nLABEL resty_image_tag=\"${RESTY_IMAGE_TAG}\"\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_luarocks_version=\"${RESTY_LUAROCKS_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\nLABEL resty_add_package_builddeps=\"${RESTY_ADD_PACKAGE_BUILDDEPS}\"\nLABEL resty_add_package_rundeps=\"${RESTY_ADD_PACKAGE_RUNDEPS}\"\nLABEL resty_eval_pre_configure=\"${RESTY_EVAL_PRE_CONFIGURE}\"\nLABEL resty_eval_post_make=\"${RESTY_EVAL_POST_MAKE}\"\n\n\n# These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n\n\n# 1) Install apt dependencies\n# 2) Download and untar OpenSSL, PCRE, and OpenResty\n# 3) Build OpenResty\n# 4) Cleanup\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        gettext-base \\\n        libgd-dev \\\n        libgeoip-dev \\\n        libncurses5-dev \\\n        libperl-dev \\\n        libreadline-dev \\\n        libxslt1-dev \\\n        make \\\n        perl \\\n        unzip \\\n        zlib1g-dev \\\n        ${RESTY_ADD_PACKAGE_BUILDDEPS} \\\n        ${RESTY_ADD_PACKAGE_RUNDEPS} \\\n    && cd /tmp \\\n    && if [ -n \"${RESTY_EVAL_PRE_CONFIGURE}\" ]; then eval $(echo ${RESTY_EVAL_PRE_CONFIGURE}); fi \\\n    && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    && curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n    && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n    && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n    && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n    && cd /tmp/openresty-${RESTY_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n    && make -j${RESTY_J} \\\n    && make -j${RESTY_J} install \\\n    && cd /tmp \\\n    && rm -rf \\\n        openssl-${RESTY_OPENSSL_VERSION} \\\n        openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n        openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} \\\n        pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n    && curl -fSL https://luarocks.github.io/luarocks/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/openresty/luajit \\\n        --with-lua=/usr/local/openresty/luajit \\\n        --lua-suffix=jit-2.1.0-beta3 \\\n        --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n    && make build \\\n    && make install \\\n    && cd /tmp \\\n    && if [ -n \"${RESTY_EVAL_POST_MAKE}\" ]; then eval $(echo ${RESTY_EVAL_POST_MAKE}); fi \\\n    && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && if [ -n \"${RESTY_ADD_PACKAGE_BUILDDEPS}\" ]; then DEBIAN_FRONTEND=noninteractive apt-get remove -y --purge ${RESTY_ADD_PACKAGE_BUILDDEPS} ; fi \\\n    && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \\\n    && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n    && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log && rm -rf /var/lib/apt/lists/*;\n\n# Add additional binaries into PATH for convenience\nENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\n\n# Add LuaRocks paths\n# If OpenResty changes, these may need updating:\n#    /usr/local/openresty/bin/resty -e 'print(package.path)'\n#    /usr/local/openresty/bin/resty -e 'print(package.cpath)'\nENV LUA_PATH=\"/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua\"\n\nENV LUA_CPATH=\"/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so\"\n\n# Copy nginx configuration files\nCOPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\n\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon off;\"]\n\n# Use SIGQUIT instead of default SIGTERM to cleanly drain requests\n# See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls\nSTOPSIGNAL SIGQUIT\n"
}