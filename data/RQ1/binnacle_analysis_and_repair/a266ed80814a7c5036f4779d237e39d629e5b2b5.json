{
  "startTime": 1674245404990,
  "endTime": 1674245405562,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 103,
        "lineEnd": 105,
        "columnStart": 8,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License. You may obtain a copy of\n# the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n# License for the specific language governing permissions and limitations under\n# the License.\n\nFROM debian:stretch-slim\n\nLABEL maintainer=\"CouchDB Developers dev@couchdb.apache.org\"\n\n# Add CouchDB user account to make sure the IDs are assigned consistently\nRUN groupadd -g 5984 -r couchdb && useradd -u 5984 -d /opt/couchdb -g couchdb couchdb\n\n# be sure GPG and apt-transport-https are available and functional\nRUN set -ex; \\\n        apt-get update; \\\n        apt-get install -y --no-install-recommends \\\n                apt-transport-https \\\n                ca-certificates \\\n                dirmngr \\\n                gnupg \\\n        ; \\\n        rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root and tini for signal handling and zombie reaping\n# see https://github.com/apache/couchdb-docker/pull/28#discussion_r141112407\nENV GOSU_VERSION 1.11\nENV TINI_VERSION 0.18.0\nRUN set -ex; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\t\\\n# install gosu\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n        echo \"disable-ipv6\" >> ${GNUPGHOME}/dirmngr.conf; \\\n        for server in $(shuf -e pgpkeys.mit.edu \\\n            ha.pool.sks-keyservers.net \\\n            hkp://p80.pool.sks-keyservers.net:80 \\\n            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver $server --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ; \\\n        done; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu nobody true; \\\n    \\\n# install tini\n\twget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-$dpkgArch\"; \\\n\twget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n        echo \"disable-ipv6\" >> ${GNUPGHOME}/dirmngr.conf; \\\n        for server in $(shuf -e pgpkeys.mit.edu \\\n            ha.pool.sks-keyservers.net \\\n            hkp://p80.pool.sks-keyservers.net:80 \\\n            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver $server --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 && break || : ; \\\n        done; \\\n\tgpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/tini.asc; \\\n\tchmod +x /usr/local/bin/tini; \\\n        apt-get purge -y --auto-remove wget; \\\n\ttini --version\n\n# http://docs.couchdb.org/en/latest/install/unix.html#installing-the-apache-couchdb-packages\nENV GPG_COUCH_KEY \\\n# gpg: key D401AB61: public key \"Bintray (by JFrog) <bintray@bintray.com> imported\n       8756C4F765C9AC3CB6B85D62379CE192D401AB61\nRUN set -xe; \\\n        export GNUPGHOME=\"$(mktemp -d)\"; \\\n        echo \"disable-ipv6\" >> ${GNUPGHOME}/dirmngr.conf; \\\n        for server in $(shuf -e pgpkeys.mit.edu \\\n            ha.pool.sks-keyservers.net \\\n            hkp://p80.pool.sks-keyservers.net:80 \\\n            pgp.mit.edu) ; do \\\n                gpg --batch --keyserver $server --recv-keys $GPG_COUCH_KEY && break || : ; \\\n        done; \\\n        gpg --batch --export $GPG_COUCH_KEY > /etc/apt/trusted.gpg.d/couchdb.gpg; \\\n        command -v gpgconf && gpgconf --kill all || :; \\\n        rm -rf \"$GNUPGHOME\"; \\\n        apt-key list\n\nENV COUCHDB_VERSION 2.3.1\n\nRUN echo \"deb https://apache.bintray.com/couchdb-deb stretch main\" > /etc/apt/sources.list.d/couchdb.list\n\n# https://github.com/apache/couchdb-pkg/blob/master/debian/README.Debian\nRUN set -xe; \\\n        apt-get update; \\\n\n        echo \"couchdb couchdb/mode select none\" | debconf-set-selections; \\\n# we DO want recommends this time\n        DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n                couchdb=\"$COUCHDB_VERSION\"~stretch \\\n        ; \\\n# Undo symlinks to /var/log and /var/lib\n        rmdir /var/lib/couchdb /var/log/couchdb; \\\n        rm /opt/couchdb/data /opt/couchdb/var/log; \\\n        mkdir -p /opt/couchdb/data /opt/couchdb/var/log; \\\n        chown couchdb:couchdb /opt/couchdb/data /opt/couchdb/var/log; \\\n        chmod 777 /opt/couchdb/data /opt/couchdb/var/log; \\\n# Remove file that sets logging to a file\n        rm /opt/couchdb/etc/default.d/10-filelog.ini; \\\n        rm -rf /var/lib/apt/lists/*\n\n# Add configuration\nCOPY 10-docker-default.ini /opt/couchdb/etc/default.d/\nCOPY vm.args /opt/couchdb/etc/\nCOPY docker-entrypoint.sh /usr/local/bin\nRUN ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh # backwards compat\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\n\n# Setup directories and permissions\nRUN find /opt/couchdb \\! \\( -user couchdb -group couchdb \\) -exec chown -f couchdb:couchdb '{}' +\nVOLUME /opt/couchdb/data\n\n# 5984: Main CouchDB endpoint\n# 4369: Erlang portmap daemon (epmd)\n# 9100: CouchDB cluster communication port\nEXPOSE 5984 4369 9100\nCMD [\"/opt/couchdb/bin/couchdb\"]\n"
}