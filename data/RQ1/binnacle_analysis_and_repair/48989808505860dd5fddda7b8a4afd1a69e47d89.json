{
  "startTime": 1674239236071,
  "endTime": 1674239236221,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-slim\nMAINTAINER Jannis Leidel <jezdez@mozilla.com>\n\n# add a non-privileged user for installing and running the application\nRUN mkdir /app && \\\n    chown 10001:10001 /app && \\\n    groupadd --gid 10001 app && \\\n    useradd --no-create-home --uid 10001 --gid 10001 --home-dir /app app\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apt-transport-https build-essential curl git libpq-dev python-dev \\\n        default-libmysqlclient-dev gettext sqlite3 libffi-dev libsasl2-dev \\\n        lsb-release gnupg vim && \\\n    CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && \\\n    apt-get remove -y lsb-release gnupg && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Python dependencies\nCOPY requirements.txt /tmp/\n# Switch to /tmp to install dependencies outside home dir\nWORKDIR /tmp\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN export SLUGIFY_USES_TEXT_UNIDECODE=yes && pip install --no-cache-dir -r requirements.txt\n\n# Switch back to home directory\nWORKDIR /app\n\nUSER 10001\n\nENV PYTHONUNBUFFERED=1 \\\n    # DEV_USERNAME= \\\n    AWS_REGION=us-west-2 \\\n    # AWS_ACCESS_KEY_ID= \\\n    # AWS_SECRET_ACCESS_KEY= \\\n    SPARK_BUCKET=telemetry-spark-emr-2 \\\n    AIRFLOW_BUCKET=telemetry-airflow \\\n    PRIVATE_OUTPUT_BUCKET=telemetry-test-bucket \\\n    PUBLIC_OUTPUT_BUCKET=telemetry-test-bucket \\\n    EMR_KEY_NAME=20161025-dataops-dev \\\n    EMR_FLOW_ROLE=telemetry-spark-cloudformation-TelemetrySparkInstanceProfile-1SATUBVEXG7E3 \\\n    EMR_SERVICE_ROLE=EMR_DevRole \\\n    EMR_INSTANCE_TYPE=c3.4xlarge \\\n    PORT=8000 \\\n    DEPLOY_ENVIRONMENT=dev \\\n    DEVELOPMENT=1 \\\n    DEPLOY_TAG=master \\\n    ARTIFACTS_BUCKET=net-mozaws-data-us-west-2-ops-ci-artifacts \\\n    DATABRICKS_DEFAULT_IAM=arn:aws:iam::144996185633:instance-profile/databricks-ec2\n\n# Airflow configuration can be set here using the following format:\n# $AIRFLOW__{SECTION}__{KEY}\n# See also: https://airflow.apache.org/configuration.html\n\nENV AIRFLOW_HOME=/app \\\n    AIRFLOW_AUTHENTICATE=False \\\n    AIRFLOW_AUTH_BACKEND=airflow.contrib.auth.backends.password_auth \\\n    AIRFLOW_BROKER_URL=redis://redis:6379/0 \\\n    AIRFLOW_RESULT_URL=redis://redis:6379/0 \\\n    AIRFLOW_FLOWER_PORT=\"5555\" \\\n    AIRFLOW_DATABASE_URL=mysql://root:secret@db:3306/airflow \\\n    AIRFLOW__CORE__FERNET_KEY=\"0000000000000000000000000000000000000000000=\" \\\n    AIRFLOW_SECRET_KEY=\"000000000000000000000000000000000000000000=\" \\\n    # AIRFLOW_SMTP_HOST= \\\n    # AIRFLOW_SMTP_USER= \\\n    # AIRFLOW_SMTP_PASSWORD= \\\n    AIRFLOW_SMTP_FROM=telemetry-alerts@airflow.dev.mozaws.net \\\n    AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT=False \\\n    AIRFLOW_EMAIL_BACKEND=\"airflow.macros.log_email_backend.log_email_backend\" \\\n    URL=\"http://localhost:8000\" \\\n    WEBSERVER_USE_RBAC=\"False\"\n\nEXPOSE $PORT\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/bin/run\"]\n\nCMD [\"web\"]\n"
}