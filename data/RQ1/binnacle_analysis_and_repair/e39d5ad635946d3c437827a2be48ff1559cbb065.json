{
  "startTime": 1674243682555,
  "endTime": 1674243682945,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 42,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nLABEL maintainer=\"felix.hammerl@gmail.com\"\n\nRUN yum -y -q update\nRUN yum -y -q remove iputils\nRUN yum -y -q install ca-certificates && rm -rf /var/cache/yum\nRUN yum -y -q install http://rpms.remirepo.net/enterprise/remi-release-7.rpm && rm -rf /var/cache/yum\nRUN yum-config-manager -y -q --enable remi-php72\nRUN yum -y -q install wget epel-release openssl openssl-devel tar unzip \\\n\t\t\t\t\tlibffi-devel python-devel redhat-rpm-config git-core \\\n\t\t\t\t\tgcc gcc-c++ make zlib-devel pcre-devel \\\n        java-1.8.0-openjdk.x86_64 which \\\n        php php-cli && rm -rf /var/cache/yum\n\nENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH\n\nENV NODE_VERSION=10.16.0\nRUN curl -f --silent --location https://rpm.nodesource.com/setup_10.x | bash -\nRUN yum -y install nodejs-${NODE_VERSION} && rm -rf /var/cache/yum\n\nRUN node --version && \\\n    npm --version\n\nRUN curl -f --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo\nRUN yum -y -q update\nRUN yum -y -q install yarn && rm -rf /var/cache/yum\n\nRUN yum -y -q clean all\n\nRUN curl -f \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\"\nRUN python get-pip.py\nRUN pip install --no-cache-dir safety==1.8.4 piprot==0.9.10 bandit==1.5.1\n\nENV RUBY_VERSION=2.6.3\nRUN curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import - && \\\n    curl -f -sSL https://rvm.io/pkuczynski.asc | gpg2 --import - && \\\n    curl -f -sSL https://raw.githubusercontent.com/rvm/rvm/stable/binscripts/rvm-installer -o rvm-installer && \\\n    curl -f -sSL https://raw.githubusercontent.com/rvm/rvm/stable/binscripts/rvm-installer.asc -o rvm-installer.asc && \\\n    gpg2 --verify rvm-installer.asc rvm-installer && \\\n    bash rvm-installer\nRUN echo 'source /etc/profile.d/rvm.sh' >> /etc/profile && \\\n    /bin/bash -l -c \"rvm requirements;\" && \\\n    rvm install ${RUBY_VERSION}\nRUN /bin/bash -l -c \"rvm use --default ${RUBY_VERSION}\"\nENV PATH \"/usr/local/rvm/gems/ruby-${RUBY_VERSION}/bin/:$PATH\"\nRUN /bin/bash -l -c \"gem install bundler:2.0.1 bundler-audit:0.6.1 brakeman:4.5.1\"\nRUN /bin/bash -l -c \"bundle audit update\"\n\nENV FINDSECBUGS_VERSION=1.8.0\nARG FINDSECBUGS_FOLDER=/usr/local/opt/findsecbugs\nRUN mkdir -p ${FINDSECBUGS_FOLDER} && cd ${FINDSECBUGS_FOLDER} && \\\n    wget --quiet https://github.com/find-sec-bugs/find-sec-bugs/releases/download/version-${FINDSECBUGS_VERSION}/findsecbugs-cli-${FINDSECBUGS_VERSION}.zip && \\\n    unzip -q findsecbugs-cli-${FINDSECBUGS_VERSION}.zip && \\\n    rm findsecbugs.sh\nCOPY scripts/findsecbugs.sh ${FINDSECBUGS_FOLDER}/findsecbugs.sh\nRUN chmod +x ${FINDSECBUGS_FOLDER}/findsecbugs.sh && \\\n    ln -s ${FINDSECBUGS_FOLDER}/findsecbugs.sh /usr/local/bin/findsecbugs\n\nENV OWASP_VERSION=5.0.0\nARG OWASP_DEP_FOLDER=/usr/local/bin/owaspdependency\nRUN mkdir $OWASP_DEP_FOLDER && cd $OWASP_DEP_FOLDER && \\\n    wget --quiet https://dl.bintray.com/jeremy-long/owasp/dependency-check-${OWASP_VERSION}-release.zip && \\\n    unzip -q dependency-check-${OWASP_VERSION}-release.zip && \\\n    chmod +x $OWASP_DEP_FOLDER/dependency-check/bin/dependency-check.sh && \\\n    rm dependency-check-${OWASP_VERSION}-release.zip && \\\n    mv dependency-check/bin/dependency-check.sh dependency-check/bin/dependency-check\nENV PATH=$OWASP_DEP_FOLDER/dependency-check/bin:$PATH\nRUN dependency-check --updateonly\n\nRUN cd /usr/local/bin && \\\n    wget --quiet https://get.sensiolabs.org/security-checker.phar && \\\n    chmod +x security-checker.phar\n\nRUN mkdir -p /hawkeye\nCOPY ./ /hawkeye\nRUN cd /hawkeye && \\\n    npm install --production --quiet && npm cache clean --force;\n\nWORKDIR /target\n\nENV PATH=/hawkeye/bin:$PATH\nENTRYPOINT [\"hawkeye\", \"scan\"]\n"
}