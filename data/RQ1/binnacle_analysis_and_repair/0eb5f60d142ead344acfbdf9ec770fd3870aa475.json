{
  "startTime": 1674246797388,
  "endTime": 1674246797520,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-jessie as node\nWORKDIR /app/ui\n\n# Cache deps\nCOPY ui/package.json ui/yarn.lock ./\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n# Build\nCOPY ui /app/ui\nRUN yarn build\n\nFROM rust:latest as rust\n\n# Install musl\nRUN apt-get update && apt-get install --no-install-recommends musl-tools -y && rm -rf /var/lib/apt/lists/*;\nRUN rustup target add x86_64-unknown-linux-musl\n\n# Cache deps\nWORKDIR /app\nRUN USER=root cargo new server\nWORKDIR /app/server\nCOPY server/Cargo.toml server/Cargo.lock ./\nRUN  mkdir -p ./src/bin \\\n  && echo 'fn main() { println!(\"Dummy\") }' > ./src/bin/main.rs\nRUN RUSTFLAGS=-Clinker=musl-gcc cargo build --release --target=x86_64-unknown-linux-musl\nRUN rm -f ./target/x86_64-unknown-linux-musl/release/deps/lemmy_server*\nCOPY server/src ./src/\nCOPY server/migrations ./migrations/\n\n# build for release\nRUN RUSTFLAGS=-Clinker=musl-gcc cargo build --frozen --release --target=x86_64-unknown-linux-musl\n\n# Get diesel-cli on there just in case\n# RUN cargo install diesel_cli --no-default-features --features postgres\n\nFROM alpine:latest\n\n# Install libpq for postgres\nRUN apk add --no-cache libpq\n\n# Copy resources\nCOPY --from=rust /app/server/target/x86_64-unknown-linux-musl/release/lemmy_server /app/lemmy\nCOPY --from=node /app/ui/dist /app/dist\nRUN addgroup -g 1000 lemmy\nRUN adduser -D -s /bin/sh -u 1000 -G lemmy lemmy\nRUN chown lemmy:lemmy /app/lemmy\nUSER lemmy\nEXPOSE 8536\nCMD [\"/app/lemmy\"]\n"
}