{
  "startTime": 1674249296077,
  "endTime": 1674249296240,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This is a simple image used to assist with deploying portable\n# binaries, by allowing us to build in a virtual centos 5\n# environment.\n#\n# At present we simply add all of the projects build requirements onto\n# the centos5 base image.\n#\n# This version is extended to build gcc 4.9 from source. The purpose is\n# to investigate a small performance gap in the deployed binary compared\n# to our non-docker based deployment:\n#\n\nFROM astj/centos5-vault\n\n# add standard centos5 packages && swap in newer cmake as default:\nRUN yum install -y bzip2 make gcc gcc-c++ tar wget zlib-devel git && \\\n    yum install -y epel-release && \\\n    yum install -y cmake28 && cd /usr/bin && ln -s cmake28 cmake && rm -rf /var/cache/yum\n\n# build gcc 4.9 from source\nRUN mkdir -p /download/gcc-4.9.3 && cd /download/gcc-4.9.3 && wget ftp://ftp.gnu.org/gnu/gcc/gcc-4.9.3/gcc-4.9.3.tar.bz2 && \\\n    tar -xjf gcc-4.9.3.tar.bz2 && cd gcc-4.9.3 && ./contrib/download_prerequisites && \\\n    cd .. && mkdir -p build && cd build && \\\n    ../gcc-4.9.3/configure \\\n        --prefix=/opt/gcc-4.9.3 \\\n        --disable-multilib \\\n        --disable-bootstrap \\\n        --enable-cloog-backend=isl \\\n        --enable-lto \\\n        --with-system-zlib \\\n        --enable-languages=c,c++ && \\\n    make -j2 && make install && cd / && rm -rf /download && \\\n    GCC_PATH=/opt/gcc-4.9.3 && SPECS_PATH=${GCC_PATH}/lib/gcc/x86_64-unknown-linux-gnu/4.9.3 && SPECS_FILE=${SPECS_PATH}/specs && \\\n    ${GCC_PATH}/bin/gcc -dumpspecs > ${SPECS_FILE} && echo '*link:'$'\\n'+ -R ${GCC_PATH}/lib64$'\\n'  >> ${SPECS_FILE} && rm gcc-4.9.3.tar.bz2\n\n# Prior to build configuration, set CC/CXX to new gcc version:\nENV CC /opt/gcc-4.9.3/bin/gcc\nENV CXX /opt/gcc-4.9.3/bin/g++\n"
}