{
  "startTime": 1674239593675,
  "endTime": 1674239594269,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 5,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nesslinger/docker-alpine-java\n\nMAINTAINER bwnyasse\n\nARG version\n# ARG proxy\n#\n# ENV http_proxy ${proxy}\n# ENV https_proxy ${proxy}\n\n#==================================================================================\n#==================================================================================\n# ============ Fluentd SETUP\n#==================================================================================\n#==================================================================================\n\n# ============== Inspiring from Official  : https://github.com/fluent/fluentd-docker-image/blob/master/Dockerfile\n\n# Do not split this into multiple RUN!\n# Docker creates a layer for every RUN-Statement\n# therefore an 'apk delete build*' has no effect\nRUN apk --no-cache add \\\n                   build-base \\\n                   ca-certificates \\\n                   ruby \\\n                   ruby-irb \\\n                   ruby-dev && \\\n    echo 'gem: --no-document' >> /etc/gemrc && \\\n    gem install oj && \\\n    gem install json -v '1.8.3' && \\\n    gem install fluentd -v 0.12.31 && \\\n    apk del build-base ruby-dev && \\\n    rm -rf /tmp/* /var/tmp/* /var/cache/apk/* /usr/lib/ruby/gems/*/cache/*.gem\n\n\n# for log storage (maybe shared with host)\nRUN mkdir -p /fluentd/log && \\\n\n    # configuration/plugins path (default: copied from .)\n    mkdir -p /fluentd/etc /fluentd/plugins\n\n\n# Tell ruby to install packages as user\nRUN echo \"gem: --user-install --no-document\" >> ~/.gemrc\nENV PATH /root/.gem/ruby/2.3.0/bin:$PATH\nENV GEM_PATH /root/.gem/ruby/2.3.0:$GEM_PATH\n\nENV FLUENTD_OPT=\"\"\nENV FLUENTD_CONF=\"fluent.conf\"\n\n\n# ============ start - fluent configuration\n# Install fluent plugins\nRUN gem install fluent-plugin-elasticsearch -v 1.7.0 && \\\n    gem install fluent-plugin-parser -v 0.6.1 && \\\n    gem install fluent-plugin-concat -v 0.6.2 && \\\n    gem install fluent-plugin-record-reformer -v 0.8.2 && \\\n    gem install fluent-plugin-better-timestamp -v 0.1.0 && \\\n    gem install fluent-plugin-color-stripper -v 0.0.3\n\nADD fluentd/manage /fluentd/etc/\n\nCOPY fluentd/fluent.conf /fluentd/etc/\n# ============ end - fluent configuration\n\nEXPOSE 24224 5140\n\n#==================================================================================\n#==================================================================================\n# ============ ElasticSearch SETUP\n#==================================================================================\n#==================================================================================\n\n# ============== Inspiring from https://github.com/joschi/docker-alpine-elasticsearch/blob/master/Dockerfile\n\n\nENV ELASTICSEARCH_MAJOR 2.3\nENV ELASTICSEARCH_VERSION 2.3.5\nENV ELASTICSEARCH_URL_BASE https://download.elasticsearch.org/elasticsearch/elasticsearch\nENV PATH /opt/elasticsearch/bin:$PATH\n\n\nRUN set -ex \\\n\t&& apk --update add bash curl \\\n\t&& rm -rf /var/cache/apk/*\nRUN curl -fsSL -o /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.0.0/dumb-init_1.0.0_amd64 \\\n\t&& chmod 0755 /usr/bin/dumb-init\nRUN set -x \\\n\t&& curl -fsSL -o /usr/local/bin/gosu https://github.com/tianon/gosu/releases/download/1.3/gosu-amd64 \\\n\t&& chmod +x /usr/local/bin/gosu\nRUN set -ex \\\n\t&& mkdir -p /opt \\\n\t&& curl -fsSL -o /tmp/elasticsearch.tar.gz $ELASTICSEARCH_URL_BASE/elasticsearch-$ELASTICSEARCH_VERSION.tar.gz \\\n\t&& tar -xzf /tmp/elasticsearch.tar.gz -C /opt \\\n\t&& rm -f /tmp/elasticsearch.tar.gz \\\n\t&& mv /opt/elasticsearch-$ELASTICSEARCH_VERSION /opt/elasticsearch \\\n\t&& for path in \\\n\t\t/opt/elasticsearch/data \\\n\t\t/opt/elasticsearch/logs \\\n\t\t/opt/elasticsearch/config \\\n\t\t/opt/elasticsearch/config/scripts; do mkdir -p \"$path\"; done\n\t# && addgroup elasticsearch \\\n\t# && adduser -D -G elasticsearch -h /opt/elasticsearch elasticsearch \\\n\nCOPY es/config /opt/elasticsearch/config\n\nVOLUME /opt/elasticsearch/data\n\nEXPOSE 9200 9300\n\n#==================================================================================\n#==================================================================================\n# ============ ElasticSearch DUMP SETUP\n#==================================================================================\n#==================================================================================\nRUN apk add --update nodejs \\\n    && rm -rf /var/cache/apk/* \\\n    && npm install --global --production --no-optional elasticdump@$ELASTICSEARCH_DUMP_VERSION && npm cache clean --force;\n\n#==================================================================================\n#==================================================================================\n# ============ ElasticSearch Curator SETUP\n#==================================================================================\n#==================================================================================\nRUN apk add --no-cache --update nodejs \\\n  && apk add --no-cache py-pip \\\n  && pip install --no-cache-dir elasticsearch-curator==3.5.1\n\n#==================================================================================\n#==================================================================================\n# ============ lighttpd SETUP\n#==================================================================================\n#==================================================================================\n# RUN apk add --update \\\n#     lighttpd \\\n#   && rm -rf /var/cache/apk/*\n#\n# RUN adduser www-data -G www-data -H -s /bin/false -D\n#\n# USER led\n# ADD www /var/www/\n# USER root\n#\n# RUN chown -R led:led /var/www/\n#\n# COPY lighttpd/lighttpd.conf /etc/lighttpd/\n#\n# EXPOSE 8080\n\n#==================================================================================\n#==================================================================================\n# ============ NGINX SETUP\n#==================================================================================\n#==================================================================================\n# Install nginx\nRUN apk add --update nginx && \\\n    rm -rf /var/cache/apk/* && \\\n    adduser www-data -G www-data -H -s /bin/false -D && \\\n    chown -R www-data:www-data /var/lib/nginx\n\nADD www /var/www/\n\nCOPY nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\nCOPY nginx/includes/ /etc/nginx/includes/\nCOPY nginx/404.html /var/www/\n\n# Expose the ports for nginx\nEXPOSE 8080 443\n\n#==================================================================================\n#==================================================================================\n# ============ LED customization Service SETUP\n#==================================================================================\n#==================================================================================\n\nENV ES_SERVER_HOST_ADDRESS localhost\nENV ES_PORT 9200\nENV ES_INDEX fluentd\nENV APP_VERSION ${version}\nENV ES_CURATOR_DAY_OLDER_THAN 7\nENV ES_CURATOR_SCHEDULE 0 22 * * *\n\n#== Install HEAD plugin\nRUN /opt/elasticsearch/bin/plugin install mobz/elasticsearch-head\nENTRYPOINT [\n\n# ============ custom sh script\nRUN mkdir -p /opt/led/.led-scripts \\\n  && mkdir -p /var/log/led\n\nCOPY scripts/env.sh /opt/led/.led-scripts/\nCOPY scripts/infos.sh /opt/led/.led-scripts/\nCOPY scripts/common.sh /opt/led/.led-scripts/\nCOPY scripts/healthcheck.sh /opt/led/.led-scripts/\nCOPY scripts/start.sh /opt/led/.led-scripts/\nCOPY scripts/update_cron_curator.sh /opt/led/.led-scripts/\nCOPY scripts/get_cron_curator_value.sh /opt/led/.led-scripts/\nCOPY scripts/led_curator /bin/\nCOPY scripts/motd /etc/motd\n\nRUN sed -i 's/\\r$//' /opt/led/.led-scripts/env.sh && chmod +x /opt/led/.led-scripts/env.sh \\\n && sed -i 's/\\r$//' /opt/led/.led-scripts/infos.sh && chmod +x /opt/led/.led-scripts/infos.sh \\\n && sed -i 's/\\r$//' /opt/led/.led-scripts/common.sh && chmod +x /opt/led/.led-scripts/common.sh \\\n && sed -i 's/\\r$//' /opt/led/.led-scripts/healthcheck.sh && chmod +x /opt/led/.led-scripts/healthcheck.sh \\\n && sed -i 's/\\r$//' /opt/led/.led-scripts/start.sh && chmod +x /opt/led/.led-scripts/start.sh \\\n && sed -i 's/\\r$//' /opt/led/.led-scripts/update_cron_curator.sh && chmod +x /opt/led/.led-scripts/update_cron_curator.sh \\\n && sed -i 's/\\r$//' /opt/led/.led-scripts/get_cron_curator_value.sh && chmod +x /opt/led/.led-scripts/get_cron_curator_value.sh \\\n && sed -i 's/\\r$//' /bin/led_curator && chmod +x /bin/led_curator \\\n && sed -i 's/\\r$//' /etc/motd && chmod +x /etc/motd \\\n && echo '[ ! -z \"$TERM\" -a -r /etc/motd ] && cat /etc/motd' >> /root/.bashrc\n\nENV PATH=\"/opt/led/.led-scripts:${PATH}\"\n# =========== end - custom sh\n\n# ============= Server Config Directory\nADD server/conf /opt/led/conf/\nADD server/target/*swarm.jar /opt/led/app.jar\n\nVOLUME /opt/led/conf/\n\nENTRYPOINT [\"start.sh\" ]\nCMD [\"\"]\n"
}