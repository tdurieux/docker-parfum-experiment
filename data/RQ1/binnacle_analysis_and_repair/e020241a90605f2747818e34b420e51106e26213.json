{
  "startTime": 1674234222832,
  "endTime": 1674234222956,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM java:8\n\nRUN curl -f -O https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz && \\\n    tar -xvf go1.8.linux-amd64.tar.gz && \\\n    mv go /usr/local && rm go1.8.linux-amd64.tar.gz\n\nENV PATH=$PATH:/usr/local/go/bin \\\n    GOPATH=/go\nRUN mkdir $GOPATH\n\nENV PATH=$PATH:/go/bin \\\n    CCTR=$GOPATH/src/github.com/codeclimate/test-reporter\nRUN mkdir -p $CCTR\n\nWORKDIR $CCTR\nCOPY . .\nRUN go install -v && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y maven && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/codeclimate-testing/test-reporter-cobertura-example.git\nWORKDIR test-reporter-cobertura-example\nRUN mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B\n\nRUN echo \"testing\" > ignore.me && \\\n  git checkout 0.8 && \\\n  git config --global user.email \"you@example.com\" && \\\n  git config --global user.name \"Your Name\" && \\\n  git add ignore.me && \\\n  git commit -m \"testing\"\n\nRUN mvn cobertura:cobertura\n\nENV CC_TEST_REPORTER_ID=c4881e09870b0fac1291c93339b36ffe36210a2645c1ad25e52d8fda3943fb4d\nRUN test-reporter format-coverage -d -t cobertura target/site/cobertura/coverage.xml && \\\n    test-reporter upload-coverage -d\n"
}