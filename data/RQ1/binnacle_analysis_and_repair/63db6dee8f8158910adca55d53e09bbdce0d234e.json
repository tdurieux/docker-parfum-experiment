{
  "startTime": 1674243512662,
  "endTime": 1674243512756,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 87,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Iliyan Trifonov <iliyan.trifonov@gmail.com>\n\n#use mirrors for faster apt downloads no matter where the machine that builds the image is\nRUN echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted universe multiverse\" > /etc/apt/sources.list; \\\n\techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-updates main restricted universe multiverse\" >> /etc/apt/sources.list; \\\n\techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-backports main restricted universe multiverse\" >> /etc/apt/sources.list; \\\n\techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-security main restricted universe multiverse\" >> /etc/apt/sources.list\n\n#install required software before using nvm/node/npm/bower\nRUN apt-get update && apt-get install --no-install-recommends -y curl git python build-essential && rm -rf /var/lib/apt/lists/*;\n\n#add user node and use it to install node/npm and run the app\nRUN useradd --home /home/node -m -U -s /bin/bash node\n\n#allow some limited sudo commands for user `node`\nRUN echo 'Defaults !requiretty' >> /etc/sudoers; \\\n    echo 'node ALL= NOPASSWD: /usr/sbin/dpkg-reconfigure -f noninteractive tzdata, /usr/bin/tee /etc/timezone, /bin/chown -R node\\:node /myapp' >> /etc/sudoers;\n\n#run all of the following commands as user node from now on\nUSER node\n\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash\n\n#change it to your required node version\nENV NODE_VERSION 7.6.0\n\n#needed by nvm install\nENV NVM_DIR /home/node/.nvm\n\n#install the specified node version and set it as the default one, install the global npm packages\nRUN . ~/.nvm/nvm.sh && nvm install $NODE_VERSION && nvm alias default $NODE_VERSION && npm install -g bower pm2 --user \"node\" && npm cache clean --force;\n\n#on container's boot the run script will update/install all required npm/bower packages for the app and run the app\nADD ./run_all.sh /run_all.sh\n\n#exposes port 3000 but your app may use any port specified in it\nEXPOSE 3000\n\n#/run_all.sh does everything required on container's boot\nCMD [\"/bin/bash\", \"/run_all.sh\"]\n"
}