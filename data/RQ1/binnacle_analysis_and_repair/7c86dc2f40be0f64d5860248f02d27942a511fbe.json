{
  "startTime": 1674241648456,
  "endTime": 1674241648585,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2016 - 2018  Ternaris.\n# SPDX-License-Identifier: AGPL-3.0-only\n\nFROM ros:kinetic-ros-base\n\n# This warning can simply be ignore:\n# debconf: delaying package configuration, since apt-utils is not installed\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        bash-completion \\\n        bc \\\n        capnproto \\\n        curl \\\n        ffmpeg \\\n        iputils-ping \\\n        jq \\\n        less \\\n        libcapnp-dev \\\n\tlibffi-dev \\\n\tlibfreetype6-dev \\\n        libjpeg-dev \\\n\tlibpng-dev \\\n        libssl-dev \\\n        libz-dev \\\n        locales \\\n        lsof \\\n        man \\\n        python-cv-bridge \\\n        python2.7-dev \\\n        python-opencv \\\n        python-pip \\\n        ros-kinetic-laser-geometry \\\n        rsync \\\n        sqlite3 \\\n        ssh \\\n        unzip \\\n        vim \\\n    && rm -rf /var/lib/apt/lists/*\nRUN pip install --no-cache-dir -U pip==10.0.1 pip-tools==2.0.2 setuptools==39.2.0 virtualenv==16.0.0 wheel==0.31.0\n\nRUN locale-gen en_US.UTF-8; dpkg-reconfigure -f noninteractive locales\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nARG MARV_UID=1000\nARG MARV_GID=1000\n\nRUN groupadd -g $MARV_GID marv && \\\n    useradd -m -u $MARV_UID -g $MARV_GID --shell /bin/bash marv\n\nARG venv=/opt/marv\n\nENV MARV_VENV=$venv\nRUN bash -c '\\\nif [[ -n \"$MARV_VENV\" ]]; then \\\n    mkdir $MARV_VENV; \\\n    chown marv:marv $MARV_VENV; \\\nfi'\n\nUSER marv\n\nCOPY requirements.txt /\nRUN bash -c '\\\nif [[ -n \"$MARV_VENV\" ]]; then \\\n    virtualenv -p python2.7 --system-site-packages $MARV_VENV; \\\n    $MARV_VENV/bin/pip install -U pip==10.0.1 setuptools==39.2.0 wheel==0.31.0; \\\n    $MARV_VENV/bin/pip install -U -r /requirements.txt; \\\n    $MARV_VENV/bin/pip install -U --force-reinstall --no-binary :all: uwsgi; \\\n    sed -e \"s|^backend .*|backend : Agg|\" \\\n        -i $MARV_VENV/lib/python2.7/site-packages/matplotlib/mpl-data/matplotlibrc; \\\nfi'\n\nARG code=code\n\nCOPY --chown=marv:marv ${code:-requirements.txt} /home/marv/code\nRUN bash -c '\\\nif [[ -z \"$code\" ]]; then \\\n    rm /home/marv/code; \\\nfi'\n\nARG docs=docs\n\nCOPY --chown=marv:marv CHANGES.rst /home/marv/CHANGES.rst\nCOPY --chown=marv:marv tutorial /home/marv/tutorial\nCOPY --chown=marv:marv ${docs:-requirements.txt} /home/marv/docs\nRUN bash -c '\\\nif [[ -z \"$docs\" ]]; then \\\n    rm -r /home/marv/docs /home/marv/CHANGES.rst /home/marv/tutorial; \\\nfi'\n\nARG scripts=scripts\n\nCOPY --chown=marv:marv ${scripts:-requirements.txt} /home/marv/scripts\nRUN bash -c '\\\nif [[ -z \"$scripts\" ]]; then \\\n    rm /home/marv/scripts; \\\nfi'\n\nARG version=\nARG pypi_install_args=\n\nRUN bash -c '\\\nif [[ -n \"$MARV_VENV\" ]]; then \\\n    if [[ -z \"$code\" ]]; then \\\n        ${MARV_VENV}/bin/pip install ${pypi_install_args} marv-robotics${version:+==${version}}; \\\n    else \\\n        find /home/marv/code -maxdepth 2 -name setup.py -execdir ${MARV_VENV}/bin/pip install --no-deps . \\; ;\\\n        ${MARV_VENV}/bin/pip install /home/marv/code/marv-robotics; \\\n        (source \"/opt/ros/$ROS_DISTRO/setup.bash\"; source $MARV_VENV/bin/activate; /home/marv/scripts/build-docs); \\\n        ${MARV_VENV}/bin/pip install -U --no-deps /home/marv/code/marv-robotics; \\\n    fi \\\nfi'\n\nUSER root\n\nCOPY .docker/entrypoint.sh /marv_entrypoint.sh\nCOPY .docker/env.sh /etc/profile.d/marv_env.sh\nRUN echo 'source /etc/profile.d/marv_env.sh' >> /etc/bash.bashrc\n\nENV ACTIVATE_VENV=1\nENTRYPOINT [\"/marv_entrypoint.sh\"]\nCMD [\"/opt/marv/bin/uwsgi\", \"--die-on-term\", \"--strict\", \"--uid\", \"marv\", \"--gid\", \"marv\", \"--ini\", \"uwsgi.conf\"]\n"
}