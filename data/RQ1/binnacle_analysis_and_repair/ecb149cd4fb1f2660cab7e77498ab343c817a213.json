{
  "startTime": 1674248221396,
  "endTime": 1674248222488,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 249,
        "lineEnd": 249,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 108,
        "columnEnd": 150
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 2,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nRUN apk add --no-cache bash supervisor curl\n\n# Install nginx\n\nENV NGINX_VERSION 1.17.0\n\n# Add PHP public keys\nADD https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub\n\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n  && CONFIG=\"\\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-threads \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-stream_ssl_preread_module \\\n    --with-stream_realip_module \\\n    --with-stream_geoip_module=dynamic \\\n    --with-http_slice_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-compat \\\n    --with-file-aio \\\n    --with-http_v2_module \\\n    --add-module=/usr/src/ngx_http_redis-0.3.9 \\\n    --add-module=/usr/src/ngx_devel_kit-0.3.0 \\\n    --add-module=/usr/src/set-misc-nginx-module-0.32 \\\n    --add-module=/usr/src/ngx_http_substitutions_filter_module-0.6.4 \\\n  \" \\\n  && addgroup -S nginx \\\n  && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n  && apk add --no-cache --virtual .build-deps \\\n    gcc \\\n    libc-dev \\\n    make \\\n    openssl-dev \\\n    pcre-dev \\\n    zlib-dev \\\n    linux-headers \\\n    curl \\\n    gnupg1 \\\n    libxslt-dev \\\n    gd-dev \\\n    geoip-dev \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \\\n  && curl -fSL https://people.freebsd.org/~osa/ngx_http_redis-0.3.9.tar.gz -o http-redis.tar.gz \\\n  && curl -fSL https://github.com/openresty/set-misc-nginx-module/archive/v0.32.tar.gz -o set-misc.tar.gz \\\n  && curl -fSL https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz -o ngx_devel_kit.tar.gz \\\n  && curl -fSL https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/v0.6.4.tar.gz -o ngx_http_substitutions_filter_module.tar.gz \\\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && found=''; \\\n  for server in \\\n    ha.pool.sks-keyservers.net \\\n    hkp://keyserver.ubuntu.com:80 \\\n    hkp://p80.pool.sks-keyservers.net:80 \\\n    pgp.mit.edu; \\\n  do \\\n    echo \"Fetching GPG key $GPG_KEYS from $server\"; \\\n    gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \\\n  done; \\\n  test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \\\n  gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n  && rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n  && mkdir -p /usr/src \\\n  && tar -zxC /usr/src -f nginx.tar.gz \\\n  && rm nginx.tar.gz \\\n  && tar -zxC /usr/src -f http-redis.tar.gz \\\n  && rm http-redis.tar.gz \\\n  && tar -zxC /usr/src -f set-misc.tar.gz \\\n  && rm set-misc.tar.gz \\\n  && tar -zxC /usr/src -f ngx_http_substitutions_filter_module.tar.gz \\\n  && rm ngx_http_substitutions_filter_module.tar.gz \\\n  && tar -zxC /usr/src -f ngx_devel_kit.tar.gz \\\n  && rm ngx_devel_kit.tar.gz \\\n  && cd /usr/src/nginx-$NGINX_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG --with-debug \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && mv objs/nginx objs/nginx-debug \\\n  && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n  && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n  && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n  && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && make install \\\n  && rm -rf /etc/nginx/html/ \\\n  && mkdir /etc/nginx/conf.d/ \\\n  && mkdir -p /usr/share/nginx/html/ \\\n  && install -m644 html/index.html /usr/share/nginx/html/ \\\n  && install -m644 html/50x.html /usr/share/nginx/html/ \\\n  && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n  && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n  && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n  && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n  && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n  && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n  && strip /usr/sbin/nginx* \\\n  && strip /usr/lib/nginx/modules/*.so \\\n  && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n\n  # Bring in gettext so we can get `envsubst`, then throw\n  # the rest away. To do this, we need to install `gettext`\n  # then move `envsubst` out of the way so `gettext` can\n  # be deleted completely, then move `envsubst` back.\n  && apk add --no-cache --virtual .gettext gettext \\\n  && mv /usr/bin/envsubst /tmp/ \\\n\n  && runDeps=\"$( \\\n    scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n      | tr ',' '\\n' \\\n      | sort -u \\\n      | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n  )\" \\\n  && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n  && apk del .build-deps \\\n  && apk del .gettext \\\n  && mv /tmp/envsubst /usr/local/bin/ \\\n\n  # Bring in tzdata so users could set the timezones through the environment\n  # variables\n  && apk add --no-cache tzdata \\\n\n  # forward request and error logs to docker log collector\n  && ln -sf /dev/stdout /var/log/nginx/access.log \\\n  && ln -sf /dev/stderr /var/log/nginx/error.log\n\n# Nginx temp upload dir\nRUN mkdir -p /var/nginx-uploads && chown nobody:nobody /var/nginx-uploads\n\nRUN mkdir -p /var/cache/nginx/client_temp && \\\n  mkdir -p /var/cache/nginx/proxy_temp && \\\n  mkdir -p /var/cache/nginx/fastcgi_temp && \\\n  mkdir -p /var/cache/nginx/uwsgi_temp && \\\n  mkdir -p /var/cache/nginx/scgi_temp\n\nRUN chown -R nobody:nobody /var/cache/nginx/client_temp && \\\n chown -R nobody:nobody /var/cache/nginx/proxy_temp && \\\n chown -R nobody:nobody /var/cache/nginx/fastcgi_temp && \\\n chown -R nobody:nobody /var/cache/nginx/uwsgi_temp && \\\n chown -R nobody:nobody /var/cache/nginx/scgi_temp\n\nRUN apk add --no-cache \\\n  php5 \\\n  php5-common \\\n  php5-curl \\\n  php5-dom \\\n  php5-exif \\\n  php5-ftp \\\n  php5-gd \\\n  php5-iconv \\\n  php5-mysqli \\\n  php5-openssl \\\n  php5-pdo \\\n  php5-posix \\\n  php5-soap \\\n  php5-zip \\\n  php5-ldap \\\n  php5-bcmath \\\n  php5-calendar \\\n  php5-gettext \\\n  php5-json \\\n  php5-pcntl \\\n  php5-apcu \\\n  php5-phar \\\n  php5-sockets \\\n  php5-wddx \\\n  php5-xmlreader \\\n  php5-zip \\\n  php5-zlib \\\n  php5-xsl \\\n  php5-opcache \\\n  php5-ctype \\ \n  php5-pdo_mysql \\ \n  php5-pdo_sqlite \\ \n  php5-sqlite3 \\ \n  php5-intl \\ \n  php5-fpm\n\n# Memcached\nRUN apk add --no-cache libmemcached\nRUN apk --no-cache add ca-certificates && \\\n  wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-memcached/master/sgerrand.rsa.pub && \\\n  wget https://github.com/sgerrand/alpine-pkg-php5-memcached/releases/download/2.2.0-r0/php5-memcached-2.2.0-r0.apk && \\\n  apk add --no-cache php5-memcached-2.2.0-r0.apk && rm -f php5-memcached-2.2.0-r0.apk\n\n# These only exist in versions prior to 7.2\nRUN apk add --no-cache php5-mcrypt \\\n  php5-xmlrpc php5-mysqli php5-mysql\n\n# Missing: php5-imagick, php5-redis\n\n# Imagick\nRUN apk --no-cache add ca-certificates wget && \\\n  apk add --no-cache imagemagick-dev && \\\n  wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-php5-imagick/master/sgerrand.rsa.pub && \\\n  wget https://github.com/sgerrand/alpine-pkg-php5-imagick/releases/download/3.4.3-r0/php5-imagick-3.4.3-r0.apk && \\\n  apk add --no-cache php5-imagick-3.4.3-r0.apk && \\\n  apk del imagemagick-dev && \\\n  rm -f php5-imagick-3.4.3-r0.apk\n\n# Imagick support file types\nRUN apk add --no-cache imagemagick\n\n# Add php5-redis\nRUN apk --no-cache add ca-certificates wget && \\\n  wget --quiet --output-document=/etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n  wget https://github.com/sgerrand/alpine-pkg-php5-redis/releases/download/3.1.6-r0/php5-redis-3.1.6-r0.apk && \\\n  apk add --no-cache php5-redis-3.1.6-r0.apk && \\\n  rm -f php5-redis-3.1.6-r0.apk\n\nRUN mkdir -p /src && \\\n  ln -s /etc/php5 /etc/php && \\\n  ln -s /usr/bin/php5 /usr/bin/php && \\\n  ln -s /usr/bin/php-fpm5 /usr/bin/php-fpm\n\n# Add Composer\nRUN curl -f https://getcomposer.org/installer -o /tmp/composer-installer && php /tmp/composer-installer --install-dir=/usr/local/bin --filename=composer && rm -f /tmp/composer-installer\n\n# Atatus\nRUN wget https://s3.amazonaws.com/atatus-artifacts/atatus-php/downloads/atatus-php-1.7.0-x64-musl.tar.gz && tar -xzvf atatus-php-1.7.0-x64-musl.tar.gz && cd atatus-php-1.7.0-x64-musl && ./install.sh && rm atatus-php-1.7.0-x64-musl.tar.gz\n\n# Atatus configurations\nRUN sed -i -e 's#atatus.trace.response_time = 2000#atatus.trace.response_time = 1500#g' /etc/php/conf.d/atatus.ini && \\\n  sed -i -e 's#atatus.collector.pidfile = \"/var/run/atatus-php-collector.pid\"#atatus.collector.pidfile = \"/run/atatus-php-collector.pid\"#g' /etc/php/conf.d/atatus.ini && \\\n  sed -i -e 's#atatus.collector.connection = \"/tmp/.atatus.sock\"#atatus.collector.connection = \"/run/atatus.sock\"#g' /etc/php/conf.d/atatus.ini\n\n\n# Supervisor\nADD conf/supervisord.conf /etc/supervisord.conf\nADD conf/supervisor.d /etc/supervisor.d\nRUN mkdir -p /etc/supervisord-enabled && mkdir -p /etc/supervisord-worker\n\n# Scripts\nADD scripts/start-web.sh /start-web.sh\nRUN chmod 755 /start-web.sh\nADD scripts/start-worker.sh /start-worker.sh\nRUN chmod 755 /start-worker.sh\n\nADD conf/nginx.conf /etc/nginx/nginx.conf\n\nADD conf/nginx-site.conf /etc/nginx/sites-enabled/site.conf\nADD dependencies/nginx-custom.php /usr/local/bin/nginx-custom\n\n# Test Nginx\nRUN nginx -c /etc/nginx/nginx.conf -t\n\n## PHP\nADD conf/php-fpm.conf /etc/php/php-fpm.conf\nADD conf/php.ini /etc/php/php.ini\nADD conf/php-www.conf /etc/php/php-fpm.d/www.conf\n\n# Test PHP-FPM\nRUN /usr/bin/php-fpm --fpm-config /etc/php/php-fpm.conf -t\n\n# Cron\nRUN mkdir -p /etc/cron.d\n\nCMD [\"/start-web.sh\"]"
}