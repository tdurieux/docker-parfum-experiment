{
  "startTime": 1674243385622,
  "endTime": 1674243385762,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Run an npm Enterprise server as a docker container.\n#\n# 1. signup for a license: https://www.npmjs.org/enterprise\n# 2. run: npm install; npm run-script configure\n# 3. run: docker build -t npme .\n# 4. run: docker run -p 8080:8080 -t npme\n#\n# (c) 2014 - npm, Inc see LICENSE.txt\n############################################################\n\n# Set the base image to Ubuntu\nFROM bcoe/npme\n\n# File Author / Maintainer\nMAINTAINER Ben Coe\n\n# Copy configuration/license and upgrade npm Enterprise.\nRUN echo \"\\n\\n--- IMPORTANT ---\\nabout to copy configuration, make sure:\\n\\t1. you visit https://www.npmjs.org/enterprise and fetch a license, and\\n\\t2. run 'npm install; npm run-script configure'\\n----------------\\n\\n\"\n\nCOPY service.json /etc/npme/service.json\nCOPY .license.json /etc/npme/.license.json\nCOPY .ndmrc /etc/npme/.ndmrc\nRUN npm install ndm -g && npm cache clean --force;\nRUN rm -rf /etc/npme/node_modules/@npm\nRUN cd /etc/npme; npm install --verbose && npm cache clean --force;\nRUN cd /etc/npme; ndm generate --uid=root --gid=root --platform=initd\n\n# Expose ports\nEXPOSE 8080\n\n# Set the default directory where CMD will execute\nWORKDIR /etc/npme\n\nCMD service redis-server start | service nginx start | couchdb | npme restart | tail -f ./logs/*\n"
}