{
  "startTime": 1674246473669,
  "endTime": 1674246474012,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n#################### Dockerfile for Antlr version 4.7.1 ################################\n#\n# This Dockerfile builds a basic installation of Antlr.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To simply run the resultant image, and provide a bash shell:\n# docker run --name <container_name> -it <image_name> /bin/bash\n#\n# Use below command to use Antlr:  \n#  docker run --rm=true --name <container_name> -v <your_grammer_code_folder_absolute_path>:<grammer_code_folder_path_in_container>  -it <image_name>  antlr4 <grammar_file_path_in_container>\n#  For ex. docker run --rm=true --name <container_name> -v /home/grammer_folder:/home/myFolder  -it <image_name>  antlr4  /home/myFolder/<grammer_file_tobe_executed>\n#\n########################################################################################\n\n# Base image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nWORKDIR \"/tmp\"\n\n# Set CLASSPATH\nENV CLASSPATH /usr/share/java/antlr4-runtime-4.7.1.jar\nENV JAVA_HOME /opt/ibm/java\nENV PATH $JAVA_HOME/bin:$PATH\nENV MAVEN_OPTS \"-Xmx1G\"\n\n# Install antlr4\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\ttar \\\n\t\tmaven \\\n\t\twget \\\n\t\tgit \\\n\t\tant \\\n\t\tpatch \\\n && ln -s `which nodejs` /usr/local/bin/node \\\n && wget https://public.dhe.ibm.com/ibmdl/export/pub/systems/cloud/runtimes/java/8.0.5.30/linux/s390x/ibm-java-s390x-sdk-8.0-5.30.bin \\\n && wget https://raw.githubusercontent.com/zos-spark/scala-workbench/master/files/installer.properties.java \\\n && tail -n +3 installer.properties.java | tee installer.properties \\\n && chmod +x ibm-java-s390x-sdk-8.0-5.30.bin \\\n && ./ibm-java-s390x-sdk-8.0-5.30.bin -r installer.properties \\\n && git clone git://github.com/antlr/antlr4.git \\\n && cd antlr4 && git checkout 4.7.1 \\\n && mvn install -DskipTests \\\n && cp tool/target/antlr4-4.7.1.jar /usr/share/java/ \\\n && cp tool/target/antlr4-4.7.1-sources.jar /usr/share/java/ \\\n && cp tool/target/antlr4-4.7.1-complete.jar /usr/share/java/ \\\n && cp antlr4-maven-plugin/target/antlr4-maven-plugin-4.7.1.jar /usr/share/java/ \\\n && cp runtime/Java/target/antlr4-runtime-4.7.1.jar /usr/share/java/ \\\n && apt-get remove -y \\\n        git \\\n        wget \\\n        maven \\\n\t\tant \\\n && apt-get autoremove -y \\\n && apt autoremove -y \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /root/.m2 && rm -rf /tmp/installer.properties && rm -rf /tmp/ibm-java-s390x-sdk-8.0-5.30.bin \\\n && rm -rf /tmp/antlr4\n\n# This dockerfile does not have a CMD statement as the image is intended to be\n# used as a base for building an application. If desired it may also be run as\n# a container e.g. as shown in the header comment above.\n\n# End of Dockerfile\n"
}