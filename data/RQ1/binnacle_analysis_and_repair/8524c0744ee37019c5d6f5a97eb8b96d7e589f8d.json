{
  "startTime": 1674234072006,
  "endTime": 1674234072254,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 16,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ELIXIR_VERSION=1.7.3\nARG SOURCE_COMMIT\n\nFROM elixir:${ELIXIR_VERSION} as builder\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nRUN apt-get update -q && apt-get install --no-install-recommends -y build-essential libtool autoconf curl git && rm -rf /var/lib/apt/lists/*;\n\nRUN DEBIAN_CODENAME=$(sed -n 's/VERSION=.*(\\(.*\\)).*/\\1/p' /etc/os-release) && \\\n    curl -f -q https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    echo \"deb http://deb.nodesource.com/node_8.x $DEBIAN_CODENAME main\" | tee /etc/apt/sources.list.d/nodesource.list && \\\n    apt-get update -q && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN mix local.hex --force && \\\n    mix local.rebar --force && \\\n    mix hex.info\n\nWORKDIR /src\nADD ./ /src/\n\n# Set default environment for building\nENV ALLOW_PRIVATE_REPOS=true\nENV MIX_ENV=prod\n\nRUN mix deps.get\nRUN cd /src/ && npm install && npm run deploy && npm cache clean --force;\nRUN mix phx.digest\nRUN mix release --env=$MIX_ENV\n\n# Make the git HEAD available to the released app\nRUN if [ -d .git ]; then \\\n        mkdir /src/_build/prod/rel/bors/.git && \\\n        git rev-parse --short HEAD > /src/_build/prod/rel/bors/.git/HEAD; \\\n    elif [ -n ${SOURCE_COMMIT} ]; then \\\n        mkdir /src/_build/prod/rel/bors/.git && \\\n        echo ${SOURCE_COMMIT} > /src/_build/prod/rel/bors/.git/HEAD; \\\n    fi\n\n####\n\nFROM debian:stretch-slim\nRUN apt-get update -q && apt-get install --no-install-recommends -y git-core libssl1.1 curl ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nENV DOCKERIZE_VERSION=v0.6.0\nRUN curl -f -Ls https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz | \\\n    tar xzv -C /usr/local/bin\n\nADD ./docker-entrypoint /usr/local/bin/bors-ng-entrypoint\nCOPY --from=builder /src/_build/prod/rel/ /app/\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PORT=4000\nENV DATABASE_AUTO_MIGRATE=true\nENV ALLOW_PRIVATE_REPOS=true\n\nWORKDIR /app\nENTRYPOINT [\"/usr/local/bin/bors-ng-entrypoint\"]\nCMD [\"./bors/bin/bors\", \"foreground\"]\n\nEXPOSE 4000\n"
}