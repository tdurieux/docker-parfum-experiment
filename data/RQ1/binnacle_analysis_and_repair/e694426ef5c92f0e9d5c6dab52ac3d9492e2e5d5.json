{
  "startTime": 1674240945066,
  "endTime": 1674240945396,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 5,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 9,
        "columnEnd": 21
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 56,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV NODE_VERSION 8.11.2\nENV YARN_VERSION 1.7.0\nENV DSPACE_ANGULAR_GIT https://github.com/DSpace/dspace-angular.git\nENV DSPACE7-SPRING-REST https://dspace7.4science.it/dspace-spring-rest/\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        build-essential \\\n        bash-completion \\\n        ca-certificates \\\n        curl \\\n        gcc \\\n        git \\\n        gnupg \\\n        less \\\n        libkrb5-dev \\\n        libssl-dev \\\n        locales \\\n        make \\\n        python \\\n        ruby-full \\\n        rubygems-integration \\\n        screen \\\n        software-properties-common \\\n        sudo \\\n        unzip \\\n        vim \\\n        wget \\\n        && rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\nWORKDIR /tmp\n\nrun mkdir -p /root/.gnupg && chmod 700 /root/.gnupg\n\n# gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nRUN set -ex \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n\n#Create DSpace folders\nRUN mkdir -p /dspace-angular /home/dspace\n\n###\n# Bash configuration\n###\n#Configure colors and autocompletion\nCOPY bashrc /home/dspace/.bashrc\n# fill the bash history with some commands\nCOPY bash_history /home/dspace/.bash_history\n# Configure other useful dotfiles\nCOPY screenrc /home/dspace/.screenrc\nCOPY vimrc /home/dspace/.vimrc\nCOPY gitconfig /home/dspace/.gitconfig\nRUN mkdir /home/dspace/.vimbackup\n\n\n# create user\nRUN export HOME=/home/dspace\nRUN export uid=1000 gid=1000 && \\\n    mkdir -p /home/dspace && \\\n    echo \"dspace:x:${uid}:${gid}:DSpace,,,:/home/dspace:/bin/bash\" >> /etc/passwd && \\\n    echo \"dspace:x:${uid}:\" >> /etc/group && \\\n    echo \"dspace ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/dspace && \\\n    chmod 0440 /etc/sudoers.d/dspace && \\\n    chown ${uid}:${gid} -R /home/dspace\n\n# Fix permissions\nRUN chown -R dspace:dspace /dspace-angular /home/dspace\n\n# Change the current user\nUSER dspace\n\n# preload node_modules\nRUN git clone ${DSPACE_ANGULAR_GIT} /tmp/dspace-angular \\\n      && cd /tmp/dspace-angular \\\n      && yarn install \\\n      && cd - \\\n      && rm -rf /tmp/dspace-angular && yarn cache clean;\n\nWORKDIR /dspace-angular\n\n# 3000 for node\n# 8080 to test if changing the port by an environment variable works\n# 9876 to see test coverage\nEXPOSE 3000 8080 9876\n\nCMD tail -f /dev/null\n"
}