{
  "startTime": 1674236084749,
  "endTime": 1674236084788,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This IBREST image relies on an IB Gateway accessible at port 4003 (intead of 4001).  Use ibheadless for that and link.\n# Assume our ibheadless container is called `ibgw`\n# ...so be sure to `link` this container to ibheadless accordingly\n\n# To build docker image:\n# docker build -t ibrest .\n\n# To run docker image, use:\n# `docker run -d --restart=always --name ibrest --link ibgw -e \"ID_SECRET_KEY=mysecret\" -p 443:443 ibrest`\n\n# To run while developing, map your local app folder to /app as a volume on the container:\n# `docker run -d --restart=always --name ibrest --link ibgw -e \"ID_SECRET_KEY=mysecret\" -p 443:443 -v /home/jhaury/ibrest:/app ibrest`\n# or maybe\n# `docker run -d --restart=always --name ibrest --link ibgw -e \"ID_SECRET_KEY=mysecret\" -p 443:443 -v /home/jhaury/ibrest/app:/app ibrest`\n\n# If running TWS on the same machine and want to run a Conatiner which connects to it with default 7497 port:\n# docker run --name ibrest  --env-file=env-file  -p 443:443 ibrest\n# Where your env-file has IBREST_PORT, IBREST_HOST, IBGW_PORT_4003_TCP_ADDR, IBGW_PORT_4003_TCP_PORT and IBGW_CLIENT_ID as needed\n\nFROM python:2.7-alpine\nMAINTAINER Jason Haury \"jason.haury@gmail.com\"\nRUN pip install --no-cache-dir --upgrade pip\nCOPY requirements.txt /\nRUN pip install --no-cache-dir -r /requirements.txt\n\n# for production, do this:\nCOPY ./app /app\n# for development, do this instead:\n#VOLUME /app\n\nWORKDIR /app\n\n# To enable HTTPS, we need to copy certs\n# be sure to create your certs!\n#COPY ./etc/ibrest.crt .\n#COPY ./etc/ibrest.key .\n\nRUN apk --update --no-cache add openssl\nRUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./ibrest.key -out ./ibrest.crt -new -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\"\n\nCMD [ \"python\", \"./main.py\" ]\nEXPOSE 443\n\n\n# Be sure to set environment params: IBGW_HOST and IBGW_PORT for how to connect to ibgw if you aren't linking per the \"run\" examples\n\n"
}