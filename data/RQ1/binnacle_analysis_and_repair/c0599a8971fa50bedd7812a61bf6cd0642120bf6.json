{
  "startTime": 1674244599803,
  "endTime": 1674244599974,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM instructure/node:8-xenial\nMAINTAINER Instructure\n\nUSER root\n\n# Install Nginx\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \\\n  && apt-get install --no-install-recommends -y apt-transport-https ca-certificates \\\n  # TODO can this be a non-passenger source? don't think we can take it out\n  # because then we get nginx 1.10 instead of 1.14, and I'm not sure if 1.10\n  # has the features we need\n  && sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    nginx-extras \\\n    ruby \\\n    sudo \\\n    supervisor \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN yarn global add pm2@3.1.2\n\nRUN mkdir -p /usr/src/supervisord/ \\\n && mkdir -p /usr/src/nginx/conf.d \\\n && mkdir -p /usr/src/nginx/location.d \\\n && mkdir -p /usr/src/app \\\n && mkdir -p /var/log/app \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /dev/stdout /var/log/app/output.log \\\n && ln -sf /dev/stderr /var/log/app/error.log && rm -rf /usr/src/supervisord/\n\nCOPY entrypoint /usr/src/entrypoint\nCOPY supervisord/* /usr/src/supervisord/\nCOPY nginx.conf.erb /usr/src/nginx/nginx.conf.erb\nCOPY conf.d/* /usr/src/nginx/conf.d/\nCOPY default.config.json /usr/src/app/.pm2.config.default.json\n\nRUN chown docker:docker -R /usr/src/supervisord \\\n && chown docker:docker -R /usr/src/nginx \\\n && chown docker:docker -R /var/lib/nginx \\\n && chown docker:docker -R /var/log/app \\\n && chgrp docker /var/run \\\n && chmod g+w /var/run\n\nUSER docker\n\nEXPOSE 80\n\nENTRYPOINT [\"/tini\", \"--\"]\n\nCMD [\"/usr/src/entrypoint\"]\n"
}