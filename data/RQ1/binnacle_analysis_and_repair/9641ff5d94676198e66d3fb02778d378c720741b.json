{
  "startTime": 1674243862111,
  "endTime": 1674243862875,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 11,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 7,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk-alpine\n\nENV BUILD_DEPS \\\n    bison \\\n    cabextract \\\n    ca-certificates \\\n    coreutils \\\n    curl \\\n    dpkg-dev dpkg \\\n    flex \\\n    gcc \\\n    ghc \\\n    gmp \\\n    gnupg \\\n    libc-dev \\\n    libedit-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libffi \\\n    linux-headers \\\n    make \\\n    musl-dev \\\n    openssl-dev \\\n    perl-utils \\\n    perl-ipc-run \\\n    tar \\\n    util-linux-dev \\\n    wget \\\n    zlib-dev\n\nENV PERSIST_DEPS \\\n    bash \\\n    fontconfig \\\n    graphviz \\\n    imagemagick \\\n    msttcorefonts-installer \\\n    python \\\n    py2-pip \\\n    sed \\\n    su-exec \\\n    ttf-droid \\\n    ttf-droid-nonlatin \\\n    tzdata \\\n    unzip\n\nENV EDGE_DEPS \\\n    cabal\n\nENV LANG en_US.utf8\n\nENV USR_LOCAL /usr/local\n\nENV ELASTICSEARCH_VERSION 5.5.2\nENV ELASTICSEARCH_TARBALL \"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz\"\nENV ELASTICSEARCH_TARBALL_ASC \"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ELASTICSEARCH_VERSION}.tar.gz.asc\"\nENV ELASTICSEARCH_TARBALL_SHA1 \"91b3b3c823fafce54609ed5c9075d9cf50b2edff\"\nENV ELASTICSEARCH_HOME $USR_LOCAL/elasticsearch\n\nENV PG_MAJOR 9.4\nENV PG_VERSION 9.4.18\nENV PG_SHA256 428337f2b2f5e3ea21b8a44f88eb89c99a07a324559b99aebe777c9abdf4c4c0\n\nENV TOMCAT_MAJOR 7\nENV TOMCAT_VERSION 7.0.88\nENV TOMCAT_TGZ_URL \"http://mirrors.sonic.net/apache/tomcat/tomcat-7/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz\"\nENV TOMCAT_HOME $USR_LOCAL/tomcat\n\nENV PLANTUML_VERSION 1.2017.18\nENV PLANTUML_DOWNLOAD_URL https://sourceforge.net/projects/plantuml/files/plantuml.$PLANTUML_VERSION.jar/download\n\nENV PANDOC_VERSION 1.19.2.4\nENV PANDOC_DOWNLOAD_URL https://hackage.haskell.org/package/pandoc-$PANDOC_VERSION/pandoc-$PANDOC_VERSION.tar.gz\nENV PANDOC_HOME $USR_LOCAL/pandoc\n\nENV ALF_DATA_DIR /mnt/alf_data\nENV CONFIG_DIR $USR_LOCAL/config\nENV FILES_DIR $USR_LOCAL/files\n\nENV PGDATA /var/lib/postgresql/data\n\nENV PATH $USR_LOCAL/bin:$TOMCAT_HOME/bin:$ELASTICSEARCH_HOME/bin:$PANDOC_HOME/bin:$PATH\n\n# ---- Install Dependencies ----\nRUN apk upgrade --update \\\n    && apk add --no-cache --virtual .build-deps $BUILD_DEPS \\\n    && apk add --no-cache --virtual .persistent-deps $PERSIST_DEPS \\\n    && update-ms-fonts \\\n    && fc-cache -f \\\n    && curl -fsSL \"$PLANTUML_DOWNLOAD_URL\" -o /usr/local/plantuml.jar \\\n    && apk add --no-cache --virtual .edge-deps $EDGE_DEPS -X http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n    && curl -fsSL \"$PANDOC_DOWNLOAD_URL\" | tar -xzf - \\\n    && ( cd pandoc-$PANDOC_VERSION && cabal update && cabal install --only-dependencies \\\n        && cabal configure --prefix=$PANDOC_HOME \\\n        && cabal build \\\n        && cabal copy \\\n        && cd .. ) \\\n    && rm -Rf pandoc-$PANDOC_VERSION/ /root/.cabal/ /root/.ghc/ /pandoc-build \\\n    && mkdir -p /var/docs\n\n\n# ---- Postgres ----\n\nRUN set -ex; \\\n\tpostgresHome=\"$(getent passwd postgres)\"; \\\n\tpostgresHome=\"$(echo \"$postgresHome\" | cut -d: -f6)\"; \\\n\t[ \"$postgresHome\" = '/var/lib/postgresql' ]; \\\n\tmkdir -p \"$postgresHome\"; \\\n\tchown -R postgres:postgres \"$postgresHome\"\n\nRUN set -ex; \\\n    wget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\" \\\n        && echo \"$PG_SHA256  *postgresql.tar.bz2\" | sha256sum -c - \\\n        && mkdir -p /usr/src/postgresql \\\n        && tar \\\n            --extract \\\n            --file postgresql.tar.bz2 \\\n            --directory /usr/src/postgresql \\\n            --strip-components 1 \\\n        && rm postgresql.tar.bz2 \\\n\n        && cd /usr/src/postgresql \\\n        && awk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new \\\n        && grep '/var/run/postgresql' src/include/pg_config_manual.h.new \\\n        && mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h \\\n        && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb' \\\n        && wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb' \\\n        && ./configure \\\n            --build=\"$gnuArch\" \\\n            --enable-integer-datetimes \\\n            --enable-thread-safety \\\n            --enable-tap-tests \\\n            --disable-rpath \\\n            --with-uuid=e2fs \\\n            --with-gnu-ld \\\n            --with-pgport=5432 \\\n            --with-system-tzdata=/usr/share/zoneinfo \\\n            --prefix=/usr/local \\\n            --with-includes=/usr/local/include \\\n            --with-libraries=/usr/local/lib \\\n            \\\n            --with-openssl \\\n            --with-libxml \\\n            --with-libxslt \\\n        && make -j \"$(nproc)\" world \\\n        && make install-world \\\n        && make -C contrib install \\\n\n        && runDeps=\"$( \\\n            scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/share/postgresql \\\n                | tr ',' '\\n' \\\n                | sort -u \\\n                | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n        )\" \\\n        && apk add --no-cache --virtual .persistent-deps \\\n            $runDeps \\\n        && cd / \\\n        && rm -rf \\\n            /usr/src/postgresql \\\n            /usr/local/share/doc \\\n            /usr/local/share/man \\\n        && find /usr/local -name '*.a' -delete\n\nRUN sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql\nRUN mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\"\n\n\n# ---- Elasticsearch ----\n\nRUN addgroup -S elasticsearch && adduser -S -G elasticsearch elasticsearch\nWORKDIR /usr/share/elasticsearch\n\nRUN set -ex; \\\n    wget -O elasticsearch.tar.gz \"$ELASTICSEARCH_TARBALL\" \\\n    && echo \"$ELASTICSEARCH_TARBALL_SHA1 *elasticsearch.tar.gz\" | sha1sum -c - \\\n    && wget -O elasticsearch.tar.gz.asc \"$ELASTICSEARCH_TARBALL_ASC\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n    && gpg --batch --verify elasticsearch.tar.gz.asc elasticsearch.tar.gz \\\n    && rm -rf \"$GNUPGHOME\" elasticsearch.tar.gz.asc \\\n    && tar -xf elasticsearch.tar.gz --strip-components=1 \\\n    && rm elasticsearch.tar.gz \\\n    && mkdir -p ./plugins; \\\n    for path in \\\n        ./data \\\n        ./logs \\\n        ./config \\\n        ./config/scripts \\\n    ; do \\\n        mkdir -p \"$path\"; \\\n        chown -R elasticsearch:elasticsearch \"$path\"; \\\n    done; \\\n    export ES_JAVA_OPTS='-Xms32m -Xmx32m';\n\nCOPY config ./config\n\n# ---- Tomcat ----\nRUN curl -fSL \"$TOMCAT_TGZ_URL\" -o tomcat.tar.gz \\\n    && ls -la \\\n    && echo \"tar -xzf tomcat.tar.gz\" \\\n    && tar -xzf tomcat.tar.gz \\\n    && rm tomcat.tar.gz* \\\n    && echo \"mv apache-tomcat-${TOMCAT_VERSION} tomcat\" \\\n    && mv apache-tomcat-${TOMCAT_VERSION} ${TOMCAT_HOME}\n\n\n# ---- Alfresco ----\nWORKDIR /usr/local\nCOPY config ${CONFIG_DIR}\nCOPY config/config_alfresco.sh .\nCOPY config/run.sh ${TOMCAT_HOME}/bin/run.sh\nCOPY config/set_properties.sh ${TOMCAT_HOME}/bin/set_properties.sh\nCOPY all-in-one/docker-entrypoint.sh /usr/local/bin/\n\n\n# Download the community zip files\nRUN wget --no-check-certificate -S \"https://download.alfresco.com/release/community/201605-build-00010/alfresco-community-distribution-201605.zip\" \\\n    && chmod +x ${USR_LOCAL}/bin/docker-entrypoint.sh \\\n    && chmod +x config_alfresco.sh \\\n    && chmod +x ${TOMCAT_HOME}/bin/run.sh \\\n    && chmod +x ${TOMCAT_HOME}/bin/set_properties.sh \\\n    && ./config_alfresco.sh\n\nRUN cp ${CONFIG_DIR}/alfresco-global.properties ${TOMCAT_HOME}/shared/classes/alfresco-global.properties \\\n    && cp ${CONFIG_DIR}/catalina.properties ${TOMCAT_HOME}/conf/catalina.properties \\\n    && cp ${CONFIG_DIR}/solr4-context.xml ${TOMCAT_HOME}/conf/Catalina/localhost/solr4.xml \\\n    && cp ${CONFIG_DIR}/tomcat-server.xml ${TOMCAT_HOME}/conf/server.xml \\\n    && cp ${CONFIG_DIR}/tomcat-users.xml ${TOMCAT_HOME}/conf/tomcat-users.xml \\\n    && cp ${CONFIG_DIR}/archive-solrcore.properties ${TOMCAT_HOME}/solr4/archive-SpacesStore/conf/solrcore.properties \\\n    && cp ${CONFIG_DIR}/workspace-solrcore.properties ${TOMCAT_HOME}/solr4/workspace-SpacesStore/conf/solrcore.properties\n\n\n# ---- MMS -----\nCOPY files ${FILES_DIR}\nRUN java -jar ${TOMCAT_HOME}/bin/alfresco-mmt.jar install ${FILES_DIR}/mms-amp*.amp ${TOMCAT_HOME}/webapps/alfresco.war -force \\\n    && java -jar ${TOMCAT_HOME}/bin/alfresco-mmt.jar install ${FILES_DIR}/mms-share-amp*.amp ${TOMCAT_HOME}/webapps/share.war -force \\\n    && cd ${TOMCAT_HOME}/webapps \\\n    && rm -rf alfresco share \\\n    && mkdir alfresco share \\\n    && cd alfresco \\\n    && jar xf ../alfresco.war \\\n    && cd ../share \\\n    && jar xf ../share.war \\\n    && mv ${FILES_DIR}/mms.properties.example ${TOMCAT_HOME}/shared/classes/mms.properties \\\n    && cp ${FILES_DIR}/web.xml ${TOMCAT_HOME}/webapps/alfresco/WEB-INF/web.xml \\\n    && rm -rf ${FILES_DIR} \\\n    && cd ${TOMCAT_HOME}/webapps \\\n    && rm *.bak\n\n\n# Add tomcat user and config\nRUN addgroup -S tomcat \\\n    && adduser -G tomcat -g \"Tomcat User\" -s /bin/ash -D tomcat \\\n    && mkdir -p ${ALF_DATA_DIR}/solr4 \\\n    && chown -R tomcat:tomcat ${TOMCAT_HOME} \\\n    && chown -R tomcat:tomcat ${ALF_DATA_DIR}\n\nRUN apk del .build-deps\n\n# Alfresco\nEXPOSE 8080:8080\n# Postgres\nEXPOSE 5432:5432\n# ElasticSearch\nEXPOSE 9200:9200\n\nENTRYPOINT [\"/usr/local/tomcat/bin/run.sh\"]\n"
}