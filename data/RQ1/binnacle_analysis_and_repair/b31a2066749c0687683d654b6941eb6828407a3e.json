{
  "startTime": 1674641751677,
  "endTime": 1674641751768,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM awright18/aspnetcore-build-mono:latest AS builder\n\nCOPY Server/Nikeza.Wordpress/Nikeza.Wordpress.fsproj Server/Nikeza.Wordpress/Nikeza.Wordpress.fsproj\nCOPY Server/Nikeza.YouTube/Nikeza.YouTube.fsproj Server/Nikeza.YouTube/Nikeza.YouTube.fsproj\nCOPY Server/Nikeza.Server/Nikeza.Server.fsproj Server/Nikeza.Server/Nikeza.Server.fsproj\nRUN dotnet restore Server/Nikeza.Server/Nikeza.Server.fsproj\n\nCOPY Client/app/*.json Client/app/\nRUN npm install -g yarn \\\n    && cd Client/app \\\n    && npm install -g elm \\\n    && npm install \\\n    && elm-package install -y && npm cache clean --force;\n\nCOPY . .\n\nRUN cd Client/app \\\n    && elm-make Home.elm --output=../../Server/Nikeza.Server/home.html \\\n    && cd ../../ \\\n    && dotnet publish Server/Nikeza.Server/Nikeza.Server.fsproj -f netcoreapp1.1 -o /app/ -c Release \\\n    && mkdir -p app/wwwroot/ \\\n    && cp -R Client/app/Assets/ app/wwwroot/\n\nFROM microsoft/aspnetcore\nWORKDIR app/\nCOPY --from=builder /app .\nEXPOSE 80\nENTRYPOINT [\"dotnet\", \"Nikeza.Server.dll\"]\n"
}