{
  "startTime": 1674249721430,
  "endTime": 1674249721856,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 32,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 64,
        "columnStart": 27,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 64,
        "columnStart": 27,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##### START tomcat\n\n# Copyright (c) 2012-2016 Codenvy, S.A.\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Eclipse Public License v1.0\n# which accompanies this distribution, and is available at\n# http://www.eclipse.org/legal/epl-v10.html\n# Contributors:\n# Codenvy, S.A. - initial API and implementation\n\nFROM debian:stretch\nEXPOSE 8080\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install locales sudo procps wget unzip gnupg && \\\n    apt-get -y --no-install-recommends install openjdk-8-jdk && \\\n    echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user \\\n    && apt-get -y autoremove \\\n    && apt-get -y clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nUSER user\n\nLABEL che:server:8080:ref=tomcat8 che:server:8080:protocol=http\n\nENV TOMCAT_HOME=/home/user/tomcat \\\n    TOMCAT8_VERSION=8.0.33\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\n\nENV PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\n\nRUN mkdir $TOMCAT_HOME\n\nENV TERM xterm\n\nRUN wget -qO- \"https://archive.apache.org/dist/tomcat/tomcat-8/v$TOMCAT8_VERSION/bin/apache-tomcat-$TOMCAT8_VERSION.tar.gz\" | tar -zx --strip-components=1 -C $TOMCAT_HOME && \\\n    rm -rf $TOMCAT_HOME/webapps/*\n\nENV LANG C.UTF-8\nRUN echo \"export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\\nexport M2_HOME=/home/user/apache-maven-$MAVEN_VERSION\\nexport TOMCAT_HOME=$TOMCAT_HOME\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" >> /home/user/.bashrc && \\\n    sudo localedef -i en_US -f UTF-8 en_US.UTF-8\n\nWORKDIR $TOMCAT_HOME\nCOPY conf/server.xml /home/user/tomcat/conf\n\n##### END tomcat\n\nADD zenboot.properties /etc/zenboot/zenboot.properties\nUSER root\nRUN echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y curl ansible openssh-client sshpass socat dnsutils jq less vim netcat-openbsd git \\\n    && apt-get -y autoremove \\\n    && apt-get -y clean \\\n    && rm -rf /var/lib/apt/lists/*\nADD docker-provisioning/ansible.cfg /etc/ansible/ansible.cfg\n\n## Install docker in order to potentially use docker via socket at runtime\nRUN apt-get update && sudo apt-get install --no-install-recommends -y \\\n     apt-transport-https \\\n     ca-certificates \\\n     curl \\\n     gnupg2 \\\n     software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | sudo apt-key add -\nRUN apt-key fingerprint 0EBFCD88 | grep -q \"9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88\"\nRUN add-apt-repository \\\n      \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n      $(lsb_release -cs) \\\n      stable\"\nRUN apt-get update && apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Install kubectl\nRUN curl -f -o /usr/local/bin/kubectl -LO https://storage.googleapis.com/kubernetes-release/release/v1.8.0/bin/linux/amd64/kubectl \\\n      && chmod +x /usr/local/bin/kubectl\n\n# install Azure-cli\n# workaround for https://github.com/Azure/azure-cli/issues/3863\nRUN wget ftp.de.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb && dpkg -i libssl1.0.0_1.0.2l-1~bpo8+1_amd64.deb\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ stretch main\" | \\\n     sudo tee /etc/apt/sources.list.d/azure-cli.list\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF\nRUN apt-get update && apt-get install -y --no-install-recommends azure-cli && rm -rf /var/lib/apt/lists/*;\n\nUSER user\n\nARG VERSION\nRUN if [ -z \"$VERSION\" ]; \\\n        then echo \"the build argument 'VERSION' is mandatory\"; \\\n        exit 1; \\\n    fi\nARG ZENBOOT_WAR=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot.war\nARG ZENBOOT_CLI=https://github.com/hybris/zenboot/releases/download/v$VERSION/zenboot-linux-amd64\n\nRUN mkdir -p /home/user/zenboot\nADD $ZENBOOT_WAR $TOMCAT_HOME/webapps/zenboot.war\nADD $ZENBOOT_CLI /usr/local/bin/zenboot\nADD docker-provisioning/setenv.sh $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/bin/setenv.sh\nRUN sudo chown user:user $TOMCAT_HOME/webapps/zenboot.war\nRUN sudo chmod +x /usr/local/bin/zenboot\n\nCMD bin/catalina.sh run 2>&1\n"
}