{
  "startTime": 1674240196237,
  "endTime": 1674240196336,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-slim \n\nENV RASA_NLU_DOCKER=\"YES\" \\  \nRASA_NLU_HOME=/app \\  \nRASA_NLU_PYTHON_PACKAGES=/usr/local/lib/python2.7/dist-packages \n\nVOLUME [\"${RASA_NLU_HOME}\", \"${RASA_NLU_PYTHON_PACKAGES}\"] \n\n# Run updates, install basics and cleanup \n# - build-essential: Compile specific dependencies \n# - git-core: Checkout git repos \nRUN apt-get update -qq && apt-get install -y --no-install-recommends \\  \nbuild-essential \\  \ngit-core && \\  \napt-get clean && \\  \nrm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \n\nWORKDIR ${RASA_NLU_HOME} \n\nCOPY ./requirements.txt requirements.txt \n\n# Split into pre-requirements, so as to allow for Docker build caching \nRUN pip install --no-cache-dir $(tail -n +2 requirements.txt)\n\nRUN pip install --no-cache-dir -U spacy\nRUN python -m spacy download de \nRUN pip install --no-cache-dir -U scikit-learn scipy sklearn-crfsuite\n\nCOPY . ${RASA_NLU_HOME} \n\nRUN python setup.py install \n\nRUN ls /app \n\nEXPOSE 5000 \nENTRYPOINT [\"./entrypoint.sh\"] \nCMD [\"help\"] \n\n"
}