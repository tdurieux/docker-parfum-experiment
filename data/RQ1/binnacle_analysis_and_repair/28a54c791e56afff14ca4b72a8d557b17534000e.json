{
  "startTime": 1674243026923,
  "endTime": 1674243027000,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.6.6-alpine\n\nARG APP_NAME=union\nARG MIX_ENV=prod\nARG APP_VERSION=0.0.0\nARG PHOENIX_SUBDIR=.\nENV MIX_ENV ${MIX_ENV}\nENV APP_VERSION ${APP_VERSION}\nENV REPLACE_OS_VARS true\n\nWORKDIR /opt/app\n# use yarn instead of npm to reduce from 180s to 60s\n# add git since one dependency pulls from git\nRUN apk update \\\n  && apk --no-cache --update add nodejs yarn git build-base \\\n  && mix local.rebar --force \\\n  && mix local.hex --force\nCOPY . .\nRUN mix do deps.get, deps.compile, compile\n\nRUN cd ${PHOENIX_SUBDIR}/assets \\\n  && yarn install \\\n  && yarn deploy \\\n  && cd .. \\\n  && mix phx.digest && yarn cache clean;\nRUN mix release --env=${MIX_ENV} --verbose \\\n  && mv _build/prod/rel/${APP_NAME} /opt/release \\\n  && mv /opt/release/bin/${APP_NAME} /opt/release/bin/start_server\n\n# minimal runtime image\nFROM alpine:3.8\n# bash is required by distillery\nRUN apk update && apk --no-cache --update add bash openssl-dev\nENV REPLACE_OS_VARS true\nWORKDIR /opt/app\nCOPY --from=0 /opt/release .\nCMD [\"/opt/app/bin/start_server\", \"foreground\"]\n"
}