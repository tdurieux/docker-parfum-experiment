{
  "startTime": 1674248287169,
  "endTime": 1674248287523,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nENV R_BASE_VERSION 3.3.2\nENV VER master\nENV DL_TOOL wget\nENV DL_PATH /opt/shiny/download/master\nENV INS_PATH /opt/shiny\n\n\n# Install Java.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python-software-properties software-properties-common && \\\n    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n    add-apt-repository -y ppa:webupd8team/java && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y oracle-java8-installer && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/oracle-jdk8-installer\n\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ed \\\n        less \\\n        locales \\\n        nano \\\n        wget \\\n        ca-certificates \\\n        apt-transport-https \\\n        fonts-texgyre && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    locale-gen en_US.utf8 && \\\n    /usr/sbin/update-locale LANG=en_US.UTF-8\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\n\nRUN echo \"deb https://cran.rstudio.org/bin/linux/ubuntu xenial/\" > /etc/apt/sources.list.d/rstudio.list\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        r-base=${R_BASE_VERSION}* \\\n        r-base-dev=${R_BASE_VERSION}* \\\n        r-recommended=${R_BASE_VERSION}* \\\n        sudo \\\n        gdebi-core \\\n        pandoc \\\n        pandoc-citeproc \\\n        libcurl4-gnutls-dev \\\n        libcairo2-dev \\\n        libxt-dev && \\\n        echo 'options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site &&  \\\n    rm -rf /tmp/downloaded_packages/ /tmp/*.rds && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Download and install shiny server\nRUN R -e \"install.packages(c('shiny', 'rmarkdown'), repos='https://cran.rstudio.com/')\"\n\nRUN mkdir -p ${DL_PATH} && \\\n      mkdir -p ${INS_PATH} && \\\n      wget -nv -O ${DL_PATH}/${VER}.tar.gz https://github.com/statsplot/jshinyserver/archive/${VER}.tar.gz && \\ \n      tar zxf ${DL_PATH}/${VER}.tar.gz -C ${DL_PATH} && \\\n      ln -s  ${DL_PATH}/jshinyserver-*/source/Objects ${INS_PATH}/server && \\\n      mkdir -p ${INS_PATH}/server/logs ${INS_PATH}/server/pid && \\\n      echo \"[Done] jShiny server ${VER} installed to ${INS_PATH}/server\" && rm ${DL_PATH}/${VER}.tar.gz\n\nRUN rm -f ${DL_PATH}/${VER}.tar.gz\nRUN touch ${INS_PATH}/server/config/applist.update\n\n\n## in case you need to mount folders to /opt/shiny as non-root user\nRUN chmod -R 777 ${INS_PATH}\n\n\n## https://hub.docker.com/r/rocker/r-apt/~/dockerfile/\n## ---- change user 'docker' to 'ruser'.\n## ---- docker.docker in the host has access to docker daemon\n\n## Set a default user. Available via runtime flag `--user ruser`\n## Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library\n## User should also have & own a home directory (for rstudio or linked volumes to work properly).\nRUN useradd ruser \\\n\t&& mkdir /home/ruser \\\n\t&& chown ruser:ruser /home/ruser \\\n\t&& addgroup ruser staff\n\n\n## By default, docker daemon starts container with root(superuser)\n## Superuser inside a container don't get all the Linux capabilities\n## Most of the time, it's safe to run with superuser\n\n## Run as non-root 'ruser' with  'docker run -u ruser:ruser ...'\n## In the host the user 'ruser'(in 'ruser' group) should exist.\n\n## Run as 'ruser' inside container, when you mount host folders/files,\n## if you need to execute/access/read/write/create/delete to a folder/file,\n## 'ruser' in the host should has corresponding privileges to it\n## and access to its parent folders.\n## Remember that inside the container, non-root user can't access to all\n## the files/folders or execute commands which need root privileges.\n\n\nEXPOSE 8888\n\nWORKDIR ${INS_PATH}/server\n\nCMD [\"java\",\"-jar\",\"server.jar\"]\n\n"
}