{
  "startTime": 1674252267555,
  "endTime": 1674252267735,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The first thing we need to do is define from what image we want to build from.\n# Here we will use the latest LTS (long term support) version 10 of node available from the Docker Hub (https://hub.docker.com/_/node/)\nFROM node:10\n\n# Next we create a directory to hold the application code inside the image, this will be the working directory for your application\nWORKDIR /usr/src/app\n\n# This image comes with Node.js and NPM already installed so the next thing we need to do is to install your app dependencies using the npm binary.\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\n# Note that, rather than copying the entire working directory, we are only copying the package.json file.\n# This allows us to take advantage of cached Docker layers. bitJudo has a good explanation of this here (http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/).\n\n# If you are building your code for production\nRUN npm install --production && npm cache clean --force;\nRUN npm install -g pm2 && npm cache clean --force;\nRUN npm link pm2\n\n# To bundle your app's source code inside the Docker image, use the COPY instruction\n# Bundle app source\nCOPY . .\n\n# Your app binds to port 3000 so you'll use the EXPOSE instruction to have it mapped by the docker daemon\nEXPOSE 3000\n\n# Last but not least, define the command to run your app using CMD which defines your runtime.\n# Here we will use the basic npm start which will run node server.js to start your server\nCMD [ \"npm\", \"start\" ]\n"
}