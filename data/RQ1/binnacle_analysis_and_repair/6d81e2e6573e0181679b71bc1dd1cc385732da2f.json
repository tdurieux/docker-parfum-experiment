{
  "startTime": 1674248426860,
  "endTime": 1674248426951,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Creates a PhenoTips instance that's configured to use a postgres database.\n# This Dockerfile is based on https://github.com/meatcar/docker-phenotips/blob/master/Dockerfile\n\nFROM bitnami/minideb:stretch\n\nMAINTAINER MacArthur Lab\n\n# PhenoTips version to install\nENV PT_VERSION=\"1.2.6\"\n#ENV PT_VERSION=\"1.3.4\"\n#ENV PT_VERSION=\"1.4-milestone-1\"\n\nRUN install_packages default-jdk\n\n# install common utilities\nRUN install_packages curl emacs nano less htop wget unzip\n\n# install postgres client\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    postgresql \\\n    postgresql-client && rm -rf /var/lib/apt/lists/*;\n\n# download and install phenotips\nRUN wget https://nexus.phenotips.org/nexus/content/repositories/releases/org/phenotips/phenotips-standalone/${PT_VERSION}/phenotips-standalone-${PT_VERSION}.zip \\\n    && unzip phenotips-standalone-${PT_VERSION}.zip \\\n    && rm phenotips-standalone-${PT_VERSION}.zip\n\nWORKDIR /phenotips-standalone-${PT_VERSION}\n\n# install postgres driver into phenotips\nRUN wget https://jdbc.postgresql.org/download/postgresql-42.1.4.jar -O ./webapps/phenotips/WEB-INF/lib/postgresql-42.1.4.jar\n\n# update phenotips config\nCOPY config/${PT_VERSION}/xwiki.cfg ./webapps/phenotips/WEB-INF/xwiki.cfg\nCOPY config/${PT_VERSION}/hibernate.cfg.xml ./webapps/phenotips/WEB-INF/hibernate.cfg.xml\n\n# by default, installing phenotips requires manual interation with a web UI at the end for it to set up the final\n#   phenotips UI. To fully automate the installation, we did these manual steps and then saved the resulting\n#   init/${PT_VERSION}/extension directory + the postgres database contents to init/${PT_VERSION}/init_phenotips_db.sql\n#\n#   Then, for a new install, if we copy init/${PT_VERSION}/extension into the installation directory, and restore\n#   init_phenotips_db.sql, it causes phenotips to skip the final UI installation wizard and go directly to a fully\n#   initialized state.\nRUN rm -rf data/extension data/jobs\nCOPY init/${PT_VERSION}/extension ./data/extension\nCOPY init/${PT_VERSION}/jobs ./data/jobs\nCOPY init/${PT_VERSION}/init_phenotips_db.sql /\n\n# jetty port\nARG PHENOTIPS_SERVICE_PORT\nENV PHENOTIPS_SERVICE_PORT=$PHENOTIPS_SERVICE_PORT\nEXPOSE $PHENOTIPS_SERVICE_PORT\n\n# debug port, if debugging is on.\n# EXPOSE 5050\n\nCOPY readiness_probe /\nCOPY start_in_background.sh .\nCOPY bashrc /root/.bashrc\nCOPY entrypoint.sh .\n\nCMD [\"./entrypoint.sh\"]\n"
}