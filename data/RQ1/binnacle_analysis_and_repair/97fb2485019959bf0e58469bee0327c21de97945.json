{
  "startTime": 1674240489352,
  "endTime": 1674240489905,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 6,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 6,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/jenkinsci/docker-jnlp-slave\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\n\nENV \\\n    TERM=xterm \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8 \\\n    TIMEZONE=Asia/Shanghai \\\n    #openjdk8\n    #JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \\\n    #DOCKER_EXTRA_OPTS=\"--insecure-registry=gitlab.default.svc.cluster.local:5000\" \\\n    SSH_KNOWN_HOSTS=github.com\n\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n    && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils curl dialog vim-tiny locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n#openjdk8 apt-get install -y openjdk-8-jdk-headless\n# Add Oracle Java PPA\nRUN \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install software-properties-common apt-transport-https gnupg2 ca-certificates && \\\n    #add-apt-repository -y ppa:webupd8team/java && \\\n    echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > /etc/apt/sources.list.d/webupd8team-ubuntu-java.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 && \\\n    apt-get -y update && \\\n    # Auto-accept the Oracle License\n    #echo \"debconf shared/accepted-oracle-license-v1-1 select true\" | debconf-set-selections && \\\n    #echo \"debconf shared/accepted-oracle-license-v1-1 seen true\" | debconf-set-selections && \\\n    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n    apt-get -y --no-install-recommends install libpq-dev oracle-java8-installer && \\\n    # Clean up\n    rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update -y       \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n       build-essential \\\n       bzip2 \\\n       sudo \\\n       git \\\n       iptables \\\n       jq \\\n       unzip \\\n       zip && rm -rf /var/lib/apt/lists/*;\n\nARG MAVEN_VERSION=3.5.3\nARG USER_HOME_DIR=\"/root\"\nARG SHA=b52956373fab1dd4277926507ab189fb797b3bc51a2a267a193c931fffad8408\n#ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n\n#Install Docker in Docker\nRUN \\\n   curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg |apt-key add - \\\n   && add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n   $(lsb_release -cs) \\\n   stable\" \\\n   && apt-get update -y \\\n   && apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\nCOPY daemon.json /etc/docker/daemon.json\n\n# jenkins slave\nENV HOME /home/jenkins\n\nRUN groupadd -g 10000 jenkins \\\n    && useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 10000 -m jenkins \\\n    && usermod -a -G docker jenkins \\\n    && sed -i '/^root/a\\jenkins    ALL=(ALL:ALL) NOPASSWD:ALL' /etc/sudoers\n\nLABEL Description=\"This is a base image, which provides the Jenkins agent executable (slave.jar)\" Vendor=\"Jenkins project\" Version=\"3.20\"\n\nARG VERSION=3.20\nARG AGENT_WORKDIR=/home/jenkins/agent\n\nRUN curl -f --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \\\n  && chmod 755 /usr/share/jenkins \\\n  && chmod 644 /usr/share/jenkins/slave.jar\n\nCOPY jenkins-slave /usr/local/bin/jenkins-slave\nUSER jenkins\n\nENV AGENT_WORKDIR=${AGENT_WORKDIR}\nRUN mkdir /home/jenkins/.jenkins && mkdir -p ${AGENT_WORKDIR}\n\nVOLUME /home/jenkins/.jenkins\nVOLUME ${AGENT_WORKDIR}\nWORKDIR /home/jenkins\n\nENTRYPOINT [\"jenkins-slave\"]\n"
}