{
  "startTime": 1674234264038,
  "endTime": 1674234264226,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 19,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\n\nENV DOCKER_MACHNE_VERSION=0.8.2 \\\n  DELMO_VERSION=0.6.1 \\\n  DOCKER_VERSION=1.13.0\n\nRUN apk add --update curl nodejs py-pip \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && rm -rf /var/cache/apk/*\n\nRUN pip install --no-cache-dir awscli docker-compose\n\n# Install machine-share\nRUN npm install -g machine-share && npm cache clean --force;\n\n# Install docker\nRUN curl -f -L https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz > /tmp/docker-${DOCKER_VERSION}.tgz \\\n    && cd /tmp/ && tar xfz /tmp/docker-${DOCKER_VERSION}.tgz \\\n    && mv /tmp/docker/docker /usr/local/bin/docker \\\n    && chmod +x /usr/local/bin/docker && rm /tmp/docker-${DOCKER_VERSION}.tgz\n\n# Install docker-machine\nRUN curl -f -L https://github.com/docker/machine/releases/download/v${DOCKER_MACHNE_VERSION}/docker-machine-`uname -s`-`uname -m` > /usr/local/bin/docker-machine \\\n    && chmod +x /usr/local/bin/docker-machine \\\n    && mkdir -p /root/.docker/machine/machines \\\n    && mkdir -p /root/.docker/machine/certs\n\n# Install delmo\nRUN curl -f -L https://github.com/bodymindarts/delmo/releases/download/v${DELMO_VERSION}/delmo-linux-amd64 > /usr/local/bin/delmo \\\n      && chmod +x /usr/local/bin/delmo\n\nADD entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"delmo\", \"-v\"]\n"
}