{
  "startTime": 1674236189130,
  "endTime": 1674236189350,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 26,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 29,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "USER root\n\nENV PYTHONPATH=${PYTHONPATH}:${ODOO_FRM}\nENV DODOO_LOAD_OUT=/var/lib/dodoo-loader/logs.json\n\n# --- WDB Configuration ---\nENV WDB_NO_BROWSER_AUTO_OPEN=True \\\n    WDB_SOCKET_SERVER=wdb \\\n    WDB_WEB_PORT=1984 \\\n    WDB_WEB_SERVER=localhost\n\n\n# Get dodoo-* devops toolchain\nRUN pip install --no-cache-dir \\\n\n\n    dodoo-tester \\\n    dodoo-initializer \\\n    dodoo-loader \\\n    dodoo-migrator\n\n\n# Custom Odoo Scaffolding dependency\nRUN pip --quiet --no-cache-dir --quiet install pick\n\n\n# General develpoment libraries\nRUN pip --quiet --no-cache-dir --quiet install \\\n        astor \\\n        pylint-odoo \\\n        pylint-mccabe \\\n        coverage \\\n        ptpython \\\n        pudb \\\n        pyinotify \\\n        watchdog \\\n        wdb\n\n# For querying json log output\nRUN apt-get -qq update && apt-get -qq install -y --no-install-recommends jq  > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n\n# local browser testing\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \\\n    && apt-get -qq update && apt-get -qq install -y --no-install-recommends google-chrome-stable > /dev/null && rm -rf /var/lib/apt/lists/*;\n# For js test recordings\n# Not avaialble in jessie\nRUN apt-get -qq update && apt-get -qq install -y --no-install-recommends ffmpeg  > /dev/null || true && rm -rf /var/lib/apt/lists/*;\n# For chrome bworser testing\nRUN pip --quiet --no-cache-dir --quiet install websocket-client\n\n\n\nCOPY entrypoint.d/* /entrypoint.d/\nCOPY templates /templates\nENV ODOO_TEMPLATES_DIR=\"/templates\"\n\nRUN /bin/bash -c 'shopt -s dotglob \\\n && chmod +x /entrypoint.d/* \\\n && shopt -u dotglob'\n\n\n# Prepare odoo owned testlog folder for chrome screenshots\nRUN mkdir -p /var/lib/odoo-testlogs && chown odoo:odoo /var/lib/odoo-testlogs\n\n\n# Prepare odoo owned loading log folder for dodoo loader\nRUN mkdir -p /var/lib/dodoo-loader && chown odoo:odoo /var/lib/dodoo-loader\n"
}