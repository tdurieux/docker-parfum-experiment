{
  "startTime": 1674243759599,
  "endTime": 1674243759792,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ekidd/rust-musl-builder:1.32.0 as builder\n\nRUN VERS=1.2.11 && \\\n    cd /home/rust/libs && \\\n    curl -f -LO http://zlib.net/zlib-$VERS.tar.gz && \\\n    tar xzf zlib-$VERS.tar.gz && cd zlib-$VERS && \\\n    CC=musl-gcc CFLAGS=-fPIC ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --static --prefix=/usr/local/musl && \\\n    make && sudo make install && \\\n    cd .. && rm -rf zlib-$VERS.tar.gz zlib-$VERS\n\nRUN cd /home/rust/libs && \\\n    curl -f -LO https://github.com/lz4/lz4/archive/master.tar.gz && \\\n    tar xfz master.tar.gz && \\\n    ls && \\\n    cd lz4-master && \\\n    CC=musl-gcc CFLAGS=-fPIC make prefix=/usr/local/musl && \\\n    sudo make install prefix=/usr/local/musl && \\\n    cd .. && \\\n    rm -rf master.tar.gz lz4-master\n\nRUN sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends -y python2.7-minimal && \\\n    sudo ln -sf /usr/bin/python2.7 /usr/bin/python && rm -rf /var/lib/apt/lists/*;\n\nENV CC=musl-gcc \\\n    CFLAGS=-I/usr/local/musl/include \\\n    LDFLAGS=-L/usr/local/musl/lib\n\nCOPY --chown=rust:rust . /source\nRUN cd /source && cargo build --release\n\nFROM alpine:3.8\n\nRUN apk update \\\n  && apk upgrade --no-cache\n\nRUN apk add --no-cache --update \\\n  ca-certificates \\\n  llvm-libunwind \\\n  openssl && \\\n  update-ca-certificates && \\\n  rm -rf /var/cache/apk/* && \\\n  mkdir -p /etc/cernan/scripts\n\nCOPY --from=builder /source/target/x86_64-unknown-linux-musl/release/cernan /usr/bin/cernan\nCOPY examples/configs/quickstart.toml /etc/cernan/cernan.toml\n\nENV STATSD_PORT 8125\n\nENTRYPOINT /usr/bin/cernan\nCMD [\"--config\", \"/etc/cernan/cernan.toml\"]\n"
}