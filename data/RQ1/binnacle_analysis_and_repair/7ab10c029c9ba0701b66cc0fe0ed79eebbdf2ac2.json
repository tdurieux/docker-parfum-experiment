{
  "startTime": 1674236088806,
  "endTime": 1674236089081,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/anaconda3:2019.03\n\nRUN apt-get update && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n        libpq-dev \\\n        build-essential \\\n        git \\\n        sudo \\\n        cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev libboost-all-dev libsdl2-dev swig \\\n        unzip zip \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN conda update -n base conda\nRUN conda install -y \\\n        joblib \\\n        PyYAML==3.13\nRUN conda install -y -c conda-forge \\\n        tensorflow \\\n        pyopengl \\\n        xgboost \\\n        nbdime\nRUN pip install --no-cache-dir \"gym[atari,box2d,classic_control]\"\nRUN pip install --no-cache-dir \"urlextract\"\nRUN pip install --no-cache-dir \"tensorflow-hub\"\nRUN pip install --no-cache-dir \"tensorflow-serving-api\"\nRUN pip install --no-cache-dir \"tfx\"\n#RUN pip install \"tensorflow-addons\"\n#RUN pip install \"tf-agents-nightly\"\nRUN pip install --no-cache-dir \"tensorflow-datasets\"\nRUN pip install --no-cache-dir \"tensorflow-probability\"\n\nARG username\nARG userid\n\nARG home=/home/${username}\nARG workdir=${home}/handson-ml\n\nRUN adduser ${username} --uid ${userid} --gecos '' --disabled-password \\\n    && echo \"${username} ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/${username} \\\n    && chmod 0440 /etc/sudoers.d/${username}\n\nWORKDIR ${workdir}\nRUN chown ${username}:${username} ${workdir}\n\nUSER ${username}\nWORKDIR ${workdir}\n\n# The config below enables diffing notebooks with nbdiff (and nbdiff support\n# in git diff command) after connecting to the container by \"make exec\" (or\n# \"docker-compose exec handson-ml bash\")\n#       You may also try running:\n#         nbdiff NOTEBOOK_NAME.ipynb\n#       to get nbdiff between checkpointed version and current version of the\n# given notebook.\n\nRUN git-nbdiffdriver config --enable --global\n\n# INFO: Optionally uncomment any (one) of the following RUN commands below to ignore either\n#       metadata or details in nbdiff within git diff\n#RUN git config --global diff.jupyternotebook.command 'git-nbdiffdriver diff --ignore-metadata'\nRUN git config --global diff.jupyternotebook.command 'git-nbdiffdriver diff --ignore-details'\n\n\nCOPY docker/bashrc.bash /tmp/\nRUN cat /tmp/bashrc.bash >> ${home}/.bashrc\nRUN echo \"export PATH=\\\"${workdir}/docker/bin:$PATH\\\"\" >> ${home}/.bashrc\nRUN sudo rm /tmp/bashrc.bash\n\n\n# INFO: Uncomment lines below to enable automatic save of python-only and html-only\n#       exports alongside the notebook\n#COPY docker/jupyter_notebook_config.py /tmp/\n#RUN cat /tmp/jupyter_notebook_config.py >> ${home}/.jupyter/jupyter_notebook_config.py\n#RUN sudo rm /tmp/jupyter_notebook_config.py\n\n\n# INFO: Uncomment the RUN command below to disable git diff paging\n#RUN git config --global core.pager ''\n\n\n# INFO: Uncomment the RUN command below for easy and constant notebook URL (just localhost:8888)\n#       That will switch Jupyter to using empty password instead of a token.\n#       To avoid making a security hole you SHOULD in fact not only uncomment but\n#       regenerate the hash for your own non-empty password and replace the hash below.\n#       You can compute a password hash in any notebook, just run the code:\n#          from notebook.auth import passwd\n#          passwd()\n#       and take the hash from the output\n#RUN mkdir -p ${home}/.jupyter && \\\n#    echo 'c.NotebookApp.password = u\"sha1:c6bbcba2d04b:f969e403db876dcfbe26f47affe41909bd53392e\"' \\\n#    >> ${home}/.jupyter/jupyter_notebook_config.py\n"
}