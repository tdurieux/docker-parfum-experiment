{
  "startTime": 1674641718256,
  "endTime": 1674641718347,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openfaas/classic-watchdog:0.13.4 as watchdog\n\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch-arm32v7 as builder\n\n# Supress collection of data.\nENV DOTNET_CLI_TELEMETRY_OPTOUT 1\n\n# Optimize for Docker builder caching by adding projects first.\n\nRUN mkdir -p /home/app/src/function\nWORKDIR /home/app/src/function\nCOPY ./function/Function.csproj  .\n\nWORKDIR /home/app/src/\nCOPY ./root.csproj  .\nRUN dotnet restore ./root.csproj\n\nCOPY .  .\n\nRUN dotnet publish -c release -o published -r linux-arm\n\nFROM mcr.microsoft.com/dotnet/core/runtime:2.2.4-stretch-slim-arm32v7\n\nCOPY --from=watchdog /fwatchdog /usr/bin/fwatchdog\nRUN chmod +x /usr/bin/fwatchdog\n\n# Create a non-root user\nRUN addgroup --system app \\\n    && adduser --system --ingroup app app\n\nWORKDIR /home/app/\nCOPY --from=builder /home/app/src/published .\nRUN chown app:app -R /home/app\n\nRUN apt-get update && apt-get install --no-install-recommends -qy libunwind8 && rm -rf /var/lib/apt/lists/*;\n\nUSER app\n\nENV fprocess=\"dotnet ./root.dll\"\nEXPOSE 8080\n\nHEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1\nCMD [\"fwatchdog\"]\n"
}