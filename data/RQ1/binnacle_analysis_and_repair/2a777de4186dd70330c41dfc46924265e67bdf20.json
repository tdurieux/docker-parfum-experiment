{
  "startTime": 1674252502378,
  "endTime": 1674252502664,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM yobasystems/alpine:3.9.4-amd64\n\nARG BUILD_DATE\nARG VCS_REF\n\nLABEL maintainer=\"Dominic Taylor <dominic@yobasystems.co.uk>\" \\\n    architecture=\"amd64/x86_64\" \\\n    alpine-version=\"3.9.4\" \\\n    nginx-version=\"1.15.9\" \\\n    php-version=\"7.2.18\" \\\n    wordpress-version=\"latest\" \\\n    build=\"14-May-2019\" \\\n    org.opencontainers.image.title=\"alpine-php-wordpress\" \\\n    org.opencontainers.image.description=\"Wordpress image running on Alpine Linux\" \\\n    org.opencontainers.image.authors=\"Dominic Taylor <dominic@yobasystems.co.uk>\" \\\n    org.opencontainers.image.vendor=\"Yoba Systems\" \\\n    org.opencontainers.image.version=\"v3.9.4-s\" \\\n    org.opencontainers.image.url=\"https://hub.docker.com/r/yobasystems/alpine-php-wordpress/\" \\\n    org.opencontainers.image.source=\"https://github.com/yobasystems/alpine-php-wordpress\" \\\n    org.opencontainers.image.revision=$VCS_REF \\\n    org.opencontainers.image.created=$BUILD_DATE\n\nENV TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_NAME=\"\" \\\n    DB_USER=\"\"\\\n    DB_PASS=\"\"\n\nRUN \\\n    build_pkgs=\"build-base linux-headers openssl-dev pcre-dev wget zlib-dev\" && \\\n    runtime_pkgs=\" bash curl less vim ca-certificates git tzdata zip openssl pcre \\\n    libmcrypt-dev zlib-dev gmp-dev \\\n    freetype-dev libjpeg-turbo-dev libpng-dev \\\n    php7-fpm php7-json php7-zlib php7-xml php7-pdo php7-phar php7-openssl \\\n    php7-pdo_mysql php7-mysqli php7-session \\\n    php7-gd php7-iconv php7-mcrypt php7-gmp php7-zip \\\n    php7-curl php7-opcache php7-ctype php7-apcu \\\n    php7-intl php7-bcmath php7-dom php7-mbstring php7-xmlreader mysql-client curl\" && \\\n    apk --update add ${build_pkgs} ${runtime_pkgs} && apk add -u musl && \\\n    cd /tmp && \\\n    wget https://nginx.org/download/nginx-1.15.9.tar.gz && \\\n    tar xzf nginx-1.15.9.tar.gz && \\\n    cd /tmp/nginx-1.15.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --prefix=/etc/nginx \\\n      --sbin-path=/usr/sbin/nginx \\\n      --conf-path=/etc/nginx/nginx.conf \\\n      --error-log-path=/var/log/nginx/error.log \\\n      --http-log-path=/var/log/nginx/access.log \\\n      --pid-path=/var/run/nginx.pid \\\n      --lock-path=/var/run/nginx.lock \\\n      --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n      --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n      --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n      --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n      --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n      --user=nginx \\\n      --group=nginx \\\n      --with-http_ssl_module \\\n      --with-http_realip_module \\\n      --with-http_addition_module \\\n      --with-http_sub_module \\\n      --with-http_dav_module \\\n      --with-http_flv_module \\\n      --with-http_mp4_module \\\n      --with-http_gunzip_module \\\n      --with-http_gzip_static_module \\\n      --with-http_random_index_module \\\n      --with-http_secure_link_module \\\n      --with-http_stub_status_module \\\n      --with-http_auth_request_module \\\n      --with-mail \\\n      --with-mail_ssl_module \\\n      --with-file-aio \\\n      --with-ipv6 \\\n      --with-threads \\\n      --with-stream \\\n      --with-stream_ssl_module \\\n      --with-http_slice_module \\\n      --with-http_v2_module && \\\n    make && \\\n    make install && \\\n    sed -i -e 's/#access_log  logs\\/access.log  main;/access_log \\/dev\\/stdout;/' -e 's/#error_log  logs\\/error.log  notice;/error_log stderr notice;/' /etc/nginx/nginx.conf && \\\n    adduser -D nginx && \\\n    rm -rf /tmp/* && \\\n    apk del ${build_pkgs} && \\\n    rm -rf /var/cache/apk/* && rm nginx-1.15.9.tar.gz\n\nRUN sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php7/php.ini && \\\n    sed -i 's/expose_php = On/expose_php = Off/g' /etc/php7/php.ini && \\\n    sed -i \"s/nginx:x:100:101:nginx:\\/var\\/lib\\/nginx:\\/sbin\\/nologin/nginx:x:100:101:nginx:\\/usr:\\/bin\\/bash/g\" /etc/passwd && \\\n    sed -i \"s/nginx:x:100:101:nginx:\\/var\\/lib\\/nginx:\\/sbin\\/nologin/nginx:x:100:101:nginx:\\/usr:\\/bin\\/bash/g\" /etc/passwd- && \\\n    ln -s /sbin/php-fpm7 /sbin/php-fpm\n\nADD files/nginx.conf /etc/nginx/nginx.conf\nADD files/php-fpm.conf /etc/php7/\nADD files/run.sh /\nRUN chmod +x /run.sh && \\\n    curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/bin/wp-cli && chown nginx:nginx /usr/bin/wp-cli\n\nEXPOSE 80\nVOLUME [\"/usr\"]\n\nCMD [\"/run.sh\"]\n"
}