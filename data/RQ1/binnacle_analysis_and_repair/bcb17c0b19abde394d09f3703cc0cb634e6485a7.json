{
  "startTime": 1674246613261,
  "endTime": 1674246613557,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\nFROM ubuntu:16.04\n\n# prepare the directory for pulsar related files\nRUN mkdir /pulsar\nADD protobuf.patch /pulsar\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y maven tig g++ cmake libssl-dev libcurl4-openssl-dev \\\n                liblog4cxx-dev libprotobuf-dev libboost-all-dev google-mock libgtest-dev \\\n                libjsoncpp-dev libxml2-utils protobuf-compiler wget \\\n                curl doxygen openjdk-8-jdk-headless clang-format-5.0 \\\n                gnupg2 golang-1.10-go zip unzip libzstd-dev libsnappy-dev && rm -rf /var/lib/apt/lists/*;\n\n# Compile and install gtest\nRUN cd /usr/src/gtest && cmake . && make && cp libgtest.a /usr/lib\n\n# Compile and install google-mock\nRUN cd /usr/src/gmock && cmake . && make && cp libgmock.a /usr/lib\n\n# Include gtest parallel to speed up unit tests\nRUN git clone https://github.com/google/gtest-parallel.git\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\n\n## Website build dependencies\n\n# Install Ruby-2.4.1\nRUN apt-get install -y\nRUN gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB && \\\n    ( curl -f -sSL https://get.rvm.io | bash -s stable)\nENV PATH \"$PATH:/usr/local/rvm/bin\"\nRUN rvm install 2.4.1\n\n# Install nodejs and yarn\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\n# Install crowdin\nRUN wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb\nRUN dpkg -i crowdin.deb\n\n# Install PIP and PDoc\nRUN wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py\nRUN pip install --no-cache-dir pdoc\n\n# Install Protobuf doc generator (requires Go)\nENV GOPATH \"$HOME/go\"\nENV PATH \"/usr/lib/go-1.10/bin:$GOPATH/bin:$PATH\"\nRUN go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc\n\n# Build the patched protoc\nRUN git clone https://github.com/google/protobuf.git /pulsar/protobuf && \\\n    cd /pulsar/protobuf && \\\n    git checkout v2.4.1 && \\\n    patch -p1 < /pulsar/protobuf.patch && \\\n    autoreconf --install && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make\n"
}