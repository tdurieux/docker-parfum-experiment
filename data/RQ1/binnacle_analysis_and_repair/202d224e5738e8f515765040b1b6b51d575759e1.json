{
  "startTime": 1674245660581,
  "endTime": 1674245660694,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nWORKDIR /app\nRUN apt update && apt install --no-install-recommends -y python3 python3-pip curl && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir tqdm celery[redis] internetarchive\n# Google Cloud SDK\nCOPY service-key.json .\nCOPY ia.ini /root/.config/ia.ini\nENV GOOGLE_APPLICATION_CREDENTIALS /app/service-key.json\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | \\\n    tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update && apt-get install --no-install-recommends -y google-cloud-sdk kubectl && \\\n    gcloud config set project visualdb-1046 && \\\n    gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS && rm -rf /var/lib/apt/lists/*;\nCOPY tasks.py .\nCMD celery -A tasks worker -c 20"
}