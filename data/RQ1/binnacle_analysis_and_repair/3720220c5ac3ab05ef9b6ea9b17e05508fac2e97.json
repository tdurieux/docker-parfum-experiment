{
  "startTime": 1674246709607,
  "endTime": 1674246710214,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM harbor.h2o.ai/opsh2oai/h2o-3-hadoop-hdp-2.2:58\n\nENV LANG 'C.UTF-8'\nRUN locale\n\nRUN rm -rf /etc/hadoop/conf/yarn-site.xml\nCOPY conf/yarn-site.xml /etc/hadoop/conf/yarn-site.xml\n\nRUN \\\n    rm /etc/startup/70_start_slapd\n\nRUN \\\n    apt-get update && apt-get install -y --no-install-recommends apt-transport-https && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \\\n    add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/' && rm -rf /var/lib/apt/lists/*;\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y git npm curl zip s3cmd r-base r-base-dev libxml2-dev libssl-dev libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    curl -f -sL https://deb.nodesource.com/setup_11.x | sudo -E bash - && \\\n    sudo apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    R -e 'install.packages(\"xml2\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"openssl\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"httr\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"bitops\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"RCurl\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"jsonlite\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"testthat\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"dplyr\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"devtools\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"usethis\", repos = \"http://cran.us.r-project.org\")' && \\\n    R -e 'install.packages(\"sparklyr\", repos = \"http://cran.us.r-project.org\")'\n\n###\n###  Prepare Spark\n###\nRUN cd /home/jenkins && \\\n    wget https://archive.apache.org/dist/spark/spark-2.4.3/spark-2.4.3-bin-hadoop2.7.tgz && \\\n    mkdir -p spark-2.4.3-bin-hadoop2.7 && \\\n    tar zxvf spark-2.4.3-bin-hadoop2.7.tgz -C spark-2.4.3-bin-hadoop2.7 --strip-components 1 && \\\n    rm -rf spark-2.4.3-bin-hadoop2.7.tgz\n\nRUN cd /home/jenkins && \\\n    wget https://archive.apache.org/dist/spark/spark-2.3.3/spark-2.3.3-bin-hadoop2.7.tgz && \\\n    mkdir -p spark-2.3.3-bin-hadoop2.7 && \\\n    tar zxvf spark-2.3.3-bin-hadoop2.7.tgz -C spark-2.3.3-bin-hadoop2.7 --strip-components 1 && \\\n    rm -rf spark-2.3.3-bin-hadoop2.7.tgz\n\nRUN cd /home/jenkins && \\\n    wget https://archive.apache.org/dist/spark/spark-2.2.3/spark-2.2.3-bin-hadoop2.7.tgz && \\\n    mkdir -p spark-2.2.3-bin-hadoop2.7 && \\\n    tar zxvf spark-2.2.3-bin-hadoop2.7.tgz -C spark-2.2.3-bin-hadoop2.7 --strip-components 1 && \\\n    rm -rf spark-2.2.3-bin-hadoop2.7.tgz\n\nRUN cd /home/jenkins && \\\n    wget https://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz && \\\n    mkdir -p spark-2.1.3-bin-hadoop2.7 && \\\n    tar zxvf spark-2.1.3-bin-hadoop2.7.tgz -C spark-2.1.3-bin-hadoop2.7 --strip-components 1 && \\\n    rm -rf spark-2.1.3-bin-hadoop2.7.tgz\n\nENV SPARK_HOME_2_4 /home/jenkins/spark-2.4.3-bin-hadoop2.7\nENV SPARK_HOME_2_3 /home/jenkins/spark-2.3.3-bin-hadoop2.7\nENV SPARK_HOME_2_2 /home/jenkins/spark-2.2.3-bin-hadoop2.7\nENV SPARK_HOME_2_1 /home/jenkins/spark-2.1.3-bin-hadoop2.7\n\n\nUSER jenkins\n\n###\n### Warm up Gradle caches for Sparkling Water\n###\nRUN cd /home/jenkins && \\\n    git clone https://github.com/h2oai/sparkling-water.git && \\\n    cd sparkling-water && \\\n    ./gradlew build testClasses resolveTestRuntimeDependencies -PtestMojoPipeline=true -x check -x :sparkling-water-r:build -x :sparkling-water-py:build && \\\n    cd ..\n\n### Create VirtualEnvs for each Spark & Python combination\nRUN cd /home/jenkins/sparkling-water && \\\n    git checkout rel-2.4 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin && \\\n    git checkout rel-2.3 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin && \\\n    git checkout rel-2.2 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin && \\\n    git checkout rel-2.1 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python2.7/bin && \\\n    git checkout rel-2.4 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin && \\\n    git checkout rel-2.3 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin && \\\n    git checkout rel-2.2 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin && \\\n    git checkout rel-2.1 && ./gradlew :sparkling-water-py:pipInstall -PpythonPath=/envs/h2o_env_python3.6/bin && \\\n    cp -R /home/jenkins/sparkling-water/.gradle/python /home/jenkins/.gradle/python\n\n\nUSER root\n\nRUN sudo sh -c \"echo \\\"jenkins ALL=(ALL) NOPASSWD:ALL\\\" >> /etc/sudoers\"\n\n### Remove Sparkling Water\nRUN cd /home/jenkins && rm -rf sparkling-water\n\n# Change permissions so we can install R packages\nRUN chmod 777 /usr/local/lib/R/site-library\n\nUSER jenkins\n\nENV USER jenkins\n\n# Install Conda as we need to publish Sparkling Water as conda package\nRUN cd /home/jenkins && \\\n    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/jenkins/miniconda.sh && \\\n    bash /home/jenkins/miniconda.sh -b -p /home/jenkins/miniconda && \\\n    rm /home/jenkins/miniconda.sh\n\nENV PATH \"/home/jenkins/miniconda/bin:${PATH}\"\n\nRUN \\\n    conda install anaconda anaconda-client conda-build -y && \\\n    conda update conda -y && \\\n    conda update anaconda anaconda-client conda-build -y && \\\n    conda config --add channels conda-forge\n\nENV HIVE_HOME /usr/hdp/2.2.9.0-3393/hive\n\nRUN pip install --no-cache-dir awscli --upgrade --user\n"
}