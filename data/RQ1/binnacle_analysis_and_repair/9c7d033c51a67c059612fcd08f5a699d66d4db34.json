{
  "startTime": 1674235075463,
  "endTime": 1674235076189,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 208,
        "lineEnd": 208,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 159,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 159,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER CoNWeT Lab. Universidad Polit√©cnica de Madrid\n\nENV API_VERSION develop\n\nRUN apt-get update; \\\n    apt-get install --no-install-recommends -y --fix-missing python2.7 python-pip git wget unzip maven mysql-client openjdk-8-jdk; rm -rf /var/lib/apt/lists/*; \\\n    wget https://download.java.net/glassfish/4.1/release/glassfish-4.1.zip; \\\n    unzip glassfish-4.1.zip; \\\n    pip install --no-cache-dir sh; \\\n    wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.39.tar.gz; \\\n    tar -xvf mysql-connector-java-5.1.39.tar.gz; rm mysql-connector-java-5.1.39.tar.gz \\\n    cp ./mysql-connector-java-5.1.39/mysql-connector-java-5.1.39-bin.jar glassfish4/glassfish/domains/domain1/lib; \\\n    mkdir /apis;\n\nWORKDIR /apis\n\nRUN mkdir wars; \\\ngit clone https://github.com/FIWARE-TMForum/DSPRODUCTCATALOG2.git\n\nWORKDIR DSPRODUCTCATALOG2\n\nRUN git checkout $API_VERSION; \\\n    sed -i 's/jdbc\\/sample/jdbc\\/pcatv2/g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties; fi; \\\n    grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\n    mvn install; \\\n    mv ./target/DSProductCatalog.war ../wars/;\n\nWORKDIR ../\n\n# Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTORDERING.git\n\nWORKDIR DSPRODUCTORDERING\n\nRUN git checkout $API_VERSION; \\\n    sed -i 's/jdbc\\/sample/jdbc\\/podbv2/g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    if [ -f \"./src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./src/main/java/org/tmf/dsmapi/settings.properties ./src/main/resources/settings.properties; fi; \\\n    grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\n    mvn install; \\\n    mv ./target/DSProductOrdering.war ../wars/\n\nWORKDIR ../\n\n# Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPRODUCTINVENTORY.git\n\nWORKDIR DSPRODUCTINVENTORY\n\nRUN git checkout $API_VERSION; \\\nsed -i 's/jdbc\\/sample/jdbc\\/pidbv2/g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nif [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties; fi; \\\ngrep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\nmvn install; \\\nmv ./target/DSProductInventory.war ../wars/\n\nWORKDIR ../\n\n# Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSPARTYMANAGEMENT.git\n\nWORKDIR DSPARTYMANAGEMENT\n\nRUN git checkout $API_VERSION; \\\nsed -i 's/jdbc\\/sample/jdbc\\/partydb/g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nif [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties; fi; \\\ngrep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\nmvn install; \\\nmv ./target/DSPartyManagement.war ../wars/\n\nWORKDIR ../\n\n# Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSBILLINGMANAGEMENT.git\n\nWORKDIR DSBILLINGMANAGEMENT\n\nRUN git checkout $API_VERSION; \\\nsed -i 's/jdbc\\/sample/jdbc\\/bmdbv2/g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nif [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties; fi; \\\ngrep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\nmvn install; \\\nmv ./target/DSBillingManagement.war ../wars/\n\nWORKDIR ../\n\n# Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSCUSTOMER.git\n\nWORKDIR DSCUSTOMER\n\nRUN git checkout $API_VERSION; \\\nsed -i 's/jdbc\\/sample/jdbc\\/customerdbv2/g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nsed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\nif [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties; fi; \\\ngrep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\nmvn install; \\\nmv ./target/DSCustomerManagement.war ../wars/\n\nWORKDIR ../\n\n# Next api Docker\nRUN git clone https://github.com/FIWARE-TMForum/DSUSAGEMANAGEMENT.git\n\nWORKDIR DSUSAGEMANAGEMENT\n\nRUN git checkout $API_VERSION; \\\n    sed -i 's/jdbc\\/sample/jdbc\\/usagedbv2/g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<provider>org\\.eclipse\\.persistence\\.jpa\\.PersistenceProvider<\\/provider>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<property name=\"eclipselink\\.ddl-generation\" value=\"drop-and-create-tables\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    sed -i 's/<property name=\"eclipselink\\.logging\\.level\" value=\"FINE\"\\/>/ /g' ./src/main/resources/META-INF/persistence.xml; \\\n    if [ -f \"./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties\" ]; then mv ./DSPRODUCTORDERING/src/main/java/org/tmf/dsmapi/settings.properties ./DSPRODUCTORDERING/src/main/resources/settings.properties; fi; \\\n    grep -F \"<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"/>\" ./src/main/resources/META-INF/persistence.xml || sed -i 's/<\\/properties>/\\t<property name=\\\"javax.persistence.schema-generation.database.action\\\" value=\\\"create\\\"\\/>\\n\\t\\t<\\/properties>/g' ./src/main/resources/META-INF/persistence.xml; \\\n    mvn install; \\\n    mv ./target/DSUsageManagement.war ../wars/\n\nWORKDIR ../\n\n# Compile RSS\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-rss.git\n\nWORKDIR business-ecosystem-rss\n\nRUN git checkout $VERSION\n\nRUN mvn install -DskipTests && \\\n    mkdir /etc/default/rss/\n\n# Set volume for property files\nVOLUME /etc/default/rss\n\nWORKDIR ../\n\n# Create a volume for exposing war files\nRUN mkdir wars-ext\nVOLUME /apis/wars-ext\n\nWORKDIR /\n\n# Deploy charging backend\nRUN apt-get update && apt-get install --no-install-recommends -y --fix-missing \\\n    gcc vim git wkhtmltopdf xvfb python2.7 python-pip \\\n    python-dev build-essential libssl-dev libffi-dev \\\n    apache2 libapache2-mod-wsgi && \\\n    git clone https://github.com/FIWARE-TMForum/business-ecosystem-charging-backend.git && \\\n    pip install --no-cache-dir sh && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR business-ecosystem-charging-backend\n\nRUN git checkout $VERSION && \\\n    mkdir ./src/media && \\\n    mkdir ./src/media/bills && \\\n    mkdir ./src/media/assets && \\\n    mkdir ./src/plugins && \\\n    mkdir ./src/user_settings\n\nENV WORKSPACE=`pwd`\n\n# Install dependencies and configure system to use volume settings\nRUN ./python-dep-install.sh && \\\n    echo \"from user_settings.settings import *\" > ./src/settings.py\n\n# Create volumes\nVOLUME /business-ecosystem-charging-backend/src/media/bills\nVOLUME /business-ecosystem-charging-backend/src/media/assets\nVOLUME /business-ecosystem-charging-backend/src/plugins\nVOLUME /business-ecosystem-charging-backend/src/user_settings\nVOLUME /business-ecosystem-charging-backend/src/wstore/asset_manager/resource_plugins/plugins\n\nWORKDIR src\n\nRUN rm wsgi.py\nCOPY wsgi.py .\n\nWORKDIR /etc/apache2/\nCOPY charging.conf ./sites-available\n\nRUN ln -s ../sites-available/charging.conf ./sites-enabled/charging.conf && \\\n    sed -i \"s|Listen 80|Listen 8006|g\" ports.conf\n\n# Deploy logic proxy\n\nWORKDIR /\n\nRUN git clone https://github.com/FIWARE-TMForum/business-ecosystem-logic-proxy\n\nWORKDIR business-ecosystem-logic-proxy\n\nRUN wget https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.xz && \\\n    tar -xvf node-v6.9.1-linux-x64.tar.xz && \\\n    echo 'export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin' >> ~/.bashrc && \\\n    git checkout $VERSION && \\\n    mkdir indexes && \\\n    mkdir themes && rm node-v6.9.1-linux-x64.tar.xz\n\nVOLUME /business-ecosystem-logic-proxy/indexes\nVOLUME /business-ecosystem-logic-proxy/themes\nVOLUME /business-ecosystem-logic-proxy/static\n\nRUN export PATH=$PATH:/business-ecosystem-logic-proxy/node-v6.9.1-linux-x64/bin && \\\n    ./install.sh && \\\n    mkdir etc && \\\n    cp config.js.template etc/config.js && \\\n    echo \"module.exports = require('./etc/config');\" > config.js\n\nCOPY ./getConfig.js /business-ecosystem-logic-proxy\n\nWORKDIR /\n\nCOPY ./entrypoint.sh /\nCOPY ./apis-entrypoint.py /\n\nEXPOSE 8000\nENTRYPOINT [\"/entrypoint.sh\"]\n\n"
}