{
  "startTime": 1674240997879,
  "endTime": 1674240997919,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM yourdockername/base-php-nginx:latest\n\n# add bitbucket and github to known hosts for ssh needs\nWORKDIR /root/.ssh\nRUN chmod 0600 /root/.ssh \\\n    && ssh-keyscan -t rsa bitbucket.org >> known_hosts \\\n    && ssh-keyscan -t rsa github.com >> known_hosts\n\n##\n## Compose Package Manager\n##\n\n# install composer dependencies\nWORKDIR /var/www/app\nCOPY ./composer.json ./composer.lock* ./\nENV COMPOSER_VENDOR_DIR=/var/www/vendor\n# RUN composer config github-oauth.github.com YOUROAUTHKEYHERE\nRUN composer install --no-scripts --no-autoloader --ansi --no-interaction\n\n##\n## Node Build Tools\n##\n\n# we hardcode to develop so all tools are there for npm build\nENV NODE_ENV=develop\n# install dependencies first, in a different location for easier app bind mounting for local development\nWORKDIR /var/www\nCOPY ./package.json .\nRUN npm install && npm cache clean --force;\n# no need to cache clean in non-final build steps\nENV PATH /var/www/node_modules/.bin:$PATH\nENV NODE_PATH=/var/www/node_modules\nWORKDIR /var/www/app\n\n##\n## We Are Go for Bower\n##\n\n# If you were to use Bower, this might be how to do it\n# COPY ./bower.json .\n# RUN bower install --allow-root\n\n# add custom php-fpm pool settings, these get written at entrypoint startup\nENV FPM_PM_MAX_CHILDREN=20 \\\n    FPM_PM_START_SERVERS=2 \\\n    FPM_PM_MIN_SPARE_SERVERS=1 \\\n    FPM_PM_MAX_SPARE_SERVERS=3\n\n# Laravel App Config\n# setup app config environment at runtime\n# gets put into ./.env at startup\nENV APP_NAME=Laravel \\\n    APP_ENV=local \\\n    APP_DEBUG=true \\\n    APP_KEY=KEYGOESHERE \\\n    APP_LOG=errorlog \\\n    APP_URL=http://localhost \\\n    DB_CONNECTION=mysql \\\n    DB_HOST=mysql \\\n    DB_PORT=3306 \\\n    DB_DATABASE=homestead \\\n    DB_USERNAME=homestead \\\n    DB_PASSWORD=secret\n# Many more ENV may be needed here, and updated in docker-php-entrypoint file\n\n\n# update the entrypoint to write config files and do last minute builds on startup\n# notice we have a -dev version, which does different things on local docker-compose\n# but we'll default to entrypoint of running the non -dev one\nCOPY docker-php-* /usr/local/bin/\nRUN dos2unix /usr/local/bin/docker-php-entrypoint\nRUN dos2unix /usr/local/bin/docker-php-entrypoint-dev\n\n\n# copy in nginx config\nCOPY ./nginx.conf /etc/nginx/nginx.conf\nCOPY ./nginx-site.conf /etc/nginx/conf.d/default.conf\n\n\n# copy in app code as late as possible, as it changes the most\nWORKDIR /var/www/app\nCOPY --chown=www-data:www-data . .\nRUN composer dump-autoload -o\n\n# be sure nginx is properly passing to php-fpm and fpm is responding\nHEALTHCHECK --interval=5s --timeout=3s \\\n  CMD curl -f http://localhost/ping || exit 1\n\nWORKDIR /var/www/app/public\nEXPOSE 80 443 9000 9001\n\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n"
}