{
  "startTime": 1674641699089,
  "endTime": 1674641699203,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM microsoft/dotnet:2.1-sdk \nARG DEBIAN_FRONTEND=noninteractive \nEXPOSE 5123 \nENV ASPNETCORE_URLS=http://127.0.0.1:5123 \nENV FETCHER_HUB_CONNECTION_URL=http://127.0.0.1:5123/data \n\nWORKDIR /source \n\n# Update everything in the image. \nRUN apt-get update -qq && \\  \napt-get dist-upgrade -qqy \n\n# Add NodeJs. \nRUN curl -f -sL -q https://deb.nodesource.com/setup_8.x | bash - && \\\n apt-get install --no-install-recommends -qqy nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Restore .dotnet core packages. \nWORKDIR /source/Core \nCOPY Core/*.csproj . \nWORKDIR /source/Web \nCOPY Web/*.csproj . \nRUN dotnet restore \nWORKDIR /source/Fetcher \nCOPY Fetcher/*.csproj . \nRUN dotnet restore \nWORKDIR /source \n\n# Install all nodejs dependencies globally. \nWORKDIR /source/Web \nCOPY Web/package.json . \nRUN npm install --silent && npm cache clean --force;\n\n# Copy everything in. \nWORKDIR /source \nCOPY . . \n\n# Build the fetcher. \nWORKDIR /source/Fetcher \nRUN dotnet publish --output /app --configuration Release \n\n# Build the frontend. \nWORKDIR /source/Web \nRUN npm start \nRUN dotnet publish --output /app --configuration Release \n\n# Run the published application. \nWORKDIR /app \nCMD [\"dotnet\", \"Web.dll\"] \n\n"
}