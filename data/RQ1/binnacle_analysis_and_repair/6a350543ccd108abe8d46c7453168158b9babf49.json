{
  "startTime": 1674249299655,
  "endTime": 1674249299899,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 11,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 11,
        "columnEnd": 107
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tomcat:8.0.47-jre7-alpine\n\nRUN ALPINE_GLIBC_VERSION=\"latest\" && \\\n    ALPINE_GLIBC_REPO=\"sgerrand\" && \\\n    ALPINE_GLIBC_PROJ=\"alpine-pkg-glibc\" && \\\n    DOCKERIZE_VERSION=\"latest\" && \\\n    DOCKERIZE_REPO=\"jwilder\" && \\\n    DOCKERIZE_PROJ=\"dockerize\" && \\\n    apk add --update -t deps wget ca-certificates curl bash && \\\n    cd /tmp && \\\n    wget $( curl -f -s https://api.github.com/repos/$ALPINE_GLIBC_REPO/$ALPINE_GLIBC_PROJ/releases/$ALPINE_GLIBC_VERSION | grep 'browser_' | egrep 'glibc-.*.apk' | cut -d\\\" -f4) && \\\n    apk add --allow-untrusted glibc-*.apk && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true && \\\n    echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh && \\\n    wget $( curl -f -s https://api.github.com/repos/$DOCKERIZE_REPO/$DOCKERIZE_PROJ/releases/$DOCKERIZE_VERSION | grep 'browser_' | egrep 'amd64-.*.tar.gz' | cut -d\\\" -f4) && \\\n    tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-v*.tar.gz && \\\n    apk del --purge deps glibc-i18n && \\\n    apk add --update wget ca-certificates curl bash && \\\n    rm -rf /tmp/* /var/cache/apk/* && rm dockerize-alpine-linux-amd64-v*.tar.gz\n\nARG MAVEN_VERSION=3.5.0\nARG USER_HOME_DIR=\"/root\"\nARG SHA=beb91419245395bd69a4a6edad5ca3ec1a8b64e41457672dc687c173a495f034\nARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n\nCOPY settings-docker.xml /usr/share/maven/ref/\n\n\n#RUN apk add --no-cache\n\n"
}