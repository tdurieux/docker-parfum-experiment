{
  "startTime": 1674243058073,
  "endTime": 1674243058219,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 11,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 12,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 29,
        "columnStart": 26,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 29,
        "columnStart": 26,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM    ubuntu:16.04\nFROM    debian:stretch\n\nENV     DEBIAN_FRONTEND noninteractive\nARG\tGITREPO=conversence/idealoom\nARG\tGITBRANCH=master\nARG DOCKER_RC=configs/docker.rc\nARG BUILDING_DOCKER=true\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            apt-utils \\\n            locales \\\n            python3 \\\n            python3-pip \\\n            python3-paramiko \\\n            python3-future \\\n            python3-virtualenv \\\n            python3-wheel \\\n            python3-setuptools \\\n            python3-nose \\\n            python3-venv \\\n            python3-psycopg2 \\\n            git \\\n            openssh-server \\\n            sudo \\\n            net-tools \\\n            monit \\\n            uwsgi \\\n            curl \\\n            uwsgi-plugin-python && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir Fabric3\nRUN         useradd -m -U -G www-data idealoom_user && \\\n            ssh-keygen -P '' -f ~/.ssh/id_rsa && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n            sudo -u idealoom_user -i sh -c \"cd && mkdir .ssh && ssh-keygen -P '' -f .ssh/id_rsa && cat .ssh/id_rsa.pub >> .ssh/authorized_keys\" && \\\n            cat ~/.ssh/id_rsa.pub >> ~idealoom_user/.ssh/authorized_keys\nWORKDIR /opt\nRUN /etc/init.d/ssh start && \\\n           ssh-keyscan localhost && \\\n           curl -f -o fabfile.py https://raw.githubusercontent.com/$GITREPO/$GITBRANCH/fabfile.py && \\\n           touch empty.rc && \\\n           fab -c empty.rc install_assembl_server_deps && \\\n           rm -r __pycache__ fabfile.py* empty.rc && \\\n           /etc/init.d/ssh stop\nRUN     cd /opt ; set -x ; git clone -b $GITBRANCH https://github.com/$GITREPO.git ; chown -R idealoom_user:idealoom_user idealoom\nWORKDIR /opt/idealoom\nENV LC_ALL C.UTF-8\nENV LC_CTYPE C.UTF-8\nRUN     /etc/init.d/ssh start && \\\n           ssh-keyscan localhost && \\\n           fab -c $DOCKER_RC build_virtualenv && \\\n           fab -c $DOCKER_RC app_update_dependencies && \\\n           /etc/init.d/ssh stop\nRUN        /etc/init.d/ssh start && \\\n           ssh-keyscan localhost && \\\n           fab -c $DOCKER_RC app_compile_nodbupdate && \\\n           fab -c $DOCKER_RC set_file_permissions && \\\n           /etc/init.d/ssh stop\nCMD     /etc/init.d/ssh start && \\\n        . venv/bin/activate && \\\n        fab -c $DOCKER_RC docker_startup && \\\n        tail -f /dev/null\n"
}