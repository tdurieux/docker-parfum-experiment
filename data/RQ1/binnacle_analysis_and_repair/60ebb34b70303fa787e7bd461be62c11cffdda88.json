{
  "startTime": 1674249530394,
  "endTime": 1674249530420,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is an example Dockerfile for running a tesla-microservice app in a docker container.\n#\n# Instructions:\n# 1. build uber jar:\n#       ./lein.sh clean\n#       ./lein.sh uberjar\n# 2. build docker image\n#       docker build -t tesla-example:latest .\n# 3. run docker container\n#       docker run -d -p 8080:8080 tesla-example:latest\n\nFROM centos:6\nMAINTAINER Felix Bechstein <felix.bechstein@otto.de>\nEXPOSE 8080\n\n# prepare image\nRUN yum install -y java-1.8.0-openjdk-headless && rm -rf /var/cache/yum\nUSER daemon\n\n# set command line\nCMD [\"java\", \"-Dlog_level=info\", \"-jar\", \"/tesla-microservice-standalone.jar\"]\n\n# instead of logging to stdout, you may log to file in /log. create volume or mount host volume to /log\n# RUN mkdir /log && chown daemon /log\n# CMD [\"java\", \"-Dlog_level=info\", \"-Dlog_appender=fileAppender\", \"-Dlog_location=/log\", \"-jar\", \"/tesla-microservice-standalone.jar\"]\n\n# drop in uber jar\nADD target/tesla-microservice-*-standalone.jar /tesla-microservice-standalone.jar\n"
}