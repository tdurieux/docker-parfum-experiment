{
  "startTime": 1674238953065,
  "endTime": 1674238953299,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7.16\n\nRUN apt-get update && apt-get upgrade -y\n\n# install librdkafka\nENV LIBRDKAFKA_VERSION 1.0.0\nRUN git clone --depth 1 --branch v${LIBRDKAFKA_VERSION} https://github.com/edenhill/librdkafka.git librdkafka \\\n    && cd librdkafka \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && make clean \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --clean\n\nENV CPLUS_INCLUDE_PATH /usr/local/include\nENV LIBRARY_PATH /usr/local/lib\nENV LD_LIBRARY_PATH /usr/local/lib\n\nRUN pip install --no-cache-dir gevent==1.1.2 flask==0.11.1 confluent-kafka==${LIBRDKAFKA_VERSION} \\\n    requests==2.10.0 cloudant==2.5.0 psutil==5.0.0\n\n# while I expect these will be overridden during deployment, we might as well\n# set reasonable defaults\nENV PORT 5000\nENV LOCAL_DEV False\nENV GENERIC_KAFKA True\n\nRUN mkdir -p /KafkaFeedProvider\nADD provider/*.py /KafkaFeedProvider/\n\n# Automatically curl the health endpoint every 5 minutes.\n# If the endpoint doesn't respond within 30 seconds, kill the main python process.\n# As of docker 1.12, a failed healthcheck never results in the container being\n# restarted. Killing the main process is a way to make the restart policy kicks in.\nHEALTHCHECK --interval=5m --timeout=1m CMD curl -m 30 --fail http://localhost:5000/health || killall python\n\nCMD [\"/bin/bash\", \"-c\", \"cd KafkaFeedProvider && python -u app.py\"]\n\n"
}