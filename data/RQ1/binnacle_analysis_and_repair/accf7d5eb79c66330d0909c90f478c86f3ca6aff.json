{
  "startTime": 1674235881162,
  "endTime": 1674235881367,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jenkins:alpine\n\nLABEL maintainer \"Gary A. Stafford <garystafford@rochester.rr.com>\"\nLABEL refreshed_at 2017-05-24\n\n# switch to install packages via apk\nUSER root\n\n# update and install tools including python3\nRUN set -x \\\n  echo \"http://dl-6.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n  && apk update \\\n  && apk upgrade \\\n  && apk add --no-cache openrc git openntpd tzdata python3 jq \\\n  && python3 --version; docker --version; git --version; jq --version\n\n# set timezone to America/New_York\nRUN set -x \\\n  && ls /usr/share/zoneinfo \\\n  && cp /usr/share/zoneinfo/America/New_York /etc/localtime \\\n  && echo \"America/New_York\" >  /etc/timezone \\\n  && date \\\n  && apk del tzdata\n\n# install pip\nRUN set -x \\\n  && curl -f -O https://bootstrap.pypa.io/get-pip.py \\\n  && python3 get-pip.py --user \\\n  && exec bash\n\n# upgrade pip\nRUN set -x \\\n  && pip3 install --no-cache-dir --upgrade pip \\\n  && pip3 --version\n\n# install AWS cli\nRUN set -x \\\n  && pip3 install --no-cache-dir awscli --upgrade \\\n  && exec bash\n\n# confirm by checking vesion\nRUN set -x \\\n  && aws --version\n\n# install packer\nRUN set -x \\\n  && packer_version=\"1.0.0\" \\\n  && curl -f -O \"https://releases.hashicorp.com/packer/${packer_version}/packer_${packer_version}_linux_amd64.zip\" \\\n  && unzip packer_${packer_version}_linux_amd64.zip \\\n  && rm -rf packer_${packer_version}_linux_amd64.zip \\\n  && mv packer /usr/bin \\\n  && packer version\n\n# install terraform\nRUN set -x \\\n  && tf_version=\"0.9.5\" \\\n  && curl -f -O \"https://releases.hashicorp.com/terraform/${tf_version}/terraform_${tf_version}_linux_amd64.zip\" \\\n  && unzip terraform_${tf_version}_linux_amd64.zip \\\n  && rm -rf terraform_${tf_version}_linux_amd64.zip \\\n  && mv terraform /usr/bin \\\n  && terraform version\n\n# install plugins\nCOPY plugins.txt /usr/share/jenkins/plugins.txt\nRUN set -x \\\n  && /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt\n\n# drop back to the regular jenkins user - good practice\nUSER jenkins\n"
}