{
  "startTime": 1674251818688,
  "endTime": 1674251818819,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 0,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "FROM behance/docker-base:2.3-ubuntu-18.04 \nMAINTAINER Bryan Latten <latten@adobe.com> \n\nENV CONTAINER_ROLE=web \\  \nCONTAINER_PORT=8080 \\  \nCONF_NGINX_SITE=\"/etc/nginx/sites-available/default\" \\  \nCONF_NGINX_SERVER=\"/etc/nginx/nginx.conf\" \\  \nNOT_ROOT_USER=www-data \n\n# Using a non-privileged port to prevent having to use setcap internally \nEXPOSE ${CONTAINER_PORT} \n\n# - Update security packages, only \n# - Install pre-reqs \n# - Install latest nginx (development PPA is actually mainline development) \n# - Perform cleanup, ensure unnecessary packages are removed \nRUN /bin/bash -e /security_updates.sh && \\  \napt-get install --no-install-recommends -yqq \\  \nsoftware-properties-common \\  \n&& \\  \nadd-apt-repository ppa:nginx/development -y && \\  \napt-get update -yqq && \\  \napt-get install -yqq --no-install-recommends \\  \nnginx-light \\  \n&& \\  \napt-get remove --purge -yq \\  \nmanpages \\  \nmanpages-dev \\  \nman-db \\  \npatch \\  \nmake \\  \nunattended-upgrades \\  \npython* \\\n&& \\\n/bin/bash -e /clean.sh && rm -rf /var/lib/apt/lists/*;\n\n# Overlay the root filesystem from this repo \nCOPY ./container/root / \n# Set nginx to listen on defined port \n# NOTE: order of operations is important, new config had to already installed\nfrom repo (above) \n# - Make temp directory for .nginx runtime files \n# - Some operations can be completely removed once this ticket is resolved: \n# - https://trac.nginx.org/nginx/ticket/1243 \n# - Remove older WOFF mime-type \n# - Add again with newer mime-type \n# - Also add mime-type for WOFF2 \nRUN sed -i \"s/listen [0-9]*;/listen ${CONTAINER_PORT};/\" $CONF_NGINX_SITE && \\  \nmkdir /tmp/.nginx && \\  \nsed -i \"/application\\/font-woff/d\" /etc/nginx/mime.types && \\  \nsed -i \"s/}/\\n font\\/woff woff;&/\" /etc/nginx/mime.types && \\  \nsed -i \"s/}/\\n font\\/woff2 woff2;\\n&/g\" /etc/nginx/mime.types \n\nRUN goss -g /tests/ubuntu/nginx.goss.yaml validate && \\  \n/aufs_hack.sh \n\n# NOTE: intentionally NOT using s6 init as the entrypoint \n# This would prevent container debugging if any of those service crash \nCMD [\"/bin/bash\", \"/run.sh\"] \n\n"
}