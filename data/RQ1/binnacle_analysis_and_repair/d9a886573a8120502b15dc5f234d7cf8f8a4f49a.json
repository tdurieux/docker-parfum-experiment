{
  "startTime": 1674235633988,
  "endTime": 1674235634409,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:9.5-slim\n\n# Maintainer\nMAINTAINER Andreas Peters <support@aventer.biz>\n\n# install homerserver template\nCOPY adds/start.sh /start.sh\n\n# startup configuration\nENTRYPOINT [\"/start.sh\"]\nCMD [\"autostart\"]\nEXPOSE 8448\nVOLUME [\"/data\"]\n\n# Git branch to build from\nARG BV_SYN=master\nARG BV_TUR=master\nARG TAG_SYN=v0.99.5.1\n\n# user configuration\nENV MATRIX_UID=991 MATRIX_GID=991\n\n# use --build-arg REBUILD=$(date) to invalidate the cache and upgrade all\n# packages\nARG REBUILD=1\nRUN set -ex \\\n    && mkdir /uploads \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && mkdir -p /var/cache/apt/archives \\\n    && touch /var/cache/apt/archives/lock \\\n    && apt-get clean \\\n    && apt-get update -y -q --fix-missing\\\n    && apt-get upgrade -y \\\n    && buildDeps=' \\\n        file \\\n        gcc \\\n        git \\\n        libevent-dev \\\n        libffi-dev \\\n        libgnutls28-dev \\\n        libjpeg62-turbo-dev \\\n        libldap2-dev \\\n        libsasl2-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtool \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        linux-headers-amd64 \\\n        make \\\n        zlib1g-dev \\\n        python3-dev \\\n        python3-setuptools \\\n        libpq-dev \\\n    ' \\\n    && apt-get install -y --no-install-recommends \\\n        $buildDeps \\\n        bash \\\n        coreutils \\\n        coturn \\\n        libffi6 \\\n        libjpeg62-turbo \\\n        libssl1.1 \\\n        libtool \\\n        libxml2 \\\n        libxslt1.1 \\\n        pwgen \\\n        python3 \\\n        python3-pip \\\n        python3-jinja2 \\\n        sqlite \\\n        zlib1g \\\n    ; rm -rf /var/lib/apt/lists/*; \\\n    pip3 install --no-cache-dir --upgrade wheel; \\\n    pip3 install --no-cache-dir --upgrade psycopg2; \\\n    pip3 install --no-cache-dir --upgrade python-ldap; \\\n    pip3 install --no-cache-dir --upgrade lxml \\\n    ; \\\n    git clone --branch $BV_SYN --depth 1 https://github.com/matrix-org/synapse.git \\\n    && cd /synapse \\\n    git checkout tags/$TAG_SYN \\\n    && pip3 install --no-cache-dir --upgrade .[all] \\\n    && GIT_SYN=$(git ls-remote https://github.com/matrix-org/synapse $BV_SYN | cut -f 1) \\\n    && echo \"synapse: $BV_SYN ($GIT_SYN)\" >> /synapse.version \\\n    && cd / \\\n    && rm -rf /synapse \\\n    ; \\\n    groupadd -r -g $MATRIX_GID matrix \\\n    && useradd -r -d /data -M -u $MATRIX_UID -g matrix matrix \\\n    && chown -R $MATRIX_UID:$MATRIX_GID /data \\\n    && chown -R $MATRIX_UID:$MATRIX_GID /uploads\n\nUSER matrix\n"
}