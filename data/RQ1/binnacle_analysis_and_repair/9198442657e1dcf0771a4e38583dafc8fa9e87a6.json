{
  "startTime": 1674239780645,
  "endTime": 1674239780875,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start with the \"official\" Elixir build (this simplifies quite a bit here).\n# This uses the \"official\" Erlang build (right now at 19.1.5 and includes rebar 2 & 3)\n# on top of Debian jessie.\nFROM elixir:1.4.0\n\nMAINTAINER Paul Lamb <paul@oil-law.com>\n\nENV REFRESHED_AT 2017-01-15\n# 2017-01-15 update to elixir 1.4.0\n# 2017-01-01 Switch to copying from \"official\" node\n# 2016-11-03 Switch to \"official\" Elixir Dockerfile for base and node 6.7.0\n# 2016-11-02 updated to Erlang 19 and Elixir 1.3\n# 2015-12-20 update Erlang to 18.* so that it will pick up the latest one (18.2 isn't in repo yet)\n\n# Install hex\nRUN /usr/local/bin/mix local.hex --force && \\\n    /usr/local/bin/mix hex.info\n\n\n# -----------------------------------------------------------------------------\n# node:6.9.2\n# https://hub.docker.com/_/node/\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbzip2 \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\timagemagick \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibdb-dev \\\n\t\tlibevent-dev \\\n\t\tlibffi-dev \\\n\t\tlibgdbm-dev \\\n\t\tlibgeoip-dev \\\n\t\tlibglib2.0-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibkrb5-dev \\\n\t\tliblzma-dev \\\n\t\tlibmagickcore-dev \\\n\t\tlibmagickwand-dev \\\n\t\tlibmysqlclient-dev \\\n\t\tlibncurses-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibtool \\\n\t\tlibwebp-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\tlibyaml-dev \\\n\t\tmake \\\n\t\tpatch \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN groupadd --gid 1000 node \\\n  && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\n# gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n  && for key in \\\n    9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; \\\n  do \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done\n\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 6.9.2\n\nRUN curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n# -----------------------------------------------------------------------------\n\n\n# This prevents us from installing devDependencies\n# This causes brunch to build minified and hashed assets\nENV MIX_ENV=prod BRUNCH_ENV=production\n\nWORKDIR /app\nCOPY . /app\n\nRUN mix deps.get && \\\n   mix deps.compile && \\\n   mix compile\n\n# install node dependencies and output static assets\n# do this after mix deps.get since the phoenix & phoenix_html node modules reference\n# files in these dependencies\nRUN npm install \\\n  && npm rebuild node-sass \\\n  && node node_modules/brunch/bin/brunch build \\\n  && mix phoenix.digest && npm cache clean --force;\n\nCMD [\"bash\"]"
}