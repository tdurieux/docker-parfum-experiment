{
  "startTime": 1674244425063,
  "endTime": 1674244425509,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM #{FROM}\n\nENTRYPOINT /usr/bin/supervisord\n\n# Default values for config environment variables\nENV OPENSEEDBOX_JDBC_URL=jdbc:postgresql://openseedboxdb/openseedbox\nENV OPENSEEDBOX_JDBC_DRIVER=org.postgresql.Driver\nENV OPENSEEDBOX_JDBC_USER=openseedbox\nENV OPENSEEDBOX_JDBC_PASS=openseedbox\n\nEXPOSE 443\n\n# See https://github.com/resin-io-library/base-images/issues/273\n# \"Errors installing OpenJDK due to unexistent man pages directory\"\nRUN for i in 1 2 3 4 5 6 7 8; do mkdir -p /usr/share/man/man$i; done;\n\n#{CUSTOM_QEMU}\n\n# Install runtime packages\nRUN apt-get -qq update \\\n\t&& apt-get -qq --no-install-recommends install -y \\\n\t\tcurl wget unzip git openjdk-7-jre-headless \\\n\t\tpython supervisor \\\n\t&& apt-get -y clean \\\n\t&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install play\nRUN wget -q -O play.zip \"https://downloads.typesafe.com/play/1.3.4/play-1.3.4.zip\" \\\n\t&& unzip -q play.zip \\\n\t&& mv /play-1.3.4 /play \\\n\t&& rm play.zip\n\n# Install siena module to play\nRUN /play/play install siena-2.0.7 || echo \"Downloading directly ... \" \\\n\t&& curl -f -S -s -L -o siena-2.0.7.zip \"https://www.playframework.com/modules/siena-2.0.7.zip\" \\\n\t&& for zipfile in *.zip; do module=\"${zipfile%.zip}\"; unzip -d /play/modules/\"$module\" \"$zipfile\"; rm \"$zipfile\"; done;\n\nWORKDIR /src\n\n# Check out code we rely on and install play! dependencies\nRUN git clone -q https://github.com/openseedbox/openseedbox-common \\\n\t&& git clone --depth=1 -q https://github.com/openseedbox/openseedbox \\\n\t&& /play/play deps openseedbox-common --sync \\\n\t&& /play/play deps openseedbox --sync\n\n# Download and compile nginx\nRUN apt-get -qq update \\\n\t&& apt-get -qq install -y \\\n\t\t#{BUILD_DEPS} \\\n\t&& apt-get -y clean \\\n\t&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n\t&& git clone --depth=1 -q https://github.com/evanmiller/mod_zip \\\n\t&& git clone --depth=1 -q https://github.com/agentzh/headers-more-nginx-module \\\n\t&& wget -q -O nginx.tar.gz https://nginx.org/download/nginx-1.14.0.tar.gz \\\n\t&& tar -xf nginx.tar.gz \\\n\t&& cd nginx* \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-http_ssl_module --add-module=/src/mod_zip/ \\\n\t\t--prefix=/etc/nginx --conf-path=/etc/nginx/nginx.conf \\\n\t\t--error-log-path=/var/log/nginx/error.log --pid-path=/var/run/nginx.pid \\\n\t\t--http-log-path=/var/log/nginx/access.log --lock-path=/var/lock/nginx.lock \\\n\t\t--sbin-path=/usr/sbin/nginx --add-module=/src/headers-more-nginx-module \\\n\t&& make -s \\\n\t&& make -s install \\\n\t&& cd .. \\\n\t&& rm -fr nginx* mod_zip headers-more-nginx-module \\\n\t&& apt-get -qq purge -y \\\n\t\t#{BUILD_DEPS} \\\n\t&& apt-get -y autoremove \\\n\t&& apt-get -y clean \\\n\t&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm nginx.tar.gz\n\n#create SSL keys\nRUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj \"/C=US/ST=None/L=None/O=None/CN=openseedbox\" \\\n\t-keyout /src/openseedbox/conf/host.key \\\n\t-out /src/openseedbox/conf/host.cert\n\n#copy config files\nCOPY application.conf /src/openseedbox/conf/application.conf\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n#copy run script\nCOPY run.sh /run.sh\n\nWORKDIR /src/openseedbox\n"
}