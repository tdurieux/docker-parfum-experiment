{
  "startTime": 1674245802735,
  "endTime": 1674245803087,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-stretch\n\n# Application parameters and variables\nENV NODE_ENV=development\nENV PORT=9090\nENV DIRECTORY /home/node/pagedjs\n\n# Configuration for Chrome\nENV CONNECTION_TIMEOUT=60000\nENV CHROME_PATH=/usr/bin/google-chrome\n\n# Configuration for GS4JS\nENV GS4JS_HOME=/usr/lib/x86_64-linux-gnu\n\n# Install ghostscript\nRUN apt-get update && \\\n\t\tapt-get install --no-install-recommends -y build-essential make gcc g++ && \\\n\t\tapt-get -y --no-install-recommends install ghostscript && apt-get clean && \\\n\t\tapt-get install --no-install-recommends -y libgs-dev && \\\n\t\trm -rf /var/lib/apt/lists/*\n\n# See https://crbug.com/795759\nRUN apt-get update && apt-get install --no-install-recommends -yq libgconf-2-4 && rm -rf /var/lib/apt/lists/*;\n\n# Update Freetype\nCOPY docker-font.conf /etc/fonts/local.conf\nENV FREETYPE_PROPERTIES=\"truetype:interpreter-version=35\"\nRUN apt-get update \\\n    && sh -c 'echo \"deb http://http.us.debian.org/debian stable main contrib non-free\" >> /etc/apt/sources.list' \\\n    && apt-get update \\\n    && apt-get install -y ttf-mscorefonts-installer \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome-unstable.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/*.deb\n\n# helps prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\nRUN apt-get update && \\\n\t\tapt-get install --no-install-recommends -y vim && \\\n\t\trm -rf /var/lib/apt/lists/*\n\nRUN npm install npm@latest -g && npm cache clean --force;\nRUN npm install -g node-gyp && npm cache clean --force;\n\nRUN mkdir -p $DIRECTORY\n\n# Add user so we don't need --no-sandbox.\n# RUN groupadd -r node && useradd -r -g node -G audio,video node \\\nRUN adduser node audio \\\n\t\t&& adduser node video \\\n\t\t&& mkdir -p /home/node/Downloads \\\n\t\t&& chown -R node:node /home/node \\\n\t\t&& chown -R node:node /usr/lib \\\n\t\t&& chown -R node:node $DIRECTORY\n\n# Run everything after as non-privileged user.\nUSER node\n\nWORKDIR $DIRECTORY\n\nCOPY --chown=node:node package.json $DIRECTORY\nRUN npm install && npm cache clean --force;\nRUN npm install ghostscript4js && npm cache clean --force;\n\nCOPY --chown=node:node . $DIRECTORY\n\nEXPOSE $PORT\n\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"npm\", \"start\"]\n"
}