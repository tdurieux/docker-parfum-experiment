{
  "startTime": 1674245005788,
  "endTime": 1674245006281,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 44,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 44,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\nMAINTAINER Christian Schafmeister <meister@temple.edu>\n\n# install all clasp build deps: mostly clang, boost, LLVM4\nRUN apt-get update && apt-get -y upgrade && apt-get install --no-install-recommends -y \\\n  software-properties-common python-software-properties wget curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libgc-dev \\\n  gcc g++ llvm clang cmake libunwind-dev liblzma-dev libgmp-dev binutils-gold binutils-dev \\\n  zlib1g-dev libncurses-dev libboost-filesystem-dev libboost-regex-dev \\\n  libboost-date-time-dev libboost-program-options-dev libboost-system-dev \\\n  libboost-iostreams-dev csh flex gfortran zlib1g-dev libbz2-dev patch \\\n  git sbcl libexpat-dev wget vim libzmq3-dev \\\n  clang-6.0 libclang-common-6.0-dev libclang-6.0-dev libclang1-6.0 \\\n  libllvm5.0 libllvm5.0-dbg llvm-6.0 llvm-6.0-dev llvm-6.0-doc \\\n  llvm-6.0-runtime clang-format-6.0 python-clang-6.0 lld-6.0 && rm -rf /var/lib/apt/lists/*;\nENV CC=/usr/bin/clang-6.0 CXX=/usr/bin/clang++-6.0\n\n# Copy the entire clasp directory less .dockerignore and clean the build dir\nRUN mkdir /home/app\nRUN mkdir /opt\nRUN mkdir /opt/clasp\nWORKDIR /home/app\n# add app user, to set correct UID and GID on files\nRUN groupadd -g 9999 app && useradd -u 9999 -g 9999 -ms /bin/bash app\nADD . clasp\nRUN chown -R app:app /home/app\nRUN chown -R app:app /opt/clasp\n\nUSER app\nWORKDIR /home/app/clasp\nRUN rm -rf build/* && mkdir -p /opt/clasp\n\n# checkout submodules, configure, and build\nRUN echo \"LLVM_CONFIG_BINARY='/usr/bin/llvm-config-6.0'\" > wscript.config\nRUN echo \"PREFIX='/opt/clasp'\" >> wscript.config\nRUN echo \"CLASP_VERSION='clasp_docker'\" >> wscript.config\nRUN echo \"USE_PARALLEL_BUILD = True\" >> wscript.config\nRUN echo \"USE_LLD = False\" >> wscript.config\nRUN echo \"CLASP_BUILD_MODE = 'object'\" >> wscript.config\nRUN git clone --depth=1 https://github.com/quicklisp/quicklisp-client.git $HOME/quicklisp\nRUN mkdir $HOME/quicklisp/local-projects\nRUN git clone --depth=1 https://github.com/slime/slime $HOME/slime\nRUN cd $HOME/quicklisp/local-projects \\\n && git clone --depth=1 https://github.com/clasp-developers/usocket.git \\\n && git clone --depth=1 https://github.com/drmeister/cl-jupyter.git \\\n && git clone --depth=1 https://github.com/clasp-developers/cl-jupyter-widgets.git \\\n && git clone --depth=1 https://github.com/clasp-developers/cl-nglview.git \\\n && git clone --depth=1 https://github.com/clasp-developers/cl-bqplot.git \\\n && git clone --depth=1 https://github.com/clasp-developers/trivial-backtrace.git \\\n && git clone --depth=1 https://github.com/clasp-developers/uuid.git \\\n && git clone --depth=1 https://github.com/clasp-developers/bordeaux-threads.git \\\n && git clone --depth=1 https://github.com/clasp-developers/cffi.git\n\nRUN ./waf configure\nRUN ./waf -j $(nproc) build_iboehm\nRUN ./waf -j $(nproc) build_aboehm\nRUN ./waf -j $(nproc) build_bboehm\nRUN ./waf -j $(nproc) build_cboehm\nRUN ./waf -j $(nproc) build_dboehm\nRUN ./waf install_dboehm\n\n"
}