{
  "startTime": 1674235126721,
  "endTime": 1674235127276,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 461
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedDockerfile": "# define constants\n\nFROM daocloud.io/ubuntu:16.04\nMAINTAINER Joyqi <magike.net@gmail.com>\n\nARG ubuntu_mirror=archive.ubuntu.com\nARG php_mirror=cn2\nARG php_version=7.0.14\nARG php_timezone=Asia/Shanghai\nARG nginx_version=1.10.2\n\n# install base lib\nRUN sed -i 's/archive.ubuntu.com/'$ubuntu_mirror'/g' /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends -y autoconf wget vim build-essential git libxml2-dev pkg-config && \\\n    apt-get install --no-install-recommends -y libxml2-dev libcurl3-dev librecode-dev libjpeg-dev libpng12-dev libsasl2-2 sasl2-bin libsasl2-2 libsasl2-dev libsasl2-modules libfreetype6-dev libreadline-dev libpcre3-dev libssl-dev libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# install mysql\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y mysql-server && \\\n#    sed -i -e \"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/mysql.conf.d/mysqld.cnf && \\\n    sed -i 's/^\\(log_error\\s.*\\)/# \\1/' /etc/mysql/my.cnf && \\\n    echo \"mysqld_safe &\" > /tmp/mysql_config && \\\n    echo \"mysqladmin --silent --wait=30 ping || exit 1\" >> /tmp/mysql_config && \\\n    echo \"mysql -e \\\"GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY '123456' WITH GRANT OPTION;\\\"\" >> /tmp/mysql_config && \\\n    bash /tmp/mysql_config && \\\n    rm -f /tmp/mysql_config && rm -rf /var/lib/apt/lists/*;\n\nVOLUME [\"/etc/mysql\", \"/var/lib/mysql\"]\n\n# install nginx\nRUN mkdir /nginx && cd /nginx && \\\n    wget https://nginx.org/download/nginx-$nginx_version.tar.gz && \\\n    tar zxf nginx-$nginx_version.tar.gz && \\\n    cd nginx-$nginx_version && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/nginx && make && make install && \\\n    cd .. && rm -rf nginx-$nginx_version.tar.gz && rm -rf nginx-$nginx_version\n\nADD fastcgi_params /nginx/conf/fastcgi_params.modified\nADD default_site /nginx/conf/nginx.conf\nVOLUME [\"/nginx/conf\", \"/nginx/logs\"]\n\n# install php\nRUN mkdir /php && cd /php && \\\n    wget https://$php_mirror.php.net/distributions/php-$php_version.tar.gz && \\\n    tar zxf php-$php_version.tar.gz && \\\n    cd php-$php_version && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/php --with-config-file-path=/php/etc --with-config-file-scan-dir=/php/etc/conf.d --disable-cgi --enable-mysqlnd --with-curl --with-pcre-regex --with-readline --with-recode --with-zlib --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-pdo-mysql --with-gd --with-jpeg-dir=/usr --with-png-dir=/usr --enable-mbstring --enable-phar=shared --enable-gd-native-ttf --with-freetype-dir=/usr/include/freetype2 --with-openssl && \\\n    make && make install && cp php.ini-production /php/etc/php.ini && mv /php/etc/php-fpm.conf.default /php/etc/php-fpm.conf && mv /php/etc/php-fpm.d/www.conf.default /php/etc/php-fpm.d/www.conf && \\\n    echo \"date.timezone=\"$php_timezone >> /php/etc/php.ini && \\\n    sed -i 's/error_reporting = /#error_reporting = /g' /php/etc/php.ini && \\\n    sed -i 's/display_errors = /#display_errors = /g' /php/etc/php.ini && \\\n    sed -i 's/pdo_mysql.default_socket\\s*=/pdo_mysql.default_socket = \\/var\\/run\\/mysqld\\/mysqld.sock/g' /php/etc/php.ini && \\\n    echo \"always_populate_raw_post_data=-1\" >> /php/etc/php.ini && \\\n    echo \"error_reporting=E_ALL\" >> /php/etc/php.ini && \\\n    echo \"display_errors=On\" >> /php/etc/php.ini && \\\n    echo \"listen.owner = www-data\" >> /php/etc/php-fpm.d/www.conf && \\\n    echo \"listen.group = www-data\" >> /php/etc/php-fpm.d/www.conf && \\\n    sed -i 's/listen = 127.0.0.1:9000/listen = var\\/run\\/php-fpm.sock/g' /php/etc/php-fpm.d/www.conf && rm php-$php_version.tar.gz\n\nVOLUME [\"/php/var/log\"]\n\n# grant all privileges to www-data\nRUN usermod -u 1000 www-data\n\nEXPOSE 80\nEXPOSE 3306\n\nCMD /php/sbin/php-fpm && /nginx/sbin/nginx && mysqld_safe\n"
}