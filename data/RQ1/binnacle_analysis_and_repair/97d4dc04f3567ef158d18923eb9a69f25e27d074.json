{
  "startTime": 1674243007095,
  "endTime": 1674243007324,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_BASED_BASE_IMAGE\nFROM $UBUNTU_BASED_BASE_IMAGE\n\nMAINTAINER Shingo OMURA <https://github.com/everpeace>\n\nARG OPENMPI_VERSION\n\nARG WITH_CUDA=\"false\"\n\n# Disable prompts from apt.\nENV DEBIAN_FRONTEND noninteractive\n\n# install ssh and basic dependencies\nRUN apt-get update && \\\n    apt-get install -yq --no-install-recommends \\\n      locales wget ca-certificates ssh build-essential && \\\n    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\n\n#\n# install openmpi\n#\nRUN echo \"WITH_CUDA=$WITH_CUDA\"\nRUN cd /tmp && \\\n  wget -q https://www.open-mpi.org/software/ompi/v$(echo $OPENMPI_VERSION | sed -e s'/\\(.*\\)\\.[0-9]/\\1/')/downloads/openmpi-$OPENMPI_VERSION.tar.bz2 && \\\n  tar -xjf openmpi-$OPENMPI_VERSION.tar.bz2 && \\\n  cd /tmp/openmpi-$OPENMPI_VERSION && \\\n  if [ \"$WITH_CUDA\" = \"true\" ]; then export WITH_CUDA_OPT=\"--with-cuda\"; else export WITH_CUDA_OPT=\"\"; fi && \\\n  echo \"WITH_CUDA_OPT=$WITH_CUDA_OPT\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr $WITH_CUDA_OPT && \\\n  make -j2 && \\\n  make install && \\\n  rm -r /tmp/openmpi-$OPENMPI_VERSION && rm openmpi-$OPENMPI_VERSION.tar.bz2\n\n# Create ssh user(openmpi) and setup ssh key dir\n# - ssh identity file and authorized key file is expected to\n#   be mounted at /ssh-keys/$SSH_USER\nARG SSH_USER=openmpi\nENV SSH_USER=$SSH_USER\nARG SSH_UID=1000\nARG SSH_GID=1000\nRUN addgroup --gid $SSH_GID $SSH_USER\nRUN adduser -q --gecos \"\" --disabled-password --uid $SSH_UID --gid $SSH_GID $SSH_USER\nRUN mkdir -p /ssh-key/$SSH_USER && chown -R $SSH_USER:$SSH_USER /ssh-key/$SSH_USER\nRUN mkdir -p /.sshd/host_keys && \\\n  chown -R $SSH_USER:$SSH_USER /.sshd/host_keys && chmod 700 /.sshd/host_keys\nRUN mkdir -p /.sshd/user_keys/$SSH_USER && \\\n  chown -R $SSH_USER:$SSH_USER /.sshd/user_keys/$SSH_USER && chmod 700 /.sshd/user_keys/$SSH_USER\nVOLUME /ssh-key/$SSH_USER\n\nARG HOME=/home/$SSH_USER\nRUN mkdir -p $HOME && chown $SSH_USER:$SSH_USER $HOME && chmod 755 $HOME\nVOLUME $HOME\n\nCOPY rootfs /\n\n# check if open mpi was successfully built with cuda support.\nRUN if [ \"$WITH_CUDA\" = \"true\" ]; then \\\n  if ! ompi_info --parsable --all | grep -q \"mpi_built_with_cuda_support:value:true\" ; then \\\n    exit 1; \\\n  fi; fi;\n\nEXPOSE 2022\n\n# sshd can be run either by root or $SSH_USER\nCMD [\"/init.sh\"]\n"
}