{
  "startTime": 1674234948912,
  "endTime": 1674234949006,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 21,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php7-fpm-deb:stable\nMAINTAINER Jinal Shah <jnshah@gmail.com>\nLABEL Name=\"content_src_builder\" Vendor=\"sortuniq\" Version=\"0.0.1\" \\\n      Description=\"Installs npm, composer, jspm, git  \\\n                   Entrypoint script gets all modules \\\n                   Should be run by a systemd script. \\\n      \"\nENV ASSETS_DIR=\"assets\"              \\\n    ASSETS_DOCKER=\"/var/tmp/assets\"\n\nCOPY $ASSETS_DIR $ASSETS_DOCKER\nRUN cp -a $ASSETS_DOCKER/* /                                              \\\n    && apt update && apt-get install -y --no-install-recommends git       \\\n    && echo \"export NVM_DIR=/opt/nvm/.nvm\" | tee -a /etc/profile.d/nvm.sh \\\n    && echo \". $NVM_DIR/nvm.sh\" | tee -a /etc/profile.d/nvm.sh \\\n    && curl -f -sS https://getcomposer.org/installer \\\n       | php -- --install-dir=/usr/local/bin --filename=composer \\\n    && chmod a+x /prepare_project.sh \\\n    && rm -rf $ASSETS_DOCKER && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /srv/eurostar\nCMD [\"/prepare_project.sh\"]\n# build instructions:\n# # ... build and tag as stable\n# img_name=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Name=\"\\([^\"]\\+\\).*/\\1/')\n# tag_version=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Version=\"\\([^\"]\\+\\).*/\\1/')\n# docker build --no-cache=true --rm --tag $img_name:$tag_version .\n# docker rmi $img_name:stable 2>/dev/null\n# docker tag $img_name:$tag_version $img_name:$GIT_TAG\n\n# run instructions:\n# docker run                   \\\n#   --name boo                 \\\n#   --rm                       \\\n#   -v /home/core/app/opt:/opt \\\n#   -v /home/core/app/srv:/srv \\\n#   content_src_builder:0.0.1\n\n# See /prepare_project.sh for env vars that can be set\n# via docker run's -e option\n"
}