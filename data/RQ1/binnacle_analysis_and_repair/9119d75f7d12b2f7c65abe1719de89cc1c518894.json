{
  "startTime": 1674234266412,
  "endTime": 1674234266646,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 172
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 133
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 140
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Build a docker image for C-ICAP+SquidClamav\nFROM centos:latest\n\nMAINTAINER Sebastian Weitzel <sebastian.weitzel@gmail.com>\n\nENV C_ICAP_VERSION=\"0.5.2\" SQUIDCLAMAV_VERSION=\"6.16\"\n\nWORKDIR /tmp\n\n# 1. install dependencies, includin some just needed for build purpose\n# 2. build\n# 3. cleanup\n# Note: Maybe ugly to have all in one RUN, but it avoids creating unneccessary layers\nRUN yum --quiet --assumeyes update && \\\n  yum --quiet --assumeyes install epel-release && \\\n  yum --quiet --assumeyes --setopt=tsflags=nodocs install curl zlib bzlib2 file tar gcc make zlib-devel bzip2-devel && \\\n  curl -f --silent --location --remote-name \"http://downloads.sourceforge.net/project/c-icap/c-icap/0.5.x/c_icap-${C_ICAP_VERSION}.tar.gz\" && \\\n  tar -xzf \"c_icap-${C_ICAP_VERSION}.tar.gz\" && \\\n  cd /tmp/c_icap-${C_ICAP_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" 'CXXFLAGS=-O2 -m64 -pipe' 'CFLAGS=-O2 -m64 -pipe' --quiet --without-bdb --prefix=/usr/local/c-icap --enable-large-files && \\\n  make > /tmp/build.log 2>&1 && make install >>/tmp/build.log 2>&1 && \\\n  cd /tmp && \\\n  curl -f --silent --location --remote-name \"http://downloads.sourceforge.net/project/squidclamav/squidclamav/${SQUIDCLAMAV_VERSION}/squidclamav-${SQUIDCLAMAV_VERSION}.tar.gz\" && \\\n  tar -xzf \"squidclamav-${SQUIDCLAMAV_VERSION}.tar.gz\" && \\\n  cd /tmp/squidclamav-${SQUIDCLAMAV_VERSION} && \\\n  PATH=\"$PATH:/usr/local/c-icap/bin/\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" 'CXXFLAGS=-O2 -m64 -pipe' 'CFLAGS=-O2 -m64 -pipe' --quiet --with-c-icap=/usr/local/c-icap/ && \\\n  gmake > /tmp/build.log 2>&1 && gmake install-strip >>/tmp/build.log 2>&1 && \\\n  rm -rf /tmp/* /var/tmp/* /var/log/* && rm -rf /var/cache/yum\n\nADD ./bin/ /usr/local/bin/\nADD ./etc/ /usr/local/c-icap/etc/\n\n# add user/group proxy, c-icap will execute as\nRUN chmod a+x /usr/local/bin/* && \\\n  adduser -M -s /sbin/nologin -U proxy && \\\n  mkdir -p /var/run/c-icap/ && \\\n  chown -R proxy:proxy /var/run/c-icap/ && \\\n  chown -R proxy:proxy /usr/local/c-icap/ && \\\n  chmod 750 /usr/local/c-icap\n\nEXPOSE 1344/tcp\n\nENTRYPOINT [\"/usr/local/bin/run.sh\"]\n"
}