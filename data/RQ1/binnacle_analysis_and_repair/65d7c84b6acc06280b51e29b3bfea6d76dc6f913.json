{
  "startTime": 1674234964024,
  "endTime": 1674234964136,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:1.13\n\n# Install the NGINX Amplify Agent\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -qqy curl python apt-transport-https apt-utils gnupg1 procps \\\n    && echo 'deb https://packages.amplify.nginx.com/debian/ stretch amplify-agent' > /etc/apt/sources.list.d/nginx-amplify.list \\\n    && curl -fs https://nginx.org/keys/nginx_signing.key | apt-key add - > /dev/null 2>&1 \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -qqy nginx-amplify-agent \\\n    && apt-get purge -qqy curl apt-transport-https apt-utils gnupg1 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Keep the nginx logs inside the container\nRUN unlink /var/log/nginx/access.log \\\n    && unlink /var/log/nginx/error.log \\\n    && touch /var/log/nginx/access.log \\\n    && touch /var/log/nginx/error.log \\\n    && chown nginx /var/log/nginx/*log \\\n    && chmod 644 /var/log/nginx/*log\n\n# Copy nginx stub_status config\nCOPY config/deploy/nginx/stub_status.conf /etc/nginx/conf.d\n\n# API_KEY is required for configuring the NGINX Amplify Agent.\n# It could be your real API key for NGINX Amplify here if you wanted\n# to build your own image to host it in a private registry.\n# However, including private keys in the Dockerfile is not recommended.\n# Use the environment variables at runtime as described below.\n\n#ENV API_KEY 1234567890\n\n# If AMPLIFY_IMAGENAME is set, the startup wrapper script will use it to\n# generate the 'imagename' to put in the /etc/amplify-agent/agent.conf\n# If several instances use the same 'imagename', the metrics will\n# be aggregated into a single object in NGINX Amplify. Otherwise Amplify\n# will create separate objects for monitoring (an object per instance).\n# AMPLIFY_IMAGENAME can also be passed to the instance at runtime as\n# described below.\n\n#ENV AMPLIFY_IMAGENAME my-docker-instance-123\n\n# The /entrypoint.sh script will launch nginx and the Amplify Agent.\n# The script honors API_KEY and AMPLIFY_IMAGENAME environment\n# variables, and updates /etc/amplify-agent/agent.conf accordingly.\n\nRUN rm -rf /usr/share/nginx/html\nCOPY public /usr/share/nginx/html\nCOPY config/deploy/nginx/nginx.conf /etc/nginx/conf.d/default.conf\n\nCOPY config/deploy/nginx/entrypoint.sh /entrypoint.sh\n\n# TO set/override API_KEY and AMPLIFY_IMAGENAME when starting an instance:\n# docker run --name my-nginx1 -e API_KEY='..effc' -e AMPLIFY_IMAGENAME=\"service-name\" -d nginx-amplify\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}