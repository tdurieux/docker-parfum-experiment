{
  "startTime": 1674251299643,
  "endTime": 1674251299764,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n\nRUN apk add --no-cache python3 && \\\n    ln -s /usr/bin/python3 /usr/bin/python\nRUN python -m pip install -U pip setuptools && \\\n    python -m pip install --no-cache-dir tabulate dataclasses\n\n# Install Java compile environments\n# ref: https://github.com/docker-library/openjdk/blob/master/8-jdk/alpine/Dockerfile\n# You may need to check the Alpine package repository for latest OpenJDK package available.\n# ref: https://pkgs.alpinelinux.org/packages?name=openjdk8&branch=v3.8&repo=&arch=x86_64\nRUN { \\\n        echo '#!/bin/sh'; \\\n        echo 'set -e'; \\\n        echo; \\\n        echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n    } > /usr/local/bin/docker-java-home \\\n    && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV PATH $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin\nENV JAVA_VERSION 8u191\nENV JAVA_ALPINE_VERSION 8.191.12-r0\n\nRUN set -x \\\n    && apk add --no-cache \\\n        openjdk8=\"$JAVA_ALPINE_VERSION\" \\\n    && [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n\n# Install Junit4 and some extensions.\nRUN wget https://repo1.maven.org/maven2/junit/junit/4.12/junit-4.12.jar -P /usr/local/lib && \\\n    wget https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar -P /usr/local/lib && \\\n    wget https://central.maven.org/maven2/com/github/stefanbirkner/system-rules/1.18.0/system-rules-1.18.0.jar -P /usr/local/lib && \\\n    wget https://repo1.maven.org/maven2/com/google/code/gson/gson/2.8.5/gson-2.8.5.jar -P /usr/local/lib\n\n# Backend.AI specifics\nENV LD_LIBRARY_PATH=/opt/backend.ai/lib\nRUN apk add --no-cache libffi libzmq\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.features=\"batch query uid-match\" \\\n      ai.backend.base-distro=\"alpine3.8\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"256m\" \\\n      ai.backend.runtime-type=\"java\" \\\n      ai.backend.runtime-path=\"/usr/lib/jvm/java-1.8-openjdk/bin/java\" \\\n      ai.backend.service-ports=\"\"\n\n# vim: ft=dockerfile\n"
}