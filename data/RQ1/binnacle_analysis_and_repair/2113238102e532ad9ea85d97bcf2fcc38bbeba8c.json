{
  "startTime": 1674244223589,
  "endTime": 1674244223919,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 46,
        "columnStart": 0,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 96,
        "columnStart": 0,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 46,
        "columnStart": 0,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 96,
        "columnStart": 0,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build handbrake image \n# docker build -t handbrake . \n# Run handbrake GUI in a container \n# docker run -it --rm \\ \n# --net=host \\ \n# --device=/dev/cdrom \\ \n# -v /tmp/.X11-unix:/tmp/.X11-unix \\ \n# -v $HOME/.Xauthority:/root/.Xauthority \\ \n# -v $HOME/handbrake:/handbrake \\ \n# --env=\"DISPLAY\" \\ \n# handbrake \n# Run HandBrakeCLI in a container \n# docker run -it --rm \\ \n# --entrypoint=HandBrakeCLI \\ \n# -v $HOME/handbrake:/handbrake \\ \n# handbrake \n# This Dockerfile uses Docker Multi-Stage Builds and requires Docker 17.05+ \n# See https://docs.docker.com/engine/userguide/eng-image/multistage-build/ \n# Base Image \nFROM ubuntu:16.04 AS base \n\nLABEL maintainer \"Micheal Waltz <ecliptik@gmail.com>\" \n# Environment variables \nENV DEBIAN_FRONTEND=noninteractive \\  \nLANG=C \\  \nLANGUAGE=C \\  \nLC_ALL=C \n\nWORKDIR /handbrake \n\n# Base/Runtime packages \nRUN apt update && \\\n apt install --no-install-recommends -y \\\nlibmp3lame0 \\\nlibvorbis0a \\\nlibass5 \\\nlibsamplerate0 \\\nlibtheora0 \\\nlibvorbisenc2 \\\nlibx264-148 \\\nlibjansson4 \\\nlibopus0 \\\nlibnotify4 \\\nlibdbus-glib-1-2 \\\nlibgstreamer-plugins-base1.0-0 \\\nlibwebkitgtk-3.0-0 \\\nlibdvd-pkg \\\n&& \\\napt clean && rm -rf /var/lib/apt/lists/*;\n\n# Build image \nFROM base AS build \n\n# Build packages \nRUN apt update && \\\n apt install --no-install-recommends -y \\\nautoconf \\\nautomake \\\nbuild-essential \\\ncmake \\\ngit \\\nlibass-dev \\\nlibbz2-dev \\\nlibfontconfig1-dev \\\nlibfreetype6-dev \\\nlibfribidi-dev \\\nlibharfbuzz-dev \\\nlibjansson-dev \\\nlibmp3lame-dev \\\nlibogg-dev \\\nlibopus-dev \\\nlibsamplerate-dev \\\nlibtheora-dev \\\nlibtool \\\nlibvorbis-dev \\\nlibx264-dev \\\nlibxml2-dev \\\nm4 \\\nmake \\\npatch \\\npkg-config \\\npython \\\ntar \\\nyasm \\\nzlib1g-dev \\\nlibtool-bin \\\nintltool \\\nlibappindicator-dev \\\nlibdbus-glib-1-dev \\\nlibglib2.0-dev \\\nlibgstreamer1.0-dev \\\nlibgstreamer-plugins-base1.0-dev \\\nlibgtk-3-dev \\\nlibgudev-1.0-dev \\\nlibnotify-dev \\\nlibwebkitgtk-3.0-dev \\\nwget \\\n&& \\\napt clean && rm -rf /var/lib/apt/lists/*;\n\n# Copy source to build \nCOPY . /handbrake/HandBrake \nWORKDIR /handbrake/HandBrake \nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --launch-jobs=$(nproc) --launch\nRUN cd build && make install \n\n# Runtime image \nFROM base AS runtime \n\n# Copy HandBrakeCLI and ghb binaries to runtime image \nCOPY --from=build /handbrake/HandBrake/build/HandBrakeCLI /usr/local/bin \nCOPY --from=build /handbrake/HandBrake/build/gtk/src/ghb /usr/local/bin \n\n# Make binaries executable \nRUN chmod +x /usr/local/bin/HandBrakeCLI \nRUN chmod +x /usr/local/bin/ghb \n\n# Runtime command (defaults to HandBrake GUI) \nENTRYPOINT [\"ghb\"] \n\n"
}