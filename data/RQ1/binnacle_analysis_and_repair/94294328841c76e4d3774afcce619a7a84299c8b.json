{
  "startTime": 1674241603207,
  "endTime": 1674241603636,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "#\n## Load docker image\n#\nFROM tatsy/ubuntu-cxx:opencv\n\n#\n## Environment variables\n#\nENV TERM xterm\nENV BRANCH_NAME @BRANCH_NAME@\nENV PULL_REQUEST @PULL_REQUEST@\nENV CC @C_COMPILER@\nENV CXX @CXX_COMPILER@\nENV PYTHON_VERSION @PYTHON_VERSION@\n\n#\n## update/upgrade\n#\nRUN apt-get update -qq\nRUN apt-get upgrade -qq\n\n#\n## Install Gcovr\n#\nRUN apt-get -qq -y --no-install-recommends install python-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir gcovr\n\n#\n## Install cppcheck, cccc, and doxygen\n#\nRUN apt-get -qq -y --no-install-recommends install cppcheck cccc doxygen && rm -rf /var/lib/apt/lists/*;\n\n#\n## Install Python through Anaconda\n#\nRUN wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nRUN bash miniconda.sh -b -p $HOME/anaconda\nENV PATH \"$HOME/anaconda/bin:$PATH\"\nRUN conda update --yes conda\nRUN conda install --yes python=$PYTHON_VERSION setuptools numpy scipy pillow six libgcc\n\n#\n## Install Boost\n#\nRUN wget -q https://dl.bintray.com/boostorg/release/1.64.0/source/boost_1_64_0.tar.gz\nRUN tar -zxf boost_1_64_0.tar.gz && rm boost_1_64_0.tar.gz\nRUN \\\n  cd boost_1_64_0 && \\\n  ./bootstrap.sh && \\\n  ./b2 address-model=64 \\\n       include=`python -c \"from __future__ import print_function; from distutils import sysconfig; print(sysconfig.get_python_inc())\"` \\\n       -d0 --with-python -j2 install .\n\n#\n## Install Google test\n#\nRUN git clone https://github.com/google/googletest.git\nRUN \\\n  cd googletest && \\\n  mkdir build && cd build && \\\n  cmake -D gtest_disable_pthreads=ON .. && \\\n  make && make install\n\n#\n## Build lime\n#\nRUN git clone --depth 12 -b $BRANCH_NAME https://github.com/tatsy/lime.git #redo\nRUN \\\n  if [ $PULL_REQUEST != \"false\" ]; then \\\n    cd lime && \\\n    git fetch origin +refs/pull/$PULL_REQUEST/merge && \\\n    git checkout --quiet --force FETCH_HEAD; \\\n  fi\n\nRUN \\\n  cd lime && \\\n  git submodule update --init --recursive\n\nRUN \\\n  cd lime && \\\n  cmake \\\n    -D CMAKE_BUILD_TYPE=Release \\\n    -D LIME_BUILD_TESTS=ON \\\n    -D GTEST_ROOT=/usr/local \\\n    -D PYTHON_INCLUDE_DIR=`python -c \"from __future__ import print_function; from distutils import sysconfig; print(sysconfig.get_python_inc())\"` \\\n    -D PYTHON_LIBRARY=`find $HOME/anaconda/lib -name python${PYTHON_VERSION}` \\\n    -D LIME_BUILD_PYTHON_MODULE=ON . && \\\n  cmake --build .\n\n#\n## Install pylime\n#\nRUN \\\n  cd lime && \\\n  python setup.py install\n\n#\n## # of threads used by OpenMP\n#\nENV OMP_NUM_THREADS 4\n\n#\n## Define working direcotry\n#\nWORKDIR /root/lime\n"
}