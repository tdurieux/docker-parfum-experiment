{
  "startTime": 1674243503362,
  "endTime": 1674243503938,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian AS build\n\nARG NUM_CORES=2\n\nENV \\\n\tPREFIX=\"/tmp/ffmpeg_build\" \\\n\tPKG_CONFIG_PATH=\"/tmp/ffmpeg_build/lib/pkgconfig\"\n\n# Dependencies\nRUN apt-get update -qq \\\n\t&& apt-get -y --no-install-recommends install \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbuild-essential \\\n\t\tcmake \\\n\t\tgit \\\n\t\tlibass-dev \\\n\t\tlibfreetype6-dev \\\n\t\tlibsdl2-dev \\\n\t\tlibtheora-dev \\\n\t\tlibtool \\\n\t\tlibva-dev \\\n\t\tlibvdpau-dev \\\n\t\tlibvorbis-dev \\\n\t\tlibxcb1-dev \\\n\t\tlibxcb-shm0-dev \\\n\t\tlibxcb-xfixes0-dev \\\n\t\tmercurial \\\n\t\tpkg-config \\\n\t\ttexinfo \\\n\t\twget \\\n\t\tzlib1g-dev \\\n\t\tfontconfig \\\n\t\tfrei0r-plugins-dev \\\n\t\tlibass-dev \\\n\t\tlibfontconfig1-dev \\\n\t\tlibmp3lame-dev \\\n\t\tlibopencore-amrnb-dev \\\n\t\tlibopencore-amrwb-dev \\\n\t\tlibopus-dev \\\n\t\tlibspeex-dev \\\n\t\tlibtheora-dev \\\n\t\tlibvorbis-dev \\\n\t\tlibvo-amrwbenc-dev \\\n\t\tlibwebp-dev \\\n\t\tlibx264-dev \\\n\t\tlibnuma-dev \\\n\t\tlibvpx-dev \\\n\t\tlibxvidcore-dev \\\n\t\ttexinfo \\\n\t\tyasm \\\n\t&& apt-get clean \\\n\t&& apt-get autoremove -y \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nWORKDIR /tmp\n\n# openjpeg\nRUN git clone https://github.com/uclouvain/openjpeg.git --branch master --single-branch \\\n\t&& cd openjpeg \\\n\t&& cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . \\\n\t&& make -j \"${NUM_CORES}\" \\\n\t&& make install \\\n\t&& make clean\n\n# libx265\nRUN git clone https://github.com/videolan/x265.git --branch master --single-branch \\\n\t&& cd ./x265/build/linux \\\n\t&& cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DENABLE_SHARED:bool=off ../../source \\\n\t&& make -j \"${NUM_CORES}\" \\\n\t&& make install \\\n\t&& make clean\n\n# fribidi\nRUN git clone https://github.com/fribidi/fribidi.git --branch master --single-branch \\\n\t&& cd fribidi \\\n\t&& sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am \\\n\t&& ./bootstrap --no-config \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=\"${PREFIX}\" --enable-static=yes --enable-shared=no \\\n\t&& make -j \"${NUM_CORES}\" \\\n\t&& make install \\\n\t&& make clean\n\n# soxr\nRUN git clone https://git.code.sf.net/p/soxr/code soxr --branch master --single-branch \\\n\t&& cd soxr \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=OFF .. \\\n\t&& make -j \"${NUM_CORES}\" \\\n\t&& make install \\\n\t&& make clean\n\n# FFmpeg\nRUN export \\\n\t\tBIN_DIR=\"/opt/ffmpeg/bin\" \\\n\t\tPATH=\"${BIN_DIR}:${PATH}\" \\\n\t&& git clone https://github.com/ffmpeg/ffmpeg.git --branch master --single-branch \\\n\t&& cd ./ffmpeg \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--cc=gcc-6 \\\n\t\t--prefix=\"${PREFIX}\" \\\n\t\t--pkg-config-flags=\"--static\" \\\n\t\t--extra-cflags=\"-I${PREFIX}/include -static\" \\\n\t\t--extra-ldflags=\"-L${PREFIX}/lib -static\" \\\n\t\t--extra-libs=\"-lpthread -lm\" \\\n\t\t--bindir=\"${BIN_DIR}\" \\\n\t\t--cpu=\"sandybridge\" \\\n\t\t--arch=\"x84_64\" \\\n\t\t--disable-shared \\\n\t\t--enable-static \\\n\t\t--disable-debug \\\n\t\t--disable-runtime-cpudetect \\\n\t\t--disable-ffplay \\\n\t\t--disable-ffserver \\\n\t\t--disable-doc \\\n\t\t--disable-network \\\n\t\t--disable-devices \\\n\t\t# Protocols\n\t\t--disable-protocols \\\n\t\t--enable-protocol=file \\\n\t\t--enable-protocol=pipe \\\n\t\t--enable-protocol=tee \\\n\t\t# Libraries\n\t\t--enable-libmp3lame \\\n\t\t--enable-libvpx \\\n\t\t--enable-libwebp \\\n\t\t--enable-libopus \\\n\t\t--enable-fontconfig \\\n\t\t--enable-gray \\\n\t\t--enable-libfreetype \\\n\t\t--enable-libopenjpeg \\\n\t\t--enable-libspeex \\\n\t\t--enable-libtheora \\\n\t\t--enable-libvorbis \\\n\t\t--enable-libfribidi \\\n\t\t# # GPL\n\t\t--enable-gpl \\\n\t\t--enable-frei0r \\\n\t\t--enable-libx264 \\\n\t\t--enable-libx265 \\\n\t\t--enable-libxvid \\\n\t\t# # GPLv3\n\t\t--enable-version3 \\\n\t\t--enable-libopencore-amrnb \\\n\t\t--enable-libopencore-amrwb \\\n\t\t--enable-libvo-amrwbenc \\\n\t|| if [ $? -gt 0 ]; then \\\n\t\ttail -n 100 ./ffbuild/config.log && \\\n\t\texit 1 \\\n\t; fi \\\n\t&& make -j \"${NUM_CORES}\" \\\n\t&& make install \\\n\t&& make distclean\n\nFROM alpine as dist\n\nCOPY --from=build /opt/ /opt/\nCOPY --from=build /tmp/ffmpeg/COPYING.GPLv3 /opt/ffmpeg/\n\nRUN cd /opt/ffmpeg/bin \\\n\t&& for file in *; do \\\n\t\tln -s /opt/ffmpeg/bin/${file} /usr/local/bin/${file} \\\n\t; done\n\nCMD [ \"ffmpeg\" ]\n"
}