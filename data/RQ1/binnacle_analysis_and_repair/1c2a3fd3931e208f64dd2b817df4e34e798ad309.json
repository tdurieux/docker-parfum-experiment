{
  "startTime": 1674240003354,
  "endTime": 1674240004351,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 18,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 18,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 18,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 18,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 18,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 18,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 18,
        "columnEnd": 113
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 1,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 1,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 1,
        "columnEnd": 137
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 62,
        "columnStart": 1,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 21,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 1,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\n\nMAINTAINER Zhanwei Wang <wangzw@wangzw.org>\n\n# install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n\n# install all software we need\nRUN yum install -y epel-release && \\\n yum makecache && \\\n yum install -y man passwd sudo tar which git mlocate links make bzip2 \\\n autoconf automake libtool m4 gcc gcc-c++ gdb flex cmake gperf indent \\\n libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel \\\n perl-ExtUtils-Embed pam-devel python-devel snappy-devel \\\n libyaml-devel libevent-devel bzip2-devel openssl-devel \\\n openldap-devel readline-devel net-snmp-devel apr-devel \\\n libesmtp-devel xerces-c-devel python-pip json-c-devel \\\n apache-ivy java-1.7.0-openjdk-devel \\\n openssh-clients openssh-server && \\\n yum clean all && rm -rf /var/cache/yum\n\n# install libcurl 7.45.0\nRUN mkdir -p /tmp/build/ && \\\n cd /tmp/build && curl -f -L \"https://curl.haxx.se/download/curl-7.45.0.tar.bz2\" -o curl-7.45.0.tar.bz2 && \\\n tar -xjf curl-7.45.0.tar.bz2 && cd curl-7.45.0 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n rm -rf /tmp/build && ldconfig && rm curl-7.45.0.tar.bz2\n\nRUN curl -f -L \"https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo\" -o /etc/yum.repos.d/epel-apache-maven.repo && \\\n yum install -y apache-maven && \\\n yum clean all && rm -rf /var/cache/yum\n\n# setup ssh server and keys for root\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && \\\n cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n chmod 0600 ~/.ssh/authorized_keys\n\n# setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh && \\\n echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh && \\\n chmod a+x /etc/profile.d/java.sh\n\n# install boost 1.59\nRUN mkdir -p /tmp/build && \\\n cd /tmp/build && curl -f -L \"https://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\" -o  boost_1_59_0.tar.bz2 && \\\n tar -xjf boost_1_59_0.tar.bz2 && cd boost_1_59_0 && \\\n ./bootstrap.sh && ./b2 --prefix=/usr -q && ./b2 --prefix=/usr -q install && \\\n rm -rf /tmp/build && rm boost_1_59_0.tar.bz2\n\n# install bison 2.5.1\nRUN mkdir -p /tmp/build/ && \\\n cd /tmp/build && curl -f -L \"ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz\" -o bison-2.5.1.tar.gz && \\\n tar -xzf bison-2.5.1.tar.gz && cd bison-2.5.1 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n rm -rf /tmp/build && rm bison-2.5.1.tar.gz\n\n# install thrift 0.9.2\nRUN mkdir -p /tmp/build && \\\n cd /tmp/build && curl -f -L \"https://www.us.apache.org/dist/thrift/0.9.2/thrift-0.9.2.tar.gz\" -o thrift-0.9.2.tar.gz && \\\n tar -xzf thrift-0.9.2.tar.gz && cd thrift-0.9.2 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n\t--with-cpp=yes --with-boost=yes --with-qt4=no --with-csharp=no --with-java=no --with-erlang=no --enable-tests=no \\\n\t--with-nodejs=no --with-lua=no --with-python=no --with-perl=no --with-php=no && \\\n make && make install && \\\n rm -rf /tmp/build && rm thrift-0.9.2.tar.gz\n\n# install protobuf 2.5.0\nRUN mkdir -p /tmp/build/ && \\\n cd /tmp/build && curl -f -L \"https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2\" -o protobuf-2.5.0.tar.bz2 && \\\n tar -xjf protobuf-2.5.0.tar.bz2 && cd protobuf-2.5.0 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && ldconfig && \\\n rm -rf /tmp/build && rm protobuf-2.5.0.tar.bz2\n\n# install libhdfs3\nRUN mkdir -p /tmp/build && \\\n cd /tmp/build && git clone https://github.com/PivotalRD/libhdfs3.git . && mkdir build && cd build && \\\n ../bootstrap --prefix=/usr && make && make install && ldconfig && \\\n rm -rf /tmp/build\n\n# install python module\nRUN yum makecache && yum install -y postgresql-devel && \\\n pip --retries=50 --no-cache-dir --timeout=300 install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi && \\\n pip --retries=50 --no-cache-dir --timeout=300 install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz && \\\n pip --retries=50 --no-cache-dir --timeout=300 install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download && \\\n yum erase -y postgresql postgresql-libs postgresql-devel && \\\n yum clean all && rm -rf /var/cache/yum\n\n# install libyarn\nRUN mkdir -p /tmp/build && \\\n cd /tmp/build && git clone --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libyarn && mkdir build && cd build && \\\n ../bootstrap --prefix=/usr && make && make install && ldconfig && \\\n rm -rf /tmp/build\n\n# create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin && \\\n useradd -u 1000 -g 1000 gpadmin && \\\n echo \"gpadmin  ALL=(ALL)       NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n\n# sudo should not require tty\nRUN sed -i -e 's|Defaults    requiretty|#Defaults    requiretty|' /etc/sudoers\n\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh && \\\n echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh && \\\n chmod a+x /etc/profile.d/user.sh\n\nENV BASEDIR /data\nRUN mkdir -p /data && chmod 777 /data\n\nUSER gpadmin\n\n# setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && \\\n cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n chmod 0600 ~/.ssh/authorized_keys\n\nWORKDIR /data\n\n"
}