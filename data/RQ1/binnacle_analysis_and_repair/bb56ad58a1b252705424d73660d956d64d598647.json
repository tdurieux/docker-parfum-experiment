{
  "startTime": 1674236536040,
  "endTime": 1674236536208,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5\n\n# Install apt based dependencies required to run Rails as\n# well as RubyGems. As the Ruby image itself is based on a\n# Debian image, we use apt-get to install those.\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential nodejs mysql-client python-dev python-pip apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\n\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Install chamber, for pulling secrets into the container.\nADD https://github.com/segmentio/chamber/releases/download/v2.2.0/chamber-v2.2.0-linux-amd64 /bin/chamber\nRUN chmod +x /bin/chamber\n\n# Configure the main working directory. This is the base\n# directory used in any further RUN, COPY, and ENTRYPOINT\n# commands.\nRUN mkdir -p /app\nWORKDIR /app\n\n# Copy the Gemfile as well as the Gemfile.lock and install\n# the RubyGems. This is a separate step so the dependencies\n# will be cached unless changes to one of those two files\n# are made.\nCOPY Gemfile Gemfile.lock ./\nRUN gem install bundler && bundle install --jobs 20 --retry 5\n\n# Do the same for node packages, allowing them to be cached\nRUN npm update -g\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\n# Copy the main application.\nCOPY . ./\n\n# Generate the app's static resources using npm/webpack\nRUN mkdir -p app/assets/dist && npm run build-img && ls -l app/assets/dist/\n\nARG GIT_COMMIT\nENV GIT_VERSION ${GIT_COMMIT}\n\n# Expose port 3000 to the Docker host, so we can access it\n# from the outside.\nEXPOSE 3000\n\n# Configure an entry point, so we don't need to specify\n# \"bundle exec\" or \"chamber\" for each of our commands.\nENTRYPOINT [\"bin/entrypoint.sh\"]\n\n# The main command to run when the container starts. Also\n# tell the Rails dev server to bind to all interfaces by\n# default.\nCMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\", \"-p\", \"3000\"]\n"
}