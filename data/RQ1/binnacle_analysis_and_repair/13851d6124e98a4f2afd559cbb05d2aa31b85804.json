{
  "startTime": 1674251495992,
  "endTime": 1674251496353,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/armv7hf-debian:wheezy\nMAINTAINER fg2it\n\nARG BUILDOP\n\nENV OPENSSL_FLAGS='no-idea no-mdc2 no-rc5 no-zlib enable-tlsext no-ssl2 no-ssl3 no-ssl3-method enable-rfc3779 enable-cms'\n\nRUN echo \"deb-src http://httpredir.debian.org/debian wheezy main\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n       build-essential git flex bison gperf python ruby git libfontconfig1-dev \\\n       dpkg-dev binutils gcc g++ libc-dev \\\n       libjpeg8-dev libpng12-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\nRUN git clone git://github.com/ariya/phantomjs.git && \\\n    cd phantomjs           && \\\n    git checkout 2.1.1     && \\\n    git submodule init     && \\\n    git submodule update   && \\\n    apt-get source openssl && \\\n    apt-get source icu\n\nRUN echo \"Recompiling OpenSSL\" && \\\n    cd phantomjs/openssl-1.0.1e && \\\n    ./Configure --prefix=/usr --openssldir=/etc/ssl --libdir=lib ${OPENSSL_FLAGS} linux-armv4 && \\\n    make depend && make && make install\n\nRUN echo \"Building the static version of ICU library...\" && \\\n    cd phantomjs/icu-4.8.1.1/source && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-static --disable-shared && \\\n    make && make install\n\n\nRUN echo \"Compiling PhantomJS...\" && \\\n    cd phantomjs && \\\n    python build.py ${BUILDOP} --confirm --release --qt-config=\"-no-pkg-config\" --git-clean-qtbase --git-clean-qtwebkit\n\nCMD [\"/bin/bash\"]"
}