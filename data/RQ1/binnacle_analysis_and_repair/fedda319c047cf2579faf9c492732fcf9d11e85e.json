{
  "startTime": 1674253062252,
  "endTime": 1674253062451,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for running the application in a production environment.\n# Can be run locally for testing that matches production very closely.\nFROM ruby:2.6.3-alpine3.9\n\nENV APP_ROOT videogamelist\nENV BUNDLER_VERSION 2.0.1\nENV RAILS_ENV production\nENV RACK_ENV production\nENV NODE_ENV production\nENV RAILS_SERVE_STATIC_FILES true\nENV RAILS_LOG_TO_STDOUT true\n\nRUN apk add --no-cache --update build-base \\\n                                linux-headers \\\n                                git \\\n                                postgresql-dev \\\n                                nodejs \\\n                                yarn \\\n                                bash \\\n                                tzdata \\\n                                imagemagick\n\nRUN mkdir /$APP_ROOT\nWORKDIR /$APP_ROOT\nCOPY Gemfile /$APP_ROOT/Gemfile\nCOPY Gemfile.lock /$APP_ROOT/Gemfile.lock\n# Install the right version of Bundler.\nRUN gem install bundler:$BUNDLER_VERSION\nRUN bundle install --jobs=4 --without \"test development\"\n# Copy package.json and yarn.lock, then install yarn packages.\nCOPY package.json /$APP_ROOT/package.json\nCOPY yarn.lock /$APP_ROOT/yarn.lock\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Copy the rest of the files.\n# We do this last to speed up regeneration of the Docker image.\nCOPY . /$APP_ROOT\n\n# Pre-compile webpack packs.\n# Pass a SECRET_KEY_BASE environment variable for just this command,\n# works around this issue: https://github.com/rails/rails/issues/32947\nRUN SECRET_KEY_BASE='bin/rake secret' bin/rails assets:precompile\n\n# Start the main process.\nCMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\"]\n"
}