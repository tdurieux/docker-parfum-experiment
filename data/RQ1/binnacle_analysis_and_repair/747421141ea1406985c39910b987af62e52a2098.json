{
  "startTime": 1674236544330,
  "endTime": 1674236544563,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.opensource.zalan.do/stups/python:3.6.5-20\nMAINTAINER lothar.schulz@zalando.de\n\n# folder structure and user\nRUN \\\n\n  apt-get update -y && \\\n  apt-get install --no-install-recommends -y sudo && \\\n# create application user\n  useradd -d /backup -u 998 -o -c \"application user\" application && \\\n# allow su\n  echo \"application ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/application && \\\n  chmod 0440 /etc/sudoers.d/application && \\\n# update w/ latest security patches\n# install python pip3 & english, git, screen etc\n  apt-get install -y --no-install-recommends unattended-upgrades python3 python3-dev && \\\n  apt-get install -y --no-install-recommends python3-pip python3-yaml && \\\n  apt-get install -y --no-install-recommends language-pack-en git && \\\n  apt-get install -y --no-install-recommends ssh && \\\n  apt-get install -y --no-install-recommends bash && \\\n  apt-get install -y --no-install-recommends rsync && \\\n  apt-get install -y --no-install-recommends cron && \\\n# install boto3\n  pip3 install --no-cache-dir --upgrade boto boto3 && \\\n# clean apt-get lists\n  rm -rf /var/lib/apt/lists/* && \\\n# create directories\n  mkdir -p /backup/backup-utils/ && \\\n  mkdir -p /kms && mkdir -p /var/log/ && mkdir /delete-instuck-backups\nWORKDIR /backup\n\nRUN \\\n# clone backup-utils\n  git clone -b stable https://github.com/github/backup-utils.git && \\\n  git -C /backup/backup-utils pull\n\n# copy predefined backup config\nCOPY backup.config /backup/backup-utils/backup.config\n\n# copy files to decrypt private ssh key using kms\nCOPY python/extract_decrypt_kms.py /kms/extract_decrypt_kms.py\nCOPY convert-kms-private-ssh-key.sh /kms/convert-kms-private-ssh-key.sh\nCOPY start_backup.sh /start_backup.sh\n\n# copy file to drop in stuck backup\nCOPY python/delete_instuck_progress.py /delete-instuck-backups/delete_instuck_progress.py\n\n# copy cron job\nCOPY cron-ghe-backup /etc/cron.d/ghe-backup\n\n# copy finale CMD commands\nCOPY final-docker-cmd.sh /backup/final-docker-cmd.sh\nCOPY replace-convert-properties.sh /backup/replace-convert-properties.sh\n\n\n#PLACEHOLDER_4_COPY_SCM_SOURCE_JSON\n\nRUN \\\n# change mode of files\n  chown -R application: /backup && \\\n  chown -R application: /kms && \\\n  chown -R application: /delete-instuck-backups && \\\n  chown -R application: /start_backup.sh && \\\n  chmod 0700 /kms/extract_decrypt_kms.py && \\\n  chmod 0700 /kms/convert-kms-private-ssh-key.sh && \\\n  chmod 0644 /etc/cron.d/ghe-backup && \\\n  chmod 0700 /delete-instuck-backups/delete_instuck_progress.py && \\\n  chmod 0700 /start_backup.sh && \\\n  chmod 0700 /backup/replace-convert-properties.sh && \\\n  chmod 0700 /backup/final-docker-cmd.sh && \\\n  mkfifo /var/log/ghe-prod-backup.log && \\\n  chown -R application: /var/log/ghe-prod-backup.log && \\\n  touch /var/log/ghe-delete-instuck-progress.log && \\\n  chown -R application: /var/log/ghe-delete-instuck-progress.log\n\nUSER application\n\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#user mentions to avoid sudo,\n# however cron as part of the final-docker-cmd.sh has to run as\nCMD \"/backup/final-docker-cmd.sh\"\n\n"
}