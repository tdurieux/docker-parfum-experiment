{
  "startTime": 1674234414689,
  "endTime": 1674234415001,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 23,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM velaco/alpine-r:base-3.5.0-r1\n\nMAINTAINER Aleksandar Ratesic \"aratesic@gmail.com\"\n\n# TODO: Separate to build and persistent!\nENV ALL_DEPS \\\n    automake==1.15.1-r0 \\\n    autoconf \\\n    bash \\\n    m4 \\\n    file \\\n    curl-dev \\ \n    python2 \\ \n    g++ \\ \n    gcc \\\n    cmake \\\n    libc6-compat \\\n    git \\\n    libffi \\\n    psmisc \\\n    rrdtool \\\n    cairo-dev \\\n    libxt-dev \\\n    libxml2-dev \\\n    linux-headers \\\n    wget\n\n# Installation\nRUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.6/main' >> /etc/apk/repositories && \\\n    apk upgrade --update && \\\n    apk add --no-cache $ALL_DEPS && \\\n    R -e \"install.packages(c('shiny'), repos='http://cran.rstudio.com/')\" && \\\n    git clone https://github.com/velaco/shiny-server.git && \\\n    cd shiny-server && mkdir tmp && cd tmp && \\\n    DIR=`pwd` && PATH=$DIR/../bin:$PATH && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/local ../ && \\\n    wget https://nodejs.org/dist/v8.11.3/node-v8.11.3.tar.xz && \\\n    mkdir node_source && \\\n    tar xf node-v8.11.3.tar.xz --strip-components=1 -C \"node_source\" && \\\n    rm node-v8.11.3.tar.xz && \\\n    ( cd node_source && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/shiny-server/ext/node) && \\\n    (cd node_source && make) && \\\n    (cd node_source && make install) && \\\n    cp /shiny-server/ext/node/bin/node /shiny-server/ext/node/bin/shiny-server && \\\n    rm /shiny-server/ext/node/bin/npm && \\\n    (cd ../ext/node/lib/node_modules/npm && ./scripts/relocate.sh) && \\\n    make && mkdir ../build && \\\n    (cd .. && ./bin/npm --python=\"/usr/bin/python\" --unsafe-perm install) && \\\n    (cd .. && ./bin/node ./ext/node/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js --python=\"/usr/bin/python\" rebuild) && \\\n    make install\n\n# Post installation\nRUN ln -s /usr/local/shiny-server/bin/shiny-server /usr/bin/shiny-server && \\\n    addgroup -g 82 -S shiny; \\\n    adduser -u 82 -D -S -G shiny shiny && \\\n    mkdir -p /srv/shiny-server && \\\n    (cd /srv/shiny-server && chown -R shiny:shiny .) && \\\n    mkdir -p /var/lib/shiny-server && \\\n    (cd /var/lib/shiny-server && chown -R shiny:shiny .) && \\\n    mkdir -p /var/log/shiny-server && \\\n    (cd /var/log/shiny-server && chown -R shiny:shiny .) && \\\n    mkdir -p /etc/shiny-server && \\\n    (cd /etc/shiny-server && chown -R shiny:shiny .)\n\nCOPY shiny-server.conf /etc/shiny-server/shiny-server.conf\nCOPY shiny-server.sh /usr/bin/shiny-server.sh\n\n# Move sample apps to test installation, clean up\nRUN chmod 744 /usr/bin/shiny-server.sh && \\\n    chown shiny:shiny /usr/bin/shiny-server.sh && \\\n    mv /shiny-server/samples/sample-apps /srv/shiny-server/ && \\\n    mv /shiny-server/samples/welcome.html /srv/shiny-server/ && \\\n    rm -rf /shiny-server/\n\nEXPOSE 3838\n\nUSER shiny\n\nCMD [\"/usr/bin/shiny-server.sh\"]\n"
}