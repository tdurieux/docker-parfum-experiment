{
  "startTime": 1674246327116,
  "endTime": 1674246327704,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 163
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 163
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV LC_ALL C\nENV PG_VERSION 9.6\nENV KEYCLOAK_VERSION 3.4.3.Final\nENV KONG_VERSION 0.10.1\nENV MKT_VERSION_TAG acc\nENV PUB_VERSION_TAG acc\n\nUSER root\n\nWORKDIR /tmp\n\nADD db-creation.sql /tmp\nADD t1g-inserts.sql /tmp\nADD t1g-schema.sql /tmp\nADD postgres.zip /tmp\nADD standalone.xml /tmp\nADD kong.conf /tmp\nADD start.sh /tmp\nADD application.conf /tmp\nADD wildfly_install.sh /tmp\nADD t1g-ear.ear /tmp\nADD kc-db-export.json /tmp\nADD wildfly-kc-import-service.sh /tmp\nADD wildfly-kc-no-import-service.sh /tmp\nADD key-auth-handler.lua /tmp\nADD fixtures.lua /tmp\nADD bower-mkt.json /tmp\nADD bower-pub.json /tmp\nADD config-mkt.yml /tmp\nADD config-pub.yml /tmp\nADD keycloak.json /tmp\n\nRUN apt-get -y update\nRUN apt-get -y upgrade\nRUN ln -fs /usr/share/zoneinfo/Europe/Brussels /etc/localtime && dpkg-reconfigure -f noninteractive tzdata\nRUN apt-get install --no-install-recommends -y build-essential software-properties-common nano curl git unzip wget sudo netcat openssl libpcre3 dnsmasq procps perl && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y ppa:webupd8team/java\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" | sudo tee -a /etc/apt/sources.list.d/pgdg.list\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections\nRUN echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\nRUN apt-get install -y -q --no-install-recommends nodejs oracle-java8-installer postgresql-$PG_VERSION postgresql-client-$PG_VERSION postgresql-contrib-$PG_VERSION && rm -rf /var/lib/apt/lists/*;\nRUN npm install pm2 -g && npm cache clean --force;\n\n# Configure PostgreSQL\nRUN echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"host all  all    ::0/0  md5\" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/$PG_VERSION/main/postgresql.conf\n\nUSER postgres\n\nRUN /etc/init.d/postgresql start && \\\n    psql -f db-creation.sql && \\\n    psql t1gengine -f t1g-schema.sql && \\\n    psql t1gengine -f t1g-inserts.sql\n\nUSER root\n\n# Install Wildfly & Keycloak overlay\nRUN chmod u+x /tmp/wildfly_install.sh && /tmp/wildfly_install.sh && service wildfly stop && rm -rf /var/run/wildfly\nRUN wget https://downloads.jboss.org/keycloak/$KEYCLOAK_VERSION/keycloak-overlay-$KEYCLOAK_VERSION.zip && \\\n    mv /tmp/keycloak-overlay-$KEYCLOAK_VERSION.zip /opt && \\\n    unzip -o /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip -d /opt/wildfly\nRUN /opt/wildfly/bin/jboss-cli.sh --file=/opt/wildfly/bin/keycloak-install.cli\nRUN mv /tmp/postgres.zip /opt/wildfly/modules/system/layers/base/org && \\\n    unzip /opt/wildfly/modules/system/layers/base/org/postgres.zip -d /opt/wildfly/modules/system/layers/base/org && \\\n    rm /opt/wildfly/modules/system/layers/base/org/postgres.zip && \\\n    mv /tmp/standalone.xml /opt/wildfly/standalone/configuration/standalone.xml && \\\n    /etc/init.d/postgresql start && \\\n    mv /tmp/wildfly-kc-import-service.sh /etc/init.d/wildfly && \\\n    service wildfly start && \\\n    service wildfly stop && \\\n    rm -rf /var/run/wildfly && \\\n    mv /tmp/wildfly-kc-no-import-service.sh /etc/init.d/wildfly\n\nRUN mv /tmp/application.conf /opt/wildfly/standalone/configuration && \\\n    mv /tmp/t1g-ear.ear /opt/wildfly/standalone/deployments\n\nRUN /etc/init.d/postgresql start && \\\n    wget https://github.com/Kong/kong/releases/download/$KONG_VERSION/kong-$KONG_VERSION.trusty_all.deb && \\\n    sudo dpkg -i kong-$KONG_VERSION.trusty_all.deb && \\\n    mv /tmp/kong.conf /etc/kong/kong.conf && \\\n    # Install custom plugins\n    luarocks install kong-plugin-jwt-up && \\\n    # HAL & JSON Threat protection plugins must be updated to replace Stringy dependency\n    #    luarocks install kong-plugin-hal && \\\n    #    luarocks install kong-plugin-json-threat-protection && \\\n    mv /tmp/fixtures.lua /usr/local/share/lua/5.1/kong/plugins/jwt-up && \\\n    mv /tmp/key-auth-handler.lua /usr/local/share/lua/5.1/kong/plugins/key-auth/handler.lua && \\\n    kong start --vv\n\n# Install Marketplace + overwrite bower.json to correct Keycloak version\n\nRUN wget https://github.com/Trust1Team/api-market/archive/$MKT_VERSION_TAG.zip && \\\n    unzip /tmp/$MKT_VERSION_TAG.zip -d /opt/ && \\\n    mv /opt/api-market-$MKT_VERSION_TAG /opt/api-market && \\\n    mv /tmp/bower-mkt.json /opt/api-market/bower.json && \\\n    cp /tmp/keycloak.json /opt/api-market/config && \\\n    mv /tmp/config-mkt.yml /opt/api-market/config/config.yml && \\\n    rm -rf /tmp/$MKT_VERSION_TAG.zip && \\\n    cd /opt/api-market && \\\n    npm run deploy\n\n# Install Publisher  + overwrite bower.json to correct Keycloak version\n\nRUN wget https://github.com/Trust1Team/api-publisher/archive/$PUB_VERSION_TAG.zip && \\\n    unzip /tmp/$PUB_VERSION_TAG.zip -d /opt/ && \\\n    mv /opt/api-publisher-$PUB_VERSION_TAG /opt/api-publisher && \\\n    mv /tmp/bower-pub.json /opt/api-publisher/bower.json && \\\n    cp /tmp/keycloak.json /opt/api-publisher/config && \\\n    mv /tmp/config-pub.yml /opt/api-publisher/config/config.yml && \\\n    rm -rf /tmp/$PUB_VERSION_TAG.zip && \\\n    cd /opt/api-publisher && \\\n    npm run deploy\n\n#Cleanup\n\nRUN rm -rf /opt/keycloak-overlay-$KEYCLOAK_VERSION.zip && \\\n    rm -rf /tmp/hsperf* && \\\n    rm -rf /tmp/kong-$KONG_VERSION.trusty_all.deb && \\\n    rm -rf /tmp/npm* && \\\n    rm -rf /tmp/phantomjs && \\\n    rm -rf /tmp/*.sql && \\\n    rm -rf /tmp/wildfly* && \\\n    rm -rf /tmp/v8-* && \\\n    rm -rf /opt/wildfly/bin/kc-db-export.json\n\nRUN [\"chmod\", \"+x\", \"/tmp/start.sh\"]\n\nEXPOSE 5432 28080 28443 29990 29993 3000 3003 8000 8001\n\nCMD /tmp/start.sh"
}