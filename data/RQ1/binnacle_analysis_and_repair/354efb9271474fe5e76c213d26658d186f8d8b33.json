{
  "startTime": 1674243914781,
  "endTime": 1674243914915,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 43,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build container for unit testing.\n#\n# To build the image, run the following from this directory:\n#   docker build -t beast_testing .\n#\n# To run the tests, use\n#   docker run beast_testing\n#\n# To run the tests interactively, use\n#   docker run -it -p 5900:5900 beast_testing /bin/bash\n# This will give you a shell in the container. From this\n# shell, run\n#   vncserver $DISPLAY -geometry 1920x1080; ant travis\n#\n# The previous command exposes the VNC session, so while the\n# BEAUti test suite is running you can run a VNC viewer and\n# connect it to localhost (password: password) to observe\n# the graphical output of these tests.\n\nFROM openjdk:8\n\n# Install Apache Ant\nRUN apt-get update && apt-get install --no-install-recommends -y ant && rm -rf /var/lib/apt/lists/*;\n\n# Install and configure VNC server\nRUN apt-get update && apt-get install --no-install-recommends -y tightvncserver twm && rm -rf /var/lib/apt/lists/*;\nENV DISPLAY :0\nENV USER root\nRUN mkdir /root/.vnc\nRUN echo password | vncpasswd -f > /root/.vnc/passwd\nRUN chmod 600 /root/.vnc/passwd\n\n# Install BEAGLE\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential autoconf automake libtool pkg-config && rm -rf /var/lib/apt/lists/*;\n# use latest release v3.0.1, issue #786\nRUN cd /root && git clone --branch v3.0.1 --depth=1 https://github.com/beagle-dev/beagle-lib.git\nRUN cd /root/beagle-lib && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make install\nRUN ldconfig\n\n# Ant build fails if the repo dir isn't named beast2\nRUN mkdir /root/beast2\nWORKDIR /root/beast2\n\nADD . ./\n\nCMD vncserver $DISPLAY -geometry 1920x1080; ant travis\n"
}