{
  "startTime": 1674249647018,
  "endTime": 1674249647202,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Java baseimage, for Bazel.\nFROM openjdk:8\n\nENV SYNTAXNETDIR=/opt/tensorflow PATH=$PATH:/root/bin\n\n# Install system packages. This doesn't include everything the TensorFlow\n# dockerfile specifies, so if anything goes awry, maybe install more packages\n# from there. Also, running apt-get clean before further commands will make the\n# Docker images smaller.\nRUN mkdir -p $SYNTAXNETDIR \\\n    && cd $SYNTAXNETDIR \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n          file \\\n          git \\\n          graphviz \\\n          libcurl3-dev \\\n          libfreetype6-dev \\\n          libgraphviz-dev \\\n          liblapack-dev \\\n          libopenblas-dev \\\n          libpng12-dev \\\n          libxft-dev \\\n          python-dev \\\n          python-mock \\\n          python-pip \\\n          python2.7 \\\n          swig \\\n          vim \\\n          zlib1g-dev \\\n    && apt-get clean \\\n    && (rm -f /var/cache/apt/archives/*.deb \\\n        /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true) && rm -rf /var/lib/apt/lists/*;\n\n# Install common Python dependencies. Similar to above, remove caches\n# afterwards to help keep Docker images smaller.\nRUN pip install --no-cache-dir --ignore-installed pip \\\n    && python -m pip install numpy \\\n    && rm -rf /root/.cache/pip /tmp/pip*\nRUN python -m pip install \\\n          asciitree \\\n          ipykernel \\\n          jupyter \\\n          matplotlib \\\n          pandas \\\n          protobuf \\\n          scipy \\\n          sklearn \\\n    && python -m ipykernel.kernelspec \\\n    && python -m pip install pygraphviz \\\n          --install-option=\"--include-path=/usr/include/graphviz\" \\\n          --install-option=\"--library-path=/usr/lib/graphviz/\" \\\n    && python -m jupyter_core.command nbextension enable \\\n          --py --sys-prefix widgetsnbextension \\\n    && rm -rf /root/.cache/pip /tmp/pip*\n\n# Installs the latest version of Bazel.\nRUN wget --quiet https://github.com/bazelbuild/bazel/releases/download/0.4.3/bazel-0.4.3-installer-linux-x86_64.sh \\\n    && chmod +x bazel-0.4.3-installer-linux-x86_64.sh \\\n    && ./bazel-0.4.3-installer-linux-x86_64.sh \\\n    && rm ./bazel-0.4.3-installer-linux-x86_64.sh\n\nCOPY WORKSPACE $SYNTAXNETDIR/syntaxnet/WORKSPACE\nCOPY tools/bazel.rc $SYNTAXNETDIR/syntaxnet/tools/bazel.rc\nCOPY tensorflow $SYNTAXNETDIR/syntaxnet/tensorflow\n\n# Compile common TensorFlow targets, which don't depend on DRAGNN / SyntaxNet\n# source. This makes it more convenient to re-compile DRAGNN / SyntaxNet for\n# development (though not as convenient as the docker-devel scripts).\nRUN cd $SYNTAXNETDIR/syntaxnet/tensorflow \\\n    && tensorflow/tools/ci_build/builds/configured CPU \\\n    && cd $SYNTAXNETDIR/syntaxnet \\\n    && bazel build -c opt @org_tensorflow//tensorflow:tensorflow_py\n\n# Build the codez.\nWORKDIR $SYNTAXNETDIR/syntaxnet\nCOPY dragnn $SYNTAXNETDIR/syntaxnet/dragnn\nCOPY syntaxnet $SYNTAXNETDIR/syntaxnet/syntaxnet\nCOPY third_party $SYNTAXNETDIR/syntaxnet/third_party\nCOPY util/utf8 $SYNTAXNETDIR/syntaxnet/util/utf8\nRUN bazel build -c opt //dragnn/python:all //dragnn/tools:all\n\n# This makes the IP exposed actually \"*\"; we'll do host restrictions by passing\n# a hostname to the `docker run` command.\nCOPY tensorflow/tensorflow/tools/docker/jupyter_notebook_config.py /root/.jupyter/\nEXPOSE 8888\n\n# This does not need to be compiled, only copied.\nCOPY examples $SYNTAXNETDIR/syntaxnet/examples\n# Todo: Move this earlier in the file (don't want to invalidate caches for now).\n\nCMD /bin/bash -c \"bazel-bin/dragnn/tools/oss_notebook_launcher notebook --debug --notebook-dir=/opt/tensorflow/syntaxnet/examples --allow-root\"\n"
}