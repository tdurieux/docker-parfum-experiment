{
  "startTime": 1674234793090,
  "endTime": 1674234793244,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 36,
        "columnEnd": 54
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 58,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\n# Define the build arg and set a default value\nARG build=manual\n\n# Create a label for version and set it to the value of $build\nLABEL version=$build\n\n# update the base image and install our required packages\nRUN apt-get -y update && apt-get -y --no-install-recommends install git wget curl nodejs ruby-dev npm nginx supervisor && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n# install generic requirements\nRUN npm install -g n && n stable && npm install -g npm && npm install -g bower gulp browser-sync && gem install bundle && npm cache clean --force;\n\n# copy our application\nRUN mkdir /app\nCOPY . /app\n\n# configure nginx and supervisord for staging/production deployments\nRUN rm -rf /etc/nginx/sites-enabled/default && cp /app/config/nginx/nginx.conf /etc/nginx/ && cp /app/config/nginx/default /etc/nginx/sites-available/ && ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default && cp /app/config/supervisor/supervisord.conf /etc/supervisor/ && cp /app/config/supervisor/apps.conf /etc/supervisor/conf.d/\n\n# install our application-specific requirements\nRUN cd /app && bundle install\n\n# configure and launch the application\nEXPOSE 80 3002 4002\nVOLUME /app\n\nWORKDIR /app\n\nENTRYPOINT ./docker-entrypoint.sh\n"
}