{
  "startTime": 1674234246806,
  "endTime": 1674234246893,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile is meant to be personalized, and serves as a template and demonstration.\n# Modify it directly, but it is recommended to copy this dockerfile into a new build context (directory),\n# modify to taste and modify docker-compose.yml.template to build and run it.\n\n# It is recommended to control docker containers through 'docker-compose' https://docs.docker.com/compose/\n# Docker compose depends on a .yml file to control container sets\n# rocm-setup.sh can generate a useful docker-compose .yml file\n# `docker-compose run --rm <rocm-terminal>`\n\n# If it is desired to run the container manually through the docker command-line, the following is an example\n# 'docker run -it --rm -v [host/directory]:[container/directory]:ro <user-name>/<project-name>'.\n\nFROM ubuntu:16.04\nMAINTAINER Peng Sun <Peng.Sun@amd.com>\n\n# Initialize the image\n# Modify to pre-install dev tools and ROCm packages\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl && \\\n  curl -f -sL https://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add - && \\\n  sh -c 'echo deb [arch=amd64] http://repo.radeon.com/rocm/apt/debian/ xenial main > /etc/apt/sources.list.d/rocm.list' && \\\n  apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n  sudo \\\n  libelf1 \\\n  libnuma-dev \\\n  build-essential \\\n  git \\\n  vim-nox \\\n  cmake-curses-gui \\\n  rocm-dev && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Grant members of 'sudo' group passwordless privileges\n# Comment out to require sudo\nCOPY sudo-nopasswd /etc/sudoers.d/sudo-nopasswd\n\n# This is meant to be used as an interactive developer container\n# Create user rocm-user as member of sudo group\n# Append /opt/rocm/bin to the system PATH variable\nRUN useradd --create-home -G sudo --shell /bin/bash rocm-user\n#    sed --in-place=.rocm-backup 's|^\\(PATH=.*\\)\"$|\\1:/opt/rocm/bin\"|' /etc/environment\n\nUSER rocm-user\nWORKDIR /home/rocm-user\nENV PATH \"${PATH}:/opt/rocm/bin\"\n\n# The following are optional enhancements for the command-line experience\n# Uncomment the following to install a pre-configured vim environment based on http://vim.spf13.com/\n# 1.  Sets up an enhanced command line dev environment within VIM\n# 2.  Aliases GDB to enable TUI mode by default\n#RUN curl -sL https://j.mp/spf13-vim3 | bash && \\\n#    echo \"alias gdb='gdb --tui'\\n\" >> ~/.bashrc\n\n# Default to a login shell\nCMD [\"bash\", \"-l\"]\n"
}