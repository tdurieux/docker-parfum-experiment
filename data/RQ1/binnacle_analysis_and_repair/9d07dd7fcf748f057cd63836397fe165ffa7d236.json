{
  "startTime": 1674244522445,
  "endTime": 1674244522597,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 32,
        "columnStart": 8,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 32,
        "columnStart": 8,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/rpi-raspbian:stretch\nMAINTAINER Vallard\n\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev \\\n        libjasper-dev \\\n        libavformat-dev \\\n        libpq-dev \\\n        libgtk2.0-dev \\\n        pkg-config \\\n\t\t\t\t\t\t\tpython3 \\\n\t\t\t\t\t\t\tpython3-pip \\\n       python3-setuptools \\\n\t\t\t\t\t\t\tpython3-dev \\\n\t\t\t\t\t\t\tlibblas-dev \\\n\t\t\t\t\t\t\tliblapack-dev \\\n\t\t\t\t\t\t\tlibhdf5-dev \\\n\t\t\t\t\t\t\tpython3-h5py \\\n\t\t\t\t\t\t\tpython3-scipy \\\n\t\t\t\t\t\t\tpython3-pil && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir numpy \\\n        keras==2.1.2 \\\n\tpaho-mqtt \\\n        h5py==2.7.1\n\n# install Tensorflow\nADD tensorflow-1.1.0-cp35-cp35m-linux_armv7l.whl .\nRUN pip3 install --no-cache-dir ./tensorflow-1.1.0-cp35-cp35m-linux_armv7l.whl\n\n# install opencv\nWORKDIR /\nRUN wget https://github.com/opencv/opencv/archive/3.3.0.zip \\\n&& unzip 3.3.0.zip \\\n&& mkdir /opencv-3.3.0/cmake_binary \\\n&& cd /opencv-3.3.0/cmake_binary \\\n&& cmake -DBUILD_TIFF=ON \\\n  -DBUILD_opencv_java=OFF \\\n  -DWITH_CUDA=OFF \\\n  -DBUILD_TESTS=OFF \\\n  -DBUILD_PERF_TESTS=OFF \\\n  -DCMAKE_BUILD_TYPE=RELEASE \\\n  -DCMAKE_INSTALL_PREFIX=$(python3 -c \"import sys; print(sys.prefix)\") \\\n  -DPYTHON_EXECUTABLE=$(which python3) \\\n  -DPYTHON_INCLUDE_DIR=$(python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n  -DPYTHON_PACKAGES_PATH=$(python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") .. \\\n&& make install \\\n&& rm /3.3.0.zip \\\n&& rm -r /opencv-3.3.0\n\n\nADD src/ /app\nWORKDIR /app\nCMD [\"python3\", \"yolo-pi.py\"]\n"
}