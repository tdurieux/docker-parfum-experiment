{
  "startTime": 1674252418479,
  "endTime": 1674252418756,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:latest\n\n#  $ docker build . -t continuumio/miniconda3:latest -t continuumio/miniconda3:4.5.11\n#  $ docker run --rm -it continuumio/miniconda3:latest /bin/bash\n#  $ docker push continuumio/miniconda3:latest\n#  $ docker push continuumio/miniconda3:4.5.11\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y openjdk-8-jre-headless wget bzip2 ca-certificates curl git && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\nENV TINI_VERSION v0.16.1\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\n\n#RUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n#RUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\n#RUN conda config --set show_channel_urls yes\n\nRUN mkdir ~/.pip\n\nRUN echo \"[global]\\n trusted-host = mirrors.aliyun.com\\n index-url = https://mirrors.aliyun.com/pypi/simple\" > ~/.pip/pip.conf\n\nARG MAVEN_VERSION=3.6.0\nARG USER_HOME_DIR=\"/root\"\nARG SHA=fae9c12b570c3ba18116a4e26ea524b29f7279c17cbaadc3326ca72927368924d9131d11b9e851b8dc9162228b6fdea955446be41207a5cfc61283dd8a561d2f\nARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha512sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n\n\nARG SPARK_VERSION\nARG MLSQL_SPARK_VERSION\nARG MLSQL_VERSION\n\nENV URL_BASE http://www.apache.org/dyn/closer.cgi/\nENV FILENAME spark-${SPARK_VERSION}-bin-hadoop2.7.tgz\nENV URL_DIRECTORIES spark/spark-${SPARK_VERSION}/\n\n# use the closer.cgi to pick a mirror\nRUN CURLCMD=\"curl -s -L ${URL_BASE}${URL_DIRECTORIES}${FILENAME}?as_json=1\" && \\\n    BASE=$(${CURLCMD} | grep preferred | awk '{print $NF}' | sed 's/\\\"//g')  && \\\n    URL=\"${BASE}${URL_DIRECTORIES}${FILENAME}\" && \\\n    mkdir /work && \\\n    curl -f -o \"/work/${FILENAME}\" -L \"${URL}\" && \\\n    cd /work && tar zxf ${FILENAME} && \\\n    rm ${FILENAME}\n\nENV SPARK_HOME /work/spark-${SPARK_VERSION}-bin-hadoop2.7\n\nRUN mkdir -p /home/deploy\nRUN mkdir -p /home/deploy/mlsql\nRUN mkdir -p /home/deploy/mlsql-console\nRUN mkdir -p /tmp/__mlsql__/logs\n\nRUN mkdir -p /home/deploy/mlsql/libs\nENV MLSQL_DISTRIBUTIOIN_URL=\"streamingpro-mlsql-spark_${MLSQL_SPARK_VERSION}-${MLSQL_VERSION}.jar\"\nADD  ${MLSQL_DISTRIBUTIOIN_URL} /home/deploy/mlsql/libs\nADD  lib/ansj_seg-5.1.6.jar /home/deploy/mlsql/libs\nADD  lib/nlp-lang-1.7.8.jar /home/deploy/mlsql/libs\nADD  start-local.sh /home/deploy/mlsql\nADD  log4j.properties ${SPARK_HOME}/conf\nWORKDIR /home/deploy/mlsql\n\n#ENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD ./start-local.sh\n"
}