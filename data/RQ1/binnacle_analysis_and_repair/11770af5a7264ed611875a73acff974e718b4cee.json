{
  "startTime": 1674244366917,
  "endTime": 1674244367294,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8u181-alpine\n\nENV ES_VERSION 6.5.3\n\nENV DOWNLOAD_URL \"https://artifacts.elastic.co/downloads/elasticsearch\"\nENV ES_TARBAL \"${DOWNLOAD_URL}/elasticsearch-${ES_VERSION}.tar.gz\"\nENV ES_TARBALL_ASC \"${DOWNLOAD_URL}/elasticsearch-${ES_VERSION}.tar.gz.asc\"\nENV GPG_KEY \"46095ACC8548582C1A2699A9D27D666CD88E42B4\"\n\n# Install necessary tools\nRUN apk add --no-cache --update bash ca-certificates su-exec util-linux curl runit\n\n# Install Elasticsearch.\nRUN apk add --no-cache -t .build-deps gnupg openssl \\\n  && cd /tmp \\\n  && echo \"===> Install Elasticsearch...\" \\\n  && curl -f -o elasticsearch.tar.gz -Lskj \"$ES_TARBAL\"; \\\n\tif [ \"$ES_TARBALL_ASC\" ]; then \\\n\t\tcurl -f -o elasticsearch.tar.gz.asc -Lskj \"$ES_TARBALL_ASC\"; \\\n\t\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\"; \\\n\t\tgpg --batch --verify elasticsearch.tar.gz.asc elasticsearch.tar.gz; \\\n\t\trm -r \"$GNUPGHOME\" elasticsearch.tar.gz.asc; \\\n\tfi; \\\n  tar -xf elasticsearch.tar.gz \\\n  && ls -lah \\\n  && mv elasticsearch-$ES_VERSION /elasticsearch \\\n  && adduser -DH -s /sbin/nologin elasticsearch \\\n  && mkdir -p /elasticsearch/config/scripts /elasticsearch/plugins \\\n  && chown -R elasticsearch:elasticsearch /elasticsearch \\\n  && rm -rf /tmp/* \\\n  && apk del --purge .build-deps && rm elasticsearch.tar.gz\n\n# Add Elasticsearch to PATH\nENV PATH /elasticsearch/bin:$PATH\n\n# Set default working directory to /elasticsearch\nWORKDIR /elasticsearch\n\n# Set environment variables defaults\nENV NODE_NAME=\"\" \\\n    ES_TMPDIR=\"/elasticsearch/tmp\" \\\n    ES_JAVA_OPTS=\"-Xms512m -Xmx512m\" \\\n    CLUSTER_NAME=\"elasticsearch\" \\\n    NODE_MASTER=true \\\n    NODE_DATA=true \\\n    NODE_INGEST=true \\\n    HTTP_ENABLE=true \\\n    HTTP_CORS_ENABLE=true \\\n    HTTP_CORS_ALLOW_ORIGIN=* \\\n    DISCOVERY_SERVICE=\"\" \\\n    NUMBER_OF_MASTERS=1 \\\n    SSL_ENABLE=false \\\n    MODE=\"\" \\\n    NETWORK_HOST=_site_ \\\n    HTTP_CORS_ENABLE=true \\\n    MAX_LOCAL_STORAGE_NODES=1 \\\n    SHARD_ALLOCATION_AWARENESS=\"\" \\\n    SHARD_ALLOCATION_AWARENESS_ATTR=\"\" \\\n    MEMORY_LOCK=true \\\n    REPO_LOCATIONS=\"\" \\\n    KEY_PASS=\"\"\n\n# Install mapper-attachments (https://www.elastic.co/guide/en/elasticsearch/plugins/current/ingest-attachment.html)\nRUN ./bin/elasticsearch-plugin install --batch ingest-attachment\n\n# Install search-guard\nRUN ./bin/elasticsearch-plugin install --batch -b com.floragunn:search-guard-6:6.5.3-23.2\nRUN chmod +x -R plugins/search-guard-6/tools/*.sh\n\n# Add Elasticsearch configuration files\nADD config /elasticsearch/config\n\n# run.sh run Elasticsearch after changing ownership and some configuration\nCOPY run.sh /\nRUN mkdir /etc/service/elasticsearch\nRUN ln -s /run.sh /etc/service/elasticsearch/run\n\n# fsloader watcher for any configuration changes and restart Elasticsearch if necessary\nADD fsloader /fsloader\nRUN chmod +x /fsloader/*\nRUN mkdir /etc/service/fsloader\nRUN ln -s /fsloader/run_fsloader.sh /etc/service/fsloader/run\n\n# /elasticsearch/config/certs directory is used to mount SSL certificates\nRUN mkdir /elasticsearch/config/certs\nRUN chown elasticsearch:elasticsearch -R /elasticsearch/config/certs\n\n# yq and config-marger.sh is used to merge custom configuration files.\nCOPY yq /usr/bin/yq\nCOPY config-merger.sh /usr/bin/config-merger.sh\n\n# runit.sh run at Entrypoint\nCOPY runit.sh /runit.sh\n\n# Volume for Elasticsearch data\nVOLUME [\"/data\"]\n\n# Export HTTP & Transport\nEXPOSE 9200 9300\n\n# Run \"runit.sh\" on start\nENTRYPOINT [\"/runit.sh\"]\n"
}