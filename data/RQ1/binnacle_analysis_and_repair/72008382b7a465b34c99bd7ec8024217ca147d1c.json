{
  "startTime": 1674245721960,
  "endTime": 1674245722130,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 3,
        "columnEnd": 94
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.16\n\n# TODO Update Grafana to 2.0.2; consider using .deb installer?\nENV GRAFANA_VERSION 1.9.1\nENV INFLUXDB_VERSION 0.8.8\n\n# Prevent some error messages\nENV DEBIAN_FRONTEND noninteractive\n\n#RUN\t\techo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list\nRUN\t\tapt-get -y update && apt-get -y upgrade\n\n# ---------------- #\n#   Installation   #\n# ---------------- #\n\n# Install all prerequisites\nRUN apt-get -y --no-install-recommends install wget nginx-light curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Grafana to /src/grafana\nRUN mkdir -p src/grafana && cd src/grafana && \\\n\t\t\twget https://grafanarel.s3.amazonaws.com/grafana-${GRAFANA_VERSION}.tar.gz -O grafana.tar.gz && \\\n\t\t\ttar xzf grafana.tar.gz --strip-components=1 && rm grafana.tar.gz\n\n# Install InfluxDB\nRUN wget https://s3.amazonaws.com/influxdb/influxdb_${INFLUXDB_VERSION}_amd64.deb && \\\n\t\t\tdpkg -i influxdb_${INFLUXDB_VERSION}_amd64.deb && rm influxdb_${INFLUXDB_VERSION}_amd64.deb\n\n# ----------------- #\n#   Configuration   #\n# ----------------- #\n\n# Configure InfluxDB\nADD\t\tinfluxdb/config.toml /etc/influxdb/config.toml\nADD\t\tinfluxdb/run.sh /etc/service/influxdb/run\n# These two databases have to be created. These variables are used by set_influxdb.sh and set_grafana.sh\nENV\t\tPRE_CREATE_DB data grafana\nENV\t\tINFLUXDB_DATA_USER data\nENV\t\tINFLUXDB_DATA_PW data\nENV\t\tINFLUXDB_GRAFANA_USER grafana\nENV\t\tINFLUXDB_GRAFANA_PW grafana\nENV\t\tROOT_PW root\n\n# Configure Grafana\nADD\t\t./grafana/config.js /src/grafana/config.js\n#ADD\t./grafana/scripted.json /src/grafana/app/dashboards/default.json\n\nADD\t\t./configure.sh /configure.sh\nADD\t\t./set_grafana.sh /set_grafana.sh\nADD\t\t./set_influxdb.sh /set_influxdb.sh\nRUN \t/configure.sh\n\n# Configure nginx (that serves Grafana)\nADD\t\t./nginx/run.sh /etc/service/nginx/run\nADD\t\t./nginx/nginx.conf /etc/nginx/nginx.conf\n\n\n# -------------- #\n#   CloudWatch   #\n# -------------- #\n\n# Add a script run automatically at startup that creates /docker.env\n# so that the Cron job can access the AWS credentials env variables\nADD cloudwatch/env2file /etc/my_init.d/env2file\n\nRUN apt-get -y --no-install-recommends install python-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --global-option=\"--without-libyaml\" PyYAML\n# ^- libyaml seems to be unavailable here; cloudwatch dependency\nRUN pip install --no-cache-dir cloudwatch-to-graphite==0.5.0\n\nADD cloudwatch/leadbutt-cloudwatch.conf /etc/leadbutt-cloudwatch.conf\nADD cloudwatch/leadbutt-cloudwatch-cron.conf /etc/cron.d/leadbutt-cloudwatch\n# TODO(improvement) use crontab fragments in /etc/cron.d/ instead of using root's crontab\n#                     See for other tips: http://stackoverflow.com/questions/26822067/running-cron-python-jobs-within-docker\nRUN crontab /etc/cron.d/leadbutt-cloudwatch\n\n# Note: AWS cedentials should be provided via ENV vars; ex.:\n#     docker run -e AWS_ACCESS_KEY_ID=xxxx -e AWS_SECRET_ACCESS_KEY=yyyy ...\n\n# ----------- #\n#   Cleanup   #\n# ----------- #\n\nRUN\t\tapt-get autoremove -y wget curl && \\\n\t\t\tapt-get -y clean && \\\n\t\t\trm -rf /var/lib/apt/lists/* && rm /*.sh\n\n# ----------- #\n#   Volumes   #\n# ----------- #\n\nADD configure_influxdb_at_run.sh /etc/my_init.d/configure_influxdb_at_run.sh\nRUN cp -r /var/easydeploy/share /var/infuxdb_initial_data_backup\n# influxdb data dir:\nVOLUME [\"/var/easydeploy/share\"]\n\n# ---------------- #\n#   Expose Ports   #\n# ---------------- #\n\n# Grafana\nEXPOSE\t80\n\n# InfluxDB Admin server\nEXPOSE\t8083\n\n# InfluxDB HTTP API\nEXPOSE\t8086\n\n# InfluxDB HTTPS API\nEXPOSE\t8084\n\n# -------- #\n#   Run!   #\n# -------- #\nCMD /sbin/my_init\n"
}