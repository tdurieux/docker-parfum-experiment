{
  "startTime": 1674243699193,
  "endTime": 1674243699500,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 3
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.2\nMAINTAINER Movie Masher <support@moviemasher.com>\n\nENV HOME /root\n\n# install tools and helpers\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  apt-utils \\\n  build-essential \\\n  checkinstall \\\n  cmake \\\n  git \\\n  subversion \\\n  wget \\\n  yasm && rm -rf /var/lib/apt/lists/*;\n\n# install video libs and plugins\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libdirac-dev \\\n  libfontconfig-dev \\\n  libfribidi-dev \\\n  libgd-dev \\\n  libvpx-dev \\\n  libxvidcore-dev \\\n  frei0r-plugins-dev && rm -rf /var/lib/apt/lists/*;\n\n# install audio libs and apps\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libmp3lame-dev \\\n  libogg-dev \\\n  libopencore-amrnb-dev \\\n  libopencore-amrwb-dev \\\n  libsamplerate-dev \\\n  libsndfile-dev \\\n  libsox-dev \\\n  libspeex-dev \\\n  libtheora-dev \\\n  libvorbis-dev \\\n  sox \\\n  ecasound && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /data\n\nRUN \\\n  cd /data; \\\n  wget https://github.com/uclouvain/openjpeg/archive/version.2.1.tar.gz; \\\n  tar -xzvf version.2.1.tar.gz; rm version.2.1.tar.gz \\\n  cd /data/openjpeg-version.2.1; \\\n  cmake .; \\\n  make; \\\n  make install; \\\n  rm -R /data/openjpeg-version.2.1\n\n# latest nasm required for x264\nRUN \\\n  cd /data; \\\n  wget https://www.nasm.us/pub/nasm/releasebuilds/2.13.02/nasm-2.13.02.tar.gz; \\\n  tar -xzvf nasm-2.13.02.tar.gz; rm nasm-2.13.02.tar.gz \\\n  cd /data/nasm-2.13.02; \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n  make; \\\n  make install; \\\n  checkinstall --pkgname=nasm --pkgversion=\"2.13.02\" --backup=no --deldoc=yes --fstrans=no --default\n\n\n# pull, configure, make and install x264\nRUN \\\n  cd /data; \\\n  git clone git://git.videolan.org/x264.git; \\\n  cd /data/x264; \\\n  git checkout ba24899b0bf23345921da022f7a51e0c57dbe73d; \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-shared; \\\n  make; \\\n  make install; \\\n  rm -R /data/x264\n\n# pull, configure, make and install most recent ffmpeg\nRUN \\\n  cd /data; \\\n  wget https://ffmpeg.org/releases/ffmpeg-3.4.1.tar.gz; \\\n  tar -xzvf ffmpeg-3.4.1.tar.gz; rm ffmpeg-3.4.1.tar.gz \\\n  cd /data/ffmpeg-3.4.1; \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-frei0r \\\n    --enable-gpl \\\n    --enable-libfontconfig \\\n    --enable-libfreetype \\\n    --enable-libfribidi \\\n    --enable-libmp3lame \\\n    --enable-libopencore-amrnb \\\n    --enable-libopencore-amrwb \\\n    --enable-libopenjpeg \\\n    --enable-libspeex \\\n    --enable-libtheora \\\n    --enable-libvorbis \\\n    --enable-libvpx \\\n    --enable-libx264 \\\n    --enable-libxvid \\\n    --enable-postproc \\\n    --enable-pthreads \\\n    --enable-version3 \\\n    --enable-zlib \\\n    --extra-cflags=\"-I/usr/local/include/openjpeg\" \\\n  ; \\\n  make; \\\n  make install; \\\n  rm -R /data/ffmpeg-3.4.1;\n\n# needed for binaries to find libraries\nRUN ldconfig\n\n# install our production gems\nCOPY Gemfile /data/\nRUN \\\n  cd /data; \\\n  bundle install;\n\n# copy, make and install wav2png\nCOPY bin/wav2png/* /data/wav2png/\nRUN \\\n  cd /data/wav2png; \\\n  make; \\\n  mv wav2png /usr/bin/; \\\n  rm -R /data/wav2png\n\n# copy everything except what's caught by .dockerignore\nCOPY . /mnt/moviemasher.rb/\nWORKDIR /mnt/moviemasher.rb\n\n# install our entry point, with default command\nCMD [\"moviemasher\"]\nENTRYPOINT [\"config/docker/entrypoint.rb\"]\n\n# clean up apt and temporary directories\nRUN apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# expose all our configurable directories as potential mount points\nVOLUME /tmp/moviemasher/queue\nVOLUME /tmp/moviemasher/log\nVOLUME /tmp/moviemasher/render\nVOLUME /tmp/moviemasher/download\nVOLUME /tmp/moviemasher/error\n\n"
}