{
  "startTime": 1674240782774,
  "endTime": 1674240783198,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 0,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 44,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 26,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 0,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 44,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 26,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 0,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Start by creating a \"builder\" ### \n# We'll compile all needed packages in the builder, and then \n# we'll just get only what we need for the actual APP \n# Use an official Python runtime as a parent image \nFROM python:3.5-slim as builder \n\n## install the gcc compiler \n# (needed to install some of the python packages): \nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\ng++ \\\npkg-config \\\nmake \\\ncmake \\\n&& apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n## For now, install 'emacs', to be able to edit packages \n# in the builder: \nRUN apt-get update && apt-get upgrade -y && \\\n apt-get install --no-install-recommends -y emacs && apt-get clean -y && \\\napt-get autoclean -y && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n# Install dckstack from github (using git): \nRUN apt-get update -qq && apt-get install --no-install-recommends -y git-core && \\\napt-get clean -y && apt-get autoclean -y && apt-get autoremove -y && \\\ncd /tmp && \\\ngit clone https://github.com/pvelasco/dcmstack.git && \\\ncd dcmstack && \\\ngit checkout rf/py3 && \\\neasy_install ./ && \\\ncd / && rm -rf /tmp/dcmstack && rm -rf /var/lib/apt/lists/*;\n\n# Install dcm2niix from github: \n# Install also pigz-- it makes dcm2niix compress NIfTI files faster \nRUN apt-get update && apt-get upgrade -y && \\\n apt-get install --no-install-recommends -y pigz && \\\napt-get clean -y && apt-get autoclean -y && apt-get autoremove -y && \\\ncd /tmp && \\\ngit clone https://github.com/rordenlab/dcm2niix.git && \\\ncd dcm2niix && \\\ngit checkout tags/v1.0.20180328 && \\\nmkdir build && cd build && cmake -DBATCH_VERSION=ON .. && \\\nmake && make install && \\\ncd / && rm -rf /tmp/dcm2niix && rm -rf /var/lib/apt/lists/*;\n\n# Install heudiconv from github: \nRUN cd /tmp && \\  \ngit clone https://github.com/cbinyu/heudiconv.git && \\  \ncd heudiconv && \\  \ngit checkout master && \\\n pip install --no-cache-dir . && \\\ncd / && rm -rf /tmp/heudiconv\n\n# Get rid of some test folders in some of the Python packages: \n# (They are not needed for our APP): \n#RUN rm -fr /usr/local/lib/python3.5/site-packages/numpy \nRUN rm -fr /usr/local/lib/python3.5/site-packages/nibabel/nicom/tests && \\  \nrm -fr /usr/local/lib/python3.5/site-packages/nibabel/tests && \\  \nrm -fr /usr/local/lib/python3.5/site-packages/nibabel/gifti/tests \n############# \n### Now, get a new machine with only the essentials ### \n\nFROM python:3.5-slim as Application \n\nCOPY --from=builder ./usr/local/lib/python3.5/ /usr/local/lib/python3.5/ \nCOPY --from=builder ./usr/local/bin/ /usr/local/bin/ \nCOPY --from=builder ./usr/bin/pigz /usr/bin/ \n\n# Run app.py when the container launches: \n#ADD . /app \nENTRYPOINT [\"/usr/local/bin/heudiconv\"] \n\n"
}