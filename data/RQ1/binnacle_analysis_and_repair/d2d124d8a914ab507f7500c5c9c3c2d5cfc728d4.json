{
  "startTime": 1674234856526,
  "endTime": 1674234856587,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM omnetpp/distrobuild-base:ubuntu18.04-macos11-180705\nMAINTAINER Rudolf Hornig <rudi@omnetpp.org>\n\n# during docker image builds, the 'tools' directory in the context dir should contain the Windows and macOS toolchains (i.e. ./tools/170717/...)\nENV TOOLS_DIR /root/tools\nENV TOOLS_VERSION 180301\nENV OMNETPP_DIR /root/omnetpp\nENV PATH $PATH:$OMNETPP_DIR/bin\n\n# clone the directory\nWORKDIR /root\n\n# clone the repository either remotely or from a local repo in the context directory\n#RUN git clone -n https://github.com/omnetpp/omnetpp.git $OMNETPP_DIR\n# optionally you can use local bare repo, called 'omnetpp-repo' from the context dir\n# use 'git clone -n ../../../.git omnetpp-repo' to create it\nCOPY omnetpp-repo/ $OMNETPP_DIR\n\n# copy the windows/macOS tools into the build image\nCOPY tools/$TOOLS_VERSION $TOOLS_DIR/$TOOLS_VERSION\n# copy the windows platform JDK header files to a known location as they are needed for the cross compiler build on Windows\nCOPY tools/$TOOLS_VERSION/win64/jdk-include $TOOLS_DIR/jdk-include\n\n# update the eclipse build's MAVEN cache for faster builds\nWORKDIR $OMNETPP_DIR\n# fix ubuntu 18.04 invalid cert format. This may be removed if the base image is based on 18.04.1\n# see: https://gist.github.com/mikaelhg/527204e746984cf9a33f7910bb8b4cb6\nRUN /usr/bin/printf '\\xfe\\xed\\xfe\\xed\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\xe2\\x68\\x6e\\x45\\xfb\\x43\\xdf\\xa4\\xd9\\x92\\xdd\\x41\\xce\\xb6\\xb2\\x1c\\x63\\x30\\xd7\\x92' > /etc/ssl/certs/java/cacerts && \\\n    /var/lib/dpkg/info/ca-certificates-java.postinst configure\n\n# getting only the dependnecies does not work correctly (not everything is cached unfortunately, so a full build is required)\n#RUN git checkout 4f05766d && (cd $OMNETPP_DIR/ui && (mvn dependency:go-offline -Dwhat=omnetpp -fn || true)) ; rm -rf $OMNETPP_DIR\n\n# we dummy build the IDE and then delete the whole OMNeT++ source, so as a side effect the maven cache will be updated\nRUN git checkout 4f05766d && \\\n    cp configure.user.dist configure.user && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no && \\\n    make MODE=release ui -j$(nproc) && \\\n    releng/ide/java/build-ide-java && \\\n    rm -rf $OMNETPP_DIR\n\n# while running this image you should either map a local OMNeT++ repo from the host to the /root/omnetpp-repo dir\n# or specify a remote OMNeT++ repo URL in the OMNETPP_REPO environment variable.\n# default variables controlling the OMNeT++ build\n\nENV OMNETPP_REPO /root/omnetpp-repo\nENV GIT_VERSION origin/master\nENV WHAT omnetpp\nENV BUILD_CORE_DISTRO true\nENV BUILD_LINUX_DISTRO true\nENV BUILD_WIN64_DISTRO true\nENV BUILD_MACOSX_DISTRO true\nCMD git clone -n $OMNETPP_REPO $OMNETPP_DIR && cd $OMNETPP_DIR && git checkout -f $GIT_VERSION && releng/makedist\n"
}