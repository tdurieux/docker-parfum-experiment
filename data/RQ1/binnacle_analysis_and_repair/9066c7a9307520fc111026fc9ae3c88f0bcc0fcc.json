{
  "startTime": 1674248186788,
  "endTime": 1674248186947,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      apt-utils autoconf bison build-essential flex gawk gdb-multiarch git gperf help2man \\\n      libexpat-dev libncurses5-dev libtool-bin \\\n      python python-dev python-git python-pyelftools python-serial python-six python-yaml \\\n      python3 python3-dev python3-git python3-pyelftools python3-serial python3-six python3-yaml \\\n      software-properties-common texinfo unzip wget zip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp && \\\n    git clone https://github.com/rojer/fsync-stub && \\\n    cd /tmp/fsync-stub && ./install.sh && \\\n    rm -rf /tmp/fsync-stub\n\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository -y -u ppa:team-gcc-arm-embedded/ppa && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q gcc-arm-embedded && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nARG STM32CUBE_F2_DIR\nADD tmp/$STM32CUBE_F2_DIR /opt/$STM32CUBE_F2_DIR\nENV STM32CUBE_F2_PATH /opt/$STM32CUBE_F2_DIR\n\nARG STM32CUBE_F4_DIR\nADD tmp/$STM32CUBE_F4_DIR /opt/$STM32CUBE_F4_DIR\nENV STM32CUBE_F4_PATH /opt/$STM32CUBE_F4_DIR\n\nARG STM32CUBE_L4_DIR\nADD tmp/$STM32CUBE_L4_DIR /opt/$STM32CUBE_L4_DIR\nENV STM32CUBE_L4_PATH /opt/$STM32CUBE_L4_DIR\n\nARG STM32CUBE_F7_DIR\nADD tmp/$STM32CUBE_F7_DIR /opt/$STM32CUBE_F7_DIR\nENV STM32CUBE_F7_PATH /opt/$STM32CUBE_F7_DIR\n\nADD mgos_fw_meta.py mklfs mkspiffs mkspiffs8 /usr/local/bin/\nADD serve_core/ /opt/serve_core/\nRUN ln -s /opt/serve_core/serve_core.py /usr/local/bin/serve_core.py\n\nARG DOCKER_TAG\nENV MGOS_TARGET_GDB /usr/bin/arm-none-eabi-gdb\nENV MGOS_SDK_REVISION $DOCKER_TAG\nENV MGOS_SDK_BUILD_IMAGE docker.io/mgos/stm32-build:$DOCKER_TAG\n"
}