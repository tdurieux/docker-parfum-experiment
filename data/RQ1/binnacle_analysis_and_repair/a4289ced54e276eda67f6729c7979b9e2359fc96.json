{
  "startTime": 1674241623770,
  "endTime": 1674241623927,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start with docker-tangerine-support, which provides the core Tangerine apps.\nFROM tangerine/docker-tangerine-base-image:v3-node-base-with-wrapper\n\n# Never ask for confirmations\nENV DEBIAN_FRONTEND noninteractive\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install global node dependencies\nRUN npm install -g nodemon dat && npm cache clean --force;\n\n# T_USER1 is the username of the first user you will log in as. It is also the super user that has all permissions.\nENV T_USER1 user1\nENV T_USER1_PASSWORD password\n# T_ADMIN is the admin user for your database. Make sure to change this so the outside world does not have access.\nENV T_ADMIN admin\nENV T_PASS password\n# T_HOST_NAME is the URL without protocol (like http://) you will be accessing your Tangerine server at.\nENV T_HOST_NAME 127.0.0.1\n# If you have set up SSL on your server, you must change this to \"https\".\nENV T_PROTOCOL http\n# Set to \"development\" for live code reload of editor and client.\nENV T_RUN_MODE production\n\n# Install server.\nADD ./server/package.json /tangerine/server/package.json\nRUN cd /tangerine/server && \\\n    npm install && npm cache clean --force;\n\n# Install editor.\nADD ./editor/package.json /tangerine/editor/package.json\nRUN cd /tangerine/editor && \\\n    npm install && npm cache clean --force;\n\n# Install client\nADD client/pwa-tools/service-worker-generator/package.json /tangerine/client/pwa-tools/service-worker-generator/package.json\nADD client/pwa-tools/service-worker-generator/workbox-cli-config.js /tangerine/client/pwa-tools/service-worker-generator/workbox-cli-config.js\nADD client/package.json /tangerine/client/package.json\nADD client/pwa-tools/updater-app/package.json /tangerine/client/pwa-tools/updater-app/package.json\nADD client/pwa-tools/updater-app/bower.json /tangerine/client/pwa-tools/updater-app/bower.json\nRUN cd /tangerine/client/ && \\\n    npm install && \\\n    cd /tangerine/client/pwa-tools/service-worker-generator && \\\n    npm install && \\\n    cd /tangerine/client/pwa-tools/updater-app && \\\n    npm install && \\\n    ./node_modules/.bin/bower install --allow-root && npm cache clean --force;\n\n# Build editor\nADD editor /tangerine/editor\nRUN cd /tangerine/editor && ./node_modules/.bin/ng build --base-href \"./\"\nRUN cd /tangerine/editor && ./node_modules/.bin/workbox generate:sw\n\n\n# Build client\nADD client /tangerine/client\nRUN cd /tangerine/client && \\\n    ./node_modules/.bin/ng build --base-href \"./\" && \\\n    cd /tangerine/client/pwa-tools/updater-app && \\\n    npm run build && \\\n    cp logo.svg build/default/ && \\\n    cd /tangerine/client && \\\n    cp -r dist/tangerine-client builds/apk/www/shell && \\\n    cp -r pwa-tools/updater-app/build/default builds/pwa && \\\n    mkdir builds/pwa/release-uuid && \\\n    cp -r dist/tangerine-client builds/pwa/release-uuid/app\n\n# Add the rest of server.\nADD server /tangerine/server\n\n# Link up global commands.\nRUN cd /tangerine/server && \\\n    npm link\n\n\n#\n# Wrap up\n#\n\nADD ./ /tangerine\n\nRUN mkdir /csv\nRUN mkdir /groups\nRUN echo {} > /paid-worker-state.json\n\nEXPOSE 80\nENTRYPOINT cd /tangerine/server/ && npm start\n"
}