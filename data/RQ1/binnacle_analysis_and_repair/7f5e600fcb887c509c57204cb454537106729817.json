{
  "startTime": 1674236808496,
  "endTime": 1674236808747,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 22,
        "columnEnd": 177
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 182
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Dockerfile for installing the necessary dependencies for building Apache Pig.\n# See BUILDING.md.\n\nFROM ubuntu:bionic\n\n# Define working directory.\nWORKDIR /root\n\nRUN apt-get update\n\n# Install dependencies from packages\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    apt-get install --no-install-recommends -y \\\n            sudo \\\n            git subversion \\\n            byobu htop man unzip vim \\\n            cabal-install \\\n            curl wget \\\n            openjdk-8-jdk \\\n            ant ant-contrib ant-optional make maven \\\n            cmake gcc g++ protobuf-compiler \\\n            build-essential libtool \\\n            zlib1g-dev pkg-config libssl-dev \\\n            ubuntu-snappy ubuntu-snappy-cli libsnappy-dev \\\n            bzip2 libbz2-dev \\\n            libjansson-dev \\\n            fuse libfuse-dev \\\n            libcurl4-openssl-dev \\\n            python python2.7 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n# Avoid out of memory errors in builds\nENV MAVEN_OPTS -Xms256m -Xmx512m\n\n# Install findbugs\nRUN mkdir -p /opt/findbugs && \\\n    wget https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download \\\n         -O /opt/findbugs.tar.gz && \\\n    tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs && rm /opt/findbugs.tar.gz\nENV FINDBUGS_HOME /opt/findbugs\n\n# Install Forrest in /usr/local/apache-forrest\n# Download\nRUN cd /usr/local/ && wget \"https://www.apache.org/dyn/closer.lua?action=download&filename=/forrest/apache-forrest-0.9-sources.tar.gz\" -O \"apache-forrest-0.9-sources.tar.gz\"\nRUN cd /usr/local/ && wget \"https://www.apache.org/dyn/closer.lua?action=download&filename=/forrest/apache-forrest-0.9-dependencies.tar.gz\" -O \"apache-forrest-0.9-dependencies.tar.gz\"\n\n# Unpack Apache Forrest\nRUN cd /usr/local/ && \\\n    tar xzf apache-forrest-0.9-sources.tar.gz && \\\n    tar xzf apache-forrest-0.9-dependencies.tar.gz && \\\n    mv apache-forrest-0.9 apache-forrest && rm apache-forrest-0.9-sources.tar.gz\nRUN cd /usr/local/apache-forrest/main && ./build.sh\n\n# The solution for https://issues.apache.org/jira/browse/PIG-3906\nRUN mkdir -p /usr/local/apache-forrest/plugins       && chmod a+rwX -R /usr/local/apache-forrest/plugins\nRUN mkdir -p /usr/local/apache-forrest/build/plugins && chmod a+rwX -R /usr/local/apache-forrest/build/plugins\n\n# Configure where forrest can be found\nRUN echo 'forrest.home=/usr/local/apache-forrest' > build.properties\nENV FORREST_HOME /usr/local/apache-forrest\n\n# Add a welcome message and environment checks.\nADD build_env_checks.sh /root/build_env_checks.sh\nRUN chmod 755 /root/build_env_checks.sh\nADD configure-for-user.sh /root/configure-for-user.sh\nRUN chmod 755 /root/configure-for-user.sh\nRUN echo '~/build_env_checks.sh' >> /root/.bashrc\n"
}