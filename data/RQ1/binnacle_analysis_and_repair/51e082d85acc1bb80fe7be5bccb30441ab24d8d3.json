{
  "startTime": 1674240327509,
  "endTime": 1674240327777,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 191
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 198
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# -*- mode: dockerfile -*-\n# dockerfile to build libmxnet.so on GPU\n# Use cuda 9.0\n# FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nFROM nvidia/cuda:latest\nMAINTAINER SonayangZhang\n\nCOPY install/cpp.sh install/\nRUN chmod +x install/cpp.sh\nRUN install/cpp.sh\n\n# ENV BUILD_OPTS \"USE_CUDA=1 USE_CUDA_PATH=/usr/local/cuda USE_CUDNN=1\"\n# RUN git clone --recursive https://github.com/dmlc/mxnet && cd mxnet && \\\n#    make -j$(nproc) $BUILD_OPTS\n\n# OpenCV\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev \\\n        libjasper-dev \\\n        libavformat-dev \\\n        libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\nENV OPENCV_VERSION=\"3.4.1\"\nRUN wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \\\n&& unzip ${OPENCV_VERSION}.zip \\\n&& mkdir /opencv-${OPENCV_VERSION}/cmake_binary \\\n&& cd /opencv-${OPENCV_VERSION}/cmake_binary \\\n&& cmake -DBUILD_TIFF=ON \\\n  -DBUILD_opencv_java=OFF \\\n  -DWITH_CUDA=OFF \\\n  -DENABLE_AVX=ON \\\n  -DWITH_OPENGL=ON \\\n  -DWITH_OPENCL=ON \\\n  -DWITH_IPP=ON \\\n  -DWITH_TBB=ON \\\n  -DWITH_EIGEN=ON \\\n  -DWITH_V4L=ON \\\n  -DBUILD_TESTS=OFF \\\n  -DBUILD_PERF_TESTS=OFF \\\n  -DCMAKE_BUILD_TYPE=RELEASE \\\n  -DCMAKE_INSTALL_PREFIX=$(python2.7 -c \"import sys; print(sys.prefix)\") \\\n  -DPYTHON_EXECUTABLE=$(which python2.7) \\\n  -DPYTHON_INCLUDE_DIR=$(python2.7 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n  -DPYTHON_PACKAGES_PATH=$(python2.7 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") .. \\\n&& make install -j ${nproc} \\\n&& rm /${OPENCV_VERSION}.zip \\\n&& rm -r /opencv-${OPENCV_VERSION}\n\n# -*- mode: dockerfile -*-\n# part of the dockerfile to install the python binding\n\nCOPY install/python.sh install/\nRUN chmod +x install/python.sh\nRUN install/python.sh\n\nRUN pip2 install --no-cache-dir nose numpy==1.14.0 nose-timer requests==2.18.4 Pillow easydict pyyaml sacred visdom Cython matplotlib scikit-image tqdm mxnet-cu90 -i https://pypi.tuna.tsinghua.edu.cn/simple\nRUN pip3 install --no-cache-dir nose pylint numpy==1.14.0 nose-timer requests==2.18.4 Pillow easydict pyyaml sacred visdom Cython matplotlib scikit-image tqdm mxnet-cu90 -i https://pypi.tuna.tsinghua.edu.cn/simple\n\nRUN pip2 install --no-cache-dir opencv-python==3.4.1.15 -i https://pypi.tuna.tsinghua.edu.cn/simple\nRUN pip3 install --no-cache-dir opencv-python==3.4.1.15 -i https://pypi.tuna.tsinghua.edu.cn/simple\n\nRUN apt-get -y --no-install-recommends install python-tk && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install python3-tk && rm -rf /var/lib/apt/lists/*;\n\nENV PYTHONPATH=/mxnet/python\nCMD sh -c 'ln -s /dev/null /dev/raw1394'; bash\n"
}