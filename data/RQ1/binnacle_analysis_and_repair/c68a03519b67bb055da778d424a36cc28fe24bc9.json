{
  "startTime": 1674244201314,
  "endTime": 1674244201462,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#base image provides CUDA support on Ubuntu 16.04\nFROM nvidia/cuda:8.0-cudnn6-devel\n\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV NB_USER keras\nENV NB_UID 1000\n\n#package updates to support conda\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget git libhdf5-dev g++ graphviz && rm -rf /var/lib/apt/lists/*;\n\n#add on conda python and make sure it is in the path\nRUN mkdir -p $CONDA_DIR && \\\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet --output-document=miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    /bin/bash /miniconda.sh -f -b -p $CONDA_DIR && \\\n    rm miniconda.sh\n\n#setting up a user to run conda\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown keras $CONDA_DIR -R && \\\n    mkdir -p /src && \\\n    chown keras /src\n\n#all the code, including the ./var/data\nCOPY . /mailscanner\n\n#packages needed by our server\nRUN cd /mailscanner && make install\n\n\n#serve up REST endpoint\nUSER keras\nWORKDIR /mailscanner\nEXPOSE 5000\nCMD PORT=5000 make server"
}