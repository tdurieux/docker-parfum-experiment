{
  "startTime": 1674246710710,
  "endTime": 1674246711174,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 34,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile with:\n#   - Android build environment\n#   - python-for-android dependencies\n#\n# Build with:\n#     docker build --tag=p4apy2 --file Dockerfile.py2 .\n#\n# Run with:\n#     docker run -it --rm p4apy2 /bin/sh -c '. venv/bin/activate && p4a apk --help'\n#\n# Or for interactive shell:\n#     docker run -it --rm p4apy2\n#\n# Note:\n#     Use 'docker run' without '--rm' flag for keeping the container and use\n#     'docker commit <container hash> <new image>' to extend the original image\n\nFROM ubuntu:18.04\n\nENV ANDROID_HOME=\"/opt/android\"\n\n# configure locale\nRUN apt update -qq > /dev/null && apt install -qq --yes --no-install-recommends \\\n    locales && \\\n    locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\nRUN apt -y update -qq \\\n    && apt -y install -qq --no-install-recommends curl unzip ca-certificates \\\n    && apt -y autoremove && rm -rf /var/lib/apt/lists/*;\n\n# retry helper script, refs:\n# https://github.com/kivy/python-for-android/issues/1306\nENV RETRY=\"retry -t 3 --\"\nRUN curl -f https://raw.githubusercontent.com/kadwanev/retry/1.0.1/retry \\\n    --output /usr/local/bin/retry && chmod +x /usr/local/bin/retry\n\nENV ANDROID_NDK_HOME=\"${ANDROID_HOME}/android-ndk\"\nENV ANDROID_NDK_VERSION=\"17c\"\nENV ANDROID_NDK_HOME_V=\"${ANDROID_NDK_HOME}-r${ANDROID_NDK_VERSION}\"\n\n# get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_ARCHIVE=\"android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\"\nENV ANDROID_NDK_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_NDK_ARCHIVE}\"\n\n# download and install Android NDK\nRUN ${RETRY} curl --location --progress-bar --insecure \\\n        \"${ANDROID_NDK_DL_URL}\" \\\n        --output \"${ANDROID_NDK_ARCHIVE}\" \\\n    && mkdir --parents \"${ANDROID_NDK_HOME_V}\" \\\n    && unzip -q \"${ANDROID_NDK_ARCHIVE}\" -d \"${ANDROID_HOME}\" \\\n    && ln -sfn \"${ANDROID_NDK_HOME_V}\" \"${ANDROID_NDK_HOME}\" \\\n    && rm -rf \"${ANDROID_NDK_ARCHIVE}\"\n\n\nENV ANDROID_SDK_HOME=\"${ANDROID_HOME}/android-sdk\"\n\n# get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"3859397\"\nENV ANDROID_SDK_BUILD_TOOLS_VERSION=\"26.0.2\"\nENV ANDROID_SDK_TOOLS_ARCHIVE=\"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\"\nENV ANDROID_SDK_TOOLS_DL_URL=\"https://dl.google.com/android/repository/${ANDROID_SDK_TOOLS_ARCHIVE}\"\n\n# download and install Android SDK\nRUN ${RETRY} curl --location --progress-bar --insecure \\\n        \"${ANDROID_SDK_TOOLS_DL_URL}\" \\\n        --output \"${ANDROID_SDK_TOOLS_ARCHIVE}\" \\\n    && mkdir --parents \"${ANDROID_SDK_HOME}\" \\\n    && unzip -q \"${ANDROID_SDK_TOOLS_ARCHIVE}\" -d \"${ANDROID_SDK_HOME}\" \\\n    && rm -rf \"${ANDROID_SDK_TOOLS_ARCHIVE}\"\n\n# update Android SDK, install Android API, Build Tools...\nRUN mkdir --parents \"${ANDROID_SDK_HOME}/.android/\" \\\n    && echo '### User Sources for Android SDK Manager' \\\n        > \"${ANDROID_SDK_HOME}/.android/repositories.cfg\"\n\n# accept Android licenses (JDK necessary!)\nRUN ${RETRY} apt -y install -qq --no-install-recommends openjdk-8-jdk \\\n    && apt -y autoremove\nRUN yes | \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" > /dev/null\n\n# download platforms, API, build tools\nRUN \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-19\" && \\\n    \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"platforms;android-27\" && \\\n    \"${ANDROID_SDK_HOME}/tools/bin/sdkmanager\" \"build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}\" && \\\n    chmod +x \"${ANDROID_SDK_HOME}/tools/bin/avdmanager\"\n\n\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\n\n# install system dependencies\nRUN ${RETRY} apt -y install -qq --no-install-recommends \\\n        python virtualenv python-pip wget lbzip2 patch sudo \\\n    && apt -y autoremove\n\n# build dependencies\n# https://buildozer.readthedocs.io/en/latest/installation.html#android-on-ubuntu-16-04-64bit\nRUN dpkg --add-architecture i386 \\\n    && ${RETRY} apt -y update -qq \\\n    && ${RETRY} apt -y install -qq --no-install-recommends \\\n        build-essential ccache git python2.7 python2.7-dev \\\n        libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 \\\n        libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libidn11:i386 \\\n        zip zlib1g-dev zlib1g:i386 \\\n    && apt -y autoremove\n\n# specific recipes dependencies (e.g. libffi requires autoreconf binary)\nRUN ${RETRY} apt -y install -qq --no-install-recommends \\\n        libffi-dev autoconf automake cmake gettext libltdl-dev libtool pkg-config \\\n    && apt -y autoremove \\\n    && apt -y clean\n\n\n# prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n\n# with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n\nRUN pip install --no-cache-dir --upgrade cython==0.28.6\n\nWORKDIR ${WORK_DIR}\nCOPY --chown=user:user . ${WORK_DIR}\nRUN chown --recursive ${USER} ${ANDROID_SDK_HOME}\nUSER ${USER}\n\n# install python-for-android from current branch\nRUN virtualenv --python=python venv \\\n    && . venv/bin/activate \\\n    && pip install --no-cache-dir -e .\n"
}