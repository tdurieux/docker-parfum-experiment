{
  "startTime": 1674243079601,
  "endTime": 1674243079711,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 224
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 224
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=ubuntu:bionic\nFROM ${BASE_IMAGE}\nARG BASE_IMAGE\n\nRUN if [ \"$BASE_IMAGE\" = \"debian:stretch\" ]; then echo \"Enabling backports...\"; echo \"deb http://ftp.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/stretch-backports.list; fi\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git debhelper maven openjdk-8-jdk cmake libboost-test-dev libyaml-dev libjemalloc-dev flex bison clang-6.0 llvm-6.0-tools lld-6.0 zlib1g-dev libgmp-dev libmpfr-dev gcc z3 libz3-dev opam pkg-config curl && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN groupadd -g $GROUP_ID user && \\\n    useradd -m -u $USER_ID -s /bin/sh -g user user\n\nUSER $USER_ID:$GROUP_ID\n\nADD llvm-backend/src/main/native/llvm-backend/install-rust llvm-backend/src/main/native/llvm-backend/rust-checksum /home/user/\nRUN cd /home/user/ && ./install-rust\n\nADD k-distribution/src/main/scripts/bin/k-configure-opam-dev k-distribution/src/main/scripts/bin/k-configure-opam-common /home/user/.tmp-opam/bin/\nADD k-distribution/src/main/scripts/lib/opam  /home/user/.tmp-opam/lib/opam/\nRUN    cd /home/user \\\n    && ./.tmp-opam/bin/k-configure-opam-dev\n\nENV LC_ALL=C.UTF-8\nADD --chown=user:user haskell-backend/src/main/native/haskell-backend/stack.yaml /home/user/.tmp-haskell/\nADD --chown=user:user haskell-backend/src/main/native/haskell-backend/kore/package.yaml /home/user/.tmp-haskell/kore/\nRUN    cd /home/user/.tmp-haskell \\\n    && stack build --only-snapshot --test --bench --no-haddock-deps --haddock --library-profiling\n\nADD pom.xml /home/user/.tmp-maven/\nADD ktree/pom.xml /home/user/.tmp-maven/ktree/\nADD llvm-backend/pom.xml /home/user/.tmp-maven/llvm-backend/\nADD llvm-backend/src/main/native/llvm-backend/matching/pom.xml /home/user/.tmp-maven/llvm-backend/src/main/native/llvm-backend/matching/\nADD haskell-backend/pom.xml /home/user/.tmp-maven/haskell-backend/\nADD ocaml-backend/pom.xml /home/user/.tmp-maven/ocaml-backend/\nADD kernel/pom.xml /home/user/.tmp-maven/kernel/\nADD java-backend/pom.xml /home/user/.tmp-maven/java-backend/\nADD k-distribution/pom.xml /home/user/.tmp-maven/k-distribution/\nADD kore/pom.xml /home/user/.tmp-maven/kore/\nRUN    cd /home/user/.tmp-maven \\\n    && mvn dependency:go-offline\n"
}