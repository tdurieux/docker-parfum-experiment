{
  "startTime": 1674242964087,
  "endTime": 1674242964182,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12 AS build\nENV GOPATH=\"\"\nARG LDFLAGS\nCOPY go.sum .\nCOPY go.mod .\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o helm-convert -ldflags \"$LDFLAGS\" main.go\n\nFROM alpine AS helm\nENV HELM_VERSION=v2.13.0\nENV HELM_TMP_FILE=helm-${HELM_VERSION}-linux-amd64.tar.gz\nRUN wget https://storage.googleapis.com/kubernetes-helm/${HELM_TMP_FILE} && \\\n  wget https://storage.googleapis.com/kubernetes-helm/${HELM_TMP_FILE}.sha256\nRUN apk --no-cache add openssl\nRUN if [ \"$(openssl sha1 -sha256 ${HELM_TMP_FILE} | awk '{print $2}')\" != \"$(cat helm-${HELM_VERSION}-linux-amd64.tar.gz.sha256)\" ]; \\\n  then \\\n    echo \"SHA sum of ${HELM_TMP_FILE} does not match. Aborting.\"; \\\n    exit 1; \\\n  fi\nRUN tar -xvf helm-${HELM_VERSION}-linux-amd64.tar.gz && rm helm-${HELM_VERSION}-linux-amd64.tar.gz\n\nFROM alpine:3.8\nCOPY --from=helm /linux-amd64/helm /usr/local/bin/helm\nRUN helm init --skip-refresh --client-only && \\\n  mkdir -p /root/.helm/plugins/helm-convert\nCOPY plugin.yaml /root/.helm/plugins/helm-convert/plugin.yaml\nCOPY --from=build /go/helm-convert /root/.helm/plugins/helm-convert/helm-convert\nENTRYPOINT [\"helm\"]\n"
}