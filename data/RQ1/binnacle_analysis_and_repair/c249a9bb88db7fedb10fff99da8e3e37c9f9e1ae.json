{
  "startTime": 1674244569980,
  "endTime": 1674244570062,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 9,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gitpod/workspace-full:latest\n\n# Install PostgreSQL\nRUN sudo apt-get update \\\n && sudo apt-get install --no-install-recommends -y postgresql postgresql-contrib \\\n && sudo apt-get clean \\\n && sudo rm -rf /var/cache/apt/* /var/lib/apt/lists/* /tmp/*\n\n# Setup PostgreSQL server for user gitpod\nENV PATH=\"$PATH:/usr/lib/postgresql/10/bin\"\nENV PGDATA=\"/home/gitpod/.pg_ctl/data\"\nRUN mkdir -p ~/.pg_ctl/bin ~/.pg_ctl/data ~/.pg_ctl/sockets \\\n && initdb -D ~/.pg_ctl/data/ \\\n && printf \"#!/bin/bash\\npg_ctl -D ~/.pg_ctl/data/ -l ~/.pg_ctl/log -o \\\"-k ~/.pg_ctl/sockets\\\" start\\n\" > ~/.pg_ctl/bin/pg_start \\\n && printf \"#!/bin/bash\\npg_ctl -D ~/.pg_ctl/data/ -l ~/.pg_ctl/log -o \\\"-k ~/.pg_ctl/sockets\\\" stop\\n\" > ~/.pg_ctl/bin/pg_stop \\\n && chmod +x ~/.pg_ctl/bin/*\nENV PATH=\"$PATH:$HOME/.pg_ctl/bin\"\nENV DATABASE_URL=\"postgresql://gitpod@localhost\"\nENV PGHOSTADDR=\"127.0.0.1\"\nENV PGDATABASE=\"postgres\"\n\n# This is a bit of a hack. At the moment we have no means of starting background\n# tasks from a Dockerfile. This workaround checks, on each bashrc eval, if the\n# PostgreSQL server is running, and if not starts it.\nRUN printf \"\\n# Auto-start PostgreSQL server.\\n[[ \\$(pg_ctl status | grep PID) ]] || pg_start > /dev/null\\n\" >> ~/.bashrc\n"
}