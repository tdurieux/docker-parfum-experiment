{
  "startTime": 1674246351078,
  "endTime": 1674246351208,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the .NET Foundation under one or more agreements.\n# The .NET Foundation licenses this file to you under the MIT license.\n# See the LICENSE file in the project root for more information.\n#\n\n# Dockerfile that creates a container suitable to build dotnet-cli\nFROM ubuntu:16.04\n\n# Misc Dependencies for build\nRUN apt-get update && \\\n    apt-get -qqy --no-install-recommends install \\\n        curl \\\n        unzip \\\n        gettext \\\n        sudo && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# This could become a \"microsoft/coreclr\" image, since it just installs the dependencies for CoreCLR (and stdlib)\nRUN apt-get update && \\\n    apt-get -qqy --no-install-recommends install \\\n        libunwind8 \\\n        libkrb5-3 \\\n        libicu55 \\\n        liblttng-ust0 \\\n        libssl1.0.0 \\\n        zlib1g \\\n        libuuid1 \\\n        liblldb-3.6 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Build Prereqs\nRUN apt-get update && \\\n    apt-get -qqy --no-install-recommends install \\\n        debhelper \\\n        build-essential \\\n        devscripts \\\n        git \\\n        cmake \\\n        clang-3.5 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Use clang as c++ compiler\nRUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-3.5 100\nRUN update-alternatives --set c++ /usr/bin/clang++-3.5\n\n# Setup User to match Host User, and give superuser permissions\nARG USER_ID=0\nRUN useradd -m code_executor -u ${USER_ID} -g sudo\nRUN echo 'code_executor ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# With the User Change, we need to change permissions on these directories\nRUN chmod -R a+rwx /usr/local\nRUN chmod -R a+rwx /home\nRUN chmod -R 755 /usr/lib/sudo\n\n# Set user to the one we just created\nUSER ${USER_ID}\n\n# Set working directory\nWORKDIR /opt/code\n"
}