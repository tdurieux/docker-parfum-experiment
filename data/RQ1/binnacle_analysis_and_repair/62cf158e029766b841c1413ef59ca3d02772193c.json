{
  "startTime": 1674240798123,
  "endTime": 1674240798458,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 77,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 116,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:7.5-cudnn4-devel\n\nMAINTAINER Sai Soundararaj <saip@outlook.com>\n\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.8.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=1.0.3\nARG LASAGNE_VERSION=v0.1\nARG TORCH_VERSION=latest\nARG CAFFE_VERSION=master\n\n#RUN echo -e \"\\n**********************\\nNVIDIA Driver Version\\n**********************\\n\" && \\\n#\tcat /proc/driver/nvidia/version && \\\n#\techo -e \"\\n**********************\\nCUDA Version\\n**********************\\n\" && \\\n#\tnvcc -V && \\\n#\techo -e \"\\n\\nBuilding your Deep Learning Docker Image...\\n\"\n\n# Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tbc \\\n\t\tbuild-essential \\\n\t\tcmake \\\n\t\tcurl \\\n\t\tg++ \\\n\t\tgfortran \\\n\t\tgit \\\n\t\tlibffi-dev \\\n\t\tlibfreetype6-dev \\\n\t\tlibhdf5-dev \\\n\t\tlibjpeg-dev \\\n\t\tliblcms2-dev \\\n\t\tlibopenblas-dev \\\n\t\tliblapack-dev \\\n\t\tlibopenjpeg2 \\\n\t\tlibpng12-dev \\\n\t\tlibssl-dev \\\n\t\tlibtiff5-dev \\\n\t\tlibwebp-dev \\\n\t\tlibzmq3-dev \\\n\t\tnano \\\n\t\tpkg-config \\\n\t\tpython-dev \\\n\t\tsoftware-properties-common \\\n\t\tunzip \\\n\t\tvim \\\n\t\twget \\\n\t\tzlib1g-dev \\\n\t\t&& \\\n\tapt-get clean && \\\n\tapt-get autoremove && \\\n\trm -rf /var/lib/apt/lists/* && \\\n# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)\n\tupdate-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n\n# Install pip\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n\tpython get-pip.py && \\\n\trm get-pip.py\n\n# Add SNI support to Python\nRUN pip --no-cache-dir install \\\n\t\tpyopenssl \\\n\t\tndg-httpsclient \\\n\t\tpyasn1\n\n# Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tpython-numpy \\\n\t\tpython-scipy \\\n\t\tpython-nose \\\n\t\tpython-h5py \\\n\t\tpython-skimage \\\n\t\tpython-matplotlib \\\n\t\tpython-pandas \\\n\t\tpython-sklearn \\\n\t\tpython-sympy \\\n\t\t&& \\\n\tapt-get clean && \\\n\tapt-get autoremove && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Install other useful Python packages using pip\nRUN pip --no-cache-dir install --upgrade ipython && \\\n\tpip --no-cache-dir install \\\n\t\tCython \\\n\t\tipykernel \\\n\t\tjupyter \\\n\t\tpath.py \\\n\t\tPillow \\\n\t\tpygments \\\n\t\tsix \\\n\t\tsphinx \\\n\t\twheel \\\n\t\tzmq \\\n\t\t&& \\\n\tpython -m ipykernel.kernelspec\n\n\n# Install TensorFlow\nRUN pip --no-cache-dir install \\\n\thttps://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n\n\n# Install dependencies for Caffe\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tlibboost-all-dev \\\n\t\tlibgflags-dev \\\n\t\tlibgoogle-glog-dev \\\n\t\tlibhdf5-serial-dev \\\n\t\tlibleveldb-dev \\\n\t\tliblmdb-dev \\\n\t\tlibopencv-dev \\\n\t\tlibprotobuf-dev \\\n\t\tlibsnappy-dev \\\n\t\tprotobuf-compiler \\\n\t\t&& \\\n\tapt-get clean && \\\n\tapt-get autoremove && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Install Caffe\nRUN git clone -b ${CAFFE_VERSION} --depth 1 https://github.com/BVLC/caffe.git /root/caffe && \\\n\tcd /root/caffe && \\\n\tcat python/requirements.txt | xargs -n1 pip install && \\\n\tmkdir build && cd build && \\\n\tcmake -DUSE_CUDNN=1 -DBLAS=Open .. && \\\n\tmake -j\"$(nproc)\" all && \\\n\tmake install\n\n# Set up Caffe environment variables\nENV CAFFE_ROOT=/root/caffe\nENV PYCAFFE_ROOT=$CAFFE_ROOT/python\nENV PYTHONPATH=$PYCAFFE_ROOT:$PYTHONPATH \\\n\tPATH=$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\n\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n"
}