{
  "startTime": 1674244905357,
  "endTime": 1674244905548,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 64,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge as builder\n\n# Copied from https://github.com/AlexMasterov/dockerfiles/blob/master/alpine-libv8/7.4/Dockerfile\n# I can't thank @AlexMasterov++ enough! V8 is a pig to build :-(\n\nARG BUILD_COMMIT=c1ab94d375f10578b3d207eca8fe4fb35274efb7\nARG BUILDTOOLS_COMMIT=6fbda1b24c1893a893b17aa219b765b9e7c801d8\nARG ICU_COMMIT=07e7295d964399ee7bee16a3ac7ca5a053b2cf0a\nARG GTEST_COMMIT=879ac092fde0a19e1b3a61b2546b2a422b1528bc\nARG TRACE_EVENT_COMMIT=e31a1706337ccb9a658b37d29a018c81695c6518\nARG CLANG_COMMIT=3114fbc11f9644c54dd0a4cdbfa867bac50ff983\nARG JINJA2_COMMIT=b41863e42637544c2941b574c7877d3e1f663e25\nARG MARKUPSAFE_COMMIT=8f45f5cfa0009d2a70589bcda0349b8cb2b72783\nARG CATAPULT_COMMIT=b6cc5a6baf93cfa6feeb240eea75c454506b0c3c\n\nARG GN_SOURCE=https://www.dropbox.com/s/3ublwqh4h9dit9t/alpine-gn-80e00be.tar.gz\nARG V8_SOURCE=https://chromium.googlesource.com/v8/v8/+archive/7.4.51.tar.gz\n\nRUN set -x \\\n  && apk add --no-cache --update --virtual .v8-build-dependencies \\\n    at-spi2-core-dev \\\n    curl \\\n    g++ \\\n    gcc \\\n    glib-dev \\\n    icu-dev \\\n    linux-headers \\\n    make \\\n    ninja \\\n    python \\\n    tar \\\n    xz \\\n  && : \"---------- V8 ----------\" \\\n  && mkdir /v8 \\\n  && curl -fSL --connect-timeout 30 ${V8_SOURCE} | tar xmz -C /v8 \\\n  && : \"---------- Dependencies ----------\" \\\n  && DEPS=\" \\\n    chromium/buildtools.git@${BUILDTOOLS_COMMIT}:buildtools; \\\n    chromium/src/build.git@${BUILD_COMMIT}:build; \\\n    chromium/src/base/trace_event/common.git@${TRACE_EVENT_COMMIT}:base/trace_event/common; \\\n    chromium/src/tools/clang.git@${CLANG_COMMIT}:tools/clang; \\\n    chromium/src/third_party/jinja2.git@${JINJA2_COMMIT}:third_party/jinja2; \\\n    chromium/src/third_party/markupsafe.git@${MARKUPSAFE_COMMIT}:third_party/markupsafe; \\\n    chromium/deps/icu.git@${ICU_COMMIT}:third_party/icu; \\\n    external/gyp.git@${GYP_COMMIT}:tools/gyp; \\\n    external/github.com/google/googletest.git@${GTEST_COMMIT}:third_party/googletest/src \\\n  \" \\\n  && while [ \"${DEPS}\" ]; do \\\n    dep=\"${DEPS%%;*}\" \\\n    link=\"${dep%%:*}\" \\\n    url=\"${link%%@*}\" url=\"${url#\"${url%%[![:space:]]*}\"}\" \\\n    hash=\"${link#*@}\" \\\n    dir=\"${dep#*:}\"; \\\n    [ -n \"${dep}\" ] \\\n      && dep_url=\"https://chromium.googlesource.com/${url}/+archive/${hash}.tar.gz\" \\\n      && dep_dir=\"/v8/${dir}\" \\\n      && mkdir -p ${dep_dir} \\\n      && curl -fSL --connect-timeout 30 ${dep_url} | tar xmz -C ${dep_dir} \\\n      & [ \"${DEPS}\" = \"${dep}\" ] && DEPS='' || DEPS=\"${DEPS#*;}\"; \\\n    done; \\\n    wait \\\n  && : \"---------- Downloads the current stable Linux sysroot ----------\" \\\n  && /v8/build/linux/sysroot_scripts/install-sysroot.py --arch=amd64 \\\n  && : \"---------- Proper GN ----------\" \\\n  && apk add --no-cache --virtual .gn-runtime-dependencies \\\n    libevent \\\n    libexecinfo \\\n    libstdc++ \\\n  && curl -fSL --connect-timeout 30 ${GN_SOURCE} | tar xmz -C /v8/buildtools/linux64/ \\\n  && : \"---------- Build instructions ----------\" \\\n  && cd /v8 \\\n  && ./tools/dev/v8gen.py \\\n    x64.release \\\n    -- \\\n      binutils_path=\\\"/usr/bin\\\" \\\n      target_os=\\\"linux\\\" \\\n      target_cpu=\\\"x64\\\" \\\n      v8_target_cpu=\\\"x64\\\" \\\n      v8_use_external_startup_data=false \\\n      is_official_build=true \\\n      is_component_build=true \\\n      is_cfi=false \\\n      is_clang=false \\\n      use_custom_libcxx=false \\\n      use_sysroot=false \\\n      use_gold=false \\\n      use_allocator_shim=false \\\n      treat_warnings_as_errors=false \\\n      symbol_level=0 \\\n  && : \"---------- Build ----------\" \\\n  && ninja d8 -C out.gn/x64.release/ -j $(getconf _NPROCESSORS_ONLN)\n\nRUN echo -e \"#!/bin/sh -e\\n\\\n\\n\\\n/bin/cat - > /tmp/code.js\\n\\\n\\n\\\nexec /v8/out.gn/x64.release/d8 /tmp/code.js \\\"\\$@\\\"\" > /usr/bin/javascript \\\n && chmod +x /usr/bin/javascript\n\nFROM scratch\n\nCOPY --from=0 /bin/cat                                      \\\n              /bin/sh                                       /bin/\nCOPY --from=0 /lib/ld-musl-x86_64.so.1                      /lib/\nCOPY --from=0 /usr/bin/javascript                           /usr/bin/\nCOPY --from=0 /usr/lib/libgcc_s.so.1                        \\\n              /usr/lib/libstdc++.so.6                       /usr/lib/\nCOPY --from=0 /v8/out.gn/x64.release/d8                     /v8/out.gn/x64.release/\nCOPY --from=0 /v8/out.gn/x64.release/./libicui18n.so        \\\n              /v8/out.gn/x64.release/./libicuuc.so          \\\n              /v8/out.gn/x64.release/./libv8.so             \\\n              /v8/out.gn/x64.release/./libv8_libbase.so     \\\n              /v8/out.gn/x64.release/./libv8_libplatform.so /v8/out.gn/x64.release/./\n\nENTRYPOINT [\"/v8/out.gn/x64.release/d8\", \"-v\"]\n"
}