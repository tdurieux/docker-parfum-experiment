{
  "startTime": 1674241698598,
  "endTime": 1674241698944,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable-slim\n\nENV PYTHONUNBUFFERED=1 DOCKER=1 DEBIAN_FRONTEND=noninteractive\n\n# Add support for apt-* packages caching through \"apt-cacher-ng\"\nARG APTPROXY\nRUN bash -c 'if [ -n \"$APTPROXY\" ]; then echo \"Acquire::HTTP::Proxy \\\"http://$APTPROXY\\\";\" > /etc/apt/apt.conf.d/01proxy; fi'\n\n## Install dependencies\nRUN apt-get update \\\n    && apt-get --no-install-recommends install -y vim-tiny \\\n\n    # Install latest NodeJS + NPM\n    && apt-get --no-install-recommends install -y curl ca-certificates apt-transport-https lsb-release \\\n    && curl -f -sSL https://deb.nodesource.com/setup_7.x | bash - \\\n    && apt-get --no-install-recommends install -y nodejs \\\n\n    # Install global NPM packages\n    && npm install -g webpack \\\n\n    # Python system packages\n    && apt-get --no-install-recommends install -y python python-pip python-dev \\\n    # PIP build dependencies\n    gcc libssl-dev \\\n\n    && pip install --no-cache-dir -U pip 3to2 \\\n\n    # System stuff\n    && apt-get --no-install-recommends install -y nginx-extras \\\n\n    # Cleanup after installation\n    && npm cache clear --force \\\n    && rm -rf /tmp/npm-* \\\n    && apt-get clean -y \\\n    && apt-get autoclean -y \\\n    && apt-get autoremove -y \\\n    && rm -fr /var/lib/apt/lists/* \\\n\n    # Create basic project structure\n    && mkdir -p /app/project/assets/ /app/logs /app/tmp/\n\nWORKDIR /app/\n\n# Add packages.json (NPM) & requirements.txt (PIP) files to the image\nADD project/requirements.txt /app/requirements.txt\nADD project/assets/package.json /app/project/assets/package.json\n\n# Install NPM & Python dependencies\nRUN pip install -U -r /app/requirements.txt --no-cache-dir\nRUN cd /app/project/assets/ \\\n    && npm install \\\n    && npm cache clear --force\n\nADD . /app/\n\nRUN cd /app/project/assets/ \\\n    && npm run build\nRUN python manage.py collectstatic --noinput -v0\n\nADD docker/production/nginx/nginx.conf /etc/nginx/sites-enabled/project\nADD docker/production/nginx/conf.d/* /etc/nginx/conf.d/\n\nEXPOSE 80"
}