{
  "startTime": 1674234858758,
  "endTime": 1674234858926,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\nMAINTAINER Ryan Baumann <ryan.baumann@gmail.com>\n\n# Install the Ubuntu packages.\n# The Duke mirror is just added here as backup for occasional main flakiness.\nRUN echo deb http://archive.linux.duke.edu/ubuntu/ xenial main >> /etc/apt/sources.list\nRUN echo deb-src http://archive.linux.duke.edu/ubuntu/ xenial main >> /etc/apt/sources.list\n# Install Ruby, RubyGems, Bundler, MySQL, Git, wget, svn, java\n# openjdk-7-jre\n# Install ruby-build build deps\n# Install oraclejdk8\nRUN which debconf-set-selections\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y software-properties-common python-software-properties && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y mysql-server git wget subversion curl \\\n  autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev \\\n  oracle-java8-installer oracle-java8-set-default && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale.\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nWORKDIR /root\n\n# Install rbenv/ruby-build\nRUN git clone git://github.com/sstephenson/rbenv.git .rbenv\nENV PATH /root/.rbenv/bin:/root/.rbenv/shims:$PATH\nRUN echo 'eval \"$(rbenv init -)\"' > /etc/profile.d/rbenv.sh\nRUN chmod +x /etc/profile.d/rbenv.sh\nRUN git clone git://github.com/sstephenson/ruby-build.git #.rbenv/plugins/ruby-build\nRUN cd ruby-build; ./install.sh\nRUN git clone https://github.com/rbenv/rbenv-vars.git $(rbenv root)/plugins/rbenv-vars\n\n# Clone the repository\n# RUN git clone https://github.com/sosol/sosol.git\n# RUN cd sosol; git branch --track rails-3 origin/rails-3\n# RUN cd sosol; git checkout rails-3\n\n# Copy in secret files\n# ADD development_secret.rb /root/sosol/config/environments/development_secret.rb\n# ADD test_secret.rb /root/sosol/config/environments/test_secret.rb\n# ADD production_secret.rb /root/sosol/config/environments/production_secret.rb\n\nADD . /root/sosol/\nWORKDIR /root/sosol\n# Configure MySQL\n# RUN java -version\nRUN rbenv install && rbenv rehash && gem install bundler && rbenv rehash && bundle install && jruby -v && java -version\n# RUN jruby -v\n# RUN which bundle\nENV RAILS_ENV test\nRUN ./script/setup\nRUN ls -a\n\n# Finally, start the application\nEXPOSE 3000\nCMD service mysql restart; cd sosol; ./script/server\n"
}