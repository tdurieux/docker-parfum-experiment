{
  "startTime": 1674240948376,
  "endTime": 1674240948621,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable-slim as glibc-base\n\nARG GLIBC_VERSION=2.28\nARG GLIBC_PREFIX=/usr/glibc\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  curl build-essential gawk bison python3 texinfo gettext \\\n  && \\\n  cd /root && \\\n  curl -f -SL https://ftp.gnu.org/gnu/glibc/glibc-${GLIBC_VERSION}.tar.gz | tar xzf - && \\\n  mkdir -p /root/build && cd /root/build && \\\n  ../glibc-${GLIBC_VERSION}/configure \\\n    --prefix=${GLIBC_PREFIX} \\\n    --libdir=\"${GLIBC_PREFIX}/lib\" \\\n    --libexecdir=\"${GLIBC_PREFIX}/lib\" \\\n    --enable-multi-arch \\\n    --enable-stack-protector=strong \\\n  && \\\n  make -j`nproc` && make DESTDIR=/root/dest install && \\\n  cd /root && rm -rf build glibc-${GLIBC_VERSION} && \\\n  cd /root/dest${GLIBC_PREFIX} && \\\n  ( strip bin/* sbin/* lib/* || true ) && \\\n  echo \"/usr/local/lib\" > /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && \\\n  echo \"${GLIBC_PREFIX}/lib\" >> /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && \\\n  echo \"/usr/lib\" >> /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && \\\n  echo \"/lib\" >> /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /root/dest${GLIBC_PREFIX} && \\\n  rm -rf etc/rpc var include share bin sbin/[^l]*  \\\n\tlib/*.o lib/*.a lib/audit lib/gconv lib/getconf\n\n#sbin/[^l]*\n\nFROM alpine:3.8 as liberica\n\nARG GLIBC_PREFIX=/usr/glibc\n\nENV  LANG=en_US.UTF-8 \\\n     LANGUAGE=en_US:en\n#\t LC_ALL=en_US.UTF-8\n\nARG LIBERICA_ROOT=/usr/lib/jvm/jre-10.0.1-bellsoft\nARG LIBERICA_VERSION=10.0.1\nARG LIBERICA_VARIANT=jre\n\nCOPY --from=glibc-base /root/dest/ /\n\nRUN LIBERICA_ARCH='' && LIBERICA_ARCH_TAG='' && \\\n  case `uname -m` in \\\n        x86_64) \\\n            LIBERICA_ARCH=\"amd64\" \\\n            ;; \\\n        aarch64) \\\n            LIBERICA_ARCH=\"aarch64\" \\\n            ;; \\\n        armv[67]l) \\\n            LIBERICA_ARCH=\"arm32-vfp-hflt\"; \\\n            ;; \\\n        *) \\\n            LIBERICA_ARCH=`uname -m` \\\n            ;; \\\n  esac  && \\\n  ln -s ${GLIBC_PREFIX}/lib/ld-*.so* /lib && \\\n  ln -s ${GLIBC_PREFIX}/etc/ld.so.cache /etc && \\\n  if [ \"$LIBERICA_ARCH\" = \"amd64\" ]; then ln -s /lib /lib64; fi && \\\n  ${GLIBC_PREFIX}/sbin/ldconfig && \\\n  \\\n  mkdir -p $LIBERICA_ROOT && \\\n  mkdir -p /tmp/java && \\\n  wget -O - \"https://github.com/bell-sw/Liberica/releases/download/${LIBERICA_VERSION}/bellsoft-${LIBERICA_VARIANT}${LIBERICA_VERSION}-linux-${LIBERICA_ARCH}.tar.gz\" | \\\n    tar xzf - -C /tmp/java && \\\n  find \"/tmp/java/${LIBERICA_VARIANT}-${LIBERICA_VERSION}\" -maxdepth 1 -mindepth 1 -exec mv \"{}\" \"${LIBERICA_ROOT}/\" \\; && \\\n  rm -rf /tmp/java\n\nENV JAVA_HOME=${LIBERICA_ROOT} \\\n\tPATH=${LIBERICA_ROOT}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n"
}