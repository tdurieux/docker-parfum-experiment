{
  "startTime": 1674242877647,
  "endTime": 1674242877709,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 19,
        "columnEnd": 57
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 20,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM node:10-alpine\n\nENV NPM_CONFIG_LOGLEVEL error\n\n# Update package list & install.\nRUN apk add --no-cache nginx\n\n# Install global node packages.\nRUN npm install -g pm2 && npm cache clean --force;\n\n# Copy nginx config.\nCOPY e2e/testenv/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY e2e/testenv/nginx/web-console.conf /etc/nginx/web-console.conf\n\nWORKDIR /opt/web-console\n\n# Install node modules for frontend and backend modules.\nCOPY backend/package*.json backend/\nRUN ( cd backend && npm install --no-optional --production) && npm cache clean --force;\n\nCOPY frontend/package*.json frontend/\nRUN ( cd frontend && npm install --no-optional) && npm cache clean --force;\n\n# Copy source.\nCOPY backend backend\nCOPY frontend frontend\n\nRUN (cd frontend && npm run build)\n\nEXPOSE 9001\n\nWORKDIR /opt/web-console/backend\n\nCMD nginx && pm2-runtime index.js -n web-console-backend\n"
}