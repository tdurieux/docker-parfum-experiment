{
  "startTime": 1674250532558,
  "endTime": 1674250532889,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 76,
        "columnStart": 21,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04.2\nMAINTAINER Konstantin Weitz <konstantin.weitz@gmail.com>\n\nRUN apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n      binutils \\\n      default-jre \\\n      git \\\n      g++ \\\n      haskell-platform \\\n      make \\\n      python \\\n      python-pip \\\n      python-yaml \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\n# install z3\nRUN git clone https://github.com/Z3Prover/z3.git\nRUN cd z3; python scripts/mk_make.py\nRUN cd z3/build; make; make install\nRUN rm -r z3\n\n# install racket\nRUN wget https://mirror.racket-lang.org/installers/6.1.1/racket-6.1.1-x86_64-linux-ubuntu-precise.sh -O install.sh\nRUN chmod +x install.sh\nRUN ./install.sh --in-place --create-links /usr --dest /usr/racket\nRUN rm install.sh\n\n# install rosette\nRUN git clone https://github.com/emina/rosette.git && \\\n    cd rosette; git checkout db80315cb37df8e32766f6436c9baad9544540a4 && \\\n                raco link rosette && \\\n                raco setup -l rosette && \\\n                ln -s /usr/bin/z3 bin/\n\n# install some haskell packets that we think will be useful\nRUN cabal update; \\\n    cabal install --force-reinstalls \\\n      array \\\n      base \\\n      bytestring \\\n      containers \\\n      filepath \\\n      MissingH \\\n      parsec \\\n      QuickCheck \\\n      regex-compat \\\n      split \\\n      syb \\\n      sexp \\\n      text-format-simple\n\nRUN apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n      binutils \\\n      camlp5 \\\n      curl \\\n      libpcre-ocaml-dev \\\n      libpcre3-dev \\\n      libreadline-dev \\\n      libz-dev \\\n      make \\\n      pkg-config \\\n      vim && rm -rf /var/lib/apt/lists/*;\n\n# install coq\nRUN curl -f -O https://coq.inria.fr/distrib/V8.5beta2/files/coq-8.5beta2.tar.gz\nRUN tar -xvf coq-8.5beta2.tar.gz && rm coq-8.5beta2.tar.gz\nRUN cd coq-8.5beta2; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  -bindir /usr/local/bin \\\n  -libdir /usr/local/lib/coq \\\n  -configdir /etc/xdg/coq \\\n  -datadir /usr/local/share/coq \\\n  -mandir /usr/local/share/man \\\n  -docdir /usr/local/share/doc/coq \\\n  -emacs /usr/local/share/emacs/site-lisp \\\n  -coqdocdir /usr/local/share/texmf/tex/latex/misc\nRUN cd coq-8.5beta2; make -j4; make install\n\n# install sshd\nRUN apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n      openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\nRUN echo 'Host *' >> /root/.ssh/config\nRUN echo '    StrictHostKeyChecking no' >> /root/.ssh/config\n\n# install bagpipe haskell parser\nADD src/bagpipe/hs /bagpipe/src/bagpipe/hs\nRUN cd /bagpipe/src/bagpipe/hs/; cabal update; cabal install\n\n# install bagpipe coq proof\nADD src/bagpipe/coq/Main /bagpipe/src/bagpipe/coq/Main\nADD src/bagpipe/coq/Makefile /bagpipe/src/bagpipe/coq/Makefile\nRUN cd /bagpipe/src/bagpipe/coq/; make clean; make -j4\n\n# install bagpipe coq extraction\nADD src/bagpipe/coq/Test /bagpipe/src/bagpipe/coq/Test\nRUN cd /bagpipe/src/bagpipe/coq/; make -j4 test\n\n# install bagpipe\nADD src/bagpipe/racket /bagpipe/src/bagpipe/racket\nRUN cp /bagpipe/src/bagpipe/coq/build/bgpv.rkt /bagpipe/src/bagpipe/racket/main/\nRUN find /bagpipe/src/bagpipe/racket -name compiled -type d -exec rm -r {} +\nRUN raco make /bagpipe/src/bagpipe/racket/main/bagpipe.rkt\nENV BAGPIPE /bagpipe\n\n# install scripts\nADD src/bagpipe/python /bagpipe/src/bagpipe/python\nRUN cp /bagpipe/src/bagpipe/python/bagpipe /usr/bin/\n\nENTRYPOINT [\"bagpipe\"]\n"
}