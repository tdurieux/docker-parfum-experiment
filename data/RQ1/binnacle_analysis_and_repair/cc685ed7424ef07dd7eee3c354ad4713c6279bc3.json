{
  "startTime": 1674236115610,
  "endTime": 1674236116323,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as builder\n\nCOPY sources.list /etc/apt/sources.list\n\nRUN echo 'APT::Install-Recommends 0;' >> /etc/apt/apt.conf.d/01norecommends \\\n  && echo 'APT::Install-Suggests 0;' >> /etc/apt/apt.conf.d/01norecommends \\\n  && apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y sudo wget curl net-tools ca-certificates unzip doxygen graphviz && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main\" >> /etc/apt/sources.list.d/llvm.list \\\n  && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - \\\n  && apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y git-core automake autoconf libtool build-essential pkg-config libtool \\\n     mpi-default-dev libicu-dev python-dev python3-dev libbz2-dev zlib1g-dev libssl-dev libgmp-dev \\\n     clang-4.0 lldb-4.0 lld-4.0 llvm-4.0-dev libclang-4.0-dev ninja-build \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-4.0/bin/clang 400 \\\n  && update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-4.0/bin/clang++ 400\n\nCOPY libs/cmake-3.9.6-Linux-x86_64.sh cmake-3.9.6-Linux-x86_64.sh\nRUN bash cmake-3.9.6-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license \\\n    && rm cmake-3.9.6-Linux-x86_64.sh\n\nENV CC clang\nENV CXX clang++\n\nCOPY libs/ ./\n\nRUN tar -xjf boost_1_66_0.tar.bz2 \\ \n    && cd boost_1_66_0 \\\n    && ./bootstrap.sh --prefix=/usr/local \\\n    && echo 'using clang : 4.0 : clang++-4.0 ;' >> project-config.jam \\\n    && ./b2 -d0 -j$(nproc) --with-thread --with-date_time --with-system --with-filesystem --with-program_options \\\n       --with-signals --with-serialization --with-chrono --with-test --with-context --with-locale --with-coroutine --with-iostreams toolset=clang link=static install \\\n    && cd .. && rm -rf boost_1_66_0 && rm boost_1_66_0.tar.bz2\n\nRUN unzip llvm.zip \\\n    && cd llvm \\\n    && cmake -H. -Bbuild -GNinja -DCMAKE_INSTALL_PREFIX=/opt/wasm -DLLVM_TARGETS_TO_BUILD= -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly -DCMAKE_BUILD_TYPE=Release  \\\n    && cmake --build build --target install \\\n    && cd .. && rm -rf llvm\n\nRUN unzip secp256k1-zkp.zip \\\n    && cd secp256k1-zkp \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && make -j$(nproc) install \\\n    && cd .. && rm -rf secp256k1-zkp\n\nRUN tar -xzf mongo-c-driver-1.9.3.tar.gz \\\n    && cd mongo-c-driver-1.9.3 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n    && make -j$(nproc) install \\\n    && cd .. && rm -rf mongo-c-driver-1.9.3 && rm mongo-c-driver-1.9.3.tar.gz\n\nRUN tar -xzf mongo-cxx-driver-r3.2.0.tar.gz \\\n    && cd mongo-cxx-driver-r3.2.0 \\\n    && cmake -H. -Bbuild -G Ninja -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=/usr/local \\\n    && cmake --build build --target install && rm mongo-cxx-driver-r3.2.0.tar.gz\n\nRUN git clone -b dawn-v3.0.0 --depth 1 https://github.com/EOSIO/eos.git --recursive \\\n    && cd eos \\\n    && cmake -H. -B\"/tmp/build\" -GNinja -DCMAKE_BUILD_TYPE=Release -DWASM_ROOT=/opt/wasm -DCMAKE_CXX_COMPILER=clang++ \\\n       -DCMAKE_C_COMPILER=clang -DCMAKE_INSTALL_PREFIX=/tmp/build  -DSecp256k1_ROOT_DIR=/usr/local \\\n    && cmake --build /tmp/build --target install\nRUN mkdir -p /opt/eosio/ \\\n    && cp -r /tmp/build/share /opt/eosio/share \\\n    && cp -r /tmp/build/bin /opt/eosio/bin \\\n    && cp -r /tmp/build/contracts /contracts \\\n    && rm -rf /tmp/build && rm -rf /eos\n\nFROM ubuntu:16.04\n\nCOPY sources.list /etc/apt/sources.list\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install openssl && rm -rf /var/lib/apt/lists/*\nCOPY --from=builder /usr/local/lib/* /usr/local/lib/\nCOPY --from=builder /opt/eosio /opt/eosio\nCOPY --from=builder /contracts /contracts\nCOPY nodeos.sh /opt/eosio/bin/nodeos.sh\nENV EOSIO_ROOT=/opt/eosio\nRUN chmod +x /opt/eosio/bin/nodeos.sh\nRUN sed -i.bak 's/-I $filePath/-I $filePath -I $filePath\\/../g' /opt/eosio/bin/eosiocpp\nENV LD_LIBRARY_PATH /usr/local/lib\nVOLUME /opt/eosio/bin/data-dir\nVOLUME /opt/eosio/bin/config-dir\nVOLUME /opt/eosio/bin/contracts\nENV PATH /opt/eosio/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nWORKDIR /opt/eosio/bin"
}