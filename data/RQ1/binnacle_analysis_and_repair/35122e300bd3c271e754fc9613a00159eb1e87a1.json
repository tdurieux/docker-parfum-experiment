{
  "startTime": 1674234083154,
  "endTime": 1674234083309,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM heroku/cedar:14\n\n# Internally, we arbitrarily use port 3000\nENV PORT 3000\n\n# Which version of Python?\nENV PYTHON_VERSION python-2.7.10\n\n# Add Python binaries to path.\nENV PATH /app/.heroku/python/bin/:$PATH\n\n# Create some needed directories\nRUN mkdir -p /app/.heroku/python /app/.profile.d\nWORKDIR /app/user\n\n# `init` is kept out of /app so it won't be duplicated on Heroku\n# Heroku already has a mechanism for running .profile.d scripts,\n# so this is just for local parity\nCOPY ./init /usr/bin/init\n\n# Install Python\nRUN curl -f -s https://lang-python.s3.amazonaws.com/cedar-14/runtimes/$PYTHON_VERSION.tar.gz | tar zx -C /app/.heroku/python\n\n# Install Pip & Setuptools\nRUN curl -f -s https://bootstrap.pypa.io/get-pip.py | /app/.heroku/python/bin/python\n\n# Export the Python environment variables in .profile.d\nRUN echo 'export PATH=/app/usr/local/include:/app/usr/local/bin:$HOME/.heroku/python/bin:$PATH PYTHONUNBUFFERED=true PYTHONHOME=/app/.heroku/python LIBRARY_PATH=/app/.heroku/vendor/lib:/app/.heroku/python/lib:$LIBRARY_PATH LD_LIBRARY_PATH=/app/.heroku/vendor/lib:/app/.heroku/python/lib:$LD_LIBRARY_PATH LANG=${LANG:-en_US.UTF-8} PYTHONHASHSEED=${PYTHONHASHSEED:-random} PYTHONPATH=/app/user/airflow_login:$PYTHONPATH:/app/user' > /app/.profile.d/python.sh\nRUN chmod +x /app/.profile.d/python.sh\n\n# Need to install libsasl\n#\nRUN curl -f -s ftp://ftp.cyrusimap.org/cyrus-sasl/cyrus-sasl-2.1.26.tar.gz | tar xz -C /tmp\nWORKDIR /tmp/cyrus-sasl-2.1.26\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-silent-rules\nRUN make DESTDIR=/app install\n\n# Need to install libffi-dev\n#\nRUN curl -f -s ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz | tar xz -C /tmp\nWORKDIR /tmp/libffi-3.2.1\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make DESTDIR=/app install\nRUN ln -s /app/usr/local/lib/libffi-3.2.1/include/ffi.h /app/usr/local/include/ffi.h\nRUN ln -s /app/usr/local/lib/libffi-3.2.1/include/ffitarget.h /app/usr/local/include/ffitarget.h\n\nWORKDIR /app/user\n\nRUN echo 'export PATH=/app/usr/local/include:/app/usr/local/bin:$HOME/.heroku/python/bin:$PATH'\nCOPY requirements.txt /app/user/\nCOPY . /app/user\nRUN CFLAGS=-I/app/usr/local/include LDFLAGS=-L/app/usr/local/lib /app/.heroku/python/bin/pip install -r requirements.txt\n\nENTRYPOINT [\"/usr/bin/init\"]\n"
}