{
  "startTime": 1674248062326,
  "endTime": 1674248062474,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 33,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# this is the dev container and doesn't contain CRON or composer\n# it maps the PWD straight through\n\n# Multi-stage build\n# Stage 0\n# Compile xsendfile apache module\nFROM alpine:3.8 as sendfile\nADD docker/mod_xsendfile.c /mod_xsendfile.c\nRUN apk update && apk upgrade && apk add --no-cache \\\n        gcc \\\n        musl-dev \\\n        apache2-dev \\\n        apache2\n\nRUN cd / && \\\n    apxs -cia mod_xsendfile.c\n\n# Stage 1\n# Build the CMS container\nFROM alpine:3.8\nMAINTAINER Xibo Signage <support@xibosignage.com>\n\n# Install apache, PHP, and supplimentary programs.\nRUN apk update && apk upgrade && apk add tar \\\n    bash \\\n    curl \\\n    php7 \\\n    php7-apache2 \\\n    php7-zmq \\\n    php7-json \\\n    php7-gd \\\n    php7-dom \\\n    php7-pdo \\\n    php7-zip \\\n    php7-pdo_mysql \\\n    php7-gettext \\\n    php7-soap \\\n    php7-iconv \\\n    php7-curl \\\n    php7-session \\\n    php7-ctype \\\n    php7-fileinfo \\\n    php7-xml \\\n    php7-simplexml \\\n    php7-mbstring \\\n    php7-memcached \\\n    php7-tokenizer \\\n    php7-zlib \\\n    php7-mongodb \\\n    mysql-client \\\n    ssmtp \\\n    apache2 \\\n    ca-certificates \\\n    tzdata \\\n    && rm -rf /var/cache/apk/*\n\n# Add all necessary config files in one layer\nADD docker/ /\n\n# Adjust file permissions as appropriate\nRUN chmod +x /entrypoint.sh /usr/local/bin/httpd-foreground /usr/local/bin/wait-for-command.sh \\ \n             /etc/periodic/15min/cms-db-backup && \\\n    mkdir -p /run/apache2 && \\\n    rm /etc/apache2/conf.d/info.conf && \\\n    rm /etc/apache2/conf.d/userdir.conf && \\\n    chmod 777 /tmp\n\n# Add xsendfile Module\nCOPY --from=sendfile /usr/lib/apache2/mod_xsendfile.so /usr/lib/apache2/mod_xsendfile.so\n\n# Update the PHP.ini file\nRUN sed -i \"s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/\" /etc/php7/php.ini && \\\n    sed -i \"s/session.gc_probability = .*$/session.gc_probability = 1/\" /etc/php7/php.ini && \\\n    sed -i \"s/session.gc_divisor = .*$/session.gc_divisor = 100/\" /etc/php7/php.ini\n\n# Set some environment variables\nENV CMS_DEV_MODE=true \\\n    XMR_HOST=xmr \\\n    MYSQL_HOST=db \\\n    MYSQL_PORT=3306 \\\n    MYSQL_USER=root \\\n    MYSQL_PASSWORD=root \\\n    MYSQL_DATABASE=cms \\\n    CMS_SERVER_NAME=localhost \\\n    CMS_ALIAS=none \\\n    CMS_PHP_SESSION_GC_MAXLIFETIME=1440 \\\n    CMS_PHP_POST_MAX_SIZE=2G \\\n    CMS_PHP_UPLOAD_MAX_FILESIZE=2G \\\n    CMS_PHP_MAX_EXECUTION_TIME=300 \\\n    CMS_PHP_MEMORY_LIMIT=256M \\\n    CMS_APACHE_START_SERVERS=2 \\\n    CMS_APACHE_MIN_SPARE_SERVERS=5 \\\n    CMS_APACHE_MAX_SPARE_SERVERS=10 \\\n    CMS_APACHE_MAX_REQUEST_WORKERS=60 \\\n    CMS_APACHE_MAX_CONNECTIONS_PER_CHILD=300\n\n# Expose port 80\nEXPOSE 80\n\n# Map the source files into /var/www/cms\n# Create library and cache, because they might not exist\n# Create /var/www/backup so that we have somewhere for entrypoint to log errors.\nRUN mkdir -p /var/www/cms && \\\n    mkdir -p /var/www/cms/library/temp && \\\n    mkdir -p /var/www/cms/cache && \\\n    mkdir -p /var/www/backup\n\n# Run entry\nCMD [\"/entrypoint.sh\"]\n"
}