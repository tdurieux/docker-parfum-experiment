{
  "startTime": 1674234758081,
  "endTime": 1674234758587,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 1,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 69,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 65,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 69,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 65,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install 1password\nFROM ubuntu:19.04 as onepassword_builder\nRUN apt-get update && apt-get install --no-install-recommends -y curl ca-certificates unzip && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sS -o 1password.zip https://cache.agilebits.com/dist/1P/op/pkg/v0.5.5/op_linux_amd64_v0.5.5.zip && unzip 1password.zip op -d /usr/local/bin && rm 1password.zip\n\n# Install doctl\nFROM ubuntu:19.04 as doctl_builder\nRUN apt-get update && apt-get install --no-install-recommends -y wget ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/digitalocean/doctl/releases/download/v1.14.0/doctl-1.14.0-linux-amd64.tar.gz && tar xf doctl-1.14.0-linux-amd64.tar.gz && chmod +x doctl && mv doctl /usr/local/bin && rm doctl-1.14.0-linux-amd64.tar.gz\n\n# Install terraform\nFROM ubuntu:19.04 as terraform_builder\nRUN apt-get update && apt-get install --no-install-recommends -y wget ca-certificates unzip && rm -rf /var/lib/apt/lists/*;\nRUN wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip && unzip terraform_0.11.13_linux_amd64.zip && chmod +x terraform && mv terraform /usr/local/bin && rm terraform_0.11.13_linux_amd64.zip\n\n# Install rust\nFROM ubuntu:19.04 as rust_builder\nRUN apt-get update && apt-get install --no-install-recommends -y curl ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n\n# base OS\nFROM ubuntu:19.04\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -qq && apt-get upgrade -y && apt-get install -qq -y \\\n\tbuild-essential \\\n\tca-certificates \\\n\tcurl \\\n\tdocker.io \\\n\tgit \\\n\tjq \\\n\tless \\\n\tman \\\n\tmosh \\\n\topenssh-server \\\n\tpostgresql-contrib \\\n\tripgrep \\\n\tsilversearcher-ag \\\n\tsoftware-properties-common \\\n\tsudo \\\n\ttig \\\n\ttmate \\\n\ttmux \\\n\ttree \\\n\tunzip \\\n\twget \\\n\tzip \\\n\tzlib1g-dev \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install Fish\nRUN apt-add-repository ppa:fish-shell/release-3 && apt-get update && apt-get install --no-install-recommends fish -y && rm -rf /var/lib/apt/lists/*;\n\n# Set up SSH for port 3222\nRUN mkdir /run/sshd\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN sed 's/#Port 22/Port 3222/' -i /etc/ssh/sshd_config\n\n# Install vim\nRUN add-apt-repository ppa:jonathonf/vim -y && apt-get update && apt-get install --no-install-recommends vim-gtk3 -y && rm -rf /var/lib/apt/lists/*;\n\n# Install rbenv\nRUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv && eval \"$(~/.rbenv/bin/rbenv init -)\"\n\n# Install ruby-install\nRUN wget -O ruby-install-0.7.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz && \\\n\ttar -xzvf ruby-install-0.7.0.tar.gz && \\\n\tcd ruby-install-0.7.0/ && \\\n\tmake install && \\\n\tcd && rm -rf ruby-install-0.7.0* && rm ruby-install-0.7.0.tar.gz\n\n# Install the latest version of Ruby\nRUN wget https://raw.githubusercontent.com/davidcelis/dotfiles/master/ruby-version && \\\n  ruby-install ruby $(cat ruby-version) -c -i ~/.rbenv/versions/$(cat ruby-version) && \\\n\trm ruby-version\n\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n\tlocale-gen --purge $LANG && \\\n\tdpkg-reconfigure --frontend=noninteractive locales && \\\n\tupdate-locale LANG=$LANG LC_ALL=$LC_ALL LANGUAGE=$LANGUAGE\n\n# For correct colors in tmux\nENV TERM screen-256color\n\n# 1p\nCOPY --from=onepassword_builder /usr/local/bin/op /usr/local/bin/\n\n# doctl tools\nCOPY --from=doctl_builder /usr/local/bin/doctl /usr/local/bin/\n\n# Terraform tools\nCOPY --from=terraform_builder /usr/local/bin/terraform /usr/local/bin/\n\n# Rust tools\nCOPY --from=rust_builder /root/.cargo ~/.cargo\nRUN cargo install exa\n\n# Authorize my SSH keys\nRUN mkdir ~/.ssh && curl -fsL https://github.com/davidcelis.keys > ~/.ssh/authorized_keys && chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys\n\n# tmux plugins\nRUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\nRUN git clone https://github.com/tmux-plugins/tmux-open.git ~/.tmux/plugins/tmux-open\nRUN git clone https://github.com/tmux-plugins/tmux-yank.git ~/.tmux/plugins/tmux-yank\nRUN git clone https://github.com/tmux-plugins/tmux-prefix-highlight.git ~/.tmux/plugins/tmux-prefix-highlight\n\nRUN chsh -s /usr/bin/fish\n\nEXPOSE 3222 60000-60010/udp\n\nWORKDIR /root\nCOPY scripts/entrypoint /bin/entrypoint\nCMD [\"/bin/entrypoint\"]\n"
}