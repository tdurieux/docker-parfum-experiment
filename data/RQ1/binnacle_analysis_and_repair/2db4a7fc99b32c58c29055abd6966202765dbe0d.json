{
  "startTime": 1674242205936,
  "endTime": 1674242206184,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 9,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 9,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 19,
        "columnStart": 9,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 19,
        "columnStart": 9,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the JDK image to avoid installing it again.\nFROM circleci/openjdk:latest\n\n# this will install the latest version of bazel - unfortunately it won't\n# work, since they break backward compat on every single release.\n# Proxy is currently requiring 0.11.\n#RUN \\\n#    sudo sh -c 'echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" > /etc/apt/sources.list.d/bazel.list ' && \\\n#    curl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | sudo apt-key add -\n\n# clang is used for TSAN and ASAN tests\nRUN sudo sh -c 'curl http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -'\nRUN sudo sh -c 'echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-7 main\" > /etc/apt/sources.list.d/llvm.list'\n\nRUN sudo apt-get update && \\\n    sudo apt-get -y --no-install-recommends install \\\n    wget software-properties-common make python python-pip pkg-config \\\n    zlib1g-dev bash-completion bc libtool automake zip time g++-6 gcc-6 \\\n    clang-7 clang-format-7 clang-tidy-7 lld-7 libc++-7-dev libc++abi-7-dev \\\n    rsync ninja-build && rm -rf /var/lib/apt/lists/*;\n\n# ~100M, depends on g++, zlib1g-dev, bash-completions\nRUN curl -f -Lo /tmp/bazel.deb https://github.com/bazelbuild/bazel/releases/download/0.22.0/bazel_0.22.0-linux-x86_64.deb && \\\n    sudo dpkg -i /tmp/bazel.deb && rm /tmp/bazel.deb\n\n\n# Instead of \"apt-get -y install  golang\"\nRUN cd /tmp && \\\n    wget https://redirector.gvt1.com/edgedl/go/go1.11.5.linux-amd64.tar.gz && \\\n    sudo rm -rf /usr/local/go && \\\n    sudo tar -C /usr/local -xzf go1.11.5.linux-amd64.tar.gz && \\\n    sudo chown -R circleci /usr/local/go && \\\n    sudo ln -s /usr/local/go/bin/go /usr/local/bin && rm go1.11.5.linux-amd64.tar.gz\n\n# instead of \"apt-get -y install cmake\", pin cmake version to 3.8.0\nRUN cd /tmp && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.8.0/cmake-3.8.0-Linux-x86_64.tar.gz && \\\n    sudo tar -C /usr/local/ -xzf cmake-3.8.0-Linux-x86_64.tar.gz && \\\n    sudo chown -R circleci /usr/local/cmake-3.8.0-Linux-x86_64 && \\\n    sudo ln -s /usr/local/cmake-3.8.0-Linux-x86_64/bin/cmake /usr/local/bin && rm cmake-3.8.0-Linux-x86_64.tar.gz\n\nRUN bazel version\n\n# For circleci unit test integration, \"go test -v 2>&1 | go-junit-report > report.xml\"\nRUN go get -u github.com/jstemmer/go-junit-report\n"
}