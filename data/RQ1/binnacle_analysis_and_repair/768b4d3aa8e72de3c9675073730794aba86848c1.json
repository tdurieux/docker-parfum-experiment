{
  "startTime": 1674234748787,
  "endTime": 1674234749213,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 97,
        "columnEnd": 218
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 110
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2012-2016 Codenvy, S.A.\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Eclipse Public License v1.0\n# which accompanies this distribution, and is available at\n# http://www.eclipse.org/legal/epl-v10.html\n# Contributors:\n# Codenvy, S.A. - initial API and implementation\n\nFROM docker:1.12.0\n\n# Here we use several hacks collected from https://github.com/gliderlabs/docker-alpine/issues/11:\n# 1. install GLibc (which is not the cleanest solution at all)\n# 2. hotfix /etc/nsswitch.conf, which is apperently required by glibc and is not used in Alpine Linux\n\nENV JAVA_VERSION_MAJOR=8 \\\n    JAVA_VERSION_MINOR=92 \\\n    JAVA_VERSION_BUILD=14 \\\n    JAVA_PACKAGE=jdk \\\n    JAVA_JCE=standard \\\n    JAVA_HOME=/opt/jdk \\\n    GLIBC_VERSION=2.23-r3 \\\n    MAVEN_VERSION=3.3.9 \\\n    LANG=C.UTF-8\n\n# do all in one step\nRUN apk upgrade --update && \\\n    apk add --update libstdc++ curl ca-certificates bash openssh sudo unzip openssl && \\\n    for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -f -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \\\n    apk add --allow-untrusted /tmp/*.apk && \\\n    rm -v /tmp/*.apk && \\\n    ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) && \\\n    echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    mkdir /opt && \\\n    curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz \\\n      https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz && \\\n    gunzip /tmp/java.tar.gz && \\\n    tar -C /opt -xf /tmp/java.tar && \\\n    ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk && \\\n    if [ \"${JAVA_JCE}\" == \"unlimited\" ]; then \\\n    echo \"Installing Unlimited JCE policy\" >&2 && \\\n      curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n        https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip && \\\n      cd /tmp && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip && \\\n      cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security; \\\n    fi && \\\n    sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=30/ $JAVA_HOME/jre/lib/security/java.security && \\\n    apk del curl glibc-i18n && \\\n    rm -rf /opt/jdk/*src.zip \\\n           /opt/jdk/lib/missioncontrol \\\n           /opt/jdk/lib/visualvm \\\n           /opt/jdk/lib/*javafx* \\\n           /opt/jdk/jre/plugin \\\n           /opt/jdk/jre/bin/javaws \\\n           /opt/jdk/jre/bin/jjs \\\n           /opt/jdk/jre/bin/keytool \\\n           /opt/jdk/jre/bin/orbd \\\n           /opt/jdk/jre/bin/pack200 \\\n           /opt/jdk/jre/bin/policytool \\\n           /opt/jdk/jre/bin/rmid \\\n           /opt/jdk/jre/bin/rmiregistry \\\n           /opt/jdk/jre/bin/servertool \\\n           /opt/jdk/jre/bin/tnameserv \\\n           /opt/jdk/jre/bin/unpack200 \\\n           /opt/jdk/jre/lib/javaws.jar \\\n           /opt/jdk/jre/lib/deploy* \\\n           /opt/jdk/jre/lib/desktop \\\n           /opt/jdk/jre/lib/*javafx* \\\n           /opt/jdk/jre/lib/*jfx* \\\n           /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n           /opt/jdk/jre/lib/amd64/libprism_*.so \\\n           /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n           /opt/jdk/jre/lib/amd64/libglass.so \\\n           /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n           /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n           /opt/jdk/jre/lib/amd64/libjfx*.so \\\n           /opt/jdk/jre/lib/ext/jfxrt.jar \\\n           /opt/jdk/jre/lib/ext/nashorn.jar \\\n           /opt/jdk/jre/lib/oblique-fonts \\\n           /opt/jdk/jre/lib/plugin.jar \\\n           /tmp/* /var/cache/apk/* && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n    cd /tmp && \\\n    wget -q \"https://apache.ip-connect.vn.ua/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" && \\\n    tar -xzf \"apache-maven-$MAVEN_VERSION-bin.tar.gz\" && \\\n    mv \"/tmp/apache-maven-$MAVEN_VERSION\" \"/usr/lib\" && \\\n    rm \"/tmp/\"* && \\\n    adduser -S user -h /home/user -s /bin/bash -G root -u 1000 && \\\n    echo \"%root ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    PASS=$(openssl rand -base64 32) && \\\n    echo -e \"${PASS}\\n${PASS}\" | passwd user && \\\n    chown -R user /home/user/ && rm /tmp/java.tar\n\nRUN mkdir /usr/che \\\n    && wget -qO /usr/che/che https://raw.githubusercontent.com/eclipse/che/master/che.sh \\\n    && chmod +x /usr/che/che\n\nENV DOCKER_HOST=tcp://192.168.65.1 \\\n    M2_HOME=/usr/lib/apache-maven-$MAVEN_VERSION\n\nENV PATH=${PATH}:${JAVA_HOME}/bin:${M2_HOME}/bin:/usr/che\n\nEXPOSE 22 8000 8080\n\nUSER user\n\nWORKDIR /projects\n\nCMD sudo /usr/bin/ssh-keygen -A && \\\n    sudo /usr/sbin/sshd -D && \\\n    sudo su - && \\\n    tail -f /dev/null\n\n"
}