{
  "startTime": 1674242638305,
  "endTime": 1674242638528,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=latest\nFROM node:${NODE_VERSION}\n\nLABEL authors=\"hoatle <hoatle@teracy.com>\"\n\n# add more arguments from CI to the image so that `$ env` should reveal more info\nARG CI_BUILD_ID\nARG CI_BUILD_REF\nARG CI_REGISTRY_IMAGE\nARG CI_BUILD_TIME\n\nENV CI_BUILD_ID=$CI_BUILD_ID CI_BUILD_REF=$CI_BUILD_REF CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE \\\n  CI_BUILD_TIME=$CI_BUILD_TIME\n\n# make the \"en_US.UTF-8\" locale\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \\\n  && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\n# from https://github.com/docker-library/ruby/blob/master/2.3/Dockerfile\n\n# skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n  echo 'install: --no-document'; \\\n  echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc\n\nENV RUBY_MAJOR 2.6\nENV RUBY_VERSION 2.6.0\nENV RUBY_DOWNLOAD_SHA256 acb00f04374899ba8ee74bbbcb9b35c5c6b1fd229f1876554ee76f0f1710ff5f\nENV RUBYGEMS_VERSION 3.0.1\nENV BUNDLER_VERSION 1.17.3\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n  \\\n  && buildDeps=' \\\n  bison \\\n  dpkg-dev \\\n  libgdbm-dev \\\n  ruby \\\n  ' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  \\\n  && wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n  && echo \"$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz\" | sha256sum -c - \\\n\n  && mkdir -p /usr/src/ruby \\\n  && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n  && rm ruby.tar.xz \\\n\n  && cd /usr/src/ruby \\\n\n  # hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n  #   warning: Insecure world writable dir\n  && { \\\n  echo '#define ENABLE_PATH_CHECK 0'; \\\n  echo; \\\n  cat file.c; \\\n  } > file.c.new \\\n  && mv file.c.new file.c \\\n\n  && autoconf \\\n  && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && ./configure \\\n  --build=\"$gnuArch\" \\\n  --disable-install-doc \\\n  --enable-shared \\\n  && make -j \"$(nproc)\" \\\n  && make install \\\n\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && cd / \\\n  && rm -r /usr/src/ruby \\\n\n  && gem update --system \"$RUBYGEMS_VERSION\" \\\n  && gem install bundler --version \"$BUNDLER_VERSION\" --force \\\n  && rm -r /root/.gem/\n\n# install things globally, for great justice\n# and don't create \".bundle\" in all our apps\nENV GEM_HOME /usr/local/bundle\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n  BUNDLE_SILENCE_ROOT_WARNING=1 \\\n  BUNDLE_APP_CONFIG=\"$GEM_HOME\"\n# path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438\nENV PATH $GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH\n# adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" && chmod 777 \"$GEM_HOME\"\n# (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)\n"
}