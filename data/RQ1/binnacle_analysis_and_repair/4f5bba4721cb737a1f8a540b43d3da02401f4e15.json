{
  "startTime": 1674239982145,
  "endTime": 1674239982310,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7 as builder\nMAINTAINER p.timmermans@evs.com\nRUN yum upgrade -y && yum clean all && rm -rf /var/cache/yum\nADD https://nodejs.org/dist/v10.5.0/node-v10.5.0-linux-x64.tar.xz ./\nRUN tar xvf /node-v10.5.0-linux-x64.tar.xz && rm /node-v10.5.0-linux-x64.tar.xz\nENV PATH $PATH:/node-v10.5.0-linux-x64/bin\nRUN npm install -g yarn && npm cache clean --force;\n#RUN yum install -y git && yum clean all && mkdir /root/.ssh\nADD ssh_keys /root/.ssh\nRUN chmod 700 /root/.ssh && chmod 600 /root/.ssh/* && chmod 644 /root/.ssh/known_hosts\nADD server /opt/server\nRUN cd /opt/server && yarn install --production=true && yarn cache clean;\nRUN mv /opt/server /opt/manager\nADD client /tmp/client\nRUN cd /tmp/client && yarn install && yarn cache clean;\n#RUN find /tmp/client/src -name \"*.js\" -exec sed -i -e \"s/ console.log/ \\/\\/console.log/\" {} \\; && \\\n#    find /tmp/client/src -name \"*.js\" -exec sed -i -e \"s/^console.log/\\/\\/console.log/\" {} \\;\nRUN cd /tmp/client && yarn build\nRUN mv /tmp/client/build /opt/manager/app\n\nFROM centos:7\nRUN yum upgrade -y && yum install -y openssh-clients && yum clean all && rm -rf /var/cache/yum\nCOPY --from=builder /node-v10.5.0-linux-x64 /node-v10.5.0-linux-x64\nENV PATH $PATH:/node-v10.5.0-linux-x64/bin\nADD ssh_keys /root/.ssh\nRUN chmod 700 /root/.ssh && chmod 600 /root/.ssh/* && chmod 644 /root/.ssh/known_hosts\nCOPY --from=builder /opt/manager /opt/manager\nWORKDIR /opt/manager\nVOLUME /var/run/docker.sock\nEXPOSE 8080\nCMD [\"node\", \"server.js\"]\n"
}