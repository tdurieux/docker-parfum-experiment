{
  "startTime": 1674244063220,
  "endTime": 1674244063389,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos6\n\nRUN cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN yum install -y wget tar gcc zlib zlib-devel openssl openssl-devel unzip mysql-devel python-devel which gcc-c++ && rm -rf /var/cache/yum\n\nENV LANG en_US.UTF-8\n\nRUN mkdir -p /usr/src/nodejs && rm -rf /usr/src/nodejs\nWORKDIR /usr/src/nodejs\n\nENV NODEJS_VERSION 0.11.14\nRUN curl -f -SL \"https://dist.u.qiniudn.com/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}.tar.gz\" | tar xzf - --strip-components=1\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && make clean\n\nADD . /opt/\nWORKDIR /opt\n\nRUN tar zxvf scribed.tar.gz \\\n    && chown -R root:root scribed \\\n    && rm -f scribed.tar.gz\n\nRUN curl -f -SL 'https://bootstrap.pypa.io/get-pip.py' | python\nRUN pip install --no-cache-dir supervisor \\\n    && echo_supervisord_conf > /etc/supervisord.conf \\\n    && echo \"[include]\" >> /etc/supervisord.conf \\\n    && echo \"files = /etc/supervisord.d/*.conf\" >> /etc/supervisord.conf \\\n    && mkdir -p /etc/supervisord.d \\\n    && cp nodejs.conf scribed.conf /etc/supervisord.d/ \\\n    && rm -f nodejs.conf scribed.conf Dockerfile\n\nRUN npm install -g cnpm --registry=http://r.cnpmjs.org && npm cache clean --force;\nRUN mkdir -p /opt/logs\n\n"
}