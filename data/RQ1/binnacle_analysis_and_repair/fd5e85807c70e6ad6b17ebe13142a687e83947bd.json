{
  "startTime": 1674245724434,
  "endTime": 1674245724597,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# Dependencies and linters for build:\nFROM ubuntu:xenial\n# Need gcc for -race test (and some linters though those work with CGO_ENABLED=0)\nRUN apt-get -y update && \\\n  apt-get --no-install-recommends -y upgrade && \\\n  apt-get --no-install-recommends -y install ca-certificates curl make git gcc \\\n  libc6-dev apt-transport-https ssh ruby-dev build-essential rpm && rm -rf /var/lib/apt/lists/*;\n# Install FPM\nRUN gem install --no-ri --no-rdoc fpm\n# Install both go1.11 [go1.10.3] and go1.8.7 so we don't become incompatible with 1.8\nRUN curl -f https://storage.googleapis.com/golang/go1.8.7.linux-amd64.tar.gz | tar xfz - -C /usr/local\n# Newer go have no problem with being installed in random directories without requiring GOROOT so we\n# leave the old go in /usr/local and put the new ones, despite being preferred, in a different root:\n# No report of issues with 1.11 so far so skipping 1.10\n#RUN mkdir /go1.10\n#RUN curl -f https://dl.google.com/go/go1.10.4.linux-amd64.tar.gz | tar xfz - -C /go1.10\nRUN mkdir /go1.11\nRUN curl -f https://dl.google.com/go/go1.11.5.linux-amd64.tar.gz | tar xfz - -C /go1.11\nENV GOPATH /go\nRUN mkdir -p $GOPATH/bin\n# We do pick the latest go first in the path\nENV PATH /go1.11/go/bin:/usr/local/go/bin:$PATH:$GOPATH/bin\nRUN go version # check it's indeed the version we expect\n# This is now handled through dep and vendor submodule\n# RUN go get -u google.golang.org/grpc\n# Install dep\nRUN curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n# Install meta linters\nRUN go get -u github.com/alecthomas/gometalinter\nRUN gometalinter -i -u\nWORKDIR /go/src/fortio.org\n# Docker:\nRUN curl -fsSL \"https://download.docker.com/linux/ubuntu/gpg\" | apt-key add\nRUN echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" > /etc/apt/sources.list.d/docker.list\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n"
}