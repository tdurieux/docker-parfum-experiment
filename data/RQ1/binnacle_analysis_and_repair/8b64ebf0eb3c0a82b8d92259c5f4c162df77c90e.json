{
  "startTime": 1674245786857,
  "endTime": 1674245787051,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "ARG NODE_VERSION=8.15.1\nFROM node:$NODE_VERSION\n# Using these to provide advanced pruning later\nLABEL org=\"Freedom of the Press\"\nLABEL image_name=\"sunder\"\n\n# Supports building as normal user. Assumes UID of 1000,\n# will need to handle USER_ID otherwise. The \"node\" user\n# has uid 1000 by default.\nARG UID\nENV UID ${UID:-1000}\n\nRUN apt-get update && apt-get upgrade -y # 2018-02-08 && \\\n    rm -rf /var/cache/apt/archives/*\n\n# Required for electron-builder:\n# https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build#linux\nRUN apt-get install -y --no-install-recommends  \\\n    graphicsmagick \\\n    icnsutils \\\n    libgconf2-dev \\\n    libgtk2.0-dev \\\n    libnss3-dev \\\n    sudo \\\n    xz-utils && \\\n    rm -rf /var/cache/apt/archives/* && rm -rf /var/lib/apt/lists/*;\n\n# Required for starting electron\nRUN apt-get install -y --no-install-recommends  \\\n    libgtk-3-0 \\\n    libx11-xcb1 \\\n    libxtst6 \\\n    libxss1 \\\n    libasound2 \\\n    xvfb xauth \\\n    && rm -rf /var/cache/apt/archives/* && rm -rf /var/lib/apt/lists/*;\n\n# Install python for building docs with sphinx\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python python-dev python-pip python-virtualenv && \\\n    rm -rf /var/cache/apt/archives/* && rm -rf /var/lib/apt/lists/*;\n\n# Install sphinx and related python requirements\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt && \\\n    rm /tmp/requirements.txt\n\n\nRUN if test $UID != 1000 ; then usermod -u $UID node; fi && echo \"node ALL=(ALL) NOPASSWD:/bin/sunder-perm-fix\" >> /etc/sudoers\n\n# For compatibility with grsecurity-patched kernels and perm clean-up\nRUN apt-get install --no-install-recommends -y paxctl && \\\n    paxctl -Cm /usr/local/bin/node && \\\n    rm -rf /var/cache/apt/archives/* && rm -rf /var/lib/apt/lists/*;\n\nCOPY tools/sunder-perm-fix.sh /bin/sunder-perm-fix\n\nRUN chmod +x /bin/sunder-perm-fix\n\nWORKDIR /sunder\nUSER node\n\n# Install Rust under `node` user home directory\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\nCMD /sunder/tools/build-sunder-debian-packages.sh\n"
}