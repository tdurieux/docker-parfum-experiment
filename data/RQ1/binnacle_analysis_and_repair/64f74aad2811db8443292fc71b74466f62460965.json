{
  "startTime": 1674245365166,
  "endTime": 1674245365313,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nENV PROTOBUF_VERSION=3.6.1 \\\n    PROTOC_GEN_GO_VERSION=1.2.0 \\\n    PROTOC_GEN_GRPC_GATEWAY_VERSION=1.5.1\nENV GOPATH=/go \\\n    PATH=/go/bin/:$PATH\nENV PROTO_FILES=./proto/*.proto \\\n    PROTO_GO_OUT=./src\n\nRUN apk add --no-cache \\\n    build-base \\\n    curl \\\n    automake \\\n    autoconf \\\n    libtool \\\n    git \\\n    zlib-dev\n\nRUN mkdir -p /protobuf && \\\n    curl -f -L https://github.com/protocolbuffers/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz | tar xvz --strip-components=1 -C /protobuf\nRUN cd /protobuf && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make -j2 && make install\n\nRUN apk add --no-cache go\nRUN go get -u -v -ldflags '-w -s' \\\n    github.com/golang/protobuf/protoc-gen-go \\\n    github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger \\\n    github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\n\nWORKDIR /go/src/github.com/micnncim/docker-grpc-gateway\nRUN go get github.com/golang/dep/cmd/dep\nCOPY Gopkg.toml Gopkg.lock ./\nRUN dep ensure -v -vendor-only\n\n# build go and protobuf\nCOPY . .\nRUN protoc -I/protobuf -I. \\\n    -I${GOPATH}/src \\\n    -I${GOPATH}/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \\\n    --go_out=plugins=grpc:${PROTO_GO_OUT} \\\n    ${PROTO_FILES}\nRUN protoc -I/protobuf -I. \\\n    -I${GOPATH}/src \\\n    -I${GOPATH}/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \\\n    --grpc-gateway_out=logtostderr=true:${PROTO_GO_OUT} \\\n    ${PROTO_FILES}\nRUN CGO_ENABLED=0 GOOS=linux go build -o /go/bin/docker-grpc-gateway \\\n    -ldflags=\"-w -s\" -v \\\n    github.com/micnncim/docker-grpc-gateway\n\n# light image for deployment\nFROM alpine:3.7\nRUN apk --no-cache add ca-certificates\nCOPY --from=0 /go/bin/docker-grpc-gateway /go/bin/docker-grpc-gateway\nEXPOSE 8080\nCMD  [\"/go/bin/docker-grpc-gateway\"]\n"
}