{
  "startTime": 1674252071774,
  "endTime": 1674252071842,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/passenger-ruby25:1.0.1\n\n# Set correct environment variables.\nENV HOME /root\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# Additional packages\nRUN apt-get update && apt-get install --no-install-recommends -y -o Dpkg::Options::=\"--force-confold\" postgresql-client tzdata && rm -rf /var/lib/apt/lists/*;\n\n# Enable Nginx and Passenger\nRUN rm -f /etc/service/nginx/down\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# Install gems: it's better to build an independent layer for the gems\n# so they are cached during builds unless Gemfile changes\nWORKDIR /tmp\nADD Gemfile /tmp/\nADD Gemfile.lock /tmp/\nRUN bundle install --jobs 4 --retry 3\n\n# Add virtual host entry for the application\nRUN rm /etc/nginx/sites-enabled/default\nADD webapp.conf /etc/nginx/sites-enabled/webapp.conf\n\n# In case we need some environmental variables in Nginx\nADD rails-env.conf /etc/nginx/main.d/rails-env.conf\n\n# Copy application into the container and use right permissions: passenger\n# uses the app user for running the application\nRUN mkdir /home/app/webapp\nCOPY --chown=app:app . /home/app/webapp\nWORKDIR /home/app/webapp\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}