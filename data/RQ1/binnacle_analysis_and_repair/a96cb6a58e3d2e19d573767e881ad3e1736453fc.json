{
  "startTime": 1674237036515,
  "endTime": 1674237036627,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build method: just run `docker build --rm --build-arg -t genshen/ssh-web-console .`\n\n# build frontend code\nFROM node:10-alpine AS frontend-builder\n\nARG FRONTEND_REP=\"https://github.com/genshen/webConsole.git\"\nARG FRONTEND_VERSION=\"master\"\n\nRUN apk add --no-cache git \\\n    && cd /  \\\n    && git clone ${FRONTEND_REP} web-console \\\n    && cd web-console \\\n    && git checkout ${FRONTEND_VERSION} \\\n    && yarn install \\\n    && yarn build && yarn cache clean;\n\n\nFROM golang:1.12.4-alpine AS builder\n\n# set to 'on' if using go module\nENV GO111MODULE=on\nARG STATIC_DIR=dist\n\nRUN apk add --no-cache git \\\n    && go get -u github.com/rakyll/statik\n\nCOPY ./  /go/src/github.com/genshen/ssh-web-console/\nCOPY --from=frontend-builder /web-console/dist /go/src/github.com/genshen/ssh-web-console/${STATIC_DIR}/\n\nRUN cd ./src/github.com/genshen/ssh-web-console/ \\\n    && statik -src=${STATIC_DIR} \\\n    && go build \\\n    && go install\n\n## copy binary\nFROM alpine:latest\n\nARG HOME=\"/home/web\"\n\nRUN adduser -D web -h ${HOME}\n\nCOPY --from=builder --chown=web /go/bin/ssh-web-console ${HOME}/ssh-web-console\n\nWORKDIR ${HOME}\nUSER web\n\nVOLUME [\"${HOME}/conf\", \"${HOME}/views\"]\n\nCMD [\"./ssh-web-console\"]\n"
}