{
  "startTime": 1674242638914,
  "endTime": 1674242639001,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:11-alpine AS base\n\nENV NODE_ENV=production\n\nRUN npm i -g npm@latest && npm cache clean --force;\n\nWORKDIR /misskey\n\nFROM base AS builder\n\nRUN apk add --no-cache \\\n    autoconf \\\n    automake \\\n    file \\\n    g++ \\\n    gcc \\\n    libc-dev \\\n    libtool \\\n    make \\\n    nasm \\\n    pkgconfig \\\n    python \\\n    zlib-dev\nRUN npm i -g yarn && npm cache clean --force;\n\nCOPY . ./\nRUN yarn install && yarn cache clean;\nRUN yarn build\n\nFROM base AS runner\n\nRUN apk add --no-cache \\\n    ffmpeg \\\n    tini\nRUN npm i -g web-push && npm cache clean --force;\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\nCOPY --from=builder /misskey/node_modules ./node_modules\nCOPY --from=builder /misskey/built ./built\nCOPY . ./\n\nCMD [\"npm\", \"start\"]\n"
}