{
  "startTime": 1674244372712,
  "endTime": 1674244372815,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel\n\nLABEL maintainer=\"Toni Kunic <tk@cse.yorku.ca>\"\n\n################################################################################\n### Apt and pip dependencies\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      build-essential \\\n      python-pip \\\n      python-dev \\\n      python-numpy \\\n      python-scipy \\\n      python-opencv \\\n      python-skimage \\\n      python-protobuf \\\n      python-setuptools \\\n      libprotobuf-dev \\\n      libleveldb-dev \\\n      libsnappy-dev \\\n      libopencv-dev \\\n      libhdf5-serial-dev \\\n      protobuf-compiler \\\n      libboost-all-dev \\\n      libatlas-base-dev \\\n      libgflags-dev \\\n      libgoogle-glog-dev \\\n      liblmdb-dev \\\n      libxml2-dev \\\n      libxslt-dev \\\n      wget \\\n      unzip \\\n      cmake \\\n      git && \\\n    rm -rf /var/lib/apt/lists/*\n\n################################################################################\n### @wenguanwang's implementation depends on HED's caffe.\n\nCOPY models/docker/DVAP/model/Makefile.config /opt/Makefile.config\n\nRUN git clone https://github.com/s9xie/hed.git /opt/caffe && \\\n    cd /opt/caffe && \\\n    protoc src/caffe/proto/caffe.proto --cpp_out=. && \\\n    mkdir include/caffe/proto && \\\n    mv src/caffe/proto/caffe.pb.h include/caffe/proto && \\\n    mv /opt/Makefile.config /opt/caffe/ && \\\n    make -j && \\\n    make tools && \\\n    make pycaffe\n\n################################################################################\n### smiler_tools\n\nCOPY ./smiler_tools /tmp/smiler_tools\nRUN pip install --no-cache-dir /tmp/smiler_tools\n\n################################################################################\n### Run command on container start.\n\nVOLUME [\"/opt/model\"]\nVOLUME [\"/opt/input_vol\"]\nVOLUME [\"/opt/output_vol\"]\n\nWORKDIR /opt/model\n\nCMD [\"/bin/bash\"]\n"
}