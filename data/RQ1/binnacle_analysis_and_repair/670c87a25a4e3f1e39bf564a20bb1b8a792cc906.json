{
  "startTime": 1674248714756,
  "endTime": 1674248714803,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons as commons\nFROM docker.elastic.co/logstash/logstash:6.6.1\n\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=logstash\n\nUSER root\n\nARG LAGOON_VERSION\nENV LAGOON_VERSION=$LAGOON_VERSION\n\n# Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /home /home\n\nRUN curl -f -sL https://github.com/krallin/tini/releases/download/v0.18.0/tini -o /sbin/tini && chmod a+x /sbin/tini\n\nRUN chmod g+w /etc/passwd \\\n    && mkdir -p /home\n\n# Reproduce behavior of Alpine: Run Bash as sh\nRUN rm -f /bin/sh && ln -s /bin/bash /bin/sh\n\nENV TMPDIR=/tmp \\\n    TMP=/tmp \\\n    HOME=/home \\\n    # When Bash is invoked via `sh` it behaves like the old Bourne Shell and sources a file that is given in `ENV`\n    ENV=/home/.bashrc \\\n    # When Bash is invoked as non-interactive (like `bash -c command`) it sources a file that is given in `BASH_ENV`\n    BASH_ENV=/home/.bashrc\n\nRUN fix-permissions /usr/share/logstash/data \\\n    && fix-permissions /usr/share/logstash/config\n\nENV LS_JAVA_OPTS \"-Xms200m -Xmx200m\"\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.bash\", \"/usr/local/bin/docker-entrypoint\"]"
}