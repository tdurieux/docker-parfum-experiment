{
  "startTime": 1674249649220,
  "endTime": 1674249649483,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Codelitt's Ruby image based off Phusion's baseimage\n#\n# This image is tagged in Docker Hub as codelittin/ruby:2.4\nFROM phusion/baseimage\nMAINTAINER Codelitt, Inc.\n\n\n# skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n\t&& { \\\n\t\techo 'install: --no-document'; \\\n\t\techo 'update: --no-document'; \\\n\t} >> /usr/local/etc/gemrc\n\nENV RUBY_MAJOR 2.4\nENV RUBY_VERSION 2.4.1\nENV RUBY_DOWNLOAD_SHA256 4fc8a9992de3e90191de369270ea4b6c1b171b7941743614cc50822ddc1fe654\nENV RUBYGEMS_VERSION 2.6.11\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n\t\\\n\t&& buildDeps=' \\\n\t\tbison \\\n\t\tlibgdbm-dev \\\n\t\truby \\\n\t' \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends $buildDeps wget autoconf xz-utils build-essential openssl zlib1g-dev libssl-dev libpq-dev libreadline-dev \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n\t&& echo \"$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz\" | sha256sum -c - \\\n\n\t&& mkdir -p /usr/src/ruby \\\n\t&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n\t&& rm ruby.tar.xz \\\n\n\t&& cd /usr/src/ruby \\\n\n# hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n#   warning: Insecure world writable dir\n\t&& { \\\n\t\techo '#define ENABLE_PATH_CHECK 0'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new \\\n\t&& mv file.c.new file.c \\\n\n\t&& autoconf \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-install-doc --enable-shared \\\n\t&& make -j\"$(nproc)\" \\\n\t&& make install \\\n\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\t&& cd / \\\n\t&& rm -r /usr/src/ruby \\\n\n\t&& gem update --system && rm -rf /root/.gem;\n\nENV BUNDLER_VERSION 1.14.6\n\nRUN gem install bundler --version \"$BUNDLER_VERSION\"\n\n# install things globally, for great justice\n# and don't create \".bundle\" in all our apps\nENV GEM_HOME /usr/local/bundle\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n\tBUNDLE_BIN=\"$GEM_HOME/bin\" \\\n\tBUNDLE_SILENCE_ROOT_WARNING=1 \\\n\tBUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH $BUNDLE_BIN:$PATH\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n\t&& chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n\n\nRUN mkdir -p /share\nWORKDIR /share\n\nCMD [ \"irb\" ]\n"
}