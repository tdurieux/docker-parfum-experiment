{
  "startTime": 1674249540874,
  "endTime": 1674249541120,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 93,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\nLABEL maintainer \"Adrian B. Danieli - https://github.com/sickp\"\nCOPY rootfs /\nCMD [ \"irb\" ]\n\n# skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n\t&& { \\\n\t\techo 'install: --no-document'; \\\n\t\techo 'update: --no-document'; \\\n\t} >> /usr/local/etc/gemrc\n\n# install things globally, for great justice\n# and don't create \".bundle\" in all our apps\nENV GEM_HOME /usr/local/bundle\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n\tBUNDLE_BIN=\"$GEM_HOME/bin\" \\\n\tBUNDLE_SILENCE_ROOT_WARNING=1 \\\n\tBUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH $BUNDLE_BIN:$PATH\nRUN mkdir -p \"$GEM_HOME\" \"$BUNDLE_BIN\" \\\n\t&& chmod 777 \"$GEM_HOME\" \"$BUNDLE_BIN\"\n\nCMD [ \"irb\" ]\n\nENV RUBY_MAJOR 2.5\nENV RUBY_VERSION 2.5.0\nENV RUBY_DOWNLOAD_SHA256 1da0afed833a0dab94075221a615c14487b05d0c407f991c8080d576d985b49b\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\n# readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\nRUN set -ex \\\n\t\\\n\t&& apk add --no-cache --virtual .ruby-builddeps \\\n\t\tautoconf \\\n\t\tbison \\\n\t\tbzip2 \\\n\t\tbzip2-dev \\\n\t\tca-certificates \\\n\t\tcoreutils \\\n\t\tgcc \\\n\t\tgdbm-dev \\\n\t\tglib-dev \\\n\t\tlibc-dev \\\n\t\tlibffi-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tncurses-dev \\\n\t\tlibressl \\\n\t\tlibressl-dev \\\n\t\tprocps \\\n\t\treadline-dev \\\n\t\truby \\\n\t\ttar \\\n\t\tyaml-dev \\\n\t\tzlib-dev \\\n\t\txz \\\n\t\\\n\t&& wget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\" \\\n\t&& echo \"$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz\" | sha256sum -c - \\\n\n\t&& mkdir -p /usr/src/ruby \\\n\t&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n\t&& rm ruby.tar.xz \\\n\n\t&& cd /usr/src/ruby \\\n\n# hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n#   warning: Insecure world writable dir\n\t&& { \\\n\t\techo '#define ENABLE_PATH_CHECK 0'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new \\\n\t&& mv file.c.new file.c \\\n\n\t&& autoconf \\\n# the configure script does not detect isnan/isinf as macros\n\t&& ac_cv_func_isnan=yes ac_cv_func_isinf=yes \\\n\t\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--disable-install-doc --enable-shared \\\n\t&& make -j\"$(getconf _NPROCESSORS_ONLN)\" \\\n\t&& make install \\\n\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --recursive /usr/local \\\n\t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r apk info --installed \\\n\t\t\t| sort -u \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .ruby-rundeps $runDeps \\\n\t\tbzip2 \\\n\t\tca-certificates \\\n\t\tlibffi-dev \\\n\t\tlibressl-dev \\\n\t\tyaml-dev \\\n\t\tprocps \\\n\t\tzlib-dev \\\n\t&& apk del .ruby-builddeps \\\n\t&& cd / \\\n\t&& rm -r /usr/src/ruby\n\nENV RUBYGEMS_VERSION 2.7.4\nRUN gem update --system \"$RUBYGEMS_VERSION\" && rm -rf /root/.gem;\n\nENV BUNDLER_VERSION 1.16.1\nRUN gem install bundler --version \"$BUNDLER_VERSION\"\n"
}