{
  "startTime": 1674245961771,
  "endTime": 1674245962177,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 299,
        "columnEnd": 376
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 225
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 225
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 225
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 249
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 120
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 AS builder\nARG AUGUSTUS_COMMIT=36ae43d\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y build-essential libssl-dev libncurses5-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libboost-all-dev sqlite3 libsqlite3-0 libsqlite3-dev libgsl0-dev lp-solve liblpsolve55-dev libbamtools-dev wget git && rm -rf /var/lib/apt/lists/*;\n\n# htslib\nRUN git clone git://github.com/samtools/htslib.git\nRUN cd htslib && make install\n\n# bcftools\nRUN git clone git://github.com/samtools/bcftools.git\nRUN cd bcftools && make\n\n# samtools\nRUN git clone git://github.com/samtools/samtools\nRUN cd samtools && make && make install\n\n# MOVE Directories INTO $HOME/tool\nRUN mkdir /root/tools\nRUN mv samtools /root/tools\nRUN mv htslib /root/tools\nRUN mv bcftools /root/tools\n\n# Augustus\nRUN git clone https://github.com/Gaius-Augustus/Augustus augustus\nRUN cd augustus && git reset --hard ${AUGUSTUS_COMMIT}\nRUN echo 'COMPGENEPRED = true' >> augustus/common.mk\nRUN echo 'SQLITE = true' >> augustus/common.mk\nRUN cd augustus/auxprogs/homGeneMapping/src && sed 's/# BOOST = true/BOOST = true/g' -i Makefile && sed 's/# SQLITE = true/SQLITE = true/g' -i Makefile\nRUN cd augustus && make\n\n# HDF5\nRUN wget -q https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.1/src/hdf5-1.10.1.tar.gz\nRUN tar xzf hdf5-1.10.1.tar.gz && rm hdf5-1.10.1.tar.gz\nRUN cd hdf5-1.10.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-cxx --prefix=/usr\nRUN cd hdf5-1.10.1 && make && make install\n\n# sonLib\nRUN git clone git://github.com/benedictpaten/sonLib.git\n\n# HAL\nRUN git clone git://github.com/glennhickey/hal.git\nRUN cd sonLib && make\nRUN cd hal && make\n\n# LibBigWig\nRUN git clone https://github.com/dpryan79/libBigWig.git\nRUN cd libBigWig && make install\n\n# WiggleTools\nRUN git clone https://github.com/Ensembl/WiggleTools.git\n# Their makefile now hardcodes /bin/cc as compiler :(\nRUN ln -s /usr/bin/cc /bin/cc\nRUN cd WiggleTools && make\n\n# sambamba\nRUN wget -q https://github.com/biod/sambamba/releases/download/v0.6.7/sambamba_v0.6.7_linux.tar.bz2\nRUN tar xvjf sambamba_v0.6.7_linux.tar.bz2 && rm sambamba_v0.6.7_linux.tar.bz2\n\n#ENV PATH=$PATH:/augustus/bin:/augustus/scripts:/hal/bin:/WiggleTools/bin:/\n#ENV LD_LIBRARY_PATH=/libBigWig:$LD_LIBRARY_PATH\n\n# Slimmer final Docker image\n\nFROM ubuntu:18.04\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget bedtools bamtools samtools sqlite3 python-pip libgsl0-dev libcolamd2 && rm -rf /var/lib/apt/lists/*;\n# Kent\nRUN for i in wigToBigWig faToTwoBit gff3ToGenePred genePredToBed genePredToFakePsl bamToPsl transMapPslToGenePred pslPosTarget axtChain chainMergeSort pslMap pslRecalcMatch pslMapPostChain gtfToGenePred genePredToGtf bedtools pslCheck pslCDnaFilter clusterGenes pslToBigPsl bedSort bedToBigBed; do wget -q https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/$i -O /bin/$i; chmod +x /bin/$i ;done\nRUN wget -q https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat -O /bin/blat; chmod +x /bin/blat\n\nCOPY --from=builder /hal/bin/* /bin/\nCOPY --from=builder /sambamba /bin/\nCOPY --from=builder /augustus/bin/* /bin/\nCOPY --from=builder /augustus/scripts/* /bin/\nCOPY --from=builder /WiggleTools/bin/* /bin/\n\nRUN mkdir -p /augustus\nCOPY --from=builder /augustus/config /augustus/config\n\n# Python deps\nRUN pip install --no-cache-dir bd2k-python-lib toil[all] pyfasta numpy matplotlib==2.0.2\n\nENV AUGUSTUS_CONFIG_PATH=/augustus/config/\n"
}