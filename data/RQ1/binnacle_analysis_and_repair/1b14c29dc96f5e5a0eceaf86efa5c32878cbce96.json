{
  "startTime": 1674243674364,
  "endTime": 1674243674635,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1-alpine\n\nENV version 0.2.2\n\n# install govendor and fpm\nRUN apk add --no-cache --quiet \\\n    ruby \\\n    ruby-dev \\\n    gcc \\\n    libffi-dev \\\n    make \\\n    libc-dev \\\n    rpm \\\n    govendor \\\n    git \\\n    tar \\\n    && gem install --quiet --no-ri --no-rdoc fpm\n\n# create volume for files and directories to be served by Goup\nRUN mkdir /data\nVOLUME /data\n\n# build Goup\nENV tarball_name goup_${version}_64-bit\nRUN mkdir /${tarball_name}\nRUN mkdir /go/src/goup\nWORKDIR /go/src/goup\nCOPY . /go/src/goup\nRUN govendor sync\nENV GOOS linux\nENV GOARCH amd64\nENV CGO_ENABLED 0\nRUN go build -o /${tarball_name}/goup -ldflags \"-X main.VERSION=${version}\" -v .\n\n# create packages\nRUN mkdir /builds\nWORKDIR /builds\nRUN cp /${tarball_name}/goup .\nENV PATH /builds:${PATH}\nRUN tar -czf ${tarball_name}.tar.gz /${tarball_name}/goup && rm ${tarball_name}.tar.gz\nRUN fpm -s dir -t deb --name goup --version ${version} /${tarball_name}/goup=/usr/local/bin/goup\nRUN fpm -s dir -t rpm --name goup --version ${version} /${tarball_name}/goup=/usr/local/bin/goup\n\nEXPOSE 4000\n\nCMD [\"goup\", \"-dir\", \"/data\"]\n"
}