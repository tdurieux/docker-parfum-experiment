{
  "startTime": 1674235869586,
  "endTime": 1674235869689,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 44,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 44,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## TissueMiner and Rstudio server setup on Ubuntu\n# Inspired from https://github.com/rocker-org/rocker\n# 486a544e072d\n## see https://www.digitalocean.com/community/tutorials/docker-explained-using-dockerfiles-to-automate-building-of-images\n# https://docs.docker.com/articles/dockerfile_best-practices/\n# see https://registry.hub.docker.com/u/rocker/shiny/dockerfile/\n\n\n#FROM ubuntu:14.04\nFROM rocker/rstudio\n\nMAINTAINER \"Raphael Etournay and Holger Brandl\" brandl@mpi-cbg.de\n\n#LABEL Description=\"TM rstudio server\" TMversion=\"1.1\"\n\n## security updates for ubuntu and install curl and wget\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y curl wget && rm -rf /var/lib/apt/lists/*;\n\n## install TM dependencies without cloning the repository. This allows for a more efficient use of the docker build cache\nRUN /bin/bash -c \"source <(curl https://raw.githubusercontent.com/mpicbg-scicomp/tissue_miner/master/installation/ubuntu/install_dependencies.sh | sed 's/sudo//g')\"  ## bump2\n\n\n## clone TM locally and compile the parser needed to convert TissueAnalyzer outputs into csv\nRUN mkdir /tissue_miner && git clone https://github.com/mpicbg-scicomp/tissue_miner /tissue_miner \\\n\t&& cd /tissue_miner/parser && make\n\n\n## Set up a rstudio user.\n## Add user to 'rstudio' group, granting them write privileges to /usr/local/lib/R/site.library\n## User should also have & own a home directory (for rstudio or linked volumes to work properly).\n#RUN useradd rstudio \\\n#\t&& mkdir /home/rstudio \\\n#\t&& chown rstudio:rstudio /home/rstudio \\\n#\t&& addgroup rstudio staff\n\n\n## Install additional required R packages and additional packages for Rstudio in rstudio user space (Rmd, etc...)\nRUN /bin/bash -c \"export TM_HOME='/tissue_miner'; su rstudio -c /tissue_miner/Setup.R && /tissue_miner/misc/rstudio_TM_docker_image/RstudioSetup.R\"\n\n## Set up R and bash environments\nCOPY rocker_Renviron /home/rstudio/.Renviron\n#COPY rocker_Rprofile /home/rstudio/.Rprofile\nCOPY docker_bash_profile.sh /home/rstudio/.bash_profile\n\n\n## Configure default locale, see https://github.com/rocker-org/rocker/issues/19\n#RUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n#\t&& locale-gen en_US.utf8 \\\n#\t&& /usr/sbin/update-locale LANG=en_US.UTF-8\n#\n#ENV LC_ALL en_US.UTF-8\n#ENV LANG en_US.UTF-8\n#ENV PATH /usr/lib/rstudio-server/bin/:$PATH\n\n\n## Download and install RStudio server & dependencies\n## Attempts to get detect latest version, otherwise falls back to version given in $VER\n#RUN apt-get update \\\n#&& apt-get install -y \\\n#libapparmor1 \\\n#libcurl4-openssl-dev \\\n#psmisc \\\n#python-setuptools \\\n#libedit2\n\n#RUN VER=$(wget --no-check-certificate -qO- https://s3.amazonaws.com/rstudio-server/current.ver) \\\n#&& wget -q http://download2.rstudio.org/rstudio-server-${VER}-amd64.deb \\\n#&& dpkg -i rstudio-server-${VER}-amd64.deb \\\n#&& rm rstudio-server-*-amd64.deb \\\n#&& ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin \\\n#&& ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin \\\n#&& wget https://github.com/jgm/pandoc-templates/archive/1.15.0.6.tar.gz \\\n#&& mkdir -p /opt/pandoc/templates && tar zxf 1.15.0.6.tar.gz \\\n#&& cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \\\n#&& mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates\n\n\n## Ensure that if both httr and httpuv are installed downstream, oauth 2.0 flows still work correctly.\n#RUN echo '\\n\\\n#\\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST \\\n#\\n# is not set since a redirect to localhost may not work depending upon \\\n#\\n# where this Docker container is running. \\\n#\\nif(is.na(Sys.getenv(\"HTTR_LOCALHOST\", unset=NA))) { \\\n#\\n  options(httr_oob_default = TRUE) \\\n#\\n}' >> /etc/R/Rprofile.site\n\n#RUN wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz \\\n#  && tar xzf /tmp/s6-overlay-amd64.tar.gz -C /\n\n## Clean up installations\nRUN apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n\n#COPY userconf.sh /etc/cont-init.d/conf\n#COPY run_rstudio_server.sh /etc/services.d/rstudio/run\n\nEXPOSE 8787\n\n## Source .bash_profile when running the container to setup ENV variables\nCOPY docker_entrypoint.sh /home/rstudio/\nENTRYPOINT [\"/home/rstudio/docker_entrypoint.sh\"]\n\n## Start RStudio server\nCMD [\"/init\"]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n############# DROPPED OPTIONS #############\n\n### http://stackoverflow.com/questions/20635472/using-the-run-instruction-in-a-dockerfile-with-source-does-not-work\n#RUN /bin/bash -c \"export TM_HOME='/tissue_miner'; source /tissue_miner/installation/ubuntu/install_tm.sh\"\n\n## install virtual xserver because imageParser needs it\n# run without x https://linuxmeerkat.wordpress.com/2014/10/17/running-a-gui-application-in-a-docker-container/\n#RUN apt-get install -y xvfb\n\n#USER rstudio # prevents rstudio server from starting\n\n\n"
}