{
  "startTime": 1674234604554,
  "endTime": 1674234604874,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 50,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM clojure:onbuild\n\nWORKDIR /tmp\n\nENV WATCHMAN_VERSION=4.5.0\n\nRUN apt-get update && apt-get install --no-install-recommends -y autogen autoconf make gcc python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget --quiet https://github.com/facebook/watchman/archive/v$WATCHMAN_VERSION.tar.gz -O /tmp/watchman-v$WATCHMAN_VERSION.tar.gz \\\n    && tar -C /tmp/ -zxf watchman-v$WATCHMAN_VERSION.tar.gz \\\n    && cd /tmp/watchman-4.5.0/ && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm watchman-v$WATCHMAN_VERSION.tar.gz\n\nENV PATH $PATH:node_modules/.bin\n\nRUN wget -qO- https://deb.nodesource.com/setup_4.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g react-native-cli re-natal && npm cache clean --force;\n\n# Install 32bit support for Android SDK\nRUN dpkg --add-architecture i386 && \\\n    apt-get update -q && \\\n    apt-get install -qy --no-install-recommends libstdc++6:i386 libgcc1:i386 zlib1g:i386 libncurses5:i386 && rm -rf /var/lib/apt/lists/*;\n\n##\n## Install Android SDK\n##\n# Set correct environment variables.\nENV ANDROID_SDK_FILE android-sdk_r24.0.1-linux.tgz\nENV ANDROID_SDK_URL http://dl.google.com/android/$ANDROID_SDK_FILE\n\n# # Install Android SDK\nENV ANDROID_HOME /usr/local/android-sdk-linux\nRUN cd /usr/local && \\\n    wget $ANDROID_SDK_URL && \\\n    tar -xzf $ANDROID_SDK_FILE && \\\n    export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools && \\\n    chgrp -R users $ANDROID_HOME && \\\n    chmod -R 0775 $ANDROID_HOME && \\\n    rm $ANDROID_SDK_FILE\n\nENV PATH $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/23.0.1\n\n# --- Install Android SDKs and other build packages\n\n# Other tools and resources of Android SDK\n#  you should only install the packages you need!\n# To get a full list of available options you can use:\n#  android list sdk --no-ui --all --extended\n# (!!!) Only install one package at a time, as \"echo y\" will only work for one license!\n#       If you don't do it this way you might get \"Unknown response\" in the logs,\n#         but the android SDK tool **won't** fail, it'll just **NOT** install the package.\nRUN echo y | android update sdk --no-ui --all --filter platform-tools\nRUN echo y | android update sdk --no-ui --all --filter extra-android-support\n\n# google apis\n# Please keep these in descending order!\nRUN echo y | android update sdk --no-ui --all --filter addon-google_apis-google-23\n\n# SDKs\n# Please keep these in descending order!\nRUN echo y | android update sdk --no-ui --all --filter android-23\n\n# build tools\n# Please keep these in descending order!\nRUN echo y | android update sdk --no-ui --all --filter build-tools-23.0.1\n\n# Android System Images, for emulators\n# Please keep these in descending order!\nRUN echo y | android update sdk --no-ui --all --filter sys-img-x86_64-android-23\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-23\n# Extras\nRUN echo y | android update sdk --no-ui --all --filter extra-android-m2repository\nRUN echo y | android update sdk --no-ui --all --filter extra-google-m2repository\nRUN echo y | android update sdk --no-ui --all --filter extra-google-google_play_services\n\nRUN echo y | android update sdk --no-ui --all --filter tools\n\n# Create emulator\nRUN echo \"no\" | android create avd \\\n                --force \\\n                --name test \\\n                --target android-23 \\\n                --abi armeabi-v7a \\\n                --skin WVGA800 \\\n                --sdcard 512M\n\n# Support Gradle\nENV TERM dumb\nENV JAVA_OPTS -Xms256m -Xmx512m\n\nENV GRADLE_USER_HOME /usr/src/app/android/gradle_deps\n\nWORKDIR /usr/src/app\n\nCMD [\"lein\", \"run\"]\n"
}