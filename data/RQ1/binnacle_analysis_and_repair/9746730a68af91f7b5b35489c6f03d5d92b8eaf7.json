{
  "startTime": 1674248463795,
  "endTime": 1674248463940,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# Enable production settings by default; for development, this can be set to\n# `false` in `docker run --env`\nENV DJANGO_PRODUCTION=true\n\n# Set terminal to be noninteractive\nENV DEBIAN_FRONTEND noninteractive\n\n# Enable MySQL root user creation without interactive input\nRUN echo 'mysql-server mysql-server/root_password password devrootpass' | debconf-set-selections\nRUN echo 'mysql-server mysql-server/root_password_again password devrootpass' | debconf-set-selections\n\n# Install packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    libmysqlclient-dev \\\n    mysql-server \\\n    nginx \\\n    python-dev \\\n    python-mysqldb \\\n    python-setuptools \\\n    supervisor \\\n    vim && rm -rf /var/lib/apt/lists/*;\nRUN easy_install pip\n\n# Handle urllib3 InsecurePlatformWarning\nRUN apt-get install --no-install-recommends -y libffi-dev libssl-dev libpython2.7-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir urllib3[security] requests[security] ndg-httpsclient pyasn1\n\n# Configure Django project\nADD . /code\nRUN mkdir /djangomedia\nRUN mkdir /static\nRUN mkdir /logs\nRUN mkdir /logs/nginx\nRUN mkdir /logs/gunicorn\nWORKDIR /code\nRUN pip install --no-cache-dir -r requirements.txt\nRUN chmod ug+x /code/initialize.sh\n\n# Expose ports\n# 80 = Nginx\n# 8000 = Gunicorn\n# 3306 = MySQL\nEXPOSE 80 8000 3306\n\n# Configure Nginx\nRUN ln -s /code/nginx.conf /etc/nginx/sites-enabled/django_docker.conf\nRUN rm /etc/nginx/sites-enabled/default\n\n# Run Supervisor (i.e., start MySQL, Nginx, and Gunicorn)\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCMD [\"/usr/bin/supervisord\"]\n"
}