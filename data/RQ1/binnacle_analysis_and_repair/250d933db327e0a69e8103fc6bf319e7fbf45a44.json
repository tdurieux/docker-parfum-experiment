{
  "startTime": 1674242488081,
  "endTime": 1674242488350,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2018.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n############################ Dockerfile for Logstash v6.2.4 with netty-tcnative v2.0.7.Final ###################################################\n#\n# This Dockerfile builds a basic installation of Logstash\n#\n# Logstash is a tool for managing events and logs. When used generically the term\n# encompasses a larger system of log collection, processing, storage and searching activities.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# Start Logstash using the below command\n# docker run --name <container name> -v <path_on_host>/logstash.conf:/etc/logstash/logstash.conf -d <logstash_image>\n#\n# To include SSL support, build netty-tcnative. This can be verified with below sample input.txt file.\n# docker run --name <container name>  -v <host_path>/input.txt:/etc/logstash/logstash.conf -d <logstash_image>\n#\n########################### Sample input.txt ######################################\n#\tinput {\n#                                 beats {\n#                                 port => 5044\n#                                 ssl => true\n#                                 ssl_certificate_authorities => [\"/etc/ca.crt\"]\n#                                 ssl_certificate => \"/etc/server.crt\"\n#                                 ssl_key => \"/etc/server.key\"\n#                                 ssl_verify_mode => \"force_peer\"\n#                                 }\n#                               }\n########################################################################################\n\n# Base image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nWORKDIR \"/root\"\nENV JAVA_HOME=/root/jdk8u162-b12_openj9-0.8.0/\nENV PATH=/usr/share/logstash/bin:$JAVA_HOME/bin:$PATH\nENV LD_LIBRARY_PATH=/root/netty-tcnative/boringssl-static/target/native-build/.libs/:/root/netty-tcnative/libressl-static/target/native-build/.libs/:/root/netty-tcnative/openssl-static/target/native-build/.libs/:/root/netty-tcnative/openssl-dynamic/target/native-build/.libs/:/root/jffi-jffi-1.2.16/build/jni/:$LD_LIBRARY_PATH\n\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ant \\\n\tautoconf \\\n\tautomake \\\n\tcmake \\\n    gcc \\\n\tgit \\\n\tgolang \\\n\tlibapr1-dev \\\n\tlibssl-dev \\\n\tlibtool \\\n    make \\\n\tmaven \\\n\tninja-build \\\n\tperl \\\n    tar \\\n    unzip \\\n    wget \\\n\n# Download OpenJDK8 with Eclipse OpenJ9\n && wget https://github.com/AdoptOpenJDK/openjdk8-openj9-releases/releases/download/jdk8u162-b12_openj9-0.8.0/OpenJDK8-OPENJ9_s390x_Linux_jdk8u162-b12_openj9-0.8.0.tar.gz \\\n && tar -xvf OpenJDK8-OPENJ9_s390x_Linux_jdk8u162-b12_openj9-0.8.0.tar.gz \\\n\n# Download the logstash source from github and build it\n && wget https://artifacts.elastic.co/downloads/logstash/logstash-6.2.4.zip \\\n && unzip -u logstash-6.2.4.zip \\\n && wget https://github.com/jnr/jffi/archive/jffi-1.2.16.zip \\\n && unzip -u jffi-1.2.16.zip \\\n && cd jffi-jffi-1.2.16 \\\n && ant \\\n && cd .. \\\n && cp -r /root/logstash-6.2.4 /usr/share/logstash \\\n\n# Download and install Netty-tcnative\n && git clone https://github.com/netty/netty-tcnative.git \\\n && cd netty-tcnative \\\n && git checkout netty-tcnative-parent-2.0.7.Final \\\n\n# Apply required patches for s390x support\n && sed -i '209d' openssl-static/pom.xml \\\n && sed -i '208a\\\\t\\t\\t<arg line=\"xfvz ${project.build.directory}/old/1.0.2/openssl-${opensslVersion}.tar.gz\" />' openssl-static/pom.xml \\\n && mvn install -DskipTests 2 >&1 | tee build.log \\\n && sed -i '338a\\elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL \"s390x\")' boringssl-static/target/boringssl-chromium-stable/CMakeLists.txt \\\n && sed -i '339a\\  set(ARCH \"s390x\")' boringssl-static/target/boringssl-chromium-stable/CMakeLists.txt \\\n && sed -i '108a\\#elif defined(__s390x__)' boringssl-static/target/boringssl-chromium-stable/include/openssl/base.h \\\n && sed -i '109a\\#define OPENSSL_64_BIT' boringssl-static/target/boringssl-chromium-stable/include/openssl/base.h \\\n && mvn install -DskipTests \\\n\n# Cleanup Cache data , unused packages and source files\n && apt-get remove -y \\\n    ant \\\n\tautoconf \\\n\tautomake \\\n\tcmake \\\n    gcc \\\n\tgit \\\n    make \\\n\tmaven \\\n    unzip \\\n    wget \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /root/logstash-6.2.4 \\\n && rm /root/logstash-6.2.4.zip \\\n && rm /root/jffi-1.2.16.zip \\\n && rm -rf /var/lib/apt/lists/* && rm OpenJDK8-OPENJ9_s390x_Linux_jdk8u162-b12_openj9-0.8.0.tar.gz\n\n# Define mountable directory\nVOLUME [\"/data\"]\n\n# Expose ports\nEXPOSE 514 5043 5000 9292\n\nCMD [\"logstash\", \"-f\", \"/etc/logstash/logstash.conf\"]\n# End of Dockerfile\n"
}