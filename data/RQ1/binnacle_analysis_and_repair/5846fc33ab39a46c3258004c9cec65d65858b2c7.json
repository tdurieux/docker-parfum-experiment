{
  "startTime": 1674234063286,
  "endTime": 1674234063591,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM appsvcorg/nginx-fpm:php7.2.11\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n# ========\n# ENV vars\n# ========\n#\nENV DOCKER_BUILD_HOME \"/dockerbuild\"\n# drupal\nENV DRUPAL_HOME \"/home/site/wwwroot\"\n# mariadb\nENV MARIADB_DATA_DIR \"/home/data/mysql\"\nENV MARIADB_LOG_DIR \"/home/LogFiles/mysql\"\n# phpmyadmin\nENV PHPMYADMIN_SOURCE \"/usr/src/phpmyadmin\"\nENV PHPMYADMIN_HOME \"/home/phpmyadmin\"\n#nginx\nENV NGINX_LOG_DIR \"/home/LogFiles/nginx\"\n#php\nENV PHP_HOME \"/usr/local/etc/php\"\nENV PHP_CONF_DIR $PHP_HOME\nENV PHP_CONF_FILE $PHP_CONF_DIR\"/php.ini\"\n# Composer\n# Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL \"https://getcomposer.org/installer\"\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_HOME /home/.composer\nENV COMPOSER_VERSION \"1.6.1\"\n# SHA384SUM https://composer.github.io/installer.sha384sum\nENV COMPOSER_SETUP_SHA 544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061\n# ====================\n# Download and Install\n# ~. essentials\n# 1. Drupal\n# ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\n# --------\n# ~. essentials\n# --------\nRUN set -ex \\\n    && apk update \\\n    && apk add --no-cache \\\n# --------\n# ~. PHP extensions\n# --------\n# install the PHP extensions we need\n# postgresql-dev is needed for https://bugs.alpinelinux.org/issues/3642\n    && docker-php-source extract \\\n    && apk add --no-cache                  \\\n            --virtual .build-dependencies   \\\n                $PHPIZE_DEPS                \\\n                zlib-dev                    \\\n                cyrus-sasl-dev              \\\n                git                         \\\n                autoconf                    \\\n                g++                         \\\n                libtool                     \\\n                make                        \\\n                pcre-dev                    \\    \n            tini                            \\\n            libintl                         \\\n            icu                             \\\n            icu-dev                         \\\n            libxml2-dev                     \\\n            postgresql-dev                  \\\n            freetype-dev                    \\\n            libjpeg-turbo-dev               \\\n            libpng-dev                      \\\n            gmp                             \\\n            gmp-dev                         \\\n            libmemcached-dev                \\\n            imagemagick-dev                 \\\n            libssh2                         \\\n            libssh2-dev                     \\\n            libxslt-dev                     \\\t\t                  \n\t&& docker-php-ext-configure gd \\\n\t\t--with-freetype-dir=/usr/include/ \\\n\t\t--with-jpeg-dir=/usr/include/ \\\n\t\t--with-png-dir=/usr/include/ \\\n\t&& docker-php-ext-install -j \"$(nproc)\" \\\n\t\tgd \\\n\t\topcache \\\n\t\tpdo_mysql \\\n\t\tpdo_pgsql \\\n\t\tzip \\\t\t\n\t&& pecl install apcu \\\n\t&& docker-php-ext-enable apcu \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n\t&& apk del .build-dependencies \\\t\n\t&& docker-php-source delete \\\n# -------------\n# 1. Drupal\n# -------------\n# Install by Git\n# ----------\n# 2. composer\n# ----------\nRUN set -ex \\\n\t&& curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n\t&& composer self-update \\\n# ----------\n# 3. drush\n# ----------\n    && rm -rf /home/.composer && export COMPOSER_HOME='/root/.composer/' \\\n    && composer global require consolidation/cgr \\\n\t&& composer_home=$(find / -name .composer) \\\n    && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n\t&& cgr drush/drush \\\n    && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n# ----------\n# ~. clean up\n# ----------\n\t&& apk update \\\n\t&& apk upgrade \\\n\t&& rm -rf /var/cache/apk/*\n# =========\n# Configure\n# =========\nWORKDIR $DRUPAL_HOME\nRUN rm -rf $DOCKER_BUILD_HOME\n# nginx\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\n# php\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY www.conf /usr/local/etc/php/conf.d/www.conf\nCOPY zz-docker.conf /usr/local/etc/php-fpm.d/zz-docker.conf\n# phpmyadmin\nCOPY phpmyadmin-default.conf $PHPMYADMIN_SOURCE/phpmyadmin-default.conf\n# =====\n# final\n# =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222 80\nENTRYPOINT [\"entrypoint.sh\"]\n"
}