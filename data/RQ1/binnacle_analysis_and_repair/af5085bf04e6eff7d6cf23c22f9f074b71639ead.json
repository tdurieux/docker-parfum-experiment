{
  "startTime": 1674252567710,
  "endTime": 1674252567842,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 47,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 47,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3\n\n#\n# Dev-version adds ssh-server for Pycharm's remote interpretier feature\n#   You should have ~/.ssh/id_rsa.pub public key to access container by ssh\n#\n#\n\n# Prepare os libs\nRUN apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n    python-dev python-setuptools python-pip \\\n    git-core \\\n    openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN apt-get autoremove -y\n\n# upgrade pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# Prepare app specific modules\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\nRUN rm /tmp/requirements.txt\n\n# Prepare app-dev specific modules\nCOPY requirements-dev.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\nRUN rm /tmp/requirements.txt\n\n# Prepare initial\nCOPY deploy/django/entrypoint.sh /bin/entrypoint.sh\nRUN chmod 700 /bin/entrypoint.sh\n\n# Prepare dir for sshd\nRUN mkdir -p /var/run/sshd\n\n# Prepare key-based login to ssd (by copying local ~/.ssh/id_rsa.pub in ./dc.sh script)\nRUN mkdir -p /root/.ssh\nRUN chmod 700 /root/.ssh\nCOPY ./deploy/django/id_rsa.pub /root/.ssh/authorized_keys\nRUN echo \"PermitRootLogin yes\" >> /etc/ssh/sshd_config\n\n# Static and media dir to expose out container onto nginx-service\nRUN mkdir -p /static /media\nENV DJANGO_STATIC_ROOT=\"/static\"\nENV DJANGO_MEDIA_ROOT=\"/media\"\n\n# Prepare user\nRUN useradd -u 33 www-data | true\nRUN chown -R www-data /media\n\n# Prepare code dir\nRUN mkdir -p /code\nENV PYTHONPATH=\"${PYTHONPATH}:/code\"\nWORKDIR /code\n\n# Prepare ports\n# django\nEXPOSE 8000\n# ssh\nEXPOSE 22\n\nENTRYPOINT [\"/bin/entrypoint.sh\"]\n"
}