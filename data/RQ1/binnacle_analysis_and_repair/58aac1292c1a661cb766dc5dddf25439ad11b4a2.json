{
  "startTime": 1674240902297,
  "endTime": 1674240902790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 15,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n# Inspired by:\n# https://hub.docker.com/r/runmymind/docker-android-sdk/~/dockerfile/\n\nFROM ubuntu:17.10\n\nMAINTAINER Sebastian Kaspari \"skaspari@mozilla.com\"\n\n# -- System -----------------------------------------------------------------------------\n\nRUN apt-get update -qq\n\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk \\\n\t\t\t\t\t\t\t\twget \\\n\t\t\t\t\t\t\t\texpect \\\n\t\t\t\t\t\t\t\tgit \\\n\t\t\t\t\t\t\t\tcurl \\\n\t\t\t\t\t\t\t\truby \\\n\t\t\t\t\t\t\t\truby-dev \\\n\t\t\t\t\t\t\t\truby-build \\\n\t\t\t\t\t\t\t\tpython \\\n\t\t\t\t\t\t\t\tpython-pip \\\n\t\t\t\t\t\t\t\toptipng \\\n\t\t\t\t\t\t\t\timagemagick \\\n\t\t\t\t\t\t\t\tlocales && rm -rf /var/lib/apt/lists/*;\nRUN gem install fastlane\n\nRUN locale-gen en_US.UTF-8\n\n# -- Android SDK ------------------------------------------------------------------------\n\nRUN cd /opt && wget -q https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz -O android-sdk.tgz\nRUN cd /opt && tar -xvzf android-sdk.tgz && rm android-sdk.tgz\nRUN cd /opt && rm -f android-sdk.tgz\n\nENV ANDROID_SDK_HOME /opt/android-sdk-linux\nENV ANDROID_HOME /opt/android-sdk-linux\nENV PATH ${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools:/opt/tools:${ANDROID_SDK_HOME}/build-tools/28.0.3\n\n# Platform tools\nRUN echo y | android update sdk --no-ui --all --filter platform-tools | grep 'package installed'\n\n# Android 8.0 / SDK 26\nRUN echo y | android update sdk --no-ui --all --filter android-26 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-27 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter android-28 | grep 'package installed'\n\n# Build tools 26.0.1\nRUN echo y | android update sdk --no-ui --all --filter build-tools-26.0.1 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-27.0.3 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.2 | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter build-tools-28.0.3 | grep 'package installed'\n\n# Extras\nRUN echo y | android update sdk --no-ui --all --filter extra-android-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-m2repository | grep 'package installed'\nRUN echo y | android update sdk --no-ui --all --filter extra-google-google_play_services | grep 'package installed'\n\n# Copy tools from our repository into the docker image\nCOPY tools /opt/tools\n\n# Accept licenses\nCOPY licenses ${ANDROID_SDK_HOME}/licenses\n\n# -- Emulator ---------------------------------------------------------------------------\n\n# Android 5.0 / SDK 21\nRUN echo y | android update sdk --no-ui --all --filter android-21 | grep 'package installed'\n\n# Emulator image\nRUN echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21 | grep 'package installed'\n\n# Create emulator AVD\nRUN echo no | android create avd -f -n test -t android-21 --abi default/armeabi-v7a --skin 480x800\n\n# Create fake keymap file (Otherwise the emulator won't start up)\nRUN mkdir /opt/android-sdk-linux/tools/keymaps && \\\n    touch /opt/android-sdk-linux/tools/keymaps/en-us\n\n# -- Update SDK -------------------------------------------------------------------------\n\n# Update SDK\nRUN /opt/tools/android-accept-licenses.sh android update sdk --no-ui --obsolete --force\n\n# -- Project setup ----------------------------------------------------------------------\n\nWORKDIR /opt\n\n# Checkout source code\nRUN git clone https://github.com/mozilla-mobile/focus-android.git\n\n# Build project and run gradle tasks once to pull all dependencies\nWORKDIR /opt/focus-android\nRUN ./gradlew --no-daemon assemble testFocusX86DebugUnitTest lint pmd checkstyle spotbugs detektCheck ktlint\n\n# -- Post setup -------------------------------------------------------------------------\n\n# Install dependencies needed to run Android2Po\nRUN pip install --no-cache-dir -r tools/l10n/android2po/requirements.txt\n\n# Install taskcluster python library (used by decision tasks)\n# 5.0.0 is still incompatible with taskclusterProxy, meaning no decision task is able\n# to schedule the rest of the Taskcluster tasks. Please upgrade to taskcluster>=5 once\n# https://bugzilla.mozilla.org/show_bug.cgi?id=1460015 is fixed\nRUN pip install --no-cache-dir 'taskcluster>=4,<5'\nRUN pip install --no-cache-dir arrow\n\n# Install Google Cloud SDK for using Firebase Device Lab\nRUN curl -f https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-184.0.0-linux-x86_64.tar.gz --output /gcloud.tar.gz\nRUN tar -xvf /gcloud.tar.gz -C / && rm /gcloud.tar.gz\nRUN /google-cloud-sdk/install.sh --quiet\nRUN /google-cloud-sdk/bin/gcloud --quiet components update\n\n# Needed for verifying cyclic redundancy check (CRC) headers (Google Cloud SDK)\nRUN apt-get install -y --no-install-recommends gcc python-dev python-setuptools && rm -rf /var/lib/apt/lists/*;\nRUN easy_install -U pip\nRUN pip install --no-cache-dir -U crcmod\n\n# -- Cleanup ----------------------------------------------------------------------------\n\nRUN apt-get clean\n"
}