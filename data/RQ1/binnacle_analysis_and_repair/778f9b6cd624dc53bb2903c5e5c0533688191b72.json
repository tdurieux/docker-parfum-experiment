{
  "startTime": 1674250758045,
  "endTime": 1674250758342,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 10,
        "columnEnd": 531
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 190
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD INSTRUCTIONS & README\n# POST HERE: https://blog.obscuritylabs.com/docker-command-controll-c2/\n#   1) docker build --build-arg cskey=\"xxxx-xxxx-xxxx-xxxx\" -t cobaltstrike/cs .\n#   2) docker run -d -p 192.168.2.238:50050:50050 cobaltstrike/cs 192.168.2.238 password\n#      - This runs docker in Detached mode, to tshoot issues or see logs do the following\n#   3) docker logs -f {docker ps -> CONTAINER ID}\n#      - Example: docker logs -f 38830d90537f\n#    NOTE: you can eaily name the docker like so as well:\n#      - docker run -d -p 192.168.2.238:50050:50050 --name \"war_games\"  cobaltstrike/cs 192.168.2.238 password\n#      - docker logs -f \"war_games\"\n#      - To kill CS: docker kill war_games\n#    NOTE: to go interactive we need to bypass the ENTRYPOINT\n#      - docker run -ti --entrypoint \"\" cobaltstrike/cs bash\nFROM ubuntu:16.04\n\n# Dockerfile metadata\nMAINTAINER Killswitch-GUI\nLABEL version=\"1.0\"\nLABEL description=\"Dockerfile base for CobaltStrike.\"\n\n# setup local env\nARG cskey\nENV cs_key ${cskey}\nENV JAVA_HOME /opt/jdk-10.0.2\nENV PATH $PATH:$JAVA_HOME/bin\n\n# docker hardcoded sh...\nSHELL [\"/bin/bash\", \"-c\"]\n\n# install proper tools\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget curl net-tools sudo && rm -rf /var/lib/apt/lists/*;\n\n# install oracle jave\nRUN cd /opt && \\\n    wget -c --header 'Cookie: oraclelicense=accept-securebackup-cookie' https://download.oracle.com/otn-pub/java/jdk/10.0.2+13/19aef61b38124481863b1413dce1855f/jdk-10.0.2_linux-x64_bin.tar.gz && \\\n    tar xvf jdk-10.0.2_linux-x64_bin.tar.gz && \\\n    cd jdk-10.0.2 && \\\n    source /etc/bash.bashrc && \\\n    sudo update-alternatives --install '/usr/bin/java' 'java' '/opt/jdk-10.0.2/bin/java' 1 && \\\n    sudo update-alternatives --install '/usr/bin/javac' 'javac' '/opt/jdk-10.0.2/bin/javac' 1 && \\\n    sudo update-alternatives --set 'java' '/opt/jdk-10.0.2/bin/java' && \\\n    sudo update-alternatives --set 'javac' '/opt/jdk-10.0.2/bin/javac' && rm jdk-10.0.2_linux-x64_bin.tar.gz\n\n# install CobaltStrike with license key and update\nRUN var=$( curl -f 'https://www.cobaltstrike.com/download' -XPOST -H 'Referer: https://www.cobaltstrike.com/download' -H -H -H -H -H -H -H --data \"dlkey=$cs_key\" | sed -n 's/.*href=\"\\([^\"]*\\).*/\\1/p' | grep /downloads/ | cut -d '.' -f 1) && \\\n    cd /opt && \\\n    wget https://www.cobaltstrike.com$var.tgz && \\\n    tar xvf cobaltstrike-trial.tgz && \\\n    cd cobaltstrike && \\\n    echo $cs_key > ~/.cobaltstrike.license && \\\n    ./update && rm cobaltstrike-trial.tgz\n\n# cleanup image\nRUN apt-get -y clean && \\\n    apt-get -y autoremove\n\n# set entry point\nWORKDIR \"/opt/cobaltstrike\"\nENTRYPOINT [\"./teamserver\"]\n"
}