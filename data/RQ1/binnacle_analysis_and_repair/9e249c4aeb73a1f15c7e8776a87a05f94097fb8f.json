{
  "startTime": 1674248136046,
  "endTime": 1674248136256,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\n# Based on https://github.com/tatsushid/docker-alpine-py3-tensorflow-jupyter/blob/master/Dockerfile\n# Changes:\n# - Bumping versions of Bazel and Tensorflow\n# - Add -Xmx to the Java params when building Bazel\n# - Disable TF_GENERATE_BACKTRACE and TF_GENERATE_STACKTRACE\n\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV LOCAL_RESOURCES 2048,.5,1.0\nENV BAZEL_VERSION 0.10.0\nRUN apk add --no-cache python3 python3-tkinter py3-numpy py3-numpy-f2py freetype libpng libjpeg-turbo imagemagick graphviz git\nRUN apk add --no-cache --virtual=.build-deps \\\n        bash \\\n        cmake \\\n        curl \\\n        freetype-dev \\\n        g++ \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        linux-headers \\\n        make \\\n        musl-dev \\\n        openblas-dev \\\n        openjdk8 \\\n        patch \\\n        perl \\\n        python3-dev \\\n        py-numpy-dev \\\n        rsync \\\n        sed \\\n        swig \\\n        zip \\\n    && cd /tmp \\\n    && pip3 install --no-cache-dir wheel \\\n    && $(cd /usr/bin && ln -s python3 python)\n\n# Bazel download\nRUN curl -f -SLO https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n    && mkdir bazel-${BAZEL_VERSION} \\\n    && unzip -qd bazel-${BAZEL_VERSION} bazel-${BAZEL_VERSION}-dist.zip\n\n# Bazel install\nRUN cd bazel-${BAZEL_VERSION} \\\n    && sed -i -e 's/-classpath/-J-Xmx8192m -J-Xms128m -classpath/g' scripts/bootstrap/compile.sh \\\n    && bash compile.sh \\\n    && cp -p output/bazel /usr/bin/\n\n# Download Tensorflow\nENV TENSORFLOW_VERSION 1.7.0\nRUN cd /tmp \\\n    && curl -f -SL https://github.com/tensorflow/tensorflow/archive/v${TENSORFLOW_VERSION}.tar.gz \\\n        | tar xzf -\n\n# Build Tensorflow\nRUN cd /tmp/tensorflow-${TENSORFLOW_VERSION} \\\n    && : musl-libc does not have \"secure_getenv\" function \\\n    && sed -i -e '/JEMALLOC_HAVE_SECURE_GETENV/d' third_party/jemalloc.BUILD \\\n    && sed -i -e '/define TF_GENERATE_BACKTRACE/d' tensorflow/core/platform/default/stacktrace.h \\\n    && sed -i -e '/define TF_GENERATE_STACKTRACE/d' tensorflow/core/platform/stacktrace_handler.cc \\\n    && PYTHON_BIN_PATH=/usr/bin/python \\\n        PYTHON_LIB_PATH=/usr/lib/python3.6/site-packages \\\n        CC_OPT_FLAGS=\"-march=native\" \\\n        TF_NEED_JEMALLOC=1 \\\n        TF_NEED_GCP=0 \\\n        TF_NEED_HDFS=0 \\\n        TF_NEED_S3=0 \\\n        TF_ENABLE_XLA=0 \\\n        TF_NEED_GDR=0 \\\n        TF_NEED_VERBS=0 \\\n        TF_NEED_OPENCL=0 \\\n        TF_NEED_CUDA=0 \\\n        TF_NEED_MPI=0 \\\n        bash configure\nRUN cd /tmp/tensorflow-${TENSORFLOW_VERSION} \\\n    && bazel build -c opt --local_resources ${LOCAL_RESOURCES} //tensorflow/tools/pip_package:build_pip_package\nRUN cd /tmp/tensorflow-${TENSORFLOW_VERSION} \\\n    && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nRUN cp /tmp/tensorflow_pkg/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl /root\n\n# Make sure it's built properly\nRUN pip3 install --no-cache-dir /root/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl \\\n    && python3 -c 'import tensorflow'\n"
}