{
  "startTime": 1674249041984,
  "endTime": 1674249042274,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 11,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 32,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.6.3-jessie\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nMAINTAINER Masashi Yoshikawa <yoshikawa.masashi.yh8@is.naist.jp>\n\n# Install Java\nRUN echo \"deb http://http.debian.net/debian jessie-backports main\" >>/etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y -t jessie-backports openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n# Install ccg2lambda specific dependencies\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y \\\n        ant \\\n        bc \\\n        coq=8.4pl4dfsg-1 \\\n        libxml2-dev \\\n        libxslt1-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir lxml simplejson pyyaml -I nltk==3.0.5 cython chainer==4.0.0\nRUN python -c \"import nltk; nltk.download('wordnet')\"\n\nWORKDIR /app\nADD . /app\n\n# Install C&C\nWORKDIR /app/parsers\nADD http://www.cl.cam.ac.uk/~sc609/resources/candc-downloads/candc-linux-1.00.tgz /app/parsers/candc-linux-1.00.tgz\nRUN tar xvf candc-linux-1.00.tgz && rm candc-linux-1.00.tgz\nWORKDIR /app/parsers/candc-1.00\nADD http://www.cl.cam.ac.uk/~sc609/resources/candc-downloads/models-1.02.tgz /app/parsers/candc-1.00/models-1.02.tgz\nRUN tar xvf models-1.02.tgz && \\\n    echo \"/app/parsers/candc-1.00\" >> /app/en/candc_location.txt && \\\n    echo \"candc:/app/parsers/candc-1.00\" >> /app/en/parser_location.txt && rm models-1.02.tgz\n\n# Install easyccg\nWORKDIR /app/parsers\nRUN git clone https://github.com/mikelewis0/easyccg\nWORKDIR /app/parsers/easyccg\nADD https://drive.google.com/uc?export=download&id=0B7AY6PGZ8lc-dUN4SDcxWkczM2M /app/parsers/easyccg/model.tar.gz\nRUN tar xvf model.tar.gz && echo \"easyccg:\"`pwd` >> /app/en/parser_location.txt && rm model.tar.gz\n\n# Install EasySRL\nRUN git clone https://github.com/uwnlp/EasySRL /app/parsers/EasySRL\nWORKDIR /app/parsers/EasySRL\n# Download model file (the ugly script is due to downloading the large file from Google Drive)\nRUN wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet \\\n    --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate \\\n    'https://docs.google.com/uc?export=download&id=0B7AY6PGZ8lc-R1E3aTA5WG54bWM' -O- | \\\n    sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=0B7AY6PGZ8lc-R1E3aTA5WG54bWM\" -O model.tar.gz 2> /dev/null && \\\n    rm -rf /tmp/cookies.txt\nRUN ant && tar xvf model.tar.gz && \\\n    echo \"easysrl:/app/parsers/EasySRL/\" >> /app/en/parser_location.txt && rm model.tar.gz\n\n# Install Jigg\nWORKDIR /app/parsers\nADD https://github.com/mynlp/jigg/archive/v-0.4.tar.gz /app/parsers/v-0.4.tar.gz\nRUN tar xzf v-0.4.tar.gz && rm v-0.4.tar.gz\nADD https://github.com/mynlp/jigg/releases/download/v-0.4/ccg-models-0.4.jar /app/parsers/jigg-v-0.4/jar/\nRUN echo \"/app/parsers/jigg-v-0.4\" > /app/ja/jigg_location.txt && \\\n    echo \"jigg:/app/parsers/jigg-v-0.4\" >> /app/ja/parser_location_ja.txt\n\n# Install depccg\nWORKDIR /app/parsers\nRUN git clone https://github.com/masashi-y/depccg\nWORKDIR /app/parsers/depccg/models\nADD http://cl.naist.jp/~masashi-y/resources/depccg/en_hf_tri.tar.gz  /app/parsers/depccg/models/en_hf_tri.tar.gz\nADD http://cl.naist.jp/~masashi-y/resources/depccg/ja_hf_ccgbank.tar.gz /app/parsers/depccg/models/ja_hf_ccgbank.tar.gz\nRUN tar xvf en_hf_tri.tar.gz && tar xvf ja_hf_ccgbank.tar.gz && rm en_hf_tri.tar.gz\nWORKDIR /app/parsers/depccg/src\nRUN python setup.py build_ext --inplace 2> /dev/null && \\\n    echo \"depccg:/app/parsers/depccg/\" >> /app/en/parser_location.txt && \\\n    echo \"depccg:/app/parsers/depccg/\" >> /app/ja/parser_location_ja.txt\n\nWORKDIR /app\nRUN cp ./en/coqlib_sick.v ./coqlib.v && coqc coqlib.v\nRUN cp ./en/tactics_coq_sick.txt ./tactics_coq.txt\n# CMD [\"en/rte_en_mp_any.sh\", \"en/sample_en.txt\", \"en/semantic_templates_en_emnlp2015.yaml\"]\nCMD [\"/bin/bash\"]\n"
}