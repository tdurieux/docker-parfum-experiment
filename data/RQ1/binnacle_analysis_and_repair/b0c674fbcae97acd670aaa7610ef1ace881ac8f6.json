{
  "startTime": 1674249990953,
  "endTime": 1674249991121,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rhel:7.2-released\n\nLABEL io.k8s.description=\"Platform for building and running Ruby on Rails 4.2 applications\" \\\n      io.k8s.display-name=\"Ruby on Rails 4.2\"\n\n# Labels consumed by Red Hat build service\nLABEL BZComponent=\"rh-ror42-docker\" \\\n      Name=\"rhscl_beta/ror-42-rhel7\" \\\n      Version=\"4.2\" \\\n      Release=\"2\" \\\n      Architecture=\"x86_64\"\n\n# The following is taken from STI base image so this Dockerfile follows the same convetions.\n# https://github.com/openshift/sti-base/blob/master/Dockerfile\n\nENV HOME=/opt/app-root/src \\\n    PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nCOPY contrib/etc/scl_enable /opt/app-root/etc/scl_enable\nENV BASH_ENV=/opt/app-root/etc/scl_enable \\\n    ENV=/opt/app-root/etc/scl_enable \\\n    PROMPT_COMMAND=\". /opt/app-root/etc/scl_enable\"\n\n# Let's install the same as STI images\nRUN yum install -y --setopt=tsflags=nodocs \\\n  autoconf \\\n  automake \\\n  findutils \\\n  gcc-c++ \\\n  gdb \\\n  gettext \\\n  git \\\n  libcurl-devel \\\n  libxml2-devel \\\n  libxslt-devel \\\n  lsof \\\n  make \\\n  mariadb-devel \\\n  mariadb-libs \\\n  openssl-devel \\\n  patch \\\n  postgresql-devel \\\n  procps-ng \\\n  scl-utils \\\n  sqlite-devel \\\n  tar \\\n  unzip \\\n  wget \\\n  which \\\n  yum-utils \\\n  zlib-devel && \\\n  yum clean all -y && \\\n  mkdir -p ${HOME} && \\\n  groupadd -r default -f -g 1001 && \\\n  useradd -u 1001 -r -g default -d ${HOME} -s /sbin/nologin \\\n      -c \"Default Application User\" default && \\\n  chown -R 1001:1001 /opt/app-root && rm -rf /var/cache/yum\n\n\n# This image provides a Ruby on Rails 4.2 environment you can use to run your Rails\n# applications.\n\nEXPOSE 8080\n\nENV RAILS_VERSION 4.2\n\nRUN yum-config-manager --enable rhel-server-rhscl-7-rpms && \\\n    yum-config-manager --enable rhel-7-server-optional-rpms && \\\n    INSTALL_PKGS=\"rh-ror42 rh-ruby23-ruby-devel\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && rpm -V $INSTALL_PKGS && \\\n    yum clean all -y && rm -rf /var/cache/yum\n\n# Add .gemrc\nCOPY contrib/.gemrc /opt/app-root/.gemrc\n\nRUN chown -R 1001:1001 /opt/app-root\n\nUSER 1001\n\nWORKDIR ${HOME}\n\n# Install the usage script with base image usage informations\nCOPY contrib/bin/usage /usr/local/bin/usage\n\n# Use entrypoint so path is correctly adjusted already at the time the command\n# is searching, so something like docker run IMG python runs binary from SCL\nCOPY contrib/bin/container-entrypoint /usr/bin/container-entrypoint\n\n# Set the default CMD to print the usage of the language image\nENTRYPOINT [\"container-entrypoint\"]\nCMD [\"usage\"]\n"
}