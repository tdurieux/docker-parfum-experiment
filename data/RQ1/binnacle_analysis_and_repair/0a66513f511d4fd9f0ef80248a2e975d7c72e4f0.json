{
  "startTime": 1674236737777,
  "endTime": 1674236737843,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to run a Django-based web application\n# Based on an Ubuntu Image\n############################################################\n\n# Set the base image to use to python 2.7\nFROM python:3.7\n\n# Set the file maintainer (your name - the file's author)\nMAINTAINER Jacob Sayles\n\n# Don't buffer stdout and stderr\nENV PYTHONUNBUFFERED 1\n\n# Set env variables used in this Dockerfile (add a unique prefix, such as DOCKYARD)\n# Local directory with project source\nENV DOCKYARD_SRC=./\n# Directory in container for all project files\nENV DOCKYARD_SRVHOME=/webapp\n# Directory in container for project source files\nENV DOCKYARD_SRVPROJ=/webapp/nadine\n\n# Update the default application repository sources list\nRUN apt-get update \\\n    && apt-get -y dist-upgrade \\\n    && apt-get install --no-install-recommends -y libjpeg-dev gunicorn postgresql-client && rm -rf /var/lib/apt/lists/*;\n#RUN apt-get -y autoremove\n\n# Configure Postgresql\n#RUN apt-get install -y postgresql-9.4\n#USER postgres\n#RUN /etc/init.d/postgresql start \\\n#    && psql --command \"CREATE USER pguser WITH SUPERUSER PASSWORD 'pguser';\" \\\n#    && createdb -O pguser nadinedb\n#RUN mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql\n#VOLUME  [\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n#CMD [\"/usr/lib/postgresql/9.4/bin/postgres\", \"-D\", \"/var/lib/postgresql/9.4/main\", \"-c\", \"config_file=/etc/postgresql/9.4/main/postgresql.conf\"]\n#USER root\n\n# Create application subdirectories\nWORKDIR $DOCKYARD_SRVHOME\nRUN mkdir media static logs\nVOLUME [\"$DOCKYARD_SRVHOME/media/\", \"$DOCKYARD_SRVHOME/logs/\"]\n\n# Copy application source code to SRCDIR\nCOPY $DOCKYARD_SRC $DOCKYARD_SRVPROJ\n\n# Install Python dependencies\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r $DOCKYARD_SRVPROJ/requirements.txt\n\n# Install the demo data\nWORKDIR $DOCKYARD_SRVPROJ\nCOPY $DOCKYARD_SRC/demo/local_settings.py $DOCKYARD_SRVPROJ/nadine/\n#RUN /etc/init.d/postgresql start \\\n#  && ./manage.py restore_backup demo/demo_database.tar\n\n# Port to expose\nEXPOSE 8000\n\n# Copy entrypoint script into the image\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n"
}