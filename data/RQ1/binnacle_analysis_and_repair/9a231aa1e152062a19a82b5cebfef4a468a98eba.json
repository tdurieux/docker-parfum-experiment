{
  "startTime": 1674242006765,
  "endTime": 1674242006918,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 as builder\n\nLABEL maintainer=\"Mate Soos\"\nLABEL version=\"1.0\"\nLABEL Description=\"Approxmc\"\n\n# get curl, etc\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n# RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test\n# RUN apt-get update\nRUN apt-get install --no-install-recommends -y libboost-program-options-dev gcc g++ make cmake zlib1g-dev wget make && rm -rf /var/lib/apt/lists/*;\n\n# get M4RI\nWORKDIR /\nRUN wget https://bitbucket.org/malb/m4ri/downloads/m4ri-20140914.tar.gz\nRUN tar -xvf m4ri-20140914.tar.gz && rm m4ri-20140914.tar.gz\nWORKDIR m4ri-20140914\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make \\\n    && make install\n\n# build CMS\nWORKDIR /\nRUN wget https://github.com/msoos/cryptominisat/archive/5.6.7.tar.gz\nRUN tar -xvf 5.6.7.tar.gz && rm 5.6.7.tar.gz\nWORKDIR /cryptominisat-5.6.7\nRUN mkdir build\nWORKDIR /cryptominisat-5.6.7/build\nRUN cmake -DSTATICCOMPILE=ON -DUSE_GAUSS=ON ..\nRUN make -j6 \\\n    && make install\n\n# build approxmc\nUSER root\nCOPY . /home/solver/approxmc\nWORKDIR /home/solver/approxmc\nRUN mkdir build\nWORKDIR /home/solver/approxmc/build\nRUN cmake -DSTATICCOMPILE=ON ..\nRUN make -j6 \\\n    && make install\n\n# set up for running\nFROM alpine:latest\nCOPY --from=builder /usr/local/bin/approxmc /usr/local/bin/\nENTRYPOINT [\"/usr/local/bin/approxmc\"]\n\n# --------------------\n# HOW TO USE\n# --------------------\n# on file through STDIN:\n#    zcat mizh-md5-47-3.cnf.gz | docker run --rm -i -a stdin -a stdout msoos/approxmc\n\n# on a file:\n#    docker run --rm -v `pwd`/myfile.cnf.gz:/in msoos/approxmc in\n\n# echo through STDIN:\n#    echo \"1 2 0\" | docker run --rm -i -a stdin -a stdout msoos/approxmc\n\n# hand-written CNF:\n#    docker run --rm -ti -a stdin -a stdout msoos/approxmc\n\n"
}