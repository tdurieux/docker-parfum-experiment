{
  "startTime": 1674246935807,
  "endTime": 1674246936219,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04.3\n\nENV HOME /root\nENV PATH /usr/local/go/bin:$PATH\nENV CF_VERSION 6.14.1\nENV RTR_VERSION 2.3.0\nENV GO_VERSION 1.5.3\n\nEXPOSE 80 443 2222\nVOLUME [\"/var/vcap/data/garden/aufs_graph\"]\nENTRYPOINT [\"/var/micropcf/provision\"]\n\nRUN \\\n  apt-get -qqy --no-install-recommends install software-properties-common && \\\n  add-apt-repository -y ppa:brightbox/ruby-ng && \\\n  apt-get -qqy update && \\\n  apt-get -qqy --force-yes dist-upgrade && \\\n  apt-get -qqy update && \\\n  apt-get -qqy --no-install-recommends install wget curl unzip zip jq psmisc \\\n    libruby2.1 ruby2.1 aufs-tools iptables dnsmasq openssh-client && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  curl -f -L \"https://cli.run.pivotal.io/stable?release=linux64-binary&version=${CF_VERSION}&source=github-rel\" | tar -C /usr/local/bin -xz && \\\n  curl -f -L \"https://github.com/cloudfoundry-incubator/routing-api-cli/releases/download/${RTR_VERSION}/rtr-linux-amd64.tgz\" | tar -C /usr/local/bin -xz && \\\n  curl -f -L \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" | tar -C /usr/local -xz && \\\n  /bin/echo 'conf-dir=/etc/dnsmasq.d' >> /etc/dnsmasq.conf && \\\n  /bin/echo -e 'user=root\\nbind-interfaces' > /etc/dnsmasq.d/nanocf && \\\n  /bin/echo 'IGNORE_RESOLVCONF=yes' > /etc/default/dnsmasq\n\nCOPY assets /opt/bosh-provisioner/assets\nCOPY config.json /opt/bosh-provisioner/\nCOPY provision /var/micropcf/\nCOPY nanocf nanocf-test /usr/local/bin/\n"
}