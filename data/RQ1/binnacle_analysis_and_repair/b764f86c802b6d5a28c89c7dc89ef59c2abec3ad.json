{
  "startTime": 1674242222895,
  "endTime": 1674242223032,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-slim\nMAINTAINER Jannis Leidel <jezdez@mozilla.com>\n\n# add a non-privileged user for installing and running the application\nRUN mkdir /app && \\\n    chown 10001:10001 /app && \\\n    groupadd --gid 10001 app && \\\n    useradd --no-create-home --uid 10001 --gid 10001 --home-dir /app app\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apt-transport-https build-essential curl git libpq-dev python-dev \\\n        default-libmysqlclient-dev gettext sqlite3 libffi-dev libsasl2-dev \\\n        lsb-release gnupg vim && \\\n    CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && \\\n    apt-get remove -y lsb-release gnupg && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Python dependencies\nCOPY requirements.txt /tmp/\n# Switch to /tmp to install dependencies outside home dir\nWORKDIR /tmp\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN export SLUGIFY_USES_TEXT_UNIDECODE=yes && pip install --no-cache-dir -r requirements.txt\n\n# Switch back to home directory\nWORKDIR /app\n\nCOPY . /app\n\nRUN chown -R 10001:10001 /app\n\nUSER 10001\n\nENV PYTHONUNBUFFERED=1 \\\n    # AWS_REGION= \\\n    # AWS_ACCESS_KEY_ID= \\\n    # AWS_SECRET_ACCESS_KEY= \\\n    # SPARK_BUCKET= \\\n    # AIRFLOW_BUCKET= \\\n    # PRIVATE_OUTPUT_BUCKET= \\\n    # PUBLIC_OUTPUT_BUCKET= \\\n    # EMR_KEY_NAME= \\\n    # EMR_FLOW_ROLE= \\\n    # EMR_SERVICE_ROLE= \\\n    # EMR_INSTANCE_TYPE= \\\n    # DEPLOY_ENVIRONMENT = \\\n    # DEPLOY_TAG = \\\n    # ARTIFACTS_BUCKET = \\\n    # DATABRICKS_DEFAULT_IAM \\\n    PORT=8000\n\nENV AIRFLOW_HOME=/app \\\n    # AIRFLOW_AUTHENTICATE= \\\n    # AIRFLOW_AUTH_BACKEND= \\\n    # AIRFLOW_BROKER_URL= \\\n    # AIRFLOW_RESULT_URL= \\\n    # AIRFLOW_FLOWER_PORT= \\\n    # AIRFLOW_DATABASE_URL= \\\n    # AIRFLOW__CORE__FERNET_KEY= \\\n    # AIRFLOW_SECRET_KEY= \\\n    # AIRFLOW_SMTP_HOST= \\\n    # AIRFLOW_SMTP_USER= \\\n    # AIRFLOW_SMTP_PASSWORD= \\\n    # AIRFLOW_SMTP_FROM= \\\n    AIRFLOW_EMAIL_BACKEND=\"airflow.utils.email.send_email_smtp\"\n\nEXPOSE $PORT\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/bin/run\"]\n\nCMD [\"web\"]\n"
}