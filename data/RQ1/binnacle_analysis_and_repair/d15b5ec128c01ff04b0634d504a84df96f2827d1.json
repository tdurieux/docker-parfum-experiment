{
  "startTime": 1674248309863,
  "endTime": 1674248310176,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 19,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 20,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 20,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Stage\nFROM elixir:latest as build\n\nENV DEBIAN_FRONTEND=noninteractive\nENV HOME=/opt/app/ TERM=xterm\n\nRUN \\\n  curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n  curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n  apt-get update && apt-get -y --no-install-recommends install nodejs yarn && rm -rf /var/lib/apt/lists/*;\n\n## Install Hex+Rebar\nRUN mix local.hex --force && \\\n  mix local.rebar --force\n\nWORKDIR /opt/app\n\nENV MIX_ENV=prod\n\n## Cache elixir deps\nRUN mkdir config\nCOPY config/* config/\nCOPY mix.exs mix.lock ./\nRUN mix do deps.get, deps.compile, sentry_recompile\n\n## Cache node deps\nCOPY assets/*.json ./assets/\nCOPY assets/yarn.lock ./assets/\nRUN cd ./assets && yarn install && yarn cache clean;\n\n## Compile assests & create digest\nCOPY . .\nRUN cd ./assets && ./node_modules/brunch/bin/brunch b -p\nRUN mix phx.digest\n\n## Compile Elixir release\nRUN MIX_ENV=prod mix release --env=prod\n\n# Release Stage\nFROM elixir:slim\n\nEXPOSE 4000\nENV PORT=4000 MIX_ENV=prod REPLACE_OS_VARS=true SHELL=/bin/sh\n\nWORKDIR /app\nCOPY --from=build /opt/app/_build/prod/rel/alloy_ci ./\n\nENTRYPOINT [\"bin/alloy_ci\"]\n"
}