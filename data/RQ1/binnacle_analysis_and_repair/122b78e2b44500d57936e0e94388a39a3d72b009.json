{
  "startTime": 1674234001100,
  "endTime": 1674234001277,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 11,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch AS build\nRUN apt update \\\n        && apt install --no-install-recommends -y ca-certificates make g++ libssl-dev git wget pkg-config \\\n        && (mkdir -p /cmake && wget --no-verbose --output-document=- https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz | tar xvz -C /cmake --strip 1) \\\n        && rm -rf /var/lib/apt/lists/*\nADD . /tmp/seabolt\nWORKDIR /tmp/seabolt/build-docker\nRUN /cmake/bin/cmake -D CMAKE_BUILD_TYPE=Debug -D CMAKE_INSTALL_PREFIX=dist /tmp/seabolt \\\n    && /cmake/bin/cmake --build . --target install\n\nFROM openjdk:11-jdk\nRUN apt update \\\n    && apt install --no-install-recommends -y bash python3 python3-pip openjdk-8-jdk \\\n    && python3 -m pip install boltkit==1.2.0 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir /java \\\n    && ln -s /usr/lib/jvm/java-11-openjdk-amd64 /java/jdk-4.0 \\\n    && ln -s /usr/lib/jvm/java-8-openjdk-amd64 /java/jdk-3.5 \\\n    && ln -s /usr/lib/jvm/java-8-openjdk-amd64 /java/jdk-3.4 \\\n    && ln -s /usr/lib/jvm/java-8-openjdk-amd64 /java/jdk-3.3 \\\n    && ln -s /usr/lib/jvm/java-8-openjdk-amd64 /java/jdk-3.2\nENV NEOCTRLARGS=\"-e 3.4\"\nENV TEAMCITY_HOST=\"\" TEAMCITY_USER=\"\" TEAMCITY_PASSWORD=\"\"\nENV BOLT_HOST=\"localhost\" BOLT_PORT=\"7687\" HTTP_PORT=\"7474\" HTTPS_PORT=\"7473\"\nENV BOLT_PASSWORD=\"password\"\nADD run_tests.sh /seabolt/\nCOPY --from=build /tmp/seabolt/build-docker/bin /seabolt/build/bin/\nCOPY --from=build /tmp/seabolt/build-docker/dist /seabolt/build/dist/\nWORKDIR /seabolt\nCMD PYTHON=python3 JAVA_HOME=/java/jdk-`echo $NEOCTRLARGS | sed -E 's/-e\\s*//g' | cut -d. -f1,2` ./run_tests.sh\n"
}