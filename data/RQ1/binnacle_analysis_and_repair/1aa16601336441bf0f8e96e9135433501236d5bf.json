{
  "startTime": 1674252993366,
  "endTime": 1674252993978,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n# https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING UTF-8\n\n# install ca-certificates so that HTTPS works consistently\n# other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\n\nENV GPG_KEY C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nENV PYTHON_VERSION 2.7.15\n\nRUN set -ex \\\n        && apk add --no-cache --virtual .fetch-deps \\\n                gnupg \\\n                tar \\\n                xz \\\n        \\\n        && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n        && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n        && export GNUPGHOME=\"$(mktemp -d)\" \\\n        && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n        && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n        && { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n        && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n        && mkdir -p /usr/src/python \\\n        && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n        && rm python.tar.xz \\\n        \\\n        && apk add --no-cache --virtual .build-deps  \\\n                bzip2-dev \\\n                coreutils \\\n                dpkg-dev dpkg \\\n                findutils \\\n                gcc \\\n                gdbm-dev \\\n                libc-dev \\\n                libnsl-dev \\\n                libressl-dev \\\n                libtirpc-dev \\\n                linux-headers \\\n                make \\\n                ncurses-dev \\\n                pax-utils \\\n                readline-dev \\\n                sqlite-dev \\\n                tcl-dev \\\n                tk \\\n                tk-dev \\\n                zlib-dev \\\n# add build deps before removing fetch deps in case there's overlap\n        && apk del .fetch-deps \\\n        \\\n        && cd /usr/src/python \\\n        && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && ./configure \\\n                --build=\"$gnuArch\" \\\n                --enable-shared \\\n                --enable-unicode=ucs4 \\\n        && make -j \"$(nproc)\" \\\n# set thread stack size to 1MB so we don't segfault before we hit sys.getrecursionlimit()\n# https://github.com/alpinelinux/aports/commit/2026e1259422d4e0cf92391ca2d3844356c649d0\n                EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n        && make install \\\n        \\\n        && find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' \\\n                | tr ',' '\\n' \\\n                | sort -u \\\n                | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n                | xargs -rt apk add --no-cache --virtual .python-rundeps \\\n        && apk del .build-deps \\\n        \\\n        && find /usr/local -depth \\\n                \\( \\\n                        \\( -type d -a \\( -name test -o -name tests \\) \\) \\\n                        -o \\\n                        \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n                \\) -exec rm -rf '{}' + \\\n        && rm -rf /usr/src/python \\\n        \\\n        && python2 --version\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 18.1\n\nRUN set -ex; \\\n        \\\n        wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n        \\\n        python get-pip.py \\\n                --disable-pip-version-check \\\n                --no-cache-dir \\\n                \"pip==$PYTHON_PIP_VERSION\" \\\n        ; \\\n        pip --version; \\\n        \\\n        find /usr/local -depth \\\n                \\( \\\n                        \\( -type d -a \\( -name test -o -name tests \\) \\) \\\n                        -o \\\n                        \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n                \\) -exec rm -rf '{}' +; \\\n        rm -f get-pip.py\n\nRUN apk add --no-cache git build-base\nRUN git clone https://github.com/Nextdoor/ndscheduler.git\nRUN apk add --no-cache bash\nRUN apk add --no-cache --virtual .build-deps  \\\n                bzip2-dev \\\n                coreutils \\\n                dpkg-dev dpkg \\\n                findutils \\\n                gcc \\\n                gdbm-dev \\\n                libc-dev \\\n                libnsl-dev \\\n                libressl-dev \\\n                libtirpc-dev \\\n                linux-headers \\\n                make \\\n                ncurses-dev \\\n                pax-utils \\\n                readline-dev \\\n                sqlite-dev \\\n                tcl-dev \\\n                tk \\\n                tk-dev \\\n                zlib-dev\nRUN pip install --no-cache-dir virtualenv\n\nRUN mkdir -p /mnt/scheduler && cd /mnt/scheduler && virtualenv ./ && \\\n    chmod -R 777 ./bin/activate && ./bin/activate && \\\n    pip install --no-cache-dir -e git+https://github.com/Nextdoor/ndscheduler.git#egg=ndscheduler\n\nRUN apk add --no-cache curl\nRUN curl -f -o \"/mnt/scheduler/apns.pem\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/apns.pem\nRUN curl -f -o \"/mnt/scheduler/bin/run_scheduler\" https://raw.githubusercontent.com/Nextdoor/ndscheduler/master/simple_scheduler/docker/run_scheduler\n\nRUN chmod 755 /mnt/scheduler/bin/run_scheduler\n\nRUN cp -rfp /mnt/scheduler/src/ndscheduler/simple_scheduler/scheduler.py /scheduler.py\n\nRUN apk add --no-cache nginx\n\nRUN mkdir /run/nginx\n\nCMD /ndscheduler/start.sh\n\n\n"
}