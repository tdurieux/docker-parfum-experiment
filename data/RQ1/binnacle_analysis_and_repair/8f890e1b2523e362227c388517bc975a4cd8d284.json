{
  "startTime": 1674242062393,
  "endTime": 1674242062857,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 8,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n# ... from https://github.com/docker-library/php/blob/master/7.0/fpm/Dockerfile\n# We need to build this ourselves as php must have bcmath enabled at compile\n# time as the code not just the bindings are built in to the php binary\n#\n# NOTE TO DEVS: if you intend to make changes, compare the file to the current\n# master version at the link above, to make sure you pull in other changes too.\n#\n# - reducing layers\n# - with bcmath and zip enabled\n# - with bzip2 installed\n# - with work dir changed\n#\n# --enable-mysqlnd: included here because it's also a plugin, not just an extension.\n#                  This makes it harder to compile after php is compiled.\n#\n# --enable-mbstring: included here because of pecl issue.\n#                    see https://github.com/docker-library/php/issues/195\n#\nMAINTAINER jinal--shah <jnshah@gmail.com>\nLABEL Name=\"php7-fpm-deb\" Vendor=\"sortuniq\" Version=\"0.0.1\" \\\n      Description=\"provides php-fpm on debian base - entrypoint is php-fpm\"\n# build instructions:\n# img_name=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Name=\"\\([^\"]\\+\\).*/\\1/')\n# tag_version=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Version=\"\\([^\"]\\+\\).*/\\1/')\n# docker build --no-cache=true --rm --tag $img_name:$tag_version .\n# docker rmi $img_name:stable 2>/dev/null\n# docker tag $img_name:$tag_version $img_name:stable\n\n# persistent / runtime deps\nENV PHPIZE_DEPS=\"autoconf file g++ gcc libc-dev make pkg-config re2c\" \\\n    BUILD_DEPS=\"libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils\" \\\n    PHP_INI_DIR=\"/usr/local/etc/php\"                                  \\\n    PHP_MODS=\"--enable-bcmath --enable-fpm --enable-zip\"              \\\n    SET_FPM_USER=\"--with-fpm-user=www-data --with-fpm-group=www-data\" \\\n    GPG_KEYS=1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763                 \\\n    PHP_VERSION=7.0.8                                                 \\\n    PHP_FILENAME=php-7.0.8.tar.xz                                     \\\n    PHP_SHA256=0a2142c458b0846f556b16da1c927d74c101aa951bb840549abe5c58584fb394\n\nENV PHP_EXTRA_CONFIGURE_ARGS=\"${PHP_MODS} ${SET_FPM_USER}\"        \\\n    PHP_URI=\"http://php.net/get/${PHP_FILENAME}/from/this/mirror\" \\\n    PHP_ASC_URI=\"http://php.net/get/${PHP_FILENAME}.asc/from/this/mirror\"\n\nRUN apt-get update                                                     \\\n    && apt-get install -y --no-install-recommends                      \\\n        $PHPIZE_DEPS                                                   \\\n        $BUILD_DEPS                                                    \\\n        bzip2                                                          \\\n        ca-certificates                                                \\\n        curl                                                           \\\n        libedit2                                                       \\\n        libsqlite3-0                                                   \\\n        libxml2                                                        \\\n        unzip                                                          \\\n    && rm -rf /var/lib/apt/lists/*                                     \\\n    && mkdir -p $PHP_INI_DIR/conf.d                                    \\\n    && curl -fSL \"$PHP_URI\" -o \"$PHP_FILENAME\" \\\n    && echo \"$PHP_SHA256  *$PHP_FILENAME\" | sha256sum -c - \\\n    && curl -fSL \"$PHP_ASC_URI\" -o \"$PHP_FILENAME.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && for key in $GPG_KEYS; do \\\n        gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n    done \\\n    && gpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" \\\n    && rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n    && mkdir -p /usr/src/php \\\n    && tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n    && rm \"$PHP_FILENAME\" \\\n    && cd /usr/src/php \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-config-file-path=\"$PHP_INI_DIR\" \\\n        --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n        $PHP_EXTRA_CONFIGURE_ARGS \\\n        --disable-cgi \\\n        --enable-mysqlnd \\\n        --enable-mbstring \\\n        --with-curl \\\n        --with-libedit \\\n        --with-openssl \\\n        --with-zlib \\\n    && make -j\"$(nproc)\" \\\n    && make install \\\n    && {                                                               \\\n         find /usr/local/bin /usr/local/sbin                           \\\n              -type f                                                  \\\n              -executable                                              \\\n              -exec strip --strip-all '{}' + || true;                  \\\n       } \\\n    && make clean \\\n    && apt-get purge -y --auto-remove                                  \\\n                     -o APT::AutoRemove::RecommendsImportant=false     \\\n                     -o APT::AutoRemove::SuggestsImportant=false $BUILD_DEPS && rm -rf -d && rm -rf /usr/src/php\n\nCOPY docker-php-ext-* /usr/local/bin/\n\nWORKDIR /srv/eurostar/htdocs\n\nRUN set -ex \\\n    && cd /usr/local/etc \\\n    && if [ -d php-fpm.d ]; then \\\n        # for some reason, upstream's php-fpm.conf.default has\n        # \"include=NONE/etc/php-fpm.d/*.conf\"\n        sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \\\n        cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \\\n    else \\\n        # PHP 5.x don't use \"include=\" by default, so we'll create our own \\\n        # simple config that mimics PHP 7+ for consistency\n        mkdir php-fpm.d; \\\n        cp php-fpm.conf.default php-fpm.d/www.conf; \\\n        { \\\n            echo '[global]'; \\\n            echo 'include=etc/php-fpm.d/*.conf'; \\\n        } | tee php-fpm.conf; \\\n    fi \\\n    && { \\\n        echo '[global]'; \\\n        echo 'error_log = /proc/self/fd/2'; \\\n        echo; \\\n        echo '[www]'; \\\n        echo '; if we send this to /proc/self/fd/1, it never appears'; \\\n        echo 'access.log = /proc/self/fd/2'; \\\n        echo; \\\n        echo 'clear_env = no'; \\\n        echo; \\\n        echo '; Ensure worker stdout and stderr are sent to the main error log.'; \\\n        echo 'catch_workers_output = yes'; \\\n    } | tee php-fpm.d/docker.conf \\\n    && { \\\n        echo '[global]'; \\\n        echo 'daemonize = no'; \\\n        echo; \\\n        echo '[www]'; \\\n        echo 'listen = [::]:9000'; \\\n    } | tee php-fpm.d/zz-docker.conf\n\nEXPOSE 9000\nCMD [\"php-fpm\"]\n\n"
}