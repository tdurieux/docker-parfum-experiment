{
  "startTime": 1674251772381,
  "endTime": 1674251772765,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 165
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##### bioconda: https://hub.docker.com/r/bioconda/bioconda-builder/~/dockerfile/ #####\n\nFROM centos:centos5\n\n# add tools useful for compilation\nRUN rpm -Uvh http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\n# Install wget first so we can download devtools-2 and autotools repos\nRUN yum install -y wget && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN wget https://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo\nRUN yum install -y \\\n    bzip2 \\\n    git \\\n    gcc \\\n    gcc-c++ \\\n    patch \\\n    make \\\n    gcc44 \\\n    gcc44-c++ \\\n    cmake \\\n    unzip \\\n    byacc \\\n    devtoolset-2-gcc \\\n    devtoolset-2-binutils \\\n    devtoolset-2-gcc-c++ \\\n    devtoolset-2-gcc-gfortran \\\n    autotools-latest \\\n    pkgconfig \\\n    which \\\n    file \\\n    gpg \\\n    # Needed for perl-db-file\n    db4-devel \\\n    # install X11 dependencies and openGL/mesa\n    xorg-x11-apps \\\n    mesa-libGLU-devel \\\n    && yum clean all && rm -rf /var/cache/yum\n\n\n\n# install conda\nRUN mkdir -p /tmp/conda-build && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && bash Miniconda3-latest-Linux-x86_64.sh -b -p /anaconda\nENV PATH=/opt/rh/devtoolset-2/root/usr/bin:/opt/rh/autotools-latest/root/usr/bin:/anaconda/bin:$PATH\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nRUN mkdir -p /anaconda/conda-bld/linux-64 /anaconda/conda-bld/osx-64 # workaround for bug in current conda (conda issue #466)\n\n# setup conda\nADD requirements.txt requirements.txt\nRUN conda update conda\nRUN conda install -y --file requirements.txt\nRUN conda update conda-build\nRUN conda index /anaconda/conda-bld/linux-64 /anaconda/conda-bld/osx-64\nRUN conda config --add channels bioconda\nRUN conda config --add channels r\nRUN conda config --add channels file://anaconda/conda-bld\nRUN conda install -y toposort\n\n# setup entrypoint (assuming that repo is mounted under /bioconda-recipes)\nENTRYPOINT [\"/bioconda-recipes/scripts/build-packages.py\"]\nCMD []\n\n##### vcftools: https://hub.docker.com/r/biocontainers/vcftools/~/dockerfile/ #####\n# Base Image\nFROM biocontainers/biocontainers:latest\n\n# Metadata\nLABEL base.image=\"biocontainers:latest\"\nLABEL version=\"1\"\nLABEL software=\"vcftools\"\nLABEL software.version=\"0.1.14\"\nLABEL description=\"A set of tools written in Perl and C++ for working with VCF files, such as those generated by the 1000 Genomes Project\"\nLABEL website=\"https://github.com/vcftools/vcftools|https://vcftools.github.io/index.html\"\nLABEL documentation=\"https://github.com/vcftools/vcftools|https://vcftools.github.io/index.html\"\nLABEL license=\"https://github.com/vcftools/vcftools|https://vcftools.github.io/index.html\"\nLABEL tags=\"Genomics\"\n\n# Maintainer\nMAINTAINER Saulo Alves Aflitos <sauloal@gmail.com>\n\nUSER root\n\nENV ZIP=vcftools-0.1.14.tar.gz\nENV URL=https://github.com/vcftools/vcftools/releases/download/v0.1.14/\nENV FOLDER=vcftools-0.1.14\nENV DST=/tmp\n\nRUN wget $URL/$ZIP -O $DST/$ZIP && \\\n  tar xvf $DST/$ZIP -C $DST && \\\n  rm $DST/$ZIP && \\\n  cd $DST/$FOLDER && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && \\\n  cd / && \\\n  rm -rf $DST/$FOLDER\n\nUSER biodocker\n\nWORKDIR /data/\n\n\n##### vcfanno: http://brentp.github.io/vcfanno/#installation #####\n\n#RUN conda install -c bioconda vcfanno\n\nRUN wget https://github.com/brentp/vcfanno/releases/download/v0.2.6/vcfanno_linux64 && \\\n\tcp vcfanno_linux64 /usr/local/bin/vcfanno_linux64 && \\\n\trm vcfanno_linux64\n\n##### vcflib: https://hub.docker.com/r/itsjeffreyy/vcflib/~/dockerfile/ #####\n# Base image ubuntu:16.04\nFROM ubuntu:16.04\n\n# Author\nMAINTAINER Jeffreyy Chun-Hui Yu\n\n# install the system requirement\nRUN \\\n\tapt-get update --fix-missing -yq \\\n\t&& apt-get install --no-install-recommends -q -y wget g++ gcc make bzip2 git autoconf automake make g++ gcc build-essential zlib1g-dev libgsl0-dev curl git wget unzip tabix libncurses5-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\n\n# install vcflib\nRUN \\\n\tgit clone --recursive https://github.com/vcflib/vcflib.git \\\n\t&& cd vcflib \\\n\t&& make\n\nENV PATH=/opt/vcflib/bin:$PATH\n\n#clean tar balls\nRUN \\\n\trm -rf /var/lib/apt/lists/* \\\n\t&& apt-get autoremove -y\n\n\n# set path\nWORKDIR /root\n"
}