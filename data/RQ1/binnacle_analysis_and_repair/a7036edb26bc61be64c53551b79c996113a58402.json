{
  "startTime": 1674240951791,
  "endTime": 1674240952191,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.0-fpm\nMAINTAINER Michael Woodward <michael@wearejh.com>\n\nARG BUILD_ENV=dev\nENV PROD_ENV=prod\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    cron \\\n    libfreetype6-dev \\\n    libicu-dev \\\n    libjpeg62-turbo-dev \\\n    libmcrypt-dev \\\n    libpng12-dev \\\n    libxslt1-dev \\\n    gettext \\\n    msmtp \\\n    git \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-configure \\\n  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\n\nRUN docker-php-ext-install \\\n    gd \\\n    intl \\\n    mbstring \\\n    mcrypt \\\n    pdo_mysql \\\n    xsl \\\n    zip \\\n    soap \\\n    bcmath \\\n    mysqli \\\n    opcache \\\n    pcntl\n\n# Xdebug\nRUN [ \"$BUILD_ENV\" != \"$PROD_ENV\" ] && pecl install -o -f xdebug-2.5.0; true\n\n# Blackfire\nRUN [ \"$BUILD_ENV\" != \"$PROD_ENV\" ] \\\n    && version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini; rm /tmp/blackfire-probe.tar.gz \\\n    true\n\n# Configuration files\nCOPY .docker/php/etc/custom.template .docker/php/etc/xdebug.template /usr/local/etc/php/conf.d/\nCOPY .docker/php/etc/msmtprc.template /etc/msmtprc.template\n\n# Copy in Entrypoint file & Magento installation script\nCOPY .docker/php/bin/docker-configure .docker/php/bin/magento-install .docker/php/bin/magento-configure /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-configure /usr/local/bin/magento-install /usr/local/bin/magento-configure\n\n# Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\nWORKDIR /var/www\n\nRUN [ ! -d pub ] && mkdir pub\nRUN [ ! -d var ] && mkdir var\nRUN [ ! -d app/etc ] && mkdir -p app/etc\n\nCOPY composer.json composer.lock auth.json ./\nCOPY .docker/composer-cache .docker/composer-cache\n\nRUN chsh -s /bin/bash www-data \\\n    && chown -R www-data:www-data ./\n\nRUN [ \"$BUILD_ENV\" = \"$PROD_ENV\" ] \\\n    && su - www-data -c \"COMPOSER_CACHE_DIR=.docker/composer-cache composer install --no-dev --no-interaction --prefer-dist -o\" \\\n    || su - www-data -c \"COMPOSER_CACHE_DIR=.docker/composer-cache composer install --no-interaction --prefer-dist -o\"\n\nCOPY app app\nCOPY .data-migration .data-migration\n\nRUN rm -rf \\\n    html \\\n    dev \\\n    phpserver \\\n    LICENSE*.txt \\\n    COPYING.txt \\\n    .user.ini \\\n    .travis.yml \\\n    .php_cs \\\n    .htaccess* \\\n    *.sample \\\n    .phpstorm.meta.php \\\n    *.md\n\nRUN find . -user root | xargs chown www-data:www-data \\\n    && chmod +x bin/magento\n\nVOLUME [\"/var/www\"]\nENTRYPOINT [\"/usr/local/bin/docker-configure\"]\nCMD [\"php-fpm\"]\n"
}