{
  "startTime": 1674239602793,
  "endTime": 1674239603191,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Install base packages that would be needed for any builder or runner\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    apt-get -y --no-install-recommends install software-properties-common && \\\n    add-apt-repository -y ppa:george-edison55/cmake-3.x && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        autoconf \\\n        automake \\\n        build-essential \\\n        cmake \\\n        curl \\\n        fontconfig \\\n        fonts-wqy-microhei \\\n        gcc-4.8 \\\n        gcc-4.8-multilib \\\n        g++-4.8 \\\n        g++-4.8-multilib \\\n        gfortran \\\n        # For installing packages hosted via github\n        git-core \\\n        libatlas-base-dev \\\n        libblas-dev \\\n        libfreetype6-dev \\\n        # For including gdal.h (geo-spatial data)\n        libgdal-dev \\\n        libjasper-dev \\\n        libjpeg-dev \\\n        libjpeg8-dev \\\n        liblapack-dev \\\n        libmagickwand-dev \\\n        libopenblas-dev \\\n        libpng-dev \\\n        libssl-dev \\\n        libtbb-dev \\\n        libtiff-dev \\\n        # For X11/X11lib.h\n        libx11-dev \\\n        pandoc \\\n        pkg-config \\\n        unzip \\\n        texlive \\\n        wget \\\n        zip && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set options that should be defined everywhere\nENV JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8\nENV LANG C.UTF-8\n\nRUN adduser --disabled-password --gecos \"\" --uid 1001 algo\n\n# --------\n# Install gpu-driver\nADD libraries/gpu-driver/install.sh /opt/algorithmia/setup/gpu-driver/install.sh\nRUN /opt/algorithmia/setup/gpu-driver/install.sh && rm -rf /var/lib/apt/lists/*\nENV CUDA_ARCH=3.7\nENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH\nENV PATH=/usr/local/cuda/bin:$PATH\n# --------\n# Install python2\nADD libraries/python2/install.sh /opt/algorithmia/setup/python2/install.sh\nRUN /opt/algorithmia/setup/python2/install.sh && rm -rf /var/lib/apt/lists/*\nENV PATH=/opt/anaconda2/bin:$PATH\nENV PYTHON_LIB_PATH=/opt/anaconda2/lib\nENV PYTHON_VERSION=python2.7\n# --------\n# Install caffe\nADD libraries/caffe/caffe-ld-so.conf /opt/algorithmia/setup/caffe/caffe-ld-so.conf\nADD libraries/caffe/install-deps.sh /opt/algorithmia/setup/caffe/install-deps.sh\nRUN /opt/algorithmia/setup/caffe/install-deps.sh && rm -rf /var/lib/apt/lists/*\nADD libraries/caffe/install-system.sh /opt/algorithmia/setup/caffe/install-system.sh\nRUN /opt/algorithmia/setup/caffe/install-system.sh && rm -rf /var/lib/apt/lists/*\nADD libraries/caffe/install.sh /opt/algorithmia/setup/caffe/install.sh\nRUN /opt/algorithmia/setup/caffe/install.sh && rm -rf /var/lib/apt/lists/*\nENV PYTHONPATH=/opt/caffe/python:$PYTHONPATH\n# --------\n# Install pycuda\nADD libraries/pycuda/install.sh /opt/algorithmia/setup/pycuda/install.sh\nRUN /opt/algorithmia/setup/pycuda/install.sh && rm -rf /var/lib/apt/lists/*\n# --------\n# Install torch\nADD libraries/torch/install-torch.sh /opt/algorithmia/setup/torch/install-torch.sh\nRUN /opt/algorithmia/setup/torch/install-torch.sh && rm -rf /var/lib/apt/lists/*\nADD libraries/torch/install-rocks.sh /opt/algorithmia/setup/torch/install-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-rocks.sh && rm -rf /var/lib/apt/lists/*\nADD libraries/torch/install-cuda-rocks.sh /opt/algorithmia/setup/torch/install-cuda-rocks.sh\nRUN /opt/algorithmia/setup/torch/install-cuda-rocks.sh && rm -rf /var/lib/apt/lists/*\nENV PATH=/opt/torch/install/bin:$PATH\n# --------\n# Install xgboost\nADD libraries/xgboost/install.sh /opt/algorithmia/setup/xgboost/install.sh\nRUN /opt/algorithmia/setup/xgboost/install.sh && rm -rf /var/lib/apt/lists/*\n# --------\n# Install open-mpi\nADD libraries/open-mpi/install.sh /opt/algorithmia/setup/open-mpi/install.sh\nRUN /opt/algorithmia/setup/open-mpi/install.sh && rm -rf /var/lib/apt/lists/*\nENV PATH=/usr/local/mpi/bin:$PATH\n# --------\n# Install opencv-python2\nADD libraries/opencv-python2/install.sh /opt/algorithmia/setup/opencv-python2/install.sh\nRUN /opt/algorithmia/setup/opencv-python2/install.sh && rm -rf /var/lib/apt/lists/*\n# --------\n# Install ffmpeg\nADD libraries/ffmpeg/install.sh /opt/algorithmia/setup/ffmpeg/install.sh\nRUN /opt/algorithmia/setup/ffmpeg/install.sh && rm -rf /var/lib/apt/lists/*\n# --------\n\n# Add langserver binary and algorithm directory\nRUN mkdir /opt/algorithm && chown algo /opt/algorithm\nADD bin/init-langserver /bin/\nADD target/release/langserver /bin/\nUSER algo"
}