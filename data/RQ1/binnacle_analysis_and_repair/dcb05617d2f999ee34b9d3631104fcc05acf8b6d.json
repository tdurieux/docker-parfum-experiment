{
  "startTime": 1674251251629,
  "endTime": 1674251252050,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 26,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 29,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 26,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM xoelabs/dockery-odoo-base:12.0\n# ============================================================\n# Convention about required libraries\n# ============================================================\n\nUSER root\n\nRUN pip --quiet --no-cache-dir --quiet install redis prometheus_client\n\n# ============================================================\n# Convention about environment variables\n# ============================================================\n\nENV ODOO_BASEPATH        \"/opt/odoo\"\nENV ODOO_RC              \"${ODOO_BASEPATH}/cfg.d\"\nENV ODOO_MIG             \"${ODOO_BASEPATH}/migration.yaml\"\nENV ODOO_MIG_DIR         \"${ODOO_BASEPATH}/migration.d\"\nENV ODOO_CMD             \"${ODOO_BASEPATH}/vendor/odoo/cc/odoo-bin\"\nENV ODOO_FRM             \"${ODOO_BASEPATH}/vendor/odoo/cc\"\nENV ODOO_VENDOR          \"${ODOO_BASEPATH}/vendor\"\nENV ODOO_SRC             \"${ODOO_BASEPATH}/src\"\nENV PATCHES_DIR          \"${ODOO_BASEPATH}/patches.d\"\n\n# ============================================================\n# Ship with conventional odoo patches\n# ============================================================\n\nCOPY patches.d \"${PATCHES_DIR}\"\n\n# ============================================================\n# Forward enforce minimal naming scheme on secondary build\n# ============================================================\n\nONBUILD COPY --chown=odoo:odoo  vendor                      \"${ODOO_VENDOR}\"\nONBUILD COPY --chown=odoo:odoo  src                         \"${ODOO_SRC}\"\nONBUILD COPY --chown=odoo:odoo  migration.yaml              \"${ODOO_MIG}\"\nONBUILD COPY --chown=odoo:odoo  migration.d                 \"${ODOO_MIG_DIR}\"\nONBUILD COPY --chown=odoo:odoo  cfg.d                       \"${ODOO_RC}\"\nONBUILD COPY --chown=odoo:odoo  patches.d/*                 \"${PATCHES_DIR}/\"\nONBUILD RUN /patches ${ODOO_BASEPATH} || true\n\n# ============================================================\n\nWORKDIR ${ODOO_SRC}\n\n\n\nUSER root\n\nENV PYTHONPATH=${PYTHONPATH}:${ODOO_FRM}\nENV DODOO_LOAD_OUT=/var/lib/dodoo-loader/logs.json\n\n# --- WDB Configuration ---\nENV WDB_NO_BROWSER_AUTO_OPEN=True \\\n    WDB_SOCKET_SERVER=wdb \\\n    WDB_WEB_PORT=1984 \\\n    WDB_WEB_SERVER=localhost\n\n\n# Get dodoo-* devops toolchain\nRUN pip install --no-cache-dir \\\n\n\n    dodoo-tester \\\n    dodoo-initializer \\\n    dodoo-loader \\\n    dodoo-migrator\n\n\n# Custom Odoo Scaffolding dependency\nRUN pip --quiet --no-cache-dir --quiet install pick\n\n\n# General develpoment libraries\nRUN pip --quiet --no-cache-dir --quiet install \\\n        astor \\\n        pylint-odoo \\\n        pylint-mccabe \\\n        coverage \\\n        ptpython \\\n        pudb \\\n        pyinotify \\\n        watchdog \\\n        wdb\n\n# For querying json log output\nRUN apt-get -qq update && apt-get -qq install -y --no-install-recommends jq  > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n\n# local browser testing\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \\\n    && apt-get -qq update && apt-get -qq install -y --no-install-recommends google-chrome-stable > /dev/null && rm -rf /var/lib/apt/lists/*;\n# For js test recordings\n# Not avaialble in jessie\nRUN apt-get -qq update && apt-get -qq install -y --no-install-recommends ffmpeg  > /dev/null || true && rm -rf /var/lib/apt/lists/*;\n# For chrome bworser testing\nRUN pip --quiet --no-cache-dir --quiet install websocket-client\n\n\n\nCOPY entrypoint.d/* /entrypoint.d/\nCOPY templates /templates\nENV ODOO_TEMPLATES_DIR=\"/templates\"\n\nRUN /bin/bash -c 'shopt -s dotglob \\\n && chmod +x /entrypoint.d/* \\\n && shopt -u dotglob'\n\n\n# Prepare odoo owned testlog folder for chrome screenshots\nRUN mkdir -p /var/lib/odoo-testlogs && chown odoo:odoo /var/lib/odoo-testlogs\n\n\n# Prepare odoo owned loading log folder for dodoo loader\nRUN mkdir -p /var/lib/dodoo-loader && chown odoo:odoo /var/lib/dodoo-loader\n"
}