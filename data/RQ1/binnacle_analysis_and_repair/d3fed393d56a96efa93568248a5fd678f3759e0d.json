{
  "startTime": 1674248131407,
  "endTime": 1674248131645,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# Install build tools\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y build-essential git && rm -rf /var/lib/apt/lists/*;\n\n# Install OpenBLAS\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y gfortran && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/xianyi/OpenBLAS.git /tmp/OpenBLAS \\\n    && cd /tmp/OpenBLAS \\\n    && [ $(getconf _NPROCESSORS_ONLN) = 1 ] && export USE_OPENMP=0 || export USE_OPENMP=1 \\\n    && make NO_AFFINITY=1 \\\n    && make install \\\n    && rm -rf /tmp/OpenBLAS\n\n# Install Torch\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y cmake curl unzip libreadline-dev libjpeg-dev \\\n    libpng-dev ncurses-dev imagemagick gnuplot gnuplot-x11 libssl-dev \\\n    libzmq3-dev graphviz && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/torch/distro.git ~/torch --recursive \\\n    && cd ~/torch \\\n    && ./install.sh\n\n# Export environment variables manually\nENV LUA_PATH='/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-alpha/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua' \\\n    LUA_CPATH='/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so' \\\n    PATH=/root/torch/install/bin:$PATH \\\n    LD_LIBRARY_PATH=/root/torch/install/lib:$LD_LIBRARY_PATH \\\n    DYLD_LIBRARY_PATH=/root/torch/install/lib:$DYLD_LIBRARY_PATH\n\n# Install required dependencies for ffmpeg.lua\nRUN echo \"deb http://ppa.launchpad.net/kirillshkrogalev/ffmpeg-next/ubuntu trusty main\" \\\n    > /etc/apt/sources.list.d/ffmpeg.list \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 8EFE5982\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    cpp \\\n    libavformat-ffmpeg-dev \\\n    libavcodec-ffmpeg-dev \\\n    libavutil-ffmpeg-dev \\\n    libavfilter-ffmpeg-dev && rm -rf /var/lib/apt/lists/*;\n\n# Clean up\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install busted for running tests\nRUN luarocks install busted\n\n# Make working directory for this project\nRUN mkdir -p /app/test\nWORKDIR /app\n\n# Download test data\nCOPY ./test/download_test_data.sh /app/test/\nRUN cd test && ./download_test_data.sh\n\nCOPY ./test/* /app/test/\nCOPY ./src /app/src\n"
}