{
  "startTime": 1674249306680,
  "endTime": 1674249306935,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 90,
        "columnStart": 6,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Openstack-Helm Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM docker.io/ubuntu:xenial\nMAINTAINER pete.birley@att.com\n\nARG UBUNTU_URL=http://archive.ubuntu.com/ubuntu/\nARG ALLOW_UNAUTHENTICATED=false\nARG PIP_INDEX_URL=https://pypi.python.org/simple/\nARG PIP_TRUSTED_HOST=pypi.python.org\nENV PIP_INDEX_URL=${PIP_INDEX_URL}\nENV PIP_TRUSTED_HOST=${PIP_TRUSTED_HOST}\n\nCOPY ./tools/images/kubeadm-aio/sources.list /etc/apt/\nRUN sed -i \\\n        -e \"s|%%UBUNTU_URL%%|${UBUNTU_URL}|g\" \\\n        /etc/apt/sources.list ;\\\n    echo \"APT::Get::AllowUnauthenticated \\\"${ALLOW_UNAUTHENTICATED}\\\";\" > /etc/apt/apt.conf.d/allow-unathenticated\n\nARG GOOGLE_KUBERNETES_REPO_URL=https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64\nENV GOOGLE_KUBERNETES_REPO_URL ${GOOGLE_KUBERNETES_REPO_URL}\n\nARG GOOGLE_HELM_REPO_URL=https://storage.googleapis.com/kubernetes-helm\nENV GOOGLE_HELM_REPO_URL ${GOOGLE_HELM_REPO_URL}\n\nARG KUBE_VERSION=\"v1.13.4\"\nENV KUBE_VERSION ${KUBE_VERSION}\n\nARG CNI_VERSION=\"v0.6.0\"\nENV CNI_VERSION ${CNI_VERSION}\n\nARG CNI_REPO_URL=https://github.com/containernetworking/plugins/releases/download/$CNI_VERSION\nENV CNI_REPO_URL ${CNI_REPO_URL}\n\nARG HELM_VERSION=\"v2.13.1\"\nENV HELM_VERSION ${HELM_VERSION}\n\nARG CHARTS=\"calico,flannel,tiller,kube-dns,kubernetes-keystone-webhook\"\nENV CHARTS ${CHARTS}\n\nARG HTTP_PROXY=\"\"\nENV HTTP_PROXY ${HTTP_PROXY}\nENV http_proxy ${HTTP_PROXY}\n\nARG HTTPS_PROXY=\"\"\nENV HTTPS_PROXY ${HTTPS_PROXY}\nENV https_proxy ${HTTPS_PROXY}\n\nARG NO_PROXY=\"127.0.0.1,localhost,.svc.cluster.local\"\nENV NO_PROXY ${NO_PROXY}\nENV no_proxy ${NO_PROXY}\n\nENV container=\"docker\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    CNI_BIN_DIR=\"/opt/cni/bin\"\n\nRUN set -ex ; \\\n    apt-get update ; \\\n    apt-get upgrade -y ; \\\n    apt-get install -y --no-install-recommends \\\n        bash \\\n        ca-certificates \\\n        curl \\\n        jq \\\n        python-pip \\\n        gawk ; \\\n    pip --no-cache-dir install --upgrade pip==18.1 ; \\\n    hash -r ; \\\n    pip --no-cache-dir install --upgrade setuptools ; \\\n    # NOTE(srwilkers): Pinning ansible to 2.5.5, as pip installs 2.6 by default.\n    # 2.6 introduces a new command flag (init) for the docker_container module\n    # that is incompatible with what we have currently. 2.5.5 ensures we match\n    # what's deployed in the gates\n    pip --no-cache-dir install --upgrade \\\n      requests \\\n      kubernetes \\\n      \"ansible==2.5.5\" ; \\\n    for BINARY in kubectl kubeadm; do \\\n      curl -f -sSL -o /usr/bin/${BINARY} \\\n        ${GOOGLE_KUBERNETES_REPO_URL}/${BINARY}; \\\n      chmod +x /usr/bin/${BINARY} ; \\\n    done; \\\n    mkdir -p /opt/assets/usr/bin ; \\\n    curl -f -sSL -o /opt/assets/usr/bin/kubelet \\\n      ${GOOGLE_KUBERNETES_REPO_URL}/kubelet; \\\n    chmod +x /opt/assets/usr/bin/kubelet ; \\\n    mkdir -p /opt/assets${CNI_BIN_DIR} ; \\\n    curl -f -sSL ${CNI_REPO_URL}/cni-plugins-amd64-$CNI_VERSION.tgz | \\\n      tar -zxv --strip-components=1 -C /opt/assets${CNI_BIN_DIR}; \\\n    TMP_DIR=$(mktemp -d) ; \\\n    curl -f -sSL ${GOOGLE_HELM_REPO_URL}/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar -zxv --strip-components=1 -C ${TMP_DIR}; \\\n    mv ${TMP_DIR}/helm /usr/bin/helm ; \\\n    rm -rf ${TMP_DIR} ; \\\n    apt-get purge -y --auto-remove \\\n        curl ; \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /root/.cache\n\nCOPY ./ /tmp/source\nRUN set -ex ;\\\n    cp -rfav /tmp/source/tools/images/kubeadm-aio/assets/* / ;\\\n    IFS=','; for CHART in $CHARTS; do \\\n      mv -v /tmp/source/${CHART} /opt/charts/; \\\n    done ;\\\n    rm -rf /tmp/source\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}