{
  "startTime": 1674252244068,
  "endTime": 1674252244404,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n########## Dockerfile for Sysdig version 0.26.1 #########\n#\n# This Dockerfile builds a basic installation of Sysdig.\n#\n# Sysdig is open source, system-level exploration: capture system state and activity from a running Linux instance, then save, filter and analyze.\n# Sysdig is scriptable in Lua and includes a command line interface and a powerful interactive UI, csysdig, that runs in your terminal.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To run sysdig in a Docker container use below command\n#  docker run -it --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v\n#   /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --name <container_name> <image_name>\n#\n# The official website\n# https://www.sysdig.org/\n##################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\nARG SYSDIG_VER=0.26.1\n\n# The author\nMAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nLABEL RUN=\"docker run -i -t --privileged -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --name NAME IMAGE\"\n\nENV SOURCEDIR=/tmp/source\n\nWORKDIR $SOURCEDIR\n\n# Install dependencies\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tcmake \\\n\t\tgcc \\\n\t\tg++ \\\n\t\tlibelf-dev \\\n\t\tlinux-headers-$(uname -r) \\\n\t\tlua5.1 \\\n\t\tlua5.1-dev \\\n\t\tpatch \\\n\t\ttar \\\n\t\twget \\\n# Download source code\n\t&& cd $SOURCEDIR \\\n\t&& wget https://github.com/draios/sysdig/archive/${SYSDIG_VER}.tar.gz \\\n\t&& tar -xvzf ${SYSDIG_VER}.tar.gz \\\n\t&& cd sysdig-${SYSDIG_VER} \\\n\t&& mkdir build \\\n# Patch sysdig\n# Patch protobuf\n\t&& echo \"--- src/google/protobuf/stubs/atomicops_internals_generic_gcc.h     2019-06-06 18:20:59.506309314 +0000\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+++ src/google/protobuf/stubs/atomicops_internals_generic_gcc.h     2019-06-05 19:19:01.626309314 +0000\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"@@ -146,6 +146,14 @@\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"   return __atomic_load_n(ptr, __ATOMIC_RELAXED);\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \" }\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+inline Atomic64 Release_CompareAndSwap(volatile Atomic64* ptr,\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+                                       Atomic64 old_value,\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+                                       Atomic64 new_value) {\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+  __atomic_compare_exchange_n(ptr, &old_value, new_value, false,\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+                              __ATOMIC_RELEASE, __ATOMIC_ACQUIRE);\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+  return old_value;\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+}\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \"+\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \" #endif // defined(__LP64__)\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo >> $SOURCEDIR/protobuf-3.5.0.patch \\\n\t&& echo \" }  // namespace internal\" >> $SOURCEDIR/protobuf-3.5.0.patch \\\n# Patch CMakeLists.txt\n\t&& sed -i \"468iPATCH_COMMAND cp $SOURCEDIR/protobuf-3.5.0.patch . && patch -p0 -i protobuf-3.5.0.patch\" CMakeLists.txt \\\n\t&& sed -i \"510s/1.1.4/1.8.1/\" CMakeLists.txt \\\n# Patch userspace/libscap/scap_fds.c\n\t&& sed -i \"28i#include <sys/sysmacros.h>\" userspace/libscap/scap_fds.c \\\n# Configure Sysdig\n\t&& cd build \\\n\t&& cmake -DUSE_BUNDLED_LUAJIT=OFF .. \\\n# Build and Install Sysdig\n\t&& make \\\n\t&& make install \\\n# Copy important content from build\n\t&& mkdir -p /opt/sysdig \\\n\t&& cp $SOURCEDIR/sysdig-${SYSDIG_VER}/build/driver/sysdig-probe.ko /opt/sysdig \\\n\t&& cp -r $SOURCEDIR/sysdig-${SYSDIG_VER}/build/userspace/sysdig /opt/sysdig \\\n# Clean up cache data and remove dependencies which are not required\n\t&& apt-get -y remove \\\n\t\tcmake \\\n\t\tgcc \\\n\t\tg++ \\\n\t\tlinux-headers-$(uname -r) \\\n\t\tlua5.1 \\\n\t\tlua5.1-dev \\\n\t\tpatch \\\n\t\twget \\\n\t&& apt-get autoremove -y \\\n\t&& apt autoremove -y \\\n\t&& rm -rf $SOURCEDIR \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/* && rm ${SYSDIG_VER}.tar.gz\n\nWORKDIR /opt/sysdig\n\nCMD [\"bash\"]\n\n# End of Dockerfile\n"
}