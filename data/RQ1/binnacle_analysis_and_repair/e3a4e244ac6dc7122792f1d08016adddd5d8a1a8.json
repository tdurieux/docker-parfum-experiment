{
  "startTime": 1674641707631,
  "endTime": 1674641707717,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/windowsservercore:1607 as build\n\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\n\nENV NODE_VERSION 10.11.0\n\nRUN Invoke-WebRequest $('https://nodejs.org/dist/v{0}/node-v{0}-win-x64.zip' -f $env:NODE_VERSION) -OutFile 'node.zip' -UseBasicParsing ; \\\nExpand-Archive node.zip -DestinationPath C:\\ ;\\\nRename-Item -Path $('C:\\node-v{0}-win-x64' -f $env:NODE_VERSION) -NewName 'C:\\nodejs'\n\nRUN $env:PATH = 'C:\\nodejs;{0}' -f $env:PATH ; \\\n[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine)\n\nENV DOTNET_SDK_VERSION 2.2.203\n\nRUN Invoke-WebRequest -OutFile dotnet.zip https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$Env:DOTNET_SDK_VERSION/dotnet-sdk-$Env:DOTNET_SDK_VERSION-win-x64.zip; \\\nExpand-Archive dotnet.zip -DestinationPath c:\\sdk; \\\nRemove-Item -Force dotnet.zip\n\nENV ASPNETCORE_VERSION 2.2.4\nRUN Invoke-WebRequest -OutFile aspnetcore.zip https://dotnetcli.blob.core.windows.net/dotnet/aspnetcore/Runtime/$Env:ASPNETCORE_VERSION/aspnetcore-runtime-$Env:ASPNETCORE_VERSION-win-x64.zip; \\\nExpand-Archive aspnetcore.zip -DestinationPath c:\\dotnet; \\\nRemove-Item -Force aspnetcore.zip\n\nRUN $env:PATH = $('c:\\sdk;{0}' -f $env:PATH) ;\\\n[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine)\n\nWORKDIR /app\n\n# copy csproj and restore as distinct layers\nCOPY *.sln .\nCOPY Rnwood.Smtp4dev/*.csproj ./Rnwood.Smtp4dev/\nRUN dotnet restore Rnwood.Smtp4dev\n\nCOPY Rnwood.Smtp4dev/npm-shrinkwrap.json ./Rnwood.Smtp4dev/\nCOPY Rnwood.Smtp4dev/package.json ./Rnwood.Smtp4dev/\nWORKDIR /app/Rnwood.Smtp4dev\nRUN npm install && npm cache clean --force;\n\n# copy everything else and build app\n\nWORKDIR /app\nARG version\nENV VERSION $version\nCOPY . .\nWORKDIR /app/Rnwood.Smtp4dev\nRUN dotnet build -p:Version=$env:VERSION\nRUN dotnet test -p:Version=$env:VERSION\nRUN dotnet publish -c Release -o out -p:Version=$env:VERSION\n\nFROM mcr.microsoft.com/windows/nanoserver:sac2016 as runtime\nEXPOSE 80\nEXPOSE 25\nCOPY --from=build /dotnet /dotnet\n\nCOPY --from=build /app/Rnwood.Smtp4dev/out /app\n\nENV ASPNETCORE_URLS=http://+:80 \\\nDOTNET_RUNNING_IN_CONTAINER=true\n\nWORKDIR /dotnet\nENTRYPOINT [\"dotnet\", \"/app/Rnwood.Smtp4dev.dll\"]"
}