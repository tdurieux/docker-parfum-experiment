{
  "startTime": 1674240734081,
  "endTime": 1674240734553,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 150
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux1_x86_64\n#\n#  This image is based on pypa/manylinux1 because they use an ancient version of Centos\n#  which we want for ABI compatibility.\n#\n#  We are building OpenSSL because Python infrastructure uses TLS 1.2 and\n#  OpenSSL that exists in the image does not support it. This is what manylinux\n#  maintainers are doing when they built their own Python versions.\n#\n#  We are building Python3.5 instead of using the one that already exists in the image\n#  because pypa specifically remove libpython for wheelbuilding. See:\n#  https://github.com/pypa/manylinux/blob/fe0967cf35b84fecb6ac3163074f1627356854e8/pep-513.rst#libpythonxyso1\n#\n#  pyinstaller requires libpython\n#\n#  http://www.pyinstaller.org/\n#  https://github.com/pypa/manylinux\n\nENV LANG C.UTF-8\nENV GPG_KEY 97FC712E4C024BBEA48A61ED3A5CA953F73C700D\nENV PYTHON_VERSION 3.5.3\nENV OPENSSL_VERSION 1.0.2o\nENV OPENSSL_GPG_KEY 8657ABB260F056B1E5190839D9C4D26D0E604491\n\nRUN set -ex \\\n    && yum install -y xz gpg zip zlib-devel bzip2-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\n\t&& curl -f -o openssl.tar.gz \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" \\\n\t&& curl -f -o openssl.tar.gz.asc \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz.asc\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$OPENSSL_GPG_KEY\" \\\n\t&& gpg --batch --verify openssl.tar.gz.asc openssl.tar.gz \\\n\t&& mkdir -p /usr/src/openssl \\\n\t&& tar --use-compress-program=gzip -xC /usr/src/openssl --strip-components=1 -f openssl.tar.gz \\\n\t&& rm openssl.tar.gz openssl.tar.gz.asc \\\n\t&& cd /usr/src/openssl \\\n\t&& ./config no-ssl2 no-shared -fPIC --prefix=/usr/local/ssl \\\n\t&& make -j$(nproc) \\\n\t&& make install_sw \\\n\n\t&& curl -f -o python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& curl -f -o python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar --use-compress-program=xz -xC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz python.tar.xz.asc \\\n\t&& cd /usr/src/python \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t&& make -j$(nproc) \\\n\t&& make install \\\n\n\t&& rm -r \"$GNUPGHOME\" \\\n\t&& ldconfig \\\n\t&& yum -y clean all > /dev/null 2>&1 \\\n\t&& ln -s /usr/local/bin/python3.5 /usr/local/bin/python && rm -rf -d && rm -rf /usr/src/openssl && rm -rf /var/cache/yum\n\nCMD [\"/bin/bash\"]\n"
}