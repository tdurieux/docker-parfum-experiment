{
  "startTime": 1674249534995,
  "endTime": 1674249535213,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\n\n# Installing build dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential automake make cmake g++ wget git mercurial python3-pip curl && rm -rf /var/lib/apt/lists/*;\n\n# Preparing Python build environment\nRUN pip3 install --no-cache-dir cython future scipy nltk requests xmltodict nose2\n\n# Installing MKL library\nRUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \\\n    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \\\n    wget https://apt.repos.intel.com/setup/intelproducts.list -O /etc/apt/sources.list.d/intelproducts.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y intel-mkl-64bit-2018.2-046 && rm -rf /var/lib/apt/lists/*;\n\n# Installing DyNET\nRUN mkdir dynet-base && \\\n    cd dynet-base && \\\n    git clone https://github.com/clab/dynet.git && \\\n    hg clone https://bitbucket.org/eigen/eigen -r b2e267d && \\\n    cd dynet && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. -DEIGEN3_INCLUDE_DIR=../../eigen -DPYTHON=/usr/bin/python3 -DMKL_ROOT=/opt/intel/mkl && \\\n    make -j 2 && \\\n    cd python && \\\n    python3 ../../setup.py build --build-dir=.. --skip-build install\n\n# Prepare environment UTF-8\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales && rm -rf /var/lib/apt/lists/*;\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Prepare cube\n\nRUN mkdir /work && \\\n    cd /work && \\\n    git clone https://github.com/adobe/NLP-Cube.git\n\n# Prepare notebook\nRUN pip3 install --no-cache-dir jupyter\n\n# Start notebook\nCMD cd /work/NLP-Cube/ && python3 -m \"notebook\" --allow-root --ip=0.0.0.0 --no-browser\n\n"
}