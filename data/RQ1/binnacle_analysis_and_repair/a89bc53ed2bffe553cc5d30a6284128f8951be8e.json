{
  "startTime": 1674249291650,
  "endTime": 1674249291978,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lablup/kernel-base:python3.6 as python-binary\nFROM nvidia/cuda:8.0-cudnn7-runtime-ubuntu16.04\n\nENV LANG=C.UTF-8\nENV PYTHONUNBUFFERED 1\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n\nRUN apt update -y && \\\n    apt install --no-install-recommends -y \\\n        ca-certificates \\\n        wget \\\n        libexpat1 libgdbm3 libbz2-dev libffi6 libsqlite3-0 liblzma5 zlib1g \\\n    libmpdec2 \\\n        libssl1.0.0 \\\n    libssl-dev \\\n        libncursesw5 libtinfo5 libreadline6 \\\n    proj-bin \\\n        libgeos-dev \\\n        mime-support \\\n    gcc g++ \\\n        libproj-dev libgeos-dev \\\n        libzmq3-dev libuv1 && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=python-binary /python.tar.gz /\nRUN cd /; tar xzpf python.tar.gz; rm python.tar.gz; ldconfig\n\nRUN export LD_LIBRARY_PATH=/usr/local/ssl/lib:$LD_LIBRARY_PATH\n# Test if Python is working\nRUN python -c 'import sys; print(sys.version_info); import ssl'\n\n# Install CUDA-8.0 + cuDNN 7.3.1\nRUN ln -s /usr/local/cuda-8.0 /usr/local/cuda && \\\n    ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.7.2.1 /usr/local/cuda/lib64/libcudnn.so && \\\n    ldconfig\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/usr/local/nvidia/lib64\" \\\n    PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\n# Prepare for building PyTorch wheel\nRUN pip install --no-cache-dir wheel && \\\n    pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop && \\\n    pip install --no-cache-dir aiozmq dataclasses tabulate namedlist six \"python-dateutil>=2\" && \\\n    pip install --no-cache-dir h5py && \\\n    pip install --no-cache-dir Cython && \\\n    pip install --no-cache-dir numpy scipy && \\\n    pip install --no-cache-dir matplotlib bokeh && \\\n    pip install --no-cache-dir pyproj && \\\n    pip install --no-cache-dir Cartopy && \\\n    pip install --no-cache-dir torchvision && \\\n    pip install --no-cache-dir keras && \\\n    pip install --no-cache-dir ipython && \\\n    pip install --no-cache-dir pandas && \\\n    pip install --no-cache-dir seaborn && \\\n    pip install --no-cache-dir pillow && \\\n    pip install --no-cache-dir networkx cvxpy && \\\n    pip install --no-cache-dir scikit-learn scikit-image && \\\n    pip install --no-cache-dir scikit-image && \\\n    pip install --no-cache-dir pygments && \\\n    pip install --no-cache-dir ipython && \\\n    pip install --no-cache-dir jupyter && \\\n    pip install --no-cache-dir jupyterlab && \\\n    rm -f /tmp/*.whl\n\n# Install ipython kernelspec\nRUN python -m ipykernel install --display-name \"PyTorch 0.2 on Python 3.6 (CUDA 8.0)\" && \\\n    cat /usr/local/share/jupyter/kernels/python3/kernel.json\n\n# Install Jupyter notebook logo\nRUN mkdir -p /home/work/.jupyter/custom\nCOPY custom.css /home/work/.jupyter/custom/custom.css\nCOPY logo.svg /home/work/.jupyter/custom/logo.svg\n\n# Install PyTorch\nRUN pip install --no-cache-dir \\\n        https://download.pytorch.org/whl/cu80/torch-0.2.0.post3-cp36-cp36m-manylinux1_x86_64.whl && \\\n    rm -rf /root/.cache\n\n# Backend.AI specifics\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"1g\" \\\n      ai.backend.resource.min.cuda.device=1 \\\n      ai.backend.resource.min.cuda.shares=0.1 \\\n      ai.backend.runtime-type=\"python\" \\\n      ai.backend.runtime-path=\"/usr/bin/python\" \\\n      ai.backend.service-ports=\"ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090\"\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n\n# vim: ft=dockerfile sts=4 sw=4 et tw=0\n"
}