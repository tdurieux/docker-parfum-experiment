{
  "startTime": 1674241470731,
  "endTime": 1674241470858,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile is not meant to be used directly by docker.  The\n# {{}} varibles are replaced with values by the makefile.  Please generate\n# the docker image for this file by running:\n#\n#   make coreboot-jenkins-node\n#\n# Variables can be updated on the make command line or left blank to use\n# the default values set by the makefile.\n#\n#  SDK_VERSION is used to name the version of the coreboot sdk to use.\n#              Typically, this corresponds to the toolchain version.\n#  SSH_KEY is the contents of the file coreboot-jenkins-node/authorized_keys\n#          Because we're piping the contents of the dockerfile into the\n#          docker build command, the 'COPY' keyword isn't valid.\n\nFROM coreboot/coreboot-sdk:{{SDK_VERSION}}\nMAINTAINER Martin Roth <martin@coreboot.org>\nUSER root\n\nRUN apt-get -y update && \\\n\tapt-get -y --no-install-recommends install \\\n\tlua5.3 liblua5.3-dev default-jre-headless openssh-server && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Because of the way that the variables are being replaced, docker's 'COPY'\n# command does not work\nRUN mkdir -p /home/coreboot/.ssh && \\\n\techo \"{{SSH_KEY}}\" > /home/coreboot/.ssh/authorized_keys && \\\n\tchown -R coreboot:coreboot /home/coreboot/.ssh && \\\n\tchmod 0700 /home/coreboot/.ssh && \\\n\tchmod 0600 /home/coreboot/.ssh/authorized_keys\n\nRUN mkdir /var/run/sshd && \\\n\tchmod 0755 /var/run/sshd && \\\n\t/usr/bin/ssh-keygen -A\n\n# Create /cb-build as a tmpfs directory to build in\nRUN mkdir /cb-build && \\\n\tchown coreboot:coreboot /cb-build && \\\n\techo \"tmpfs /cb-build tmpfs rw,mode=1777 0 0\" > /etc/fstab && \\\n\tmkdir -p /home/coreboot/slave-root/workspace && \\\n\tchown -R coreboot:coreboot /home/coreboot/slave-root && \\\n\techo \"tmpfs /home/coreboot/slave-root/workspace tmpfs rw,mode=1777 0 0\" >> /etc/fstab && \\\n\tchown coreboot:coreboot /home/coreboot/.ccache && \\\n\techo \"tmpfs /home/coreboot/.ccache tmpfs rw,mode=1777 0 0\" >> /etc/fstab\n\n# Build encapsulate tool\nADD https://raw.githubusercontent.com/pgeorgi/encapsulate/master/encapsulate.c /tmp/encapsulate.c\nRUN gcc -o /usr/sbin/encapsulate /tmp/encapsulate.c && \\\n\tchown root /usr/sbin/encapsulate && \\\n\tchmod +s /usr/sbin/encapsulate\n\nVOLUME /data/cache\nENTRYPOINT mount /cb-build && \\\n\tmount /home/coreboot/slave-root/workspace && \\\n\tchown -R coreboot:coreboot /home/coreboot/slave-root && \\\n\tmount /home/coreboot/.ccache && \\\n\tchown coreboot:coreboot /home/coreboot/.ccache && \\\n\t/usr/sbin/sshd -p 49151 -D\nEXPOSE 49151\nENV PATH $PATH:/usr/sbin\n"
}