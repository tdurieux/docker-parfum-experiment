{
  "startTime": 1674251048375,
  "endTime": 1674251048716,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\nMAINTAINER Charles Hubain <chubain@quarkslab.com>\n\nARG QBDI_BUILD_TYPE=Release\n\nENV USER docker\nENV HOME /home/$USER\nENV PREFIX /usr\nENV QBDI_PLATFORM android-ARM\nENV LLVM_VERSION 5.0\nENV CMAKE_MAJOR 3.11\nENV CMAKE_VERSION 3.11.4\nENV NDK_VERSION r13b\n\n# Install base tools\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    bash \\\n    gpg \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Add LLVM debian repository\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \\\n    echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" >> /etc/apt/sources.list && \\\n    echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-4.0 main\" >> /etc/apt/sources.list && \\\n    echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-5.0 main\" >> /etc/apt/sources.list\n\n# Get latest package list, upgrade packages, install required packages\n# and cleanup to keep container as small as possible\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    bash \\\n    sudo \\\n    unzip \\\n    build-essential \\\n    cmake \\\n    ninja-build \\\n    g++ \\\n    gcc-arm-linux-gnueabi \\\n    g++-arm-linux-gnueabi \\\n    libncurses5-dev \\\n    libstdc++-6-dev \\\n    make \\\n    pkg-config \\\n    python \\\n    python-dev \\\n    wget \\\n    zlib1g-dev \\\n    llvm-$LLVM_VERSION \\\n    qemu-user \\\n    vim \\\n    && ln -s /usr/bin/llvm-tblgen-$LLVM_VERSION /usr/bin/llvm-tblgen \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN wget \"https://cmake.org/files/v$CMAKE_MAJOR/cmake-$CMAKE_VERSION.tar.gz\" && \\\n    tar xf cmake-$CMAKE_VERSION.tar.gz && \\\n    cd cmake-$CMAKE_VERSION/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf cmake-* && rm cmake-$CMAKE_VERSION.tar.gz\n\n# create a user\nRUN adduser --disabled-password --gecos '' $USER && \\\n    adduser $USER sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# switch to new user\nUSER $USER\n\nWORKDIR $HOME\n\n# Install NDK\nRUN sudo chown -R $USER:$USER . && \\\n    wget https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip && \\\n    unzip android-ndk-$NDK_VERSION-linux-x86_64.zip && \\\n    rm android-ndk-$NDK_VERSION-linux-x86_64.zip\n\n# install QBDI compilation dependencies\n\n# git archive -o qbdi-deps.tar.gz --prefix=qbdi-deps/ HEAD deps\nADD qbdi-deps.tar.gz $HOME/\n\nRUN sudo chown -R $USER:$USER qbdi-deps\n\nWORKDIR $HOME/qbdi-deps/deps/gtest/$QBDI_PLATFORM\n\nRUN sh build.sh prepare && \\\n    sh build.sh build && \\\n    sh build.sh package && \\\n    sh build.sh clean\n\nWORKDIR $HOME/qbdi-deps/deps/llvm/$QBDI_PLATFORM\n\nRUN sh build.sh prepare && \\\n    sh build.sh build && \\\n    sh build.sh package && \\\n    sh build.sh clean\n\n# build / test / install QBDI\n\n# git archive -o qbdi.tar.gz --prefix=qbdi/ HEAD .\nADD qbdi.tar.gz $HOME/\n\nWORKDIR $HOME/qbdi\n\nRUN sudo chown -R $USER:$USER . && \\\n    rm -rf deps && \\\n    ln -s $HOME/qbdi-deps/deps deps && \\\n    mkdir build && \\\n    cd build && \\\n    sh ../cmake/config-$QBDI_PLATFORM.sh && \\\n    make -j2 && \\\n    rm -f QBDI-*-$QBDI_PLATFORM.tar.gz && \\\n    cpack\n\nWORKDIR \"$HOME/\"\nCMD [\"/bin/bash\"]\n"
}