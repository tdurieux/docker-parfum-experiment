{
  "startTime": 1674248605244,
  "endTime": 1674248605714,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 33,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 42,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 40,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\nARG RTORRENT_VER=0.9.7\nARG LIBTORRENT_VER=0.13.7\nARG MEDIAINFO_VER=19.04\nARG FLOOD_VER=master\nARG BUILD_CORES\n\nENV UID=991 GID=991 \\\n    FLOOD_SECRET=supersecret \\\n    WEBROOT=/ \\\n    RTORRENT_SCGI=0 \\\n    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\nRUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} \\\n && apk -U upgrade \\\n && apk add -t build-dependencies \\\n    build-base \\\n    git \\\n    libtool \\\n    automake \\\n    autoconf \\\n    wget \\\n    tar \\\n    xz \\\n    zlib-dev \\\n    cppunit-dev \\\n    openssl-dev \\\n    ncurses-dev \\\n    curl-dev \\\n    binutils \\\n    linux-headers \\\n && apk add \\\n    ca-certificates \\\n    curl \\\n    ncurses \\\n    openssl \\\n    gzip \\\n    zip \\\n    zlib \\\n    s6 \\\n    su-exec \\\n    python \\\n    nodejs \\\n    nodejs-npm \\\n    unrar \\\n    findutils \\\n && cd /tmp && mkdir libtorrent rtorrent \\\n && cd libtorrent && wget -qO- https://github.com/rakshasa/libtorrent/archive/v${LIBTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && rm src/utils/diffie_hellman.cc \\\n && wget -q https://raw.githubusercontent.com/ppentchev/libtorrent/b293276bc5f17f6372146bd605a33340a8162072/src/utils/diffie_hellman.cc -O src/utils/diffie_hellman.cc \\\n && cd ../rtorrent && wget -qO- https://github.com/rakshasa/rtorrent/releases/download/v${RTORRENT_VER}/rtorrent-${RTORRENT_VER}.tar.gz | tar xz --strip 1 \\\n && cd /tmp \\\n && git clone https://github.com/mirror/xmlrpc-c.git \\\n && git clone https://github.com/Rudde/mktorrent.git \\\n && cd /tmp/mktorrent && make -j ${NB_CORES} && make install \\\n && cd /tmp/xmlrpc-c/advanced && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j ${NB_CORES} && make install \\\n && cd /tmp/libtorrent && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j ${NB_CORES} && make install \\\n && cd /tmp/rtorrent && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-xmlrpc-c && make -j ${NB_CORES} && make install \\\n && cd /tmp \\\n && wget -q https://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && wget -q https://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource && ./SO_Compile.sh \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library && make install \\\n && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library && make install \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource && ./CLI_Compile.sh \\\n && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI && make install \\\n && strip -s /usr/local/bin/rtorrent \\\n && strip -s /usr/local/bin/mktorrent \\\n && strip -s /usr/local/bin/mediainfo \\\n && ln -sf /usr/local/bin/mediainfo /usr/bin/mediainfo \\\n && mkdir /usr/flood && cd /usr/flood && wget -qO- https://github.com/jfurrow/flood/archive/${FLOOD_VER}.tar.gz | tar xz --strip 1 \\\n && npm install && npm cache clean --force \\\n && apk del build-dependencies \\\n && rm -rf /var/cache/apk/* /tmp/* && rm MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz\n\nCOPY rootfs /\n\nRUN chmod +x /usr/local/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/* \\\n && cd /usr/flood/ && npm run build\n\nVOLUME /data /flood-db\n\nEXPOSE 3000 49184 49184/udp\n\nLABEL description=\"BitTorrent client with WebUI front-end\" \\\n      rtorrent=\"rTorrent BiTorrent client v$RTORRENT_VER\" \\\n      libtorrent=\"libtorrent v$LIBTORRENT_VER\" \\\n      maintainer=\"Wonderfall <wonderfall@targaryen.house>\"\n\nCMD [\"run.sh\"]\n"
}