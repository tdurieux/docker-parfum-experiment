{
  "startTime": 1674248995957,
  "endTime": 1674248996070,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for nginx letsencrypt proxy\n\nFROM ubuntu:16.04\nMAINTAINER Cristoffer Fairweather <cfairweather@annixa.com>\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN usermod -u 1000 www-data\nRUN groupmod -g 1000 www-data\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -yqq \\\n    nginx \\\n    supervisor \\\n    npm \\\n    curl \\\n    gettext-base \\\n    git \\\n    logrotate && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# configure nginx\nRUN rm -f /etc/nginx/sites-enabled/default && \\\n    rm -f /etc/nginx/sites-available/default\nCOPY config/nginx/webapp.1.conf /etc/nginx/sites-available/webapp.1.conf\nCOPY config/nginx/webapp.2.conf /etc/nginx/sites-available/webapp.2.conf\nCOPY config/nginx/wellknown.conf /etc/nginx/sites-available/wellknown.conf\n# RUN ln -s /etc/nginx/sites-available/webapp.conf /etc/nginx/sites-enabled/webapp.conf\n\n# config supervisor\nRUN mkdir -p /var/log/supervisor\nCOPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Create ssl directory\nRUN mkdir -p /etc/nginx/ssl\nRUN chmod 400 -R /etc/nginx/ssl\n\n# Let's Encrypt Support\nWORKDIR /opt\nRUN git clone https://github.com/letsencrypt/letsencrypt\nCOPY letsencrypt-run.py /opt/\nCOPY letsencrypt-run.sh /opt/\nCOPY letsencrypt.ini /opt/\nRUN chmod +x letsencrypt-run.*\nRUN mkdir -p /var/www/challenges && chmod 777 -R /var/www/challenges\nRUN cd /opt/letsencrypt && ./letsencrypt-auto --help\nVOLUME /etc/letsencrypt\n\n# set up logrotate config\nCOPY config/logrotate.d/nginx /etc/logrotate.d/nginx.tmpl\n\n# Add entrypoint\nCOPY docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\n\nWORKDIR /opt\nEXPOSE 80 443\nCMD [\"/docker-entrypoint.sh\"]\n"
}