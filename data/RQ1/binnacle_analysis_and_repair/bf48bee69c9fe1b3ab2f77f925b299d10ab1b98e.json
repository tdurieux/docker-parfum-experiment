{
  "startTime": 1674241284110,
  "endTime": 1674241284796,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 62,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 138,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 147,
        "lineEnd": 148,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 138,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 62,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 138,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 148,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 9,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 143,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n\n# ------------------------------------------------------\n# --- Environments and base directories\n\n# Environments\n# - Language\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    # - CI\n    CI=\"true\" \\\n    BITRISE_IO=\"true\" \\\n    # - main dirs\n    BITRISE_SOURCE_DIR=\"/bitrise/src\" \\\n    BITRISE_BRIDGE_WORKDIR=\"/bitrise/src\" \\\n    BITRISE_DEPLOY_DIR=\"/bitrise/deploy\" \\\n    BITRISE_CACHE_DIR=\"/bitrise/cache\" \\\n    BITRISE_PREP_DIR=\"/bitrise/prep\" \\\n    BITRISE_TMP_DIR=\"/bitrise/tmp\" \\\n    # Configs - tool versions\n    TOOL_VER_BITRISE_CLI=\"1.31.0\" \\\n    TOOL_VER_RUBY=\"2.5.1\" \\\n    TOOL_VER_GO=\"1.12.5\" \\\n    TOOL_VER_DOCKER=\"5:18.09.4\" \\\n    TOOL_VER_DOCKER_COMPOSE=\"1.21.2\"\n\n# create base dirs\nRUN mkdir -p ${BITRISE_SOURCE_DIR} \\\n    && mkdir -p ${BITRISE_DEPLOY_DIR} \\\n    && mkdir -p ${BITRISE_CACHE_DIR} \\\n    && mkdir -p ${BITRISE_TMP_DIR} \\\n    # prep dir\n    && mkdir -p ${BITRISE_PREP_DIR}\n\n# switch to temp/prep workdir, for the duration of the provisioning\nWORKDIR ${BITRISE_PREP_DIR}\n\n\n# ------------------------------------------------------\n# --- Base pre-installed tools\nRUN apt-get update -qq\n\n# Generate proper EN US UTF-8 locale\n# Install the \"locales\" package - required for locale-gen\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    locales \\\n    # Do Locale gen\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n\n    git \\\n    mercurial \\\n    curl \\\n    wget \\\n    rsync \\\n    sudo \\\n    expect \\\n\n    python \\\n    python-dev \\\n    python-pip \\\n\n    build-essential \\\n    zip \\\n    unzip \\\n    tree \\\n    clang \\\n    imagemagick \\\n    groff \\\n\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n\n\n# ------------------------------------------------------\n# --- Pre-installed but not through apt-get\n\n# install AWSCLI from pip\nRUN [\"pip\", \"install\", \"awscli\"]\n\n# install Ruby from source\n#  from source: mainly because of GEM native extensions,\n#  this is the most reliable way to use Ruby on Ubuntu if GEM native extensions are required\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    build-essential \\\n    zlib1g-dev \\\n    libssl-dev \\\n    libreadline6-dev \\\n    libyaml-dev \\\n    libsqlite3-dev \\\n    && mkdir -p /tmp/ruby-inst \\\n    && cd /tmp/ruby-inst \\\n    && wget -q https://cache.ruby-lang.org/pub/ruby/ruby-${TOOL_VER_RUBY}.tar.gz \\\n    && tar -xvzf ruby-${TOOL_VER_RUBY}.tar.gz \\\n    && cd ruby-${TOOL_VER_RUBY} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make && make install \\\n    # cleanup\n    && cd / \\\n    && rm -rf /tmp/ruby-inst \\\n    && gem update --system --no-document && rm -rf /root/.gem; && rm -rf /var/lib/apt/lists/*;\nRUN [ -x \"$(command -v bundle)\" ] || gem install bundler --no-document\n\n\n# install Go\n#  from official binary package\nRUN wget -q https://storage.googleapis.com/golang/go${TOOL_VER_GO}.linux-amd64.tar.gz -O go-bins.tar.gz \\\n    && tar -C /usr/local -xvzf go-bins.tar.gz \\\n    && rm go-bins.tar.gz\n# ENV setup\nENV PATH $PATH:/usr/local/go/bin\n# Go Workspace dirs & envs\n# From the official Golang Dockerfile\n#  https://github.com/docker-library/golang\nENV GOPATH /bitrise/go\nENV PATH $GOPATH/bin:$PATH\n# 755 because Ruby complains if 777 (warning: Insecure world writable dir ... in PATH)\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 755 \"$GOPATH\"\n\n\n# Install NodeJS\n#  from official docs: https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nRUN sudo apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Yarn\n# as described at: https://yarnpkg.com/en/docs/install#linux-tab\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\nRUN DEBIAN_FRONTEND=noninteractive apt-get update -qq && sudo apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\n\n# Install docker\n#  as described at: https://docs.docker.com/engine/installation/linux/ubuntu/\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    apt-transport-https \\\n    ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nRUN sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n    && DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n    && DEBIAN_FRONTEND=noninteractive apt-cache policy docker-ce \\\n    # For available docker-ce versions\n    #  you can run `sudo apt-get update && sudo apt-cache policy docker-ce` \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    docker-ce=${TOOL_VER_DOCKER}~3-0~ubuntu-xenial && rm -rf /var/lib/apt/lists/*;\n\n\n\n# docker-compose\nRUN wget -q https://github.com/docker/compose/releases/download/${TOOL_VER_DOCKER_COMPOSE}/docker-compose-`uname -s`-`uname -m` -O /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose \\\n    && docker-compose --version\n\n\n# ------------------------------------------------------\n# --- Bitrise CLI\n\n#\n# Install Bitrise CLI\nRUN wget -q https://github.com/bitrise-io/bitrise/releases/download/${TOOL_VER_BITRISE_CLI}/bitrise-$(uname -s)-$(uname -m) -O /usr/local/bin/bitrise \\\n    && chmod +x /usr/local/bin/bitrise \\\n    && bitrise setup \\\n    && bitrise envman -version \\\n    && bitrise stepman -version \\\n    # setup the default StepLib collection to stepman, for a pre-warmed\n    #  cache for the StepLib\n    && bitrise stepman setup -c https://github.com/bitrise-io/bitrise-steplib.git \\\n    && bitrise stepman update\n\n\n# ------------------------------------------------------\n# --- SSH config\n\nCOPY ./ssh/config /root/.ssh/config\n\n# ------------------------------------------------------\n# --- Git config\n\nRUN git config --global user.email \"please-set-your-email@bitrise.io\" \\\n    && git config --global user.name \"J. Doe (https://devcenter.bitrise.io/builds/setting-your-git-credentials-on-build-machines/)\"\n\n\n# ------------------------------------------------------\n# --- Git LFS\n\nRUN curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install git-lfs \\\n    && git lfs install && rm -rf /var/lib/apt/lists/*;\n\n\n# ------------------------------------------------------\n# --- Cleanup, Workdir and revision\n\nWORKDIR $BITRISE_SOURCE_DIR\n\nENV BITRISE_DOCKER_REV_NUMBER_BASE v2019_06_12_1\nCMD bitrise --version\n"
}