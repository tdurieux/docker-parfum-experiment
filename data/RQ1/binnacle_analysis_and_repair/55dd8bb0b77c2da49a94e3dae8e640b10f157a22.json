{
  "startTime": 1674245414370,
  "endTime": 1674245414548,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: LGPL-2.1-or-later\n# See Notices.txt for copyright information\nFROM rust:stretch\nRUN set -e; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n        cmake \\\n        ninja-build \\\n        libgl1-mesa-dev \\\n        libxcb-shm0 \\\n        libclang-dev \\\n        clang \\\n        ; \\\n    rm -rf /var/lib/apt/lists/*\nWORKDIR /build\nRUN version=1.1.85.0; wget -O vulkansdk.tar.gz -nv \"https://sdk.lunarg.com/sdk/download/1.1.85.0/linux/vulkansdk-linux-x86_64-$version.tar.gz\" && tar -xaf vulkansdk.tar.gz && rm vulkansdk.tar.gz && mv \"$version\" vulkansdk\nENV VULKAN_SDK=/build/vulkansdk/x86_64\nENV PATH=\"$VULKAN_SDK/bin:$PATH\" LD_LIBRARY_PATH=\"$VULKAN_SDK/lib:\" VK_LAYER_PATH=\"$VULKAN_SDK/etc/explicit_layer.d\"\nWORKDIR /build/kazan\nCOPY run-cts.sh run-cts.sh\nARG kazan_test_mode=test\nENV KAZAN_TEST_MODE=\"${kazan_test_mode}\"\nRUN if [ \"${KAZAN_TEST_MODE}\" = \"cts\" ]; then exec ./run-cts.sh --update-only; fi\nCOPY . .\nRUN case \"${KAZAN_TEST_MODE}\" in \\\n    cts) \\\n        exec cargo build -vv; \\\n        ;; \\\n    test) \\\n        exec cargo test --no-fail-fast -vv; \\\n        ;; \\\n    *) \\\n        echo \"unknown value of kazan_test_mode; valid values are \\\"cts\\\" and \\\"test\\\"\" >&2; \\\n        exit 1; \\\n        ;; \\\n    esac\nCMD if [ \"${KAZAN_TEST_MODE}\" = \"cts\" ]; then exec ./run-cts.sh --no-update; else exec bash; fi\n"
}