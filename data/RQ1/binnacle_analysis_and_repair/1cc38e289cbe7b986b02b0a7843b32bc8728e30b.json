{
  "startTime": 1674242454737,
  "endTime": 1674242454857,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-cli\n\n# Install applications needed by Composer\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git zip wget && \\\n    apt-get purge -y --auto-remove; rm -rf /var/lib/apt/lists/*;\n\n# Install XDebug\nADD install_xdebug_beta.sh /tmp/\nRUN bash /tmp/install_xdebug_beta.sh \\\n    && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_enable=on\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_autostart=off\" >> /usr/local/etc/php/conf.d/xdebug.ini ;\n\n# Download latest composer.phar with hash check and add to path\nRUN mkdir /root/bin \\\n    && cd /root/bin \\\n    && wget -nv -nc https://getcomposer.org/installer -O composer-setup.php \\\n    && php -r \"if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n    && php composer-setup.php \\\n    && php -r \"unlink('composer-setup.php');\" \\\n    && chmod u+x /root/bin/composer.phar \\\n    && ln -s /root/bin/composer.phar /root/bin/composer ;\n\nENV PATH $PATH:/root/bin\n\n# Create separate \"baked in\" PHPMD and PHPCS (needed only for PHPStorm inspections)\nRUN mkdir --parent /var/phptools\nCOPY inspections-composer.json /var/phptools/composer.json\nRUN cd /var/phptools \\\n    && composer update \\\n    && composer clear-cache ;\n\n# Expose main working directory so that project can be mounted there\nVOLUME /var/php\nWORKDIR /var/php\n\n#CMD vendor/bin/phpunit ./test\nCMD bash\n"
}