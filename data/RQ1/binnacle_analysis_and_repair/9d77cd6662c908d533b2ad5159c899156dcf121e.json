{
  "startTime": 1674240029081,
  "endTime": 1674240029464,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER xxx\n\n# Set environment variables\nENV SRC_DIR /usr/local/src\nENV MODELICAPATH /usr/local/JModelica/ThirdParty/MSL\n\n# Avoid warnings\n# debconf: unable to initialize frontend: Dialog\n# debconf: (TERM is not set, so the dialog frontend is not usable.)\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install required packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    g++ \\\n    subversion \\\n    gfortran \\\n    ipython \\\n    cmake \\\n    swig \\\n    python-dev \\\n    python-numpy \\\n    python-scipy \\\n    python-matplotlib \\\n    cython \\\n    python-lxml \\\n    python-nose \\\n    python-jpype \\\n    zlib1g-dev \\\n    libboost-dev \\\n    ant \\\n    python-pip \\\n    default-jdk \\\n    openjdk-8-jdk \\\n    jcc \\\n    wget \\\n    autoconf \\\n    pkg-config && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Avoid warning Matplotlib is building the font cache using fc-list. This may take a moment.\nRUN python -c \"import matplotlib.pyplot\"\n\n# Install jcc-3.0 to avoid error in python -c \"import jcc\"\nRUN pip install --no-cache-dir --upgrade pip\nRUN ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/java-8-oracle && \\\n    pip install --no-cache-dir --upgrade jcc\n\nRUN export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nRUN export JCC_JDK=/usr/lib/jvm/java-8-openjdk-amd64\n\n# Get Install Ipopt and JModelica, and delete source code with is more than 1GB large\nRUN cd $SRC_DIR && \\\n    wget wget -O - http://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.4.tgz | tar xzf - && \\\n    cd $SRC_DIR/Ipopt-3.12.4/ThirdParty/Blas && \\\n    ./get.Blas && \\\n    cd $SRC_DIR/Ipopt-3.12.4/ThirdParty/Lapack && \\\n    ./get.Lapack && \\\n    cd $SRC_DIR/Ipopt-3.12.4/ThirdParty/Mumps && \\\n    ./get.Mumps && \\\n    cd $SRC_DIR/Ipopt-3.12.4/ThirdParty/Metis && \\\n    ./get.Metis && \\\n    cd $SRC_DIR/Ipopt-3.12.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/Ipopt-3.12.4 && \\\n    make install && \\\n    cd $SRC_DIR && \\\n    svn export https://svn.jmodelica.org/trunk JModelica && \\\n    cd $SRC_DIR/JModelica/external && \\\n    rm -rf $SRC_DIR/JModelica/external/Assimulo && \\\n    svn export https://svn.jmodelica.org/assimulo/trunk Assimulo && \\\n    cd $SRC_DIR/JModelica && \\\n    rm -rf build && \\\n    mkdir build && \\\n    cd $SRC_DIR/JModelica/build && \\\n    ../configure --with-ipopt=/usr/local/Ipopt-3.12.4 --prefix=/usr/local/JModelica && \\\n    make install && \\\n    make casadi_interface && \\\n    rm -rf $SRC_DIR\n\n# Replace 1000 with your user / group id\nRUN export uid=1000 gid=1000 && \\\n    mkdir -p /home/developer && \\\n    mkdir -p /etc/sudoers.d && \\\n    echo \"developer:x:${uid}:${gid}:Developer,,,:/home/developer:/bin/bash\" >> /etc/passwd && \\\n    echo \"developer:x:${uid}:\" >> /etc/group && \\\n    echo \"developer ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/developer && \\\n    chmod 0440 /etc/sudoers.d/developer && \\\n    chown ${uid}:${gid} -R /home/developer\n\nUSER developer\nENV HOME /home/developer\n"
}