{
  "startTime": 1674249815651,
  "endTime": 1674249815699,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This is the image that controls the standard build environment for releasing OpenShift Origin.\n# It is responsible for performing a cross platform build of OpenShift.\n#\n# The standard name for this image is openshift/origin-release\n#\nFROM openshift/origin-base\n\nRUN yum install -y hg golang golang-pkg-darwin-amd64 golang-pkg-windows-amd64 && yum clean all && rm -rf /var/cache/yum\n\nENV GOPATH /go\n\n# work around 64MB tmpfs size\nENV TMPDIR /openshifttmp\n\n# Get the code coverage tool and godep\nRUN mkdir $TMPDIR && \\\n    go get golang.org/x/tools/cmd/cover github.com/tools/godep github.com/golang/lint/golint\n\n# Mark this as a os-build container\nRUN touch /os-build-image\n\nWORKDIR /go/src/github.com/projectatomic/atomic-enterprise\n\n# (set an explicit GOARM of 5 for maximum compatibility)\nENV GOARM 5\nENV PATH $PATH:$GOROOT/bin:$GOPATH/bin\n\nENV OS_VERSION_FILE /go/src/github.com/projectatomic/atomic-enterprise/os-version-defs\n\n# Allows building Origin sources mounted using volume\nADD openshift-origin-build.sh /usr/bin/openshift-origin-build.sh\n\n# Expect a tar with the source of OpenShift Origin (and /os-version-defs in the root)\nCMD tar mxzf - && hack/build-cross.sh\n"
}