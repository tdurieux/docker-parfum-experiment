{
  "startTime": 1674248940467,
  "endTime": 1674248940627,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 13,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM quantumobject/docker-baseimage:15.04\nMAINTAINER Michael Erasmus <michael@buffer.com>\n\n#add repository and update the container\n#Installation of nesesary package/software for this containers...\nRUN (echo \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" >> /etc/apt/sources.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9)\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y -q r-base \\\n                    r-base-dev \\\n                    gdebi-core \\\n                    libapparmor1 \\\n                    supervisor \\\n                    sudo \\\n                    libssl0.9.8 \\\n                    libcurl4-openssl-dev \\\n                    wget \\\n                    && apt-get clean \\\n                    && rm -rf /tmp/* /var/tmp/* \\\n                    && rm -rf /var/lib/apt/lists/*\n\nRUN R -e \"install.packages('shiny', repos='http://cran.rstudio.com/')\" \\\n          && update-locale \\\n          && wget https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.3.0.403-amd64.deb \\\n          && gdebi --n shiny-server-1.3.0.403-amd64.deb \\\n          && rm shiny-server-1.3.0.403-amd64.deb \\\n          && mkdir -p /srv/shiny-server \\\n          && cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/.\n\nRUN  R -e \"install.packages('rmarkdown', repos='http://cran.rstudio.com/')\"\n\n##startup scripts\n#Pre-config scrip that maybe need to be run one time only when the container run the first time .. using a flag to don't\n#run it again ... use for conf for service ... when run the first time ...\nRUN mkdir -p /etc/my_init.d\nCOPY startup.sh /etc/my_init.d/startup.sh\nRUN chmod +x /etc/my_init.d/startup.sh\n\n##Adding Deamons to containers\nRUN mkdir -p /etc/service/shiny-server\nCOPY shiny-server.sh /etc/service/shiny-server/run\nRUN chmod +x /etc/service/shiny-server/run\n\n#pre-config scritp for different service that need to be run when container image is create\n#maybe include additional software that need to be installed ... with some service running ... like example mysqld\n# COPY pre-conf.sh /sbin/pre-conf\n# RUN chmod +x /sbin/pre-conf \\\n#     && /bin/bash -c /sbin/pre-conf \\\n#     && rm /sbin/pre-conf\n\n\n#add files and script that need to be use for this container\n#include conf file relate to service/daemon\n#additionsl tools to be use internally\n\n# to allow access from outside of the container  to the container service\n# at that ports need to allow access from firewall if need to access it outside of the server.\nEXPOSE 3838\n\n#creatian of volume\n#VOLUME\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y libxml2-dev && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /data\nRUN chown -R shiny /data\nRUN chown -R shiny /usr/local/lib/R/site-library\nRUN R -e \"install.packages(c('XML', 'ggplot2', 'downloader', 'data.table', 'dplyr', 'tidyr','RCurl', 'RJSONIO', 'whisker', 'scales', 'RColorBrewer', 'shinythemes','zoo', 'ISOweek'),  repos='http://cran.rstudio.com/')\"\nCOPY dependencies /srv/shiny-server/dependencies\nRUN R -e \"install.packages('/srv/shiny-server/dependencies/rCharts/master.tar.gz', repos = NULL, type = 'source')\"\nRUN R -e \"library(rCharts)\"\nCOPY shiny-server /srv/shiny-server/\n"
}