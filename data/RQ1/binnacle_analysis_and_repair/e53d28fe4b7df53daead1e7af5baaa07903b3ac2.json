{
  "startTime": 1674251133510,
  "endTime": 1674251133637,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########## Dockerfile for Mule version 3.9.1 ####################################\n#\n# This Dockerfile builds a basic installation of Mule.\n#\n# Mule is a lightweight integration platform that allows you to connect anything anywhere. Rather than creating point-to-point integrations between systems, services,\n# APIs and devices, you can use Mule to intelligently manage message-routing, data mapping, orchestration, reliability, security and scalability between nodes.\n# Mule applications accept and process messages through several Lego-block-like message processors plugged together in what we call a flow.\n#\n# To build this image, from the directory containing this Dockerfile :\n# (assuming that the file is named Dockerfile)\n# docker build -t <image_name> .\n#\n# Start mule server using below command:\n# (assuming that docker image is again commited with copying Java Service Wrapper binary into folder $MULE_HOME/lib/boot/exec)\n# docker run --name <container_name> -d -p <host-port>:<container-port> mule  <commands>\n# e.g. docker run --name Mule -d -p 8081:7777  mule_img mule start\n#\n# To provide custom configuration for Mule server use below command:\n# docker run --name <container_name> -d -p <port>:7777 -v /host_path/conf:/opt/mule/conf <image-name>\n#\n# Official website: https://developer.mulesoft.com/\n#\n###################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV SOURCE_DIR='/root'\nENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-s390x\nENV MULE_HOME=/opt/mule\nENV PATH=$PATH:$JAVA_HOME/bin:$MULE_HOME/bin:$MULE_HOME/conf\n\nWORKDIR $SOURCE_DIR\n\n# Install dependencies\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n         gcc \\\n         git \\\n         make \\\n         maven \\\n         openjdk-8-jdk \\\n         openjdk-8-jre \\\n         tar \\\n         unzip \\\n         wget \\\n\n# Download and build source code of Mule\n  && cd $SOURCE_DIR/ \\\n  && git clone https://github.com/linux-on-ibm-z/mule.git \\\n  && cd $SOURCE_DIR/mule/ \\\n  && git checkout mule-3.9.1-s390x \\\n  && cd $SOURCE_DIR/mule/transports/ssl \\\n  && keytool -selfcert -alias Test -genkey -keystore myStore.keystore -keyalg RSA -validity 1 \\\n  && cd $SOURCE_DIR/mule/ && mvn clean install -Pdistributions -DskipTests -fn \\\n  && tar -xvf $SOURCE_DIR/mule/distributions/standalone/target/mule-standalone-3.9.1.tar.gz -C $SOURCE_DIR \\\n  && cp -r $SOURCE_DIR/mule-standalone-3.9.1 /opt/mule \\\n\n  && apt-get remove -y \\\n         gcc \\\n         git \\\n         make \\\n         maven \\\n         unzip \\\n         wget \\\n\n  && apt-get autoremove -y \\\n  && apt autoremove -y \\\n  && apt-get clean \\\n  && rm -rf $SOURCE_DIR/mule $SOURCE_DIR/mule-standalone-3.9.1 $SOURCE_DIR/conf $SOURCE_DIR/target /var/lib/apt/lists/* /root/.m2\n\n# Define mount points.\nVOLUME [\"/opt/mule/logs\", \"/opt/mule/conf\", \"/opt/mule/apps\", \"/opt/mule/domains\"]\n\n# Default port mule, JMX, http port\nEXPOSE 7777 1099 8081\n\n# Start mule server\nCMD [\"mule\",\"console\"]\n\n# End of Dockerfile\n"
}