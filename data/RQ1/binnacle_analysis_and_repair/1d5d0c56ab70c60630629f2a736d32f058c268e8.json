{
  "startTime": 1674248687897,
  "endTime": 1674248688115,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\n\nMAINTAINER Rob Caelers <rob.caelers@gmail.com>\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    echo 'Acquire::Languages \"none\";' | tee /etc/apt/apt.conf.d/99translations > /dev/null && \\\n    dpkg --add-architecture i386 && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository ppa:arx/release && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        make \\\n        autoconf \\\n        autoconf-archive \\\n        automake \\\n        autopoint \\\n        autotools-dev \\\n        libtool \\\n        intltool \\\n        pkg-config \\\n        git \\\n        gcc-mingw-w64 \\\n        g++-mingw-w64 \\\n        wine \\\n        cmake \\\n        innoextract \\\n        gobject-introspection \\\n        libglib2.0-bin \\\n        dos2unix \\\n        xvfb \\\n        wget \\\n        curl && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /workspace && \\\n    cd /workspace && \\\n    curl -f -O https://snapshots.workrave.org/.prebuilt/workrave-prebuilt-windows-vs2015.tar.xz && \\\n    tar xvfJ ./workrave-prebuilt-windows-vs2015.tar.xz && \\\n    rm ./workrave-prebuilt-windows-vs2015.tar.xz && \\\n    ln -s workrave-prebuilt-windows-vs2015 prebuilt\n\nRUN mkdir -p /workspace/inno && \\\n    cd /workspace && \\\n    curl -f -O http://files.jrsoftware.org/is/5/isetup-5.5.8-unicode.exe && \\\n    innoextract -d /workspace/inno ./isetup-5.5.8-unicode.exe && rm ./isetup-5.5.8-unicode.exe\n\nRUN mkdir -p /workspace/source && \\\n    cd /workspace/source && \\\n    git clone https://github.com/rcaelers/workrave.git\n\nRUN mkdir -p /workspace/runtime && \\\n    cd /workspace/runtime && \\\n    cp -a /workspace/source/workrave/build/win32/crossbuilder/* . &&  \\\n    bash -x build-packages.sh && \\\n    rm -rf source build\n\nCOPY Makefile env make-runtime.sh /workspace/\n\nRUN mkdir /root/.ssh && echo \"StrictHostKeyChecking no \" > /root/.ssh/config\n\nENTRYPOINT [\"make\", \"-C\", \"/workspace/\"]\n"
}