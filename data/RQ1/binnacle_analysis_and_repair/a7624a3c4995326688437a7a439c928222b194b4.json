{
  "startTime": 1674243222536,
  "endTime": 1674243222689,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 8,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Run the Ubiquiti UniFi Controller in a container\n#\n# Setup a local directory to store your unifi controller config:\n# \tmkdir -p ~/.config/unifi/\n# \tchmod -R 0700 ~/.config/unifi/\n#\n# If you have already been using a locally installed unifi controller,\n# copy the contents of your existing unifi config:\n#\tcp -R /var/lib/unifi/* ~/.config/unifi/\t# Linux\n#\tcp -R ~/Library/Application\\ Support/UniFi/* ~/.config/unifi/ # MacOS\n#\n# Build the docker image (from directory with this Dockerfile & entrypoint.sh):\n#\tdocker build -t unifi .\n#\n# Start a unifi controller container:\n#\tdocker run \\ # interactive mode isn't necessary\n#\t\t-v ~/.config/unifi:/config \\ # for persistent config\n#\t\t-p 8080:8080 -p 8443:8443 -p 8843:8843 -p 8880:8880 -p 3478:3478/udp \\\n#\t\t--name unifi \\\n#\t\tunifi\n#\n# Access the controller in your browser at: https://127.0.0.1:8443\n#\n# If existing devices are showing up as \"disconnected\" once logged in,\n# SSH into each device and run:\n# \tset-inform http://ip_of_docker_host:8080/inform\n#\n\nFROM ubuntu:16.04\n\n# environment settings\nENV DEBIAN_FRONTEND=\"noninteractive\"\n\n# install deps\nRUN apt-get update && apt-get install -y \\\n\tca-certificates \\\n\tdirmngr \\\n\tgnupg \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# install gosu\nENV GOSU_VERSION 1.11\nRUN set -ex; \\\n\n\tfetchDeps=' \\\n\t\twget \\\n\t'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\n# verify the signature\n\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n    for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu); do \\\n        gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || :; \\\n    done && \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\n\tchmod +x /usr/local/bin/gosu; \\\n# verify that the binary works\n\tgosu nobody true; \\\n\n\tapt-get purge -y --auto-remove $fetchDeps\n\n# add mongo repo\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6 \\\n\t&& echo \"deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse\" >> /etc/apt/sources.list.d/mongo.list\n\n\n# install packages\nRUN apt-get update && apt-get install -y \\\n\tbinutils \\\n\tjsvc \\\n\tmongodb-org-server \\\n\topenjdk-8-jre-headless \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# unifi version\n# From: https://www.ubnt.com/download/unifi/\nENV UNIFI_VERSION \"5.10.23\"\n\n# install unifi\nRUN apt-get update && apt-get install -y \\\n\t\tcurl \\\n\t\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& curl -f -o /tmp/unifi.deb -L \"https://dl.ubnt.com/unifi/${UNIFI_VERSION}/unifi_sysvinit_all.deb\" \\\n\t&& dpkg -i /tmp/unifi.deb \\\n\t&& rm -rf /tmp/unifi.deb \\\n\t&& echo \"Build complete.\"\n\nWORKDIR /config\n\n# 3478 - STUN\n# 8080 - device inform (http)\n# 8443 - web management (https)\n# 8843 - guest portal (https)\n# 8880 - guest portal (http)\n# 6789 - throughput / mobile speedtest (tcp)\n# ref https://help.ubnt.com/hc/en-us/articles/218506997-UniFi-Ports-Used\nEXPOSE 3478/udp 8080 8081 8443 8843 8880 6789\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nENTRYPOINT [ \"entrypoint.sh\" ]\nCMD [\"java\", \"-Xmx1024M\", \"-jar\", \"/usr/lib/unifi/lib/ace.jar\", \"start\"]\n"
}