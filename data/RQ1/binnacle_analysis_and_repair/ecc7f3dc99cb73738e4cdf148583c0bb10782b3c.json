{
  "startTime": 1674235297023,
  "endTime": 1674235297039,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build and run this with context set to the root of the repository.\n#\n# For standard py37 tox, change working directory to the repository root and run:\n# docker build -t tox_linux . -f tools/dev/docker_tox_linux/Dockerfile && docker run -it tox_linux\n#\n# If you'd like to run sphinx docs and see the HTML output you will add a TOX_ENV arg\n# to the `build` and add a volume for the HTML output to the `run`\n#\n# For example, a useful one-liner to build image and then run doc build to `docs/build`:\n#\n# docker build -t tox_linux --build-arg TOX_ENV=docs . -f tools/dev/docker_tox_linux/Dockerfile &&\n# docker run -v 'pwd'/docs/build:/src/docs/build -it tox_linux\n\n\n\nFROM python:3.7-stretch\n\nLABEL name=\"custodian tox\" \\\n      description=\"Run Custodian test suite\" \\\n      repository=\"http://github.com/cloud-custodian/cloud-custodian\" \\\n      homepage=\"http://github.com/cloud-custodian/cloud-custodian\" \\\n      maintainer=\"Custodian Community <https://cloudcustodian.io>\"\n\nRUN pip3 install --no-cache-dir tox\n\nADD . /src\nWORKDIR /src\nRUN tox -e py37 --notest\n\nARG TOX_ENV=py37\n\n# Setup for EntryPoint\nENV LC_ALL=\"C.UTF-8\" LANG=\"C.UTF-8\" TOX_ENV_ENV=$TOX_ENV\nENTRYPOINT tox -e $TOX_ENV_ENV\n"
}