{
  "startTime": 1674246668799,
  "endTime": 1674246672416,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 191,
        "lineEnd": 191,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 118,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 129,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 161
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 204,
        "lineEnd": 234,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 253,
        "lineEnd": 253,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  tensorflow/tensorflow:1.4.1-py3\nLABEL maintainer=\"Alexis Kofman <alexis.kofman@gmail.com>\"\n\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    SRC=\"/usr/local\" \\\n    OPENCV_VERSION=\"3.3.1\" \\\n    FFMPEG_VERSION=\"3.4\" \\\n    FDKAAC_VERSION=\"0.1.5\" \\\n    LAME_VERSION=\"3.99.5\" \\\n    OGG_VERSION=\"1.3.3\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.5\" \\\n    VPX_VERSION=\"1.6.1\" \\\n    X264_VERSION=\"20171204-2245-stable\" \\\n    X265_VERSION=\"2.6\" \\\n    XVID_VERSION=\"1.3.4\" \\\n    FREETYPE_VERSION=\"2.8.1\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    OPENCV_SHA256SUM=\"5dca3bb0d661af311e25a72b04a7e4c22c47c1aa86eb73e70063cd378a2aa6ee  3.3.1.tar.gz\" \\\n    FFMPEG_SHA256SUM=\"6ed03b00404a3923e3c2f560248a9c9ad79fbaaee26d723f74aae6b31fe2bae6  ffmpeg-3.4.tar.gz\" \\\n    FDKAAC_SHA256SUM=\"ff53d1d01cacc29c071e23192dfefa93bdbeaf775fc5d296259b4859d0306b79  v0.1.5.tar.gz\" \\\n    LAME_SHA256SUM=\"24346b4158e4af3bd9f2e194bb23eb473c75fb7377011523353196b19b9a23ff  lame-3.99.5.tar.gz\" \\\n    OGG_SHA256SUM=\"c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985  libogg-1.3.3.tar.gz\" \\\n    OPENCOREAMR_SHA256SUM=\"2c006cb9d5f651bfb5e60156dbff6af3c9d35c7bbcc9015308c0aff1e14cd341  opencore-amr-0.1.5.tar.gz\" \\\n    OPUS_SHA256SUM=\"cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732  opus-1.2.1.tar.gz\" \\\n    THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\" \\\n    VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\" \\\n    VPX_SHA256SUM=\"cda8bb6f0e4848c018177d3a576fa83ed96d762554d7010fe4cfb9d70c22e588  v1.6.1\" \\\n    X264_SHA256SUM=\"73eeeed30b5c5dd2ac677383f123cf03ed05a38ef12cfcf78559fe468fdec46f  x264-snapshot-20171204-2245-stable.tar.bz2\" \\\n    X265_SHA256SUM=\"1bf0036415996af841884802161065b9e6be74f5f6808ac04831363e2549cdbf  x265_2.6.tar.gz\" \\\n    XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\" \\\n    FREETYPE_SHA256SUM=\"876711d064a6a1bd74beb18dd37f219af26100f72daaebd2d86cb493d7cd7ec6  freetype-2.8.1.tar.gz\" \\\n    LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\n\n## INSTALL FFMPEG https://ffmpeg.org\nRUN apt-get -yqq update && \\\n    apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \\\n    buildDeps=\"autoconf \\\n                automake \\\n                cmake \\\n                curl \\\n                bzip2 \\\n                libexpat1-dev \\\n                g++ \\\n                gcc \\\n                git \\\n                gperf \\\n                libtool \\\n                make \\\n                nasm \\\n                perl \\\n                pkg-config \\\n                python \\\n                libssl-dev \\\n                yasm \\\n                zlib1g-dev\" && \\\n    apt-get install -yq --no-install-recommends ${buildDeps} && \\\n    export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n#RUN  \\\n## opencore-amr https://sourceforge.net/projects/opencore-amr/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && \\\n    echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## x264 http://www.videolan.org/developers/x264.html\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    echo ${X264_SHA256SUM} | sha256sum --check && \\\n    tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## x265 http://x265.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz && \\\n    echo ${X265_SHA256SUM} | sha256sum --check && \\\n    tar -zx -f x265_${X265_VERSION}.tar.gz && \\\n    cd x265_v${X265_VERSION}/build/linux && \\\n    ./multilib.sh && \\\n    make -C 8bit install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libogg https://www.xiph.org/ogg/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n    echo ${OGG_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libopus https://www.opus-codec.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \\\n    echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvorbis https://xiph.org/vorbis/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n    echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n    --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libtheora http://www.theora.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n    echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n    --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvpx https://www.webmproject.org/code/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\n    echo ${VPX_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${VPX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libmp3lame http://lame.sourceforge.net/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz && \\\n    echo ${LAME_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## xvid https://www.xvid.com/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n    echo ${XVID_SHA256SUM} | sha256sum --check && \\\n    tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n    cd xvidcore/build/generic && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## fdk-aac https://github.com/mstorsjo/fdk-aac\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz && \\\n    echo ${FDKAAC_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## freetype https://www.freetype.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \\\n    echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvstab https://github.com/georgmartius/vid.stab\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \\\n    echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \\\n    cmake . && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n# RUN  \\\n## ffmpeg\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    echo ${FFMPEG_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --bindir=\"${SRC}/bin\" \\\n    --disable-debug \\\n    --disable-doc \\\n    --disable-ffplay \\\n    --disable-static \\\n    --enable-avresample \\\n    --enable-gpl \\\n    --enable-libopencore-amrnb \\\n    --enable-libopencore-amrwb \\\n    --enable-libfdk_aac \\\n    --enable-libfreetype \\\n    --enable-libvidstab \\\n    --enable-libmp3lame \\\n    --enable-libopus \\\n    --enable-libtheora \\\n    --enable-libvorbis \\\n    --enable-libvpx \\\n    --enable-libx264 \\\n    --enable-libx265 \\\n    --enable-libxvid \\\n    --enable-nonfree \\\n    --enable-openssl \\\n    --enable-postproc \\\n    --enable-shared \\\n    --enable-small \\\n    --enable-version3 \\\n    --extra-cflags=\"-I${SRC}/include\" \\\n    --extra-ldflags=\"-L${SRC}/lib\" \\\n    --extra-libs=-ldl \\\n    --prefix=\"${SRC}\" && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    hash -r && \\\n    cd tools && \\\n    make qt-faststart && \\\n    cp qt-faststart ${SRC}/bin && \\\n    rm -rf ${DIR} && \\\n# ## INSTALL OPENCV http://opencv.org\n#RUN \\\n    opencvDeps=\"libopencv-dev qtbase5-dev\" && \\\n    apt-get -yqq --no-install-recommends install ${opencvDeps} && \\\n#RUN \\\n## opencv\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    # OpenCV depends on NumPy. It represents images as NumPy arrays, so we need to install NumPy\n    curl -f -sLO https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \\\n    echo ${OPENCV_SHA256SUM} | sha256sum --check && \\\n    tar xzvf ${OPENCV_VERSION}.tar.gz && \\\n    cd opencv-${OPENCV_VERSION} && \\\n    mkdir build && cd build && \\\n    cmake -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D FORCE_VTK=ON \\\n    -D WITH_TBB=ON \\\n    -D WITH_V4L=ON \\\n    -D WITH_QT=ON \\\n    -D WITH_OPENGL=ON \\\n    -D WITH_CUBLAS=ON \\\n    -D CUDA_NVCC_FLAGS=\"-D_FORCE_INLINES --expt-relaxed-constexpr\" \\\n    -D WITH_GDAL=ON \\\n    -D WITH_XINE=ON \\\n    -D INSTALL_C_EXAMPLES=OFF \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D BUILD_EXAMPLES=OFF .. && \\\n    make -j $(($(nproc) + 1)) && \\\n    make install && \\\n    /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' && \\\n    ldconfig && \\\n    rm -rf ${DIR} && \\\n# ## CLEANUP\n    cd && \\\n    apt-get autoremove -y && \\\n    apt-get clean -y && rm opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n"
}