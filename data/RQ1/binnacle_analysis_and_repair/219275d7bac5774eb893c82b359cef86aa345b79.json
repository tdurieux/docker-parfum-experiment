{
  "startTime": 1674244319719,
  "endTime": 1674244319866,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian\nMAINTAINER Jack Shao \"jacky.shaoxg@gmail.com\"\n\n#install required packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -qqy --force-yes wget openssl python-dev python-pip supervisor vim git && rm -rf /var/lib/apt/lists/*;\n\n#get the toolchain\nWORKDIR /opt\nRUN dpkg --print-architecture\nRUN /bin/bash -c \"if dpkg --print-architecture | grep -q -e x86 -e amd ; then \\\n        wget -O xtensa.tar.gz https://github.com/esp8266/Arduino/releases/download/2.3.0/linux64-xtensa-lx106-elf-gb404fb9.tgz; else \\\n        wget -O xtensa.tar.gz https://github.com/esp8266/Arduino/releases/download/2.3.0/linuxarm-xtensa-lx106-elf-g46f160f-2.tar.gz; \\\n        ln -s /lib/arm-linux-gnueabi/ld-2.24.so /lib/ld-linux-armhf.so.3; fi\"\nRUN tar -zxvf xtensa.tar.gz && rm xtensa.tar.gz\nENV PATH /opt/xtensa-lx106-elf/bin:$PATH\n\n\nRUN pip install --no-cache-dir 'tornado<5'\nRUN pip install --no-cache-dir PyJWT\nRUN pip install --no-cache-dir pycrypto\nRUN pip install --no-cache-dir PyYaml\nRUN pip install --no-cache-dir tornado-cors\nRUN pip install --no-cache-dir psutil\n\n#add the files into image\nRUN mkdir -p /root/wio\nWORKDIR /root/wio\nCOPY . /root/wio\n#this is for marina.io builder\nRUN git submodule init || true\nRUN git submodule update || true\nRUN python ./scan_drivers.py\nRUN mv ./update.sh ../update.sh\nRUN chmod a+x ../update.sh\n\n#config supervisor\nRUN mv ./wio_server.conf /etc/supervisor/conf.d/wio_server.conf\nRUN mkdir -p /root/supervisor_log\n\n#expose ports\nEXPOSE 8000 8001 8080 8081\n\nCMD /etc/init.d/supervisor start && /bin/bash\n\n"
}