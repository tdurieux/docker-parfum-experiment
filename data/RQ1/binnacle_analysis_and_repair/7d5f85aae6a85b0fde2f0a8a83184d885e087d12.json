{
  "startTime": 1674234155064,
  "endTime": 1674234155187,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 58,
        "columnStart": 33,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG EMSCRIPTEN_SDK=sdk-tag-1.38.25-64bit\nFROM trzeci/emscripten:${EMSCRIPTEN_SDK} as emscripten_base\n\n# ------------------------------------------------------------------------------\n# Entries in this section is required to move Emscripten SDK to another base image\n\n# Any arbitrary base image of choice\nFROM ubuntu:bionic\n\n# Source /emsdk_portable contains every emscripten tool.\n# It's not recommended to change destination path\nCOPY --from=emscripten_base /emsdk_portable /emsdk_portable\n\n# Fallback in case Emscripten isn't activated.\n# This will let use tools offered by this image inside other Docker images (sub-stages) or with custom / no entrypoint\nENV EMSDK /emsdk_portable\nENV EMSCRIPTEN=${EMSDK}/emscripten/sdk\n\nENV EM_DATA ${EMSDK}/.data\nENV EM_CONFIG ${EMSDK}/.emscripten\nENV EM_CACHE ${EM_DATA}/cache\nENV EM_PORTS ${EM_DATA}/ports\n\n# Fallback in case Emscripten isn't activated\n# Expose Major tools to system PATH, so that emcc, node, asm2wasm etc can be used without activation\nENV PATH=\"${EMSDK}:${EMSDK}/emscripten/sdk:${EMSDK}/llvm/clang/bin:${EMSDK}/node/current/bin:${EMSDK}/binaryen/bin:${PATH}\"\n\n# Use entrypoint that's coming from emscripten-slim image. It sets all required system paths and variables\nENTRYPOINT [\"/emsdk_portable/entrypoint\"]\n\n# ------------------------------------------------------------------------------\n# This section contain an arbitrary code for image customization\n\nRUN echo \"Start emscripten-ubuntu compilation\" \\\n    &&  echo \"## Create a standard user: emscripten:emscripten\" \\\n    &&  groupadd --gid 1000 emscripten \\\n    &&  useradd --uid 1000 --gid emscripten --shell /bin/bash --create-home emscripten \\\n    \\\n    &&  echo \"## Update and install packages\" \\\n    &&  apt-get -qq -y update && apt-get -qq install -y --no-install-recommends \\\n        wget \\\n        git-core \\\n        ca-certificates \\\n        build-essential \\\n        python \\\n        python-pip \\\n        python3 \\\n        python3-pip \\\n        wget \\\n        curl \\\n        zip \\\n        unzip \\\n        git \\\n        ssh-client \\\n        ca-certificates \\\n        build-essential \\\n        make \\\n        cmake \\\n        ant \\\n&& echo \"\\n## Done\" && rm -rf /var/lib/apt/lists/*;\n\n# ------------------------------------------------------------------------------\n\nWORKDIR /src\n\n# ------------------------------------------------------------------------------\n# Copy this Dockerimage into image, so that it will be possible to recreate it later\nCOPY Dockerfile /emsdk_portable/dockerfiles/trzeci/emscripten-ubuntu/\n\nLABEL maintainer=\"kontakt@trzeci.eu\" \\\n      org.label-schema.name=\"emscripten-ubuntu\" \\\n      org.label-schema.description=\"Regular version of Emscripten compiler what should be suitable to compile majority of C++ projects for Emscripten, ASM.js and WebAssembly.\" \\\n      org.label-schema.url=\"https://trzeci.eu\" \\\n      org.label-schema.vcs-url=\"https://github.com/trzecieu/emscripten-docker\" \\\n      org.label-schema.docker.dockerfile=\"/docker/trzeci/emscripten-ubuntu/Dockerfile\"\n\n# ------------------------------------------------------------------------------\n"
}