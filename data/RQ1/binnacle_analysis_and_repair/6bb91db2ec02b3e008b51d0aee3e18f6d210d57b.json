{
  "startTime": 1674244340394,
  "endTime": 1674244340559,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 80,
        "columnStart": 1,
        "columnEnd": 14
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################################################\n# Source: https://github.com/linuxserver/docker-baseimage-alpine-python3/blob/master/Dockerfile\n# Simply using it as a baseimage fails:\n# - installing g++ fails (baseimage already installs it and purges it afterwards, so let's keep it)\n# - installing python 3.7.3 because that is what py3-libtorrent-rasterbar requires (doesn't work with 3.6.8)\nFROM lsiobase/alpine:3.9\n\n# Add edge/testing repositories.\nRUN printf \"\\\n@edge http://nl.alpinelinux.org/alpine/edge/main\\n\\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n\\\n@community http://nl.alpinelinux.org/alpine/edge/community\\n\\\n\" >> /etc/apk/repositories\n\nRUN apk add --no-cache \\\n    python3@edge \\\n    python3-dev@edge \\\n    py3-lxml@edge \\\n    boost-python3@edge \\\n    bash@edge\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache \\\n    autoconf \\\n    automake \\\n    freetype-dev \\\n    g++ \\\n    gcc \\\n    jpeg-dev \\\n    lcms2-dev \\\n    libffi-dev \\\n    libpng-dev \\\n    libwebp-dev \\\n    linux-headers \\\n    make \\\n    openjpeg-dev \\\n    openssl-dev \\\n    tiff-dev \\\n    zlib-dev && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n    curl \\\n    freetype \\\n    git \\\n    lcms2 \\\n    libjpeg-turbo \\\n    libwebp \\\n    openjpeg \\\n    openssl \\\n    p7zip \\\n    tar \\\n    tiff \\\n    unrar \\\n    unzip \\\n    vnstat \\\n    wget \\\n    xz \\\n    zlib && \\\n echo \"**** use ensure to check for pip and link /usr/bin/pip3 to /usr/bin/pip ****\" && \\\n python3 -m ensurepip && \\\n rm -r /usr/lib/python*/ensurepip && \\\n if \\\n    [ ! -e /usr/bin/pip ]; then \\\n    ln -s /usr/bin/pip3 /usr/bin/pip ; fi && \\\n echo \"**** install pip packages ****\" && \\\n pip install --no-cache-dir -U \\\n    pip \\\n    setuptools && \\\n pip install --no-cache-dir -U \\\n    configparser \\\n    ndg-httpsclient \\\n    notify \\\n    paramiko \\\n    pillow \\\n    psutil \\\n    pyopenssl \\\n    requests \\\n    setuptools \\\n    urllib3 \\\n    virtualenv && \\\n echo \"**** clean up ****\" && \\\n rm -rf \\\n    /root/.cache \\\n    /tmp/*\n\n##############################################################################\n# Here starts the usual changes compared to baseimage.\n\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=\"2\"\n\n# Set python to use utf-8 rather than ascii.\n# Also, for python3: https://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\n# Copy local files.\nCOPY etc/ /etc\nRUN chmod -v +x \\\n    /etc/cont-init.d/*  \\\n    /etc/services.d/*/run\n\n# Ports and volumes.\nEXPOSE 5050/tcp\nVOLUME /config\n"
}