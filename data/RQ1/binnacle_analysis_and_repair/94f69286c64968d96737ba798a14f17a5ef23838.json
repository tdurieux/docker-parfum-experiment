{
  "startTime": 1674237007471,
  "endTime": 1674237007611,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from python:3.7-stretch\n\nENV \\\n \tCOMPILER=gdc \\\n\tCOMPILER_VERSION=5.2.0\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl libcurl3 build-essential \\\n && curl -fsS -o /tmp/install.sh https://dlang.org/install.sh \\\n && bash /tmp/install.sh -p /dlang install \"${COMPILER}-${COMPILER_VERSION}\" \\\n && rm /tmp/install.sh \\\n && apt-get auto-remove -y curl build-essential \\\n && apt-get install --no-install-recommends -y gcc \\\n && rm -rf /var/cache/apt \\\n && rm -rf /dlang/${COMPILER}-*/linux/bin32 \\\n && rm -rf /dlang/${COMPILER}-*/linux/lib32 \\\n && rm -rf /dlang/${COMPILER}-*/html \\\n && rm -rf /dlang/dub-1.0.0/dub.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nENV \\\n  PATH=/dlang/${COMPILER}-${COMPILER_VERSION}/bin:${PATH} \\\n  LD_LIBRARY_PATH=/dlang/${COMPILER}-${COMPILER_VERSION}/lib \\\n  LIBRARY_PATH=/dlang/${COMPILER}-${COMPILER_VERSION}/lib \\\n  PS1=\"(${COMPILER}-${COMPILER_VERSION}) \\\\u@\\\\h:\\\\w\\$\"\n\nRUN cd /tmp \\\n && echo 'void main() {import std.stdio; stdout.writeln(\"it works\"); }' > test.d \\\n && gdc test.d -otest \\\n && ./test && rm test*\n\nRUN pip3 install --no-cache-dir nose numpy\nWORKDIR /src\n"
}