{
  "startTime": 1674238709033,
  "endTime": 1674238709124,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_TAG=3.6.5-alpine3.7\n\n# Builder image\nFROM python:${PYTHON_TAG} AS builder\nRUN apk add --no-cache \\\n        linux-headers \\\n        gettext-dev \\\n        postgresql-dev \\\n        gcc \\\n        musl-dev \\\n        pcre-dev\nRUN mkdir /wheels\nWORKDIR /wheels\nCOPY requirements.txt /wheels/requirements.txt\nRUN pip wheel -r requirements.txt\n\n# Workspace image\nFROM alpine:3.7 AS workspace\nARG PROJECT_NAME=teerace\nENV PROJECT_NAME ${PROJECT_NAME}\n\nRUN mkdir -p /code/static\nADD ${PROJECT_NAME} /code/${PROJECT_NAME}\nADD tests /code/tests\nADD setup.cfg entrypoint.sh /code/\n\n# Final image\nFROM python:${PYTHON_TAG}\nARG PROJECT_NAME=teerace\nENV PYTHONUNBUFFERED 1\nENV PROJECT_NAME ${PROJECT_NAME}\nENV RAVEN_RELEASE ${RAVEN_RELEASE}\nENV GIT_COMMIT ${GIT_COMMIT}\n\nRUN apk add --no-cache \\\n        libpq \\\n        pcre \\\n        gettext\nCOPY --from=builder /wheels /wheels\nRUN pip install --no-cache-dir \\\n        -r /wheels/requirements.txt \\\n        -f /wheels \\\n    && rm -rf /wheels \\\n    && rm -rf /root/.cache/pip\nRUN addgroup -S app \\\n    && adduser -S -G app app\nRUN mkdir /code\nWORKDIR /code\nCOPY --chown=app:app --from=workspace /code /code\nUSER app\nWORKDIR /code/${PROJECT_NAME}/\nRUN python manage.py collectstatic --noinput\n\nENTRYPOINT [\"../entrypoint.sh\"]\n"
}