{
  "startTime": 1674250695762,
  "endTime": 1674250695963,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Stefano Pacifici <stefano@cliqz.com>\nENV DEBIAN_FRONTEND noninteractive\n\n#Install the required packages. 1st Set is for Browser Project and the 2nd for Ruby and NodeJS.\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        curl \\\n        git \\\n        gnupg2 \\\n        language-pack-en \\\n        lib32z1 \\\n        libc6:i386 \\\n        libncurses5:i386 \\\n        libstdc++6:i386 \\\n        openjdk-8-jdk \\\n        python-dev \\\n        python-pip \\\n        python-virtualenv \\\n        unzip \\\n        wget \\\n        xz-utils && \\\n    apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        autoconf \\\n        automake \\\n        bison \\\n        build-essential \\\n        ca-certificates \\\n        gawk \\\n        libffi-dev \\\n        libgdbm-dev \\\n        libgmp-dev \\\n        libgmp-dev \\\n        libncurses5-dev \\\n        libreadline6-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtool \\\n        libyaml-dev \\\n        pkg-config \\\n        sqlite3 \\\n        zlib1g-dev && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Set the locale\nRUN locale-gen en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n# Add jenkins to the user group\nARG UID\nARG GID\nRUN getent group $GID || groupadd jenkins --gid $GID && \\\n    useradd --create-home --shell /bin/bash jenkins --uid $UID --gid $GID\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nENV ANDROID_HOME /home/jenkins/android_home\nENV GRADLE_USER_HOME /home/jenkins/gradle_home\nENV NVM_DIR /home/jenkins/nvm\nENV NODE_VERSION 8.9.3\n\nUSER jenkins\n\n#Install Android SDK and the Required SDKs\nRUN mkdir -p $ANDROID_HOME; \\\n    mkdir -p $GRADLE_USER_HOME; \\\n    cd $ANDROID_HOME; \\\n    wget --output-document=sdktools.zip --quiet 'https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip'; \\\n    unzip sdktools.zip; \\\n    rm -r sdktools.zip; \\\n    (while (true); do echo y; sleep 2; done) | \\\n        tools/bin/sdkmanager  \\\n        \"build-tools;26.0.2\" \\\n        \"platforms;android-23\" \\\n        \"platforms;android-27\" \\\n        \"platform-tools\" \\\n        \"tools\" \\\n        \"platforms;android-25\" \\\n        \"extras;google;m2repository\" \\\n        \"extras;android;m2repository\" \\\n        \"extras;google;google_play_services\";\n\nENV LD_LIBRARY_PATH \"/home/jenkins/android_home/emulator/lib64/qt/lib\"\n\n# Install Node.JS\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash && \\\n    . $NVM_DIR/nvm.sh\n\nENV PATH \"$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\"\n\n#Installation of 'yarn'; 'appium' & 'wd' for Integration Tests\nRUN npm install --global \\\n    yarn \\\n    appium \\\n    wd && npm cache clean --force;\n\n#Install Ruby and Fastlane\n\nRUN gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 && \\\n    curl -f -sSL https://get.rvm.io | bash -s stable --ruby=2.4.1 --autolibs=read-fail\nRUN gem install fastlane"
}