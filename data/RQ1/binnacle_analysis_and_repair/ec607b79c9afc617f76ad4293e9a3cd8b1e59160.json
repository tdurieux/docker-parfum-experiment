{
  "startTime": 1674236563268,
  "endTime": 1674236563382,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 66,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedDockerfile": "FROM node:10-stretch\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN echo -e \"*\\thard\\t64000\" >> /etc/security/limits.conf && \\\n    echo -e \"*\\tsoft\\tnproc  64000\" >> /etc/security/limits.conf;\n\nRUN apt-get -qq update && \\\n    apt-get -qq --no-install-recommends install build-essential software-properties-common dirmngr curl wget libunwind8 gettext apt-transport-https -y; rm -rf /var/lib/apt/lists/*;\n\n# Install repos\nRUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > microsoft.asc.gpg && \\\n    mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/ && \\\n    wget -q https://packages.microsoft.com/config/debian/9/prod.list -O /etc/apt/sources.list.d/microsoft-prod.list && \\\n    apt-get -qq update;\n\n# Install Java-8 and NetCore\nRUN apt-get -qq --no-install-recommends install dotnet-sdk-2.1 openjdk-8-jdk openjdk-8-jre -y; rm -rf /var/lib/apt/lists/*;\n\n# Cleanup APT cache\nRUN apt-get clean;\n\nRUN npm install; npm cache clean --force;\n\n# Bundle app source\nCOPY . .\nRUN cd runtime && \\\n    bash compile_linux.sh;\n\nEXPOSE 3000\nCMD [ \"npm\", \"start\" ]\n"
}