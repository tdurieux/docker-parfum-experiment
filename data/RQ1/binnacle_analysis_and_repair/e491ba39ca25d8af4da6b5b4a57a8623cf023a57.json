{
  "startTime": 1674248900022,
  "endTime": 1674248900282,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 14,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 14,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 41,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 41,
        "columnStart": 25,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# geographica/gdal2\n#\n# This creates an Ubuntu derived base image that installs GDAL 2.\n#\n# Ubuntu 18.04 Bionic Beaver\nFROM ubuntu:bionic\n\nMAINTAINER Cayetano Benavent <cayetano.benavent@geographica.gs>\n\nENV ROOTDIR /usr/local/\nENV GDAL_VERSION 2.3.2\nENV OPENJPEG_VERSION 2.3.0\n\n# Load assets\nWORKDIR $ROOTDIR/\n\nADD http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz $ROOTDIR/src/\nADD https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz $ROOTDIR/src/openjpeg-${OPENJPEG_VERSION}.tar.gz\n\n# Install basic dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    build-essential \\\n    python-dev \\\n    python3-dev \\\n    python-numpy \\\n    python3-numpy \\\n    libspatialite-dev \\\n    sqlite3 \\\n    libpq-dev \\\n    libcurl4-gnutls-dev \\\n    libproj-dev \\\n    libxml2-dev \\\n    libgeos-dev \\\n    libnetcdf-dev \\\n    libpoppler-dev \\\n    libspatialite-dev \\\n    libhdf4-alt-dev \\\n    libhdf5-serial-dev \\\n    bash-completion \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\n# Compile and install OpenJPEG\nRUN cd src && tar -xvf openjpeg-${OPENJPEG_VERSION}.tar.gz && cd openjpeg-${OPENJPEG_VERSION}/ \\\n    && mkdir build && cd build \\\n    && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n    && make && make install && make clean \\\n    && cd $ROOTDIR && rm -Rf src/openjpeg* && rm openjpeg-${OPENJPEG_VERSION}.tar.gz\n\n# Compile and install GDAL\nRUN cd src && tar -xvf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-python --with-spatialite --with-pg --with-curl --with-openjpeg \\\n    && make && make install && ldconfig \\\n    && apt-get update -y \\\n    && apt-get remove -y --purge build-essential \\\n    && cd $ROOTDIR && cd src/gdal-${GDAL_VERSION}/swig/python \\\n    && python3 setup.py build \\\n    && python3 setup.py install \\\n    && cd $ROOTDIR && rm -Rf src/gdal* && rm gdal-${GDAL_VERSION}.tar.gz\n\n# Output version and capabilities by default.\nCMD gdalinfo --version && gdalinfo --formats && ogrinfo --formats\n"
}