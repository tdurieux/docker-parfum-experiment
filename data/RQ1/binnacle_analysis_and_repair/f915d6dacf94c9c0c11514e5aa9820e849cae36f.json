{
  "startTime": 1674246662282,
  "endTime": 1674246662381,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# descartes_capability:melodic-source\n# Downloads the source code, installs the remaining debian dependencies, and\n# builds the package\n\nFROM ros:melodic\n\n# Remove warning 'Could not determine the width of the terminal.'\nENV TERM xterm\n\nENV CATKIN_WS=/root/ws_catkin\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS/src\n\n# Install SHH\n# Note: --fix-missing is run to fix an issue with an outdated ros-melodic-rviz-visual-tools\nRUN apt-get -qq update --fix-missing && \\\n    apt-get -qq --no-install-recommends install -y wget ssh python-catkin-tools python-wstool && rm -rf /var/lib/apt/lists/*;\n\n# Setup for ssh onto github & bitbucket\n# Before running Docker, run locally: `cp ~/.ssh/id_rsa_unsafe id_rsa`\nRUN mkdir -p /root/.ssh\nCOPY id_rsa /root/.ssh/id_rsa\nRUN chmod 700 /root/.ssh/id_rsa\n\nRUN ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts\nRUN ssh-keyscan -t rsa bitbucket.org >> ~/.ssh/known_hosts\n\n# Download descartes_capability source\nRUN git clone git@github.com:PickNikRobotics/descartes_capability.git && \\\n    wstool init . && \\\n    wstool merge ./descartes_capability/descartes_capability.rosinstall && \\\n    wstool update && \\\n    rm /root/.ssh/id_rsa\n\n# Note that because we're building on top of melodic-ci, there should not be\n# any deps installed unless something has changed in the source code since the\n# other container was made (they are triggered together so should only be\n# one-build out of sync)\nRUN rosdep update && \\\n    rosdep install -y --from-paths . --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false\n\n# Configures environment\nWORKDIR $CATKIN_WS\nENV TERM xterm\nENV PYTHONIOENCODING UTF-8\n\n# Status rate is limited so that just enough info is shown to keep Docker from\n# timing out, but not too much such that the Docker log gets too long (another\n# form of timeout)\nRUN catkin config --extend /opt/ros/${ROS_DISTRO} --cmake-args -DCMAKE_BUILD_TYPE=Release && \\\n    catkin build --jobs 1 --limit-status-rate 0.001 --no-notify && \\\n    echo '. /opt/ros/melodic/setup.bash' >> ~/.bashrc && \\\n    echo '. $CATKIN_WS/devel/setup.bash' >> ~/.bashrc\n"
}