{
  "startTime": 1674242057825,
  "endTime": 1674242057974,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 18,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n# Copyright 2018 Dell Technologies, Inc All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n###############################################################################\n\n# Docker image for building EdgeX Foundry Config Seed\nFROM golang:1.12-alpine AS build-env\n\n# environment variables\nENV GO111MODULE=on\nENV GOPATH=/go\nENV PATH=$GOPATH/bin:$PATH\n\n# set the working directory\nWORKDIR $GOPATH/src/github.com/edgexfoundry/edgex-go\n\nRUN apk update && apk add --no-cache make git python3 jq\n\n# install remarshal for processing config files in proper way, i.e. turn toml\n# into json, use jq to set the correct keys, then turn back into toml in the\n# files\nRUN python3 -m pip install remarshal\n\n# copy go source files\nCOPY go.mod .\n#COPY go.sum .\n\nRUN go mod download\n\nCOPY . .\n\n# create an identical dir structure under /cmd-redis for using redis\n# instead of mongodb\nCOPY ./cmd ./cmd-redis\n\n# for svcs supporting redis directly, change the following keys before copying\n# Databases.Primary.Type = redisdb\n# Databases.Primary.Port = 6379\n# Databases.Primary.Host = edgex-redis\nRUN for svc in core-data core-metadata export-client support-notifications support-scheduler; do \\\n    configFile=./cmd-redis/$svc/res/docker/configuration.toml && \\\n    toml2json --preserve-key-order \"$configFile\" | \\\n    jq -r '.Databases.Primary.Type = \"redisdb\" | .Databases.Primary.Port = 6379 | .Databases.Primary.Host = \"edgex-redis\"' | \\\n    json2toml --preserve-key-order > \"$configFile.tmp\" && \\\n    mv \"$configFile.tmp\" \"$configFile\"; done\n\n# support-logging needs the Writable.Persistence key set to file to be usable with Redis\nRUN configFile=./cmd-redis/support-logging/res/docker/configuration.toml && \\\n    toml2json --preserve-key-order \"$configFile\" | \\\n    jq -r '.Writable.Persistence = \"file\"' | \\\n    json2toml --preserve-key-order > \"$configFile.tmp\" && \\\n    mv \"$configFile.tmp\" \"$configFile\"\n\n# cleanup build only utils\nRUN python3 -m pip uninstall -y remarshal && apk del python3 jq\n\n# build\nRUN make cmd/config-seed/config-seed\n\nFROM scratch\n\nLABEL license='SPDX-License-Identifier: Apache-2.0' \\\n    copyright='Copyright (c) 2017: Samsung'\n\n# set the working directory\nWORKDIR /edgex/cmd/config-seed\n\n# copy files\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/Attribution.txt  .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/config-seed  .\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/config-seed/res ./res\n\n# copy all the default (i.e. mongodb) configuration.toml files into /edgex/cmd\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-command/res /edgex/cmd/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-data/res /edgex/cmd/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/core-metadata/res /edgex/cmd/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-client/res /edgex/cmd/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/export-distro/res /edgex/cmd/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-logging/res /edgex/cmd/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-notifications/res /edgex/cmd/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/support-scheduler/res /edgex/cmd/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd/sys-mgmt-agent/res /edgex/cmd/sys-mgmt-agent/res\n\n# copy all the redis configuration.toml into /edgex/cmd-redis\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-command/res /edgex/cmd-redis/core-command/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-data/res /edgex/cmd-redis/core-data/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/core-metadata/res /edgex/cmd-redis/core-metadata/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-client/res /edgex/cmd-redis/export-client/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/export-distro/res /edgex/cmd-redis/export-distro/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-logging/res /edgex/cmd-redis/support-logging/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-notifications/res /edgex/cmd-redis/support-notifications/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/support-scheduler/res /edgex/cmd-redis/support-scheduler/res\nCOPY --from=build-env /go/src/github.com/edgexfoundry/edgex-go/cmd-redis/sys-mgmt-agent/res /edgex/cmd-redis/sys-mgmt-agent/res\n\nENTRYPOINT [\"/edgex/cmd/config-seed/config-seed\"]\nCMD [\"--profile=docker\", \"--cmd=/edgex/cmd\"]\n"
}