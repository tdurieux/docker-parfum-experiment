{
  "startTime": 1674248887317,
  "endTime": 1674248887596,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 115
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 20
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM yangxuan8282/rpi-alpine:3.5\nMAINTAINER Yangxuan <yangxuan8282@gmail.com>\n\nENV GRAFANA_VERSION 4.1.1\n\nRUN apk --no-cache add nodejs\n\nRUN apk update && apk upgrade \\\n  && apk --no-cache add fontconfig curl libpng-dev freetype-dev \\\n  && apk --virtual build-deps add build-base go git gcc python musl-dev make nodejs-dev fontconfig-dev \\\n  && apk update && apk add --no-cache fontconfig curl \\\n  && mkdir -p /usr/share \\\n  && cd /usr/share \\\n  && curl -f -L https://github.com/yangxuan8282/docker-image/releases/download/2.1.1/phantomjs-2.1.1-alpine-arm.tar.xz | tar xJ \\\n  && ln -s /usr/share/phantomjs/phantomjs /usr/bin/phantomjs \\\n  && export GOPATH=/go \\\n  && mkdir -p $GOPATH/src/github.com/grafana && cd $GOPATH/src/github.com/grafana \\\n  && git clone https://github.com/grafana/grafana.git -b v${GRAFANA_VERSION} \\\n  && export GOPATH=/go \\\n  && cd $GOPATH/src/github.com/grafana/grafana \\\n  && npm install -g yarn@0.19.0 --registry=http://r.cnpmjs.org \\\n  && npm install -g grunt-cli@1.2.0 --registry=http://r.cnpmjs.org \\\n  && go run build.go setup \\\n  && go run build.go build \\\n  && yarn install \\\n  && npm run build \\\n  && npm uninstall -g yarn \\\n  && npm uninstall -g grunt-cli \\\n  && npm cache clear --force \\\n  && mv ./bin/grafana-server ./bin/grafana-cli /bin/ \\\n  && mkdir -p /etc/grafana/json /var/lib/grafana/plugins /var/log/grafana /usr/share/grafana \\\n  && mv ./public_gen /usr/share/grafana/public \\\n  && mv ./conf /usr/share/grafana/conf \\\n  && apk del build-deps && cd / && rm -rf /var/cache/apk/* /usr/local/share/.cache $GOPATH && yarn cache clean;\n\nVOLUME [\"/var/lib/grafana\", \"/var/lib/grafana/plugins\", \"/var/log/grafana\"]\n\nEXPOSE 3000\n\nENV INFLUXDB_HOST localhost\nENV INFLUXDB_PORT 8086\nENV INFLUXDB_PROTO http\nENV INFLUXDB_USER grafana\nENV INFLUXDB_PASS changeme\nENV GRAFANA_USER admin\nENV GRAFANA_PASS changeme\n#ENV GRAFANA_BASE_URL\n#ENV FORCE_HOSTNAME\n\nCOPY grafana.ini /usr/share/grafana/conf/defaults.ini.tpl\nCOPY run.sh /run.sh\n\nENTRYPOINT [\"/bin/sh\", \"-c\"]\nCMD [\"/run.sh\"]\n\nHEALTHCHECK --interval=5s --retries=5 --timeout=2s CMD curl -u $GRAFANA_USER:$GRAFANA_PASS 127.0.0.1:3000/api/org 2>/dev/null | grep -q '\"id\":'\n"
}