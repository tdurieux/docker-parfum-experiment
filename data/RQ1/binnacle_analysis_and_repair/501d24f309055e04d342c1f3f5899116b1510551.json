{
  "startTime": 1674248530070,
  "endTime": 1674248530230,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 34,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# Docker image for building Android APKs via buildozer\n# Build with:\n# docker build --tag=etheroll-android --file=dockerfiles/Dockerfile-android .\n# Run with:\n# docker run etheroll-android /bin/sh -c 'buildozer android debug'\n# Or using the entry point shortcut:\n# docker run etheroll-android 'buildozer android debug'\n# Or for interactive shell:\n# docker run -it --rm etheroll-android\nFROM ubuntu:18.04\n\nARG TRAVIS=false\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\"\nENV DOCKERFILES_VERSION=\"master\" \\\n    DOCKERFILES_URL=\"https://raw.githubusercontent.com/AndreMiras/dockerfiles\"\nENV MAKEFILES_URL=\"${DOCKERFILES_URL}/${DOCKERFILES_VERSION}/buildozer_android_new\"\n\n\n# configure locale\nRUN apt update -qq > /dev/null && apt install -qq --yes --no-install-recommends \\\n    locales && \\\n    locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\n# install system dependencies (required to setup all the tools)\nRUN apt install -qq --yes --no-install-recommends \\\n    make curl ca-certificates xz-utils unzip openjdk-8-jdk sudo python-pip \\\n    python-setuptools && rm -rf /var/lib/apt/lists/*;\n\n# install build dependencies (required to successfully build the project)\n# TODO: should this go to a Makefile instead so it can be shared/reused?\nRUN apt install -qq --yes --no-install-recommends \\\n    python3.6 libpython3.6-dev python3-setuptools \\\n    autoconf automake libtool libltdl-dev libffi-dev bsdtar zip && rm -rf /var/lib/apt/lists/*;\n\n# prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n# with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nUSER ${USER}\nWORKDIR ${WORK_DIR}\n\n# install buildozer and dependencies\nRUN curl -f --location --progress-bar ${MAKEFILES_URL}/buildozer.mk --output buildozer.mk\nRUN make -f buildozer.mk\n# enforces buildozer master (586152c) until next release\nRUN pip install --no-cache-dir --upgrade https://github.com/kivy/buildozer/archive/586152c.zip\n\nCOPY . ${WORK_DIR}\n# limits the amount of logs for Travis\nRUN if [ \"${TRAVIS}\" = \"true\" ]; then sed 's/log_level = [0-9]/log_level = 1/' -i buildozer.spec; fi\nENTRYPOINT [\"./dockerfiles/start.sh\"]\n"
}