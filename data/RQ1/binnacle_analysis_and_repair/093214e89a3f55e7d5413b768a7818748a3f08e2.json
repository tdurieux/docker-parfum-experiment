{
  "startTime": 1674245767843,
  "endTime": 1674245768341,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 24,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 11,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 42,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 42,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "#############################\n# Contest 3.4 Development\n#\n# Docker file to be used with Docker Compose. This will setup a complete development environment\n#\n#############################\n\nFROM php:7.1-apache\n\nMAINTAINER App-Arena GmbH <friends@app-arena.com>\n\n# Set the locale\nRUN apt-get clean && apt-get -y update && apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# Set environment variables\nENV COMPOSER_ALLOW_SUPERUSER=1\n#ENV LANG en_US.UTF-8\n#ENV LANGUAGE en_US:en\n#ENV LC_ALL en_US.UTF-8\n\n# Install Ubuntu packages\nRUN apt-get install --no-install-recommends -y \\\n        build-essential \\\n        curl \\\n        git \\\n        libcurl4-openssl-dev \\\n        libicu-dev \\\n        libmcrypt-dev \\\n        libmysqlclient-dev \\\n        libpng-dev \\\n        mysql-client \\\n        ruby-full \\\n        software-properties-common \\\n        vim \\\n        zip && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP and NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && apt-get install --no-install-recommends -y \\\n        nodejs \\\n    && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \\\n    && docker-php-ext-install \\\n      curl \\\n      #fpm \\\n      gd \\\n      intl \\\n      json \\\n      mbstring \\\n      mcrypt \\\n      mysqli \\\n      pdo_mysql \\\n      zip \\\n      opcache \\\n    && php -r \"readfile('http://getcomposer.org/installer');\" | php -- --install-dir=/usr/bin/ --filename=composer \\\n    && npm install -g bower \\\n    && mkdir /run/php \\\n    && apt-get remove -y --purge software-properties-common \\\n    && apt-get -y autoremove \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && npm cache clean --force;\n\n# Install Dev dependecies\nRUN curl -fsSL 'https://xdebug.org/files/xdebug-2.5.5.tgz' -o xdebug.tar.gz \\\n        && mkdir -p xdebug \\\n        && tar -xf xdebug.tar.gz -C xdebug --strip-components=1 \\\n        && rm xdebug.tar.gz \\\n        && ( cd xdebug \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n        && rm -r xdebug \\\n        && docker-php-ext-enable xdebug\nCOPY ./build/docker/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\nRUN su -c \"gem install sass\"\n\n# Apache configuration\nRUN a2enmod rewrite\nRUN service apache2 restart\n\n# Change uid and gid of apache to docker user uid/gid\nRUN usermod -u 1000 www-data && groupmod -g 1000 www-data\n\n# Install package dependencies\nWORKDIR /var/www/html\nCOPY composer.json package.json bower.json ./\nRUN composer install && npm install --quiet && bower install --allow-root && npm cache clean --force;\n\n#COPY start-container /usr/local/bin/start-container\n#RUN chmod +x usr/local/bin/start-container\n\n#EXPOSE 80\n#CMD [\"start-container\"]"
}