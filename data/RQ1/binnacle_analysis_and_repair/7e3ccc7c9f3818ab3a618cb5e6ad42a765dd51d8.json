{
  "startTime": 1674251177369,
  "endTime": 1674251177713,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 99,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nLABEL org.label-schema.license=\"GPL-2.0\" \\\n      org.label-schema.vcs-url=\"https://github.com/rocker-org/rocker-versioned\" \\\n      org.label-schema.vendor=\"Rocker Project\" \\\n      maintainer=\"Carl Boettiger <cboettig@ropensci.org>\"\n\nARG R_VERSION\nARG BUILD_DATE\nENV BUILD_DATE ${BUILD_DATE:-2019-03-11}\nENV R_VERSION=${R_VERSION:-3.5.2} \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    TERM=xterm\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bash-completion \\\n    ca-certificates \\\n    file \\\n    fonts-texgyre \\\n    g++ \\\n    gfortran \\\n    gsfonts \\\n    libblas-dev \\\n    libbz2-1.0 \\\n    libcurl3 \\\n    libicu57 \\\n    libjpeg62-turbo \\\n    libopenblas-dev \\\n    libpangocairo-1.0-0 \\\n    libpcre3 \\\n    libpng16-16 \\\n    libreadline7 \\\n    libtiff5 \\\n    liblzma5 \\\n    locales \\\n    make \\\n    unzip \\\n    zip \\\n    zlib1g \\\n  && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n  && locale-gen en_US.utf8 \\\n  && /usr/sbin/update-locale LANG=en_US.UTF-8 \\\n  && BUILDDEPS=\"curl \\\n    default-jdk \\\n    libbz2-dev \\\n    libcairo2-dev \\\n    libcurl4-openssl-dev \\\n    libpango1.0-dev \\\n    libjpeg-dev \\\n    libicu-dev \\\n    libpcre3-dev \\\n    libpng-dev \\\n    libreadline-dev \\\n    libtiff5-dev \\\n    liblzma-dev \\\n    libx11-dev \\\n    libxt-dev \\\n    perl \\\n    tcl8.6-dev \\\n    tk8.6-dev \\\n    texinfo \\\n    texlive-extra-utils \\\n    texlive-fonts-recommended \\\n    texlive-fonts-extra \\\n    texlive-latex-recommended \\\n    x11proto-core-dev \\\n    xauth \\\n    xfonts-base \\\n    xvfb \\\n    zlib1g-dev\" \\\n  && apt-get install -y --no-install-recommends $BUILDDEPS \\\n  && cd tmp/ \\\n  ## Download source code \\\n  && curl -f -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \\\n  ## Extract source code\n  && tar -xf R-${R_VERSION}.tar.gz \\\n  && cd R-${R_VERSION} \\\n  ## Set compiler flags\n  && R_PAPERSIZE=letter \\\n    R_BATCHSAVE=\"--no-save --no-restore\" \\\n    R_BROWSER=xdg-open \\\n    PAGER=/usr/bin/pager \\\n    PERL=/usr/bin/perl \\\n    R_UNZIPCMD=/usr/bin/unzip \\\n    R_ZIPCMD=/usr/bin/zip \\\n    R_PRINTCMD=/usr/bin/lpr \\\n    LIBnn=lib \\\n    AWK=/usr/bin/awk \\\n    CFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\" \\\n    CXXFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\" \\\n\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n\n\n\n\n\n\n\n  ## Configure options\n  --enable-R-shlib \\\n               --enable-memory-profiling \\\n               --with-readline \\\n               --with-blas \\\n               --with-tcltk \\\n               --disable-nls \\\n               --with-recommended-packages \\\n  ## Build and install\n  && make \\\n  && make install \\\n  ## Add a default CRAN mirror\n  && echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n  ## Add a library directory (for user-installed packages)\n  && mkdir -p /usr/local/lib/R/site-library \\\n  && chown root:staff /usr/local/lib/R/site-library \\\n  && chmod g+wx /usr/local/lib/R/site-library \\\n  ## Fix library path\n  && echo \"R_LIBS_USER='/usr/local/lib/R/site-library'\" >> /usr/local/lib/R/etc/Renviron \\\n  && echo \"R_LIBS=\\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n  ## install packages from date-locked MRAN snapshot of CRAN\n  && [ -z \"$BUILD_DATE\" ] && BUILD_DATE=$(TZ=\"America/Los_Angeles\" date -I) || true \\\n  && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n  && echo MRAN=$MRAN >> /etc/environment \\\n  && export MRAN=$MRAN \\\n  && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n  ## Use littler installation scripts\n  && Rscript -e \"install.packages(c('littler', 'docopt'), repo = '$MRAN')\" \\\n  && ln -s /usr/local/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \\\n  && ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \\\n  && ln -s /usr/local/lib/R/site-library/littler/bin/r /usr/local/bin/r \\\n  ## Clean up from R source install\n  && cd / \\\n  && rm -rf /tmp/* \\\n  && apt-get remove --purge -y $BUILDDEPS \\\n  && apt-get autoremove -y \\\n  && apt-get autoclean -y \\\n  && rm -rf /var/lib/apt/lists/* && rm R-${R_VERSION}.tar.gz\n\nCMD [\"R\"]\n\n"
}