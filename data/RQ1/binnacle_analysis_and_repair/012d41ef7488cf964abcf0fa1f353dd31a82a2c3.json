{
  "startTime": 1674251381704,
  "endTime": 1674251381931,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 0,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 0,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 18,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 0,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 18,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 0,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 0,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 18,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 0,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 1,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "# Highly-Optimized Docker Image of pyLoad (ubuntu variant)\n# AUTHOR: vuolter\n#      ____________\n#   _ /       |    \\ ___________ _ _______________ _ ___ _______________\n#  /  |    ___/    |   _ __ _  _| |   ___  __ _ __| |   \\\\    ___  ___ _\\\n# /   \\___/  ______/  | '_ \\ || | |__/ _ \\/ _` / _` |    \\\\  / _ \\/ _ `/ \\\n# \\       |   o|      | .__/\\_, |____\\___/\\__,_\\__,_|    // /_//_/\\_, /  /\n#  \\______\\    /______|_|___|__/________________________//______ /___/__/\n#          \\  /\n#           \\/\n\nARG UBUNTU_RELEASE=\"bionic\"\n\n\n\n\nFROM lsiobase/ubuntu:$UBUNTU_RELEASE as builder\n\nARG APT_INSTALL_OPTIONS=\"--no-install-recommends --yes\"\nARG PIP_INSTALL_OPTIONS=\"--disable-pip-version-check --no-cache-dir --no-compile --upgrade\"\n\nARG APK_PACKAGES=\"python3 openssl python3-distutils wget\"\nARG PIP_PACKAGES=\"pip setuptools wheel\"\n\nRUN \\\n echo \"**** install Python ****\" && \\\napt-get update && apt-get install -y --no-install-recommends $APT_INSTALL_OPTIONS $APK_PACKAGES && \\\nln -sf python3 /usr/bin/python && \\\n\necho \"**** install pip ****\" && \\\nwget -q -O - \"https://bootstrap.pypa.io/get-pip.py\" | python /dev/stdin $PIP_INSTALL_OPTIONS && \\\nln -sf pip3 /usr/bin/pip && rm -rf /var/lib/apt/lists/*;\n\n\n\n\nFROM builder as wheels_builder\n\nCOPY setup.cfg /source/setup.cfg\nWORKDIR /wheels\n\nRUN \\\necho \"**** build pyLoad dependencies ****\" && \\\npython -c \"import configparser as cp; c = cp.ConfigParser(); c.read('/source/setup.cfg'); print(c['options']['install_requires'] + c['options.extras_require']['extra'])\" | \\\nxargs pip wheel --wheel-dir=.\n\n\n\n\nFROM builder as source_builder\n\nCOPY . /source\nWORKDIR /source\n\nARG PIP_INSTALL_OPTIONS=\"--disable-pip-version-check --no-cache-dir --no-compile --upgrade\"\nARG PIP_PACKAGES=\"Babel Jinja2\"\n\nRUN \\\n echo \"**** build pyLoad locales ****\" && \\\n pip install --no-cache-dir $PIP_INSTALL_OPTIONS $PIP_PACKAGES && \\\npython setup.py build_locale\n\n\n\n\nFROM builder as package_builder\n\nCOPY --from=wheels_builder /wheels /wheels\nCOPY --from=source_builder /source /source\nWORKDIR /package\n\nARG PIP_INSTALL_OPTIONS=\"--disable-pip-version-check --no-cache-dir --no-compile --upgrade\"\n\nRUN \\\n echo \"**** build pyLoad package ****\" && \\\n pip install --no-cache-dir $PIP_INSTALL_OPTIONS --find-links=/wheels --no-index --prefix=. /source[extra]\n\n\n\n\nFROM builder\n\nLABEL \\\nversion=\"1.0\" \\\ndescription=\"The free and open-source Download Manager written in pure Python\" \\\nmaintainer=\"vuolter@gmail.com\"\n\n# Set Python to force stdin, stdout and stderr to be totally unbuffered.\nENV PYTHONUNBUFFERED=1\n\n# Stop if any script (fix-attrs or cont-init) has failed.\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2\n\nARG APT_INSTALL_OPTIONS=\"--no-install-recommends --yes\"\nARG APT_PACKAGES=\"sqlite tesseract-ocr unrar\"\n\nARG TEMP_PATHS=\"/root/.cache /tmp/* /var/lib/apt/lists/* /var/tmp/*\"\n\nRUN \\\n echo \"**** install binary packages ****\" && \\\n apt-get install -y --no-install-recommends $APT_INSTALL_OPTIONS $APT_PACKAGES && \\\n\necho \"**** create s6 fix-attr script ****\" && \\\necho -e \"/config true abc 0644 0755\\n \\\n/downloads false abc 0644 0755\" > /etc/fix-attrs.d/10-run && \\\n\necho \"**** create s6 service script ****\" && \\\nmkdir -p /etc/services.d/pyload && \\\necho -e \"#!/usr/bin/with-contenv bash\\n\\n \\\numask 022\\n \\\nexec s6-setuidgid abc pyload --userdir /config --storagedir /downloads\" > /etc/services.d/pyload/run && \\\n\necho \"**** cleanup ****\" && \\\nrm -rf $TEMP_PATHS && \\\n\necho \"**** finalize pyLoad ****\" && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=package_builder /package /usr/local\n\nEXPOSE 8001 9666\n\nVOLUME /config /downloads\n"
}