{
  "startTime": 1674245426060,
  "endTime": 1674245427096,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 261,
        "lineEnd": 261,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 267,
        "lineEnd": 267,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 268,
        "lineEnd": 268,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 269,
        "lineEnd": 269,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2015 Google Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# We use different base images for GPU vs CPU Dockerfiles, so we expect\n# that the appropriate image is pulled and tagged locally.\n# CPU should use ubuntu:16.04\n# and GPU uses nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04\nFROM datalab-external-base-image\nMAINTAINER Google Cloud DataLab\n\n# Container configuration\nEXPOSE 8080\n\n# Path configuration\nENV DATALAB_CONDA_DIR /usr/local\nENV PATH $PATH:/tools/node/bin:/tools/google-cloud-sdk/bin:$DATALAB_CONDA_DIR/bin\n\nENV PYTHON_2_ENV py2env\nENV PYTHON_3_ENV py3env\n\n# Needed to run \"source\" for switching Conda environments.\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Setup OS and core packages\nRUN echo \"deb-src http://ftp.us.debian.org/debian testing main\" >> /etc/apt/sources.list && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y -q debian-archive-keyring debian-keyring && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y -q \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        locales \\\n        openssh-client \\\n        pkg-config \\\n        unzip \\\n        wget \\\n        zip && \\\n    mkdir -p /tools && \\\n# Save GPL source packages\n    mkdir -p /srcs && \\\n    cd /srcs && \\\n    apt-get source -d wget git python-zmq ca-certificates pkg-config libpng-dev && \\\n    cd / && \\\n# Set our locale to en_US.UTF-8.\n    locale-gen en_US.UTF-8 && \\\n    update-locale LANG=en_US.UTF-8 && \\\n# Install MiniConda, set up Python 2.7 Conda env, and install packages.\n    wget --quiet -O ~/miniconda.sh \\\n    https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -f -p $DATALAB_CONDA_DIR && \\\n    rm ~/miniconda.sh && \\\n    conda update conda --quiet --yes && \\\n    conda config --system --append channels conda-forge && \\\n    conda config --system --set show_channel_urls true && \\\n    conda update --all --quiet --yes && \\\n    conda create --yes --quiet --name $PYTHON_2_ENV python=2.7 \\\n        crcmod==1.7 \\\n        dask==0.17.1 \\\n        dill==0.2.6 \\\n        future==0.16.0 \\\n        futures==3.2.0 \\\n        google-api-python-client==1.6.2 \\\n        httplib2==0.10.3 \\\n        h5py==2.7.1 \\\n        ipykernel==4.8.2 \\\n        ipywidgets==7.2.1 \\\n        jinja2==2.8 \\\n        jsonschema==2.6.0 \\\n        matplotlib==2.1.2 \\\n        mock==2.0.0 \\\n        nltk==3.2.1 \\\n        numpy==1.14.0 \\\n        oauth2client==2.2.0 \\\n        pandas-gbq==0.3.0 \\\n        pandas==0.22.0 \\\n        pandas-profiling==1.4.2 \\\n        pandocfilters==1.4.2 \\\n        pillow==5.0.0 \\\n        pip==18.1 \\\n        plotly==1.12.5 \\\n        psutil==4.3.0 \\\n        pygments==2.1.3 \\\n        python-dateutil==2.5.0 \\\n        python-snappy==0.5.1 \\\n        pytz==2018.4 \\\n        pyyaml==3.13 \\\n        pyzmq==17.1.0 \\\n        requests==2.18.4 \\\n        scikit-image==0.13.0 \\\n        scikit-learn==0.19.1 \\\n        scipy==1.0.0 \\\n        seaborn==0.7.0 \\\n        six==1.11.0 \\\n        statsmodels==0.8.0 \\\n        sympy==0.7.6.1 \\\n        tornado==4.5.1 \\\n        widgetsnbextension==3.2.1 \\\n        xgboost==0.6a2 && \\\n# Install Python2 packages that aren't available or up-to-date in Conda.\n    source activate $PYTHON_2_ENV && \\\n    pip install --quiet -U --upgrade-strategy only-if-needed --no-cache-dir \\\n        apache-airflow==1.9.0 \\\n        bs4==0.0.1 \\\n        ggplot==0.6.8 \\\n        google-cloud-dataflow==2.0.0 \\\n        google-cloud-monitoring==0.28.0 \\\n        lime==0.1.1.23 \\\n        protobuf==3.6.1 \\\n        tensorflow==1.8.0 && \\\n    source deactivate && \\\n# Clean up before setting up the Python3 env.\n    conda clean -tipsy && \\\n# This var needs to be unset before installing the Python3 Conda env to\n# avoid subtle dependency issues.\n    unset OLDPWD && \\\n# Set up Python 3.5 Conda env and install packages.\n    conda create --yes --quiet --name $PYTHON_3_ENV python=3.5 \\\n        crcmod==1.7 \\\n        dask==0.17.1 \\\n        dill==0.2.6 \\\n        google-api-python-client==1.6.2 \\\n        httplib2==0.10.3 \\\n        h5py==2.7.1 \\\n        ipykernel==4.8.2 \\\n        ipywidgets==7.2.1 \\\n        jinja2==2.8 \\\n        jsonschema==2.6.0 \\\n        matplotlib==2.1.2 \\\n        mock==2.0.0 \\\n        nltk==3.2.1 \\\n        notebook==5.6.0 \\\n        numpy==1.14.0 \\\n        oauth2client==2.2.0 \\\n        pandas-gbq==0.3.0 \\\n        pandas==0.22.0 \\\n        pandocfilters==1.4.2 \\\n        pillow==5.0.0 \\\n        pip==18.0 \\\n        plotly==1.12.5 \\\n        psutil==4.3.0 \\\n        pygments==2.1.3 \\\n        python-dateutil==2.5.0 \\\n        python-snappy==0.5.1 \\\n        pytz==2018.4 \\\n        pyzmq==17.1.0 \\\n        requests==2.18.4 \\\n        scikit-image==0.13.0 \\\n        scikit-learn==0.19.1 \\\n        scipy==1.0.0 \\\n        seaborn==0.7.0 \\\n        six==1.11.0 \\\n        statsmodels==0.8.0 \\\n        sympy==0.7.6.1 \\\n        tornado==4.5.1 \\\n        widgetsnbextension==3.2.1 \\\n        xgboost==0.6a2 && \\\n# Make pip3 a copy of pip for the Python 3 environment.\n    cp /usr/local/envs/py3env/bin/pip /usr/local/envs/py3env/bin/pip3 && \\\n    source deactivate && \\\n    # Install Python2 IPython kernel within the Python3 Jupyter directory since\n    # we will be running Jupyter from the Python3 conda env.\n    source activate $PYTHON_2_ENV && \\\n    python -m ipykernel install --prefix=/usr/local/envs/py3env && \\\n    source deactivate && \\\n# Clean up Python packages\n    conda clean -tipsy && \\\n# Delete tests directories, except for h5py since importing it takes a\n# dependency on it's tests directory.\n    find $DATALAB_CONDA_DIR/envs/*/lib -type d -name tests | grep -v h5py | xargs rm -rf && \\\n# Setup Node.js using LTS 6.10\n    cd / && \\\n    mkdir -p /tools/node && \\\n    wget -nv https://nodejs.org/dist/v6.10.0/node-v6.10.0-linux-x64.tar.gz -O node.tar.gz && \\\n    tar xzf node.tar.gz -C /tools/node --strip-components=1 && \\\n    rm node.tar.gz && \\\n# Setup Google Cloud SDK\n# Also apply workaround for gsutil failure brought by this version of Google Cloud.\n# (https://code.google.com/p/google-cloud-sdk/issues/detail?id=538) in final step.\n    wget -nv https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip && \\\n    unzip -qq google-cloud-sdk.zip -d tools && \\\n    rm google-cloud-sdk.zip && \\\n    tools/google-cloud-sdk/install.sh --usage-reporting=false \\\n        --path-update=false --bash-completion=false \\\n        --disable-installation-options && \\\n    tools/google-cloud-sdk/bin/gcloud -q components update \\\n        gcloud core bq gsutil compute preview alpha beta && \\\n# Disable the gcloud update message\n    tools/google-cloud-sdk/bin/gcloud config set component_manager/disable_update_check true && \\\n    touch /tools/google-cloud-sdk/lib/third_party/google.py && \\\n# Add some unchanging bits - specifically node modules (that need to be kept in sync\n# with packages.json manually, but help save build time, by preincluding them in an\n# earlier layer).\n    /tools/node/bin/npm install \\\n        bunyan@1.7.1 \\\n        http-proxy@1.13.2 \\\n        mkdirp@0.5.1 \\\n        node-cache@3.2.0  \\\n        node-uuid@1.4.7 \\\n        tcp-port-used@0.1.2 \\\n        ws@1.1.4 && \\\n    cd / && \\\n    /tools/node/bin/npm install -g forever && \\\n# Clean up\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /tmp/* && \\\n    rm -rf /root/.cache/* && \\\n    rm -rf /usr/share/locale/* && \\\n    rm -rf /usr/share/i18n/locales/*\n\n# Install Python3 packages that aren't available or up-to-date in Conda.\n# For some reasons, merging it with the commands above does not work so creating a separate one.\nRUN source activate $PYTHON_3_ENV && \\\n    pip install --quiet -U --upgrade-strategy only-if-needed --no-cache-dir \\\n        apache-airflow==1.9.0 \\\n        bs4==0.0.1 \\\n        ggplot==0.6.8 \\\n        google-cloud-monitoring==0.28.0 \\\n        lime==0.1.1.23 \\\n        protobuf==3.6.1 \\\n        tensorflow==1.8.0\n\nENV LANG en_US.UTF-8\n\n# Copy local configuration files\nCOPY config/ipython.py /etc/ipython/ipython_config.py\nCOPY config/nbconvert.py /etc/jupyter/jupyter_notebook_config.py\n\n# Directory \"py\" may be empty and in that case it will git clone pydatalab from repo\nCOPY pydatalab /datalab/lib/pydatalab\nCOPY nbconvert /datalab/nbconvert\n\nRUN if [ -d /datalab/lib/pydatalab/.git ]; then \\\n        echo \"use local lib\"; \\\n    else \\\n        git clone https://github.com/googledatalab/pydatalab.git /datalab/lib/pydatalab; \\\n    fi && \\\n    cd /datalab/lib/pydatalab && \\\n    /tools/node/bin/npm install -g typescript@3.0.3 && \\\n    tsc --module amd --noImplicitAny --outdir datalab/notebook/static datalab/notebook/static/*.ts && \\\n    tsc --module amd --noImplicitAny --outdir google/datalab/notebook/static google/datalab/notebook/static/*.ts && \\\n    /tools/node/bin/npm uninstall -g typescript && \\\n    cd /datalab/lib/pydatalab && \\\n# Install Python2 pydatalab packages\n    source activate $PYTHON_2_ENV && \\\n    pip install --upgrade-strategy only-if-needed --no-cache-dir . && \\\n    pip install --no-cache-dir --upgrade-strategy only-if-needed /datalab/lib/pydatalab/solutionbox/image_classification/. && \\\n    pip install --no-cache-dir --upgrade-strategy only-if-needed /datalab/lib/pydatalab/solutionbox/structured_data/. && \\\n    source deactivate && \\\n# Install Python3 pydatalab packages and Jupyter extensions. The Datalab web app\n# will also be started from the Python3 env.\n    source activate $PYTHON_3_ENV && \\\n    pip install --upgrade-strategy only-if-needed --no-cache-dir . && \\\n    pip install --no-cache-dir --upgrade-strategy only-if-needed /datalab/lib/pydatalab/solutionbox/image_classification/. && \\\n    pip install --no-cache-dir --upgrade-strategy only-if-needed /datalab/lib/pydatalab/solutionbox/structured_data/. && \\\n    pip install --no-cache-dir --upgrade-strategy only-if-needed jupyter_highlight_selected_word==0.2.0 && \\\n    jupyter nbextension install --py datalab.notebook && \\\n    jupyter nbextension install --py google.datalab.notebook && \\\n    jupyter nbextension install --py jupyter_highlight_selected_word && \\\n    jupyter nbextension enable --sys-prefix --py jupyter_highlight_selected_word && \\\n    jupyter nbextension enable --sys-prefix --py widgetsnbextension && \\\n    source deactivate && \\\n# Clean up\n    rm datalab/notebook/static/*.js google/datalab/notebook/static/*.js && \\\n# Set up correct paths for nbconvert\n    mkdir -p /datalab/nbconvert && \\\n    cp -R /usr/local/share/jupyter/nbextensions/gcpdatalab/* /datalab/nbconvert && \\\n    ln -s $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/lib/python3.5/site-packages/notebook/static/custom/custom.css /datalab/nbconvert/custom.css\n\n# Add third party license files\nRUN mkdir -p /tools/license\nCOPY license.sh /tools/license\nCOPY third_party_licenses.csv /tools/license\nRUN mkdir /usr/licenses && \\\n    /tools/license/license.sh /tools/license/third_party_licenses.csv /usr/licenses\n\nCOPY config/py2-kernel.json $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/share/jupyter/kernels/python2/kernel.json\nCOPY config/py3-kernel.json $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/share/jupyter/kernels/python3/kernel.json\nCOPY config/py2-kernel-startup.sh $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/share/jupyter/kernels/python2/kernel-startup.sh\nCOPY config/py3-kernel-startup.sh $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/share/jupyter/kernels/python3/kernel-startup.sh\n\nRUN chmod 755 $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/share/jupyter/kernels/python2/kernel-startup.sh && \\\n    chmod 755 $DATALAB_CONDA_DIR/envs/$PYTHON_3_ENV/share/jupyter/kernels/python3/kernel-startup.sh\n"
}