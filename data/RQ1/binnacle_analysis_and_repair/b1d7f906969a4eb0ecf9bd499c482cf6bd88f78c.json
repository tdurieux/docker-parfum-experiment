{
  "startTime": 1674250935650,
  "endTime": 1674250935808,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 20,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 1,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 24,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 20,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 1,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 1,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/nginx:arm64v8-3.9\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG DISKOVER_VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"alex-phillips\"\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --virtual=build-dependencies \\\n\tcurl \\\n\tgcc \\\n\tmusl-dev \\\n\tpython3-dev \\\n\tpy3-pip && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n\tgrep \\\n\tncurses \\\n\tphp7-curl \\\n\tphp7-phar \\\n\tpython3 && \\\n echo \"**** install composer ****\" && \\\n curl -f \\\n  -sS https://getcomposer.org/installer \\\n\t| php -- --install-dir=/usr/bin --filename=composer && \\\n echo \"**** install diskover ****\" && \\\n mkdir -p /app/diskover && \\\n if [ -z ${DISKOVER_RELEASE+x} ]; then \\\n\tDISKOVER_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/shirosaidev/diskover/releases/latest\" \\\n\t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') ; \\\n fi && \\\n curl -f -o \\\n /tmp/diskover.tar.gz -L \\\n\t\"https://github.com/shirosaidev/diskover/archive/${DISKOVER_RELEASE}.tar.gz\" && \\\n tar xf \\\n /tmp/diskover.tar.gz -C \\\n\t/app/diskover/ --strip-components=1 && \\\n echo \"**** install diskover-web ****\" && \\\n mkdir -p /app/diskover-web && \\\n DISKOVER_WEB_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/shirosaidev/diskover-web/releases/latest\" \\\n\t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') ; rm /tmp/diskover.tar.gz \\\n if [ \"${DISKOVER_RELEASE}\" !=  \"${DISKOVER_WEB_RELEASE}\" ] || [ -z ${DISKOVER_RELEASE+x} ]; then \\\n\tDISKOVER_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/shirosaidev/diskover-web/releases/latest\" \\\n\t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') ; \\\n fi && \\\n curl -f -o \\\n /tmp/diskover-web.tar.gz -L \\\n\t\"https://github.com/shirosaidev/diskover-web/archive/${DISKOVER_RELEASE}.tar.gz\" && \\\n tar xf \\\n /tmp/diskover-web.tar.gz -C \\\n\t/app/diskover-web/ --strip-components=1 && \\\n echo \"**** install pip packages ****\" && \\\n cd /app/diskover && \\\n pip3 install --no-cache-dir -r requirements.txt && \\\n pip3 install --no-cache-dir rq-dashboard && \\\n echo \"**** install composer packages ****\" && \\\n cd /app/diskover-web && \\\n composer install && \\\n echo \"**** fix logrotate ****\" && \\\n sed -i \"s#/var/log/messages {}.*# #g\" /etc/logrotate.conf && \\\n echo \"**** symlink python3 ****\" && \\\n ln -s /usr/bin/python3 /usr/bin/python && \\\n echo \"**** cleanup ****\" && \\\n apk del --purge \\\n\tbuild-dependencies && \\\n rm -rf \\\n\t/root/.cache \\\n\t/tmp/*\n\n# copy local files\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 8000\nVOLUME /config\n"
}