{
  "startTime": 1674242993770,
  "endTime": 1674242994315,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tbzip2 \\\n\t\tcurl \\\n\t\tgcc \\\n\t\tgnupg dirmngr \\\n\t\tmake \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# pub   1024D/ACC9965B 2006-12-12\n#       Key fingerprint = C9E9 416F 76E6 10DB D09D  040F 47B7 0C55 ACC9 965B\n# uid                  Denis Vlasenko <vda.linux@googlemail.com>\n# sub   1024g/2C766641 2006-12-12\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C9E9416F76E610DBD09D040F47B70C55ACC9965B\n\nENV BUSYBOX_VERSION 1.31.0\n\nRUN set -ex; \\\n\ttarball=\"busybox-${BUSYBOX_VERSION}.tar.bz2\"; \\\n\tcurl -fL -o busybox.tar.bz2 \"https://busybox.net/downloads/$tarball\"; \\\n\tcurl -fL -o busybox.tar.bz2.sig \"https://busybox.net/downloads/$tarball.sig\"; \\\n\tgpg --batch --verify busybox.tar.bz2.sig busybox.tar.bz2; \\\n\tmkdir -p /usr/src/busybox; rm -rf /usr/src/busybox \\\n\ttar -xf busybox.tar.bz2 -C /usr/src/busybox --strip-components 1; \\\n\trm busybox.tar.bz2*\n\nWORKDIR /usr/src/busybox\n\n# CONFIG_LAST_SUPPORTED_WCHAR: see https://github.com/docker-library/busybox/issues/13 (UTF-8 input)\n# As long as we rely on libnss, we have to have libc.so anyhow, so\n# we've removed CONFIG_STATIC here for now... :cry:\nRUN set -ex; \\\n\t\\\n\tsetConfs=' \\\n\t\tCONFIG_AR=y \\\n\t\tCONFIG_FEATURE_AR_CREATE=y \\\n\t\tCONFIG_FEATURE_AR_LONG_FILENAMES=y \\\n\t\tCONFIG_LAST_SUPPORTED_WCHAR=0 \\\n\t'; \\\n\t\\\n\tunsetConfs=' \\\n\t\tCONFIG_FEATURE_SYNC_FANCY \\\n\t'; \\\n\t\\\n\tmake defconfig; \\\n\t\\\n\tfor conf in $unsetConfs; do \\\n\t\tsed -i \\\n\t\t\t-e \"s!^$conf=.*\\$!# $conf is not set!\" \\\n\t\t\t.config; \\\n\tdone; \\\n\t\\\n\tfor confV in $setConfs; do \\\n\t\tconf=\"${confV%=*}\"; \\\n\t\tsed -i \\\n\t\t\t-e \"s!^$conf=.*\\$!$confV!\" \\\n\t\t\t-e \"s!^# $conf is not set\\$!$confV!\" \\\n\t\t\t.config; \\\n\t\tif ! grep -q \"^$confV\\$\" .config; then \\\n\t\t\techo \"$confV\" >> .config; \\\n\t\tfi; \\\n\tdone; \\\n\t\\\n\tmake oldconfig; \\\n\t\\\n# trust, but verify\n\tfor conf in $unsetConfs; do \\\n\t\t! grep -q \"^$conf=\" .config; \\\n\tdone; \\\n\tfor confV in $setConfs; do \\\n\t\tgrep -q \"^$confV\\$\" .config; \\\n\tdone;\n\nRUN set -ex \\\n\t&& make -j \"$(nproc)\" \\\n\t\tbusybox \\\n\t&& ./busybox --help \\\n\t&& mkdir -p rootfs/bin \\\n\t&& ln -vL busybox rootfs/bin/ \\\n\t\\\n\t&& ln -vL \"$(which getconf)\" rootfs/bin/getconf \\\n\t\\\n# hack hack hack hack hack\n# with glibc, static busybox uses libnss for DNS resolution :(\n\t&& mkdir -p rootfs/etc \\\n\t&& cp /etc/nsswitch.conf rootfs/etc/ \\\n\t&& mkdir -p rootfs/lib \\\n\t&& ln -sT lib rootfs/lib64 \\\n\t&& set -- \\\n\t\trootfs/bin/busybox \\\n\t\trootfs/bin/getconf \\\n\t\t/lib/\"$(gcc -print-multiarch)\"/libnss*.so.* \\\n# libpthread is part of glibc: http://stackoverflow.com/a/11210463/433558\n\t\t/lib/\"$(gcc -print-multiarch)\"/libpthread*.so.* \\\n\t&& while [ \"$#\" -gt 0 ]; do \\\n\t\tf=\"$1\"; shift; \\\n\t\tfn=\"$(basename \"$f\")\"; \\ \n\t\tif [ -e \"rootfs/lib/$fn\" ]; then continue; fi; \\\n\t\tif [ \"${f#rootfs/}\" = \"$f\" ]; then \\\n\t\t\tif [ \"${fn#ld-}\" = \"$fn\" ]; then \\\n\t\t\t\tln -vL \"$f\" \"rootfs/lib/$fn\"; \\\n\t\t\telse \\\n\t\t\t\tcp -v \"$f\" \"rootfs/lib/$fn\"; \\\n\t\t\tfi; \\\n\t\tfi; \\\n\t\tset -- \"$@\" $(ldd \"$f\" | awk ' \\\n\t\t\t$1 ~ /^\\// { print $1; next } \\\n\t\t\t$2 == \"=>\" && $3 ~ /^\\// { print $3; next } \\\n\t\t'); \\\n\tdone \\\n\t\\\n\t&& chroot rootfs /bin/getconf _NPROCESSORS_ONLN \\\n\t\\\n\t&& chroot rootfs /bin/busybox --install /bin\n\n# download a few extra files from buildroot (/etc/passwd, etc)\nRUN set -ex; \\\n\tbuildrootVersion='2019.05'; \\\n\tmkdir -p rootfs/etc; \\\n\tfor f in passwd shadow group; do \\\n\t\tcurl -fL -o \"rootfs/etc/$f\" \"https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion\"; \\\n\tdone; \\\n# CVE-2019-5021, https://github.com/docker-library/official-images/pull/5880#issuecomment-490681907\n\tgrep -E '^root::' rootfs/etc/shadow; \\\n\tsed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow; \\\n\tgrep -E '^root:[*]:' rootfs/etc/shadow; \\\n# set expected permissions, etc too (https://git.busybox.net/buildroot/tree/system/device_table.txt)\n\tcurl -fL -o buildroot-device-table.txt \"https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion\"; \\\n\tawk ' \\\n\t\t!/^#/ { \\\n\t\t\tif ($2 != \"d\" && $2 != \"f\") { \\\n\t\t\t\tprintf \"error: unknown type \\\"%s\\\" encountered in line %d: %s\\n\", $2, NR, $0 > \"/dev/stderr\"; \\\n\t\t\t\texit 1; \\\n\t\t\t} \\\n\t\t\tsub(/^\\/?/, \"rootfs/\", $1); \\\n\t\t\tif ($2 == \"d\") { \\\n\t\t\t\tprintf \"mkdir -p %s\\n\", $1; \\\n\t\t\t} \\\n\t\t\tprintf \"chmod %s %s\\n\", $3, $1; \\\n\t\t} \\\n\t' buildroot-device-table.txt | bash -Eeuo pipefail -x; \\\n\trm buildroot-device-table.txt\n\n# create missing home directories\nRUN set -ex \\\n\t&& cd rootfs \\\n\t&& for userHome in $(awk -F ':' '{ print $3 \":\" $4 \"=\" $6 }' etc/passwd); do \\\n\t\tuser=\"${userHome%%=*}\"; \\\n\t\thome=\"${userHome#*=}\"; \\\n\t\thome=\"./${home#/}\"; \\\n\t\tif [ ! -d \"$home\" ]; then \\\n\t\t\tmkdir -p \"$home\"; \\\n\t\t\tchown \"$user\" \"$home\"; \\\n\t\t\tchmod 755 \"$home\"; \\\n\t\tfi; \\\n\tdone\n\n# test and make sure it works\nRUN chroot rootfs /bin/sh -xec 'true'\n\n# ensure correct timezone (UTC)\nRUN set -ex; \\\n\tln -vL /usr/share/zoneinfo/UTC rootfs/etc/localtime; \\\n\t[ \"$(chroot rootfs date +%Z)\" = 'UTC' ]\n\n# test and make sure DNS works too\nRUN cp -L /etc/resolv.conf rootfs/etc/ \\\n\t&& chroot rootfs /bin/sh -xec 'nslookup google.com' \\\n\t&& rm rootfs/etc/resolv.conf\n"
}