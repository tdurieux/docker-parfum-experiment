{
  "startTime": 1674244498635,
  "endTime": 1674244498700,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Step\nFROM golang:latest AS build\n\n# Prerequisites and vendoring\nRUN mkdir -p $GOPATH/src/github.com/err0r500/go-realworld-clean\nADD . $GOPATH/src/github.com/err0r500/go-realworld-clean\nWORKDIR $GOPATH/src/github.com/err0r500/go-realworld-clean\nRUN go get -u github.com/golang/dep/cmd/dep\nRUN dep ensure -vendor-only\n\n# Build\nARG build\nARG version\nRUN CGO_ENABLED=0 go build -ldflags=\"-s -w -X main.Version=${version} -X main.Build=${build}\" -o /go-realworld-clean\n\n# Final Step\nFROM alpine\n\n# Base packages\nRUN apk update\nRUN apk upgrade\nRUN apk add --no-cache ca-certificates && update-ca-certificates\nRUN apk add --no-cache --update tzdata\nRUN rm -rf /var/cache/apk/*\n\n# Copy binary from build step\nCOPY --from=build /go-realworld-clean /home/\n\n# Define timezone\nENV TZ=Europe/Paris\n\n# Define the ENTRYPOINT\nWORKDIR /home\nENTRYPOINT ./go-realworld-clean\n\n# Document that the service listens on port 8080.\nEXPOSE 8080"
}