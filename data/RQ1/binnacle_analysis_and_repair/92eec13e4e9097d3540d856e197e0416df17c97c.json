{
  "startTime": 1674235277694,
  "endTime": 1674235278351,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 71,
        "columnStart": 5,
        "columnEnd": 101
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nRUN apt-get update && apt-get install --no-install-recommends build-essential wget -y && rm -rf /var/lib/apt/lists/*;\n\n# Build openssl\nARG OPENSSL_VERSION=1.1.0g\nARG OPENSSL_SHA256=\"de4d501267da39310905cb6dc8c6121f7a2cad45a7707f76df828fe1b85073af\"\nRUN cd /usr/local/src \\\n  && wget \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" -O \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n  && echo \"$OPENSSL_SHA256\" \"openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c - \\\n  && tar -zxvf \"openssl-${OPENSSL_VERSION}.tar.gz\" \\\n  && cd \"openssl-${OPENSSL_VERSION}\" \\\n  && ./config shared --prefix=/usr/local/ssl --openssldir=/usr/local/ssl -Wl,-rpath,/usr/local/ssl/lib \\\n  && make && make install \\\n  && mv /usr/bin/openssl /root/ \\\n  && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl \\\n  && rm -rf \"/usr/local/src/openssl-${OPENSSL_VERSION}.tar.gz\" \"/usr/local/src/openssl-${OPENSSL_VERSION}\"\n\n# Update path of shared libraries\nRUN echo \"/usr/local/ssl/lib\" >> /etc/ld.so.conf.d/ssl.conf && ldconfig\n\n# Build GOST-engine for OpenSSL\nARG GOST_ENGINE_VERSION=3bd506dcbb835c644bd15a58f0073ae41f76cb06\nARG GOST_ENGINE_SHA256=\"4777b1dcb32f8d06abd5e04a9a2b5fe9877c018db0fc02f5f178f8a66b562025\"\nRUN apt-get update && apt-get install --no-install-recommends cmake unzip -y \\\n  && cd /usr/local/src \\\n  && wget \"https://github.com/gost-engine/engine/archive/${GOST_ENGINE_VERSION}.zip\" -O gost-engine.zip \\\n  && echo \"$GOST_ENGINE_SHA256\" gost-engine.zip | sha256sum -c - \\\n  && unzip gost-engine.zip -d ./ \\\n  && cd \"engine-${GOST_ENGINE_VERSION}\" \\\n  && sed -i 's|printf(\"GOST engine already loaded\\\\n\");|goto end;|' gost_eng.c \\\n  && mkdir build \\\n  && cd build \\\n  && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS='-I/usr/local/ssl/include -L/usr/local/ssl/lib' \\\n   -DOPENSSL_ROOT_DIR=/usr/local/ssl  -DOPENSSL_INCLUDE_DIR=/usr/local/ssl/include -DOPENSSL_LIBRARIES=/usr/local/ssl/lib .. \\\n  && cmake --build . --config Release \\\n  && cd ../bin \\\n  && cp gostsum gost12sum /usr/local/bin \\\n  && cd .. \\\n  && cp bin/gost.so /usr/local/ssl/lib/engines-1.1 \\\n  && rm -rf \"/usr/local/src/gost-engine.zip\" \"/usr/local/src/engine-${GOST_ENGINE_VERSION}\" && rm -rf /var/lib/apt/lists/*;\n\n# Enable engine\nRUN sed -i '6i openssl_conf=openssl_def' /usr/local/ssl/openssl.cnf \\\n  && echo \"\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"# OpenSSL default section\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"[openssl_def]\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"engines = engine_section\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"# Engine scetion\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"[engine_section]\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"gost = gost_section\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"# Engine gost section\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"[gost_section]\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"engine_id = gost\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"dynamic_path = /usr/local/ssl/lib/engines-1.1/gost.so\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"default_algorithms = ALL\" >> /usr/local/ssl/openssl.cnf \\\n  && echo \"CRYPT_PARAMS = id-Gost28147-89-CryptoPro-A-ParamSet\" >> /usr/local/ssl/openssl.cnf\n\n# Rebuild curl\nARG CURL_VERSION=7.59.0\nARG CURL_SHA256=\"099d9c32dc7b8958ca592597c9fabccdf4c08cfb7c114ff1afbbc4c6f13c9e9e\"\nRUN apt-get remove curl -y \\\n  && rm -rf /usr/local/include/curl \\\n  && cd /usr/local/src \\\n  && wget \"https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz\" -O \"curl-${CURL_VERSION}.tar.gz\" \\\n  && echo \"$CURL_SHA256\" \"curl-${CURL_VERSION}.tar.gz\" | sha256sum -c - \\\n  && tar -zxvf \"curl-${CURL_VERSION}.tar.gz\" \\\n  && cd \"curl-${CURL_VERSION}\" \\\n  && CPPFLAGS=\"-I/usr/local/ssl/include\" LDFLAGS=\"-L/usr/local/ssl/lib -Wl,-rpath,/usr/local/ssl/lib\" LD_LIBRARY_PATH=/usr/local/ssl/lib \\\n   ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n   --prefix=/usr/local/curl --with-ssl=/usr/local/ssl --with-libssl-prefix=/usr/local/ssl \\\n  && make \\\n  && make install \\\n  && ln -s /usr/local/curl/bin/curl /usr/bin/curl \\\n  && rm -rf \"/usr/local/src/curl-${CURL_VERSION}.tar.gz\" \"/usr/local/src/curl-${CURL_VERSION}\"\n\n# Rebuild stunnel\nARG STUNNEL_VERSION=5.50\nARG STUNNEL_SHA256=\"951d92502908b852a297bd9308568f7c36598670b84286d3e05d4a3a550c0149\"\nRUN cd /usr/local/src \\\n  && wget \"https://www.stunnel.org/downloads/stunnel-${STUNNEL_VERSION}.tar.gz\" -O \"stunnel-${STUNNEL_VERSION}.tar.gz\" \\\n  && echo \"$STUNNEL_SHA256\" \"stunnel-${STUNNEL_VERSION}.tar.gz\" | sha256sum -c - \\\n  && tar -zxvf \"stunnel-${STUNNEL_VERSION}.tar.gz\" \\\n  && cd \"stunnel-${STUNNEL_VERSION}\" \\\n  && CPPFLAGS=\"-I/usr/local/ssl/include\" LDFLAGS=\"-L/usr/local/ssl/lib -Wl,-rpath,/usr/local/ssl/lib\" LD_LIBRARY_PATH=/usr/local/ssl/lib \\\n   ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n   --prefix=/usr/local/stunnel --with-ssl=/usr/local/ssl \\\n  && make \\\n  && make install \\\n  && ln -s /usr/local/stunnel/bin/stunnel /usr/bin/stunnel \\\n  && rm -rf \"/usr/local/src/stunnel-${STUNNEL_VERSION}.tar.gz\" \"/usr/local/src/stunnel-${STUNNEL_VERSION}\"\n"
}