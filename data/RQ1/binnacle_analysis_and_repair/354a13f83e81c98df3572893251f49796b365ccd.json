{
  "startTime": 1674641704654,
  "endTime": 1674641704964,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NEO private network - Dockerfile\nFROM microsoft/dotnet:2.1.4-runtime-bionic\n\nLABEL maintainer=\"City of Zion\"\nLABEL authors=\"metachris, ashant, hal0x2328, phetter\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Disable dotnet usage information collection\n# https://docs.microsoft.com/en-us/dotnet/core/tools/telemetry#behavior\nENV DOTNET_CLI_TELEMETRY_OPTOUT 1\n\n# Install system dependencies. always should be done in one line\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    unzip \\\n    screen \\\n    expect \\\n    libleveldb-dev \\\n    git-core \\\n    wget \\\n    curl \\\n    git-core \\\n    python3.6 \\\n    python3.6-dev \\\n    python3.6-venv \\\n    python3-pip \\\n    libleveldb-dev \\\n    libssl-dev \\\n    vim \\\n    man \\\n    libunwind8 && rm -rf /var/lib/apt/lists/*;\n\n# APT cleanup to reduce image size\nRUN rm -rf /var/lib/apt/lists/*\n\n# neo-python setup: clonse and install dependencies\nRUN git clone https://github.com/CityOfZion/neo-python.git /neo-python\nWORKDIR /neo-python\n\n# RUN git checkout development\nRUN pip3 install --no-cache-dir -e .\nRUN wget https://s3.amazonaws.com/neo-experiments/neo-privnet.wallet\n\n# Add the neo-cli package\nADD ./neo-cli.zip /opt/neo-cli.zip\nADD ./SimplePolicy.zip /opt/SimplePolicy.zip\nADD ./ApplicationLogs.zip /opt/ApplicationLogs.zip\n\n# Extract and prepare four consensus nodes\nRUN unzip -q -d /opt/node1 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node2 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node3 /opt/neo-cli.zip\nRUN unzip -q -d /opt/node4 /opt/neo-cli.zip\n\n# Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/SimplePolicy.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/SimplePolicy.zip\n\n# Extract and prepare SimplePolicy plugin\nRUN unzip -q -d /opt/node1/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node2/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node3/neo-cli /opt/ApplicationLogs.zip\nRUN unzip -q -d /opt/node4/neo-cli /opt/ApplicationLogs.zip\n\n# Remove zip neo-cli package\nRUN rm /opt/neo-cli.zip\nRUN rm /opt/SimplePolicy.zip\nRUN rm /opt/ApplicationLogs.zip\n\n# Create chain data directories\nRUN mkdir -p /opt/chaindata/node1\nRUN mkdir -p /opt/chaindata/node2\nRUN mkdir -p /opt/chaindata/node3\nRUN mkdir -p /opt/chaindata/node4\n\n# Add config files\nADD ./configs/config1.json /opt/node1/neo-cli/config.json\nADD ./configs/config1.json /opt/node1/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node1/neo-cli/protocol.json\nADD ./wallets/wallet1.json /opt/node1/neo-cli/\nADD ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs1.json /opt/node1/neo-cli/Plugins/ApplicationLogs/config.orig.json\n\nADD ./configs/config2.json /opt/node2/neo-cli/config.json\nADD ./configs/config2.json /opt/node2/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node2/neo-cli/protocol.json\nADD ./wallets/wallet2.json /opt/node2/neo-cli/\nADD ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs2.json /opt/node2/neo-cli/Plugins/ApplicationLogs/config.orig.json\n\nADD ./configs/config3.json /opt/node3/neo-cli/config.json\nADD ./configs/config3.json /opt/node3/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node3/neo-cli/protocol.json\nADD ./wallets/wallet3.json /opt/node3/neo-cli/\nADD ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs3.json /opt/node3/neo-cli/Plugins/ApplicationLogs/config.orig.json\n\nADD ./configs/config4.json /opt/node4/neo-cli/config.json\nADD ./configs/config4.json /opt/node4/neo-cli/config.orig.json\nADD ./configs/protocol.json /opt/node4/neo-cli/protocol.json\nADD ./wallets/wallet4.json /opt/node4/neo-cli/\nADD ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.json\nADD ./configs/config-applicationlogs4.json /opt/node4/neo-cli/Plugins/ApplicationLogs/config.orig.json\n\n# Add scripts\nADD ./scripts/run.sh /opt/\nADD ./scripts/run_datadir_wrapper.sh /opt/\nADD ./scripts/start_consensus_node.sh /opt/\nADD ./scripts/claim_neo_and_gas_fixedwallet.py /neo-python/\nADD ./scripts/claim_gas_fixedwallet.py /neo-python/\nADD ./wallets/neo-privnet.python-wallet /tmp/wallet\n\n# Some .bashrc helpers: 'neopy', and a welcome message for bash users\nRUN echo \"alias neopy=\\\"cd /neo-python && np-prompt -p\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Consensus nodes are running in screen sessions, check 'screen -ls'\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* neo-python is installed in /neo-python, with a neo-privnet.wallet file in place\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* You can use the alias 'neopy' in the shell to start neo-python's prompt.py with privnet settings\\\"\" >> /root/.bashrc\nRUN echo \"printf \\\"\\n* Please report issues to https://github.com/CityOfZion/neo-privatenet-docker\\n\\n\\\"\" >> /root/.bashrc\n\n# Inform Docker what ports to expose\nEXPOSE 20333\nEXPOSE 20334\nEXPOSE 20335\nEXPOSE 20336\n\nEXPOSE 30333\nEXPOSE 30334\nEXPOSE 30335\nEXPOSE 30336\n\n# On docker run, start the consensus nodes\nCMD [\"/bin/bash\", \"/opt/run_datadir_wrapper.sh\"]\n"
}