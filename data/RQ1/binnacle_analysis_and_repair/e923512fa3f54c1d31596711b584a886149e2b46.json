{
  "startTime": 1674245453486,
  "endTime": 1674245453661,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/cloud-builders/gcloud\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        bash \\\n        ca-certificates \\\n        curl \\\n        gettext \\\n        jq \\\n        make \\\n        python \\\n        python-openssl \\\n        python-pip \\\n        python-setuptools \\\n        python-yaml \\\n        software-properties-common \\\n        wget \\\n     && rm -rf /var/lib/apt/lists/*\n\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n    apt-key fingerprint 0EBFCD88 && \\\n    add-apt-repository \\\n       \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n       xenial \\\n       edge\" && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install docker-ce=17.12.0~ce-0~ubuntu && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /bin/helm-downloaded \\\n     && wget -q -O /bin/helm-downloaded/helm.tar.gz \\\n        https://storage.googleapis.com/kubernetes-helm/helm-v2.10.0-linux-amd64.tar.gz \\\n     && tar -zxvf /bin/helm-downloaded/helm.tar.gz -C /bin/helm-downloaded \\\n     && mv /bin/helm-downloaded/linux-amd64/helm /bin/ \\\n     && rm -rf /bin/helm-downloaded \\\n     && helm init --client-only && rm /bin/helm-downloaded/helm.tar.gz\n\nRUN gcloud auth configure-docker\n\nCOPY marketplace/deployer_util/* /bin/\nCOPY scripts/* /scripts/\nCOPY marketplace/dev/bin/* /bin/\nRUN mv /scripts/doctor.py /scripts/doctor\nENV PATH=\"/scripts:${PATH}\"\n\nRUN mkdir -p /data/\n\nENTRYPOINT [\"/bin/docker_entrypoint.sh\"]\nCMD [\"echo\", \"It works\"]\n"
}