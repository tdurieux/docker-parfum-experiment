{
  "startTime": 1674236426341,
  "endTime": 1674236427060,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 95,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 25,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.0-fpm-stretch as builder\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        ca-certificates \\\n        gnupg2 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends zlib1g-dev \\\n        git \\\n        ghostscript \\\n        gpac \\\n        imagemagick \\\n        libav-tools \\\n        libfreetype6-dev \\\n        libicu-dev \\\n        libjpeg62-turbo-dev \\\n        libmagickwand-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        librabbitmq-dev \\\n        libssl-dev \\\n        libxslt-dev \\\n        libzmq3-dev \\\n        locales \\\n        mcrypt \\\n        swftools \\\n        unoconv \\\n        unzip \\\n        xpdf \\\n    && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n    && dpkg-reconfigure --frontend noninteractive locales \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd \\\n    && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n    && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n    && docker-php-ext-enable redis amqp zmq imagick \\\n    && pecl clear-cache \\\n    && docker-php-source delete \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n    && php -r \"unlink('composer-setup.php');\"\n\n# Node Installation (node + yarn)\n# Reference :\n# https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/\n# https://yarnpkg.com/lang/en/docs/install/#debian-stable\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \\\n    && apt install --no-install-recommends -y nodejs \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update && apt-get install -y --no-install-recommends yarn \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /entrypoint /var/alchemy \\\n    && useradd -u 1000 app \\\n    && mkdir -p /home/app/.composer \\\n    && chown -R app: /home/app /var/alchemy\n\nWORKDIR /var/alchemy/\n\nCOPY gulpfile.js /var/alchemy/\nCOPY Makefile /var/alchemy/\nCOPY package.json /var/alchemy/\nCOPY phpunit.xml.dist /var/alchemy/\nCOPY yarn.lock /var/alchemy/\nCOPY bin /var/alchemy/bin\nCOPY composer.json /var/alchemy/\nCOPY composer.lock /var/alchemy/\nRUN make install_composer\nCOPY resources /var/alchemy/resources\nCOPY www /var/alchemy/www\nRUN make clean_assets\nRUN make install_asset_dependencies\nRUN make install_assets\n\nADD ./docker/phraseanet/ /\nCOPY lib /var/alchemy/lib\nCOPY tmp /var/alchemy/tmp\nCOPY config /var/alchemy/config\nCOPY grammar /var/alchemy/grammar\nCOPY templates-profiler /var/alchemy/templates-profiler\nCOPY templates /var/alchemy/templates\nCOPY tests /var/alchemy/tests\n\n# Phraseanet\nFROM php:7.0-fpm-stretch as phraseanet-fpm\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        ca-certificates \\\n        gnupg2 \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends zlib1g-dev \\\n        gettext \\\n        git \\\n        ghostscript \\\n        gpac \\\n        imagemagick \\\n        libav-tools \\\n        libfreetype6-dev \\\n        libicu-dev \\\n        libjpeg62-turbo-dev \\\n        libmagickwand-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        librabbitmq-dev \\\n        libssl-dev \\\n        libxslt-dev \\\n        libzmq3-dev \\\n        locales \\\n        mcrypt \\\n        swftools \\\n        unoconv \\\n        unzip \\\n        xpdf \\\n    && update-locale \"LANG=fr_FR.UTF-8 UTF-8\" \\\n    && dpkg-reconfigure --frontend noninteractive locales \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd \\\n    && docker-php-ext-install zip exif iconv mbstring pcntl sockets xsl intl pdo_mysql gettext bcmath mcrypt \\\n    && pecl install redis amqp-1.9.3 zmq-beta imagick-beta \\\n    && docker-php-ext-enable redis amqp zmq imagick \\\n    && pecl clear-cache \\\n    && docker-php-source delete \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /entrypoint /var/alchemy \\\n    && useradd -u 1000 app \\\n    && mkdir -p /home/app/.composer \\\n    && chown -R app: /home/app /var/alchemy\n\nCOPY --from=builder --chown=app /var/alchemy /var/alchemy/Phraseanet\nADD ./docker/phraseanet/ /\nRUN mkdir -p /var/alchemy/Phraseanet/logs \\\n    && chmod -R 777 /var/alchemy/Phraseanet/logs \\\n    && mkdir -p /var/alchemy/Phraseanet/cache \\\n    && chmod -R 777 /var/alchemy/Phraseanet/cache \\\n    && mkdir -p /var/alchemy/Phraseanet/datas \\\n    && chmod -R 777 /var/alchemy/Phraseanet/datas \\\n    && mkdir -p /var/alchemy/Phraseanet/tmp \\\n    && chmod -R 777 /var/alchemy/Phraseanet/tmp \\\n    && mkdir -p /var/alchemy/Phraseanet/www/custom \\\n    && chmod -R 777 /var/alchemy/Phraseanet/www/custom \\\n    && mkdir -p /var/alchemy/Phraseanet/config \\\n    && chmod -R 777 /var/alchemy/Phraseanet/config\nWORKDIR /var/alchemy/Phraseanet\nENTRYPOINT [\"/phraseanet-entrypoint.sh\"]\nCMD [\"/boot.sh\"]\n\n# phraseanet-worker\nFROM phraseanet-fpm as phraseanet-worker\nCMD [\"/worker-boot.sh\"]\n\n# phraseanet-nginx\nFROM nginx:1.15 as phraseanet-nginx\nRUN useradd -u 1000 app\nADD ./docker/nginx/ /\nCOPY --from=builder /var/alchemy/www /var/alchemy/Phraseanet/www\nCMD [\"/boot.sh\"]\n"
}