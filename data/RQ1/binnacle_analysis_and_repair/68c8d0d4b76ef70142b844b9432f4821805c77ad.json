{
  "startTime": 1674235521434,
  "endTime": 1674235521486,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.11.2 as node\n\nARG NODE_ENV\nWORKDIR /code\n\n# Add dependencies\nADD ./package.json /code\nADD ./bower.json /code\nADD ./gulpfile.js /code\nADD ./.eslintrc /code\nADD ./karma.conf.js /code\n\n# Install Prerequisites\nRUN npm install -g bower gulp && npm cache clean --force;\nRUN npm install phantomjs-prebuilt && npm cache clean --force;\nRUN npm link gulp\nRUN npm cache clean --force -f\nRUN npm install && npm cache clean --force;\nRUN bower install --allow-root\nADD frontend /code/frontend\n\nRUN gulp ${NODE_ENV}\n\nFROM nginx:1.13-alpine\n# Adding NODE_ENV here as well since this is a multistage build\nARG NODE_ENV\nCOPY docker/prod/nodejs/nginx_${NODE_ENV}.conf /etc/nginx/conf.d/default.conf\nCOPY --from=node /code /code\nCOPY /ssl /code/ssl\n"
}