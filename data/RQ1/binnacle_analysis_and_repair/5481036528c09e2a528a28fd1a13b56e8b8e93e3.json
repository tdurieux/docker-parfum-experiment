{
  "startTime": 1674247884096,
  "endTime": 1674247884213,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5.1\nMAINTAINER Jose Angel Parre√±o <joseangel.parreno@vizzuality.com>\n\nENV NAME climate-watch\nENV RAKE_ENV development\nENV RAILS_ENV development\nENV CW_API /api/v1\nENV ESP_API https://data.emissionspathways.org/api/v1\nENV S3_BUCKET_NAME climate-watch-dev\nENV GOOGLE_ANALYTICS_ID UA-1981881-51\nENV USER_REPORT_KEY 5fe46fa7-c7e6-40e6-8e48-37479c4599f1\n\n# Install dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        postgresql-client \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs build-essential patch zlib1g-dev liblzma-dev libicu-dev \\\n    && npm install -g yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nRUN gem install bundler --no-ri --no-rdoc\n\n# Create app directory\nRUN mkdir -p /usr/src/$NAME && rm -rf /usr/src/\nWORKDIR /usr/src/$NAME\n# VOLUME /usr/src/$NAME\n\n# Install app dependencies\nCOPY Gemfile Gemfile.lock ./\n\nRUN bundle install\n\n# Bundle app source\nARG secretKey\nENV SECRET_KEY_BASE $secretKey\nCOPY . ./\n\nEXPOSE 3000\n\n# Start app\nCMD npm start\n"
}