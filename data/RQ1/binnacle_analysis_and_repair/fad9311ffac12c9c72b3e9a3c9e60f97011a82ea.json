{
  "startTime": 1674251584686,
  "endTime": 1674251584874,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nENV workdir /app\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    build-essential \\\n    libboost-program-options-dev \\\n    libbz2-dev \\\n    zlib1g-dev \\\n    libexpat1-dev \\\n    cmake \\\n    pandoc \\\n    git \\\n    python-pip \\\n    curl \\\n    unzip \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/mapbox/protozero\nRUN cd protozero && git checkout 23d48fd2a441c6e3b2852ff84a0ba398e48f74be && mkdir build && cd build && cmake .. && make && make install\nRUN git clone https://github.com/osmcode/libosmium\nRUN cd libosmium && git checkout a1f88fe44b01863a1ac84efccff54b98bb2dc886 && mkdir build && cd build && cmake .. && make && make install\nRUN git clone https://github.com/osmcode/osmium-tool\nRUN cd osmium-tool && git checkout ddbcb44f3ec0c1a8d729e69e3cee40d25f5a00b4 && mkdir build && cd build && cmake .. && make && make install\n\nRUN pip install --no-cache-dir awscli\nRUN curl -f -sSL https://sdk.cloud.google.com | bash\nRUN ln -f -s /root/google-cloud-sdk/bin/gsutil /usr/bin/gsutil\n\nWORKDIR $workdir\nRUN mkdir data\nCOPY ./start.sh .\nCMD ./start.sh"
}