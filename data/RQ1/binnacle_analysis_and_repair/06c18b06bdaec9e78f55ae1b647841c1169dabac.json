{
  "startTime": 1674244351777,
  "endTime": 1674244351943,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 8,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Golang container to build runit-health\nFROM golang:alpine AS runit-health\n\n# Install dependencies\nRUN apk add --no-cache git && \\\n    go get -u github.com/soundcloud/go-runit/runit\n\n# Add source code\nADD ./runit-health /src\n\n# Build app\nRUN cd /src && go build -o runit-health .\n\n################################################################################\n\n# Final image\nFROM alpine:3.9\n\n# Maintainer as instruction (deprecated)\nMAINTAINER whatwedo GmbH <welove@whatwedo.ch>\n\n# Set labels\nARG VERSION\nLABEL maintainer=\"whatwedo GmbH <welove@whatwedo.ch>\" \\\n    org.label-schema.name=\"whatwedo/docker-base-images\" \\\n    org.label-schema.url=\"https://github.com/whatwedo/docker-base-images\" \\\n    org.label-schema.vcs-url=\"https://github.com/whatwedo/docker-base-images\" \\\n    org.label-schema.vendor=\"whatwedo GmbH\" \\\n    org.label-schema.version=$VERSION \\\n    org.label-schema.schema-version=\"1.0\"\n\n# Install ca-certificates\nRUN apk add --no-cache ca-certificates\n\n# Install gosu\nENV GOSU_VERSION 1.11\nRUN set -eux; \\\n\n\tapk add --no-cache --virtual .gosu-deps \\\n\t\tdpkg \\\n\t\tgnupg \\\n\t; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n    for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu); do \\\n        gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || :; \\\n    done && \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tcommand -v gpgconf && gpgconf --kill all || :; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\n\tapk del --no-network .gosu-deps; \\\n\n\tchmod +x /usr/local/bin/gosu; \\\n\n\tgosu --version; \\\n\tgosu nobody true\n\n# Install runit\nRUN apk add --no-cache runit && \\\n    mkdir -p /etc/service\n\n# Add runit-health\nCOPY --from=runit-health /src/runit-health /usr/local/bin\n\n# Install goss\nRUN apk add --no-cache --virtual .build-deps curl && \\\n    curl -fsSL https://goss.rocks/install | sh && \\\n    apk del --no-cache .build-deps\nENV GOSS_FILE=/etc/goss/goss.yaml\n\n# Add rootfs files\nCOPY ./rootfs /\n\n# Set health check\nHEALTHCHECK --interval=60s --timeout=10s --start-period=60s \\\n    CMD goss validate\n\n# Configure upstart script\nRUN mkdir -p /etc/upstart\nCMD [\"/sbin/upstart\"]\n"
}