{
  "startTime": 1674245544402,
  "endTime": 1674245544679,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:18.04 as base_build\n\nARG TF_SERVING_VERSION_GIT_BRANCH=master\nARG TF_SERVING_VERSION_GIT_COMMIT=head\nARG TF_WHEEL_FILE=tensorflow-1.13.1-cp27-cp27mu-linux_ppc64le.whl\nARG TF_WHEEL_URL=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/artifact/tensorflow_pkg\n\nLABEL maintainer=wdirons@us.ibm.com\nLABEL tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}\nLABEL tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        automake \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libhdf5-dev \\\n        libpng-dev \\\n        libtool \\\n        libzmq3-dev \\\n        mlocate \\\n        openjdk-8-jdk\\\n        openjdk-8-jre-headless \\\n        pkg-config \\\n        python-dev \\\n        software-properties-common \\\n        swig \\\n        unzip \\\n        wget \\\n        zip \\\n        zlib1g-dev \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n    grpcio \\\n    h5py \\\n    keras_applications \\\n    keras_preprocessing \\\n    mock \\\n    numpy \\\n    requests\n\nRUN wget --no-verbose ${TF_WHEEL_URL}/${TF_WHEEL_FILE} && \\\n    pip install --no-cache-dir ${TF_WHEEL_FILE} && \\\n    rm -f ${TF_WHEEL_FILE}\n\n# Install Bazel from source\n# Need >= 0.15.0 so bazel compiles work with docker bind mounts.\nENV BAZEL_VERSION 0.20.0\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    wget --no-verbose https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip && \\\n    unzip bazel-$BAZEL_VERSION-dist.zip && \\\n    bash ./compile.sh && \\\n    cp output/bazel /usr/local/bin && \\\n    cd / && \\\n    rm -rf /bazel\n\n# Download TF Serving sources (optionally at specific commit).\nWORKDIR /tensorflow-serving\nRUN git clone --branch=${TF_SERVING_VERSION_GIT_BRANCH} https://github.com/tensorflow/serving . && \\\n    git remote add upstream https://github.com/tensorflow/serving.git && \\\n    if [ \"${TF_SERVING_VERSION_GIT_COMMIT}\" != \"head\" ]; then git checkout ${TF_SERVING_VERSION_GIT_COMMIT} ; fi\n\n\nFROM base_build as binary_build\n# Build, and install TensorFlow Serving\nARG TF_SERVING_BUILD_OPTIONS=\"--copt=-mcpu=power8 --copt=-mtune=power8\"\nRUN echo \"Building with build options: ${TF_SERVING_BUILD_OPTIONS}\"\nARG TF_SERVING_BAZEL_OPTIONS=\"\"\nRUN echo \"Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}\"\n\nRUN bazel build --color=yes --curses=yes \\\n    ${TF_SERVING_BAZEL_OPTIONS} \\\n    --verbose_failures \\\n    --output_filter=DONT_MATCH_ANYTHING \\\n    ${TF_SERVING_BUILD_OPTIONS} \\\n    tensorflow_serving/model_servers:tensorflow_model_server && \\\n    cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server \\\n    /usr/local/bin/\n\n# Build and install TensorFlow Serving API\nRUN bazel build --color=yes --curses=yes \\\n    ${TF_SERVING_BAZEL_OPTIONS} \\\n    --verbose_failures \\\n    --output_filter=DONT_MATCH_ANYTHING \\\n    ${TF_SERVING_BUILD_OPTIONS} \\\n    tensorflow_serving/tools/pip_package:build_pip_package && \\\n    bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package \\\n    /tmp/pip && \\\n    pip --no-cache-dir install --upgrade \\\n    /tmp/pip/tensorflow_serving_api-*.whl && \\\n    rm -rf /tmp/pip\n\nFROM binary_build as clean_build\n# Clean up Bazel cache when done.\nRUN bazel clean --expunge --color=yes && \\\n    rm -rf /root/.cache\nCMD [\"/bin/bash\"]\n"
}