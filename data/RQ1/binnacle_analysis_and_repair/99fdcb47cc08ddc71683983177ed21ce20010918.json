{
  "startTime": 1674234553974,
  "endTime": 1674234554102,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Debian builds the docs about 20% faster than alpine. The image is larger\n# and takes longer to build but that is worth it.\nFROM bitnami/minideb:stretch\n\nLABEL MAINTAINERS=\"Nik Everett <nik@elastic.co>\"\n\n# Setup repos for things like node and yarn\nRUN install_packages apt-transport-https gnupg2 ca-certificates\nCOPY .docker/apt/sources.list.d/* /etc/apt/sources.list.d/\nCOPY .docker/apt/keys/* /\nRUN cat /nodesource.gpg | apt-key add - && rm /nodesource.gpg\nRUN cat /yarn.gpg | apt-key add - && rm yarn.gpg\n\n# Package inventory:\n# * To make life easier\n#   * bash\n#   * less\n# * Used by the docs build\n#   * libnss-wrapper\n#   * libxml2-utils\n#   * nginx\n#   * openssh-client (used by git)\n#   * openssh-server (used to forward ssh auth for git when running with --all on macOS)\n#   * perl-base\n#   * python (is python2)\n#   * xsltproc\n# * To install rubygems for asciidoctor\n#   * build-essential\n#   * cmake\n#   * libxml2-dev\n#   * make\n#   * ruby\n#   * ruby-dev\n# * Used to check the docs build in CI\n#   * python3\n#   * python3-pip\n# * Used to check javascript\n#   * nodejs\n#   * yarn\nRUN install_packages \\\n  bash \\\n  build-essential \\\n  curl \\\n  cmake \\\n  git \\\n  less \\\n  libnss-wrapper \\\n  libxml2-dev \\\n  libxml2-utils \\\n  make \\\n  nodejs \\\n  nginx \\\n  openssh-client \\\n  openssh-server \\\n  perl-base \\\n  python \\\n  python3 \\\n  python3-pip \\\n  ruby \\\n  ruby-dev \\\n  unzip \\\n  yarn \\\n  xsltproc\n\n# We mount these directories with tmpfs so we can write to them so they\n# have to be empty. So we delete them.\nRUN rm -rf /var/log/nginx && rm -rf /run/nginx\n\n# Wheel inventory:\n# * Used to test the docs build\n#   * beautifulsoup4\n#   * lxml\n#   * pycodestyle\nRUN pip3 install --no-cache-dir \\\n  beautifulsoup4==4.7.1 \\\n  lxml==4.3.1 \\\n  pycodestyle==2.5.0\n\n# Install ruby deps with bundler to make things more standard for Ruby folks.\nRUN gem install bundler:2.0.1\nRUN bundle config --global silence_root_warning 1\nCOPY Gemfile* /\nRUN bundle install --binstubs --system --frozen\n# --frozen forces us to regenerate Gemfile.lock locally before using it in\n# docker which is important because we need Gemfile.lock to lock the gems to a\n# consistent version and we can't rely on running bundler in docker to update\n# it because we can't copy from the image to the host machine while building\n# the image.\n\nCOPY package.json /\nCOPY yarn.lock /\nENV YARN_CACHE_FOLDER=/tmp/.yarn-cache\nRUN yarn install --frozen-lockfile && yarn cache clean;\n"
}