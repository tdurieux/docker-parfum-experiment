{
  "startTime": 1674249484806,
  "endTime": 1674249484893,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 124
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 109
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opensuse/leap:15.0\nMAINTAINER SUSE Containers Team <containers@suse.com>\n\n# Install the entrypoint of this image.\nCOPY init /\n\n# Install Portus and prepare the /certificates directory.\nRUN chmod +x /init && \\\n    # Fetch the key from the obs://Virtualization:containers:Portus\n    # project. Sometimes the key server times out or has some other problem. In\n    # that case, we fall back to alternative key servers.\n    mkdir -m 0600 /tmp/build && \\\n    ( gpg --batch --homedir /tmp/build --keyserver ha.pool.sks-keyservers.net --recv-keys 55a0b34d49501bb7ca474f5aa193fbb572174fc2 || \\\n        gpg --batch --homedir /tmp/build --keyserver pgp.mit.edu --recv-keys 55a0b34d49501bb7ca474f5aa193fbb572174fc2 || \\\n        gpg --batch --homedir /tmp/build --keyserver keyserver.pgp.com --recv-keys 55a0b34d49501bb7ca474f5aa193fbb572174fc2) \\\n    && \\\n    gpg --batch --homedir /tmp/build --export --armor 55A0B34D49501BB7CA474F5AA193FBB572174FC2 > /tmp/build/repo.key && \\\n    rpm --import /tmp/build/repo.key && \\\n    rm -rf /tmp/build && \\\n    # Now add the repository and install portus.\n    zypper ar -f obs://Virtualization:containers:Portus/openSUSE_Leap_15.0 portus && \\\n    zypper ref && \\\n    zypper -n in --from portus ruby-common portus && \\\n    zypper clean -a && \\\n    # Prepare the certificates directory.\n    rm -rf /etc/pki/trust/anchors && \\\n    ln -sf /certificates /etc/pki/trust/anchors\n\nEXPOSE 3000\nENTRYPOINT [\"/init\"]\n"
}