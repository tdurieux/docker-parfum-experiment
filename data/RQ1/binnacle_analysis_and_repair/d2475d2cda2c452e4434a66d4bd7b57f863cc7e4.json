{
  "startTime": 1674244724830,
  "endTime": 1674244725038,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:5.6-apache\n\n# Install apt packages\n#\n# Required for php extensions\n# * gd: libpng-dev\n# * imagick: libmagickwand-dev\n# * imap: libc-client-dev, libkrb5-dev\n# * intl: libicu-dev\n# * mcrypt: libmcrypt-dev\n# * soap: libxml2-dev\n# * zip: zlib1g-dev\n#\n# Used in the build process\n# * git\n# * mysql-client\n# * sudo\n# * unzip\n# * zip\n# * node 9.x (from nodesource repository)\n#\n# iproute2 is required to get host ip from container\n\nRUN curl -f -sL https://deb.nodesource.com/setup_9.x | bash \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  git \\\n  iproute2 \\\n  libc-client-dev \\\n  libicu-dev \\\n  libjpeg62-turbo-dev \\\n  libkrb5-dev \\\n  libmagickwand-dev \\\n  libmcrypt-dev \\\n  libpng-dev \\\n  libxml2-dev \\\n  msmtp-mta \\\n  mysql-client \\\n  nodejs \\\n  sudo \\\n  unzip \\\n  zip \\\n  zlib1g-dev \\\n  && rm -r /var/lib/apt/lists/*\n\n# Install php extensions (curl, json, mbstring, openssl, posix, phar\n# are installed already and don't need to be specified here)\nRUN docker-php-ext-install bcmath \\\n  && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n  && docker-php-ext-install gd \\\n  && docker-php-ext-install gettext \\\n  && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n  && docker-php-ext-install imap \\\n  && docker-php-ext-install intl \\\n  && docker-php-ext-install mcrypt \\\n  && docker-php-ext-install mysqli \\\n  && docker-php-ext-install opcache \\\n  && docker-php-ext-install pdo_mysql \\\n  && docker-php-ext-install soap \\\n  && docker-php-ext-install zip\n\n# Install and enable imagick PECL extensions\nRUN pecl install imagick \\\n  && docker-php-ext-enable imagick\n\n# Install xdebug PECL extension\nRUN pecl install xdebug-2.5.5\n\nRUN a2enmod rewrite\n\nRUN a2enmod headers\n\nARG BUILDKIT_UID=1000\n\nARG BUILDKIT_GID=$BUILDKIT_UID\n\nRUN addgroup --gid=$BUILDKIT_GID buildkit\n\nRUN useradd --home-dir /buildkit --create-home --uid $BUILDKIT_UID --gid $BUILDKIT_GID buildkit\n\nCOPY sudo /etc/sudoers.d/buildkit\n\nUSER buildkit\n\nWORKDIR /buildkit\n\nENV PATH=\"/buildkit/bin:${PATH}\"\n\nRUN git clone https://github.com/civicrm/civicrm-buildkit.git buildkit-tmp\n\nRUN mv buildkit-tmp/* buildkit-tmp/.git* .\n\nRUN rmdir buildkit-tmp\n\n# Need to create this before we configure apache, otherwise it will complain\nRUN mkdir -p .amp/apache.d\n\nRUN mkdir -p .cache/bower\n\nRUN mkdir .composer\n\nRUN mkdir .drush\n\nRUN mkdir .npm\n\nRUN civi-download-tools\n\nRUN civibuild cache-warmup\n\nCOPY --chown=buildkit:buildkit amp.services.yml /buildkit/.amp/services.yml\n\nCOPY buildkit.ini /usr/local/etc/php/conf.d/buildkit.ini\n\nCOPY msmtprc /etc/msmtprc\n\nCOPY apache.conf /etc/apache2/conf-enabled/buildkit.conf\n\nRUN rm /buildkit/app/civicrm.settings.d/100-mail.php\n\nCOPY civibuild.conf /buildkit/app/civibuild.conf\n\nCOPY apache24-vhost.php /buildkit/build/.amp/apache24-vhost.php\n\nUSER root\n\nCOPY ./docker-civicrm-entrypoint /usr/local/bin\n\nENTRYPOINT [ \"docker-civicrm-entrypoint\" ]\n\nCMD [\"apache2-foreground\"]\n"
}