{
  "startTime": 1674245340240,
  "endTime": 1674245340363,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build on an old Arch version on purpose, to maximize compatibility:\nFROM fmanbuildsystem/archlinux:2018.04.01\n\nARG requirements\n\nRUN echo 'Server=https://archive.archlinux.org/repos/2018/04/01/$repo/os/$arch' > /etc/pacman.d/mirrorlist && \\\n    pacman -Syy\n\n# Python 3.6:\nRUN pacman -S --noconfirm python\n\n# fpm:\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN pacman -S --noconfirm ruby ruby-rdoc && \\\n    export PATH=$PATH:$(ruby -e \"puts Gem.user_dir\")/bin && \\\n    gem update && \\\n    gem install --no-ri --no-rdoc fpm && rm -rf /root/.gem;\n\nWORKDIR /root/${app_name}\n\n# Set up virtual environment:\nADD *.txt /tmp/requirements/\nRUN python -m venv venv && \\\n    venv/bin/python -m pip install -r \"/tmp/requirements/${requirements}\"\nRUN rm -rf /tmp/requirements/\n\n# Welcome message, displayed by ~/.bashrc:\nADD motd /etc/motd\n\nADD .bashrc /root/.bashrc\n\n# Import GPG key for code signing the installer:\nADD private-key.gpg public-key.gpg /tmp/\nRUN gpg -q --batch --yes --passphrase ${gpg_pass} --import /tmp/private-key.gpg /tmp/public-key.gpg && \\\n    rm /tmp/private-key.gpg /tmp/public-key.gpg\n\nADD gpg-agent.conf /root/.gnupg/gpg-agent.conf\nRUN gpgconf --kill gpg-agent"
}