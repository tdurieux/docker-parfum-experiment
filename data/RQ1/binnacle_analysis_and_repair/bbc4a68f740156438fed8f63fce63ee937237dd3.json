{
  "startTime": 1674244184208,
  "endTime": 1674244184255,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3\n\n# Instalar requerimientos del OS y limpiar\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-gdal \\\n    python3-venv \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Definir el directorio del proyecto\nENV PYTHONUNBUFFERED 1\nENV SITE_DIR=/project\nRUN mkdir -p $SITE_DIR\nWORKDIR $SITE_DIR\nRUN mkdir -p proj\n\n# Instalar un ambiente virtual para separar paquetes del sistema operativo\nRUN python3 -mvenv env/\n\n# Instalar requerimientos\nCOPY requirements.txt requirements.txt\nRUN env/bin/pip install pip --upgrade\nRUN env/bin/pip install -r requirements.txt\n\n# Instalar uwsgi\nRUN env/bin/pip install uwsgi\n\n# Configurar variables de ambiente\nENV NUM_THREADS=2\nENV NUM_PROCS=2\nENV DJANGO_DATABASE_URL=postgres://postgres@db/postgres\n\n# Copiar el proyecto\nCOPY . proj/\n\n# Exponemos el puerto del servicio\nEXPOSE 8000\n\n# Definir un punto de entrada para poder inicializar\nENTRYPOINT [\"./proj/docker/entrypoint.sh\"]\n\n# Definir un comando para ejecutar el servicio\nCMD [\"./proj/docker/app-start.sh\"]"
}