{
  "startTime": 1674243143420,
  "endTime": 1674243143664,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 26,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 25,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 26,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 25,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# *******************************************************************************\n# * Copyright 2018 Intel Corporation\n# *\n# * Licensed under the Apache License, Version 2.0 (the \"License\");\n# * you may not use this file except in compliance with the License.\n# * You may obtain a copy of the License at\n# *\n# *     http://www.apache.org/licenses/LICENSE-2.0\n# *\n# * Unless required by applicable law or agreed to in writing, software\n# * distributed under the License is distributed on an \"AS IS\" BASIS,\n# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# * See the License for the specific language governing permissions and\n# * limitations under the License.\n# ********************************************************************************\n\n# Environment to build and run unit tests for ngraph-mxnet on ubuntu1604\n# with gcc 5.4 by defaul\n# with clang 3.9\n# with capabilities for python 2.7 and python 3\n# Author:  Kim Janik / Lam Nguyen\n\n\nFROM ubuntu:16.04\n\nARG gccversion\n\n#Install MxNet Dependencies:\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential git \\\n        curl \\\n        libatlas-base-dev \\\n        python \\\n        python-pip \\\n        python-dev \\\n        python3 \\\n        python3-pip \\\n        python3-dev \\\n        python3-venv \\\n        python-opencv \\\n        graphviz \\\n        python-scipy \\\n        python-sklearn \\\n        libopenblas-dev \\\n        clang-3.9 \\\n        clang-format-3.9 \\\n        virtualenv \\\n        cmake \\\n        sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ \"$gccversion\" = \"gcc-5\" ]; then \\\n        apt-get update && apt-get install --no-install-recommends -y g++-5 gcc-5 \\\n        libopencv-dev; rm -rf /var/lib/apt/lists/*; \\\nelse \\\n       apt-get update && apt-get install --no-install-recommends -y g++-4.8 gcc-4.8 wget unzip zip; rm -rf /var/lib/apt/lists/*; \\\n\n\n\n\n\n\n\n\n\n\nfi\n\nRUN cmake --version\nRUN make --version\nRUN gcc --version\nRUN c++ --version\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir numpy\n\n# We include psutil\nRUN pip install --no-cache-dir psutil\n\n# We include pytest\nRUN pip install --no-cache-dir --upgrade pytest\n\n# We include pytest-xdist to speed up the testing\nRUN pip install --no-cache-dir pytest-xdist\n\n# Copy in the run-as-user.sh script\n# This will allow the builds, which are done in a mounted directory, to\n# be run as the user who runs \"docker run\".  This then allows the mounted\n# directory to be properly deleted by the user later (e.g. by jenkins).\nWORKDIR /home\nADD scripts/run-as-user.sh /home/run-as-user.sh\n"
}