{
  "startTime": 1674234511545,
  "endTime": 1674234512048,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 168,
        "lineEnd": 169,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 168,
        "lineEnd": 169,
        "columnStart": 22,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk AS tomcat\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\n\n# runtime dependencies for Tomcat Native Libraries\n# Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available\n# > checking OpenSSL library version >= 1.0.2...\n# > configure: error: Your version of OpenSSL is not compatible with this version of tcnative\n# see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\n# and https://github.com/docker-library/tomcat/pull/31\nENV OPENSSL_VERSION 1.1.0f-3+deb9u2\nRUN set -ex; \\\n\tcurrentVersion=\"$(dpkg-query --show --showformat '${Version}\\n' openssl)\"; \\\n\tif dpkg --compare-versions \"$currentVersion\" '<<' \"$OPENSSL_VERSION\"; then \\\n\t\tif ! grep -q stretch /etc/apt/sources.list; then \\\n# only add stretch if we're not already building from within stretch\n\t\t\t{ \\\n\t\t\t\techo 'deb http://deb.debian.org/debian stretch main'; \\\n\t\t\t\techo 'deb http://security.debian.org stretch/updates main'; \\\n\t\t\t\techo 'deb http://deb.debian.org/debian stretch-updates main'; \\\n\t\t\t} > /etc/apt/sources.list.d/stretch.list; \\\n\t\t\t{ \\\n# add a negative \"Pin-Priority\" so that we never ever get packages from stretch unless we explicitly request them\n\t\t\t\techo 'Package: *'; \\\n\t\t\t\techo 'Pin: release n=stretch*'; \\\n\t\t\t\techo 'Pin-Priority: -10'; \\\n\t\t\t\techo; \\\n# ... except OpenSSL, which is the reason we're here\n\t\t\t\techo 'Package: openssl libssl*'; \\\n\t\t\t\techo \"Pin: version $OPENSSL_VERSION\"; \\\n\t\t\t\techo 'Pin-Priority: 990'; \\\n\t\t\t} > /etc/apt/preferences.d/stretch-openssl; \\\n\t\tfi; \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends openssl=\"$OPENSSL_VERSION\"; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\tfi\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tlibapr1 \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n# see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\n\nENV TOMCAT_MAJOR 9\nENV TOMCAT_VERSION 9.0.8\nENV TOMCAT_SHA512 51af864fc3815bf40a200b8250f6e6aad66378f5b725199a308c0296957c58584a6358fb7df861694acea764b69ba4ce7dba0aa77792bd33ed38b66c24ff5b55\n\nENV TOMCAT_TGZ_URLS \\\n# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\n\thttps://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n# if the version is outdated, we might have to pull from the dist/archive :/\n\thttps://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n\thttps://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n\thttps://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n\nENV TOMCAT_ASC_URLS \\\n\thttps://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n# not all the mirrors actually carry the .asc files :'(\n\thttps://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n\thttps://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n\thttps://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\nRUN set -eux; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\n\tapt-get install -y --no-install-recommends gnupg dirmngr; \\\n\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone; \\\n\n\tapt-get install -y --no-install-recommends wget ca-certificates; \\\n\n\tsuccess=; \\\n\tfor url in $TOMCAT_TGZ_URLS; do \\\n\t\tif wget -O tomcat.tar.gz \"$url\"; then \\\n\t\t\tsuccess=1; \\\n\t\t\tbreak; \\\n\t\tfi; \\\n\tdone; \\\n\t[ -n \"$success\" ]; \\\n\n\techo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c -; \\\n\n\tsuccess=; \\\n\tfor url in $TOMCAT_ASC_URLS; do \\\n\t\tif wget -O tomcat.tar.gz.asc \"$url\"; then \\\n\t\t\tsuccess=1; \\\n\t\t\tbreak; \\\n\t\tfi; \\\n\tdone; \\\n\t[ -n \"$success\" ]; \\\n\n\tgpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \\\n\ttar -xvf tomcat.tar.gz --strip-components=1; \\\n\trm bin/*.bat; \\\n\trm tomcat.tar.gz*; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\n\tnativeBuildDir=\"$(mktemp -d)\"; \\\n\ttar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tdpkg-dev \\\n\t\tgcc \\\n\t\tlibapr1-dev \\\n\t\tlibssl-dev \\\n\t\tmake \\\n\t\t\"openjdk-${JAVA_VERSION%%[.~bu-]*}-jdk=$JAVA_DEBIAN_VERSION\" \\\n\t; \\\n\t( \\\n\t\texport CATALINA_HOME=\"$PWD\"; \\\n\t\tcd \"$nativeBuildDir/native\"; \\\n\t\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t\t./configure \\\n\t\t\t--build=\"$gnuArch\" \\\n\t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t--prefix=\"$CATALINA_HOME\" \\\n\t\t\t--with-apr=\"$(which apr-1-config)\" \\\n\t\t\t--with-java-home=\"$(docker-java-home)\" \\\n\t\t\t--with-ssl=yes; \\\n\t\tmake -j \"$(nproc)\"; \\\n\t\tmake install; \\\n\t); \\\n\trm -rf \"$nativeBuildDir\"; \\\n\trm bin/tomcat-native.tar.gz; \\\n\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n# sh removes env vars it doesn't support (ones with periods)\n# https://github.com/docker-library/tomcat/issues/77\n\tfind ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n\n# verify Tomcat Native is working properly\nRUN set -e \\\n\t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n\t&& if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n\t\techo >&2 \"$nativeLines\"; \\\n\t\texit 1; \\\n\tfi\n\n### CUSTOMIZE TOMCAT installation\n\n# Delete existing default applications\nRUN rm -rf /usr/local/tomcat/webapps/ROOT\nRUN rm -rf /usr/local/tomcat/webapps/docs\nRUN rm -rf /usr/local/tomcat/webapps/examples\nRUN rm -rf /usr/local/tomcat/webapps/host-manager\n\n# Install ANT\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tant && rm -rf /var/lib/apt/lists/*;\n\n# Setup the directory structure for CD by copying it from the host\nCOPY codedefenders/ /codedefenders/\nRUN ls -la /codedefenders/*\n\n# Define admin roles in tomcat\nCOPY tomcat-users.xml /usr/local/tomcat/conf/tomcat-users.xml\n\n# Enable remove access to admin\nCOPY context.xml /usr/local/tomcat/webapps/manager/META-INF/context.xml\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"]\n"
}