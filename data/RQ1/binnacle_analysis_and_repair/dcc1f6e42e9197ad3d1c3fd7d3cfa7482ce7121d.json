{
  "startTime": 1674241875963,
  "endTime": 1674241876164,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 30,
        "columnStart": 3,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM php:7.2.19-alpine\n\nRUN \\\n    apk update && apk upgrade && \\\n    # install dependencies\n   apk add --no-cache \\\n       postgresql-dev \\\n       icu \\\n       icu-libs \\\n       icu-dev \\\n       freetype-dev \\\n       libjpeg-turbo-dev \\\n       libpng-dev \\\n       libxml2-dev \\\n   && \\\n   # install useful PHP extensions\n   docker-php-ext-install \\\n       opcache \\\n       mysqli \\\n       pdo_mysql \\\n       pdo_pgsql \\\n       intl \\\n       bcmath \\\n       zip \\\n       gd \\\n       soap\n\n# install composer\nRUN curl -s -f -L -o /tmp/installer.php https://getcomposer.org/installer \\\n    && php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer \\\n    && composer --ansi --version --no-interaction\n\n# create src directory to store action files\nRUN mkdir -p /action/src\n\n# install Composer dependencies\nCOPY composer.json /action\nRUN cd /action && /usr/bin/composer install --no-plugins --no-scripts --prefer-dist --no-dev -o && rm composer.lock\n\n# copy required files\nCOPY router.php /action\nCOPY php.ini /usr/local/etc/php\n\n# Run webserver on port 8080\nCMD [ \"php\", \"-S\", \"0.0.0.0:8080\", \"/action/router.php\" ]\n\n"
}