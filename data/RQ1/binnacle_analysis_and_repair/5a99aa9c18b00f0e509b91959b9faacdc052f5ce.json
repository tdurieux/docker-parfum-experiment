{
  "startTime": 1674252453100,
  "endTime": 1674252453184,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage [go] \nFROM golang:alpine AS go-build \nCOPY . $GOPATH/src/github.com/AUT-CEIT/Registerator \nRUN apk update && apk add --no-cache git\nWORKDIR $GOPATH/src/github.com/AUT-CEIT/Registerator \nRUN go get -v && go build -v -o /Registerator \n\n# Build stage [react] \nFROM node:alpine as node-build \nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app \nCOPY ./ui/package.json /usr/src/app/ \nRUN npm install && npm cache clean --force;\nCOPY ./ui /usr/src/app \nRUN npm run build \n\n# Final stage \nFROM alpine \nRUN apk update && apk add ca-certificates && rm -rf /var/cache/apk/* \nEXPOSE 8080/tcp \nWORKDIR /app \nCOPY \\--from=go-build /Registerator /app/ \nCOPY \\--from=node-build /usr/src/app /app/ui \nENTRYPOINT [\"./Registerator\"] \n\n"
}