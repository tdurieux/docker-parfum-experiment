{
  "startTime": 1674248416160,
  "endTime": 1674248416453,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\n# allow replacing httpredir mirror\nARG APT_MIRROR=httpredir.debian.org\nRUN sed -i s/httpredir.debian.org/$APT_MIRROR/g /etc/apt/sources.list\n\nRUN apt-get update && apt-get install -y \\\n\tbuild-essential \\\n\tca-certificates \\\n\tcurl \\\n\tmake \\\n\tjq \\\n\tpkg-config \\\n\tapparmor \\\n\tlibapparmor-dev \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# add git repo\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys E1DD270288B4E6030699E45FA1715D88E1DF1F24\nRUN echo deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main > /etc/apt/sources.list.d/git.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n# Install Go\nENV GO_VERSION 1.8.1\nRUN curl -f -sSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" | tar -v -C /usr/local -xz\nENV PATH /go/bin:/usr/local/go/bin:$PATH\nENV GOPATH /go:/go/src/github.com/containerd/containerd/vendor\n\nENV GO_TOOLS_COMMIT 823804e1ae08dbb14eb807afc7db9993bc9e3cc3\n# Grab Go's cover tool for dead-simple code coverage testing\n# Grab Go's vet tool for examining go code to find suspicious constructs\n# and help prevent errors that the compiler might not catch\nRUN git clone https://github.com/golang/tools.git /go/src/golang.org/x/tools \\\n\t&& (cd /go/src/golang.org/x/tools && git checkout -q $GO_TOOLS_COMMIT) \\\n\t&& go install -v golang.org/x/tools/cmd/cover \\\n\t&& go install -v golang.org/x/tools/cmd/vet\n# Grab Go's lint tool\nENV GO_LINT_COMMIT 32a87160691b3c96046c0c678fe57c5bef761456\nRUN git clone https://github.com/golang/lint.git /go/src/github.com/golang/lint \\\n\t&& (cd /go/src/github.com/golang/lint && git checkout -q $GO_LINT_COMMIT) \\\n\t&& go install -v github.com/golang/lint/golint\n\nWORKDIR /go/src/github.com/containerd/containerd\n\n# install seccomp: the version shipped in trusty is too old\nENV SECCOMP_VERSION 2.3.1\nRUN set -x \\\n\t&& export SECCOMP_PATH=\"$(mktemp -d)\" \\\n\t&& curl -fsSL \"https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz\" \\\n\t\t| tar -xzC \"$SECCOMP_PATH\" --strip-components=1 \\\n\t&& ( cd \"$SECCOMP_PATH\" \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n\t\t&& make \\\n\t\t&& make install \\\n\t\t&& ldconfig) \\\n\n\t&& rm -rf \"$SECCOMP_PATH\"\n\n# Install runc\nENV RUNC_COMMIT 992a5be178a62e026f4069f443c6164912adbf09\nRUN set -x \\\n\t&& export GOPATH=\"$(mktemp -d)\" \\\n    && git clone git://github.com/opencontainers/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n\t&& cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n\t&& git checkout -q \"$RUNC_COMMIT\" \\\n\t&& make BUILDTAGS=\"seccomp apparmor selinux\" && make install && rm -rf -d\n\nCOPY . /go/src/github.com/containerd/containerd\n\nWORKDIR /go/src/github.com/containerd/containerd\n\nRUN make all install\n"
}