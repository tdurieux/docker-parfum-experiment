{
  "startTime": 1674243263627,
  "endTime": 1674243263672,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM aarch64/python:3.6-alpine\n\nCOPY .qemu/qemu-aarch64-static /usr/bin/qemu-aarch64-static\n\nMAINTAINER The Crossbar.io Project <support@crossbario.com>\n\n# Metadata\nARG AUTOBAHN_PYTHON_VERSION\nARG BUILD_DATE\nARG AUTOBAHN_PYTHON_VCS_REF\n\n# Metadata labeling\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"AutobahnPython Starter Template\" \\\n      org.label-schema.description=\"Quickstart template for application development with AutobahnPython\" \\\n      org.label-schema.url=\"http://crossbar.io\" \\\n      org.label-schema.vcs-ref=$AUTOBAHN_PYTHON_VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/crossbario/autobahn-python\" \\\n      org.label-schema.vendor=\"The Crossbar.io Project\" \\\n      org.label-schema.version=$AUTOBAHN_PYTHON_VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n\n# Application home\nENV HOME /app\nENV DEBIAN_FRONTEND noninteractive\nENV NODE_PATH /usr/local/lib/node_modules/\n\n# Crossbar.io connection defaults\nENV CBURL ws://crossbar:8080/ws\nENV CBREALM realm1\n\n# we need a toolchain for the (optional) binary extensions used by Autobahn\nRUN apk add --update build-base libffi-dev openssl-dev python-dev py-pip \\\n    && rm -rf /var/cache/apk/*\n\n# install Autobahn|Python\nRUN pip install --no-cache-dir -U pip \\\n    && pip install --no-cache-dir autobahn[twisted,asyncio,accelerate,serialization,encryption]==${AUTOBAHN_PYTHON_VERSION}\n\n# add example service\nCOPY ./app /app\nRUN ln -s /app/client_tx.py /app/client.py\n\n# make /app a volume to allow external configuration\nVOLUME /app\n\n# set the app component directory as working directory\nWORKDIR /app\n\n# run service entry script by default\nCMD [\"sh\", \"/app/run\"]\n"
}