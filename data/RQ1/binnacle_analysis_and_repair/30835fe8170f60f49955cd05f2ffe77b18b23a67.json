{
  "startTime": 1674245950101,
  "endTime": 1674245950310,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as opencv-builder\nMAINTAINER \"Andrei Maksimov\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget ca-certificates \\\n    build-essential cmake pkg-config \\\n    libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev \\\n    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \\\n    libxvidcore-dev libx264-dev \\\n    libgtk-3-dev \\\n    libatlas-base-dev gfortran \\\n    git curl vim python3-dev python3-pip \\\n    libfreetype6-dev libhdf5-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN wget -O opencv.tar.gz https://github.com/opencv/opencv/archive/3.3.1.tar.gz && \\\n    tar zxvf opencv.tar.gz && \\\n    wget -O opencv_contrib.tar.gz https://github.com/opencv/opencv_contrib/archive/3.3.1.tar.gz && \\\n    tar zxvf opencv_contrib.tar.gz && rm opencv.tar.gz\n\nRUN cd opencv-3.3.1 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n        -D CMAKE_INSTALL_PREFIX=/usr/local \\\n        -D INSTALL_PYTHON_EXAMPLES=ON \\\n        -D INSTALL_C_EXAMPLES=OFF \\\n        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.3.1/modules \\\n        -D BUILD_EXAMPLES=ON .. && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig && \\\n    cd / && rm -Rf /opencv-3.3.1 /opencv_contrib-3.3.1\n\nRUN pip3 install --no-cache-dir tensorflow && \\\n    pip3 install --no-cache-dir numpy pandas sklearn matplotlib seaborn jupyter pyyaml h5py && \\\n    pip3 install --no-cache-dir keras --no-deps && \\\n    pip3 install --no-cache-dir opencv-python && \\\n    pip3 install --no-cache-dir imutils\n\nRUN [\"mkdir\", \"notebooks\"]\nCOPY conf/.jupyter /root/.jupyter\nCOPY run_jupyter.sh /\n\n# Jupyter and Tensorboard ports\nEXPOSE 8888 6006\n\n# Store notebooks in this mounted directory\nVOLUME /notebooks\n\nCMD [\"/run_jupyter.sh\"]\n"
}