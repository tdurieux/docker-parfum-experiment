{
  "startTime": 1674251410333,
  "endTime": 1674251410382,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.mgm.sipwise.com/sipwise-stretch:latest\n\n# Important! Update this no-op ENV variable when this Dockerfile\n# is updated with the current date. It will force refresh of all\n# of the base images and things like `apt-get update` won't be using\n# old cached versions when the Dockerfile is built.\nENV REFRESHED_AT 2018-12-12\n\n# files that get-code generates\nCOPY t/sources.list.d/builddeps.list /etc/apt/sources.list.d/\nCOPY t/sources.list.d/preferences /etc/apt/preferences.d/\n\nRUN apt-get update && apt-get install -y --no-install-recommends --assume-yes \\\n        curl \\\n        nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"cd /code && ./t/testrunner\" >/root/.bash_history\n\n# we cannot use /code/ here otherwise it will be 'mounted over' with following 'docker run'\nADD package.json /tmp/\nADD npm-shrinkwrap.json /tmp/\nADD README.md /tmp/\nWORKDIR /tmp\nRUN npm install /tmp && npm cache clean --force;\n\nWORKDIR /code\n\n################################################################################\n# Instructions for usage\n# ----------------------\n# When you want to build the base image from scratch\n# (jump to the next section if you don't want to build yourself!):\n#\n# you need to put the proper NGCP sources at t/sources.list.d/builddeps.list\n# for instance, trunk:\n# echo \"deb https://deb.sipwise.com/autobuild/ release-trunk-stretch main\" > t/sources.list.d/builddeps.list\n#\n# NOTE: run the following command from root folder of git repository:\n# % docker build --tag=\"janus-client-stretch\" -f ./t/Dockerfile .\n# NOTE: run the following command from root folder of git repository:\n# % docker run --rm -i -t -v $(pwd):/code:ro -v /results janus-client-stretch:latest bash\n#\n# Use the existing docker image:\n# % docker pull docker.mgm.sipwise.com/janus-client-stretch\n# NOTE: run the following command from root folder of git repository:\n# % docker run --rm -i -t -v $(pwd):/code:ro -v /results docker.mgm.sipwise.com/janus-client-stretch:latest bash\n#\n# Inside docker:\n#   cd /code && ./t/testrunner\n################################################################################\n"
}