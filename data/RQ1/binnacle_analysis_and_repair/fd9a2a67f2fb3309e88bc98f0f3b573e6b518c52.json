{
  "startTime": 1674239591942,
  "endTime": 1674239592942,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 25,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nMAINTAINER Arif Islam<arif@dreamfactory.com>\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -y && apt-get install -y --no-install-recommends software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN LANG=C.UTF-8 add-apt-repository ppa:ondrej/php -y && \\\n    apt-get update && apt-get install -y --no-install-recommends --allow-unauthenticated \\\n    git-core curl mcrypt nginx openssl python nodejs zip ssmtp wget php7.1-fpm php7.1-common \\\n    php7.1-cli php7.1-curl php7.1-json php7.1-mcrypt php7.1-mysqlnd php7.1-pgsql php7.1-sqlite \\\n    php-pear php7.1-dev php7.1-ldap php7.1-interbase php7.1-mbstring php7.1-bcmath php7.1-zip php7.1-soap php7.1-sybase php7.1-xml && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y --allow-unauthenticated python-pip pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/nodejs /usr/bin/node && \\\n    curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \\\n    curl -f https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list && \\\n    apt-get install -y --no-install-recommends apt-transport-https locales && \\\n    echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen && \\\n    apt-get update && \\\n    ACCEPT_EULA=Y apt-get install -y --no-install-recommends mssql-tools unixodbc-dev && \\\n    pecl install sqlsrv pdo_sqlsrv && \\\n    echo \"extension=sqlsrv.so\" > /etc/php/7.1/mods-available/sqlsrv.ini && \\\n    echo \"extension=pdo_sqlsrv.so\" > /etc/php/7.1/mods-available/pdo_sqlsrv.ini && \\\n    phpenmod sqlsrv pdo_sqlsrv && \\\n    pip install --no-cache-dir bunch && \\\n    pecl install igbinary && \\\n    echo \"extension=igbinary.so\" > /etc/php/7.1/mods-available/igbinary.ini && \\\n    phpenmod igbinary && \\\n    pecl install mongodb && \\\n    echo \"extension=mongodb.so\" > /etc/php/7.1/mods-available/mongodb.ini && \\\n    phpenmod mongodb && \\\n    git clone https://github.com/dreamfactorysoftware/v8-compiled.git /v8 && \\\n    mkdir /opt/v8 && rm -rf /var/lib/apt/lists/*;\nWORKDIR /v8\nRUN cp -R ubuntu_16.04/PHP7.1/* /opt/v8 && \\\n    git clone https://github.com/phpv8/v8js.git /v8js\nWORKDIR /v8js\nRUN git checkout 1.3.6 && \\\n    git pull origin 1.3.6 && \\\n    phpize && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-v8js=/opt/v8 && \\\n    make && make install && \\\n    echo \"extension=v8js.so\" > /etc/php/7.1/mods-available/v8js.ini && \\\n    phpenmod v8js\nWORKDIR /\nRUN rm -Rf v8 && rm -Rf v8js\n\n# install php cassandra extension\nRUN mkdir /cassandra\nWORKDIR /cassandra\nRUN apt-get install -y --no-install-recommends libgmp-dev libpcre3-dev g++ make cmake libssl-dev && \\\n    wget -q https://downloads.datastax.com/cpp-driver/ubuntu/16.04/dependencies/libuv/v1.11.0/libuv_1.11.0-1_amd64.deb && \\\n    wget -q https://downloads.datastax.com/cpp-driver/ubuntu/16.04/dependencies/libuv/v1.11.0/libuv-dev_1.11.0-1_amd64.deb && \\\n    wget -q https://downloads.datastax.com/cpp-driver/ubuntu/16.04/cassandra/v2.6.0/cassandra-cpp-driver_2.6.0-1_amd64.deb && \\\n    wget -q https://downloads.datastax.com/cpp-driver/ubuntu/16.04/cassandra/v2.6.0/cassandra-cpp-driver-dev_2.6.0-1_amd64.deb && \\\n    dpkg -i --force-overwrite libuv_1.11.0-1_amd64.deb && \\\n    dpkg -i libuv-dev_1.11.0-1_amd64.deb && \\\n    dpkg -i cassandra-cpp-driver_2.6.0-1_amd64.deb && \\\n    dpkg -i cassandra-cpp-driver-dev_2.6.0-1_amd64.deb && \\\n    git clone https://github.com/datastax/php-driver.git && rm -rf /var/lib/apt/lists/*;\nWORKDIR /cassandra/php-driver\nRUN git checkout tags/v1.2.2\nWORKDIR /cassandra/php-driver/ext\nRUN phpize && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    echo \"extension=cassandra.so\" > /etc/php/7.1/mods-available/cassandra.ini && \\\n    phpenmod cassandra\nWORKDIR /\nRUN rm -Rf cassandra\n\n# install php couchbase extension\nRUN mkdir /couchbase\nWORKDIR /couchbase\nRUN wget https://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-2-amd64.deb && \\\n    dpkg -i couchbase-release-1.0-2-amd64.deb && \\\n    apt-get update -y && \\\n    apt-get install -y --no-install-recommends --allow-unauthenticated libcouchbase-dev build-essential zlib1g-dev && \\\n    pecl install pcs-1.3.3 && \\\n    pecl install couchbase && \\\n    echo \"extension=pcs.so\" > /etc/php/7.1/mods-available/pcs.ini && \\\n    echo \"extension=couchbase.so\" > /etc/php/7.1/mods-available/xcouchbase.ini && \\\n    phpenmod pcs && phpenmod xcouchbase && rm -rf /var/lib/apt/lists/*;\nWORKDIR /\nRUN rm -Rf couchbase\n\n# configure sendmail\nRUN echo 'sendmail_path = \"/usr/sbin/ssmtp -t\"' > /etc/php/7.1/cli/conf.d/mail.ini\n\n# install composer\nRUN curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer && \\\n    chmod +x /usr/local/bin/composer\n\n\n# Configure Nginx/php-fpm\nRUN rm /etc/nginx/sites-enabled/default\nADD dreamfactory.conf /etc/nginx/sites-available/dreamfactory.conf\nRUN ln -s /etc/nginx/sites-available/dreamfactory.conf /etc/nginx/sites-enabled/dreamfactory.conf && \\\n    sed -i \"s/pm.max_children = 5/pm.max_children = 5000/\" /etc/php/7.1/fpm/pool.d/www.conf && \\\n    sed -i \"s/pm.start_servers = 2/pm.start_servers = 150/\" /etc/php/7.1/fpm/pool.d/www.conf && \\\n    sed -i \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 100/\" /etc/php/7.1/fpm/pool.d/www.conf && \\\n    sed -i \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 200/\" /etc/php/7.1/fpm/pool.d/www.conf && \\\n    sed -i \"s/pm = dynamic/pm = ondemand/\" /etc/php/7.1/fpm/pool.d/www.conf && \\\n    sed -i \"s/worker_connections 768;/worker_connections 2048;/\" /etc/nginx/nginx.conf && \\\n    sed -i \"s/keepalive_timeout 65;/keepalive_timeout 10;/\" /etc/nginx/nginx.conf\n\n# get app src\nRUN git clone https://github.com/dreamfactorysoftware/dreamfactory.git /opt/dreamfactory\n\nWORKDIR /opt/dreamfactory\n\n# install packages\nRUN composer install --no-dev && \\\n    php artisan df:env --db_connection=sqlite --df_install=Docker && \\\n    chown -R www-data:www-data /opt/dreamfactory\nADD docker-entrypoint.sh /docker-entrypoint.sh\n# set proper permission to docker-entrypoint.sh script and forward error logs to docker log collector\nRUN chmod +x /docker-entrypoint.sh && ln -sf /dev/stderr /var/log/nginx/error.log && rm -rf /var/lib/apt/lists/*\n\nEXPOSE 80\n\nCMD [\"/docker-entrypoint.sh\"]\n"
}