{
  "startTime": 1674235176153,
  "endTime": 1674235176207,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### STAGE 1: Build ###\n\n# We label our stage as 'builder'\nFROM node:8 as builder\n\nCOPY package.json yarn.lock ./\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN yarn install --silent --no-progress && mkdir -p /ng-app && cp -R ./node_modules ./ng-app && yarn cache clean;\n\nWORKDIR /ng-app\nCOPY . .\n\n## Build the angular app in production mode and store the artifacts in dist folder\nRUN $(npm bin)/ng build --prod --build-optimizer\n\n### STAGE 2: Setup ###\nFROM nginx:stable-alpine\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From 'builder' stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist /usr/share/nginx/html\n\nEXPOSE 80\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}