{
  "startTime": 1674235778231,
  "endTime": 1674235778293,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# buildbot/buildbot-master\n\n# please follow docker best practices\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\n#\n# Provides a base alpine 3.4 image with latest buildbot master installed\n# Alpine base build is ~130MB vs ~500MB for the ubuntu build\n\n# Note that the UI and worker packages are the latest version published on pypi\n# This is to avoid pulling node inside this container\n\nFROM        alpine:3.5\nMAINTAINER  Buildbot maintainers\n\n# Last build date - this can be updated whenever there are security updates so\n# that everything is rebuilt\nENV         security_updates_as_of 2017-02-08\n\n\nCOPY . /usr/src/buildbot\n# We install as much as possible python packages from the distro in order to avoid\n# having to pull gcc for building native extensions\n# Some packages are at the moment (10/2016) only available on @testing\nRUN \\\n    echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && \\\n    echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories && \\\n    apk add --no-cache \\\n        git \\\n        python \\\n        py-pip \\\n        py-psycopg2 \\\n        py-twisted \\\n        py-cffi \\\n        py-openssl@edge \\\n        py-cryptography@edge \\\n        py-service_identity@edge \\\n        py-sqlalchemy@edge \\\n        gosu@testing \\\n        dumb-init@edge\\\n        py-jinja2 \\\n        tar \\\n        tzdata \\\n        curl && \\\n# install pip dependencies\n    pip install --no-cache-dir --upgrade pip setuptools && \\\n    pip install --no-cache-dir \"buildbot[bundle,tls]\" && \\\n    pip install --no-cache-dir \"/usr/src/buildbot\" && \\\n    rm -r /root/.cache\n\nWORKDIR /var/lib/buildbot\nCMD [\"dumb-init\", \"/usr/src/buildbot/docker/start_buildbot.sh\"]\n"
}