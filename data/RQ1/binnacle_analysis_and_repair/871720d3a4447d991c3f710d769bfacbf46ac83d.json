{
  "startTime": 1674237118459,
  "endTime": 1674237118754,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 16,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 93,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 The Chromium Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n#\n# Defines a docker image that can build sound open firmware\n#\n# Usage:\n# check out sof\n# build docker image:\n# docker build --build-arg UID=$(id -u) -t sof .\n# docker run -it  -v <insert sof dir here>:/home/sof/workdir --user `id -u` sof\n#\n# For incremental builds:\n# docker run -it  -v <insert sof dir here>:/home/sof/work/sof.git --user `id -u` sof ./incremental.sh\n#\n\nFROM ubuntu:18.04\nARG UID=1000\n\n# Set up proxy from host\nCOPY apt.conf /etc/apt/\nARG host_http_proxy\nARG host_https_proxy\nENV http_proxy $host_http_proxy\nENV https_proxy $host_https_proxy\n\nRUN apt-get -y update && \\\n\t\t\t\t\tapt-get install --no-install-recommends -y \\\n\t\t\t\t\t\tautoconf \\\n\t\tbison \\\n\t\tbuild-essential \\\n\t\tflex \\\n\t\tgawk \\\n\t\tgettext \\\n\t\tgit \\\n\t\tgperf \\\n\t\thelp2man \\\n\t\tlibncurses5-dev \\\n\t\tlibssl-dev \\\n\t\tlibtool \\\n\t\tlibtool-bin \\\n\t\tpkg-config \\\n\t\tsoftware-properties-common \\\n\t\tsudo \\\n\t\ttexinfo \\\n\t\tudev \\\n\t\twget \\\n\t\tunzip \\\n\t\tcmake \\\n\t\tpython3 && rm -rf /var/lib/apt/lists/*;\n\n\n# Use ToT alsa utils for the latest topology patches.\nRUN mkdir -p /root/alsa-build && cd /root/alsa-build && \\\ngit clone https://github.com/thesofproject/alsa-lib.git && \\\ngit clone https://github.com/thesofproject/alsa-utils.git && \\\ncd /root/alsa-build/alsa-lib && ./gitcompile &&  make install && \\\ncd /root/alsa-build/alsa-utils && ./gitcompile &&  make install && \\\ncd /root/ && rm -rf alsa-build\n\n# Set up sof user\nRUN useradd --create-home -d /home/sof -u $UID -G sudo sof && \\\necho \"sof:test0000\" | chpasswd && adduser sof sudo\nENV HOME /home/sof\n\n# build cross compiler\nUSER sof\nRUN cd /home/sof && git clone https://github.com/thesofproject/xtensa-overlay.git && \\\n\tcd xtensa-overlay && git checkout sof-gcc8.1 && cd ../ && \\\n\tgit clone https://github.com/thesofproject/crosstool-ng.git && \\\n\tmkdir -p /home/sof/work/ && \\\n\tcd crosstool-ng && git checkout sof-gcc8.1 && \\\n\t./bootstrap && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=`pwd` && make && make install && \\\n\tfor arch in byt hsw apl cnl imx; do \\\n\t\tcp config-${arch}-gcc8.1-gdb8.1 .config && \\\n# replace the build dist to save space\n\t\tsed -i 's#${CT_TOP_DIR}\\/builds#\\/home\\/sof\\/work#g' .config && \\\n# gl_cv_func_getcwd_path_max=yes is used to avoid too-long confdir3/confdir3/...\n\t\tgl_cv_func_getcwd_path_max=yes ./ct-ng build && \\\n\t\t./ct-ng distclean ; \\\n\tdone && \\\n\tcd /home/sof/ && rm -rf xtensa-overlay && rm -rf crosstool-ng\n\nENV PATH=\"/home/sof/work/xtensa-byt-elf/bin:${PATH}\"\nENV PATH=\"/home/sof/work/xtensa-hsw-elf/bin:${PATH}\"\nENV PATH=\"/home/sof/work/xtensa-apl-elf/bin:${PATH}\"\nENV PATH=\"/home/sof/work/xtensa-cnl-elf/bin:${PATH}\"\nENV PATH=\"/home/sof/work/xtensa-imx-elf/bin:${PATH}\"\n\nRUN cd /home/sof && git clone https://github.com/jcmvbkbc/newlib-xtensa.git newlib-xtensa.git && \\\n\tcd newlib-xtensa.git && git checkout -b xtensa origin/xtensa && \\\n\tfor arch in byt hsw apl cnl imx; do \\\n\t\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --target=xtensa-${arch}-elf \\\n\t\t--prefix=/home/sof/work/xtensa-root && \\\n\t\tmake && \\\n\t\tmake install && \\\n\t\trm -rf etc/config.cache; \\\n\tdone && \\\n\tcd /home/sof/ && rm -rf newlib-xtensa.git\n\n\n# Create direcroties for the host machines sof directories to be mounted.\nRUN mkdir -p /home/sof/work/sof.git\n\nUSER sof\nWORKDIR /home/sof/work/sof.git/\n"
}