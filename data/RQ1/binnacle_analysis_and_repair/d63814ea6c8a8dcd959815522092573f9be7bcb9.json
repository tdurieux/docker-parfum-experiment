{
  "startTime": 1674240413808,
  "endTime": 1674240413880,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "##################################################################### \n# broadtech/debian-stretch-mongodb \n# This Dockerfile creats an image that deploys MongoDB \n# on Debian Linux ( Stretch ) \n# To deploy MongoDB on Stretch run a single command \n# \n# $ sudo docker run broadtech/debian-stretch-mongodb \n# \n# To run MongoDB in the background use the -d option \n# \n# $ sudo docker run -d broadtech/debian-stretch-mongodb \n# \n# You could use this Dockerfile to create your own docker image \n\n# Base image \nFROM debian \n\nLABEL \"vendor\"=\"BroadTech Innovations PVT LTD\" \nLABEL \"vendor.url\"=\"http://www.broadtech-innovations.com/\" \nLABEL \"maintainer\"=\"sgeorge.ml@gmail.com\" \n\n# Update Local Repository Index \nRUN apt-get update \n\n# Upgrade packages in the base image and apply security updates \nRUN DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -yq \n\n# Install package utils \nRUN DEBIAN_FRONT=noninteractive apt-get --no-install-recommends install -yq apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# Install MongoDB \nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq mongodb && rm -rf /var/lib/apt/lists/*;\n\n# Remove package files fetched for install \nRUN apt-get clean \n\n# Remove unwanted files \nRUN rm -rf /var/lib/apt/lists/ \n\n# Open MongoDB default port \nEXPOSE 27017 \n\n# Pass Database Location on file system as parameter to MongoDB \nCMD [\"--dbpath\", \"/var/lib/mongodb\"] \n\n# Start MongoDB when container runs \nENTRYPOINT [\"/usr/bin/mongod\"] \n\n# MongoDB sometimes comes without a default password and this has \n# caused exposure of Data on the Internet. \n\n# https://www.shodan.io/search?query=mongodb \n\n# So please be sure to provide passwords for users if you wish \n# to expose your MongoDB server to the outside world. \n#--------------------------END--------------------------------------# \n\n"
}