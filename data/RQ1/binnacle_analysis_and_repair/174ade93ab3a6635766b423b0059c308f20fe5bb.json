{
  "startTime": 1674239519831,
  "endTime": 1674239520068,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Ubuntu 14.04\nFROM ubuntu:14.04\n\nLABEL maintainer \"MICROSOFT CORPORATION\"\nLABEL com.microsoft.cntk.version=\"2.0.beta7.0\"\n\nENV CNTK_VERSION=\"2.0.beta7.0\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    # General\n        ca-certificates \\\n        wget \\\n    # For Open MPI\n        gcc \\\n        g++ \\\n        make \\\n    # For Image Reader\n        libjasper1 \\\n        libjpeg8 \\\n        libpng12-0 \\\n    # For Kaldi Reader\n        libgfortran3 \\\n        && \\\n    # Clean-up\n    apt-get update && apt-get -y autoremove \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Open MPI\nRUN OPENMPI_VERSION=\"1.10.4\" && \\\n    OPENMPI_SHA1=\"84d035e7ab1572e5ebc086049f05b694d2158844\" && \\\n    wget -q https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-${OPENMPI_VERSION}.tar.gz && \\\n    echo \"$OPENMPI_SHA1 openmpi-${OPENMPI_VERSION}.tar.gz\" | sha1sum --check --strict - && \\\n    tar -xzf openmpi-${OPENMPI_VERSION}.tar.gz && \\\n    cd openmpi-${OPENMPI_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/mpi && \\\n    make -j\"$(nproc)\" install && \\\n    cd .. && \\\n    rm -rf /openmpi-${OPENMPI_VERSION} && \\\n    rm -rf openmpi-${OPENMPI_VERSION}.tar.gz\n\nENV PATH=/usr/local/mpi/bin:$PATH \\\n    LD_LIBRARY_PATH=/usr/local/mpi/lib:$LD_LIBRARY_PATH\n\n# Install Anaconda\nRUN ANACONDA_PREFIX=\"/root/anaconda3\" && \\\n    ANACONDA_VERSION=\"3-4.1.1\" && \\\n    ANACONDA_SHA256=\"4f5c95feb0e7efeadd3d348dcef117d7787c799f24b0429e45017008f3534e55\" && \\\n    wget -q https://repo.continuum.io/archive/Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh && \\\n    echo \"$ANACONDA_SHA256  Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh\" | sha256sum --check --strict - && \\\n    chmod a+x ./Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh && \\\n    ./Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh -b -p ${ANACONDA_PREFIX} && \\\n    rm -rf /Anaconda${ANACONDA_VERSION}-Linux-x86_64.sh\n\n# Get CNTK Binary Distribution\nRUN CNTK_VERSION_DASHED=$(echo $CNTK_VERSION | tr . -) && \\\n    CNTK_SHA256=\"b64b9180fed2796ecc537e27e4547e91f8f6e6388055753c7abb7d441b5db5e1\" && \\\n    wget -q https://cntk.ai/BinaryDrop/CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-CPU-Only.tar.gz && \\\n    echo \"$CNTK_SHA256  CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-CPU-Only.tar.gz\" | sha256sum --check --strict - && \\\n    tar -xzf CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-CPU-Only.tar.gz && \\\n    rm -f CNTK-${CNTK_VERSION_DASHED}-Linux-64bit-CPU-Only.tar.gz\n\nENV PATH=/cntk/cntk/bin:$PATH \\\n    LD_LIBRARY_PATH=/cntk/cntk/lib:/cntk/cntk/dependencies/lib:$LD_LIBRARY_PATH\n\n# Copy Anaconda setup script\n# TODO. Implement via modifying Binary Drop package\nCOPY install-cntk-docker.sh /cntk/Scripts/install/linux\n\n# Set up Anaconda environment\nRUN /bin/bash /cntk/Scripts/install/linux/install-cntk-docker.sh\n\nWORKDIR /root\n"
}