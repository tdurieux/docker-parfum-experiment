{
  "startTime": 1674250326624,
  "endTime": 1674250326883,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 32,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 52,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6.11.1 as adminbuilder\nRUN mkdir -p /apps/warehouse\nRUN mkdir -p /apps/warehouse/client\nCOPY . /apps/warehouse\nWORKDIR /apps/warehouse/admin\nRUN npm install && npm cache clean --force;\nRUN npm run admin\n\nFROM node:6.11.1\nRUN sed -i '2d' /etc/apt/sources.list && apt-get -y update && apt-get -y dist-upgrade\nRUN chown -R node:node /usr/local\nRUN apt-get -y update && apt-get -y dist-upgrade && apt-get install --no-install-recommends -y python-pip python-dev && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\nRUN pip install --no-cache-dir awscli --upgrade\nENV DEBIAN_FRONTEND=noninteractive\nENV GOSU_VERSION 1.10\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true && rm -rf -d\nRUN mkdir -p /apps/warehouse\nRUN chown -R node:node /apps/warehouse\nWORKDIR /apps/warehouse\nCOPY package.json /apps/warehouse/package.json\nCOPY npm-shrinkwrap.json /apps/warehouse/npm-shrinkwrap.json\nRUN npm install --production && npm install grunt-cli && npm cache clean --force;\nRUN npm install -g bower && npm cache clean --force;\nRUN mv /apps/warehouse/node_modules /apps/node_modules\nCOPY . /apps/warehouse\nRUN bower --allow-root install\nENV SCHEME=http\n# Disable the debug logs for warehouse\n#ENV DEBUG=shoppinpal:*,boot:*,common:models:*,server:*\nHEALTHCHECK --interval=1m --timeout=3s --start-period=1m CMD curl -f http://localhost:3000/api/StoreModels || exit 1\nENTRYPOINT [ \"./docker-entrypoint.sh\" ]\nEXPOSE 3000\nCOPY --from=adminbuilder /apps/warehouse/client/admin /apps/warehouse/client/admin\nCMD [ \"node\",\"server/server.js\" ]\n"
}