{
  "startTime": 1674250297590,
  "endTime": 1674250297746,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# Install build-essential, git, wget and other dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  git \\\n  libopenblas-dev \\\n  libopencv-dev \\\n  python-dev \\\n  python-numpy \\\n  python-setuptools \\\n  wget \\\n  python3-pip \\\n  nginx supervisor \\\n  python-pip \\\n  python-opencv && rm -rf /var/lib/apt/lists/*;\n\n\n# Clone MXNet repo and move into it\nRUN cd / && git clone --recursive https://github.com/dmlc/mxnet && cd mxnet && \\\n# Copy config.mk\n  cp make/config.mk config.mk && \\\n# Set OpenBLAS\n  sed -i 's/USE_BLAS = atlas/USE_BLAS = openblas/g' config.mk && \\\n# Make\n  make -j\"$(nproc)\"\n\n# Install Python package\nRUN cd /mxnet/python && python setup.py install\n\n# Add R to apt sources\nRUN echo \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" >> /etc/apt/sources.list\n# Install latest version of R\nRUN apt-get update && apt-get install --no-install-recommends -y --force-yes r-base && rm -rf /var/lib/apt/lists/*;\n\n#install Flask\nRUN pip3 install --no-cache-dir uwsgi Flask\nRUN pip install --no-cache-dir numpy\n\n\nADD ./app /app\nADD ./config /config\n\nRUN pip install --no-cache-dir -r /config/requirements.txt\n\n\n#RUN echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf\n#RUN rm /etc/nginx/sites-enabled/default\n\n#RUN ln -s /config/nginx.conf /etc/nginx/sites-enabled/\n#RUN ln -s /config/supervisor.conf /etc/supervisor/conf.d/\n\nEXPOSE 5000\n\n#CMD [\"supervisord\", \"-n\"]\nCMD [\"python\", \"app/app2.py\"]\n"
}