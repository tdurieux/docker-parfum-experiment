{
  "startTime": 1674248273687,
  "endTime": 1674248273940,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine\n\nWORKDIR /app\n\n# install build dependencies\nRUN apk add --no-cache \\\n    bash \\\n    build-base \\\n    curl-dev \\\n    git \\\n    libgit2-dev \\\n    make \\\n    python\n\n# install application dependencies\nCOPY package.json yarn.lock ./\nRUN BUILD_ONLY=true JOBS=max yarn install --non-interactive --frozen-lockfile && yarn cache clean;\n\n# copy in application source\nCOPY . .\n\n# run tests and build typescript sources\nRUN make lib ci-test\n\n# prune modules\nRUN yarn install --non-interactive --frozen-lockfile --production \\\n   && rm -r node_modules/nodegit/vendor && yarn cache clean;\n\n# copy built application to runtime image\nFROM node:10-alpine\nWORKDIR /app\nRUN apk add --no-cache \\\n    curl \\\n    libgit2 \\\n    openssh-client\nCOPY --from=0 /app/config config\nCOPY --from=0 /app/lib lib\nCOPY --from=0 /app/node_modules node_modules\n\n# run in production mode by default\nENV NODE_ENV production\n\n# start service\nCMD [ \"node\", \"lib/app.js\" ]\n"
}