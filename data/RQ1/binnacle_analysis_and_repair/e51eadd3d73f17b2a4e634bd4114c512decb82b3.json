{
  "startTime": 1674242305841,
  "endTime": 1674242305941,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To correctly make a statically-linked binary, we use Alpine Linux.\n# The distro entirely uses musl instead of glibc which is unfriendly to be\n# statically linked.\nFROM bitnami/minideb:jessie AS build\n\nARG APT_REPOSITORY\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN if [ \"${APT_REPOSITORY}\" != \"\" ]; then \\\n        sed -i 's|http://httpredir\\.debian\\.org/debian|'\"${APT_REPOSITORY}|\" \\\n        /etc/apt/sources.list; \\\n    fi\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n            build-essential ca-certificates curl \\\n            netbase \\\n    && \\\n    rm -rf /var/lib/apt/lists/*\nRUN apt-get update && \\\n    curl -f -sSL https://get.haskellstack.org/ | sh && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Add just the package.yaml file to capture dependencies\nCOPY package.yaml /src/nirum/package.yaml\nCOPY stack.yaml /src/nirum/stack.yaml\n\nWORKDIR /src/nirum\n\n# Docker will cache this command as a layer, freeing us up to\n# modify source code without re-installing dependencies\n# (unless the .cabal file changes!)\nRUN stack setup\nRUN stack install --only-dependencies --test --no-run-tests\nRUN stack build --only-snapshot --flag nirum:static\n\nCOPY . /src/nirum\n\nRUN mkdir -p \"/root/.local/bin\"\nRUN stack build --flag nirum:static --copy-bins\n\nFROM bitnami/minideb:jessie\n\nRUN install_packages bash ca-certificates\n\nRUN mkdir -p /bin\nCOPY --from=build /root/.local/bin/nirum /bin/\nCOPY --from=build /src/nirum/docker-entrypoint.sh /bin/\nRUN chmod +x /bin/nirum /bin/docker-entrypoint.sh\n\nENV CMD=/bin/nirum\nENTRYPOINT [\"/bin/docker-entrypoint.sh\"]\n"
}