{
  "startTime": 1674243533746,
  "endTime": 1674243533989,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 0,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 53,
        "columnStart": 0,
        "columnEnd": 12
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM underworldcode/underworld2_untested:v2.5\nMAINTAINER romain.beucher@unimelb.edu\n\nUSER root\n\n# required dependency for pyBadlands and friends\nRUN apt-get update -qq && \\\n      DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n      apt-utils \\\n      libavcodec-dev \\\n      libavformat-dev \\\n      libavutil-dev \\\n      libswscale-dev \\\n      openmpi-bin \\\n      libhdf5-dev \\\n      liblapack-dev \\\n      llvm \\\n      libedit-dev \\\n      gfortran \\\n      libnetcdf-dev \\ \n      libgeos-dev \\\n      libgeos++-dev \\\n      wget && \\\napt-get clean && \\\nrm -rf /var/lib/apt/lists/* && \\\n# dependency python packages\npip install --no-cache-dir \\\n        pillow \\\n        enum34 \\\n        pyvirtualdisplay \\\n        scipy \\\n        Cython==0.20 \\\n        markupsafe \\\n        zmq \\\n        singledispatch \\\n        backports_abc \\\n        certifi \\\n        jsonschema \\\n        path.py \\\n        git+https://github.com/badlands-model/triangle \\\n        pandas \\\n        plotly \\\n        numba==0.23.1 \\\n        ez_setup \\\n        netcdf4 \\\n        colorlover \\\n        cmocean \\\n        scikit-fuzzy \\\n        pyevtk \\\n\tgit+https://github.com/awickert/gFlex.git \\\n\tshapely \\\n\tdescartes \\\n        jupyter_contrib_nbextensions \\\n        tqdm && \\\n# install jupyter extensions\njupyter contrib nbextension install --system && \\\n# basemap needs compilation :((\n# note geos is install via apt\nwget https://downloads.sourceforge.net/project/matplotlib/matplotlib-toolkits/basemap-1.0.7/basemap-1.0.7.tar.gz && \\\n  tar -zxvf basemap-1.0.7.tar.gz && \\\n  cd basemap-1.0.7 && \\\n  python setup.py build && \\\n  python setup.py install && \\\n  cd .. && \\\n  rm -rf basemap-1.0.7.tar.gz && \\\n  rm -rf basemap-1.0.7\n\n\n# switch user\nENV NB_USER jovyan\nUSER $NB_USER\nWORKDIR /opt\nENV BLAND_DIR /opt/pyBadlands\nENV BCOMP_DIR /opt/pyBadlands-Companion\nENV BWORK_DIR /opt/pyBadlands-workshop\n\nRUN git clone --depth 1 https://github.com/rbeucher/UWGeodynamics.git\nUSER root\nRUN pip install --no-cache-dir -e /opt/UWGeodynamics\nUSER $NB_USER\n\nRUN mkdir /workspace/UWGeodynamics                          && \\\nrsync -av /opt/UWGeodynamics/examples/* /workspace/UWGeodynamics/examples/   && \\\nrsync -av /opt/UWGeodynamics/tutorials/* /workspace/UWGeodynamics/tutorials/ && \\\nrsync -av /opt/UWGeodynamics/manual/* /workspace/UWGeodynamics/manual/\n\n# download pyBadland, companion and workshop\nWORKDIR /opt\nRUN git clone --depth 1 https://github.com/badlands-model/pyBadlands_serial.git $BLAND_DIR    && \\\n    git clone --depth 1 https://github.com/badlands-model/pyBadlands-Companion.git $BCOMP_DIR && \\\n    git clone --depth 1 https://github.com/badlands-model/pyBadlands-workshop.git $BWORK_DIR\n\n# compile pyBadlands and companion\nWORKDIR $BLAND_DIR/pyBadlands/libUtils\nUSER root\nRUN make && \\\n    pip install --no-cache-dir -e $BLAND_DIR && \\\n    cd /opt\nRUN pip install --no-cache-dir -e $BCOMP_DIR && \\\n# update jupyter extensions while here\njupyter nbextension enable hide_input/main --system && \\\njupyter nbextension enable init_cell/main --system\nUSER $NB_USER\nRUN mkdir /workspace/volume      && \\\n    mkdir /workspace/companion   && \\\n    mkdir /workspace/workshop    && \\\n    mkdir /workspace/LavaVu\n\n# Copy test files to workspace. Is this required??? takes 500Mb\nRUN cp -av $BWORK_DIR/* /workspace/workshop/        && \\\ncp -av $BLAND_DIR/Examples/* /workspace/examples/   && \\\ncp -av $BCOMP_DIR/notebooks/* /workspace/companion/\n\n# NOT SURE ABOUT /workspace/volume???\nENV LD_LIBRARY_PATH /workspace/volume/pyBadlands_serial/pyBadlands/libUtils:/$BLAND_DIR/pyBadlands/libUtils\n\n# change user and update pythonpath\nENV PYTHONPATH $PYTHONPATH:$UW2_DIR\n\n# move back to workspace directory\nWORKDIR /workspace\n\n# Trust underworld notebooks\nRUN find -name \\*.ipynb  -print0 | xargs -0 jupyter trust\n\n# launch notebook\nCMD [\"jupyter\", \"notebook\", \"--ip='*'\", \"--no-browser\"]\n"
}