{
  "startTime": 1674236576952,
  "endTime": 1674236577154,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk\n\n# Prepare environment\nENV FLINK_HOME=/opt/flink\nENV MAVEN_HOME=/opt/maven\nENV HADOOP_HOME=/opt/hadoop\nENV PATH=$FLINK_HOME/bin:$HADOOP_HOME/bin:$MAVEN_HOME/bin:$PATH\n\nCOPY . /code\n\n# Configure Flink version\nENV FLINK_VERSION=1.8.0 \\\n    HADOOP_SCALA_VARIANT=scala_2.12\n\n# Install dependencies\nRUN set -ex; \\\n  apt-get update; \\\n  apt-get -y --no-install-recommends install libsnappy1v5; \\\n  apt-get -y --no-install-recommends install netcat net-tools; \\\n  apt-get -y --no-install-recommends install gettext-base; \\\n  rm -rf /var/lib/apt/lists/*\n\n# Grab gosu for easy step-down from root\nENV GOSU_VERSION 1.11\nRUN set -ex; \\\n  wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"; \\\n  wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n  chmod +x /usr/local/bin/gosu; \\\n  gosu nobody true\n\n# Install Maven\nENV MAVEN_VERSION 3.6.1\nRUN \\\n  wget https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/$MAVEN_VERSION/apache-maven-$MAVEN_VERSION-bin.tar.gz; \\\n  tar -zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz; \\\n  mv apache-maven-$MAVEN_VERSION $MAVEN_HOME; \\\n  rm apache-maven-$MAVEN_VERSION-bin.tar.gz\n\nWORKDIR /code\n\nRUN \\\n  mvn package; \\\n  mkdir -p /opt/flink/flink-web-upload; \\\n  cp flink-conf.yaml /usr/local/; \\\n  cp /code/target/*.jar /opt/flink/flink-web-upload/\n\nRUN groupadd --system --gid=9999 flink && \\\n    useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n\nENV FLINK_URL_FILE_PATH=flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-${HADOOP_SCALA_VARIANT}.tgz\nENV FLINK_TGZ_URL=https://mirrors.ocf.berkeley.edu/apache/$FLINK_URL_FILE_PATH\n\n# Install Flink\nRUN set -ex; \\\n  wget -nv -O flink.tgz \"$FLINK_TGZ_URL\"; \\\n  \\\n  tar -xf flink.tgz --strip-components=1; \\\n  rm flink.tgz; \\\n  \\\n  chown -R flink:flink .;\n\n# Needed on OpenShift for the entrypoint script to work\nRUN chmod -R 777 /opt/flink\n\n#  control script expects manifest.yaml at this location\nRUN chown -R flink:flink /var\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123 8081\nCMD [\"local\"]\n"
}