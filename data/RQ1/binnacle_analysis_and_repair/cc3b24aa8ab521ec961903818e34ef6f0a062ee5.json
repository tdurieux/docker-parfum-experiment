{
  "startTime": 1674251713185,
  "endTime": 1674251713407,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build from base image and install prereqs from repo.\nFROM ubuntu:16.04\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade pip setuptools\n\n# Install framework requirements.\nADD requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\n# Make project directories in /opt/streamingphish and copy framework files.\nADD config/config.yaml /opt/streamingphish/config/\n\n# Temporarily add streamingphish source.\nADD streamingphish/ /tmp/source/\nWORKDIR /tmp/source/\n\n# Run unit tests.\nRUN find . -name '*.pyc' -delete\nRUN pytest -s --cov-report term-missing --cov=streamingphish\n\n# Install.\nRUN python3 setup.py install\nRUN rm -rf /tmp/source\n\n# Small hack, lots of debate in docker compose forums for how to address this.\n# I only want service available on demand - not as a daemon during initialization.\nWORKDIR /opt/streamingphish/\nENTRYPOINT [\"sh\", \"-c\", \"sleep infinity\"]\n"
}