{
  "startTime": 1674246486095,
  "endTime": 1674246486326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Mapcache-server Dockerfile (master branch)\n# Written by Steven D. Lander, RGi\n#\n# This script will install and configure mapcache-server\n# with MrSID support.\n#\n# ***** NOTE ******\n# You will need the MrSID API tarball specified in the environment variable\n# MRSID_TARBALL in order to successfully build this image.  Get the API tarball\n# by signing up for a developer account at https://www.lizardtech.com/\n# ****************\n#\nFROM debian:jessie\n\nLABEL author=\"Steven D. Lander\"\n\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n        git \\\n        curl \\\n        wget \\\n        python \\\n        python-setuptools \\\n        pkgconf \\\n        postgis \\\n        mongodb \\\n        gcc-4.8 \\\n        g++-4.8 \\\n        libgif-dev \\\n        libtbb-dev \\\n        libkrb5-dev \\\n        libjpeg-dev \\\n        libgdal-dev \\\n        openjdk-7-jdk \\\n        libcairo2-dev \\\n        build-essential \\\n        libfreetype6-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64\n\nWORKDIR /workspace/mbutil\nRUN git clone git://github.com/mapbox/mbutil.git \\\n    && cd mbutil \\\n    && python setup.py install\n\nWORKDIR /workspace/nodejs\nENV NVM_VER 0.33.0\nENV NVM_DIR /root/.nvm\nENV NODE_VER 0.12.18\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v$NVM_VER/install.sh | bash \\\n    && . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VER \\\n    && nvm use $NODE_VER \\\n    && nvm alias default $NODE_VER\n\nRUN sed -i 's|#port = 27017|port = 27017|' /etc/mongodb.conf\nEXPOSE 27017\n\nWORKDIR /workspace/postgis\nCOPY mapcache.sql mapcache.sql\nRUN sed -i 's| md5| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n    && sed -i 's| peer| trust|g' /etc/postgresql/9.4/main/pg_hba.conf \\\n    && service postgresql start \\\n    && createdb -h localhost -p 5432 -U postgres mapcache \\\n    && su postgres - \\\n    && export PGOPTIONS='--client-min-messages=warning' \\\n    && psql -U postgres -X -q -a -1 -v ON_ERROR_STOP=1 --pset pager=off \\\n       -d mapcache -f /workspace/postgis/mapcache.sql\nEXPOSE 5432\n\n#\n# WORKDIR /workspace/mrsid\n# ENV MRSID_TARBALL MrSID_DSDK-9.5.1.4427-linux.x86-64.gcc48.tar.gz\n# ENV MRSID_DIR /workspace/mrsid/MrSID_DSDK\n# ENV MRSID_RASTER_DIR $MRSID_DIR/Raster_DSDK\n# ENV MRSID_LIDAR_DIR $MRSID_DIR/Lidar_DSDK\n# COPY $MRSID_TARBALL $MRSID_TARBALL\n# RUN mkdir MrSID_DSDK \\\n#     && tar -xzf $MRSID_TARBALL -C MrSID_DSDK --strip-components 1 \\\n#     && ln -s $MRSID_LIDAR_DIR/lib/liblti_lidar_dsdk.so /usr/local/lib/. \\\n#     && ln -s $MRSID_RASTER_DIR/lib/libltidsdk.so /usr/local/lib/.\n\nWORKDIR /workspace/gdal\nENV GDAL_VER 2.0.1\nENV GDAL_DIR /workspace/gdal/gdal-$GDAL_VER\nRUN export CC=\"gcc-4.8 -fPIC\" && export CXX=\"g++-4.8 -fPIC\" \\\n    && wget https://download.osgeo.org/gdal/$GDAL_VER/gdal-$GDAL_VER.tar.gz \\\n    && tar -xzvf gdal-$GDAL_VER.tar.gz \\\n    && cd $GDAL_DIR \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n#        --with-mrsid=$MRSID_RASTER_DIR \\\n#        --with-mrsid_lidar=$MRSID_LIDAR_DIR \\\n        --with-jp2mrsid \\\n        --with-libtiff \\\n    && make -j10 && make install && rm gdal-$GDAL_VER.tar.gz\nENV GDAL_DATA /usr/share/gdal/1.10\nENV LD_LIBRARY_PATH /usr/local/lib\n\nWORKDIR /workspace\nRUN git clone https://github.com/ngageoint/mapcache-server\nWORKDIR /workspace/mapcache-server\nRUN . $NVM_DIR/nvm.sh \\\n    && if [ -d \"node_modules\" ]; then rm -rf \"node_modules\"; fi \\\n    && mkdir node_modules \\\n    && npm install \\\n    && npm uninstall gdal --save \\\n    && npm install gdal --build-from-source --shared-gdal && npm cache clean --force;\n\nEXPOSE 4242\nENTRYPOINT service mongodb start; \\\n        service postgresql start; \\\n        . $NVM_DIR/nvm.sh; \\\n        node /workspace/mapcache-server/app.js\n"
}