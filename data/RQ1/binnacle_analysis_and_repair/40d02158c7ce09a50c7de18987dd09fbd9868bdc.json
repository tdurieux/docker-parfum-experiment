{
  "startTime": 1674234994801,
  "endTime": 1674234995046,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER niuyuxian <\"ncc0706@gmail.com\">\n\nENV TZ Asia/Shanghai\n\n#ENV NGINX_VERSION 1.10.1\n\n# 国内镜像\n#RUN echo -e \"https://mirror.tuna.tsinghua.edu.cn/alpine/latest-stable/main\\n\" > /etc/apk/repositories\n\nRUN apk --update --no-cache add tzdata curl \\\n\t&& cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nENV NGINX_VERSION nginx-1.12.1\n\nRUN apk --update add openssl-dev pcre-dev zlib-dev wget build-base \\\n    && addgroup -g 499 -S nginx \\\n    && adduser -HDu 499 -s /sbin/nologin -g 'web server' -G nginx nginx \\\n    && mkdir -p /tmp/src \\\n    && cd /tmp/src \\\n    && wget https://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n    && tar -zxvf ${NGINX_VERSION}.tar.gz \\\n    && wget https://github.com/arut/nginx-rtmp-module/archive/v1.1.11.tar.gz -O nginx-rtmp-module-1.1.11.tar.gz \\\n    && tar -zxvf nginx-rtmp-module-1.1.11.tar.gz \\\n    && cd /tmp/src/${NGINX_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n       --prefix=/usr/local/nginx \\\n       --conf-path=/etc/nginx/nginx.conf \\\n       --user=nginx \\\n       --group=nginx \\\n       --error-log-path=/var/log/nginx/error.log \\\n       --http-log-path=/var/log/nginx/access.log \\\n       --pid-path=/var/run/nginx/nginx.pid \\\n       --lock-path=/var/lock/nginx.lock \\\n       --with-http_ssl_module \\\n       --with-http_stub_status_module \\\n       --with-http_gzip_static_module \\\n       --with-http_flv_module \\\n       --with-http_mp4_module \\\n       --http-client-body-temp-path=/var/tmp/nginx/client \\\n       --http-proxy-temp-path=/var/tmp/nginx/proxy \\\n       --http-fastcgi-temp-path=/var/tmp/nginx/fastcgi \\\n       --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\n       --add-module=../nginx-rtmp-module-1.1.11 \\\n    && make && make install \\\n    && mkdir -p /var/tmp/nginx/{client,fastcgi,proxy,uwsgi} \\\n    && echo \"daemon off;\" >> /etc/nginx/nginx.conf \\\n    && apk del build-base \\\n    && rm -rf /tmp/src \\\n    && rm -rf /var/cache/apk/* && rm ${NGINX_VERSION}.tar.gz\n\nENV PATH /usr/local/nginx/sbin:$PATH\n\n# forward request and error logs to docker log collector\n#RUN ln -sf /dev/stdout /var/log/nginx/access.log\n#RUN ln -sf /dev/stderr /var/log/nginx/error.log\n\n#VOLUME [\"/var/log/nginx\"]\n#WORKDIR /etc/nginx\n\nCOPY nginx/nginx.conf /etc/nginx/nginx.conf\n\nCOPY data /opt/show\n\nEXPOSE 80 443 1935\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}