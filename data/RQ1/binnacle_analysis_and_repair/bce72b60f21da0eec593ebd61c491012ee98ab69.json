{
  "startTime": 1674238874010,
  "endTime": 1674238874347,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "############################################################\n# Dockerfile to build V8  container images\n# Based on Ubuntu\n############################################################\n# Set the base image to Ubuntu\nFROM ubuntu:latest\n# File Author / Maintainer\nMAINTAINER Example prmis@microsoft.com\n################## BEGIN INSTALLATION ######################\n# Update Image\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN useradd -m docker && echo \"docker:docker\" | chpasswd && adduser docker sudo\nRUN echo \"docker ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nuser docker\n# Update depedency of V8\nRUN sudo apt-get install --no-install-recommends -y \\\n\t\t\t\tlsb-core \\\n\t\t\t\tgit \\\n\t\t\t\tpython \\\n\t\t\t\tlbzip2 \\\n\t\t\t\tcurl \\\n\t\t\t\twget \\\n\t\t\t\txz-utils \\\n\t\t\t\tzip && rm -rf /var/lib/apt/lists/*;\nRUN sudo echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections\nWORKDIR /home/docker\n# Get depot_tool\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\nENV PATH /home/docker/depot_tools:\"$PATH\"\nRUN echo $PATH\n# Fetch V8 code\nRUN fetch v8\nRUN echo \"target_os= ['android']\">>.gclient\nRUN gclient sync\nRUN sudo echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections\n# Update V8 depedency\nRUN echo y | sudo /home/docker/v8/build/install-build-deps-android.sh\nWORKDIR /home/docker/v8\nARG CACHEBUST=1\n# checkour required V8 Branch\nRUN git checkout -b 6.7.1\nRUN gclient sync\n#ARG CACHEBUST=1\n# Generate arguments  for specific platform\nRUN python ./tools/dev/v8gen.py arm.release -vv\nRUN rm  out.gn/arm.release/args.gn\n# Copy arguments  file based on user input file \nCOPY ./args_arm.gn out.gn/arm.release/args.gn\nRUN cp -rf out.gn/arm.release out.gn/x86.release\nRUN rm  out.gn/x86.release/args.gn\nCOPY ./args_x86.gn out.gn/x86.release/args.gn\n# Display final argument for build \nRUN ls -al out.gn/arm.release/\nRUN ls -al out.gn/x86.release/\nRUN cat out.gn/arm.release/args.gn\nRUN cat out.gn/x86.release/args.gn\nRUN sudo chmod 777 out.gn/arm.release/args.gn\nRUN touch out.gn/arm.release/args.gn\nRUN sudo chmod 777 out.gn/x86.release/args.gn\nRUN touch out.gn/x86.release/args.gn\n# Build the V8 liblary \nRUN ninja -C out.gn/arm.release -t clean\nRUN ninja -C out.gn/arm.release\nRUN ninja -C out.gn/x86.release -t clean\nRUN ninja -C out.gn/x86.release \n# Copy and prepare zip file of include and build so files\nRUN rm -rf target\nRUN mkdir -p target\nRUN mkdir -p target/arm\nRUN mkdir -p target/x86\nRUN ls -al out.gn/arm.release\nRUN cp -rf out.gn/arm.release/*.so ./target/arm\nRUN cp -rf out.gn/x86.release/*.so ./target/x86\nRUN cp -rf include ./target\nRUN zip -r v8.zip target\nRUN ls -al /home/docker/v8/v8.zip\n#End of docker Command\n\n\n\n\n\n\n\n\n"
}