{
  "startTime": 1674248552180,
  "endTime": 1674248552591,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 161
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 182
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 170
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 0,
        "columnEnd": 220
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 0,
        "columnEnd": 220
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get -qqy update && \\\n apt-get -qqy --no-install-recommends install wget curl build-essential git git-extras automake pkg-config libcurl4-openssl-dev zlib1g-dev libaio-dev libboost-all-dev p7zip-full gdb mingw-w64 binutils-mingw-w64 mingw-w64-tools libz-mingw-w64-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root/\n\n# ---------- We either patch cmake to support up to date boost (/usr/share/cmake-3.5/Modules/FindBoost.cmake) or build fresh one\nRUN curl -f -LO https://cmake.org/files/v3.12/cmake-3.12.2.tar.gz \\\n    && tar -xvf cmake-3.12.2.tar.gz \\\n    && cd cmake-3.12.2 \\\n    && ./bootstrap --system-curl \\\n    && make install \\\n    && cd .. \\\n    && rm -rf cmake-3.12.2.tar.gz cmake-3.12.2\n\n# ---------- mingw does not have expat\nRUN git clone https://github.com/libexpat/libexpat.git \\\r\n    && cd libexpat \\\r\n    && git checkout R_2_2_6 \\\r\n    && cd expat \\\r\n    && ./buildconf.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=i686-w64-mingw32 --prefix=/usr/i686-w64-mingw32 --without-xmlwf --without-docbook \\\n    && make install \\\n    && make clean \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=x86_64-w64-mingw32 --prefix=/usr/x86_64-w64-mingw32 --without-xmlwf --without-docbook \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf libexpat \\\n    && rm /usr/i686-w64-mingw32/lib/*.la \\\n    && rm /usr/x86_64-w64-mingw32/lib/*.la\n\n# ---------- mingw does not have static iconv\nRUN curl -f -LO https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz \\\n    && tar -xvf libiconv-1.15.tar.gz \\\n    && cd libiconv-1.15 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=i686-w64-mingw32 --prefix=/usr/i686-w64-mingw32 --enable-static \\\n    && make install \\\n    && make clean \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=x86_64-w64-mingw32 --prefix=/usr/x86_64-w64-mingw32 --enable-static \\\n    && make install \\\n    && cd .. \\\n    && rm -rf libiconv-1.15.tar.gz libiconv-1.15 \\\n    && rm /usr/i686-w64-mingw32/lib/*.la \\\n    && rm /usr/x86_64-w64-mingw32/lib/*.la\n\n# ---------- mingw does not have boost (and we cannot cross build anything older than 1.63)\nRUN ln -s /usr/bin/x86_64-w64-mingw32-windres /usr/bin/windres \\\n    && curl -f -LO http://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.gz \\\n    && tar -xvf boost_1_63_0.tar.gz \\\n    && cd boost_1_63_0 \\\n\n# From https://github.com/Alexpux/MINGW-packages/tree/master/mingw-w64-boost\r\n\n    && curl -f -O https://raw.githubusercontent.com/Alexpux/MINGW-packages/dfb2f8118061f79d493c5106e9b51e019916cacf/mingw-w64-boost/boost-1.60.0-mingw-context.patch \\\n    && curl -f -O https://raw.githubusercontent.com/Alexpux/MINGW-packages/dfb2f8118061f79d493c5106e9b51e019916cacf/mingw-w64-boost/boost-1.61.0-fix-undefined-referense-to-codecvt.patch \\\n    && curl -f -O https://raw.githubusercontent.com/Alexpux/MINGW-packages/dfb2f8118061f79d493c5106e9b51e019916cacf/mingw-w64-boost/boost-include-intrin-h-on-mingw-w64.patch \\\n    && patch -p1 -i boost-1.60.0-mingw-context.patch \\\n    && patch -p1 -i boost-1.61.0-fix-undefined-referense-to-codecvt.patch \\\n    && patch -p0 -i boost-include-intrin-h-on-mingw-w64.patch \\\n\n    && ./bootstrap.sh \\\n    && echo \"using gcc : 5.3.1 : x86_64-w64-mingw32-g++ ;\" > user-config.jam \\\n    && ./b2 --without-python --without-serialization --user-config=user-config.jam --debug-configuration toolset=gcc-5.3.1 link=shared,static target-os=windows address-model=64 pch=off threading=multi threadapi=win32 variant=release --prefix=/usr/x86_64-w64-mingw32 --layout=tagged --without-python --without-mpi -sICONV_PATH=/usr/x86_64-w64-mingw32 -sICONV_LINK=\"-L/usr/x86_64-w64-mingw32/lib -liconv\" install \\\n    && ./b2 --without-python --without-serialization --user-config=user-config.jam --debug-configuration toolset=gcc-5.3.1 link=shared,static target-os=windows address-model=64 pch=off threading=multi threadapi=win32 variant=release --prefix=/usr/x86_64-w64-mingw32 --layout=tagged --without-python --without-mpi -sICONV_PATH=/usr/x86_64-w64-mingw32 -sICONV_LINK=\"-L/usr/x86_64-w64-mingw32/lib -liconv\" clean \\\n    && rm -rf bin.v2 stage \\\n    && echo \"using gcc : 5.3.1 : i686-w64-mingw32-g++ ;\" > user-config.jam \\\n    && ./b2 --user-config=user-config.jam --debug-configuration toolset=gcc-5.3.1 link=shared,static target-os=windows address-model=32 pch=off threading=multi threadapi=win32 variant=release --prefix=/usr/i686-w64-mingw32 --layout=tagged --without-python --without-mpi --without-serialization -sICONV_PATH=/usr/i686-w64-mingw32 -sICONV_LINK=\"-L/usr/i686-w64-mingw32/lib -liconv\" install \\\n    && ./b2 --user-config=user-config.jam --debug-configuration toolset=gcc-5.3.1 link=shared,static target-os=windows address-model=32 pch=off threading=multi threadapi=win32 variant=release --prefix=/usr/i686-w64-mingw32 --layout=tagged --without-python --without-mpi --without-serialization -sICONV_PATH=/usr/i686-w64-mingw32 -sICONV_LINK=\"-L/usr/i686-w64-mingw32/lib -liconv\" clean \\\n    && cd .. \\\n    && rm -rf boost_1_63_0.tar.gz boost_1_63_0\n\n# ---------- we need proper version of mariadb or mysql\nCOPY get-maria.sh .\nRUN ./get-maria.sh\n\n#  ---------- download golang\n\nRUN curl -f -LO https://dl.google.com/go/go1.12.2.linux-amd64.tar.gz \\\n   && tar -xvf go1.12.2.linux-amd64.tar.gz \\\n   && rm go1.12.2.linux-amd64.tar.gz \\\n   && sed -i -e '$a export PATH=$PATH:/root/go/bin' .bashrc \\\n   && sed -i -e '$a export GOROOT=/root/go' .bashrc\n\nCOPY build.sh .\nCMD [\"./build.sh\"]\n"
}