{
  "startTime": 1674249395687,
  "endTime": 1674249395801,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1: Build frontend assets.\nFROM node:12.4-alpine as frontend-build\n\nENV NODE_ENV production\nCOPY .babelrc gulpfile.js package.json yarn.lock ./\nCOPY scripts/gulp ./scripts/gulp\nCOPY lms/static ./lms/static\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nRUN yarn build\n\n# Stage 2: Build the rest of the app using build output from Stage 1.\nFROM alpine:3.9.4\nMAINTAINER Hypothes.is Project and contributors\n\n# Install system build and runtime dependencies.\nRUN apk add --no-cache ca-certificates python3 libpq collectd collectd-disk supervisor\n\n# Create the lms user, group, home directory and package directory.\nRUN addgroup -S lms \\\n  && adduser -S -G lms -h /var/lib/lms lms\nWORKDIR /var/lib/lms\n\n# Copy minimal data to allow installation of dependencies.\nCOPY requirements.txt ./\n\n# Install build deps, build, and then clean up.\nRUN apk add --no-cache --virtual build-deps \\\n    build-base \\\n    postgresql-dev \\\n    python3-dev \\\n  && pip3 install --no-cache-dir -U pip \\\n  && pip3 install --no-cache-dir -r requirements.txt \\\n  && apk del build-deps\n\n# Copy collectd config\nCOPY conf/collectd.conf /etc/collectd/collectd.conf\nRUN mkdir /etc/collectd/collectd.conf.d \\\n  && chown lms:lms /etc/collectd/collectd.conf.d\n\n# collectd always tries to write to this immediately after enabling the logfile plugin.\n# Even though we later configure it to write to stdout. So we do have to make sure it's\n# writeable.\nRUN touch /var/log/collectd.log && chown lms:lms /var/log/collectd.log\n\n# Copy frontend assets.\nCOPY --from=frontend-build /build build\n\n# Copy the rest of the application files.\nCOPY . .\n\nEXPOSE 8001\nUSER lms\nCMD [\"bin/init-env\", \"supervisord\", \"-c\", \"conf/supervisord.conf\"]\n"
}