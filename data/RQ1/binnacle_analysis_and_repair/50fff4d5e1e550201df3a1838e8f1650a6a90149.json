{
  "startTime": 1674251281947,
  "endTime": 1674251282034,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 \nENV DEBIAN_FRONTEND noninteractive \n\nRUN apt-get update && \\\n apt-get -y --no-install-recommends install software-properties-common && \\\nadd-apt-repository -y ppa:ethereum/ethereum && \\\nadd-apt-repository -y ppa:ethereum/ethereum-dev && \\\napt-get -y update && \\\n apt-get -y --no-install-recommends install ethminer libcurl4-openssl-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Clean up APT when done \nRUN apt-get purge -y build-essential git \\  \n&& apt-get autoremove -y \\  \n&& apt-get clean \\  \n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \n\nCOPY docker-entrypoint.sh / \nRUN chmod 777 /docker-entrypoint.sh \n\n# Metadata params \nARG BUILD_DATE \nARG VERSION \nARG VCS_URL \nARG VCS_REF \n# Metadata \nLABEL org.label-schema.build-date=$BUILD_DATE \\  \norg.label-schema.name=\"Ethminer\" \\  \norg.label-schema.description=\"Running ethminer in docker container\" \\  \norg.label-schema.url=\"https://etherchain.org/\" \\  \norg.label-schema.vcs-url=$VCS_URL \\  \norg.label-schema.vcs-ref=$VCS_REF \\  \norg.label-schema.vendor=\"AnyBucket\" \\  \norg.label-schema.version=$VERSION \\  \norg.label-schema.schema-version=\"1.0\" \\  \ncom.microscaling.docker.dockerfile=\"/Dockerfile\" \n\nENTRYPOINT [\"/docker-entrypoint.sh\"] \n\n"
}