{
  "startTime": 1674249380710,
  "endTime": 1674249380868,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build libglvnd for libGL, libEGL, libOpenGL\n# Not currently pulled in by nvidia-docker2\nFROM nvidia/cuda:9.0-devel-ubuntu16.04 AS glvnd\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        libtool \\\n        pkg-config \\\n        python \\\n        libxext-dev \\\n        libx11-dev \\\n        x11proto-gl-dev && \\\n    apt-get remove --purge -y && \\\n    rm -rf /var/lib/apt/lists/*\nWORKDIR /libglvnd/\nADD https://github.com/NVIDIA/libglvnd/archive/v1.0.0.tar.gz .\nRUN tar xvf v1.0.0.tar.gz --strip-components=1 && rm v1.0.0.tar.gz\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-glx && \\\n    make -j 4 && \\\n    make install\n\n# Copy and extract OmniSci tarball. In own stage so that the temporary tarball\n# isn't included in a layer.\nFROM ubuntu:16.04 AS extract\n\nWORKDIR /omnisci/\nCOPY omnisci-latest-Linux-x86_64.tar.gz /omnisci/\nRUN tar xvf omnisci-latest-Linux-x86_64.tar.gz --strip-components=1 && \\\n    rm -rf omnisci-latest-Linux-x86_64.tar.gz\n\n# Build final stage\nFROM nvidia/cuda:9.0-runtime-ubuntu16.04\nLABEL maintainer \"Andrew Seidl <andrew@omnisci.com>\"\n\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility,graphics\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libldap-2.4-2 \\\n        bsdmainutils \\\n        wget \\\n        curl \\\n        default-jre-headless && \\\n    apt-get remove --purge -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=extract /omnisci /omnisci\nCOPY --from=glvnd /usr/local /usr/local/\n\nRUN ln -sf /omnisci /mapd\nRUN mkdir -p /usr/share/glvnd/egl_vendor.d && \\\n    echo '{ \"file_format_version\" : \"1.0.0\", \"ICD\" : { \"library_path\" : \"libEGL_nvidia.so.0\" } }' > /usr/share/glvnd/egl_vendor.d/10_nvidia.json\nRUN mkdir -p /usr/local/share/glvnd/egl_vendor.d && \\\n    echo '{ \"file_format_version\" : \"1.0.0\", \"ICD\" : { \"library_path\" : \"libEGL_nvidia.so.0\" } }' > /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json\n\nWORKDIR /omnisci\n\nEXPOSE 6274 6273\n\nCMD /omnisci/startomnisci --non-interactive --data /omnisci-storage/data --config /omnisci-storage/omnisci.conf\n"
}