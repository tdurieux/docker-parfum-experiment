{
  "startTime": 1674250619548,
  "endTime": 1674250619649,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 42,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 92,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_VERSION=someversion\nFROM hilbert/base:${IMAGE_VERSION}\n###FROM hilbert/nodejs::::\n\nMAINTAINER Oleksandr Motsak <malex984+hilbert.mng@gmail.com>\n\n# https://github.com/nodesource/distributions\n\n#RUN wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\n#ADD https://deb.nodesource.com/setup_4.x /tmp/setup_4.sh\n#RUN chmod +x /tmp/setup_4.sh && bash /tmp/setup_4.sh\n\n## curl --silent --location https://deb.nodesource.com/setup_4.x | sudo -E bash -\n## wget -qO- https://deb.nodesource.com/setup_4.x | bash -\n\nRUN update.sh \\\n && DEBIAN_FRONTEND=noninteractive curl -f -sL https://deb.nodesource.com/setup_4.x | sudo -E bash - \\\n && install.sh nodejs \\\n && clean.sh\n\n#RUN npm install electron-prebuilt -g\n## && npm install asar -g && \\\n##    npm install yargs -g\n\n# ONBUILD COPY package.json index.html main.js /usr/src/kiosk/\n# CMD [ \"npm\", \"start\" ]\n# CMD [ \"launch.sh\", \"/usr/src/kiosk/run.sh\" ] ## nodejs\n\n\n# install dependencies\nRUN update.sh && \\\n    install.sh nginx rsync wakeonlan openssh-client && \\\n    clean.sh && \\\n    rm -fR /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default /root/.ssh\n\n#    python3-pip lftp\n#    pip3 install --upgrade pip && pip install --upgrade setuptools && \\\n#    pip install dill semantic_version ruamel.yaml argcomplete && \\\n\n# tell Docker which port is exposed by the container\n# EXPOSE 8000\n\n# RUN mkdir -p /usr/local/src\n\n# download latest stable version and install node.js dependencies\nRUN git clone --depth 1 -b 'master' https://github.com/hilbert/hilbert-ui.git /usr/local/hilbert-ui \\\n    && cd /usr/local/hilbert-ui/client && npm install && cd /usr/local/hilbert-ui/server && npm install && npm cache clean --force;\n\n# download latest version. (note: required python packages were installed above)\n#RUN git clone --depth 1 -b 'devel' https://github.com/hilbert/hilbert-cli.git /tmp/hilbert_cli \\\n#    && cd /tmp/hilbert_cli && python3 ./setup.py install\n\nENV HILBERT_CLI_PATH=/usr/local/bin\n\nADD \"https://cloud.imaginary.org/index.php/s/WSGU4yEaR4RaH3T/download?path=%2F&files=hilbert\" /usr/local/bin/hilbert\nRUN chmod a+x /usr/local/bin/hilbert\n\n# Dummy script checker  (instead of full Haskel Suite)\nCOPY shellcheck /usr/local/bin/\n\n# configure services for baseimage-docker's init system\n#RUN echo \"#!/bin/sh\\nnginx\" > /etc/rc.local\n\n#RUN mkdir -p /etc/service/hilbert_ui_api \\\n#    && echo \"#!/bin/sh\\ncd /usr/local/hilbert-ui/server/app\\nexec node main.js\" > /etc/service/hilbert_ui_api/run \\\n#    && chmod +x  /etc/service/hilbert_ui_api/run\n\n# main entry point\nCOPY nginx.sh run.sh /usr/local/\n\nENV HOME /root\n\n\n\nARG GIT_NOT_CLEAN_CHECK\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE=someday\nARG VCS_REF=HEAD\nARG VCS_URL=\"https://github.com/hilbert/hilbert-docker-images\"\n\nARG DOCKERFILE=\"/images/mng/Dockerfile\"\nLABEL org.label-schema.description=\"Hilbert Dashboard UI (including Hilbert server tool)\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.vcs-url=\"${VCS_URL}\" \\\n      org.label-schema.version=\"${IMAGE_VERSION}\" \\\n      com.microscaling.docker.dockerfile=\"${DOCKERFILE}\" \\\n      IMAGE_VERSION=\"${IMAGE_VERSION}\" \\\n      GIT_NOT_CLEAN_CHECK=\"${GIT_NOT_CLEAN_CHECK}\" \\\n      org.label-schema.name=\"Hilbert\" \\\n      org.label-schema.vendor=\"IMAGINARY gGmbH\" \\\n      org.label-schema.url=\"https://hilbert.github.io\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      com.microscaling.license=\"Apache-2.0\"    \n\nONBUILD LABEL org.label-schema.build-date=\"\" \\\n      org.label-schema.name=\"\" \\\n      org.label-schema.description=\"\" \\\n      org.label-schema.vendor=\"\" \\\n      org.label-schema.url=\"\" \\\n      org.label-schema.vcs-ref=\"\" \\\n      org.label-schema.vcs-url=\"\" \\\n      org.label-schema.version=\"\" \\\n      org.label-schema.schema-version=\"\" \\\n      com.microscaling.license=\"\" \\\n      com.microscaling.docker.dockerfile=\"\" \\\n      IMAGE_VERSION=\"\" \\\n      GIT_NOT_CLEAN_CHECK=\"\"\n"
}