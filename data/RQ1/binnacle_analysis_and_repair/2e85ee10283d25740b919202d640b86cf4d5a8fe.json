{
  "startTime": 1674234198700,
  "endTime": 1674234198895,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Docker container just to build GCC, because it's slow.\n\nFROM ceejatec/naked-debian:7.6\nMAINTAINER ceej@couchbase.com\n\n# Install the older gcc so we can bootstrap up to the newer\nRUN apt-get update && apt-get install --no-install-recommends -y g++ libmpc-dev make file curl bzip2 && \\\n    rm -f /var/cache/apt/archives/*.deb && rm -rf /var/lib/apt/lists/*;\n\n# Clean out /usr/local so we only have our gcc output\nRUN rm -rf /usr/local/*\n\n# Download all the sources and build\n# Explanations for env vars in build command:\n#  http://stackoverflow.com/questions/12591629/gcc-cannot-find-bits-predefs-h-on-i686\n#  https://bugs.launchpad.net/ubuntu/+source/binutils/+bug/738098\nRUN mkdir /tmp/deploy && cd /tmp/deploy && \\\n    curl -f -O ftp://ftp.fu-berlin.de/unix/languages/gcc/releases/gcc-4.9.1/gcc-4.9.1.tar.bz2 && \\\n    cd /tmp/deploy && tar xjf gcc-4.9.1.tar.bz2 && \\\n    cd gcc-4.9.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --with-slibdir=/lib/x86_64-linux-gnu \\\n        --disable-multilib --enable-languages=c,c++ && \\\n    make -j8 BOOT_CFLAGS='-O' bootstrap && \\\n    make install && \\\n    cd /tmp && rm -rf deploy && rm gcc-4.9.1.tar.bz2\n\n# Create a \"dummy\" package that consumers can install so Debian doesn't\n# try to install the old GCC packages\nCOPY gcc g++ /tmp/\nRUN apt-get install --no-install-recommends -y equivs && rm -rf /var/lib/apt/lists/*;\nRUN cd /tmp && equivs-build gcc && equivs-build g++ && \\\n    mkdir /usr/local/debs && cp *.deb /usr/local/debs && rm g*\n\n"
}