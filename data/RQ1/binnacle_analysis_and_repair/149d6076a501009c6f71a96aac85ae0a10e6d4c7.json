{
  "startTime": 1674239533312,
  "endTime": 1674239533520,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.0\nMAINTAINER Krzysztof Kawalec <kf.kawalec@gmail.com>\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        openssh-client \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng12-dev \\\n        libcurl4-openssl-dev \\\n        libldap2-dev \\\n        curl \\\n        libtidy* \\\n        git \\\n    && apt-get clean \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN docker-php-ext-install \\\n        mcrypt \\\n        mbstring \\\n        curl \\\n        json \\\n        pdo_mysql \\\n        exif \\\n        tidy \\\n        zip \\\n    \t&& docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n        && docker-php-ext-install gd \\\n        && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \\\n\t&& docker-php-ext-install ldap\n\n# Xdebug\nRUN pecl install -o -f xdebug \\ \n    && rm -rf /tmp/* \\ \n    && docker-php-ext-enable xdebug\n\nRUN echo \"memory_limit=-1\" > $PHP_INI_DIR/conf.d/memory-limit.ini \\\n    && echo \"date.timezone=Europe/Warsaw\" > $PHP_INI_DIR/conf.d/date_timezone.ini\n\n# NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nVOLUME /root/composer\n\nENV COMPOSER_HOME /root/composer\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n\t&& composer selfupdate\n\nWORKDIR /tmp\n\n# Run phpunit installation\nRUN composer require \"phpunit/phpunit=5.*\" --prefer-source --no-interaction \\\n    && ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit\n\n# Run codesniffer installation\nRUN composer require \"squizlabs/php_codesniffer=*\" --prefer-source --no-interaction \\\n    && ln -s /tmp/vendor/bin/phpcs /usr/local/bin/phpcs\n\nRUN php --version \\\n    && composer --version \\\n    && phpunit --version \\\n    && phpcs --version\n"
}