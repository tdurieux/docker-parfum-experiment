{
  "startTime": 1674241967030,
  "endTime": 1674241967395,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 8,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ppc64le/node:8.12.0-alpine\n\n# Owner information\nMAINTAINER \"Amitkumar Ghatwal <ghatwala@us.ibm.com>\"\n\n#Set the required env. variables\nENV GOROOT=/usr/lib/go\nENV PATH=$GOROOT/bin:$PATH\n\n#install yarn\nRUN apk --update add --no-cache git zlib-dev curl curl-dev expat expat-dev file go go-tools xz perl-utils \\\n    && npm install -g yarn &&  mkdir /root/test262 && cd /root/test262 \\\n    && git clone https://github.com/mksully22/ppc64le_alpine_rust_1.26.2.git \\\n    && cp ./ppc64le_alpine_rust_1.26.2/* . \\\n    && sed -i '/apk add alpine-sdk/c\\apk add alpine-sdk gcc llvm-libunwind-dev cmake file libffi-dev llvm5-dev llvm5-test-utils python2 tar zlib-dev gcc llvm-libunwind-dev musl-dev util-linux bash' build_rust262.sh \\\n    && sed -i ':a;N;$!ba; s/fetch_rust/fetch_rust || true/2' build_rust262.sh \\\n    && sed -i ':a;N;$!ba; s/apply_patches/apply_patches || true/2' build_rust262.sh \\\n    && sed -i ':a;N;$!ba; s/mk_rustc/mk_rustc || true/2' build_rust262.sh \\\n    && ./build_rust262.sh \\\n    && cd / && git clone https://github.com/BurntSushi/ripgrep \\\n    && cd ripgrep/ \\\n    && cargo build --release \\\n    && cd / && git clone https://github.com/theia-ide/theia && cd theia && git checkout v0.3.15\\\n    && yarn --skip-integrity-check; npm cache clean --force; exit 0\n\nRUN cp -a /ripgrep/target/release /theia/node_modules/vscode-ripgrep/ \\\n    && cd /theia && yarn run build \\\n    && cd / &&  git clone https://github.com/desktop/dugite-native.git && cd /dugite-native/ \\\n    && git checkout v2.17.0 \\\n    && cp ./script/build-arm64.sh ./script/build-ppc64le.sh \\\n    && git submodule update --init --recursive\n\nCOPY build-ppc64le.patch /dugite-native/script\n\nRUN cd /dugite-native/script && patch build-ppc64le.sh < build-ppc64le.patch \\\n     && sed -i -e '/exit 1/ c\\  bash \"$DIR/build-ppc64le.sh\" $SOURCE $DESTINATION $BASEDIR' build.sh \\\n     && sed -i -e '/exit 1/ c\\  GZIP_FILE=\"dugite-native-$VERSION-ppc64le.tar.gz\"\\n\\  LZMA_FILE=\"dugite-native-$VERSION-ppc64le.lzma\"' package.sh \\\n     && sed -i '/#define REG_ENOSYS      -1/ i #define REG_STARTEND    00004' /usr/include/regex.h \\\n     && cd /dugite-native \\\n     && bash ./script/build.sh \\\n     && bash ./script/package.sh \\\n     && rm -rf /theia/node_modules/dugite/git/* \\\n     && cp /dugite-native/output/dugite-native-v2.17.0-ppc64le.tar.gz /theia/node_modules/dugite/git \\\n     && cd /theia/node_modules/dugite/git \\\n     && tar -xzf dugite-native-v2.17.0-ppc64le.tar.gz \\\n     && rm -rf /dugite-native /root/test262 /tmp/* /root/* /root/.cargo /home/rustbuild262/* /ripgrep \\\n     && apk del alpine-sdk curl git expat-dev ca-certificates libcurl curl-dev cmake  go go-tools libcurl file perl-utils xz-libs xz tar bash libarchive cmake llvm-libunwind llvm-libunwind-dev llvm5-libs llvm5 llvm5-dev gdbm sqlite-libs llvm5-test-utils rust-stdlib rust cargo libgit2 expat zlib-dev libcurl python2 libffi-dev scanelf libc-utils pkgconf binutils gmp isl libgomp gcc && rm dugite-native-v2.17.0-ppc64le.tar.gz\n\nEXPOSE 3000\nWORKDIR /theia/examples/browser\nENV SHELL /bin/sh\nCMD yarn run start --hostname 0.0.0.0\n\n"
}