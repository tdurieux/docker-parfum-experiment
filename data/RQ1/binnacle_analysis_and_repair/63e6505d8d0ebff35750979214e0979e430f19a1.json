{
  "startTime": 1674241038936,
  "endTime": 1674241039153,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 35,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n\nMAINTAINER Liam Jones <liam@stardive.co.uk>\n\n# Keep Anaconda download separate so this big layer can usually remain cached\nENV ANACONDA_VERSION=4.2.0\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends --assume-yes \\\n        ca-certificates \\\n        curl && \\\n    curl -f --location \"https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh\" > /anaconda.sh && \\\n    /bin/bash anaconda.sh -b -p /opt/conda && \\\n    rm anaconda.sh && rm -rf /var/lib/apt/lists/*;\n\nENV PAINTSCHAINER_MODEL=original \\\n    PAINTSCHAINER_GPU=0 \\\n    PAINTSCHAINER_S_SIZE=128 \\\n    TINI_VERSION=0.14.0 \\\n    DOCKERIZE_VERSION=0.3.0 \\\n    PATH=/opt/conda/bin:$PATH \\\n    CFLAGS=-I/usr/local/cuda-8.0/targets/x86_64-linux/include/:$CFLAGS \\\n    LDFLAGS=-L/usr/local/cuda-8.0/targets/x86_64-linux/lib/:$LDFLAGS \\\n    LD_LIBRARY_PATH=/usr/local/cuda-8.0/targets/x86_64-linux/lib/:$LD_LIBRARY_PATH\n\nRUN curl -f --location \"https://github.com/liamjones/PaintsChainer-Models/releases/download/{$PAINTSCHAINER_MODEL}/unet_128_standard\" > unet_128_standard && \\\n    curl -f --location \"https://github.com/liamjones/PaintsChainer-Models/releases/download/{$PAINTSCHAINER_MODEL}/unet_512_standard\" > unet_512_standard && \\\n    curl -f --location \"https://github.com/liamjones/PaintsChainer-Models/releases/download/{$PAINTSCHAINER_MODEL}/License.txt\" > Licence.txt && \\\n    curl -f --location \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini\" > /usr/local/bin/tini && \\\n    curl -f --location \"https://github.com/jwilder/dockerize/releases/download/v$DOCKERIZE_VERSION/dockerize-linux-amd64-v$DOCKERIZE_VERSION.tar.gz\" > /dockerize.tar.gz && \\\n    tar -C /usr/local/bin -zxvf /dockerize.tar.gz && \\\n    rm /dockerize.tar.gz\n\n# Re-running apt-get update because we're hoping to cache the Anaconda layer for a while\nRUN mkdir --parents /opt/conda/var/lib/dbus/ & \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends --assume-yes \\\n        cron \\\n        git \\\n        libgtk2.0-0 \\\n        libpng12-0 \\\n        tmpreaper && \\\n    apt-get clean && \\\n    rm --recursive --force /var/lib/apt/lists/* && \\\n    chmod +x /usr/local/bin/tini && \\\n    conda install --yes --channel menpo opencv3 && \\\n    conda clean --all && \\\n    pip --no-cache-dir install \\\n        cupy \\\n        chainer\n\nENV PAINTSCHAINER_REPO=https://github.com/pfnet/PaintsChainer.git \\\n    PAINTSCHAINER_COMMIT=1c14f9e\n\nRUN git clone $PAINTSCHAINER_REPO && \\\n    mkdir /PaintsChainer/cgi-bin/paint_x2_unet/models/ && \\\n    mv /unet_*_standard /Licence.txt /PaintsChainer/cgi-bin/paint_x2_unet/models/ && \\\n    touch /PaintsChainer/images/line/.tmpreaper && \\\n    touch /PaintsChainer/images/out/.tmpreaper && \\\n    touch /PaintsChainer/images/out_min/.tmpreaper && \\\n    touch /PaintsChainer/images/ref/.tmpreaper && \\\n    /bin/bash -c \"echo -e \\\"* * * * * root /usr/sbin/tmpreaper --protect '*/.tmpreaper' 1h /PaintsChainer/images/\\n\\\" > /etc/cron.d/delete-old-paintschainer-images\" && \\\n    chmod 0644 /etc/cron.d/delete-old-paintschainer-images\n\nWORKDIR /PaintsChainer\n\nCOPY *.patch ./\n\nRUN git checkout $PAINTSCHAINER_COMMIT && \\\n    git apply *.patch && \\\n    rm *.patch && \\\n    mv server.py server.py.template\n\nEXPOSE 8000\n\nENTRYPOINT [ \"tini\", \"-g\", \"--\" ]\n\nCMD [ \"sh\", \"-c\", \"cron && dockerize --template server.py.template:server.py && python -u server.py --host 0.0.0.0 --gpu $PAINTSCHAINER_GPU\"]\n"
}