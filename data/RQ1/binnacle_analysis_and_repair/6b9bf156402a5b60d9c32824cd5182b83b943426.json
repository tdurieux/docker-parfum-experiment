{
  "startTime": 1674246065955,
  "endTime": 1674246066445,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 25,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nRUN groupadd -r manticore && useradd -r -g manticore manticore\n\nENV GOSU_VERSION 1.11\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget gnupg dirmngr && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget\n\nENV MANTICORE_VERSION 3.0.2\n\nRUN set -x \\\n\t\\\n\t&& buildDeps='  ca-certificates wget  \\\n    default-libmysqlclient-dev \\\n    libexpat-dev \\\n    libpq-dev \\\n    unixodbc-dev \\\n    flex \\\n    bison \\\n    git \\\n    build-essential \\\n    libssl-dev \\\n    libboost-system-dev \\\n    libboost-program-options-dev \\\n    ' \\\n    && apt-get update && apt-get install -y \\\n    $buildDeps --no-install-recommends  \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cd / && wget https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.tar.gz \\ \n\t&& tar zxvf cmake-3.14.0-Linux-x86_64.tar.gz && rm -f cmake-3.14.0-Linux-x86_64.tar.gz && export PATH=$PATH:/cmake-3.14.0-Linux-x86_64/bin \\\t\n\t&& cd /tmp && git clone https://github.com/manticoresoftware/manticore.git manticore \\\n\t&& cd manticore && git checkout $MANTICORE_VERSION && mkdir build && cd build \\\n\t&& cd /tmp/manticore/build && cmake \\\n    -D SPLIT_SYMBOLS=1 \\\n    -D WITH_MYSQL=ON \\\n    -D WITH_PGSQL=ON \\\n    -D WITH_RE2=ON \\\n    -D WITH_STEMMER=ON \\\n    -D DISABLE_TESTING=ON \\\n    -D CMAKE_INSTALL_PREFIX=/ \\\n    -D CONFFILEDIR=/etc/sphinxsearch \\\n    -D SPHINX_TAG=release .. \\\n    && make install \\\n    && apt-get purge -y --auto-remove $buildDeps ca-certificates wget \\\n    && apt-get update && apt install --no-install-recommends -y libmariadbclient-dev-compat libexpat1 libodbc1 libpq5 openssl \\\n    && rm -rf /var/lib/apt/lists/* && rm -rf /usr/lib/debug/usr/bin/* && rm -rf /tmp/manticore \\\n\t&& rm -rf /cmake-3.14.0-Linux-x86_64\n\nCOPY sphinx.conf /etc/sphinxsearch/\nRUN mkdir -p /var/run/manticore && chown -R manticore:manticore /var/run/manticore && chmod 2777 /var/run/manticore \\\n    && mkdir /var/lib/manticore &&  mkdir /var/lib/manticore/replication &&  mkdir /var/lib/manticore/data &&  mkdir /var/lib/manticore/log && chown -R manticore:manticore /var/lib/manticore && chmod 777 /var/lib/manticore\n\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nVOLUME /var/lib/manticore /etc/sphinxsearch\nEXPOSE 9306\nEXPOSE 9308\nEXPOSE 9312\nEXPOSE 9315-9325\nCMD [\"searchd\", \"--nodetach\"]\n\n"
}