{
  "startTime": 1674239609356,
  "endTime": 1674239609549,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 160
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm\nLABEL maintainer=\"helder\"\n\nCOPY bin/* /usr/local/bin/\nRUN mkdir -p /usr/local/etc/php/disabled\n\n# Install useful extensions\nRUN apt-install \\\n      libfreetype6-dev \\\n      libjpeg62-turbo-dev \\\n      libpng-dev \\\n      imagemagick \\\n      ghostscript \\\n  && docker-php-ext-install \\\n      mysqli \\\n      pdo_mysql \\\n      mbstring \\\n  && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n  && docker-php-ext-install gd\n\n#RUN docker-php-pecl-install uploadprogress\n\nRUN apt-install zlib1g-dev libicu-dev g++ && \\\n    docker-php-ext-configure intl && \\\n    docker-php-ext-install intl && \\\n    apt-purge g++\n\nENV USE_XDEBUG no\nENV XDEBUG_VERSION 2.6.1\nRUN docker-php-pecl-install xdebug-$XDEBUG_VERSION && \\\n    echo \"xdebug.remote_enable=on\\nxdebug.remote_connect_back=on\" > /usr/local/etc/php/conf.d/xdebug.ini && \\\n    mkdir -p /usr/local/etc/php/xdebug.d && \\\n    mv /usr/local/etc/php/conf.d/*xdebug.ini /usr/local/etc/php/xdebug.d/\n\n\n# Use SSMTP\nRUN apt-install ssmtp && \\\n    groupadd -g 500 ssmtp && \\\n    chown :ssmtp /usr/sbin/ssmtp && \\\n    chmod g+s /usr/sbin/ssmtp && \\\n    echo \"sendmail_path = /usr/sbin/ssmtp -t\" > /usr/local/etc/php/conf.d/sendmail.ini && \\\n    mv /etc/ssmtp/ssmtp.conf /etc/ssmtp/ssmtp.conf~\n\n\n# Grab gosu for easy step-down from root\nENV GOSU_VERSION 1.11\nRUN set -x \\\n  && curl -f -sSLo /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n  && chmod +x /usr/local/bin/gosu \\\n  && gosu nobody true\n\n\n# Include composer\nRUN apt-install git rsync unzip zlib1g-dev && \\\n    docker-php-ext-install zip\n\nENV COMPOSER_VERSION 1.7.2\nENV COMPOSER_HOME /var/www/.composer\nENV PATH vendor/bin:$COMPOSER_HOME/vendor/bin:$PATH\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- \\\n      --install-dir=/usr/local/bin \\\n      --filename=composer \\\n      --version=${COMPOSER_VERSION}\n\nRUN mkdir -p $COMPOSER_HOME/cache && \\\n    chown -R www-data:www-data /var/www && \\\n    echo \"phar.readonly = off\" > /usr/local/etc/php/conf.d/phar.ini\nVOLUME $COMPOSER_HOME/cache\n\n\n# Add configs\nCOPY etc/*.ini /usr/local/etc/php/\nRUN cd /usr/local/etc/php && cp prod.ini conf.d/environment.ini\nRUN sed -i -e '/^access.log/ s/^/;/' /usr/local/etc/php-fpm.d/docker.conf && \\\n    sed -i -e '/^listen =/ s/^/;/' /usr/local/etc/php-fpm.d/www.conf && \\\n    sed -i -e \"s/^pm = dynamic/pm = ondemand/\" /usr/local/etc/php-fpm.d/www.conf\n\n\n# Add entrypoint\nCOPY init.d /docker-entrypoint-init.d/\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"php-fpm\"]\n"
}