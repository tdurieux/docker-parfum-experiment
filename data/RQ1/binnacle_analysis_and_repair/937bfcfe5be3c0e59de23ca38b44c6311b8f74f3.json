{
  "startTime": 1674240277135,
  "endTime": 1674240277268,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.4\n\nENV NODE_VERSION=6\n\nRUN curl -f -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash -\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\n\nRUN apt-get update && \\\n  apt-get install -y \\\n  nodejs unzip \\\n  # Note that we want postgresql-client so 'manage.py dbshell' works.\n  postgresql-client \\\n  # This is some kind of dependency for headless chrome; See https://crbug.com/795759.\n  libgconf-2-4 \\\n  # Install latest chrome stable package and dependencies.\n  # Note that ideally we'd explicitly specify the version of Chrome to use,\n  # but there are complications; see https://github.com/18F/calc/issues/1964\n  # for more details.\n  google-chrome-stable ttf-freefont \\\n  --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -rf /src/*.deb\n\nRUN pip install --no-cache-dir virtualenv\n\nWORKDIR /calc\n\nRUN npm install -g yarn && npm cache clean --force;\n\n# Hopefully the latest stable ChromeDriver is compatible with the latest\n# stable Chrome. I wish there were more consistently reproducible &\n# reliable ways around this, but there don't seem to be; see\n# https://github.com/18F/calc/issues/1964 for more details.\nRUN wget -N https://chromedriver.storage.googleapis.com/LATEST_RELEASE && \\\n  wget -N https://chromedriver.storage.googleapis.com/`cat LATEST_RELEASE`/chromedriver_linux64.zip \\\n  && unzip chromedriver_linux64.zip \\\n  && chmod +x chromedriver \\\n  && mv chromedriver /usr/local/bin/chromedriver\n\nENV PATH /calc/node_modules/.bin:$PATH\nENV DDM_IS_RUNNING_IN_DOCKER yup\n\nENTRYPOINT [\"python\", \"/calc/docker_django_management.py\"]\n"
}