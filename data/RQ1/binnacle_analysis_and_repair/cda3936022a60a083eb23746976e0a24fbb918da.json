{
  "startTime": 1674245032749,
  "endTime": 1674245033259,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 46,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builds Bottled Water and its dependencies inside a Docker container.\n# The resulting image is quite large, because all the development tools\n# are installed into it. However, the build process generates tar'ed\n# binaries which you can copy out and apply to a base Postgres image.\n#\n# The Makefile provides a 'docker' target that automates this process:\n#\n#   $ make docker\n#\n# See the Makefile and the other Dockerfiles in this directory for more\n# detail on how the build artifacts are used.\n\nFROM postgres:9.5\n\nENV RDKAFKA_VERSION=0.9.1 \\\n    RDKAFKA_SHASUM=\"b9d0dd1de53d9f566312c4dd148a4548b4e9a6c2  /root/librdkafka-0.9.1.tar.gz\" \\\n    AVRO_C_VERSION=1.8.0 \\\n    AVRO_C_SHASUM=\"af7757633ccf067b1f140c58161e2cdc2f2f003d  /root/avro-c-1.8.0.tar.gz\"\n\nRUN apt-get update && \\\n    # --force-yes is needed because we may need to downgrade libpq5 to $PG_MAJOR\n    # (set by the postgres:9.5 Docker image).  Confusingly the postgres:x.y\n    # Docker images have been known to include libpq5 version > x.y, which we\n    # may not yet be compatible with, so we can't rely on just specifying the\n    # image tag to pin the libpq version.\n    apt-get install -y --no-install-recommends --force-yes \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        libcurl4-openssl-dev \\\n        libjansson-dev \\\n        libpq5=${PG_MAJOR}\\* \\\n        libpq-dev=${PG_MAJOR}\\* \\\n        pkg-config \\\n        postgresql-server-dev-${PG_MAJOR}=${PG_MAJOR}\\* && rm -rf /var/lib/apt/lists/*;\n\n# Avro\nRUN curl -f -o /root/avro-c-${AVRO_C_VERSION}.tar.gz -SL https://archive.apache.org/dist/avro/avro-${AVRO_C_VERSION}/c/avro-c-${AVRO_C_VERSION}.tar.gz && \\\n    echo \"${AVRO_C_SHASUM}\" | shasum -a 1 -b -c && \\\n    tar -xzf /root/avro-c-${AVRO_C_VERSION}.tar.gz -C /root && \\\n    mkdir /root/avro-c-${AVRO_C_VERSION}/build && \\\n    cd /root/avro-c-${AVRO_C_VERSION}/build && \\\n    cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RelWithDebInfo && \\\n    make && make test && make install && cd / && \\\n    tar czf avro.tar.gz usr/local/include/avro usr/local/lib/libavro* usr/local/lib/pkgconfig/avro-c.pc && rm /root/avro-c-${AVRO_C_VERSION}.tar.gz\n\n# librdkafka\nRUN curl -f -o /root/librdkafka-${RDKAFKA_VERSION}.tar.gz -SL https://github.com/edenhill/librdkafka/archive/${RDKAFKA_VERSION}.tar.gz && \\\n    echo \"${RDKAFKA_SHASUM}\" | shasum -a 1 -b -c && \\\n    tar -xzf /root/librdkafka-${RDKAFKA_VERSION}.tar.gz -C /root && \\\n    cd /root/librdkafka-${RDKAFKA_VERSION} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd / && \\\n    tar czf librdkafka.tar.gz usr/local/include/librdkafka usr/local/lib/librdkafka* && rm /root/librdkafka-${RDKAFKA_VERSION}.tar.gz\n\n# Bottled Water\nCOPY . /root/bottledwater\nRUN cd /root/bottledwater && \\\n    make clean && make && make install && cd / && \\\n    tar czf bottledwater-ext.tar.gz usr/lib/postgresql/${PG_MAJOR}/lib/bottledwater.so usr/share/postgresql/${PG_MAJOR}/extension/bottledwater* && \\\n    cp /root/bottledwater/kafka/bottledwater /root/bottledwater/client/bwtest /usr/local/bin && \\\n    tar czf bottledwater-bin.tar.gz usr/local/bin/bottledwater usr/local/bin/bwtest\n"
}