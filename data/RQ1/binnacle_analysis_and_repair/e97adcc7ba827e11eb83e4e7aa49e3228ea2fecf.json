{
  "startTime": 1674242818082,
  "endTime": 1674242818158,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Frontend asset builder\nFROM node:8-stretch as frontend\n\nWORKDIR /opt/frontend\nCOPY package.json yarn.lock /opt/frontend/\n\nRUN yarn && \\\n\tyarn cache clean && \\\n\ttrue\n\nCOPY ./design/ /opt/frontend/design/\n\nRUN yarn run build\nCMD [\"yarn\", \"run\", \"watch\"]\n\n# Django application\nFROM python:3.7-stretch AS django\n\nWORKDIR /opt/my-web-app/\n\nRUN apt-get update \\\n    && apt-get install \\\n        --no-install-recommends --yes \\\n        build-essential libpq-dev \\\n    && true && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt \\\n    && rm /tmp/requirements.txt \\\n    && true\n\nCOPY ./mywebapp /opt/my-web-app/mywebapp\nCOPY ./deploy /opt/my-web-app/deploy\nCOPY ./manage.py /opt/my-web-app/manage.py\nCOPY --from=frontend /opt/frontend/static /opt/my-web-app/mywebapp/static\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONIOENCODING=UTF-8 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    DJANGO_SETTINGS_MODULE=deploy.settings\n\nCMD [\"/opt/my-web-app/deploy/run.sh\"]\n"
}