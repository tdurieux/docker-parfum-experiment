{
  "startTime": 1674252964446,
  "endTime": 1674252964584,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# docker import http://cdimage.ubuntu.com/ubuntu-core/daily/current/utopic-core-amd64.tar.gz $USER/ubuntu:utopic\n# docker import http://cdimage.ubuntu.com/ubuntu-core/daily/current/utopic-core-armhf.tar.gz $USER/ubuntu:utopic\n# docker build -t $USER/opencog-utopic-buildslave .\n# docker run -d -e BUILDSLAVE_NAME=$HOSTNAME -e BUILDSLAVE_PASSWD=foobar $USER/opencog-utopic-buildslave\n\nMAINTAINER David Hart \"dhart@opencog.org\"\nFROM dhart/ubuntu:utopic\n\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install software-properties-common sudo && rm -rf /var/lib/apt/lists/*;\n\n# ocpkg tool to install repositories and dependencies\nADD https://raw.githubusercontent.com/opencog/opencog/master/scripts/ocpkg /octool\nRUN /octool -a -d\n\nRUN apt-get -y --no-install-recommends install python-pip python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir buildbot-slave==0.8.8\n\nRUN adduser --disabled-password -uid 1099 --gecos \"Buildbot,,,\" --home /buildbot buildbot\n\nRUN su buildbot sh -c \"buildslave create-slave --umask=022 /buildbot buildbot.opencog.org:9989 BUILDSLAVE_NAME BUILDSLAVE_PASSWD\"\n\nADD opencog /buildbot/opencog_utopic_armhf/build\nRUN chown -R buildbot:buildbot /buildbot\nWORKDIR /buildbot/opencog_utopic_armhf/build\n\nRUN git remote rm origin\nRUN git remote add origin git://github.com/opencog/opencog\n\n# set buildslave admin and host info\nRUN echo \"David Hart <dhart@opencog.org>\" > /buildbot/info/admin && \\\n    grep \"model name\" /proc/cpuinfo | head -1 | cut -d \":\" -f 2 | tr -d \" \" > /buildbot/info/host && \\\n    grep DISTRIB_DESCRIPTION /etc/lsb-release | cut -d \"=\" -f 2 | tr -d \"\\\"\" >> /buildbot/info/host\n\nCMD su buildbot sh -c \"\\\nsed -i s:BUILDSLAVE_NAME:$BUILDSLAVE_NAME:g /buildbot/buildbot.tac && \\\nsed -i s:BUILDSLAVE_PASSWD:$BUILDSLAVE_PASSWD:g /buildbot/buildbot.tac && \\\nBUILDSLAVE_PASSWD=xxxxxx /usr/local/bin/buildslave start --nodaemon /buildbot\"\n"
}