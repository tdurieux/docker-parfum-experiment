{
  "startTime": 1674236016446,
  "endTime": 1674236016516,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Netbeast Dockerfile to create an image at Docker Hub\n\n# Select debian as base image\nFROM ubuntu:latest\n\n# to avoid some problems:\n# debconf: unable to initialize frontend: Dialog\nENV DEBIAN_FRONTEND noninteractive\n\nMAINTAINER <https://github.com/luisfpinto>\n\n# Install required packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    nodejs \\\n    nodejs-legacy \\\n    npm \\\n    git \\\n    net-tools && rm -rf /var/lib/apt/lists/*;\n\n# Only install dependencies when there's a change in package.json otherwise\n# we rebuild the modules when there's any change to the source code.\nADD package.json /tmp/package.json\nRUN cd /tmp && npm install && npm cache clean --force;\nRUN mkdir -p /src && cp -a /tmp/node_modules /src/\n\n# Copy the app\nWORKDIR /src\nADD . /src\n\n# Bind port 8000 & run app\nEXPOSE 8000\n\nCMD [\"node\", \"index.js\"]\n"
}