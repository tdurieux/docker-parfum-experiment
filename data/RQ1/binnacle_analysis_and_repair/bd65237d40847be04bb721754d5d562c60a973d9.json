{
  "startTime": 1674242664620,
  "endTime": 1674242664715,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 19,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 43,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM brunoric/hhvm:deb-hhvm\n\nENV CTF_PATH /var/www/fbctf\nENV DEBIAN_FRONTEND noninteractive\nENV CTF_REPO https://github.com/facebook/fbctf.git\n\nRUN apt-get update && apt-get install --no-install-recommends -y --force-yes curl language-pack-en git npm nodejs-legacy nginx mysql-client && rm -rf /var/lib/apt/lists/*;\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\nRUN mkdir -p $CTF_PATH\nWORKDIR $CTF_PATH\n\n# Install CTF\nRUN git clone --depth 1 $CTF_REPO .\n\n# Install Vendors\nRUN composer install\n\n# Build assets\nRUN npm install && npm install -g grunt && npm install -g flow-bin && npm cache clean --force;\nRUN grunt\n\n# Add nginx configuration\nCOPY [\"templates/fbctf.conf\", \"templates/fbctf_ssl.tmpl.conf\", \"/etc/nginx/sites-available/\"];\n\nCOPY [\"templates/settings.tmpl.ini\", \"entrypoint.sh\", \"./\"]\n\nRUN chmod +x entrypoint.sh\n\nEXPOSE 80 443\n\nENTRYPOINT [\"./entrypoint.sh\"]\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}