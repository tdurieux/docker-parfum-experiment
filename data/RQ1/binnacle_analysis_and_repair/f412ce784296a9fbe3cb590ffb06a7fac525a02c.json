{
  "startTime": 1674245519261,
  "endTime": 1674245519704,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\nLABEL maintainer=\"Alexey Pustovalov <alexey.pustovalov@zabbix.com>\"\n\nARG BUILD_DATE\nARG VCS_REF\n\nARG APK_FLAGS_COMMON=\"\"\nARG APK_FLAGS_PERSISTENT=\"${APK_FLAGS_COMMON} --clean-protected --no-cache\"\nARG APK_FLAGS_DEV=\"${APK_FLAGS_COMMON} --no-cache\"\nENV TERM=xterm MIBDIRS=/usr/share/snmp/mibs:/var/lib/zabbix/mibs MIBS=+ALL \\\n    ZBX_TYPE=server ZBX_DB_TYPE=mysql ZBX_OPT_TYPE=none\n\nLABEL org.label-schema.name=\"zabbix-${ZBX_TYPE}-${ZBX_DB_TYPE}-alpine\" \\\n      org.label-schema.vendor=\"Zabbix LLC\" \\\n      org.label-schema.url=\"https://zabbix.com/\" \\\n      org.label-schema.description=\"Zabbix ${ZBX_TYPE} with MySQL database support\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.license=\"GPL v2.0\"\n\nSTOPSIGNAL SIGTERM\n\nRUN set -eux && \\\n    addgroup zabbix && \\\n    adduser -S \\\n            -D -G zabbix \\\n            -h /var/lib/zabbix/ \\\n        zabbix && \\\n    adduser zabbix dialout && \\\n    mkdir -p /etc/zabbix && \\\n    mkdir -p /var/lib/zabbix && \\\n    mkdir -p /usr/lib/zabbix/alertscripts && \\\n    mkdir -p /var/lib/zabbix/enc && \\\n    mkdir -p /usr/lib/zabbix/externalscripts && \\\n    mkdir -p /var/lib/zabbix/mibs && \\\n    mkdir -p /var/lib/zabbix/modules && \\\n    mkdir -p /var/lib/zabbix/snmptraps && \\\n    mkdir -p /var/lib/zabbix/ssh_keys && \\\n    mkdir -p /var/lib/zabbix/ssl && \\\n    mkdir -p /var/lib/zabbix/ssl/certs && \\\n    mkdir -p /var/lib/zabbix/ssl/keys && \\\n    mkdir -p /var/lib/zabbix/ssl/ssl_ca && \\\n    chown --quiet -R zabbix:root /var/lib/zabbix && \\\n    mkdir -p /usr/share/doc/zabbix-${ZBX_TYPE}-${ZBX_DB_TYPE} && \\\n    apk update && \\\n    apk add ${APK_FLAGS_PERSISTENT} \\\n            tini \\\n            bash \\\n            fping \\\n            iputils \\\n            libcurl \\\n            libevent \\\n            libldap \\\n            libssh2 \\\n            libxml2 \\\n            mariadb-client \\\n            mariadb-connector-c \\\n            net-snmp-agent-libs \\\n            openipmi-libs \\\n            pcre \\\n            unixodbc && \\\n    rm -rf /var/cache/apk/*\n\nARG MAJOR_VERSION=4.2\nARG ZBX_VERSION=${MAJOR_VERSION}.3\nARG ZBX_SOURCES=https://git.zabbix.com/scm/zbx/zabbix.git\nENV ZBX_VERSION=${ZBX_VERSION} ZBX_SOURCES=${ZBX_SOURCES}\n\nLABEL org.label-schema.usage=\"https://www.zabbix.com/documentation/${MAJOR_VERSION}/manual/installation/containers\" \\\n      org.label-schema.version=\"${ZBX_VERSION}\" \\\n      org.label-schema.vcs-url=\"${ZBX_SOURCES}\" \\\n      org.label-schema.docker.cmd=\"docker run --name zabbix-${ZBX_TYPE}-${ZBX_DB_TYPE} --link mysql-server:mysql -p 10051:10051 -d zabbix-${ZBX_TYPE}-${ZBX_DB_TYPE}:alpine-${ZBX_VERSION}\"\n\nRUN set -eux && \\\n    apk add ${APK_FLAGS_DEV} --virtual build-dependencies \\\n            alpine-sdk \\\n            autoconf \\\n            automake \\\n            coreutils \\\n            curl-dev \\\n            libevent-dev \\\n            libssh2-dev \\\n            libxml2-dev \\\n            mysql-dev \\\n            net-snmp-dev \\\n            openipmi-dev \\\n            openldap-dev \\\n            pcre-dev \\\n            git \\\n            unixodbc-dev && \\\n    cd /tmp/ && \\\n    git clone ${ZBX_SOURCES} --branch ${ZBX_VERSION} --depth 1 --single-branch zabbix-${ZBX_VERSION} && \\\n    cd /tmp/zabbix-${ZBX_VERSION} && \\\n    zabbix_revision=`git rev-parse --short HEAD` && \\\n    sed -i \"s/{ZABBIX_REVISION}/$zabbix_revision/g\" include/version.h && \\\n    ./bootstrap.sh && \\\n    export CFLAGS=\"-fPIC -pie -Wl,-z,relro -Wl,-z,now\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --datadir=/usr/lib \\\n            --libdir=/usr/lib/zabbix \\\n            --prefix=/usr \\\n            --sysconfdir=/etc/zabbix \\\n            --enable-agent \\\n            --enable-${ZBX_TYPE} \\\n            --with-${ZBX_DB_TYPE} \\\n# Does not support stable iksemel library\n#            --with-jabber \\\n            --with-ldap \\\n            --with-libcurl \\\n            --with-libxml2 \\\n            --with-net-snmp \\\n            --with-openipmi \\\n            --with-openssl \\\n            --with-ssh2 \\\n            --with-unixodbc \\\n            --enable-ipv6 \\\n            --silent && \\\n    make -j\"$(nproc)\" -s dbschema && \\\n    make -j\"$(nproc)\" -s && \\\n    cp src/zabbix_${ZBX_TYPE}/zabbix_${ZBX_TYPE} /usr/sbin/zabbix_${ZBX_TYPE} && \\\n    cp src/zabbix_get/zabbix_get /usr/bin/zabbix_get && \\\n    cp src/zabbix_sender/zabbix_sender /usr/bin/zabbix_sender && \\\n    cp conf/zabbix_${ZBX_TYPE}.conf /etc/zabbix/zabbix_${ZBX_TYPE}.conf && \\\n    chown --quiet -R zabbix:root /etc/zabbix && \\\n    cat database/${ZBX_DB_TYPE}/schema.sql > database/${ZBX_DB_TYPE}/create.sql && \\\n    cat database/${ZBX_DB_TYPE}/images.sql >> database/${ZBX_DB_TYPE}/create.sql && \\\n    cat database/${ZBX_DB_TYPE}/data.sql >> database/${ZBX_DB_TYPE}/create.sql && \\\n    gzip database/${ZBX_DB_TYPE}/create.sql && \\\n    cp database/${ZBX_DB_TYPE}/create.sql.gz /usr/share/doc/zabbix-${ZBX_TYPE}-${ZBX_DB_TYPE}/ && \\\n    cd /tmp/ && \\\n    rm -rf /tmp/zabbix-${ZBX_VERSION}/ && \\\n    apk del ${APK_FLAGS_COMMON} --purge \\\n            build-dependencies && \\\n    rm -rf /var/cache/apk/*\n\nEXPOSE 10051/TCP\n\nWORKDIR /var/lib/zabbix\n\nVOLUME [\"/usr/lib/zabbix/alertscripts\", \"/usr/lib/zabbix/externalscripts\", \"/var/lib/zabbix/enc\", \"/var/lib/zabbix/mibs\", \"/var/lib/zabbix/modules\"]\nVOLUME [\"/var/lib/zabbix/snmptraps\", \"/var/lib/zabbix/ssh_keys\", \"/var/lib/zabbix/ssl/certs\", \"/var/lib/zabbix/ssl/keys\", \"/var/lib/zabbix/ssl/ssl_ca\"]\n\nCOPY [\"docker-entrypoint.sh\", \"/usr/bin/\"]\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/bin/docker-entrypoint.sh\"]\n"
}