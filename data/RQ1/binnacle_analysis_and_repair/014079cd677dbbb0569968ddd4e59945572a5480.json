{
  "startTime": 1674234050276,
  "endTime": 1674234050445,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n# This Dockerfile should follow the Travis configuration process\n# available here: https://github.com/opendatacube/datacube-core/blob/develop/.travis.yml\n\n# First add the NextGIS repo\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    software-properties-common \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN add-apt-repository ppa:nextgis/ppa\n\n# And now install apt dependencies, including a few of the heavy Python projects\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    # Core requirements from travis.yml\n    gdal-bin gdal-data libgdal-dev libgdal20 libudunits2-0 \\\n    # Extra python components, to speed things up\n    python3 python3-setuptools python3-dev \\\n    python3-numpy python3-netcdf4 python3-gdal \\\n    # Need pip to install more python packages later.\n    # The libdpkg-perl is needed to build pyproj\n    python3-pip python3-wheel cython3 libdpkg-perl \\\n    # Git to work out the ODC version number\n    git \\\n    # G++ because GDAL decided it needed compiling\n    g++ \\\n    # numpy requires headers for cf_units\n    libudunits2-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Get the code, and put it in /code\nENV APPDIR=/tmp/code\nRUN mkdir -p $APPDIR\nCOPY . $APPDIR\nWORKDIR $APPDIR\n\n# Set the locale, this is required for some of the Python packages\nENV LC_ALL C.UTF-8\n\n# Ensure pip is up to date\nRUN pip3 install --no-cache-dir --upgrade pip \\\n    && rm -rf $HOME/.cache/pip\n\n# Install psycopg2 as a special case to quiet the warning message\n# Make sure this version is the same as in the requirements-test.txt file\nRUN pip3 install --no-cache-dir --no-cache --no-binary :all: psycopg2==2.7.7 \\\n    && rm -rf $HOME/.cache/pip\n\n# Use the setup.py file to identify dependencies\nRUN pip3 install --no-cache-dir -r requirements-test.txt \\\n    && rm -rf $HOME/.cache/pip\n\n# Install ODC\nRUN python3 setup.py install\n\n# Move docs and utils somewhere else, and remove the temp folder\nRUN mkdir -p /opt/odc \\\n    && chmod +rwx /opt/odc \\\n    && mv $APPDIR/utils /opt/odc/ \\\n    && mv $APPDIR/docs /opt/odc/ \\\n    && mv $APPDIR/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh \\\n    && rm -rf $APPDIR\n\n# Fix an issue with libcurl...\nRUN mkdir -p /etc/pki/tls/certs \\\n    && ln -s /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt;\n\n# Set up an entrypoint that drops environment variables into the config file\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nWORKDIR /opt/odc\nCMD [\"datacube\",\"--help\"]\n"
}