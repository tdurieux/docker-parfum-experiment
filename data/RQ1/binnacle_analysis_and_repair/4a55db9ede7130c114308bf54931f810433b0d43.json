{
  "startTime": 1674243331975,
  "endTime": 1674243332126,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 68,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-cudnn7-devel-ubuntu18.04\n\nARG PYTHON_VERSION=3.6\nENV TZ=America/Los_Angeles\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake ccache \\\n         git \\\n         curl \\\n         vim \\\n         ca-certificates \\\n         libjpeg-dev libeigen3-dev libnuma-dev libleveldb-dev liblmdb-dev libopencv-dev libsnappy-dev \\\n         libpng-dev &&\\\n     rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy matplotlib ipython mkl mkl-include cython typing && \\\n     /opt/conda/bin/conda install -c mingfeima mkldnn && \\\n     /opt/conda/bin/conda install -y -c pytorch magma-cuda92\n     #/opt/conda/bin/conda install -c pytorch pytorch\n     #/opt/conda/bin/conda clean -ya\n\nRUN /opt/conda/bin/conda install -c anaconda tensorflow-gpu\n\nENV PATH /opt/conda/bin:$PATH\n# This must be done before pip so that requirements.txt is available\nWORKDIR /opt/pytorch\nRUN git clone --recursive https://github.com/pytorch/pytorch.git pytorch\nWORKDIR /opt/pytorch/pytorch\nRUN git checkout v1.0.0\nRUN git submodule update --init\n\nRUN TORCH_CUDA_ARCH_LIST=\"3.0;3.5;5.2;6.0;6.1\" TORCH_NVCC_FLAGS=\"-Xfatbin -compress-all\" \\\n    CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\" \\\n\n    pip --no-cache-dir \\\n\n\n    install -v .\n\nWORKDIR /opt/pytorch\nRUN git clone https://github.com/pytorch/vision.git && cd vision && pip install --no-cache-dir -v .\n\nRUN pip install --no-cache-dir -U docopts nnmnkwii >=0.0.11 tqdm tensorboardX keras scikit-learn lws librosa\n\nWORKDIR /workspace\nRUN chmod -R a+w /workspace\n#RUN git clone --recursive https://github.com/geneing/WaveRNN-Pytorch.git\n\n\n\n"
}