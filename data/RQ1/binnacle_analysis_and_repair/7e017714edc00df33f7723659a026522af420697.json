{
  "startTime": 1674251585101,
  "endTime": 1674251585220,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Following must be copied to the docker build context before the docker images is built\n# - {joynr}/javascript/libjoynr-js as files/libjoynr-js\n# - {joynr}/tests/test-base as files/test-base\n# - {joynr}/java/messaging/bounceproxy/single-bounceproxy/target/single-bounceproxy.war as files/single-bounceproxy.war\n#\n# Following files must be copied from {joynr}/tests/performance-test/ to files/performance-test/\n# - src/\n# - package.json\n# - run-performance-test.sh\n\nFROM joynr-runtime-environment-base:latest\n\n###################################################\n# install the c++ executables which are provided\n# as rpm files. The rpm files are created by using\n# following shell script:\n# docker/joynr-cpp-base/scripts/build/cpp-build-rpm-package.sh\n# The created rpm files must be copied to the docker\n# build context beforehand.\n###################################################\nARG JOYNR_RPM_NAME\nADD ${JOYNR_RPM_NAME} /tmp/joynr.rpm\n\nARG JOYNR_TEST_RPM_NAME\nADD ${JOYNR_TEST_RPM_NAME} /tmp/joynr-test.rpm\n\nARG SMRF_RPM_NAME\nADD ${SMRF_RPM_NAME} /tmp/smrf.rpm\n\nARG MOCOCRW_RPM_NAME\nADD ${MOCOCRW_RPM_NAME} /tmp/MoCOCrW.rpm\n\nARG http_proxy=\"\"\nARG https_proxy=\"\"\nARG no_proxy=\"\"\n\n# This line is necessary to ensure that the following dnf\n# call can access the internet.\nRUN curl -f www.google.de > /dev/null\n\nRUN dnf install -y \\\n\t/tmp/MoCOCrW.rpm \\\n\t/tmp/smrf.rpm \\\n\t/tmp/joynr.rpm \\\n\t/tmp/joynr-test.rpm \\\n\t&& rm /tmp/MoCOCrW.rpm \\\n\t&& rm /tmp/smrf.rpm \\\n\t&& rm /tmp/joynr.rpm \\\n\t&& rm /tmp/joynr-test.rpm\n\n###################################################\n# install js dependencies\n###################################################\nRUN npm install -g bluebird@3.1.1 jasmine-node && npm cache clean --force;\n\n###################################################\n# install js joynr as a global package\n###################################################\nCOPY files/libjoynr-js /tmp/libjoynr-js\n\nRUN cd /tmp/libjoynr-js/target/node-classes \\\n\t&& npm install -g \\\n\t&& rm -rf /tmp/libjoynr-js && npm cache clean --force;\n\n###################################################\n# install js test-base as a global package\n###################################################\nCOPY files/test-base /tmp/test-base\n\nRUN cd /tmp/test-base/ \\\n\t&& npm config set http-proxy ${http_proxy} \\\n\t&& npm config set https-proxy ${https_proxy} \\\n\t&& npm install -g \\\n\t&& rm -rf /tmp/test-base && npm cache clean --force;\n\n###################################################\n# install the performance-tests\n###################################################\nCOPY files/performance-test/src /opt/joynr/performance-test/src\nCOPY files/performance-test/package.json /opt/joynr/performance-test/package.json\nCOPY files/performance-test/run-performance-tests.sh /opt/joynr/performance-test/run-performance-tests.sh\nCOPY files/performance-test/performance-test-consumer.jar /opt/joynr/performance-test/performance-test-consumer.jar\nCOPY files/performance-test/performance-test-provider.jar /opt/joynr/performance-test/performance-test-provider.jar\n\n###################################################\n# install the mosquitto configuration\n###################################################\nCOPY files/mosquitto.conf /etc/mosquitto/mosquitto.conf\n\n###################################################\n# install the backend servlets\n###################################################\n\nADD files/single-bounceproxy.war /usr/local/jetty/webapps/bounceproxy.war\n\n# Create an environment variable which is used by\n# npm and points to the installation folder of the\n# global dependencies.\nENV NODE_PATH /usr/lib/node_modules/\n"
}