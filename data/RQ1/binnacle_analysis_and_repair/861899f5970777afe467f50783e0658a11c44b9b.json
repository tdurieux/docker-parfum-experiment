{
  "startTime": 1674242372404,
  "endTime": 1674242372672,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Nginx Amplify Agent container\n# Based on Ubuntu 16.04\n############################################################\n\n# Set the base image to Ubuntu\nFROM ubuntu:16.04\n# no idea why adding this earlier works..\nADD requirements.txt /etc/naas/requirements.txt\n\nARG VAULT_ADDR='https://vault.ci.nginx.com'\nARG VAULT_SKIP_VERIFY=true\nARG VAULT_TOKEN\nRUN echo ${VAULT_TOKEN}\n\n# File Author / Maintainer\nLABEL maintainer=\"Seth Malaki\"\n\n# Add the application resources URL\n# RUN echo \"deb http://archive.ubuntu.com/ubuntu/ $(lsb_release -sc) main universe\" >> /etc/apt/sources.list\n\n# Update the sources list\nRUN apt-get update\n\n# Install basic applications\nRUN apt-get install --no-install-recommends -y --fix-missing \\\n    tar curl nano wget dialog \\\n    net-tools build-essential net-tools build-essential \\\n    apt-transport-https jq software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# get vault\nRUN curl -f -Ss https://releases.hashicorp.com/vault/0.10.0/vault_0.10.0_linux_amd64.zip \\\n    | gunzip - > /usr/local/bin/vault \\\n    && chmod +x /usr/local/bin/vault\n\n# setup NGINX repo certs for N+\nRUN mkdir -p /etc/ssl/nginx \\\n    && VAULT_TOKEN=${VAULT_TOKEN} vault kv get -format=json certs-dev/nginx-repo.crt  \\\n    | jq -r .data.data.cert > /etc/ssl/nginx/nginx-repo.crt \\\n    && VAULT_TOKEN=${VAULT_TOKEN} vault kv get -format=json certs-dev/nginx-repo.key  \\\n    | jq -r .data.data.key > /etc/ssl/nginx/nginx-repo.key \\\n    && chmod +r /etc/ssl/nginx/nginx-repo.*\n\n# get N+\nRUN curl -f -sS https://nginx.org/keys/nginx_signing.key | apt-key add -\nRUN curl -f -sS --output /etc/apt/apt.conf.d/90nginx https://cs.nginx.com/static/files/90nginx\nRUN printf \"deb https://plus-pkgs.nginx.com/ubuntu `lsb_release -cs` nginx-plus\\n\" > /etc/apt/sources.list.d/nginx-plus.list\nRUN apt-get -qq update && apt-get install -y --no-install-recommends -qq nginx-plus && rm -rf /var/lib/apt/lists/*;\n\n# Install php-fpm and configure\nRUN apt-get update && apt-get install --no-install-recommends -y php-fpm && rm -rf /var/lib/apt/lists/*;\n# add fastcgi_params and php-fpm.conf for nginx\nADD fastcgi_params /etc/nginx/fastcgi_params\nADD php-fpm.conf /etc/nginx/conf.d/php-fpm.conf\n# overwrite default www.conf for php7.0-fpm\nADD php-fpm-www.conf /etc/php/7.0/fpm/pool.d/www.conf\n# add alternate version that listens on IPv4\nADD php-fpm-www-alt.conf /etc/php/7.0/fpm/pool.d/www-alt.conf\n# add test .php file to /var/www/php-fpm root\nADD test.php /var/www/php-fpm/test.php\n\n# Instal mysql and prepare init file\nRUN groupadd -r mysql && useradd -r -g mysql mysql\nRUN echo \"mysql-server-5.7 mysql-server/root_password password root\" | debconf-set-selections\nRUN echo \"mysql-server-5.7 mysql-server/root_password_again password root\" | debconf-set-selections\nRUN apt-get update && apt-get install --no-install-recommends -y mysql-server-5.7 && rm -rf /var/lib/apt/lists/*;\n\n# Install Python and Basic Python Tools\nRUN apt-get install --no-install-recommends -y python python-dev python-distribute && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python - 'pip==18.1.0'\n\n# Copy the application folder inside the container\nADD . /amplify\n\n# Install agent requirements:\nRUN pip install --no-cache-dir -r /etc/naas/requirements.txt\n\nENV AMPLIFY_ENVIRONMENT development\nENV PYTHONPATH /amplify/\n\n# Set the default directory where CMD will execute\nWORKDIR /amplify\n\n# add stub status\nADD nginx.conf /etc/nginx/nginx.conf\nADD nginx2.conf /etc/nginx/nginx2.conf\n\n# add ssl\nADD amplify-agent-test.crt /etc/nginx/certs.d/amplify-agent-test.crt\nADD amplify-agent-test.key /etc/nginx/certs.d/amplify-agent-test.key\n\nRUN usermod -d /var/lib/mysql/ mysql\n\nCMD service mysql start && nginx && nginx -c /etc/nginx/nginx2.conf && service php7.0-fpm start && python /amplify/nginx-amplify-agent.py start --config=/amplify/etc/agent.conf.development && tail -f /amplify/log/agent.log\n"
}