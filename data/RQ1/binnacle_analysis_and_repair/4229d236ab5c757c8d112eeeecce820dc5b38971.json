{
  "startTime": 1674251617872,
  "endTime": 1674251618097,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 42,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:trusty\n# 4 versions old, but it's what we use on prod ¯\\_(ツ)_/¯\n\nMAINTAINER austin <austin@affinity.works>\nLABEL description=\"Base image for running affinity.works web app.\"\nLABEL version=\"0.0.4\"\n\n# ------------------------------------------------------\n# --- Configure System\n\n# configure working dir, ports\nRUN mkdir -p /affinity\nWORKDIR /affinity\nEXPOSE 3000\n\n# install system dependencies\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    build-essential \\\n    curl \\\n    git \\\n    libpq-dev \\\n    locales \\\n    nano && rm -rf /var/lib/apt/lists/*;\n\n# set locale\nRUN cp /usr/share/i18n/SUPPORTED /etc/locale.gen && \\\n    locale-gen && \\\n    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# ------------------------------------------------------\n# --- Install Javascript Dependencies\n\nARG node_version\nENV NODE_VERSION $node_version\nENV NVM_DIR \"$HOME/.nvm\"\n\n# install node\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"' >> ${HOME}/.bash_profile && \\\n    . ${HOME}/.bash_profile && \\\n    nvm install ${NODE_VERSION} && \\\n    nvm use ${NODE_VERSION}\n\n# install yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update -q && \\\n    apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\n# install javascript dependencies\nRUN mkdir -p /affinity/client\nCOPY ./yarn.lock /affinity/package.json\nCOPY ./package.json /affinity/package.json\nCOPY ./client/yarn.lock /affinity/client/yarn.lock\nCOPY ./client/package.json /affinity/client/package.json\nRUN bash -lc 'nvm use ${NODE_VERSION} && yarn install'\n\n# ------------------------------------------------------\n# --- Install Ruby Dependencies\n\nARG ruby_version\nENV RUBY_VERSION $ruby_version\nENV GEMSET_NAME \"affinity\"\n\n# install ruby\nRUN curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import - && \\\n    curl -f -sSL https://get.rvm.io | bash -s stable --ruby && \\\n    echo '[ -s \"$HOME/.rvm/scripts/rvm\" ] && . /usr/local/rvm/scripts/rvm' >> $HOME/.bash_profile && \\\n    echo '[ -s \"/etc/profile.d/rvm.sh\" ] && . /etc/profile.d/rvm.sh' >> $HOME/.bash_profile && \\\n    . $HOME/.bash_profile\nRUN bash -lc \"rvm install ${RUBY_VERSION}\"\n\n# install rails dependencies\nCOPY ./Gemfile /affinity/Gemfile\nCOPY ./Gemfile.lock /affinity/Gemfile.lock\nRUN bash -lc \"rvm use ruby-${RUBY_VERSION} && \\\n              gem install --no-rdoc --no-ri foreman && \\\n              gem install --no-rdoc --no-ri bundler && \\\n              bundle install\"\n\n# ------------------------------------------------------\n# --- Cleanup\nRUN apt-get clean\n"
}