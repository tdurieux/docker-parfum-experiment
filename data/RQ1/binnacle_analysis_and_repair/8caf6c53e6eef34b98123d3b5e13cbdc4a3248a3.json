{
  "startTime": 1674235722776,
  "endTime": 1674235723853,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 7,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "# Creates an image for skycoin development with Python tools installed\nARG IMAGE_FROM=skycoin/skycoindev-cli:develop\nFROM $IMAGE_FROM\n\nARG BDATE\nARG SCOMMIT\nARG PIP_PACKAGES=\"setuptools wheel\"\n\n# Image labels (see ./hooks/build for ARGS)\nLABEL \"org.label-schema.name\"=\"skycoindev-python\" \\\n      \"org.label-schema.description\"=\"Docker image with go, node, python and dev tools for Skycoin developers\" \\\n      \"org.label-schema.vendor\"=\"Skycoin project\" \\\n      \"org.label-schema.url\"=\"skycoin.net\" \\\n      \"org.label-schema.version\"=\"0.24.4\" \\\n      \"org.label-schema.build-date\"=$BDATE \\\n      \"org.label-schema.vcs-url\"=\"https://github.com/skycoin/pyskycoin.git\" \\\n      \"org.label-schema.vcs-ref\"=$SCOMMIT \\\n      \"org.label-schema.usage\"=\"https://github.com/skycoin/pyskycoin/blob/\"$SCOMMIT\"/docker/images/dev/README.md\" \\\n      \"org.label-schema.schema-version\"=\"1.0\" \\\n      \"org.label-schema.docker.cmd\"=\"mkdir src; docker run --rm -v ${PWD}/src:/usr/local/src skycoin/skycoindev-python:develop git clone https://github.com/simelo/pyskycoin.git\"\n\n# Install Python 2.7/3.5 runtime and development tools\nRUN set -ex \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n\t\tpython2.7-dev \\\n\t\tpython3.5 \\\n\t\tpython3.5-dev \\\n\t\tpython-dev \\\n\t\tpython3-dev \\\n\t\tca-certificates \\\n\t\tlibexpat1 \\\n\t\tlibffi6 \\\n\t\tlibgdbm3 \\\n\t\tlibreadline7 \\\n\t\tlibsqlite3-0 \\\n\t\tlibssl1.1 \\\n\t\tnetbase \\\n\t\twget \\\n\t\tpython-pip \\\n\t\tpython3-pip \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;\n\n# Install Python 3.7\n# runtime dependencies\nENV PYTHON_VERSION 3.7.1\nRUN set -ex \\\n\t&& buildDeps=\" \\\n\t\tlibexpat1-dev \\\n\t\ttcl-dev \\\n\t\ttk-dev \\\n    # as of Stretch, \"gpg\" is no longer included by default\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n\t\" \\\n\t&& apt-get install -y $buildDeps --no-install-recommends \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& for server in ha.pool.sks-keyservers.net \\\n              hkp://p80.pool.sks-keyservers.net:80 \\\n              keyserver.ubuntu.com \\\n              hkp://keyserver.ubuntu.com:80; do \\\n\t\t\t\t\t\t\tgpg --batch --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D; done \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n        --prefix=/usr \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make altinstall \\\n\t&& ldconfig \\\n\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python && rm -rf /var/lib/apt/lists/*;\n\n# Install Python 3.6\n# runtime dependencies\nENV PYTHON_VERSION 3.6.7\nRUN set -ex \\\n\t&& buildDeps=\" \\\n\t\tlibexpat1-dev \\\n\t\ttcl-dev \\\n\t\ttk-dev \\\n    # as of Stretch, \"gpg\" is no longer included by default\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n\t\" \\\n\t&& apt-get install -y $buildDeps --no-install-recommends \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& for server in ha.pool.sks-keyservers.net \\\n              hkp://p80.pool.sks-keyservers.net:80 \\\n              keyserver.ubuntu.com \\\n              hkp://keyserver.ubuntu.com:80; do \\\n\t\t\t\t\t\t\tgpg --batch --keyserver \"$server\" --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D; done \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n        --prefix=/usr \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make altinstall \\\n\t&& ldconfig \\\n\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python && rm -rf /var/lib/apt/lists/*;\n\n# Install Python 3.4\n# runtime dependencies\nENV PYTHON_VERSION 3.4.9\nRUN set -ex \\\n\t&& buildDeps=\" \\\n# as of Stretch, \"gpg\" is no longer included by default\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n\t\" \\\n\t&& apt-get install -y libssl1.0-dev $buildDeps --no-install-recommends \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& for server in ha.pool.sks-keyservers.net \\\n              hkp://p80.pool.sks-keyservers.net:80 \\\n              keyserver.ubuntu.com \\\n              hkp://keyserver.ubuntu.com:80; do \\\n\t\t\t\t\t\t\tgpg --batch --keyserver \"$server\" --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D; done \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n        --prefix=/usr \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make altinstall \\\n\t&& ldconfig \\\n\n    && apt-get install --no-install-recommends -y libssl-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 18.1\nRUN set -ex; \\\n\t\\\n\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n\t\\\n\tpython3.7 get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpython3.6 get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n    python3.5 get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n    python3.4 get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\n# Install packages in PIP_PACKAGES\nRUN pip install --no-cache-dir --upgrade $PIP_PACKAGES \\\n    && pip3 install --no-cache-dir --upgrade $PIP_PACKAGES \\\n    && python3.4 -m pip install --upgrade $PIP_PACKAGES \\\n    && python3.6 -m pip install --upgrade $PIP_PACKAGES \\\n    && python3.7 -m pip install --upgrade $PIP_PACKAGES\n\nWORKDIR $GOPATH/src/github.com/skycoin\n\nVOLUME $GOPATH/src/\n"
}