{
  "startTime": 1674240192463,
  "endTime": 1674240192543,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker build should be launched from parent directory this way:\n# docker build -f dashboard/Dockerfile .\n#\n# Build\nFROM node:8.16.0 as build\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nCOPY bootstrap /usr/src/app/bootstrap\nWORKDIR /usr/src/app/bootstrap\nRUN npm install --silent && npm cache clean --force;\nENV PATH /usr/src/app/dashboard/node_modules/.bin:$PATH\nCOPY dashboard /usr/src/app/dashboard\nWORKDIR /usr/src/app/dashboard\nRUN npm install --silent --ignore-scripts && npm cache clean --force;\n# Run postinstall manually: https://github.com/npm/npm/issues/17346\nRUN npm run typedef:compile\nRUN npm run typedef:typechain\nRUN npm run typedef:copy\nRUN npm run build\n\n# Prod webserver\nFROM nginx:stable-alpine\nCOPY --from=build /usr/src/app/dashboard/build /usr/share/nginx/html\nRUN echo $'server { \\n\\\r\n        listen 3000; \\n\\\r\n        root /usr/share/nginx/html; \\n\\\r\n        location / { \\n\\\r\n            try_files $uri /index.html; \\n\\\r\n        } \\n\\\r\n    }' | tee /etc/nginx/conf.d/default.conf\nEXPOSE 3000\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}