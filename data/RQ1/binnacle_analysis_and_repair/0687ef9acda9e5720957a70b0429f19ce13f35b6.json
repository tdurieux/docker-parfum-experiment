{
  "startTime": 1674240724601,
  "endTime": 1674240724896,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 43,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 468
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 468
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 468
      }
    }
  ],
  "repairedDockerfile": "# FROM openhorizon/aarch64-tx2-cudabase:JetPack3.2-RC\nFROM cudabase\n\n#AUTHOR chenbryanchen@gmail.com\n\nENV ARCH=aarch64\n\nWORKDIR /\n\n# Install opencv dev package libraries\nRUN apt-get update && apt-get install --no-install-recommends -y libopencv-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies\nRUN apt-get install -y --no-install-recommends build-essential cmake git gfortran libatlas-base-dev libboost-filesystem-dev libboost-python-dev libboost-system-dev libboost-thread-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libsnappy-dev python-all-dev python-dev python-h5py python-matplotlib python-numpy python-opencv python-pil python-pip python-scipy python-skimage python-sklearn python-setuptools autoconf automake libtool && rm -rf /var/lib/apt/lists/*;\n\n# Install newer protobuf\nRUN mkdir /protobuf\nWORKDIR /protobuf\nRUN git clone -b '3.6.x' https://github.com/google/protobuf.git . && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/protobuf && \\\n    make \"-j$(nproc)\" install\nRUN cp -r /usr/local/protobuf/* /usr/local\nWORKDIR /\nRUN rm -fr /protobuf\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir protobuf==3.6.0\nRUN git clone http://github.com/NVIDIA/caffe -b 'caffe-0.15'\n\n# patch caffe for aarch64\nCOPY mutex.patch /tmp/mutex.patch\nRUN patch /caffe/3rdparty/cub/host/mutex.cuh /tmp/mutex.patch\n\n# Install Caffe\nWORKDIR /caffe/python\nRUN for req in $(cat requirements.txt); do pip install --no-cache-dir $req; done\nWORKDIR /caffe\nRUN mkdir build\nWORKDIR /caffe/build\nRUN cmake ../ -DCUDA_ARCH_NAME=\"Manual\" -DCUDA_ARCH_BIN=\"52 60\" -DCUDA_ARCH_PTX=\"60\"\n\n# Fix cmake_cxx_flags\nWORKDIR /caffe/src/caffe\nRUN sed -i '1i set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")' CMakeLists.txt\nWORKDIR /caffe/tools\nRUN sed -i '1i set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")' CMakeLists.txt\nWORKDIR /caffe/examples\nRUN sed -i '1i set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")' CMakeLists.txt\nWORKDIR /caffe/python\nRUN sed -i '1i set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")' CMakeLists.txt\n\nWORKDIR /caffe/build\nRUN make --jobs=6\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/aarch64-linux-gnu/tegra\nRUN make pycaffe -j5\nRUN make test -j5\n\n# Clean up\nRUN apt-get -y autoremove && apt-get -y clean\n"
}