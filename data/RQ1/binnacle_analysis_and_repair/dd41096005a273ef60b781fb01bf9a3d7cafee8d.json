{
  "startTime": 1674248117423,
  "endTime": 1674248117722,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# HELK script: HELK Kafka Base Dockerfile\n# HELK build Stage: Alpha\n# Author: Roberto Rodriguez (@Cyb3rWard0g)\n# License: GPL-3.0\n\nFROM cyb3rward0g/helk-base:0.0.3\nLABEL maintainer=\"Roberto Rodriguez @Cyb3rWard0g\"\nLABEL description=\"Dockerfile base for the HELK Kafka.\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# *********** Kafka Variables ***************\nENV KAFKA_VERSION=2.2.0\nENV SCALA_VERSION=2.12\nENV KAFKA_LOGS_PATH=/var/log/kafka\nENV KAFKA_CONSOLE_LOG=/var/log/kafka/helk-kafka.log\nENV KAFKA_HOME=/opt/helk/kafka\nENV KAFKA_GID=910\nENV KAFKA_UID=910\nENV KAFKA_USER=kafkauser\n\n# *********** Installing Prerequisites ***************\n# -qq : No output except for errors\nRUN echo \"[HELK-DOCKER-INSTALLATION-INFO] Updating Ubuntu base image..\" \\\n  && apt-get update -qq \\\n  && echo \"[HELK-DOCKER-INSTALLATION-INFO] Extracting templates from packages..\" \\\n  && apt-get install --no-install-recommends -qqy \\\n  openjdk-8-jre-headless \\\n  && apt-get -qy clean \\\n  autoremove \\\n  && rm -rf /var/lib/apt/lists/* \\\n  # *********** Creating the right directories ***************\n  && bash -c 'mkdir -pv /opt/helk/kafka' \\\n  # ********* Downloading Kafka *************\n  && wget -qO- https://mirrors.ocf.berkeley.edu/apache/kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz | sudo tar xvz -C /opt/helk/kafka/ --strip-components=1 \\\n  && mkdir -v $KAFKA_LOGS_PATH \\\n  # ********* Adding Kafka User *************\n  && groupadd -g ${KAFKA_GID} ${KAFKA_USER} \\\n  && useradd -u ${KAFKA_UID} -g ${KAFKA_GID} -d ${KAFKA_HOME} --no-create-home -s /bin/bash ${KAFKA_USER} \\\n  && chown -R ${KAFKA_USER}:${KAFKA_USER} ${KAFKA_HOME} ${KAFKA_LOGS_PATH}"
}