{
  "startTime": 1674239640792,
  "endTime": 1674239641130,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y git vim curl libcurl4-openssl-dev g++ cmake libboost-all-dev libargtable2-dev && \\\n\n    curl -f -sL https://deb.nodesource.com/setup_7.x | bash - && \\\n\n    # Install Node.js Dependencies\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    npm install typescript -g && \\\n    npm install tslint -g && \\\n\n    # libmicrohttpd\n    curl -f -O http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.52.tar.gz && \\\n    tar -xvf libmicrohttpd-0.9.52.tar.gz && \\\n    cd libmicrohttpd-0.9.52 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && \\\n    make install && ldconfig && \\\n    cd .. && rm -rf libmicrohttpd-0.9.52 && \\\n\n    # jsoncpp\n    git clone git://github.com/open-source-parsers/jsoncpp.git && \\\n    mkdir -p jsoncpp/build && \\\n    cd jsoncpp/build && \\\n    cmake -DCMAKE_BUILD_TYPE=debug -DCMAKE_CXX_FLAGS=-fPIC -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DARCHIVE_INSTALL_DIR=. -G \"Unix Makefiles\" .. && \\\n    make && \\\n    make install && ldconfig && \\\n    cd ../../ && rm -rf jsoncpp && \\\n\n    # libjson-rpc-cpp\n    git clone git://github.com/tinganho/libjson-rpc-cpp.git && \\\n    mkdir -p libjson-rpc-cpp/build && \\\n    cd libjson-rpc-cpp/build && \\\n    cmake -DCMAKE_BUILD_TYPE=Debug -DHTTP_CLIENT=YES -DHTTP_SERVER=YES -DCOMPILE_STUBGEN=YES .. && \\\n    make && \\\n    make install && ldconfig && \\\n    cd ../../ && rm -rf libjson-rpc-cpp && npm cache clean --force; && rm libmicrohttpd-0.9.52.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nCMD exec /bin/bash -c \"trap : TERM INT; sleep infinity & wait\"\n"
}