{
  "startTime": 1674243475898,
  "endTime": 1674243476028,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\n\n# This image is the base image for all OpenShift v3 language Docker images.\nMAINTAINER Jakub Hadvig <jhadvig@redhat.com>\n\n# Location of the STI scripts inside the image\n#\nLABEL io.openshift.s2i.scripts-url=image:///usr/libexec/s2i\n\n# DEPRECATED: This label will be kept here for backward compatibility\nLABEL io.s2i.scripts-url=image:///usr/libexec/s2i\n\n# Deprecated. Use above LABEL instead, because this will be removed in future versions.\nENV STI_SCRIPTS_URL=image:///usr/libexec/s2i\n\n# Path to be used in other layers to place s2i scripts into\nENV STI_SCRIPTS_PATH=/usr/libexec/s2i\n\n# The $HOME is not set by default, but some applications needs this variable\nENV HOME=/opt/app-root/src \\\n    PATH=/opt/app-root/src/bin:/opt/app-root/bin:$PATH\n\n# When bash is started non-interactively, to run a shell script, for example it\n# looks for this variable and source the content of this file. This will enable\n# the SCL for all scripts without need to do 'scl enable'.\nADD contrib/scl_enable /opt/app-root/etc/scl_enable\nENV BASH_ENV=/opt/app-root/etc/scl_enable \\\n    ENV=/opt/app-root/etc/scl_enable \\\n    PROMPT_COMMAND=\". /opt/app-root/etc/scl_enable\"\n\n# This is the list of basic dependencies that all language Docker image can\n# consume.\n# Also setup the 'openshift' user that is used for the build execution and for the\n# application runtime execution.\n# TODO: Use better UID and GID values\nRUN rpmkeys --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 && \\\n  yum install -y --setopt=tsflags=nodocs \\\n  autoconf \\\n  automake \\\n  bsdtar \\\n  epel-release \\\n  findutils \\\n  gcc-c++ \\\n  gdb \\\n  gettext \\\n  git \\\n  libcurl-devel \\\n  libxml2-devel \\\n  libxslt-devel \\\n  lsof \\\n  make \\\n  mariadb-devel \\\n  mariadb-libs \\\n  openssl-devel \\\n  patch \\\n  postgresql-devel \\\n  procps-ng \\\n  scl-utils \\\n  sqlite-devel \\\n  tar \\\n  unzip \\\n  wget \\\n  which \\\n  yum-utils \\\n  zlib-devel && \\\n  yum clean all -y && \\\n  mkdir -p ${HOME} && \\\n  useradd -u 1001 -r -g 0 -d ${HOME} -s /sbin/nologin \\\n      -c \"Default Application User\" default && \\\n  chown -R 1001:0 /opt/app-root && rm -rf /var/cache/yum\n\n# Create directory where the image STI scripts will be located\n# Install the base-usage script with base image usage informations\nADD bin/base-usage /usr/bin/base-usage\n\n# Use entrypoint so path is correctly adjusted already at the time the command\n# is searching, so something like docker run IMG python runs binary from SCL\nADD bin/container-entrypoint /usr/bin/container-entrypoint\n\n# Directory with the sources is set as the working directory so all STI scripts\n# can execute relative to this path\nWORKDIR ${HOME}\n\nENTRYPOINT [\"container-entrypoint\"]\nCMD [\"base-usage\"]\n"
}