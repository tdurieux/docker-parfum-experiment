{
  "startTime": 1674243474229,
  "endTime": 1674243474427,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim@sha256:3e4be41076ebb6fe8c3112b220ce133ef0dc49c814024e4874ca76eae3c8dec0\nWORKDIR /app\nRUN groupadd --gid 10001 app && useradd -g app --uid 10001 --shell /usr/sbin/nologin app\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n    gcc libpq-dev curl apt-transport-https libffi-dev openssh-client gnupg python-dev libgmp3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install node from NodeSource\nRUN curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    echo 'deb https://deb.nodesource.com/node_8.x jessie main' > /etc/apt/sources.list.d/nodesource.list && \\\n    echo 'deb-src https://deb.nodesource.com/node_8.x jessie main' >> /etc/apt/sources.list.d/nodesource.list && \\\n    apt-get update && apt-get install --no-install-recommends -y nodejs && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./requirements /app/requirements\nCOPY ./package.json /app/package.json\nCOPY ./yarn.lock /app/yarn.lock\nRUN pip install --upgrade --no-cache-dir -r requirements/default.txt -r requirements/dev.txt && \\\n    yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY . /app\nRUN NODE_ENV=production yarn build && \\\n    DJANGO_CONFIGURATION=Build ./manage.py collectstatic --no-input && \\\n    mkdir -p media && chown app:app media\n\nUSER app\nENV DJANGO_SETTINGS_MODULE=normandy.settings \\\n    DJANGO_CONFIGURATION=Development \\\n    PORT=8000 \\\n    CMD_PREFIX=\"\" \\\n    NEW_RELIC_CONFIG_FILE=newrelic.ini\nEXPOSE $PORT\n\nCMD $CMD_PREFIX gunicorn \\\n    --log-file - \\\n    --worker-class ${GUNICORN_WORKER_CLASS:-sync} \\\n    --max-requests ${GUNICORN_MAX_REQUESTS:-0} \\\n    normandy.wsgi:application\n"
}