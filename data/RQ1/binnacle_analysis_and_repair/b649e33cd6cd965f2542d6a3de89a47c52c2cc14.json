{
  "startTime": 1674235903861,
  "endTime": 1674235903988,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 15,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.16\n\nMAINTAINER Ludovic Vannoorenberghe <ludo@datacamp.com>\n\nRUN apt-get update && apt-get install --no-install-recommends -y python build-essential && rm -rf /var/lib/apt/lists/*;\n\n# aws env\nRUN curl -f -o /tmp/aws-env-linux-amd64 -L https://github.com/datacamp/aws-env/releases/download/v0.1-session-fix/aws-env-linux-amd64 && \\\n  chmod +x /tmp/aws-env-linux-amd64 && \\\n  mv /tmp/aws-env-linux-amd64 /bin/aws-env\n\nRUN npm install -g pm2 node-gyp sails grunt bower jake npm-check-updates && npm cache clean --force;\n\nENV NODE_ENV production\n# use changes to package.json to force Docker not to use the cache\n# when we change our application's nodejs dependencies:\nADD package.json /tmp/package.json\nADD package-lock.json /tmp/package-lock.json\nRUN cd /tmp && npm install --unsafe-perm --production && npm cache clean --force;\nRUN mkdir -p /opt/app && cp -a /tmp/node_modules /opt/app/\n\n# From here we load our application's code in, therefore the previous docker\n# \"layer\" thats been cached will be used if possible\nWORKDIR /opt/app\nADD . /opt/app\n\n#Expose port\nEXPOSE 1337\n\nCMD bash -c \"eval $(aws-env) && npm start\"\n"
}