{
  "startTime": 1674243036132,
  "endTime": 1674243036258,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################################\n# multi stage Dockerfile for creating a Docker image\n# 1. set up the build environment and build the war files\n# 2. run an application server with the web applications from 1\n#########################################\nFROM maven:3-jdk-8 as builder\nLABEL maintainer=\"Peter Stadler for the TEI Council\"\n\nENV OXGARAGE_BUILD_HOME=\"/opt/oxgarage-build\"\n\nARG SAXON_URL=\"https://downloads.sourceforge.net/project/saxon/Saxon-HE/9.8/SaxonHE9-8-0-7J.zip\"\n\nADD ${SAXON_URL} /tmp/saxon.zip\n\nWORKDIR ${OXGARAGE_BUILD_HOME}\n\nCOPY . .\n\n# install and rename saxon jar to avoid class loader issues with old versions\n# see https://github.com/peterstadler/oxgarage-docker/issues/2#issuecomment-358663386\nRUN unzip /tmp/saxon.zip -d ${OXGARAGE_BUILD_HOME}/saxon \\ \n    && mv ${OXGARAGE_BUILD_HOME}/saxon/saxon9he.jar ${OXGARAGE_BUILD_HOME}/saxon/jsaxon9he.jar \n\n# build the application packages\nRUN mvn install:install-file -DgroupId=jpf-tools -DartifactId=jpf-tools -Dversion=1.5.1 -Dpackaging=jar -Dfile=jpf-tools.jar \\\n    && mvn install:install-file -DgroupId=com.artofsolving -DartifactId=jodconverter -Dversion=3.0-beta-4 -Dpackaging=jar -Dfile=jod-lib/jodconverter-core-3.0-beta-4.jar \\\n    && mvn install:install-file -DgroupId=com.sun.star -DartifactId=jurt  -Dversion=3.2.1 -Dpackaging=jar -Dfile=jod-lib/jurt-3.2.1.jar \\\n    && mvn install:install-file -DgroupId=com.sun.star -DartifactId=juh   -Dversion=3.2.1 -Dpackaging=jar -Dfile=jod-lib/juh-3.2.1.jar \\\n    && mvn install:install-file -DgroupId=com.sun.star -DartifactId=unoil -Dversion=3.2.1 -Dpackaging=jar -Dfile=jod-lib/unoil-3.2.1.jar \\\n    && mvn install:install-file -DgroupId=com.sun.star -DartifactId=ridl  -Dversion=3.2.1 -Dpackaging=jar -Dfile=jod-lib/ridl-3.2.1.jar \\\n    && mvn install:install-file -DgroupId=org.apache.commons.cli -DartifactId=commons-cli -Dversion=1.1 -Dpackaging=jar -Dfile=jod-lib/commons-cli-1.1.jar \\\n    && mvn install:install-file -DgroupId=net.sf.saxon -DartifactId=commons-cli -Dversion=9.8 -Dpackaging=jar -Dfile=${OXGARAGE_BUILD_HOME}/saxon/jsaxon9he.jar \\\n    && mvn install\n\n#########################################\n# Now configuring the application server\n# and adding our freshly built war packages\n#########################################\nFROM tomcat:7\n\nENV CATALINA_WEBAPPS ${CATALINA_HOME}/webapps\nENV OFFICE_HOME /usr/lib/libreoffice\n\nUSER root:root\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y --force-yes libreoffice \\\n    ttf-dejavu \\\n    fonts-arphic-ukai \\\n    fonts-arphic-uming \\\n    ttf-baekmuk \\\n    ttf-junicode \\\n    fonts-linuxlibertine \\\n    fonts-ipafont-gothic \\\n    fonts-ipafont-mincho \\\n    && ln -s ${OFFICE_HOME} /usr/lib/openoffice \\\n    && rm -rf /var/lib/apt/lists/*\n\n# copy some settings and entrypoint script\nCOPY ege-webservice/src/main/webapp/WEB-INF/lib/oxgarage.properties /etc/\nCOPY log4j.xml /var/cache/oxgarage/log4j.xml\nCOPY docker-entrypoint.sh /my-docker-entrypoint.sh\n\n# copy build artifacts\nCOPY --from=builder /opt/oxgarage-build/ege-webclient/target/ege-webclient.war /tmp/ege-webclient.war\nCOPY --from=builder /opt/oxgarage-build/ege-webservice/target/ege-webservice.war /tmp/ege-webservice.war\n\nRUN rm -Rf ${CATALINA_WEBAPPS}/ROOT \\\n    && unzip -q /tmp/ege-webclient.war -d ${CATALINA_WEBAPPS}/ROOT/ \\\n    && unzip -q /tmp/ege-webservice.war -d ${CATALINA_WEBAPPS}/ege-webservice/ \\\n    && rm /tmp/ege-webclient.war \\\n    && rm /tmp/ege-webservice.war \\\n    && chmod 755 /my-docker-entrypoint.sh\n\nVOLUME [\"/usr/share/xml/tei/stylesheet\", \"/usr/share/xml/tei/odd\"]\n\nEXPOSE 8080 8081\n\nENTRYPOINT [\"/my-docker-entrypoint.sh\"]\nCMD [\"catalina.sh\", \"run\"]\n"
}