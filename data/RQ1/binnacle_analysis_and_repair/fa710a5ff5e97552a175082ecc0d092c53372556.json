{
  "startTime": 1674240434304,
  "endTime": 1674240434479,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN touch /tmp/cache_spoof_1\n\n\n# START TZCONFIG FIX suggested in:\n# https://stackoverflow.com/a/47909037/1315369\n# The tzdata package was expecting interaction to configure it\n\n## for apt to be noninteractive\nENV DEBIAN_FRONTEND noninteractive\nENV DEBCONF_NONINTERACTIVE_SEEN true\n\n## preset tzdata, update package index, upgrade packages and install needed software\nRUN echo \"tzdata tzdata/Areas select Europe\" > /tmp/preseed.txt; \\\n    echo \"tzdata tzdata/Zones/Europe select Berlin\" >> /tmp/preseed.txt; \\\n    debconf-set-selections /tmp/preseed.txt && \\\n    rm -f /etc/timezone && \\\n    rm -f /etc/localtime && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;\n\n## cleanup of files from setup\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# END TZCONFIG FIX\n\n# universe in bionic has a Package: fontforge (1:20170731~dfsg-1)\n# while the ppa currently has no newer version and no bionic version yet\n# TODO: re-check and insrt the following line before the \"&& apt-get update \\\" line\n#     && add-apt-repository ppa:fontforge/fontforge \\\n\nRUN apt-get update && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y software-properties-common \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y curl libicu-dev \\\n                          fontforge-nox python-fontforge git build-essential \\\n                          libssl-dev libffi-dev python-dev libxmlsec1-dev \\\n                          libxml2 libxml2-dev tzdata python3-minimal; rm -rf /var/lib/apt/lists/*;\n\n# RUN curl -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py; python /tmp/get-pip.py;\nRUN curl -f -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py; python3 /tmp/get-pip.py;\n\nrun pip install --no-cache-dir --upgrade pip\n\n# FIXME!\n# Also, fontbakery should come with all requirements in it's setup.py\n# how does fontTools or defcon handle this?\n# ADD requirements.txt /\n# RUN pip install --no-cache-dir -r requirements.txt\n\n# FIXME: need all external dependencies\n# ADD prebuilt/ot-sanitise /usr/local/bin/\n\n# This is taking forever to compile, so it slows down reiterations\n# it's a dependency of fontbakery. Adding it early, so it is cached\n# by the docker build\n# This is bad: fontbakery requirements.txt needs a version and setup.py doesn't, we\n# install from both ...\nRUN pip install --no-cache-dir lxml; # ==3.5.0\n\nADD requirements.txt /var/python/requirements.txt\nRUN pip install --no-cache-dir -r /var/python/requirements.txt\n\nRUN touch /tmp/cache_spoof_18\n\n# FIXME: doesn't install all dependencies!\n# RUN pip install git+https://github.com/graphicore/fontbakery@dashboard_related\n\n#RUN git clone --depth 1 -b p3_fixes git://github.com/graphicore/fontbakery /var/fontbakery;\\\n#RUN git clone --depth 1 -b master git://github.com/googlefonts/fontbakery /var/fontbakery;\\\n#    pip install /var/fontbakery;\n\nRUN pip install --no-cache-dir fontbakery;\n\nRUN touch /tmp/cache_spoof_2\n\n# in update_protobufs.sh the command `python -m grpc_tools.protoc`\n# doesn't create python 3 ready relative imports\n# see: https://github.com/protocolbuffers/protobuf/issues/1491\n# setting PYTHONPATH ths way helps.\nENV PYTHONPATH=\"/var/python/protocolbuffers/:${PYTHONPATH}\"\n\nADD . /var/python/\n"
}