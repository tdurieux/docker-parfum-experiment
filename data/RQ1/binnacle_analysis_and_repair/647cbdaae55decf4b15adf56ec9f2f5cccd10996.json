{
  "startTime": 1674234418578,
  "endTime": 1674234419489,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 2,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 2,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 2,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 2,
        "columnEnd": 157
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 160,
        "lineEnd": 177,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# ffmpeg - http://ffmpeg.org/\n# Read Ubuntu https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n# hub https://hub.docker.com/r/sitkevij/ffmpeg/\n# docker run --entrypoint \"apt-cache\" ffmpeg3 rdepends libass-dev\n#\nFROM        ubuntu:16.04\n# FROM        debian:stretch\n# see https://hub.docker.com/r/blitznote/debootstrap-amd64/\n# FROM        blitznote/debootstrap-amd64:16.04\n\nCMD         [\"--help\"]\nENTRYPOINT  [\"ffmpeg\"]\nWORKDIR     /tmp/ffmpeg-workdir\n\nENV SRC=/usr/local \\\n    LD_LIBRARY_PATH=${SRC}/lib \\  \n    PKG_CONFIG_PATH=${SRC}/lib/pkgconfig \\\n    BIN=${SRC}/bin \\\n    NASM_VERSION=2.13.01 \\\n    FFMPEG_VERSION=snapshot \\ \n    VPX_VERSION=1.6.1 \\\n    LIBASS_VERSION=0.13.7 \\ \n    GET=\"curl -Os -L\" \\\n    DEBIAN_FRONTEND=noninteractive\n\nRUN BUILD_DEP=\"autoconf \\\n    automake \\\n    cmake \\\n    curl \\\n    bzip2 \\\n    libexpat1-dev \\\n    g++ \\\n    gcc \\\n    gperf \\\n    libtool \\\n    make \\\n   # perl \\\n    pkg-config \\\n   # python \\\n    libssl-dev \\\n    yasm \\\n    zlib1g-dev\" && \\\n  export MAKEFLAGS=\"-j$(($(nproc) + 1))\" && \\\n  apt-get -yqq update && \\\n  apt-get install -yq --no-install-recommends ${BUILD_DEP} ca-certificates expat libgomp1 && rm -rf /var/lib/apt/lists/*;\n\nENV   CD='cd(){ builtin cd \"${@:1:1}\"; }; cd '\n\n# nasm\nRUN cd $SRC && \\ \n  $GET http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 && \\\n  tar xjvf nasm-$NASM_VERSION.tar.bz2 && \\\n  cd nasm-$NASM_VERSION && ./autogen.sh && \\\n  PATH=\"$BIN:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" --bindir=\"$BIN\" && \\\n  PATH=\"$BIN:$PATH\" make && \\\n  make install && rm nasm-$NASM_VERSION.tar.bz2\n\n# freebidi\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  $GET https://www.fribidi.org/download/fribidi-0.19.7.tar.bz2 && \\\n  tar xvf fribidi-0.19.7.tar.bz2 &&  \\\n  cd fribidi-0.19.7 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" && \\\n  make && \\\n  make install && \\\n  make distclean && \\\n  rm -rf ${DIR} && rm fribidi-0.19.7.tar.bz2\n\n# freetype --without-harfbuzz\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  $GET https://downloads.sourceforge.net/freetype/freetype-2.8.tar.bz2 && \\\n  tar xvf freetype-2.8.tar.bz2 &&  \\\n  cd freetype* && \\\n  sed -ri \"s:.*(AUX_MODULES.*valid):\\1:\" modules.cfg && \\\n  sed -r \"s:.*(#.*SUBPIXEL_RENDERING) .*:\\1:\" \\\n    -i include/freetype/config/ftoption.h && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" && \\\n  make && \\\n  make install && \\\n  # make distclean && \\\n  rm -rf ${DIR} && rm freetype-2.8.tar.bz2\n\n# fontconfig\n#RUN DIR=$(mktemp -d) && cd ${DIR} && \\\n#  $GET https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.12.4.tar.bz2 &&  \\\n#  tar xvf fontconfig-2.12.4.tar.bz2 &&  \\\n#  cd fontconfig* && \\\n#  rm -f src/fcobjshash.h && \\\n#  ./configure --prefix=\"$SRC\" --sysconfdir=/etc --localstatedir=/var \\\n#            --disable-docs       \\\n#            --docdir=/usr/share/doc/fontconfig-2.12.4 && \\\n#  make && \\\n#  make install && \\\n#  make distclean && \\\n#  rm -rf ${DIR}\n\n# libass http://www.linuxfromscratch.org/blfs/view/svn/multimedia/libass.html\n# https://github.com/libass/libass/releases/download/0.13.7/libass-0.13.7.tar.xz\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  $GET https://github.com/libass/libass/releases/download/0.13.7/libass-$LIBASS_VERSION.tar.gz && \\\n  tar xzvf libass-$LIBASS_VERSION.tar.gz && \\\n  cd libass* && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" --disable-require-system-font-provider && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libass-$LIBASS_VERSION.tar.gz\n\n# fdk-aac\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  curl -f -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master && \\\n  tar xzvf fdk-aac.tar.gz && \\\n  cd mstorsjo-fdk-aac* && \\\n  autoreconf -fiv && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" --disable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm fdk-aac.tar.gz\n\n# x264\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  curl -f -Os -L ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 && \\\n  tar xvf last_x264.tar.bz2 && \\\n  cd x264* && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" --bindir=\"$BIN\" --enable-static && \\\n  make && \\\n  make install && \\\n  make distclean && \\\n  rm -rf ${DIR} && rm last_x264.tar.bz2\n\n# x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  $GET https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz && \\\n  tar xzvf x265_2.5.tar.gz && \\\n  cd x265*/build/linux && \\\n  # ./make-Makefiles.bash\n  # cmake -G \"Unix Makefiles\" ../../source && ccmake ../../source\n  PATH=\"$BIN:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$SRC\" -DENABLE_SHARED:bool=off ../../source && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm x265_2.5.tar.gz\n\n# https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz\n# curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \\\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  $GET https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz && \\\n  # tar -zx --strip-components=1 && \\\n  tar xzvf v1.6.1.tar.gz && \\\n  cd *1.6.1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$SRC\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \\\n  make && \\\n  make install && \\\n  make distclean && \\\n  rm -rf ${DIR} && rm v1.6.1.tar.gz\n\n# snapshot http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n  $GET http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n  tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n  cd ffmpeg* && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --pkg-config-flags=\"--static\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" \\\n  --disable-debug \\\n  --disable-doc \\\n  --disable-ffplay \\\n  --enable-avresample \\\n  --enable-gpl \\\n  --enable-libass \\\n  # --enable-libfaac \\\n  --enable-libfdk_aac \\\n  # --enable-libmp3lame \\\n  --enable-libvpx \\\n  --enable-libx264 \\\n  --enable-libx265 \\\n  # --enable-libxvid \\\n  --enable-nonfree \\\n  --enable-postproc \\\n  --enable-small \\\n  --enable-version3 && \\\n  make && \\\n  make install && \\\n  make distclean && \\\n  hash -r && \\\n  rm -rf ${DIR} && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\n# cleanup\nRUN cd && \\\n    echo \"removing ${BUILD_DEP}\" && \\\n    apt-get purge -y ${BUILD_DEP} && \\\n    apt-get autoremove -y && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists && \\\n    ldconfig && \\\n    ffmpeg -buildconf\n"
}