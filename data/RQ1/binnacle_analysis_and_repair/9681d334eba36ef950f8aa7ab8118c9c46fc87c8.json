{
  "startTime": 1674250346989,
  "endTime": 1674250348775,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 7,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 256,
        "lineEnd": 256,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 264,
        "lineEnd": 264,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 281,
        "lineEnd": 281,
        "columnStart": 19,
        "columnEnd": 158
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 301,
        "lineEnd": 301,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 281,
        "lineEnd": 281,
        "columnStart": 19,
        "columnEnd": 158
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 36,
        "columnEnd": 133
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 142,
        "columnStart": 7,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG OS_VER=latest\n\n\nFROM centos:$OS_VER\nMAINTAINER liufee job@feehi.com\n\n\n#root用户密码\nARG ROOT_PASSWORD=123456\n#php版本,因为php版本间配置文件模板不相同，此处的版本号只能为大于7.0以上版本\nARG PHP_VER=7.2.8\n#nginx版本\nARG NGINX_VER=1.15.2\n#mysql版本\nARG MYSQL_VER=5.7.23\n#redis版本\nARG REDIS_VER=4.0.11\n#redis密码\nARG REDIS_PASS=123456\n#phpmyadmin版本\nARG PHPMYADMIN_VER=4.7.6\n#mysql data目录\nARG MYSQL_DATA_DIR=/data/mysql\n#mysql pid目录\nARG MYSQL_PID_DIR=/var/run/mysql\n#mysql log目录\nARG MYSQL_LOG_DIR=/var/log/mysql\n#mysql sock目录\nARG MYSQL_SOCK_DIR=/var/lib/mysql\n#xhprof版本\nARG XHPROF_VER=1.2\n#hiredis版本\nARG HIREDIS_VER=0.13.3\n#swoole版本\nARG SWOOLE_VER=4.0.4\n#go版本\nARG GO_VER=1.10.3\n#node.js版本\nARG NODE_VER=8.11.4\n#mongodb版本\nARG MONGODB_VER=4.0.1\n#mongodb data目录\nARG MONGODB_DATA_DIR=/data/mongodb\n#java版本\nARG JDK_VER=1.8\n#maven版本\nARG MAVEN_VER=3.6.0\n\n\n#映射配置文件\nADD ./etc /usr/src/etc\n\n\n#基础环境配置\nRUN yum install vim wget git net-tools -y \\\n    && yum install epel-release -y \\\n    && yum update -y \\\n    && yum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel \\\n        libpng libpng-devel curl curl-devel libicu libicu-devel libmcrypt  libmcrypt-devel freetype freetype-devel \\\n        libmcrypt libmcrypt-devel autoconf gcc-c++ gcc make automake cmake ncurses-devel bison bison-devel\\\n    && yum install vixie-cron crontabs -y \\\n    && yum install python-setuptools -y \\\n    && easy_install supervisor \\\n    && yum install openssh-server -y \\\n    && echo PermitRootLogin  yes >> /etc/ssh/sshd_config \\\n    && echo PasswordAuthentication yes >> /etc/ssh/sshd_config \\\n    && echo RSAAuthentication yes >> etc/ssh/sshd_config \\\n    && sed -i \"s/UseDNS yes/UseDNS no/\" /etc/ssh/sshd_config \\\n    && echo \"root:$ROOT_PASSWORD\" | chpasswd \\\n    && ssh-keygen -t dsa -f /etc/ssh/ssh_host_rsa_key \\\n    && ssh-keygen -t rsa -f /etc/ssh/ssh_host_ecdsa_key \\\n    && ssh-keygen -t rsa -f /etc/ssh/ssh_host_ed25519_key \\\n    && yum clean all && rm -rf /var/cache/yum/*\n\n\n#安装php\nRUN cd /usr/src \\\n    && curl -f -o php.tar.gz https://php.net/get/php-${PHP_VER}.tar.gz/from/this/mirror -L \\\n    && mkdir php \\\n    && tar -xzvf php.tar.gz -C ./php --strip-components 1 \\\n    && cd php \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/php --with-config-file-path=/etc/php --enable-soap --enable-mbstring=all \\\n        --enable-sockets --enable-fpm --with-gd --with-freetype-dir=/usr/include/freetype2/freetype \\\n        --with-jpeg-dir=/usr/lib64 --with-zlib --with-iconv --enable-libxml --enable-xml --enable-intl \\\n        --enable-zip --enable-pcntl --enable-bcmath --enable-maintainer-zts --with-curl --with-mcrypt --with-openssl \\\n        --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \\\n    && make \\\n    && make install \\\n    && mkdir /etc/php \\\n    && cp /usr/src/php/php.ini-development /etc/php/php.ini \\\n    && echo $MYSQL_SOCK_DIR > /tmp/temp_mysql_sock_dir.txt && temp_mysql_sock_dir=$(sed \"s/\\//\\\\\\\\\\//g\" /tmp/temp_mysql_sock_dir.txt) && rm -rf /tmp/temp_mysql_sock_dir.txt \\\n    && sed -i \"s/mysqli.default_socket =/mysqli.default_socket = ${temp_mysql_sock_dir}\\/mysql.sock/\" /etc/php/php.ini \\\n    && sed -i \"s/pdo_mysql.default_socket=/pdo_mysql.default_socket = ${temp_mysql_sock_dir}\\/mysql.sock/\" /etc/php/php.ini \\\n    && cp /usr/src/php/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm \\\n    && chmod +x /etc/init.d/php-fpm \\\n    && cd /usr/local/php/etc \\\n    && cp php-fpm.conf.default php-fpm.conf \\\n    && sed -i \"s/;daemonize = yes/daemonize = no/\" php-fpm.conf \\\n    && cp ./php-fpm.d/www.conf.default ./php-fpm.d/www.conf \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/php\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && sed -i \"s/export PATH/PATH=\\/etc\\/init.d:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && rm -rf /usr/src/php.tar.gz && rm -rf /usr/src/php \\\n    #php redis扩展\n    && /usr/local/php/bin/pecl install redis && echo \"extension=redis.so\" >> /etc/php/php.ini \\\n    #php swoole扩展\n    && cd /usr/src && curl -f -o hiredis.tar.gz https://github.com/redis/hiredis/archive/v${HIREDIS_VER}.tar.gz -L && mkdir hiredis && tar -xzvf hiredis.tar.gz -C ./hiredis --strip-components 1 \\\n    && cd hiredis && make && make install && mkdir /usr/lib/hiredis && cp libhiredis.so /usr/lib/hiredis && mkdir /usr/include/hiredis && cp hiredis.h /usr/include/hiredis \\\n    && echo '/usr/local/lib' >> /etc/ld.so.conf && ldconfig \\\n    && /usr/local/php/bin/pecl download swoole-${SWOOLE_VER} && tar -zxvf swoole-${SWOOLE_VER}.tgz && cd swoole-${SWOOLE_VER} \\\n    && /usr/local/php/bin/phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config --enable-openssl --enable-async-redis && make && make install \\\n    && echo \"extension=swoole.so\" >> /etc/php/php.ini && rm -rf /usr/src/hiredis.tar.gz && rm -rf /usr/src/hiredis && rm -rf swoole-${SWOOLE_VER}.tgz && rm -rf swoole-${SWOOLE_VER} \\\n    #php xhprof扩展\n    && cd /usr/src \\\n    && curl -f -o xhprof.tar.gz https://github.com/longxinH/xhprof/archive/v${XHPROF_VER}.tar.gz -L \\\n    && tar -xvf xhprof.tar.gz \\\n    && cd xhprof-${XHPROF_VER}/extension \\\n    && /usr/local/php/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config --enable-xhprof && make && make install \\\n    && mkdir -p -m 777 /tmp/xhprof \\\n    && echo -e \"[xhprof]\\nextension = xhprof.so\\nxhprof.output_dir = /tmp/xhprof\" >> /etc/php/php.ini \\\n    && mkdir /var/tools \\\n    && cd /usr/src/xhprof-${XHPROF_VER} \\\n    && mv xhprof_html /var/tools/ \\\n    && mv xhprof_lib /usr/local/php/lib/php \\\n    && sed -i \"s/dirname(__FILE__) . '\\/..\\/xhprof_lib'/'xhprof_lib'/\" /var/tools/xhprof_html/index.php \\\n    && sed -i \"s/dirname(__FILE__) . '\\/..\\/xhprof_lib'/'xhprof_lib'/\" /var/tools/xhprof_html/callgraph.php \\\n    && sed -i \"s/dirname(__FILE__) . '\\/..\\/xhprof_lib'/'xhprof_lib'/\" /var/tools/xhprof_html/typeahead.php \\\n    && rm -rf /usr/src/xhprof-${XHPROF_VER} && rm -rf /usr/src/xhprof.tar.gz\n\n\n\n#安装nginx\nRUN cd /usr/src \\\n    && curl -f -o nginx.tar.gz https://nginx.org/download/nginx-${NGINX_VER}.tar.gz -L \\\n    && mkdir nginx && tar -xzvf nginx.tar.gz -C ./nginx --strip-components 1 \\\n    && cd nginx \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock \\\n        --user=nginx --group=nginx --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module \\\n        --with-http_gzip_static_module --http-client-body-temp-path=/tmp/nginx/client/ \\\n        --http-proxy-temp-path=/tmp/nginx/proxy/ \\\n        --http-fastcgi-temp-path=/tmp/nginx/fcgi/ \\\n        --with-pcre --with-http_dav_module \\\n    && make && make install \\\n    && useradd nginx \\\n    && mkdir -p -m 777 /tmp/nginx \\\n    && echo \"#!/bin/sh\" > /etc/init.d/nginx \\\n    && echo \"#description: Nginx web server.\" >> /etc/init.d/nginx \\\n    && echo -e \"case \\$1 in \\n\\\n            restart): \\n\\\n                /usr/local/nginx/sbin/nginx -s reload \\n\\\n                ;; \\n\\\n            stop): \\n\\\n                /usr/local/nginx/sbin/nginx -s stop \\n\\\n                ;; \\n\\\n            *): \\n\\\n                /usr/local/nginx/sbin/nginx \\n\\\n                ;; \\n\\\n        esac \\n\" >> /etc/init.d/nginx \\\n    && chmod +x /etc/init.d/nginx \\\n    #&& sed -i \"3a daemon off;\" /etc/nginx/nginx.conf \\\n    #&& sed -i \"s/index  index.html index.htm;/index  index.php index.html index.htm;/\" /etc/nginx/nginx.conf \\\n    #&& sed -i \"s/# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000/location ~ \\.php\\$ { \\nfastcgi_pass 127.0.0.1:9000;\\nfastcgi_index  index.php;\\nfastcgi_param  SCRIPT_FILENAME  \\$document_root\\$fastcgi_script_name;\\ninclude fastcgi_params;\\n }/\" /etc/nginx/nginx.conf \\\n    && echo \"<?php phpinfo()?>\" > /usr/local/nginx/html/index.php \\\n    && rm -rf /etc/nginx && cp -rf /usr/src/etc/nginx /etc/nginx \\\n    && mkdir -m 777 -p /var/log/nginx \\\n    && rm -rf /usr/src/nginx.tar.gz && rm -rf /usr/src/nginx\n\n\n\n#安装mysql\nRUN cd /usr/src \\\n    && curl -f -o mysql.tar.gz https://dev.mysql.com/get/Downloads/MySQL-${MYSQL_VER%.*}/mysql-boost-${MYSQL_VER}.tar.gz -L \\\n    && tar zxf mysql.tar.gz \\\n    && cd mysql-${MYSQL_VER} \\\n    && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DWITH_BOOST=./boost -DMYSQL_DATADIR=${MYSQL_DATA_DIR} -DSYSCONFDIR=/etc -DWITH_MYISAM_STORAGE_ENGINE=1 \\\n        -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DMYSQL_UNIX_ADDR=${MYSQL_SOCK_DIR}/mysql.sock -DMYSQL_TCP_PORT=3306 \\\n        -DENABLED_LOCAL_INFILE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_UNIT_TESTS=OFF \\\n    && gmake \\\n    && gmake install \\\n    && mkdir -p ${MYSQL_DATA_DIR} \\\n    && mkdir -m 755 -p ${MYSQL_LOG_DIR} \\\n    && mkdir -m 755 -p ${MYSQL_SOCK_DIR} \\\n    && mkdir -m 755 -p ${MYSQL_PID_DIR} \\\n    && echo -e \"[mysqld]\\ndatadir=${MYSQL_DATA_DIR}\\nsocket=${MYSQL_SOCK_DIR}/mysql.sock\\nsymbolic-links=0\\nlog-error=${MYSQL_LOG_DIR}/mysqld.log\\npid-file=${MYSQL_PID_DIR}/mysqld.pid\\nuser=root\\n\" > /etc/my.cnf \\\n    && echo -e \"#!/bin/sh \\n\\\n        files=\\`ls ${MYSQL_DATA_DIR}\\` \\n\\\n        if [ -z \\\"\\$files\\\" ];then \\n\\\n            if [ ! \\${MYSQL_PASSWORD} ]; then \\n\\\n                MYSQL_PASSWORD='123456' \\n\\\n            fi \\n\\\n            /usr/local/mysql/bin/mysqld --initialize --basedir=/usr/local/mysql --datadir=${MYSQL_DATA_DIR} > ${MYSQL_LOG_DIR}/mysqld.log 2>&1 \\n\\\n            MYSQLOLDPASSWORD=\\`awk -F \\\"localhost: \\\" '/A temporary/{print \\$2}' ${MYSQL_LOG_DIR}/mysqld.log\\` \\n\\\n            /usr/local/mysql/bin/mysqld & \\n\\\n            echo -e \\\"[client] \\\\\\n  password=\\\"\\${MYSQLOLDPASSWORD}\\\" \\\\\\n user=root\\\" > ~/.my.cnf \\n\\\n            sleep 8s \\n\\\n            /usr/local/mysql/bin/mysql --connect-expired-password -e \\\"alter user 'root'@'localhost' identified by '\\$MYSQL_PASSWORD';update mysql.user set host='%' where user='root' && host='localhost';flush privileges;\\\" \\n\\\n            echo -e \\\"[client] \\\\\\n  password=\\\"\\${MYSQL_PASSWORD}\\\" \\\\\\n user=root\\\" > ~/.my.cnf \\n\\\n            while true \\n\\\n            do \\n\\\n              let \\\"1\\\" \\n\\\n            done \\n\\\n        else \\n\\\n            rm -rf \\${MYSQL_SOCK_DIR}/mysql.sock.lock \\n\\\n            /usr/local/mysql/bin/mysqld \\n\\\n        fi\" > /mysql.sh \\\n    && chmod +x /mysql.sh \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/mysql\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && rm -rf /usr/src/mysql.tar.gz && rm -rf /usr/src/mysql-${MYSQL_VER} && rm -rf /usr/local/mysql/mysql-test \\\n    && rm -rf /usr/local/mysql/bin/mysql_client_test && rm -rf /usr/local/mysql/bin/mysql_client_test_embedded && rm -rf /usr/local/mysql/bin/mysql_embedded \\\n    && rm -rf /usr/local/mysql/bin/mysqltest && rm -rf /usr/local/mysql/bin/mysqltest_embedded && rm -rf /usr/local/mysql/lib/libmysql.a\n\n\n#安装redis server\nRUN cd /usr/src \\\n    && curl -f -o redis.tar.gz https://download.redis.io/releases/redis-${REDIS_VER}.tar.gz -L \\\n    && mkdir redis \\\n    && tar -xzvf redis.tar.gz -C ./redis --strip-components 1 \\\n    && cd redis \\\n    && make \\\n    && make install \\\n    && mkdir -p /usr/local/redis/bin \\\n    && cp ./src/redis-server /usr/local/redis/bin/ \\\n    && cp ./src/redis-cli /usr/local/redis/bin/ \\\n    && cp ./src/redis-benchmark /usr/local/redis/bin/ \\\n    && cp ./redis.conf /etc/redis.conf \\\n    && sed -i 's/bind 127.0.0.1/bind 0.0.0.0/' /etc/redis.conf \\\n    && sed -i \"s/# requirepass foobared/requirepass ${REDIS_PASS}/\" /etc/redis.conf \\\n    && echo -e \"# description: Redis server. \\n\\\n         case \\$1 in \\n\\\n            restart): \\n\\\n                /usr/local/redis/bin/redis-cli -h 127.0.0.1 -p 6379 -a 123456 shutdown \\n\\\n                /usr/local/redis/bin/redis-server /etc/redis.conf \\n\\\n                ;; \\n\\\n            stop): \\n\\\n                /usr/local/redis/bin/redis-cli -h 127.0.0.1 -p 6379 -a 123456 shutdown \\n\\\n                ;; \\n\\\n            *): \\n\\\n                /usr/local/redis/bin/redis-server /etc/redis.conf \\n\\\n         esac\" > /etc/init.d/redis \\\n    && chmod +x /etc/init.d/redis \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/redis\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && rm -rf /usr/src/redis.tar.gz && rm -rf /usr/src/redis\n\n\n#安装go\nRUN cd /usr/src \\\n    && curl -f -o go.tar.gz https://studygolang.com/dl/golang/go${GO_VER}.linux-amd64.tar.gz -L \\\n    && mkdir /usr/local/go \\\n    && tar -xzvf go.tar.gz -C /usr/local/go  --strip-components 1 \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/go\\/bin:\\$HOME\\/go\\/bin:\\$PATH\\nGOPATH=\\$HOME\\/go\\nexport GOPATH\\nexport PATH/\" /etc/profile \\\n    && sed -i 's/export PATH USER/export PATH USER GOPATH/' /etc/redis.conf \\\n    && rm -rf go.tar.gz\n\n\n#安装node.js\nRUN curl -f -o node.tar.xz https://nodejs.org/dist/v${NODE_VER}/node-v${NODE_VER}-linux-x64.tar.xz && tar -xvf node.tar.xz \\\n    && mv node-v${NODE_VER}-linux-x64 /usr/local/node \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/node\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && source /etc/profile && /usr/local/node/bin/npm install -g cnpm --registry=https://registry.npm.taobao.org \\\n    && rm -rf node.tar.gz\n\n\n#安装mongodb\nRUN curl -f -o mongodb.tar.gz https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-${MONGODB_VER}.tgz && tar -xvf mongodb.tar.gz \\\n    && mkdir -p ${MONGODB_DATA_DIR} && mv mongodb-linux-x86_64-${MONGODB_VER} /usr/local/mongodb \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/mongodb\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && mkdir -p /var/log/mongodb \\\n    && echo -e \"fork=false\\njournal=true\\nquiet=false\\nlogpath=/var/log/mongodb/mongodb.log\\nlogappend=true\\nport=27017\\ndbpath=${MONGODB_DATA}\\nbind_ip=0.0.0.0\" > /etc/mongod.conf \\\n    && rm -rf mongodb.tar.gz\n\n\n#安装Java JDK\nRUN cd /usr/src \\\n    && curl -f -o jdk.tar.gz https://d.feehi.com/jdk-${JDK_VER} -L \\\n    && mkdir -p /usr/local/java && tar -xzvf jdk.tar.gz -C /usr/local/java --strip-components 1 \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/java\\/bin:\\$PATH\\nJAVA_HOME=\\/usr\\/local\\/java\\nJRE_HOME=\\/usr\\/local\\/java\\/jre\\nCLASSPATH=\\.:\\$JAVA_HOME\\/lib:\\$JRE_HOME\\/lib\\nexport JAVA_HOME JRE_HOME CLASSPATH\\nexport PATH/\" /etc/profile \\\n    && rm -rf jdk.tar.gz\n\n\n#安装maven\nRUN cd /usr/src && curl -f -o maven.tar.gz https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VER}/binaries/apache-maven-${MAVEN_VER}-bin.tar.gz -L \\\n    && tar -xvf maven.tar.gz && mv apache-maven-${MAVEN_VER} /usr/local/maven \\\n    && sed -i \"s/<mirrors>/<mirrors><mirror><id>nexus-aliyun<\\/id><mirrorOf>central<\\/mirrorOf><name>Nexus aliyun<\\/name><url>http:\\/\\/maven.aliyun.com\\/nexus\\/content\\/groups\\/public<\\/url><\\/mirror>/\" /usr/local/maven/conf/settings.xml \\\n    && sed -i \"s/export PATH/MAVEN_HOME=\\/usr\\/local\\/maven \\nexport MAVEN_HOME\\nPATH=\\/usr\\/local\\/maven\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && rm -rf maven.tar.gz\n\n\n#安装必要的服务\nRUN cd /usr/src \\\n    && /usr/local/php/bin/php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && /usr/local/php/bin/php composer-setup.php  --install-dir=/usr/local/bin --filename=composer \\\n    && rm -rf composer-setup.php \\\n    && /usr/local/php/bin/php /usr/local/bin/composer config -g repo.packagist composer https://packagist.laravel-china.org \\\n    && /usr/local/php/bin/php /usr/local/bin/composer create-project -s dev erik-dubbelboer/php-redis-admin /var/tools/phpredisadmin -vvv \\\n    && cd /var/tools/phpredisadmin && cp includes/config.sample.inc.php includes/config.inc.php \\\n    && sed -i \"s/=> 'local server'/=> 'feehi server'/\" includes/config.inc.php \\\n    && sed -i \"s/\\/\\/'auth' => 'redispasswordhere'/'auth' => '${REDIS_PASS}'/\" includes/config.inc.php \\\n    && sed -i \"s/'scansize' => 1000/'scansize' => 1000,\\n'login' => array('admin' => array('password' => '${REDIS_PASS}')),/\" includes/config.inc.php \\\n    && rm -rf /root/.composer/cache/ \\\n    && cd /usr/src \\\n    && curl -f -o phpmyadmin.tar.gz https://files.phpmyadmin.net/phpMyAdmin/${PHPMYADMIN_VER}/phpMyAdmin-${PHPMYADMIN_VER}-all-languages.tar.gz \\\n    && mkdir -p /var/tools/phpmyadmin \\\n    && tar -xzvf phpmyadmin.tar.gz -C /var/tools/phpmyadmin --strip-components 1 \\\n    && rm -rf /usr/src/phpmyadmin.tar.gz\n\n\n#环境变量设置\nENV PATH /usr/local/php/bin:/etc/init.d:/usr/local/mysql/bin:/usr/local/redis/bin:/usr/local/go/bin:/root/go/bin:/usr/local/node/bin:/usr/local/mongodb/bin:usr/local/java/bin:/usr/local/maven/bin:$PATH\nENV GOPATH /root/go\nENV JAVA_HOME /usr/local/java\nENV JRE_HOME /usr/local/java/jre\nENV CLASSPATH .:$JAVA_HOME/lib:/$JRE_HOME/lib:$CLASSPATH\nENV MAVEN_HOME /usr/local/maven\n\n\n#服务器基础设置\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && echo 'Asia/Shanghai' > /etc/timezonesource \\\n    && source /etc/profile \\\n    &&echo [supervisord] > /etc/supervisord.conf \\\n    && echo nodaemon=true >> /etc/supervisord.conf \\\n    && echo user=root >> /etc/supervisord.conf \\\n    \\\n    && echo [program:sshd] >> /etc/supervisord.conf \\\n    && echo command=/usr/sbin/sshd -D >> /etc/supervisord.conf \\\n    \\\n    && echo [program:nginx] >> /etc/supervisord.conf \\\n    && echo command=/usr/local/nginx/sbin/nginx >> /etc/supervisord.conf \\\n    \\\n    && echo [program:php-fpm] >> /etc/supervisord.conf \\\n    && echo command=/usr/local/php/sbin/php-fpm >> /etc/supervisord.conf \\\n    \\\n    && echo [program:mysqld] >> /etc/supervisord.conf \\\n    && echo command=/bin/sh /mysql.sh >> /etc/supervisord.conf \\\n    \\\n    && echo [program:redis] >> /etc/supervisord.conf \\\n    && echo command=/usr/local/redis/bin/redis-server /etc/redis.conf >> /etc/supervisord.conf \\\n    \\\n    && echo [program:mongodb] >> /etc/supervisord.conf \\\n    && echo command=/usr/local/mongodb/bin/mongod -f /etc/mongod.conf >> /etc/supervisord.conf \\\n    \\\n    && echo [program:crond] >> /etc/supervisord.conf \\\n    && echo command=/usr/sbin/crond -n >> /etc/supervisord.conf\n\n\nEXPOSE 80 3306 6379 27017\n\n\nCMD [\"/usr/bin/supervisord\"]\n"
}