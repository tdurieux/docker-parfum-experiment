{
  "startTime": 1674239599867,
  "endTime": 1674239600294,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#----------------------------------------------------\nFROM crs4_pydoop/base:latest\n\n# ------------------------------------------------------------------\n# Get zookeeper\n\nENV zoo_ver zookeeper-3.4.6\nENV zoo_tgz ${zoo_ver}.tar.gz\nENV zoo_site http://mirror.nohup.it/apache/zookeeper\nENV zoo_tgz_site ${zoo_site}/${zoo_ver}\n\nRUN wget ${zoo_tgz_site}/${zoo_tgz} -O ${zoo_tgz} && \\\n    mkdir -p /opt && tar -C /opt -xzf ${zoo_tgz} && rm -f ${zoo_tgz} && \\\n    ln -s /opt/${zoo_ver} /opt/zookeeper\n\nENV ZOO_DATA_DIR      /data/zookeeper/data\nENV ZOO_CLIENT_PORT   2181\n\nEXPOSE ${ZOO_CLIENT_PORT}\n\nRUN mkdir -p ${ZOO_DATA_DIR}\nRUN echo \"tickTime=2000\"                  > /opt/zookeeper/conf/zoo.cfg && \\\n    echo \"dataDir ${ZOO_DATA_DIR}\"       >> /opt/zookeeper/conf/zoo.cfg && \\\n    echo \"clientPort ${ZOO_CLIENT_PORT}\" >> /opt/zookeeper/conf/zoo.cfg && \\\n    echo 1 > ${ZOO_DATA_DIR}/myid\n\n# Note that we are forcing the installation into dist-packages,\n# so that it will be possible to share kazoo and externally mount /usr/local later.\nRUN pip install --no-cache-dir kazoo -t /usr/lib/python2.7/dist-packages\nCOPY scripts/zk_wait.py /tmp/\nCOPY scripts/zk_set.py /tmp/\n# -----------------------------------------------------------------\n# Get hadoop\n\nENV hdp_ver hadoop-2.6.0\nENV hdp_tgz ${hdp_ver}.tar.gz\nENV hdp_site http://mirror.nohup.it/apache/hadoop/common\nENV hdp_tgz_site ${hdp_site}/hadoop-2.6.0\n\nRUN wget ${hdp_tgz_site}/${hdp_tgz} -O ${hdp_tgz} && \\\n    mkdir -p /opt && tar -C /opt -xzf ${hdp_tgz} && rm -f ${hdp_tgz} && \\\n    ln -s /opt/${hdp_ver} /opt/hadoop\n\n# ------------------------------------------------------------------\n# User:Group\t   Daemons\n# hdfs:hadoop\t   NameNode, Secondary NameNode, JournalNode, DataNode\n# yarn:hadoop\t   ResourceManager, NodeManager\n# mapred:hadoop\t MapReduce JobHistory Server\n\nENV HADOOP_GROUP hadoop\nENV HDFS_USER hdfs\nENV YARN_USER yarn\nENV MAPRED_USER mapred\n\nENV HDP_DATA_ROOT /data/hadoop\nENV LOG_DIR_ROOT /tmp/logs\nENV HADOOP_TMP_DIR /tmp\n\nENV HADOOP_CONF_DIR  /opt/hadoop/etc/hadoop\n\nENV DFS_NAME_DIR ${HDP_DATA_ROOT}/hdfs/nn\nENV DFS_DATA_DIR ${HDP_DATA_ROOT}/hdfs/dn\nENV DFS_CHECKPOINT_DIR   ${HDP_DATA_ROOT}/hdfs/snn\nENV HDFS_LOG_DIR ${LOG_DIR_ROOT}/hdfs\nENV HDFS_PID_DIR ${HDP_DATA_ROOT}/pid/hdfs\n\nENV YARN_LOCAL_DIR ${HDP_DATA_ROOT}/yarn\nENV YARN_LOG_DIR ${LOG_DIR_ROOT}/yarn\nENV YARN_LOCAL_LOG_DIR ${YARN_LOCAL_DIR}/userlogs\nENV YARN_PID_DIR ${HDP_DATA_ROOT}/pid/yarn\n\nENV YARN_REMOTE_APP_LOG_DIR   /app-logs\n\nENV MAPRED_LOG_DIR   ${LOG_DIR_ROOT}/mapred\nENV MAPRED_PID_DIR   ${HDP_DATA_ROOT}/pid/mapred\n\nENV MAPRED_JH_ROOT_DIR /mr-history\nENV MAPRED_JH_INTERMEDIATE_DONE_DIR ${MAPRED_JH_ROOT_DIR}/tmp\nENV MAPRED_JH_DONE_DIR ${MAPRED_JH_ROOT_DIR}/done\n\n#----------------------------------------------------------\n\n# Create groups and users\nRUN groupadd ${HADOOP_GROUP} && \\\n    useradd -g ${HADOOP_GROUP} ${HDFS_USER} && \\\n    useradd -g ${HADOOP_GROUP} ${YARN_USER} && \\\n    useradd -g ${HADOOP_GROUP} ${MAPRED_USER}\n\n# Create DATA_DIR_ROOT\nRUN mkdir -p ${HDP_DATA_ROOT} && \\\n    chmod -R 755 ${HDP_DATA_ROOT}\n\n# Create LOG_DIR_ROOT\nRUN mkdir -p ${LOG_DIR_ROOT} && \\\n    chmod -R 1777 ${LOG_DIR_ROOT}\n\nRUN mkdir -p ${HADOOP_CONF_DIR}\n\n### HDFS DIRs ###########################################################\n\n# DataNode\nRUN mkdir -p ${DFS_DATA_DIR} && \\\n    chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_DATA_DIR} && \\\n    chmod -R 750 ${DFS_DATA_DIR}\n\n# NameNode\nRUN mkdir -p ${DFS_NAME_DIR} && \\\n    chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_NAME_DIR} && \\\n    chmod -R 755 ${DFS_NAME_DIR}\n\n# HDFS log dir\nRUN\tmkdir -p ${HDFS_LOG_DIR} && \\\n    chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_LOG_DIR} && \\\n    chmod -R 750 ${HDFS_LOG_DIR}\n\n# HDFS pid dir\t\nRUN mkdir -p ${HDFS_PID_DIR} && \\\n    chown -R ${HDFS_USER}:${HADOOP_GROUP} ${HDFS_PID_DIR} && \\\n    chmod -R 750 ${HDFS_PID_DIR}\n\n#\nRUN mkdir -p ${DFS_CHECKPOINT_DIR} && \\\n    chown -R ${HDFS_USER}:${HADOOP_GROUP} ${DFS_CHECKPOINT_DIR} && \\\n    chmod -R 755 ${DFS_CHECKPOINT_DIR}\n\n\n### YARN DIRs ###########################################################\n\n# YARN_LOCAL_DIR\nRUN mkdir -p ${YARN_LOCAL_DIR} && \\\n    chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_DIR} && \\\n    chmod -R 755 ${YARN_LOCAL_DIR}\n\n# YARN log dir\nRUN mkdir -p ${YARN_LOG_DIR} && \\\n    chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOG_DIR} && \\\n    chmod -R 755 ${YARN_LOG_DIR}\n\n# YARN_LOCAL_LOG_DIR\nRUN mkdir -p ${YARN_LOCAL_LOG_DIR} && \\\n    chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_LOCAL_LOG_DIR} && \\\n    chmod -R 755 ${YARN_LOCAL_LOG_DIR}\n\n# YARN pid dir\nRUN mkdir -p $YARN_PID_DIR && \\\n    chown -R $YARN_USER:$HADOOP_GROUP $YARN_PID_DIR && \\\n    chmod -R 755 $YARN_PID_DIR\n\n\n### MAPRED DIRs ##########################################################\t\n\n# MAPRED log dir\nRUN mkdir -p $MAPRED_LOG_DIR && \\\n    chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_LOG_DIR && \\\n    chmod -R 755 $MAPRED_LOG_DIR\n\n# MAPRED pid dir\t\nRUN mkdir -p $MAPRED_PID_DIR && \\\n    chown -R $MAPRED_USER:$HADOOP_GROUP $MAPRED_PID_DIR && \\\n    chmod -R 755 $MAPRED_PID_DIR\n\nRUN mkdir -p $ ${YARN_REMOTE_APP_LOG_DIR} && \\\n    chown -R ${YARN_USER}:${HADOOP_GROUP} ${YARN_REMOTE_APP_LOG_DIR} && \\\n    chmod -R 777 ${YARN_REMOTE_APP_LOG_DIR}\n\n\nCOPY scripts/generate_conf_files.py /tmp/\nRUN python2.7 /tmp/generate_conf_files.py ${HADOOP_CONF_DIR}\n\nENV HADOOP_HOME /opt/hadoop\nENV PATH ${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:$PATH\n\n"
}