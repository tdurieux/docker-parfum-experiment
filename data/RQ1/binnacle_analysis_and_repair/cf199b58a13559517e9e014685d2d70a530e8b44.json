{
  "startTime": 1674243845748,
  "endTime": 1674243845956,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -- base image stage\n# -- create a base image, containing the bulk of the configuration\n# -- used for setting up a Jenkins server. Copy most of the groovy\n# -- config scripts into the image. Due to the fact that some scripts\n# -- will conflict with eachother, the base image will be used to\n# -- create individual 'shard' containers, using Docker multi-stage\n# -- builds. The scripts that create conflicts should be copied into\n# -- these individual shard images.\n\nFROM ubuntu:16.04 as base\n\nUSER root\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y openjdk-8-jdk \\\n    && apt-get install --no-install-recommends -y curl \\\n    && apt-get install --no-install-recommends -y git \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && apt-get install --no-install-recommends -y python-pip \\\n    && apt-get install --no-install-recommends -y openssh-server \\\n    && apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /var/run/sshd\nADD ssh/jc_rsa.pub /root/.ssh/jc_rsa.pub\nRUN cat root/.ssh/jc_rsa.pub >> ~/.ssh/authorized_keys \\\n    && chmod go-w ~/ && chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys\nEXPOSE 22\n\nARG JENKINS_VERSION\nARG JENKINS_WAR_SOURCE\nRUN mkdir /usr/share/jenkins \\\n    && curl -f \"${JENKINS_WAR_SOURCE}/${JENKINS_VERSION}.war\" \\\n         -L -o /usr/share/jenkins/jenkins.war\nEXPOSE 8080\nENV JENKINS_HOME /var/lib/jenkins\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\nARG CONFIG_PATH\nENV JENKINS_CONFIG_PATH $JENKINS_HOME/init-configs\n\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nRUN groupadd -g ${gid} ${group} \\\n    && useradd -d \"$JENKINS_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}\n\nRUN mkdir -p $JENKINS_HOME/init.groovy.d \\\n    && mkdir $JENKINS_HOME/plugins \\\n    && mkdir $JENKINS_HOME/utils \\\n    && mkdir $JENKINS_HOME/git \\\n    && mkdir -p /var/log/jenkins\nCOPY plugins $JENKINS_HOME/plugins/\nCOPY utils/ $JENKINS_HOME/utils/\nCOPY ${CONFIG_PATH} $JENKINS_HOME/init-configs/\nCOPY src/main/groovy/1addJarsToClasspath.groovy \\\n    src/main/groovy/2checkInstalledPlugins.groovy \\\n    src/main/groovy/3importCredentials.groovy \\\n    src/main/groovy/3installGroovy.groovy \\\n    src/main/groovy/3installPython.groovy \\\n    src/main/groovy/3mainConfiguration.groovy \\\n    src/main/groovy/3setGlobalProperties.groovy \\\n    src/main/groovy/3shutdownCLI.groovy \\\n    src/main/groovy/4configureEc2Plugin.groovy \\\n    src/main/groovy/4configureGHPRB.groovy \\\n    src/main/groovy/4configureGit.groovy \\\n    src/main/groovy/4configureGithub.groovy \\\n    src/main/groovy/4configureHipChat.groovy \\\n    src/main/groovy/4configureJobConfigHistory.groovy \\\n    src/main/groovy/4configureMailerPlugin.groovy \\\n    src/main/groovy/4configureMaskPasswords.groovy \\\n    src/main/groovy/4configureSecurity.groovy \\\n    src/main/groovy/4configureSlack.groovy \\\n    src/main/groovy/4configureSplunk.groovy \\\n    src/main/groovy/5addSeedJob.groovy \\\n    src/main/groovy/5configureEmailExtension.groovy \\\n    src/main/groovy/5createLoggers.groovy \\\n    $JENKINS_HOME/init.groovy.d/\n\n# -- test shard #1\n# -- copy the unique scripts used to configure a Jenkins container for\n# -- running the tests specifed with the environment variable\n# -- 'TEST_SHARD=shard_1'\n\nFROM base as shard_1\nCOPY src/main/groovy/4configureGHOAuth.groovy \\\n    $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n# -- test shard #2\n# -- copy the unique scripts used to configure a Jenkins container for\n# -- running the tests specifed with the environment variable\n# -- 'TEST_SHARD=shard_2'\n\nFROM base as shard_2\nCOPY src/main/groovy/4configureSAML.groovy \\\n    src/main/groovy/3addUsers.groovy \\\n    $JENKINS_HOME/init.groovy.d/\nRUN chown -R jenkins:jenkins $JENKINS_HOME /var/log/jenkins\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}