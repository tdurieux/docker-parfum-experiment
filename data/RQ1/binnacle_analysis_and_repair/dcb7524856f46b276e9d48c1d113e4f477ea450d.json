{
  "startTime": 1674238456378,
  "endTime": 1674238456532,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 3,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n######### Dockerfile for PostgreSQL 11.3 #########\n#\n# PostgreSQL is an open source relational database management system ( DBMS ) developed by a worldwide team of volunteers.\n#\n# To build PostgreSQL image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To create container of PostgreSQL image with default configuration run the below command\n# docker run --name <container name> -p <port to export>:5432 -d <postgres_image>\n# Example: docker run --name sample_container -p 5432:5432 -d  postgresql_ubuntu\n#\n# To create container of PostgreSQL image with config file, run the below command\n# docker run --name <container_name> -v /home/postgresql.conf:/usr/local/pgsql/data/postgresql.conf -d <image_name> postmaster -D /usr/local/pgsql/data -c config_file=/usr/local/pgsql/data/postgresql.conf\n#\n#####################################################################\n\n# Base image\nFROM s390x/ubuntu:16.04\n\n# The author\nLABEL maintainer=\"LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\"\n\nENV SOURCE_DIR=/tmp/source\nWORKDIR $SOURCE_DIR\n\n# Installing Dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bison \\\n    flex \\\n    git \\\n    gcc \\\n    libreadline-dev \\\n    make \\\n    wget \\\n    zlib1g-dev \\\n&& groupadd -r postgres \\\n&& useradd -r -m -g postgres postgres \\\n&& mkdir /usr/local/pgsql && chmod -R 777 /usr/local/pgsql \\\n&& mkdir -p /usr/local/pgsql/data \\\n&& chown postgres:postgres /usr/local/pgsql/data && rm -rf /var/lib/apt/lists/*;\n# Clone PostgreSQL and build it\nRUN cd $SOURCE_DIR \\\n&& git clone git://github.com/postgres/postgres.git \\\n&& cd postgres/ \\\n&& git checkout REL_11_3 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n&& make \\\n&& make install \\\n# Tidy and clean up\n&& rm -rf $SOURCE_DIR \\\n&& apt-get remove -y \\\n    bison \\\n    flex \\\n    git \\\n    make \\\n    wget \\\n    zlib1g-dev \\\n&& apt-get autoremove -y \\\n&& apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Initialize PostgreSQL data directory as postgres user\nUSER postgres\nRUN /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data/\n\n# Expose Port\nEXPOSE 5432\n\n# Add VOLUMEs to allow backup of config, logs and databases\nVOLUME  [\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n\nENV PATH $PATH:/usr/local/pgsql/bin\n\n# Start the PostgreSQL service\nCMD [\"postmaster\", \"-D\", \"/usr/local/pgsql/data\", \"-c\", \"config_file=/usr/local/pgsql/data/postgresql.conf\"]\n\n# End of Dockerfile\n"
}