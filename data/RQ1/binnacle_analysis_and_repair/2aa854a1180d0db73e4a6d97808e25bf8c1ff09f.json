{
  "startTime": 1674239082929,
  "endTime": 1674239083269,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 106
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL maintainer=\"David Sn <divad.nnamtdeis@gmail.com>\"\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    USER=docker \\\n    HOSTNAME=buildbot \\\n    USE_CCACHE=1 \\\n    CCACHE_DIR=/tmp/ccache\n\n# Install required dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        autoconf automake axel bc bison build-essential clang cmake expat flex g++ g++-multilib gawk gcc gcc-multilib \\\n        gnupg gperf htop imagemagick lib32ncurses5-dev lib32z1-dev libtinfo5 libc6-dev libcap-dev libexpat1-dev \\\n        libgmp-dev liblz4-* liblzma* libmpc-dev libmpfr-dev libncurses5-dev libsdl1.2-dev libssl-dev libtool libxml2 \\\n        libxml2-utils lzma* lzop maven ncftp ncurses-dev patch patchelf pkg-config pngcrush pngquant python python-all-dev \\\n        re2c schedtool squashfs-tools subversion texinfo unzip w3m xsltproc zip zlib1g-dev curl git sudo rsync && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install repo binary (thanks akheel)\nRUN curl -f --create-dirs -L -o /usr/local/bin/repo -O -L https://github.com/akhilnarang/repo/raw/master/repo && \\\n    chmod a+x /usr/local/bin/repo\n\n# Create seperate build user\nRUN groupadd -g 1000 -r ${USER} && \\\n    useradd -u 1000 --create-home -r -g ${USER} ${USER} && \\\n    mkdir -p /tmp/ccache /repo && \\\n    chown -R ${USER}: /tmp/ccache /repo\n\n# Allow sudo without password for build user\nRUN echo \"${USER} ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-docker-build && \\\n    usermod -aG sudo ${USER}\n\n# Setup volumes for persistent data\nUSER ${USER}\nVOLUME [\"/tmp/ccache\", \"/repo\"]\n\n# Create gitconfig for build user\nRUN git config --global user.name ${USER} && git config --global user.email ${USER}@${HOSTNAME}.local && \\\n    git config --global color.ui auto\n\n# Work in the build directory, repo is expected to be init'd here\nWORKDIR /repo\n\n# This is where the magic happens~\nENTRYPOINT [\"/bin/bash\"]\n"
}