{
  "startTime": 1674249029679,
  "endTime": 1674249029895,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 153
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 105
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n# or more contributor license agreements. Licensed under the Elastic License;\n# you may not use this file except in compliance with the Elastic License.\n#\n\nFROM ubuntu:16.04\n\n# This is basically automating the setup instructions in build-setup/macos_cross_compiled.md\n\nMAINTAINER David Roberts <dave.roberts@elastic.co>\n\n# Make sure apt-get is up to date and required packages are installed\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y apt-utils automake autogen build-essential bzip2 git gobjc libtool software-properties-common unzip wget zip && rm -rf /var/lib/apt/lists/*;\n\n# Install clang\n# Note: apt-key cannot update /etc/apt/trusted.gpg on the Ubuntu 16.04 Docker image, so it's updated in /tmp\nRUN \\\n  cp /etc/apt/trusted.gpg /tmp && \\\n  wget --quiet -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key --keyring /tmp/trusted.gpg add - && \\\n  mv /tmp/trusted.gpg /etc/apt && \\\n  rm /tmp/trusted.gpg~ && \\\n  apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main\" && \\\n  apt-get install --no-install-recommends -y clang-3.9 libclang1-3.9 libllvm3.9 llvm-3.9 llvm-3.9-runtime && rm -rf /var/lib/apt/lists/*;\n\n# Add build dependencies transferred from native Mac build server\nRUN \\\n  mkdir -p /usr/local/sysroot-x86_64-apple-macosx10.11/usr && \\\n  cd /usr/local/sysroot-x86_64-apple-macosx10.11/usr && \\\n  wget --quiet -O - https://s3-eu-west-1.amazonaws.com/prelert-artifacts/dependencies/usr-x86_64-apple-macosx10.11-2.tar.bz2 | tar jxf - && \\\n  wget --quiet -O - https://s3-eu-west-1.amazonaws.com/prelert-artifacts/dependencies/xcode-x86_64-apple-macosx10.11-1.tar.bz2 | tar jxf -\n\n# Build cctools-port\nRUN \\\n  git clone https://github.com/tpoechtrager/cctools-port.git && \\\n  cd cctools-port/cctools && \\\n  git checkout 895-ld64-274.2 && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --target=x86_64-apple-macosx10.11 --with-llvm-config=/usr/bin/llvm-config-3.9 && \\\n  make -j`nproc` && \\\n  make install && \\\n  cd ../.. && \\\n  rm -rf cctools-port\n\n"
}