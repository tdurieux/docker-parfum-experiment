{
  "startTime": 1674234009497,
  "endTime": 1674234009694,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/3scale/base:trusty\n\nMAINTAINER Michal Cichra <michal@3scale.net> # 2014-05-21\n\n# all the apt-gets in one command & delete the cache after installing\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 136221EE520DDFAF0A905689B9316A7BC7917B12 \\\n && echo 'deb http://ppa.launchpad.net/chris-lea/redis-server/ubuntu trusty main' > /etc/apt/sources.list.d/redis.list \\\n && apt-install redis-server=2:2.8.17-1chl1~trusty1 cron supervisor logrotate \\\n                make build-essential libpcre3-dev libssl-dev wget \\\n                iputils-arping libexpat1-dev unzip curl\n\nENV OPENRESTY_VERSION 1.7.4.1\nADD ngx_openresty-${OPENRESTY_VERSION}.tar.gz /root/\nRUN cd /root/ngx_openresty-* \\\n && curl -f https://gist.githubusercontent.com/mikz/4dae10a0ef94de7c8139/raw/33d6d5f9baf68fc5a0748b072b4d94951e463eae/system-ssl.patch | patch -p0 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/openresty --with-http_gunzip_module --with-luajit \\\n    --with-luajit-xcflags=-DLUAJIT_ENABLE_LUA52COMPAT \\\n    --http-client-body-temp-path=/var/nginx/client_body_temp \\\n    --http-proxy-temp-path=/var/nginx/proxy_temp \\\n    --http-log-path=/var/nginx/access.log \\\n    --error-log-path=/var/nginx/error.log \\\n    --pid-path=/var/nginx/nginx.pid \\\n    --lock-path=/var/nginx/nginx.lock \\\n    --with-http_stub_status_module \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --without-http_fastcgi_module \\\n    --without-http_uwsgi_module \\\n    --without-http_scgi_module \\\n    --with-md5-asm \\\n    --with-sha1-asm \\\n    --with-file-aio \\\n && make \\\n && make install \\\n && rm -rf /root/ngx_openresty* \\\n && ln -sf /opt/openresty/nginx/sbin/nginx /usr/local/bin/nginx \\\n && ln -sf /usr/local/bin/nginx /usr/local/bin/openresty \\\n && ln -sf /opt/openresty/bin/resty /usr/local/bin/resty\n\nRUN ln -sf /opt/openresty/luajit/bin/luajit-2.1.0-alpha /opt/openresty/luajit/bin/lua \\\n && ln -sf /opt/openresty/luajit/bin/lua /usr/local/bin/lua\n\nRUN wget -qO- https://luarocks.org/releases/luarocks-2.2.0.tar.gz | tar xvz -C /tmp/ \\\n && cd /tmp/luarocks-* \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-lua=/opt/openresty/luajit \\\n    --with-lua-include=/opt/openresty/luajit/include/luajit-2.1 \\\n    --with-lua-lib=/opt/openresty/lualib \\\n && make && make install \\\n && rm -rf /tmp/luarocks-*\n\n#ADD redis.conf /etc/redis/\nADD supervisor /etc/supervisor\nADD redis.conf /etc/redis/\n\nONBUILD CMD [\"supervisord\", \"-n\"]\n"
}