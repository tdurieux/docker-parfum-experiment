{
  "startTime": 1674641725780,
  "endTime": 1674641725863,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.2-sdk AS build\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs build-essential && rm -rf /var/lib/apt/lists/*;\nWORKDIR /src\nCOPY CollAction/CollAction.csproj CollAction/\nRUN dotnet restore CollAction/CollAction.csproj\nCOPY . .\nWORKDIR /src/CollAction\nRUN npm install && npm cache clean --force; # Needed because the project npm install in production mode won't install the devDependencies (webpack etc.)\nRUN NODE_ENV=production dotnet build CollAction.csproj --no-restore -c Release -o /app\nRUN dotnet publish CollAction.csproj --no-build -c Release -o /app\n\nFROM microsoft/dotnet:2.2-aspnetcore-runtime-alpine\nWORKDIR /app\nCOPY --from=build /app .\nENTRYPOINT [\"dotnet\", \"CollAction.dll\"]\n"
}