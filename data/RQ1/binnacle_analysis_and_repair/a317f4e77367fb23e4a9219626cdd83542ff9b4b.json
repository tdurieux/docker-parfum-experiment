{
  "startTime": 1674251580298,
  "endTime": 1674251581359,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 27,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 21,
        "columnEnd": 129
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION\nARG GO_VERSION\nARG RUST_VERSION\nARG SWIFT_VERSION\n\nFROM alpine:${ALPINE_VERSION} as protoc_builder\nRUN apk add --no-cache build-base curl automake autoconf libtool git zlib-dev\n\nRUN mkdir -p /out\n\nARG GRPC_VERSION\nRUN git clone --recursive --depth=1 -b v${GRPC_VERSION} https://github.com/grpc/grpc.git /grpc && \\\n    ln -s /grpc/third_party/protobuf /protobuf && \\\n    cd /protobuf && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-static=no && \\\n    make && \\\n    make check && \\\n    make install && \\\n    make install DESTDIR=/out && \\\n    cd /grpc && \\\n    make install-plugins prefix=/out/usr\n\nARG PROTOBUF_C_VERSION\nRUN mkdir -p /protobuf-c && \\\n    curl -f -sSL https://api.github.com/repos/protobuf-c/protobuf-c/tarball/${PROTOBUF_C_VERSION} | tar xz --strip 1 -C /protobuf-c && \\\n    cd /protobuf-c && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make && make install DESTDIR=/out\n\nARG GRPC_JAVA_VERSION\nRUN mkdir -p /grpc-java && \\\n    curl -f -sSL https://api.github.com/repos/grpc/grpc-java/tarball/v${GRPC_JAVA_VERSION} | tar xz --strip 1 -C /grpc-java && \\\n    cd /grpc-java && \\\n    g++ \\\n        -I. -I/protobuf/src \\\n        compiler/src/java_plugin/cpp/*.cpp \\\n        -L/protobuf/src/.libs \\\n        -lprotoc -lprotobuf -lpthread --std=c++0x -s \\\n        -o protoc-gen-grpc-java && \\\n    install -Ds protoc-gen-grpc-java /out/usr/bin/protoc-gen-grpc-java\n\nARG GRPC_WEB_VERSION\nRUN mkdir -p /grpc-web && \\\n    curl -f -sSL https://api.github.com/repos/grpc/grpc-web/tarball/${GRPC_WEB_VERSION} | tar xz --strip 1 -C /grpc-web && \\\n    cd /grpc-web && \\\n    make install-plugin && \\\n    install -Ds /usr/local/bin/protoc-gen-grpc-web /out/usr/bin/protoc-gen-grpc-web\n\n\nFROM golang:${GO_VERSION}-alpine${ALPINE_VERSION} as go_builder\nRUN apk add --no-cache build-base curl git\nENV GO111MODULE=on\n\nARG PROTOC_GEN_DOC_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc && \\\n    curl -f -sSL https://api.github.com/repos/pseudomuto/protoc-gen-doc/tarball/v${PROTOC_GEN_DOC_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc && \\\n    cd ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc && \\\n    go build -ldflags '-w -s' -o /protoc-gen-doc-out/protoc-gen-doc ./cmd/protoc-gen-doc && \\\n    install -Ds /protoc-gen-doc-out/protoc-gen-doc /out/usr/bin/protoc-gen-doc\n\nARG PROTOC_GEN_FIELDMASK_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/TheThingsIndustries/protoc-gen-fieldmask && \\\n    curl -f -sSL https://api.github.com/repos/TheThingsIndustries/protoc-gen-fieldmask/tarball/v${PROTOC_GEN_FIELDMASK_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/TheThingsIndustries/protoc-gen-fieldmask && \\\n    cd ${GOPATH}/src/github.com/TheThingsIndustries/protoc-gen-fieldmask && \\\n    go build -ldflags '-w -s' -o /protoc-gen-fieldmask-out/protoc-gen-fieldmask . && \\\n    install -Ds /protoc-gen-fieldmask-out/protoc-gen-fieldmask /out/usr/bin/protoc-gen-fieldmask\n\nARG PROTOC_GEN_GO_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/golang/protobuf && \\\n    curl -f -sSL https://api.github.com/repos/golang/protobuf/tarball/v${PROTOC_GEN_GO_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/golang/protobuf && \\\n    cd ${GOPATH}/src/github.com/golang/protobuf && \\\n    go build -ldflags '-w -s' -o /golang-protobuf-out/protoc-gen-go ./protoc-gen-go && \\\n    install -Ds /golang-protobuf-out/protoc-gen-go /out/usr/bin/protoc-gen-go\n\nARG PROTOC_GEN_GOGO_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/gogo/protobuf && \\\n    curl -f -sSL https://api.github.com/repos/gogo/protobuf/tarball/v${PROTOC_GEN_GOGO_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/gogo/protobuf && \\\n    cd ${GOPATH}/src/github.com/gogo/protobuf && \\\n    go build -ldflags '-w -s' -o /gogo-protobuf-out/protoc-gen-gogo ./protoc-gen-gogo && \\\n    install -Ds /gogo-protobuf-out/protoc-gen-gogo /out/usr/bin/protoc-gen-gogo && \\\n    mkdir -p /out/usr/include/github.com/gogo/protobuf/protobuf/google/protobuf && \\\n    install -D $(find ./protobuf/google/protobuf -name '*.proto') -t /out/usr/include/github.com/gogo/protobuf/protobuf/google/protobuf && \\\n    install -D ./gogoproto/gogo.proto /out/usr/include/github.com/gogo/protobuf/gogoproto/gogo.proto\n\nARG PROTOC_GEN_GOGOTTN_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/TheThingsIndustries/protoc-gen-gogottn && \\\n    curl -f -sSL https://api.github.com/repos/TheThingsIndustries/protoc-gen-gogottn/tarball/v${PROTOC_GEN_GOGOTTN_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/TheThingsIndustries/protoc-gen-gogottn && \\\n    cd ${GOPATH}/src/github.com/TheThingsIndustries/protoc-gen-gogottn && \\\n    go build -ldflags '-w -s' -o /protoc-gen-gogottn-out/protoc-gen-gogottn . && \\\n    install -Ds /protoc-gen-gogottn-out/protoc-gen-gogottn /out/usr/bin/protoc-gen-gogottn\n\nARG PROTOC_GEN_LINT_VERSION\nRUN cd / && \\\n    curl -f -sSLO https://github.com/ckaznocha/protoc-gen-lint/releases/download/v${PROTOC_GEN_LINT_VERSION}/protoc-gen-lint_linux_amd64.zip && \\\n    mkdir -p /protoc-gen-lint-out && \\\n    cd /protoc-gen-lint-out && \\\n    unzip -q /protoc-gen-lint_linux_amd64.zip && \\\n    install -Ds /protoc-gen-lint-out/protoc-gen-lint /out/usr/bin/protoc-gen-lint\n\nARG PROTOC_GEN_VALIDATE_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/envoyproxy/protoc-gen-validate && \\\n    curl -f -sSL https://api.github.com/repos/envoyproxy/protoc-gen-validate/tarball/v${PROTOC_GEN_VALIDATE_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/envoyproxy/protoc-gen-validate && \\\n    cd ${GOPATH}/src/github.com/envoyproxy/protoc-gen-validate && \\\n    go build -ldflags '-w -s' -o /protoc-gen-validate-out/protoc-gen-validate . && \\\n    install -Ds /protoc-gen-validate-out/protoc-gen-validate /out/usr/bin/protoc-gen-validate && \\\n    install -D ./validate/validate.proto /out/usr/include/github.com/envoyproxy/protoc-gen-validate/validate/validate.proto\n\nARG GRPC_GATEWAY_VERSION\nRUN mkdir -p ${GOPATH}/src/github.com/grpc-ecosystem/grpc-gateway && \\\n    curl -f -sSL https://api.github.com/repos/grpc-ecosystem/grpc-gateway/tarball/v${GRPC_GATEWAY_VERSION} | tar xz --strip 1 -C ${GOPATH}/src/github.com/grpc-ecosystem/grpc-gateway && \\\n    cd ${GOPATH}/src/github.com/grpc-ecosystem/grpc-gateway && \\\n    go build -ldflags '-w -s' -o /grpc-gateway-out/protoc-gen-grpc-gateway ./protoc-gen-grpc-gateway && \\\n    go build -ldflags '-w -s' -o /grpc-gateway-out/protoc-gen-swagger ./protoc-gen-swagger && \\\n    install -Ds /grpc-gateway-out/protoc-gen-grpc-gateway /out/usr/bin/protoc-gen-grpc-gateway && \\\n    install -Ds /grpc-gateway-out/protoc-gen-swagger /out/usr/bin/protoc-gen-swagger && \\\n    mkdir -p /out/usr/include/google/api && \\\n    install -D $(find ./third_party/googleapis/google/api -name '*.proto') -t /out/usr/include/google/api && \\\n    mkdir -p /out/usr/include/google/rpc && \\\n    install -D $(find ./third_party/googleapis/google/rpc -name '*.proto') -t /out/usr/include/google/rpc\n\n\nFROM rust:${RUST_VERSION}-slim as rust_builder\nRUN apt-get update && apt-get install --no-install-recommends -y musl-tools curl && rm -rf /var/lib/apt/lists/*;\nRUN rustup target add x86_64-unknown-linux-musl\nENV RUSTFLAGS='-C linker=musl-gcc'\n\nARG RUST_PROTOBUF_VERSION\nRUN mkdir -p /rust-protobuf && \\\n    curl -f -sSL https://api.github.com/repos/stepancheg/rust-protobuf/tarball/v${RUST_PROTOBUF_VERSION} | tar xz --strip 1 -C /rust-protobuf && \\\n    cd /rust-protobuf/protobuf-codegen && cargo build --target=x86_64-unknown-linux-musl --release && \\\n    install -Ds /rust-protobuf/target/x86_64-unknown-linux-musl/release/protoc-gen-rust /out/usr/bin/protoc-gen-rust\n\nARG GRPC_RUST_VERSION\nRUN mkdir -p /grpc-rust && curl -f -sSL https://api.github.com/repos/stepancheg/grpc-rust/tarball/v${GRPC_RUST_VERSION} | tar xz --strip 1 -C /grpc-rust && \\\n    cd /grpc-rust/grpc-compiler && cargo build --target=x86_64-unknown-linux-musl --release && \\\n    install -Ds /grpc-rust/target/x86_64-unknown-linux-musl/release/protoc-gen-rust-grpc /out/usr/bin/protoc-gen-rust-grpc\n\n\nFROM swift:${SWIFT_VERSION} as swift_builder\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y unzip patchelf libnghttp2-dev curl libssl-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nARG GRPC_SWIFT_VERSION\nRUN mkdir -p /grpc-swift && \\\n    curl -f -sSL https://api.github.com/repos/grpc/grpc-swift/tarball/${GRPC_SWIFT_VERSION} | tar xz --strip 1 -C /grpc-swift && \\\n    cd /grpc-swift && make && \\\n    install -Ds /grpc-swift/protoc-gen-swift /protoc-gen-swift/protoc-gen-swift && \\\n    install -Ds /grpc-swift/protoc-gen-swiftgrpc /protoc-gen-swift/protoc-gen-swiftgrpc && \\\n    cp /lib64/ld-linux-x86-64.so.2 \\\n        $(ldd /protoc-gen-swift/protoc-gen-swift /protoc-gen-swift/protoc-gen-swiftgrpc | awk '{print $3}' | grep /lib | sort | uniq) \\\n        /protoc-gen-swift/ && \\\n    find /protoc-gen-swift/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-swift {} \\; && \\\n    for p in protoc-gen-swift protoc-gen-swiftgrpc; do \\\n        patchelf --set-interpreter /protoc-gen-swift/ld-linux-x86-64.so.2 /protoc-gen-swift/${p}; \\\n    done\n\n\nFROM alpine:${ALPINE_VERSION} as packer\nRUN apk add --no-cache curl\n\nARG UPX_VERSION\nRUN mkdir -p /upx && curl -f -sSL https://github.com/upx/upx/releases/download/v${UPX_VERSION}/upx-${UPX_VERSION}-amd64_linux.tar.xz | tar xJ --strip 1 -C /upx && \\\n    install -D /upx/upx /usr/local/bin/upx\n\nCOPY --from=protoc_builder /out/ /out/\nCOPY --from=go_builder /out/ /out/\nCOPY --from=rust_builder /out/ /out/\nCOPY --from=swift_builder /protoc-gen-swift /out/protoc-gen-swift\nRUN upx --lzma \\\n        /out/usr/bin/grpc_* \\\n        /out/usr/bin/protoc-gen-*\nRUN find /out -name \"*.a\" -delete -or -name \"*.la\" -delete\n\nFROM alpine:${ALPINE_VERSION}\nLABEL maintainer=\"Roman Volosatovs <roman@thethingsnetwork.org>\"\nCOPY --from=packer /out/ /\nRUN apk add --no-cache bash libstdc++ && \\\n    for p in protoc-gen-swift protoc-gen-swiftgrpc; do ln -s /protoc-gen-swift/${p} /usr/bin/${p}; done && \\\n    ln -s /usr/bin/grpc_cpp_plugin /usr/bin/protoc-gen-grpc-cpp && \\\n    ln -s /usr/bin/grpc_csharp_plugin /usr/bin/protoc-gen-grpc-csharp && \\\n    ln -s /usr/bin/grpc_objective_c_plugin /usr/bin/protoc-gen-grpc-objc && \\\n    ln -s /usr/bin/grpc_node_plugin /usr/bin/protoc-gen-grpc-js && \\\n    ln -s /usr/bin/grpc_php_plugin /usr/bin/protoc-gen-grpc-php && \\\n    ln -s /usr/bin/grpc_python_plugin /usr/bin/protoc-gen-grpc-python && \\\n    ln -s /usr/bin/grpc_ruby_plugin /usr/bin/protoc-gen-grpc-ruby && \\\n    ln -s /usr/bin/protoc-gen-swiftgrpc /usr/bin/protoc-gen-grpc-swift\nCOPY protoc-wrapper /usr/bin/protoc-wrapper\nENTRYPOINT [\"protoc-wrapper\", \"-I/usr/include\"]\n"
}