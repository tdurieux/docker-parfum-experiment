{
  "startTime": 1674244118543,
  "endTime": 1674244118850,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 15,
        "columnEnd": 125
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 1,
        "columnEnd": 112
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 1,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 54,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 30,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 1,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 24,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 24,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 24,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 24,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "FROM rocker/verse:3.5.3\nMAINTAINER Jim Harner <ejharner@gmail.com>\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\nARG pgversion=9.6\nARG hadoopversion=2.9.1\nARG sparkversion=2.4.3\nARG hiveversion=2.1.1\n\n\n# Update machine and install\n# RUN apt-get update && apt-get install -y --no-install-recommends apt-utils\nRUN apt-get update && apt-get install --no-install-recommends -y postgresql-client-${pgversion} libicu-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n####################\n# JAVA\n####################\nRUN echo \"deb http://http.debian.net/debian stretch-backports main\" > /etc/apt/sources.list.d/stretch-backports.list\nRUN apt-get update && apt-get install --no-install-recommends -y -t stretch-backports openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n# config Java within R for rJava installation\nRUN sudo R CMD javareconf\n# Install Google Protocol Buffer\n# ADD protobuf-2.5.0.tar.gz /tmp\n# RUN cd /tmp/protobuf-2.5.0 && ./configure && make -j4 && make install && cd .. && rm -rf protobuf-*\n\n####################\n# HADOOP\n####################\n# Download and Install Hadoop and set Hadoop environment variable\nRUN cd /opt && wget --quiet https://archive.apache.org/dist/hadoop/core/hadoop-${hadoopversion}/hadoop-${hadoopversion}.tar.gz && \\\n\ttar zxf hadoop-${hadoopversion}.tar.gz && \\\n\tln -s hadoop-${hadoopversion} hadoop && \\\n\trm hadoop-${hadoopversion}.tar.gz && \\\n\t(cd /opt/hadoop; ln -s share/hadoop/tools/lib/hadoop-streaming-${hadoopversion}.jar hadoop-streaming.jar) && \\\n\tchown -R rstudio:rstudio /opt/hadoop\nENV HADOOP_CMD=/opt/hadoop/bin/hadoop HADOOP_HOME=/opt/hadoop HADOOP_BIN=/opt/hadoop/bin HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop\n\n####################\n# SPARK\n####################\n# Install Spark\nRUN cd /opt && \\\n\twget --quiet https://archive.apache.org/dist/spark/spark-${sparkversion}/spark-${sparkversion}-bin-hadoop2.7.tgz && \\\n\ttar zxf spark-${sparkversion}-bin-hadoop2.7.tgz && \\\n\tmv spark-${sparkversion}-bin-hadoop2.7 spark && \\\n\tcp spark/conf/spark-env.sh.template spark/conf/spark-env.sh && \\\n\techo \"export SPARK_DIST_CLASSPATH=/opt/postgresql-42.2.2.jar:$(/opt/hadoop/bin/hadoop classpath)\" >> spark/conf/spark-env.sh && rm spark-${sparkversion}-bin-hadoop2.7.tgz\n\n\n####################\n# HIVE\n####################\nRUN cd /opt && \\\n\twget --quiet https://archive.apache.org/dist/hive/hive-${hiveversion}/apache-hive-${hiveversion}-bin.tar.gz && \\\n\ttar zxf apache-hive-${hiveversion}-bin.tar.gz && \\\n\tln -s apache-hive-${hiveversion}-bin hive && \\\n\tln -s /opt/hive/jdbc/hive-jdbc-${hiveversion}-standalone.jar /opt/hive/lib/ && \\\n\trm apache-hive-${hiveversion}-bin.tar.gz\n\n####################\n# R PACKAGES\n####################\n# Switch to rstudio CRAN mirror (untested)\n# RUN R CMD options(repos = c(CRAN = \"https://cran.rstudio.com\"))\n# Set environment variable for rJava package installation\nENV LD_LIBRARY_PATH $JAVA_HOME/jre/lib/amd64:$JAVA_HOME/jre/lib/amd64/server\n# Install R packages\nRUN Rscript -e \"install.packages(c(\\\"rjson\\\", \\\"RJSONIO\\\", \\\"jsonlite\\\", \\\"bit64\\\", \\\"bit\\\", \\\"functional\\\", \\\"R.methodsS3\\\", \\\"reshape2\\\", \\\"httr\\\", \\\"rvest\\\", \\\"datadr\\\", \\\"trelliscope\\\", \\\"DBI\\\", \\\"RPostgreSQL\\\", \\\"RJDBC\\\", \\\"dbplyr\\\", \\\"glmnet\\\", \\\"testthat\\\", \\\"roxygen2\\\", \\\"XML\\\", \\\"xml2\\\", \\\"housingData\\\", \\\"Lahman\\\", \\\"nycflights13\\\", \\\"flexdashboard\\\", \\\"sparklyr\\\"), repos = 'http://cran.rstudio.com')\"\n# Copy repository packages to filesystem\nADD rjava.tar.gz rhdfs.tar.gz rmr.tar.gz /tmp/pkgs/\n# Install repository packages\nRUN cd /tmp/pkgs && R CMD INSTALL rJava rmr2 rhdfs\n\nADD protobuf-2.5.0.tar.gz Rhipe_0.75.2_hadoop-2.tar.gz /tmp/\nRUN cd /tmp/protobuf-2.5.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && cd .. && rm -rf protobuf-* && \\\n\tcd /tmp/Rhipe && R CMD INSTALL . && cd .. && rm -rf Rhipe\n\nADD postgresql-42.2.2.jar /opt\n\n####################\n# ENVIRONMENT CONFIG\n####################\n# Add necessary mods to Renviron file\nADD Renviron /usr/local/lib/R/etc/\nADD hdfs-site.xml core-site.xml log4j.properties /opt/hadoop/etc/hadoop/\n# Create symlink to actual Rscript\nRUN ln -s /usr/local/bin/Rscript /usr/bin/Rscript\n\n# Add path to profile so commands are found if attach to the container\nRUN echo \"PATH='/opt/hadoop/bin:/opt/spark/bin:/opt/hive/bin:$PATH'\" >> /etc/profile\n# this is useless because it only sets it for the following commands in the Dockerfile\n#ENV PATH /opt/hadoop/bin:/opt/spark/bin:/opt/hive/bin::$PATH\n\n# Install Python3\n# NOTE: python 3 uses the command 'python3'\nRUN easy_install pip && apt-get install --no-install-recommends -y python3 && pip install --no-cache-dir virtualenv && rm -rf /var/lib/apt/lists/*;\n\n# Install TensorFlow Package\nRUN R -e \"install.packages(\\\"tensorflow\\\")\"\n\n# USER rstudio\nADD rspark-tests /home/rstudio/\nRUN chown -R rstudio:rstudio /home/rstudio\n\n# USER root\nEXPOSE 8787\n# VOLUME /home/rstudio\n\nCMD [\"/init\"]\n\n\n\n"
}