{
  "startTime": 1674243806227,
  "endTime": 1674243806614,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 53,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 27,
        "columnStart": 76,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.3-slim\n\nRUN mkdir -p /opt/homs\nRUN mkdir -p /opt/oracle\n\nCOPY instantclient*.zip /opt/oracle/\n\nRUN apt-get update -q && apt-get purge -y cmdtest && apt-get install --no-install-recommends -yq wget gnupg && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && wget -qO- https://deb.nodesource.com/setup_10.x | bash -\n\nRUN seq 1 8 | xargs -I{} mkdir -p /usr/share/man/man{} && apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  git \\\n  libaio1 \\\n  libpq-dev \\\n  libxml2 \\\n  libxml2-dev \\\n  libxslt-dev \\\n  make \\\n  nodejs \\\n  pkg-config \\\n  postgresql-client \\\n  ruby-dev \\\n  unzip \\\n  yarn && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/oracle\n\nRUN unzip 'instantclient*.zip' && \\\n  cd /opt/oracle/instantclient_11_2 && \\\n  ln -s libclntsh.so.11.1 libclntsh.so && \\\n  ln -s libocci.so.11.1 libocci.so && \\\n  ln -s libsqora.so.11.1 libsqora.so\n\nENV TNS_ADMIN         /etc/oracle/\nENV LD_LIBRARY_PATH   /opt/oracle/instantclient_11_2\nENV DYLD_LIBRARY_PATH /opt/oracle/instantclient_11_2\nENV NLS_LANG          AMERICAN_RUSSIA.AL32UTF8\n\nRUN useradd --uid 2004 --home /opt/homs --shell /bin/bash --comment \"HOMS\" homs\n\nUSER homs\nWORKDIR /opt/homs\n\nCOPY Gemfile Gemfile.lock Rakefile config.ru package.json yarn.lock /opt/homs/\nCOPY hbw/*.gemspec /opt/homs/hbw/\nCOPY hbw/lib/hbw/ /opt/homs/hbw/lib/hbw/\n\nENV NOKOGIRI_USE_SYSTEM_LIBRARIES=1\n\nRUN gem install bundler\nRUN bundle config --global frozen 1\nRUN bundle --with oracle --without test\n\nCOPY app/      /opt/homs/app/\nCOPY bin/      /opt/homs/bin/\nCOPY config/   /opt/homs/config/\nCOPY db/       /opt/homs/db/\nCOPY fixtures/ /opt/homs/fixtures/\nCOPY lib/      /opt/homs/lib/\nCOPY public/   /opt/homs/public/\nCOPY spec/     /opt/homs/spec/\nCOPY vendor/   /opt/homs/vendor/\nCOPY hbw/      /opt/homs/hbw/\n\nCOPY ./entrypoint.sh ./wait_for_postgres.sh /\n\nUSER root\n\nARG VERSION\n\nRUN echo $VERSION > /opt/homs/VERSION\n\nRUN chown -R homs:homs /opt/homs\nRUN chmod +x /entrypoint.sh /wait_for_postgres.sh\n\nRUN find config -name '*.sample' | xargs -I{} sh -c 'cp $1 ${1%.*}' -- {}\nRUN mkdir /tmp/config\nRUN cp -r /opt/homs/config/* /tmp/config\n\nEXPOSE 3000\n\nUSER homs\n\nRUN yarn install && bundle exec rails assets:precompile && rm -rf /opt/homs/node_modules/ && yarn cache clean;\n\nENV RAILS_ENV=production\n\nWORKDIR /opt/homs\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}