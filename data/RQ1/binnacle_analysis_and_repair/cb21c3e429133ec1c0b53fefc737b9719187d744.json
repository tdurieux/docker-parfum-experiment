{
  "startTime": 1674240698833,
  "endTime": 1674240699104,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.9\nMAINTAINER viewscreen Cloud <github@viewscreen.cloud>\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /go/src/github.com/viewscreen/viewscreen\n\nRUN go get \\\n    github.com/jteeuwen/go-bindata/... \\\n    github.com/PuerkitoBio/goquery \\\n    github.com/armon/circbuf \\\n    github.com/disintegration/imaging \\\n    github.com/dustin/go-humanize \\\n    github.com/julienschmidt/httprouter \\\n    github.com/eduncan911/podcast \\\n    github.com/rylio/ytdl \\\n    go.uber.org/zap \\\n    golang.org/x/crypto/acme/autocert \\\n    github.com/anacrolix/torrent \\\n    github.com/anacrolix/utp \\\n    golang.org/x/time/rate\n\n\nCOPY *.go ./\nCOPY internal ./internal\nCOPY static ./static\nCOPY templates ./templates\n\nARG BUILD_VERSION=unknown\n\nENV GODEBUG=\"netdns=go http2server=0\"\nENV GOPATH=\"/go\"\n\n\nRUN go fmt && \\\n    go vet --all && \\\n    go-bindata --pkg main static/... templates/...\n\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \\\n    go build -v --compiler gc --ldflags \"-extldflags -static -s -w -X main.version=${BUILD_VERSION}\" -o /usr/bin/viewscreen-linux-amd64\n\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 \\\n    go build -v --compiler gc --ldflags \"-extldflags -static -s -w -X main.version=${BUILD_VERSION}\" -o /usr/bin/viewscreen-linux-armv7\n\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=arm64 \\\n    go build -v --compiler gc --ldflags \"-extldflags -static -s -w -X main.version=${BUILD_VERSION}\" -o /usr/bin/viewscreen-linux-arm64\n\n"
}