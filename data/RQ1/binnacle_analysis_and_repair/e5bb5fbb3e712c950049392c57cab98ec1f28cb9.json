{
  "startTime": 1674244372931,
  "endTime": 1674244373008,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV LAST_UPDATED 20150504\n\n# Install Percona Server, client, toolkit and xtrabackup.\nRUN \\\n  apt-key adv --keyserver keys.gnupg.net --recv-keys 1C4CBDCDCD2EFD2A && \\\n  echo \"deb http://repo.percona.com/apt `lsb_release -cs` main\" > /etc/apt/sources.list.d/percona.list && \\\n  apt-get update && \\\n  apt-get -y upgrade && \\\n  apt-get install --no-install-recommends -y percona-server-server-5.6 percona-server-client-5.6 percona-toolkit percona-xtrabackup qpress && rm -rf /var/lib/apt/lists/*;\n\n# Install autossh for permanent tunnel creation.\nRUN apt-get install --no-install-recommends -y autossh && rm -rf /var/lib/apt/lists/*;\n\n# Empty mysql data dir, so that our init script can start from a clean slate\nRUN rm -rf /var/lib/mysql/*\n\n# Define mountable directories.\nVOLUME [\"/etc/mysql\", \"/var/lib/mysql\", \"/backups\"]\n\n# Add a default, tweaked mysql config. In production should be replaced by a mounted volume, with your own config managed by your orchestration solution (Chef, etc.)\nADD mysql/my.cnf /etc/mysql/my.cnf\n\nADD scripts/* /usr/bin/\n\n# Define default command.\nCMD [\"mysqld_with_init\"]\n\n# Expose ports.\nEXPOSE 3306"
}