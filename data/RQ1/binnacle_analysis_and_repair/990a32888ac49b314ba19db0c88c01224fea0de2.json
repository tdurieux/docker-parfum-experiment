{
  "startTime": 1674249725159,
  "endTime": 1674249725263,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dockcross/base:latest\nMAINTAINER Matt McCormick \"matt.mccormick@kitware.com\"\n\n# Enable 32 bits binaries\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y libstdc++6:i386 libgcc1:i386 zlib1g:i386 && rm -rf /var/lib/apt/lists/*;\n\n# The cross-compiling emulator\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  qemu-user \\\n  qemu-user-static && rm -rf /var/lib/apt/lists/*;\n\nENV CROSS_TRIPLE arm-linux-gnueabihf\nENV CROSS_ROOT /usr/${CROSS_TRIPLE}\nENV AS=/usr/bin/${CROSS_TRIPLE}-as \\\n    AR=/usr/bin/${CROSS_TRIPLE}-ar \\\n    CC=/usr/bin/${CROSS_TRIPLE}-gcc \\\n    CPP=/usr/bin/${CROSS_TRIPLE}-cpp \\\n    CXX=/usr/bin/${CROSS_TRIPLE}-g++ \\\n    LD=/usr/bin/${CROSS_TRIPLE}-ld \\\n    FC=/usr/bin/${CROSS_TRIPLE}-gfortran\n\n# Raspberry Pi is ARMv6+VFP2, Debian armhf is ARMv7+VFP3\n# Since this Dockerfile is targeting linux-arm from Raspberry Pi onward,\n# we're sticking with it's custom built cross-compiler with hardfp support.\n# We could use Debian's armel, but we'd have softfp and loose a good deal\n# of performance.\n# See: https://wiki.debian.org/RaspberryPi\n# We are also using the 4.7 version of the toolchain, so that glibc=2.13\n\n# Instead of cloning the whole repo (>1GB at the of writing this), we want to do a so-called \"sparse checkout\" with \"shallow cloning\":\n# https://stackoverflow.com/questions/600079/is-there-any-way-to-clone-a-git-repositorys-sub-directory-only/13738951#13738951\n\nRUN mkdir rpi_tools && cd rpi_tools && git init && git remote add -f origin https://github.com/raspberrypi/tools && \\\n    git config core.sparseCheckout true && echo \"arm-bcm2708/gcc-linaro-${CROSS_TRIPLE}-raspbian\" >> .git/info/sparse-checkout && \\\n    git pull --depth=1 origin master && rsync -av arm-bcm2708/gcc-linaro-${CROSS_TRIPLE}-raspbian/ /usr/ && rm -rf ../rpi_tools\n\n# Allow dynamically linked executables to run with qemu-arm\nENV QEMU_LD_PREFIX ${CROSS_ROOT}/libc\nENV QEMU_SET_ENV \"LD_LIBRARY_PATH=${CROSS_ROOT}/lib:${CROSS_ROOT}/libc/lib/${CROSS_TRIPLE}/\"\n\nCOPY Toolchain.cmake ${CROSS_ROOT}/\nENV CMAKE_TOOLCHAIN_FILE ${CROSS_ROOT}/Toolchain.cmake\n\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG IMAGE=dockcross/linux-armv6\nARG VERSION=latest\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=$IMAGE \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.schema-version=\"1.0\"\nENV DEFAULT_DOCKCROSS_IMAGE ${IMAGE}:${VERSION}\n"
}