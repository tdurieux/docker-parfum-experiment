{
  "startTime": 1674243101068,
  "endTime": 1674243101235,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 AS builder\nMAINTAINER Marcel Dancak \"dancakm@gmail.com\"\n\nARG version\n\n# Install system packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python-setuptools \\\n    python-pip \\\n    git \\\n    apt-utils \\\n    patch \\\n    curl \\\n    make \\\n    g++ \\\n    && rm -rf /var/lib/apt/lists/*\n\n\nRUN curl -f -sL https://deb.nodesource.com/setup_4.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n\nCOPY ./server/ /gisquick/server\nCOPY ./clients/ /gisquick/clients/\n\nWORKDIR /gisquick/clients/\nRUN npm install && \\\n    npm install web && \\\n    npm install -g gulp && npm cache clean --force;\n\nRUN gulp icons-web && \\\n    gulp build-web && \\\n    gulp build-userpage\n\nWORKDIR /gisquick/server\nRUN echo \"VERSION = '${version}'\" > webgis/__init__.py && \\\n    python setup.py sdist\n\nCMD echo 'Build is finished.'\n\n\nFROM ubuntu:16.04\n\nARG version\n\n# Install system packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python3-setuptools \\\n    python3-pip \\\n    python3-owslib \\\n    supervisor \\\n    sqlite3 \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# Install Gunicorn and GIS.lab Web dependencies\nCOPY --from=builder /gisquick/server/dist/gisquick-${version}.tar.gz /tmp/gisquick.tar.gz\n\nRUN pip3 install --no-cache-dir 'gunicorn>=19.7,<19.8' && \\\n    pip3 install --no-cache-dir /tmp/gisquick.tar.gz && \\\n    rm /tmp/gisquick.tar.gz\n\n\n# Create GisQuick Django project\nRUN mkdir -p /var/www/gisquick && \\\n    mkdir -p /var/log/django/ && \\\n    mkdir -p /var/log/gunicorn/ && \\\n    django-admin startproject --template=/usr/local/lib/python3.5/dist-packages/webgis/conf/project_template/ djproject /var/www/gisquick/\n\nCOPY ./docker/django/settings_custom.py /var/www/gisquick/djproject/settings_custom.py\n\nENV PYTHONPATH $PYTHONPATH:/var/www/gisquick/\nENV DJANGO_SETTINGS_MODULE djproject.settings\n\n\n# Configure Gunicorn and Supervisor\nCOPY ./docker/django/gunicorn_conf.py /var/www/gisquick/gunicorn_conf.py\nCOPY ./docker/django/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n\nVOLUME /var/www/gisquick/static/\nVOLUME /var/www/gisquick/media/\nVOLUME /var/www/gisquick/data/\nEXPOSE 8000\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n"
}