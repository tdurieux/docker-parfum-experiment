{
  "startTime": 1674237012124,
  "endTime": 1674237012275,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get clean && apt-get update &&\\\n  set -eux &&\\\n  apt-get --no-install-recommends -y install \\\n      curl \\\n      git \\\n      ca-certificates \\\n      wget \\\n      vim \\\n      python \\\n      sysstat \\\n      attr \\\n      net-tools \\\n      iproute2 \\\n      iputils-ping && \\\n  apt-get -y clean all && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://bootstrap.pypa.io/get-pip.py &&\\\n  python get-pip.py && \\\n  pip install --no-cache-dir awscli\n\n\n# Setting ENV variables\nENV GOLANG_VERSION 1.12\nENV CONFFILE /etc/ais/ais.json\n\n# Reassign arguments to environment variables so run.sh can use them\nARG GOBASE\nENV GOPATH $GOBASE\nENV GOBIN $GOPATH/bin\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nENV WORKDIR $GOPATH/src/github.com/NVIDIA/aistore/ais\n\nRUN mkdir /etc/ais\nRUN mkdir /usr/nvidia\nRUN mkdir -p $GOPATH/src/github.com/NVIDIA\n\n# Installing go\nRUN mkdir -p \"$GOPATH/bin\"\nRUN chmod -R 777 \"$GOPATH\"\nRUN curl -f -LO https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz && \\\n  tar -C /usr/local -xvzf go${GOLANG_VERSION}.linux-amd64.tar.gz && \\\n  rm -rf go${GOLANG_VERSION}.linux-amd64.tar.gz\n\nARG CLDPROVIDER\nENV CLD $CLDPROVIDER\n\n# Dry Run\nARG NODISKIO\nENV NODISK $NODISKIO\n\nARG DRYOBJSIZE\nENV OBJSIZE $DRYOBJSIZE\n\nARG TARGETS\nENV TARGETCNT $TARGETS\nCOPY ais.json $CONFFILE\n\nEXPOSE 8080\n\nENV VERSION `git rev-parse --short HEAD`\nENV BUILD `date +%FT%T%z`\n\nRUN cd $GOPATH/src/github.com/NVIDIA && git clone https://github.com/NVIDIA/aistore.git && cd $WORKDIR\n\nRUN echo \"\\\ncd $WORKDIR && GODEBUG=madvdontneed=1 go install -tags=\\\"${CLD}\\\" -ldflags \\\"-w -s -X 'main.version=${VERSION}' -X 'main.build=${BUILD}'\\\" $WORKDIR/setup/aisnode.go  \\n \\\ncd $GOBIN && $GOBIN/aisnode -config=\\$1 -role=\\$2 -ntargets=\\$3 -nodiskio=\\$4 -nonetio=\\$5 -dryobjsize=\\$6 -alsologtostderr=true  \\n\" \\\n> /run/run.sh\nRUN chmod +x /run/run.sh\nCMD [\"sh\",\"-c\", \"AIS_DAEMONID=`echo $HOSTNAME` /run/run.sh $CONFFILE $ROLE $TARGETCNT $NODISK $OBJSIZE\"]\n"
}