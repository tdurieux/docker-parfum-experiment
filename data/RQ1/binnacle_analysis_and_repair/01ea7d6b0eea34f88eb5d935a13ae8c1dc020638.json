{
  "startTime": 1674250581815,
  "endTime": 1674250582137,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 146
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM jenkins/jenkins:latest\n\nLABEL maintainer \"Gary A. Stafford <garystafford@rochester.rr.com>\"\nENV REFRESHED_AT 2018-04-19\n\n# set variables - *** CHANGE ME ***\nARG docker_compose_version=\"1.21.0\"\nARG packer_version=\"1.2.2\"\nARG terraform_version=\"0.11.7\"\nARG timezone=\"America/New_York\"\n\nENV DOCKER_COMPOSE_VERSION $docker_compose_version\nENV PACKER_VERSION $packer_version\nENV TERRAFORM_VERSION $terraform_version\nENV TIMEZONE $timezone\n\n# switch to install packages via apt\nUSER root\n\n# update and install common packages\nRUN set +x \\\n  && env \\\n  && apt-get update \\\n  && apt-get -y upgrade \\\n  && apt-get -y --no-install-recommends install openrc openntpd tzdata python3 python3-pip jq git && rm -rf /var/lib/apt/lists/*;\n\n# update and install Docker CE and associated packages\nRUN set +x \\\n  && apt-get install --no-install-recommends -y \\\n     lsb-release software-properties-common \\\n     apt-transport-https ca-certificates curl gnupg2 \\\n  && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n  && add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n    $(lsb_release -cs) \\\n    stable\" \\\n  && apt-get update \\\n  && apt-get -y upgrade \\\n  && apt-get install --no-install-recommends -y docker-ce \\\n  && systemctl enable docker && rm -rf /var/lib/apt/lists/*;\n\n# set permissions for jenkins user\nRUN set +x \\\n    && usermod -aG staff,docker jenkins \\\n  && exec bash\n\n# install Docker Compose\nRUN set +x \\\n  && curl -f -L \"https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m`\" > docker-compose \\\n  && cp docker-compose /bin/docker-compose \\\n  && chmod +x /bin/docker-compose\n\n# install AWS CLI\nRUN set +x \\\n  && pip3 install --no-cache-dir awscli --upgrade \\\n  && exec bash\n\n# install HasiCorp Packer\nRUN set +x \\\n  && wget \"https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip\" \\\n  && unzip packer_${PACKER_VERSION}_linux_amd64.zip \\\n  && rm -rf packer_${PACKER_VERSION}_linux_amd64.zip \\\n  && mv packer /bin\n\n# install HasiCorp Terraform\nRUN set +x \\\n  && wget \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" \\\n  && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n  && rm -rf terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n  && mv terraform /bin\n\n# install Jenkins plugins\nCOPY plugins.txt /usr/share/jenkins/plugins.txt\nRUN set +x \\\n  && /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt\n\n# list installed software versions\nRUN set +x \\\n  && echo ''; echo '*** INSTALLED SOFTWARE VERSIONS ***';echo ''; \\\n  cat /etc/*release; python3 --version; \\\n  docker version; docker-compose version; \\\n  git --version; jq --version; pip3 --version; aws --version; \\\n  packer version; terraform version; echo '';\n\nRUN set +x \\\n  && apt-get clean\n\n# set timezone to America/New_York\nRUN set +x \\\n  && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n  && echo \"America/New_York\" >  /etc/timezone \\\n  && date\n\n# drop back to the regular jenkins user - good practice\nUSER jenkins\n"
}