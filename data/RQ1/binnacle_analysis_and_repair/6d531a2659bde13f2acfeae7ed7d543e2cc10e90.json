{
  "startTime": 1674250702072,
  "endTime": 1674250702438,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# team: usf_bulls\n# This is a GPU-based system that uses fmow-rgb sucessfully tested with cuda 8.0 and cudnn 6\n# Our test script removes temporary files and predictions that were previously generated\n# Our train script removes temporary files and models that were previously generated\n\n# ARG cuda_version=8.0\n# ARG cudnn_version=6\n# FROM nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel\nFROM nvidia/cuda:8.0-cudnn6-devel\n\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\n\nRUN mkdir -p $CONDA_DIR && \\\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y vim bc curl wget git libhdf5-dev g++ graphviz openmpi-bin libgl1-mesa-glx && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh && \\\n    echo \"c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a  *Miniconda3-4.2.12-Linux-x86_64.sh\" | sha256sum -c - && \\\n    /bin/bash /Miniconda3-4.2.12-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-4.2.12-Linux-x86_64.sh && rm -rf /var/lib/apt/lists/*;\n\nENV NB_USER keras\nENV NB_UID 1000\n\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown keras $CONDA_DIR -R && \\\n    mkdir -p /src && \\\n    chown keras /src\n\nCOPY . /src/\n\nRUN chown keras /src -R && \\\n    chmod u+x /src/train.sh /src/test.sh && \\\n    g++ /src/iarpa/fusion.cpp -o /src/iarpa/fusion -std=c++11\n\nUSER keras\n\nRUN conda install -y python=2.7 && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir tensorflow-gpu && \\\n    pip install --no-cache-dir --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.4.0rc1-cp27-none-linux_x86_64.whl && \\\n    conda install Pillow scikit-learn notebook pandas matplotlib mkl nose pyyaml six h5py && \\\n    conda install pygpu bcolz && \\\n    pip install --no-cache-dir sklearn_pandas && \\\n    pip install --no-cache-dir git+git://github.com/keras-team/keras.git && \\\n    pip install --no-cache-dir tqdm && \\\n    conda clean -yt\n\nENV PYTHONPATH /src/:$PYTHONPATH\nENV KERAS_BACKEND tensorflow\n\nWORKDIR /src\n\n"
}