{
  "startTime": 1674251761783,
  "endTime": 1674251762002,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build an image with the local version of psiphon-tunnel-core.\n#\n# See README.md for usage instructions.\n\nFROM ubuntu:16.04\n\n# Install system-level dependencies.\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    openjdk-8-jdk \\\n    pkg-config \\\n    zip \\\n    unzip \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Go.\nENV GOVERSION=go1.11.5 GOROOT=/usr/local/go GOPATH=/go PATH=$PATH:/usr/local/go/bin:/go/bin CGO_ENABLED=1\n\nRUN curl -f -L https://storage.googleapis.com/golang/$GOVERSION.linux-amd64.tar.gz -o /tmp/go.tar.gz \\\n  && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n  && rm /tmp/go.tar.gz \\\n  && echo $GOVERSION > $GOROOT/VERSION\n\n# Setup Android Environment.\nENV ANDROID_NDK_ROOT=/android-ndk ANDROID_HOME=/android-sdk-linux\n\n# Setup Android NDK\nRUN cd /tmp \\\n  && curl -f -L https://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin -o /tmp/android-ndk.bin \\\n  && chmod a+x /tmp/android-ndk.bin \\\n  && /tmp/android-ndk.bin \\\n  && rm /tmp/android-ndk.bin \\\n  && ln -s $(find /tmp -type d -name 'android-ndk-*') /android-ndk\n\n# Setup Android SDK.\nRUN curl -f -L https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz -o /tmp/android-sdk.tgz \\\n  && tar -C / -xzf /tmp/android-sdk.tgz \\\n  && rm /tmp/android-sdk.tgz \\\n  && (while true; do echo 'y'; sleep 2; done) | $ANDROID_HOME/tools/android update sdk --no-ui --filter platform,platform-tool,tool\n\n# Install Pinned Gomobile\n#  - Ordered last to allow use of previously cached layers when changing revisions\nENV GOMOBILE_PINNED_REV=c4d780faeb85123ee32b88e84fd022739ed8c124\nRUN mkdir -p $GOPATH/pkg/gomobile/dl \\\n  && cd $GOPATH/pkg/gomobile/dl \\\n  && curl -f -O https://dl.google.com/go/mobile/gomobile-ndk-r10e-linux-x86_64.tar.gz \\\n  && curl -f -O https://dl.google.com/go/mobile/gomobile-openal-soft-1.16.0.1.tar.gz \\\n  && mkdir -p $GOPATH/src/golang.org/x \\\n  && cd $GOPATH/src/golang.org/x \\\n  && git clone https://github.com/golang/mobile \\\n  && cd mobile \\\n  && git checkout -b pinned $GOMOBILE_PINNED_REV \\\n  && mv ./cmd/gomobile/build.go ./cmd/gomobile/build.go.orig \\\n  && sed -e 's/\"-tags=\"+strconv.Quote(strings.Join(ctx.BuildTags, \",\")),/\"-tags\",strings.Join(ctx.BuildTags, \" \"),/g' ./cmd/gomobile/build.go.orig > ./cmd/gomobile/build.go \\\n  && mv ./cmd/gomobile/build.go ./cmd/gomobile/build.go.orig \\\n  && sed -e 's/\"strconv\"//g' ./cmd/gomobile/build.go.orig > ./cmd/gomobile/build.go \\\n  && echo \"master: $(git rev-parse master)\\npinned: $(git rev-parse pinned)\" | tee $GOROOT/MOBILE \\\n  && go install golang.org/x/mobile/cmd/gomobile \\\n  && gomobile init -v\n\nWORKDIR $GOPATH/src\n"
}