{
  "startTime": 1674243045891,
  "endTime": 1674243045997,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 38,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 42,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 11,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\n# Some ENV variables\nENV PATH=\"/mattermost/bin:${PATH}\"\nENV MM_VERSION=5.12.0\n\n# Build argument to set Mattermost edition\nARG edition=enterprise\nARG PUID=2000\nARG PGID=2000\nARG MM_BINARY=\n\n\n# Install some needed packages\nRUN apk add --no-cache \\\n\tca-certificates \\\n\tcurl \\\n\tjq \\\n\tlibc6-compat \\\n\tlibffi-dev \\\n\tlinux-headers \\\n\tmailcap \\\n\tnetcat-openbsd \\\n\txmlsec-dev \\\n\ttzdata \\\n\t&& rm -rf /tmp/*\n\n# Get Mattermost\nRUN mkdir -p /mattermost/data /mattermost/plugins /mattermost/client/plugins \\\n    && if [ ! -z \"$MM_BINARY\" ]; then \\\n    curl -f $MM_BINARY | tar -xvz; \\\n      elif [ \"$edition\" = \"team\" ] ; then \\\n      curl -f https://releases.mattermost.com/$MM_VERSION/mattermost-team-$MM_VERSION-linux-amd64.tar.gz | tar -xvz; \\\n      else curl -f https://releases.mattermost.com/$MM_VERSION/mattermost-$MM_VERSION-linux-amd64.tar.gz | tar -xvz; fi \\\n    && cp /mattermost/config/config.json /config.json.save \\\n    && rm -rf /mattermost/config/config.json \\\n    && addgroup -g ${PGID} mattermost \\\n    && adduser -D -u ${PUID} -G mattermost -h /mattermost -D mattermost \\\n    && chown -R mattermost:mattermost /mattermost /config.json.save /mattermost/plugins /mattermost/client/plugins\n\nUSER mattermost\n\n#Healthcheck to make sure container is ready\nHEALTHCHECK CMD curl --fail http://localhost:8000 || exit 1\n\n# Configure entrypoint and command\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nWORKDIR /mattermost\nCMD [\"mattermost\"]\n\n# Expose port 8000 of the container\nEXPOSE 8000\n\n# Declare volumes for mount point directories\nVOLUME [\"/mattermost/data\", \"/mattermost/logs\", \"/mattermost/config\", \"/mattermost/plugins\", \"/mattermost/client/plugins\"]\n"
}