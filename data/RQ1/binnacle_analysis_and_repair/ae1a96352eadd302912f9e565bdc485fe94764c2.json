{
  "startTime": 1674240332888,
  "endTime": 1674240333171,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################\n# Base node image for dev + builder\n####################################################\nFROM node:8-alpine as dev\nLABEL maintainer \"Charlie McClung <charlie@bowtie.co>\"\nENV BASE_DIR /app\nRUN mkdir -p ${BASE_DIR} && \\\n    npm i -g npm && \\\n    apk add --no-cache git openssh bash && npm cache clean --force;\nWORKDIR ${BASE_DIR}\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\nCOPY . ${BASE_DIR}\nCOPY node-entrypoint.sh /\nENTRYPOINT [ \"/node-entrypoint.sh\" ]\nCMD [ \"npm\", \"start\" ]\n\n####################################################\n# run builder from dev for both staging & production\n####################################################\nFROM dev as builder\nLABEL maintainer \"Charlie McClung <charlie@bowtie.co>\"\nENV BASE_DIR /app\nRUN APP_ENV=staging npm run build && mv build ${BASE_DIR}/staging\nRUN APP_ENV=production npm run build && mv build ${BASE_DIR}/production\n\n####################################################\n# run staging/production environment (based on ENV)\n####################################################\nFROM nginx:1.13.9-alpine\nLABEL maintainer \"Charlie McClung <charlie@bowtie.co>\"\nENV BASE_DIR /app\nRUN rm -rf /etc/nginx/conf.d\nCOPY nginx-entrypoint.sh /\nCOPY nginx /etc/nginx\nCOPY --from=builder ${BASE_DIR} ${BASE_DIR}\nEXPOSE 80\nENTRYPOINT [ \"/nginx-entrypoint.sh\" ]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}