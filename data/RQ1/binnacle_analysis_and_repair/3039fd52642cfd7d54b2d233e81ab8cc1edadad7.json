{
  "startTime": 1674251301942,
  "endTime": 1674251302055,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########################################################################\n#                   JBoss Developer Studio via HTML5                   #\n########################################################################\n\nFROM fedora:26\n\nMAINTAINER Rich Lucente <rlucente@redhat.com>\n\nLABEL vendor=\"Red Hat\"\nLABEL version=\"0.2\"\nLABEL description=\"JBoss Developer Studio IDE\"\n\nENV HOME /home/jbdsuser\n\n# Add the needed packages for JBDS\nRUN    dnf -y update \\\n    && dnf -y install \\\n           gettext \\\n           gtk3 \\\n           java-1.8.0-openjdk-devel \\\n           liberation-sans-fonts \\\n           webkitgtk3 \\\n           maven \\\n           nss_wrapper \\\n           openbox \\\n           tigervnc-server \\\n           wmctrl \\\n           origin-clients \\\n    && dnf -y clean all\n\n# Create installation directory and set the openbox window manager\n# configuration for all users\nRUN    mkdir -p /usr/share/devstudio \\\n    && echo 'export DISPLAY=:1' >> /etc/xdg/openbox/environment \\\n    && echo \"/usr/share/devstudio/devstudio -nosplash -data ${HOME}/workspace &\" \\\n             >> /etc/xdg/openbox/autostart\n\n# Add the installation configuration file\nADD resources/InstallConfigRecord.xml /usr/share/devstudio/\n\n# Install JBoss Developer Studio.  The needed files will be downloaded\n# from the provided URL. The reason for this is to not include the\n# JBDS distribution in the docker layer since this image is going to\n# be quite large.  If the docker ADD instruction is used the file\n# becomes a permanent part of that layer, bloating the size of an\n# already large image.\n#\n# The for loops scan the JBDS installation for native libraries and\n# then remove any that are already present in the system libraries.\n# Redundant libraries that varied by version resulted in JBDS\n# crashes.\n#\n# Finally, the last command installs the JBoss integration tooling.\n#\nRUN mkdir -p /tmp/resources \\\n    && cd /tmp/resources \\\n    && curl -f -L -o $JBDS_JAR $INSTALLER_URL \\\n    && java -jar $JBDS_JAR /usr/share/devstudio/InstallConfigRecord.xml \\\n    && cd /usr/share/devstudio \\\n    && for ext in so chk; do \\\n         for jbdslib in `find . -name \"*.$ext\"`; do \\\n           jbdslib_basename=`basename $jbdslib`; \\\n           for syslibdir in /lib64 /usr/lib64; do \\\n             for dummy in `find $syslibdir -name $jbdslib_basename`; do \\\n               [ -f $jbdslib ] && rm -f $jbdslib; \\\n             done; \\\n           done; \\\n         done; \\\n       done \\\n    && rm -fr /tmp/resources\n\n# This script starts and cleanly shuts down JBDS and the Xvnc server\nADD resources/start.sh /usr/local/bin/\n\n# This file is used to create a temporary passwd file for use by\n# the NSS wrapper so that the openbox window manager can launch\n# correctly.  OCP will use a non-deterministic user id, so we have\n# to provide a valid passwd entry for that UID for openbox\nADD resources/passwd.template /usr/local/share/\n\n# Create the home directory and set permissions\nRUN    mkdir -p ${HOME} \\\n    && chmod a+rwX ${HOME} \\\n    && chmod a+rx /usr/local/bin/start.sh \\\n    && chmod a+r /usr/local/share/passwd.template\n\nEXPOSE 5901\n\nUSER 1000\n\nCMD /usr/local/bin/start.sh\n\n# No volume support yet, so everything in /home/jbdsuser is ephemeral.\n# Eventually this can be a mounted persistent volume so each user can\n# have a persistent maven repository, workspace, etc.\n"
}