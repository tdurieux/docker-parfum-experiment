{
  "startTime": 1674242746876,
  "endTime": 1674242747036,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 6,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=10.14.0\nFROM node:${NODE_VERSION}\n\n# Add our user and group first to make sure their IDs get assigned consistently,\n# regardless of whatever dependencies get added.\nRUN groupadd --system nightmare && useradd --system --create-home --gid nightmare nightmare\n\n# Installing the pre-required packages and libraries for electron & Nightmare\nRUN apt-get update && \\\n      apt-get install --no-install-recommends -y libgtk2.0-0 libgconf-2-4 \\\n      libasound2 libxtst6 libxss1 libnss3 xvfb && rm -rf /var/lib/apt/lists/*;\n\n# Install latest chrome dev package.\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/*.deb\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome-unstable'})\n# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\n\n# Add pptr user.\nRUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads \\\n    && chown -R pptruser:pptruser /home/pptruser \\\n    && chown -R pptruser:pptruser /home/pptruser\n\n\n#RUN mkdir /home/codecept\n\nCOPY . /codecept\n\nRUN chown -R pptruser:pptruser /codecept\nRUN runuser -l pptruser -c 'npm install --loglevel=warn --prefix /codecept'\n\nRUN ln -s /codecept/bin/codecept.js /usr/local/bin/codeceptjs\nRUN mkdir /tests\nWORKDIR /tests\n\n# Allow to pass argument to codecept run via env variable\nENV CODECEPT_ARGS=\"\"\nENV RUN_MULTIPLE=false\n\n# Set HOST ENV variable for Selenium Server\nENV HOST=selenium\n\n# Run user as non privileged.\n# USER pptruser\n\n# Set the entrypoint for Nightmare\nENTRYPOINT [\"/codecept/docker/entrypoint\"]\n\n# Run tests\nCMD [\"bash\", \"/codecept/docker/run.sh\"]\n"
}