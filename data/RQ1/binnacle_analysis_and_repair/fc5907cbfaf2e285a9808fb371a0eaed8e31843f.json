{
  "startTime": 1674248142898,
  "endTime": 1674248143018,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#--------------------------------------------------------------------\n# Go\n\nARG GOLANG_VERSION=1.11.4\n\nFROM golang:$GOLANG_VERSION as golang_stage\n\n#====================================================================\n# Actual Image\n#====================================================================\n\n#--------------------------------------------------------------------\n# Base packages and OS\n\nFROM ubuntu:18.04\n\n# Install all the packages we care about\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -qq && apt-get upgrade -y && apt-get install -y \\\n    build-essential \\\n    curl \\\n    docker.io \\\n    git \\\n    gnupg2 \\\n    jq \\\n    locales \\\n    openssh-client \\\n    silversearcher-ag \\\n    sudo \\\n    tmux \\\n    vim-nox \\\n    --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Locale defaults to empty, so let's setup our locale\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n\tlocale-gen --purge $LANG && \\\n\tdpkg-reconfigure --frontend=noninteractive locales && \\\n\tupdate-locale LANG=$LANG LC_ALL=$LC_ALL LANGUAGE=$LANGUAGE\n\n# Passwordless sudo for \"sudo\" group\nRUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" >/etc/sudoers.d/sudo\n\n#--------------------------------------------------------------------\n# Keybase\n\n# Install Keybase\nRUN curl -f -s -O https://prerelease.keybase.io/keybase_amd64.deb && \\\n    apt-key adv --fetch-keys https://keybase.io/docs/server_security/code_signing_key.asc && \\\n    apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y ./keybase_amd64.deb && \\\n    rm keybase_amd64.deb; \\\n    rm -rf /var/lib/apt/lists/* /var/cache/*\n\n#--------------------------------------------------------------------\n# Go\n\nCOPY --from=golang_stage /usr/local/go /usr/local/go\nENV PATH=\"/usr/local/go/bin:$PATH\"\n\n# Set this so that we can choose to temporarily compile Go versions\n# inside our own dev environment if we wanted to.\nENV GOROOT_BOOTSTRAP=\"/usr/local/go\"\n\n#--------------------------------------------------------------------\n# Create the user - we need an unprivileged user for Keybase to work\n# properly. And we need Keybase to have our keys to sign commits.\n\nARG USER=mitchellh\nARG USER_ID=1000\nRUN useradd -m -u $USER_ID -G users,sudo,docker -s /bin/bash $USER\nUSER $USER\n\n#--------------------------------------------------------------------\n# Login\n\n# Proper colors\nENV TERM screen-256color\n\n# Make sure when we enter that we start in our home directory\nWORKDIR /home/$USER\n\n# I use bash, so let's drop right into bash\nCOPY entrypoint.sh /bin/entrypoint.sh\nCMD [\"/bin/entrypoint.sh\"]\n"
}