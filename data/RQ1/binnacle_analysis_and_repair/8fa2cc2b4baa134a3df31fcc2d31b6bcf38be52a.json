{
  "startTime": 1674236134622,
  "endTime": 1674236134829,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.8-alpine3.9\n\nARG root=/app\nARG R_BASE_VERSION=3.5.2\n\nLABEL kind=app\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONPATH=${root} PREFIX=${root} \\\n\t\tSTATIC_ROOT=/static MEDIA_ROOT=/media \\\n\t\tSTATIC_ROOT_SOURCE=/static-source \\\n    NACP_DECLARATIONS_PATH=/import \\\n    DRAGNET_EXPORT_PATH=${root}/dragnet/data/export DRAGNET_IMPORT_PATH=${root}/dragnet/data/import \\\n    EXPORT_TMP=/export-tmp \\\n    APP_NAME=\"declarations_site.wsgi:application\" APP_WORKERS=\"2\"\n\nWORKDIR ${root}\n\nRUN /usr/sbin/adduser -D -h ${root} app\n\nCOPY requirements.txt ${root}/requirements.txt\nCOPY dragnet/utils/requirements.txt ${root}/dragnet/utils/requirements.txt\n\nRUN apk add --no-cache su-exec postgresql-libs libjpeg libxml2 libstdc++ binutils libffi libxslt \\\n    && apk add --no-cache --virtual .build-deps jpeg-dev zlib-dev postgresql-dev build-base \\\n        libffi-dev libxml2-dev libxslt-dev \\\n    && PREFIX=/usr/local pip --no-cache-dir install cython -r ${root}/requirements.txt \\\n    # do not mix this with above\n    && PREFIX=/usr/local pip --no-cache-dir install -r ${root}/dragnet/utils/requirements.txt \\\n    && runDeps=\"$( \\\n      scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n        | tr ',' '\\n' \\\n        | sort -u \\\n        | awk 'system(\"[ -e /usr/local/lib\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n    )\" \\\n      apk add --no-cache --virtual .app-rundeps $runDeps \\\n    && apk del .build-deps \\\n    && rm -rf /root/.cache\n\nRUN apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ lbzip2\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nARG version\nRUN [ \"x${version}\" = \"x\" ] && echo 'build-arg \"version\" is is missing' && exit 1 || exit 0\nENV VERSION=${version}\n\nCOPY declarations_site ${root}/declarations_site\nCOPY dragnet ${root}/dragnet\n\nENV PYTHONPATH=${root}/declarations_site\n\nCOPY aggregated_migrated.json.tmpl /aggregated_migrated.json.tmpl\n\nRUN mkdir -p ${STATIC_ROOT} ${STATIC_ROOT_SOURCE} ${MEDIA_ROOT} \\\n             ${NACP_DECLARATIONS_PATH} \\\n             ${DRAGNET_EXPORT_PATH} ${DRAGNET_IMPORT_PATH} \\\n             ${EXPORT_TMP} \\\n    && apk add --no-cache ruby npm curl \\\n    && apk add --no-cache --virtual .static-build-deps ruby-dev build-base ruby-rdoc gettext \\\n    && gem install sass \\\n    && envsubst < /aggregated_migrated.json.tmpl > ${root}/dragnet/data/profiles/aggregated_migrated.json \\\n    && apk del .static-build-deps \\\n    && npm config set unsafe-perm true \\\n    && npm install -g uglify-js \\\n    && python -m compileall ${root} \\\n    && PATH=${PATH}:${root}/bin \\\n       STATIC_ROOT=${STATIC_ROOT_SOURCE} \\\n       python ${root}/declarations_site/manage.py collectstatic && npm cache clean --force;\n\n\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\n\nVOLUME [ \"${STATIC_ROOT}\", \"${MEDIA_ROOT}\", \\\n         \"${NACP_DECLARATIONS_PATH}\", \\\n         \"${DRAGNET_EXPORT_PATH}\", \"${DRAGNET_IMPORT_PATH}\", \\\n         \"${EXPORT_TMP}\" ]\n\nEXPOSE 8000\n\nCMD [ \"gunicorn\" ]\n"
}