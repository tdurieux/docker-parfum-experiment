{
  "startTime": 1674236256556,
  "endTime": 1674236256651,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=8 \n############################# \nFROM node:$NODE_VERSION AS builder \nRUN apt-get -qq update \\  \n&& DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\  \npigz \\  \n&& apt-get clean \\  \n&& rm -rf /var/lib/apt/lists/* \nRUN mkdir /workdir \nWORKDIR /workdir \nCOPY package.json yarn.lock ./ \nRUN yarn install --no-cache --frozen-lockfile && yarn cache clean;\n\n# keep this in sync with .dockerignore \nCOPY ./static ./static \nCOPY ./comments ./comments \nCOPY ./src ./src \nCOPY \\  \n./package.json \\  \n./yarn.lock \\  \n./gatsby* \\  \n./.babelrc \\  \n./.eslintrc \\  \n./.eslintignore \\  \n./.mdlrc \\  \n./.mdlstyle.rb \\  \n./.prettierrc \\  \n./ \n\n################### \nFROM builder AS lint \nRUN yarn run lint \n\n################### \nFROM lint AS build \nENV NODE_ENV production \nRUN yarn run build \n\n################### \nFROM build AS compress \nRUN find public -type f \\  \n\\\\( \\  \n-name '*.css' -o \\  \n-name '*.html' -o \\  \n-name '*.js' -o \\  \n-name '*.json' -o \\  \n-name '*.map' -o \\  \n-name '*.svg' -o \\  \n-name '*.txt' -o \\  \n-name '*.xml' \\  \n\\\\) -print0 | xargs -0 pigz -11 --keep \n\n################################# \nFROM nginx:stable-alpine AS final \n\nLABEL maintainer=\"Christian HÃ¶ltje <https://docwhat.org>\" \\  \norg.label-schema.name=\"Website for docwhat.org\" \\  \norg.label-schema.url=\"https://docwhat.org/\" \\  \norg.label-schema.schema-version=\"1.0\" \n\nCOPY \\--from=compress /workdir/public/ /html \nCOPY nginx.conf /etc/nginx/nginx.conf \n\n"
}