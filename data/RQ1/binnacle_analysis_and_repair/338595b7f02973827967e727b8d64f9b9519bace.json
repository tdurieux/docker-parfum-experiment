{
  "startTime": 1674250012922,
  "endTime": 1674250015201,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 12,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 12,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 8,
        "columnEnd": 161
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 8,
        "columnEnd": 181
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 7,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 7,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 7,
        "columnEnd": 183
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 188,
        "lineEnd": 188,
        "columnStart": 7,
        "columnEnd": 211
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 7,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 242,
        "lineEnd": 242,
        "columnStart": 7,
        "columnEnd": 193
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 7,
        "columnEnd": 155
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 276,
        "lineEnd": 276,
        "columnStart": 7,
        "columnEnd": 215
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 294,
        "lineEnd": 294,
        "columnStart": 7,
        "columnEnd": 191
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 307,
        "lineEnd": 307,
        "columnStart": 12,
        "columnEnd": 173
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 322,
        "lineEnd": 322,
        "columnStart": 11,
        "columnEnd": 187
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 335,
        "lineEnd": 335,
        "columnStart": 11,
        "columnEnd": 211
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 348,
        "lineEnd": 348,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 219,
        "lineEnd": 219,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 29,
        "columnStart": 12,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 12,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 100,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 135,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 12,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 12,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 261,
        "lineEnd": 261,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 277,
        "lineEnd": 277,
        "columnStart": 7,
        "columnEnd": 120
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 295,
        "lineEnd": 295,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 323,
        "lineEnd": 323,
        "columnStart": 11,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 336,
        "lineEnd": 336,
        "columnStart": 11,
        "columnEnd": 120
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 225,
        "lineEnd": 225,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# apigateway\n#\n# VERSION               1.9.7.3\n#\n# From https://hub.docker.com/_/alpine/\n# alpine:3.4 if go <1.7\nFROM alpine:3.4\n\n# install dependencies\nRUN apk update \\\n    && apk add --no-cache gcc tar libtool zlib jemalloc jemalloc-dev perl \\\n    make musl-dev openssl-dev pcre-dev g++ zlib-dev curl python \\\n    perl-test-longstring perl-list-moreutils perl-http-message \\\n    geoip-dev sudo\n\nENV ZMQ_VERSION 4.0.5\nENV CZMQ_VERSION 2.2.0\n\n# Installing throttling dependencies\nRUN echo \" ... adding throttling support with ZMQ and CZMQ\" \\\n         && apk add autoconf automake \\\n         && curl -f -L https://github.com/zeromq/zeromq4-x/archive/v${ZMQ_VERSION}.tar.gz -o /tmp/zeromq.tar.gz \\\n         && cd /tmp/ \\\n         && tar -xf /tmp/zeromq.tar.gz \\\n         && cd /tmp/zeromq*/ \\\n         && ./autogen.sh \\\n         && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n                        --sysconfdir=/etc \\\n                        --mandir=/usr/share/man \\\n                        --infodir=/usr/share/info \\\n         && make && make install \\\n         && curl -f -L https://github.com/zeromq/czmq/archive/v${CZMQ_VERSION}.tar.gz -o /tmp/czmq.tar.gz \\\n         && cd /tmp/ \\\n         && tar -xf /tmp/czmq.tar.gz \\\n         && cd /tmp/czmq*/ \\\n         && ./autogen.sh \\\n         && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n                        --sysconfdir=/etc \\\n                        --mandir=/usr/share/man \\\n                        --infodir=/usr/share/info \\\n         && make && make install \\\n         && apk del automake autoconf \\\n         && rm -rf /tmp/zeromq* && rm -rf /tmp/czmq* \\\n         && rm -rf /var/cache/apk/* && rm /tmp/zeromq.tar.gz\n\n# openresty build\nENV OPENRESTY_VERSION=1.13.6.1 \\\n    PCRE_VERSION=8.37 \\\n    TEST_NGINX_VERSION=0.24 \\\n    _prefix=/usr/local \\\n    _exec_prefix=/usr/local \\\n    _localstatedir=/var \\\n    _sysconfdir=/etc \\\n    _sbindir=/usr/local/sbin\n\nRUN echo \" ... adding Openresty, NGINX, and PCRE\" \\\n     && mkdir -p /tmp/api-gateway \\\n     && readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n     && echo \"using up to $NPROC threads\" \\\n\n     && cd /tmp/api-gateway/ \\\n     && curl -f -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/pcre-${PCRE_VERSION}.tar.gz -o /tmp/api-gateway/pcre-${PCRE_VERSION}.tar.gz \\\n     && curl -f -L https://s3.amazonaws.com/adobe-cloudops-apip-installers-ue1/3rd-party/openresty-${OPENRESTY_VERSION}.tar.gz -o /tmp/api-gateway/openresty-${OPENRESTY_VERSION}.tar.gz \\\n     && tar -zxf ./openresty-${OPENRESTY_VERSION}.tar.gz \\\n     && tar -zxf ./pcre-${PCRE_VERSION}.tar.gz \\\n     && cd /tmp/api-gateway/openresty-${OPENRESTY_VERSION} \\\n\n     && echo \"        - building debugging version of the api-gateway ... \" \\\n     && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --prefix=${_exec_prefix}/api-gateway \\\n            --sbin-path=${_sbindir}/api-gateway-debug \\\n            --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf \\\n            --error-log-path=${_localstatedir}/log/api-gateway/error.log \\\n            --http-log-path=${_localstatedir}/log/api-gateway/access.log \\\n            --pid-path=${_localstatedir}/run/api-gateway.pid \\\n            --lock-path=${_localstatedir}/run/api-gateway.lock \\\n            --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit \\\n            --with-stream \\\n            --with-stream_ssl_module \\\n            --with-http_ssl_module \\\n            --with-http_stub_status_module \\\n            --with-http_realip_module \\\n            --with-http_addition_module \\\n            --with-http_sub_module \\\n            --with-http_dav_module \\\n            --with-http_geoip_module \\\n            --with-http_gunzip_module \\\n            --with-http_gzip_static_module \\\n            --with-http_auth_request_module \\\n            --with-http_random_index_module \\\n            --with-http_secure_link_module \\\n            --with-http_degradation_module \\\n            --with-http_auth_request_module \\\n            --with-http_v2_module \\\n            --with-luajit \\\n            --without-http_ssi_module \\\n            --without-http_userid_module \\\n            --without-http_uwsgi_module \\\n            --without-http_scgi_module \\\n            --with-debug \\\n            -j${NPROC} \\\n    && make -j${NPROC} \\\n    && make install \\\n\n    && echo \"        - building regular version of the api-gateway ... \" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --prefix=${_exec_prefix}/api-gateway \\\n            --sbin-path=${_sbindir}/api-gateway \\\n            --conf-path=${_sysconfdir}/api-gateway/api-gateway.conf \\\n            --error-log-path=${_localstatedir}/log/api-gateway/error.log \\\n            --http-log-path=${_localstatedir}/log/api-gateway/access.log \\\n            --pid-path=${_localstatedir}/run/api-gateway.pid \\\n            --lock-path=${_localstatedir}/run/api-gateway.lock \\\n            --with-pcre=../pcre-${PCRE_VERSION}/ --with-pcre-jit \\\n            --with-stream \\\n            --with-stream_ssl_module \\\n            --with-http_ssl_module \\\n            --with-http_stub_status_module \\\n            --with-http_realip_module \\\n            --with-http_addition_module \\\n            --with-http_sub_module \\\n            --with-http_dav_module \\\n            --with-http_geoip_module \\\n            --with-http_gunzip_module \\\n            --with-http_gzip_static_module \\\n            --with-http_auth_request_module \\\n            --with-http_random_index_module \\\n            --with-http_secure_link_module \\\n            --with-http_degradation_module \\\n            --with-http_v2_module \\\n            --with-luajit \\\n            --without-http_ssi_module \\\n            --without-http_userid_module \\\n            --without-http_uwsgi_module \\\n            --without-http_scgi_module \\\n            -j${NPROC} \\\n    && make -j${NPROC} \\\n    && make install \\\n\n    && echo \"        - adding Nginx Test support\" \\\n    && curl -f -L https://github.com/openresty/test-nginx/archive/v${TEST_NGINX_VERSION}.tar.gz -o ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n    && cd ${_prefix} \\\n    && tar -xf ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n    && rm ${_prefix}/test-nginx-${TEST_NGINX_VERSION}.tar.gz \\\n    && cp -r ${_prefix}/test-nginx-0.24/inc/* /usr/local/share/perl5/site_perl/ \\\n\n    && ln -s ${_sbindir}/api-gateway-debug ${_sbindir}/nginx \\\n    && cp /tmp/api-gateway/openresty-${OPENRESTY_VERSION}/build/install ${_prefix}/api-gateway/bin/resty-install \\\n    && apk del g++ gcc make \\\n    && rm -rf /var/cache/apk/* \\\n    && rm -rf /tmp/api-gateway\n\nENV LUA_RESTY_HTTP_VERSION 0.07\nRUN echo \" ... installing lua-resty-http...\" \\\n    && apk update \\\n    && apk add --no-cache make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/pintsized/lua-resty-http/archive/v${LUA_RESTY_HTTP_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION} \\\n    && make install \\\n            LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n            INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/lua-resty-http-${LUA_RESTY_HTTP_VERSION}.tar.gz\n\nENV LUA_RESTY_IPUTILS_VERSION 0.2.0\nRUN echo \" ... installing lua-resty-iputils...\" \\\n    && apk update \\\n    && apk add --no-cache make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/hamishforbes/lua-resty-iputils/archive/v${LUA_RESTY_IPUTILS_VERSION}.tar.gz -o /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION} \\\n    && export LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n    && export INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && $INSTALL -d ${LUA_LIB_DIR}/resty \\\n    && $INSTALL lib/resty/*.lua ${LUA_LIB_DIR}/resty/ \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/lua-resty-iputils-${LUA_RESTY_IPUTILS_VERSION}.tar.gz\n\nENV CONFIG_SUPERVISOR_VERSION 1.0.3\nENV GOPATH /usr/lib/go/bin\nENV GOBIN  /usr/lib/go/bin\nENV PATH   $PATH:/usr/lib/go/bin\nRUN echo \" ... installing api-gateway-config-supervisor  ... \" \\\n    && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n    && apk update \\\n    && apk add gcc make git 'go' \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/adobe-apiplatform/api-gateway-config-supervisor/archive/${CONFIG_SUPERVISOR_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n    && cd /tmp/api-gateway \\\n    && tar -xf /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz \\\n    && mkdir -p /tmp/go \\\n    && mv /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}/* /tmp/go \\\n    && cd /tmp/go \\\n    && make setup \\\n    && mkdir -p /tmp/go/Godeps/_workspace \\\n    && ln -s /tmp/go/vendor /tmp/go/Godeps/_workspace/src \\\n    && mkdir -p /tmp/go-src/src/github.com/adobe-apiplatform \\\n    && ln -s /tmp/go /tmp/go-src/src/github.com/adobe-apiplatform/api-gateway-config-supervisor \\\n    && GOPATH=/tmp/go/vendor:/tmp/go-src CGO_ENABLED=0 GOOS=linux /usr/lib/go/bin/godep  go build -ldflags \"-s\" -a -installsuffix cgo -o api-gateway-config-supervisor ./ \\\n    && mv /tmp/go/api-gateway-config-supervisor /usr/local/sbin/ \\\n\n    && echo \"installing rclone sync ... skipped due to https://github.com/ncw/rclone/issues/663 ... \" \\\n    # && go get github.com/ncw/rclone \\\n    # && mv /usr/lib/go/bin/rclone /usr/local/sbin/ \\\n\n    && echo \" cleaning up ... \" \\\n    && rm -rf /usr/lib/go/bin/src \\\n    && rm -rf /tmp/go \\\n    && rm -rf /tmp/go-src \\\n    && rm -rf /usr/lib/go/bin/pkg/ \\\n    && rm -rf /usr/lib/go/bin/godep \\\n    && apk del make git go gcc \\\n    && rm -rf /var/cache/apk/* && rm /tmp/api-gateway/api-gateway-config-supervisor-${CONFIG_SUPERVISOR_VERSION}.tar.gz\n\nRUN echo \" ... installing aws-cli ...\" \\\n    && apk update \\\n    && apk add --no-cache python \\\n    && apk add --no-cache py-pip \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir awscli\n\nENV HMAC_LUA_VERSION 1.0.0\nRUN echo \" ... installing api-gateway-hmac ...\" \\\n    && apk update \\\n    && apk add --no-cache make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/adobe-apiplatform/api-gateway-hmac/archive/${HMAC_LUA_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION} \\\n    && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n    && make test \\\n    && make install \\\n            LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n            INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-hmac-${HMAC_LUA_VERSION}.tar.gz\n\nENV CACHE_MANAGER_VERSION 1.0.1\nRUN echo \" ... installing api-gateway-cachemanager...\" \\\n    && apk update \\\n    && apk add make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/adobe-apiplatform/api-gateway-cachemanager/archive/${CACHE_MANAGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION} \\\n    && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n    # && apk update && apk add redis \\\n    # && REDIS_SERVER=/usr/bin/redis-server make test \\\n    && make install \\\n            LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n            INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && apk del redis \\\n    && rm -rf /var/cache/apk/* \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-cachemanager-${CACHE_MANAGER_VERSION}.tar.gz\n\nENV AWS_VERSION 1.7.1\nRUN echo \" ... installing api-gateway-aws ...\" \\\n    && apk update \\\n    && apk add make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/adobe-apiplatform/api-gateway-aws/archive/${AWS_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/api-gateway-aws-${AWS_VERSION} \\\n    && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n    # && make test \\\n    && make install \\\n            LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n            INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && rm -rf /var/cache/apk/* \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-aws-${AWS_VERSION}.tar.gz\n\nENV REQUEST_VALIDATION_VERSION 1.2.4\nRUN echo \" ... installing api-gateway-request-validation ...\" \\\n    && apk update \\\n    && apk add make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/adobe-apiplatform/api-gateway-request-validation/archive/${REQUEST_VALIDATION_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION} \\\n    && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n    # && apk update && apk add redis \\\n    # && REDIS_SERVER=/usr/bin/redis-server make test \\\n    && make install \\\n            LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n            INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && apk del redis \\\n    && rm -rf /var/cache/apk/* \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-request-validation-${REQUEST_VALIDATION_VERSION}.tar.gz\n\nENV ASYNC_LOGGER_VERSION 1.0.1\nRUN echo \" ... installing api-gateway-async-logger ...\" \\\n    && apk update \\\n    && apk add make \\\n    && mkdir -p /tmp/api-gateway \\\n    && curl -f -L https://github.com/adobe-apiplatform/api-gateway-async-logger/archive/${ASYNC_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz \\\n    && tar -xf /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n    && cd /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION} \\\n    && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n    # && make test \\\n    && make install \\\n            LUA_LIB_DIR=${_prefix}/api-gateway/lualib \\\n            INSTALL=${_prefix}/api-gateway/bin/resty-install \\\n    && rm -rf /var/cache/apk/* \\\n    && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-async-logger-${ASYNC_LOGGER_VERSION}.tar.gz\n\nENV ZMQ_ADAPTOR_VERSION 0.2.1\nRUN echo \" ... installing api-gateway-zmq-adaptor\" \\\n         && curl -f -L https://github.com/adobe-apiplatform/api-gateway-zmq-adaptor/archive/${ZMQ_ADAPTOR_VERSION}.tar.gz -o /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n         && apk update \\\n         && apk add check-dev g++ gcc \\\n         && cd /tmp/ \\\n         && tar -xf /tmp/api-gateway-zmq-adaptor-${ZMQ_ADAPTOR_VERSION} \\\n         && cd /tmp/api-gateway-zmq-adaptor-* \\\n         && make test \\\n         && PREFIX=/usr/local/sbin make install \\\n         && rm -rf /tmp/api-gateway-zmq-adaptor-* \\\n         && apk del check-dev g++ gcc \\\n         && rm -rf /var/cache/apk/*\n\nENV ZMQ_LOGGER_VERSION 1.0.0\nRUN echo \" ... installing api-gateway-zmq-logger ...\" \\\n        && mkdir -p /tmp/api-gateway \\\n        && curl -f -L https://github.com/adobe-apiplatform/api-gateway-zmq-logger/archive/${ZMQ_LOGGER_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz \\\n        && tar -xf /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n        && cd /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION} \\\n        && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n        && make test \\\n        && make install \\\n             LUA_LIB_DIR=/usr/local/api-gateway/lualib \\\n             INSTALL=/usr/local/api-gateway/bin/resty-install \\\n        && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-zmq-logger-${ZMQ_LOGGER_VERSION}.tar.gz\n\nENV REQUEST_TRACKING_VERSION 1.0.1\nRUN echo \" ... installing api-gateway-request-tracking ...\" \\\n        && mkdir -p /tmp/api-gateway \\\n        && curl -f -L https://github.com/adobe-apiplatform/api-gateway-request-tracking/archive/${REQUEST_TRACKING_VERSION}.tar.gz -o /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz \\\n        && tar -xf /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz -C /tmp/api-gateway/ \\\n        && cd /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION} \\\n        && cp -r /usr/local/test-nginx-${TEST_NGINX_VERSION}/* ./test/resources/test-nginx/ \\\n        # && apk update && apk add redis \\\n        # && REDIS_SERVER=/usr/bin/redis-server make test \\\n        && make install \\\n             LUA_LIB_DIR=/usr/local/api-gateway/lualib \\\n             INSTALL=/usr/local/api-gateway/bin/resty-install \\\n        # && apk del redis \\\n        && rm -rf /tmp/api-gateway && rm /tmp/api-gateway/api-gateway-request-tracking-${REQUEST_TRACKING_VERSION}.tar.gz\n\nRUN \\\n    curl -f -L -k -s -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n    && apk update \\\n    && apk add gawk \\\n    && chmod 755 /usr/local/bin/jq \\\n    && rm -rf /var/cache/apk/*\n\nCOPY init.sh /etc/init-container.sh\n\n#add the default configuration for the Gateway\nCOPY api-gateway-config /etc/api-gateway\n\nRUN adduser -S nginx-api-gateway -u 1000 \\\n    && addgroup -S nginx-api-gateway -g 1000\n\nRUN mkdir -p /usr/local/api-gateway \\\n    && chown -R nginx-api-gateway /etc/api-gateway /var/log/api-gateway /usr/local \\\n    && chmod 755 -R /etc/api-gateway /var/log/api-gateway /usr/local \\\n    && chmod 4755 /bin/busybox \\\n    && echo \"nginx-api-gateway ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n\n# add the default configuration for the Gateway\n\nUSER nginx-api-gateway\n\nENTRYPOINT [\"/etc/init-container.sh\"]\n"
}