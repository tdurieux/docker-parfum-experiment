{
  "startTime": 1674251929862,
  "endTime": 1674251929937,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as build\n\nRUN apk add --no-cache --update protobuf git bash gcc musl-dev curl\n\n# Compile Delve\nARG VERSION=unspecified\nRUN echo \"Building DLV\"\nRUN go get github.com/derekparker/delve/cmd/dlv\n\n# Allow delve to run on Alpine based containers.\nRUN apk add --no-cache libc6-compat\n\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\nRUN go get -u golang.org/x/tools/cmd/stringer\n\nRUN curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n\nENV GO111MODULE=on\nRUN mkdir /root/networkservicemesh\nADD [\"go.mod\",\"/root/networkservicemesh\"]\nWORKDIR /root/networkservicemesh/\nRUN go mod download\n\nCOPY [\"./docker/debug/dev-entry.go\",\"/go/src/\"]\nRUN CGO_ENABLED=0 GOOS=linux go build -ldflags \"-extldflags \"-static\" -X  main.version=${VERSION}\" -o /go/bin/dev-entry /go/src\nENTRYPOINT [\"/go/bin/dev-entry\"]"
}