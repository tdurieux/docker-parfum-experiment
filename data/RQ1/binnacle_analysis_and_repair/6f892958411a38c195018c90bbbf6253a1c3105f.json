{
  "startTime": 1674244374357,
  "endTime": 1674244374520,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "# Set the base as the nvidia-cuda Docker\nFROM nvidia/cuda:8.0-devel\n\n# Create directory for all of the files to go into and cd into it\nWORKDIR /app\n\n# Apt-get all needed dependencies\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y git wget make gcc python python-pip build-essential curl \\\n\t\t\tcmake libreadline-dev git-core libqt4-dev libjpeg-dev \\\n\t\t\tlibpng-dev ncurses-dev imagemagick libzmq3-dev gfortran \\\n\t\t\tunzip gnuplot gnuplot-x11 sudo vim libopencv-dev google-perftools \\\n\t\t\tlibgoogle-perftools-dev ffmpeg && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends libhdf5-serial-dev liblmdb-dev && rm -rf /var/lib/apt/lists/*;\nRUN echo \"LD_PRELOAD=/usr/lib/libtcmalloc.so.4\" | tee -a /etc/environment\nENV LD_PRELOAD \"/usr/lib/libtcmalloc.so.4:$LD_PRELOAD\"\n\n# Install cuDNN and the dev files for cuDNN\nWORKDIR /\nCOPY ./docker_files/cuDNN.deb /\nRUN dpkg -i cuDNN.deb\nCOPY ./docker_files/dev-cuDNN.deb /\nRUN dpkg -i dev-cuDNN.deb\n\n# Install needed python packages\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir numpy PILLOW h5py matplotlib scipy tensorflow-gpu==0.12.0rc0\nRUN git config --global url.https://github.com/.insteadOf git://github.com/\n\n# Clone git repo\nRUN git clone -b master https://github.com/rohitgirdhar/ActionVLAD.git /app/ActionVLAD --recursive\nWORKDIR /app/ActionVLAD/\n\n#copy weights\nCOPY ./docker_files/models/kmeans-init/hmdb51/rgb_conv5_kmeans64.pkl /app/ActionVLAD/models/kmeans-init/hmdb51/\nCOPY ./docker_files/models/PreTrained/2-stream-pretrained/hmdb51/flow/split1.ckpt /app/ActionVLAD/models/PreTrained/2-stream-pretrained/hmdb51/flow/\nCOPY ./docker_files/models/PreTrained/2-stream-pretrained/hmdb51/flow/split2.ckpt /app/ActionVLAD/models/PreTrained/2-stream-pretrained/hmdb51/flow/\nCOPY ./docker_files/models/PreTrained/2-stream-pretrained/hmdb51/flow/split3.ckpt /app/ActionVLAD/models/PreTrained/2-stream-pretrained/hmdb51/flow/\n\n\nCOPY ./docker_files/models/PreTrained/ActionVLAD-pretrained/hmdb51/flow/split1.ckpt /app/ActionVLAD/models/PreTrained/ActionVLAD-pretrained/hmdb51/flow/\nCOPY ./docker_files/models/PreTrained/ActionVLAD-pretrained/hmdb51/flow/split2.ckpt /app/ActionVLAD/models/PreTrained/ActionVLAD-pretrained/hmdb51/flow/\nCOPY ./docker_files/models/PreTrained/ActionVLAD-pretrained/hmdb51/flow/split3.ckpt /app/ActionVLAD/models/PreTrained/ActionVLAD-pretrained/hmdb51/flow/\n\nCOPY ./docker_files/models/PreTrained/ActionVLAD-pretrained/hmdb51/rgb/split1.ckpt /app/ActionVLAD/models/PreTrained/ActionVLAD-pretrained/hmdb51/rgb/\nCOPY ./docker_files/models/PreTrained/ActionVLAD-pretrained/hmdb51/rgb/split2.ckpt /app/ActionVLAD/models/PreTrained/ActionVLAD-pretrained/hmdb51/rgb/\nCOPY ./docker_files/models/PreTrained/ActionVLAD-pretrained/hmdb51/rgb/split3.ckpt /app/ActionVLAD/models/PreTrained/ActionVLAD-pretrained/hmdb51/rgb/\n\nCOPY ./docker_files/models/PreTrained/imagenet-trained-CUHK/vgg_16_action_rgb_pretrain_uptoConv5.ckpt /app/ActionVLAD/models/PreTrained/imagenet-trained-CUHK/\n\n#copy video to test\nCOPY ./docker_files/soccer10.mp4 /app/ActionVLAD/demo/\n\n# Copy over cudnn.5.1 also needed for tensorflow\nCOPY ./docker_files/cuda_cudnn5_1/lib64/libcudnn.so.5 /usr/lib/x86_64-linux-gnu/\nCOPY ./docker_files/cuda_cudnn5_1/lib64/libcudnn.so.5.1.10 /usr/lib/x86_64-linux-gnu/\nCOPY ./docker_files/cuda_cudnn5_1/lib64/libcudnn_static_v5.a /usr/lib/x86_64-linux-gnu/\nCOPY ./docker_files/cuda_cudnn5_1/include/cudnn_v5.h /usr/include/x86_64-linux-gnu/\nRUN ln -sf /usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a libcudnn_stlib\nRUN ln -sf /usr/lib/x86_64-linux-gnu/libcudnn.so.5 libcudnn_so\nRUN ln -sf /usr/include/x86_64-linux-gnu/cudnn_v5.h libcudnn\n\n# Remove the install files for cuDNN\nWORKDIR /\nRUN rm -f cuDNN.deb dev-cuDNN.deb\n\nWORKDIR /app/ActionVLAD/\n"
}