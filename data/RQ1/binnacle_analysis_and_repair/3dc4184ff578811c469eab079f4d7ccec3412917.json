{
  "startTime": 1674239451378,
  "endTime": 1674239452002,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 204
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# nZEDb Main Dockerfile\n# Create a quick and clean dev environment\n#\n\nFROM alpine:3.3\nMAINTAINER razorgirl <https://github.com/razorgirl>\n\n# Set correct environment variables.\nENV TZ Europe/London\nENV HOME /root\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# Make sure system is up-to-date.\nRUN \\\n  apk update && \\\n  apk upgrade\n\n# Create www-data user.\nRUN \\\n  set -x && \\\n  addgroup -g 82 -S www-data && \\\n  adduser -u 82 -D -S -G www-data www-data\n\n# Install basic software.\nRUN apk add --no-cache curl git man unzip vim wget tmux chrony build-base\n\n# Install additional software.\n# (tcptrack and nmon won't work on Alpine Linux)\nRUN apk add --no-cache htop bwm-ng\n\n# Install vnstat from source, since not available as Alpine Linux package.\nRUN \\\n  cd /tmp && \\\n  wget https://humdi.net/vnstat/vnstat-1.16.tar.gz && \\\n  tar zxf vnstat-1.16.tar.gz && \\\n  cd vnstat-1.16 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && rm vnstat-1.16.tar.gz\n\n# Install mytop from source, since not available as Alpine Linux package.\nRUN \\\n  apk add --no-cache perl perl-dbi perl-dbd-mysql perl-term-readkey && \\\n  cd /tmp && \\\n  wget https://jeremy.zawodny.com/mysql/mytop/mytop-1.6.tar.gz && \\\n  tar zxf mytop-1.6.tar.gz && \\\n  cd mytop-1.6 && \\\n  perl Makefile.PL && \\\n  make && \\\n  make install && rm mytop-1.6.tar.gz\n\n# Install MediaInfo from source, since not available as Alpine Linux package.\nRUN \\\n  cd /tmp && \\\n  wget https://mediaarea.net/download/binary/mediainfo/0.7.91/MediaInfo_CLI_0.7.91_GNU_FromSource.tar.xz && \\\n  tar Jxf MediaInfo_CLI_0.7.91_GNU_FromSource.tar.xz && \\\n  cd MediaInfo_CLI_GNU_FromSource && \\\n  ./CLI_Compile.sh && \\\n  cd MediaInfo/Project/GNU/CLI && make install && rm MediaInfo_CLI_0.7.91_GNU_FromSource.tar.xz\n\n# Install ffmpeg, p7zip, unrar and lame.\nRUN apk add --no-cache ffmpeg unrar lame p7zip\n\n# Install Python modules.\nRUN \\\n  apk add --no-cache python python3 py-pip && \\\n  pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir cymysql && \\\n  pip install --no-cache-dir pynntp && \\\n  pip install --no-cache-dir socketpool && \\\n  pip list && \\\n  pip3 install --no-cache-dir --upgrade pip && \\\n  pip3 install --no-cache-dir cymysql && \\\n  pip3 install --no-cache-dir pynntp && \\\n  pip3 install --no-cache-dir socketpool && \\\n  pip3 list\n\n# Install PHP.\nRUN apk add --no-cache php5 php5-pear php5-gd php5-mysql php5-curl php5-json php5-phar php5-imagick php5-pdo_mysql php5-mcrypt php5-common php5-xml php5-openssl php5-zlib php5-ctype php5-exif php5-iconv php5-sockets\nRUN sed -ri 's/(max_execution_time =) ([0-9]+)/\\1 120/' /etc/php5/php.ini\nRUN sed -ri 's/(memory_limit =) ([0-9]+)/\\1 -1/' /etc/php5/php.ini\nRUN sed -ri 's/;(date.timezone =)/\\1 Europe\\/London/' /etc/php5/php.ini\n\n# Setup the Composer installer.\nRUN \\\n  curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer && \\\n  curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig && \\\n  php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" && \\\n  cd /tmp && \\\n  php composer-setup.php --install-dir=/usr/local/bin --filename=composer\n\n# Clone nZEDb master.\nRUN git clone https://github.com/nZEDb/nZEDb.git /var/www/nZEDb\n\n# Set directory permissions.\nRUN \\\n  chmod -R 755 /var/www/nZEDb && \\\n  chgrp www-data /var/www/nZEDb/resources/smarty/templates_c && \\\n  chmod 775 /var/www/nZEDb/resources/smarty/templates_c && \\\n  chgrp -R www-data /var/www/nZEDb/resources/covers && \\\n  chmod -R 775 /var/www/nZEDb/resources/covers && \\\n  chgrp www-data /var/www/nZEDb/www && \\\n  chmod 775 /var/www/nZEDb/www && \\\n  chgrp www-data /var/www/nZEDb/www/install && \\\n  chmod 775 /var/www/nZEDb/www/install && \\\n  chgrp -R www-data /var/www/nZEDb/resources/nzb && \\\n  chmod -R 775 /var/www/nZEDb/resources/nzb && \\\n  chmod -R 777 /var/www/nZEDb/nzedb/config\n\n# Install dependencies.\nRUN \\\n  cd /var/www/nZEDb && \\\n  composer install --prefer-source\n\n# Add pseudo run command.\nADD sleep.sh /run.sh\n\n# Define mountable directories.\nVOLUME [\"/var/www/nZEDb\"]\n\n# Run.\nCMD [\"/run.sh\"]\n\n# Clean up when done.\nRUN rm -rf /tmp/* /var/tmp/*\n"
}