{
  "startTime": 1674243290054,
  "endTime": 1674243290212,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is the dockerfile for the Sakai tomcat.\n# Basically this is just a copy of tomcat that has it's classloaders modified for Sakai.\n# This doesn't have a copy of Sakai put into it so it can be used for development where Sakai is mounted from outside\n# the container.\n\n# Use the OpenJDK image\n# This builds on debian jessie\nFROM java:openjdk-8u66\n\nMAINTAINER Matthew Buckett <matthew.buckett@it.ox.ac.uk>\n\nWORKDIR /tmp\n\n# Create the group and user for Sakai\nRUN groupadd --gid 10000 sakai && \\\n  useradd --uid 10000 --gid 10000 --system sakai\n\n# The 1024 bit root CAs are no longer in Debian (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=812708)\n# and the cross signing isn't working in older versions of openssl\nCOPY thawte_Premium_Server_CA.pem /usr/local/share/ca-certificates/thawte_permium_server_ca.crt\nRUN update-ca-certificates\n\n# Need to get the tomcat binary and unpack\nRUN mkdir -p /opt/tomcat && \\\n  # We don't use the main mirror as otherwise it stops working once newer versions are released.\n  # version we want\n  curl -f -s https://archive.apache.org/dist/tomcat/tomcat-8/v8.0.28/bin/apache-tomcat-8.0.28.tar.gz | \\\n  tar zxf - --strip-components 1 -C /opt/tomcat && \\\n  cd /opt/tomcat && \\\n  rm -r webapps && \\\n  mkdir webapps && \\\n  # We change the classloader for tomcat so that we can map in a folder that just contains the Sakai additions.\n  mkdir /opt/tomcat/sakai-lib && \\\n  sed -i.orig '/^common.loader=/s@$@,\"${catalina.base}/sakai-lib/*.jar\"@' conf/catalina.properties\n\n\n# Override with custom server.xml\nCOPY server.xml /opt/tomcat/conf/server.xml\n# Speedup startup\nCOPY context.xml /opt/tomcat/conf/context.xml\n\n# /opt/tomcat/sakai/logs is for Apache James logging.\nRUN mkdir -p /opt/scripts && \\\n  mkdir -p /opt/tomcat/sakai/files && \\\n  mkdir -p /opt/tomcat/sakai/deleted && \\\n  mkdir -p /opt/tomcat/sakai/logs\n\n# The logs directory needs to be writable by tomcat\nRUN chown sakai /opt/tomcat/logs /opt/tomcat/temp /opt/tomcat/work /opt/tomcat/sakai/files /opt/tomcat/sakai/deleted /opt/tomcat/sakai/logs /opt/tomcat/webapps && \\\n  find /opt/tomcat/conf/ -type f| xargs chmod 640 && \\\n  mkdir -p /opt/tomcat/conf/Catalina && chown sakai /opt/tomcat/conf/Catalina && \\\n  chgrp sakai -R /opt/tomcat/conf && chmod 755 /opt/tomcat/conf && \\\n  touch /opt/tomcat/sakai/sakai.properties && \\\n  chown sakai /opt/tomcat/sakai/sakai.properties\n\n# This sets the default locale and gets it to work correctly in Java\nENV LANG en.UTF-8\n\n# TODO fix this\n#RUN /usr/sbin/locale-gen $LANG\n\nCOPY ./entrypoint.sh /opt/scripts/entrypoint.sh\n\nENV CATALINA_OPTS_MEMORY -Xms256m -Xmx1524m\n\nENV CATALINA_OPTS \\\n# Force the JVM to run in server mode (shouldn't be necessary, but better sure ).\n-server \\\n# Make the JVM headless so it doesn't try and use X11 at all.\n-Djava.awt.headless=true \\\n# Stop the JVM from caching DNS lookups, otherwise we don't get DNS changes propogating\n-Dsun.net.inetaddr.ttl=0 \\\n# If the component manager doesn't start shut down the JVM\n-Dsakai.component.shutdownonerror=true \\\n# Force the locale\n-Duser.language=en -Duser.country=US \\\n# Set the properties for Sakai (sakai.home isn't necessary)\n-Dsakai.home=/opt/tomcat/sakai -Dsakai.security=/opt/tomcat/sakai \\\n# Set the timezone as the docker container doesn't have this set\n-Duser.timezone=Europe/London \\\n# Connect timeout (5 minutes)\n-Dsun.net.client.defaultConnectTimeout=300000 \\\n# Read timeout (30 minutes)\n-Dsun.net.client.defaultReadTimeout=1800000\n\n# If we run in debug mode\nENV JPDA_OPTS -agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n\n\nENTRYPOINT [\"/opt/scripts/entrypoint.sh\"]\n\nCMD [\"/opt/tomcat/bin/catalina.sh\", \"run\"]\n"
}