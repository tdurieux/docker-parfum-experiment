{
  "startTime": 1674249836892,
  "endTime": 1674249837751,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 9,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 9,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 121,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 54,
        "columnStart": 9,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM akabe/ocaml:centos7_ocaml4.04.2\n\nENV PATH               $PATH:/home/opam/.local/bin\nENV TENSORFLOW_VERSION 1.1.0\nENV LD_LIBRARY_PATH    /usr/lib:$LD_LIBRARY_PATH\nENV LIBRARY_PATH       /usr/lib:$LIBRARY_PATH\n# For phantomjs:\nENV QT_QPA_PLATFORM    offscreen\n\nADD MariaDB.repo /etc/yum.repos.d/MariaDB.repo\n\nRUN sudo yum install -y epel-release && \\\n    sudo yum install -y python34-devel python34-pip && \\\n    sudo pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions && \\\n    jupyter contrib nbextension install --user && \\\n    mkdir -p /home/opam/.jupyter && \\\n    sudo yum remove -y python34-devel && \\\n    sudo yum clean all && rm -rf /var/cache/yum\n\nRUN sudo curl -f -o /usr/bin/aspcud 'https://raw.githubusercontent.com/avsm/opam-solver-proxy/8f162de1fe89b2e243d89961f376c80fde6de76d/aspcud.docker' && \\\n    sudo chmod 755 /usr/bin/aspcud && \\\n    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm && \\\n    sudo rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-1.noarch.rpm && \\\n    sudo rpm -ivh http://packages.groonga.org/centos/groonga-release-1.1.0-1.noarch.rpm && \\\n    sudo yum install -y --enablerepo=epel,nux-dextop \\\n      which \\\n      file \\\n      git \\\n      openssl \\\n      m4 \\\n      rsync \\\n      gcc \\\n      gcc-c++ \\\n      zeromq-devel \\\n      libffi-devel \\\n      gmp-devel \\\n      cairo-devel \\\n      plplot-devel \\\n      openssh-clients \\\n      blas-devel \\\n      lapack-devel \\\n      openblas-devel \\\n      gsl-devel \\\n      fftw-devel \\\n      libsvm-devel \\\n      MariaDB-devel \\\n      postgresql-devel \\\n      sqlite-devel \\\n      gmp-devel \\\n      mecab mecab-devel mecab-ipadic \\\n      openssl-devel \\\n      ImageMagick \\\n      ffmpeg \\\n      phantomjs \\\n    && \\\n    sudo mv /usr/include/openblas/* /usr/include/ && \\\n    sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmysqlclient.so && \\\n    sudo ln -sf /usr/lib64/libmysqlclient.so.18.0.0 /usr/lib/libmariadb.so && \\\n    sudo ln -sf /usr/lib64/libopenblas.so.0 /usr/lib/libopenblas.so && \\\n\n    curl -f -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz \\\n         -o /tmp/mecab-ipadic-neologd-master.tar.gz && \\\n    tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp && \\\n    ( cd /tmp/mecab-ipadic-neologd-master && ./bin/install-mecab-ipadic-neologd -n -y ) && \\\n    rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master && \\\n\n    eval $(opam config env) && \\\n\n    opam update && \\\n    opam upgrade -y && \\\n    opam install -y \\\n      batteries \\\n      'core>=v0.9.0' \\\n      'async>=v0.9.0' \\\n      'lwt>=3.0.0' \\\n      lwt_ssl \\\n      'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' \\\n      cohttp-async \\\n      'cohttp-lwt-unix>=1.0.0' \\\n      cohttp-top \\\n      'merlin>=3.0.0' jupyter jupyter-archimedes \\\n      lacaml \\\n      slap \\\n      lbfgs \\\n      ocephes \\\n      oml \\\n      gsl \\\n      gpr \\\n      fftw3 \\\n      'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' \\\n      mysql \\\n      'mariadb>=0.8.1' \\\n      postgresql \\\n      sqlite3 \\\n      lambdasoup \\\n      csv csv-lwt \\\n      camomile \\\n      mecab \\\n      ppx_sexp_conv \\\n      'ppx_deriving_yojson>=3.1' \\\n      ppx_regexp && \\\n\n    : install kernel && \\\n    jupyter kernelspec install --user --name ocaml-jupyter \"$(opam config var share)/jupyter\" && \\\n\n    : install libsvm && \\\n    curl -f -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz \\\n         -o /tmp/libsvm-ocaml-0.9.3.tar.gz && \\\n    tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp && \\\n    ( cd /tmp/libsvm-ocaml-0.9.3 && \\\n      oasis setup && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$(opam config var prefix) && \\\n      make && \\\n      make install) \\\n    && \\\n    rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 && \\\n\n    : install tensorflow && \\\n    sudo curl -f -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr && \\\n    curl -f -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" \\\n         -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz && \\\n    tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp && \\\n    ( \\\n      cd /tmp/tensorflow-ocaml-0.0.10.1 && \\\n      sed -i 's/(no_dynlink)//' src/wrapper/jbuild && \\\n      sed -i 's/(modes (native))//' src/wrapper/jbuild \\\n    ) && \\\n    opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 && \\\n    rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 && \\\n\n    rm -rf $HOME/.opam/archives \\\n           $HOME/.opam/repo/default/archives \\\n           $HOME/.opam/$OCAML_VERSION/man \\\n           $HOME/.opam/$OCAML_VERSION/build && \\\n\n    sudo yum remove -y which file git openssl m4 rsync gcc gcc-c++ gcc-gfortran && \\\n    sudo yum clean all && \\\n    sudo rm -f /usr/bin/aspcud && rm -rf /var/cache/yum\n\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\n\nCOPY entrypoint.sh /\nCOPY .ocamlinit    /home/opam/.ocamlinit\nCOPY .jupyter      /home/opam/.jupyter\n\nEXPOSE 8888\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ \"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\" ]\n"
}