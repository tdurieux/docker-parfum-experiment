{
  "startTime": 1674249601631,
  "endTime": 1674249601836,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 6,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\nMAINTAINER Jos√© Moreira <jose.moreira@findhit.com>\n\nENV NODE_PREFIX=/usr/local \\\n    NODE_VERSION=latest \\\n    NPM_VERSION=latest \\\n    YARN_VERSION=latest \\\n    NODE_SOURCE=/usr/src/node \\\n    BASE_APKS=\"bash libgcc libstdc++ openssl ca-certificates\" \\\n    BUILD_APKS=\"git curl wget bzip2 tar make gcc clang g++ python linux-headers paxctl binutils-gold autoconf bison zlib-dev openssl-dev\" \\\n    NODE_CONFIG_FLAGS=\"--shared-openssl\"\n\nRUN [ \"${NODE_VERSION}\" == \"latest\" ] && { \\\n        DOWNLOAD_PATH=https://nodejs.org/dist/node-latest.tar.gz; \\\n    } || { \\\n        DOWNLOAD_PATH=https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.gz; \\\n    }; \\\n    apk add --update $BASE_APKS $BUILD_APKS && \\\n    mkdir -p $NODE_SOURCE && \\\n    wget -O - $DOWNLOAD_PATH -nv | tar -xz --strip-components=1 -C $NODE_SOURCE && \\\n    cd $NODE_SOURCE && \\\n    export GYP_DEFINES=\"linux_use_gold_flags=0\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$NODE_PREFIX $NODE_CONFIG_FLAGS && \\\n    make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \\\n    make install && \\\n    paxctl -cm ${NODE_PREFIX}/bin/node && \\\n    cd / && \\\n    if [ -x /usr/bin/npm ]; then \\\n      npm install -g npm@${NPM_VERSION} yarn@${YARN_VERSION} && \\\n      find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf; npm cache clean --force; \\\n    fi && \\\n    apk del $BUILD_APKS && \\\n    rm -rf \\\n        ${NODE_SOURCE} \\\n        /etc/ssl \\\n        ${NODE_PREFIX}/include \\\n        ${NODE_PREFIX}/share/man \\\n        /tmp/* \\\n        /var/cache/apk/* \\\n        /root/.npm \\\n        /root/.node-gyp \\\n        /root/.gnupg \\\n        ${NODE_PREFIX}/lib/node_modules/npm/man \\\n        ${NODE_PREFIX}/lib/node_modules/npm/doc \\\n        ${NODE_PREFIX}/lib/node_modules/npm/html \\\n    && \\\n    mkdir -p /app && \\\n    exit 0 || exit 1;\n\nWORKDIR /app\nADD https://raw.githubusercontent.com/cusspvz/node.docker/master/src/entrypoint /bin/entrypoint\nRUN chmod +x /bin/entrypoint\nENTRYPOINT [ \"/bin/entrypoint\" ]\nCMD [ \"\" ]\n"
}