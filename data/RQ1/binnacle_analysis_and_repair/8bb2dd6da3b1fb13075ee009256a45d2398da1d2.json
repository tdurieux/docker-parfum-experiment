{
  "startTime": 1674242220828,
  "endTime": 1674242221001,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 26,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 49,
        "columnStart": 26,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3.5-jdk-8 AS BUILD\n\nENV ANT_VERSION=1.10.3\nENV ANT_HOME=/opt/ant\n\n# Temporary Workaround to Surefire issue\nENV _JAVA_OPTIONS=-Djdk.net.URLClassPath.disableClassPathURLCheck=true\n\n# change to tmp folder\nWORKDIR /tmp\n\n# Download and extract apache ant to opt folder\nRUN wget --no-check-certificate --no-cookies http://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && wget --no-check-certificate --no-cookies http://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz.sha512 \\\n    && echo \"$(cat apache-ant-${ANT_VERSION}-bin.tar.gz.sha512) apache-ant-${ANT_VERSION}-bin.tar.gz\" | sha512sum -c \\\n    && tar -zxf apache-ant-${ANT_VERSION}-bin.tar.gz -C /opt/ \\\n    && ln -s /opt/apache-ant-${ANT_VERSION} /opt/ant \\\n    && rm -f apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && rm -f apache-ant-${ANT_VERSION}-bin.tar.gz.sha512\n\n# add executables to path\nRUN update-alternatives --install \"/usr/bin/ant\" \"ant\" \"/opt/ant/bin/ant\" 1 && \\\n    update-alternatives --set \"ant\" \"/opt/ant/bin/ant\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n               git \\\n\t&& rm -rf /var/lib/apt/lists/*\nWORKDIR ./datafari\nCOPY . .\nRUN mvn -f pom.xml --quiet clean install | egrep -v \"(^[0-9])|(^\\[INFO\\]|^\\[DEBUG\\])\"\nRUN ant clean-build -f ./debian7/build.xml\n\nFROM openjdk:8-jdk-stretch\nMAINTAINER Olivier Tavard FRANCE LABS <olivier.tavard@francelabs.com>\n\n# temporary allow unauthenticatedparameter due to debian repo issue\nRUN apt-get update && apt-get install --no-install-recommends --allow-unauthenticated -y \\\n                wget \\\n                curl \\\n                jq \\\n                debconf \\\n                python-minimal \\\n                sudo \\\n                vim \\\n                nano \\\n                netcat \\\n                libc6-dev \\\n                unzip \\\n                lsof \\\n                procps \\\n\t&& rm -rf /var/lib/apt/lists/*\nWORKDIR /var/datafari\nCOPY --from=BUILD /tmp/datafari/debian7/installer/dist/datafari.deb .\nRUN DEBIAN_FRONTEND=noninteractive dpkg -i datafari.deb\nEXPOSE 8080 9080 8983 5601 9200\nRUN useradd -m demo && echo \"demo:demo\" | chpasswd && adduser demo sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nWORKDIR /opt/datafari\nRUN  sed -i -e 's/sleep 10/sleep 30/g' /opt/datafari/bin/start-datafari.sh\nRUN  sed -i \"/server.host:/c\\server.host: 0.0.0.0\" /opt/datafari/elk/kibana/config/kibana.yml\nUSER demo\nCMD [\"/bin/bash\", \"-c\", \"echo 'wait 120 seconds to let Datafari start and then connect to http://IP:EXPOSE_PORT/Datafari' && cd /opt/datafari/bin && bash start-datafari.sh; sleep infinity\"]\n\n\n"
}