{
  "startTime": 1674251775339,
  "endTime": 1674251775581,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM debian:jessie\n\n# persistent / runtime deps\nENV PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tre2c\nRUN apt-get update && apt-get install -y \\\n\t\t$PHPIZE_DEPS \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tlibedit2 \\\n\t\tlibsqlite3-0 \\\n\t\tlibxml2 \\\n\t\txz-utils \\\n\t--no-install-recommends && rm -r /var/lib/apt/lists/*\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\n##<autogenerated>##\n##</autogenerated>##\n\n# Apply stack smash protection to functions using local buffers and alloca()\n# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n# Enable optimization (-O2)\n# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)\n# https://github.com/docker-library/php/issues/272\nENV CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV CPPFLAGS=\"$CFLAGS\"\nENV LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both\"\n\nENV GPG_KEYS A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0\n\nENV PHP_VERSION 7.2.0-dev\nENV PHP_URL=\"https://github.com/zendtech/php-src/tarball/jit-dynasm\"\n\nRUN set -xe; \\\n\n\tfetchDeps=' \\\n\t\twget \\\n\t'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tmkdir -p /usr/src; rm -rf /usr/src \\\n\tcd /usr/src; \\\n\n\twget -O php.tar.gz \"$PHP_URL\"; \\\n\n\tapt-get purge -y --auto-remove $fetchDeps\n\nCOPY docker-php-source /usr/local/bin/\n\nRUN set -xe \\\n\t&& buildDeps=\" \\\n\t\t$PHP_EXTRA_BUILD_DEPS \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibedit-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibxml2-dev \\\n\t\tbison \\\n\t\" \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& docker-php-source extract \\\n\t&& cd /usr/src/php \\\n\t&& ./buildconf --force \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\n\t\t--disable-cgi \\\n\n# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)\n\t\t--enable-ftp \\\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\t\t--enable-mbstring \\\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n\t\t--enable-mysqlnd \\\n\n\t\t--with-curl \\\n\t\t--with-libedit \\\n\t\t--with-openssl \\\n\t\t--with-zlib \\\n\t\t\\\n\t\t$PHP_EXTRA_CONFIGURE_ARGS \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n\t&& make clean \\\n\t&& docker-php-source delete \\\n\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\n\nCOPY docker-php-ext-* /usr/local/bin/\n\n##<autogenerated>##\nCMD [\"php\", \"-a\"]\n##</autogenerated>##\n"
}