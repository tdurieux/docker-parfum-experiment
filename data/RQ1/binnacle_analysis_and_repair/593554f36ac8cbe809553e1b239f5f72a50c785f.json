{
  "startTime": 1674245952382,
  "endTime": 1674245952501,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### STAGE 1: Build ###\n\n# We label our stage as 'builder'\nFROM node:8-stretch as builder\n\nLABEL maintainer=\"ivan.subotic@unibas.ch\"\n\n# Install.\nRUN \\\n  apt-get -qq update && \\\n  apt-get install -y --no-install-recommends git=1:2.11.0-3+deb9u4 && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -b master --single-branch --depth=1 https://github.com/dhlab-basel/Salsah.git /salsah\n\nRUN cp /salsah/package.json /salsah/yarn.lock ./\n\nRUN yarn config set no-progress && yarn cache clean\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN yarn && mkdir /ng-app && cp -R ./node_modules ./ng-app\n\nWORKDIR /ng-app\n\n## Copy the source\nRUN cp -R /salsah/. .\n\n## Copy our custom environment.ts\n## COPY ./environments/environment.prod.ts ./src/environments/environment.prod.ts\n\n## Build the angular app in production mode and store the artifacts in dist folder\nRUN \"$(npm bin)\"/ng build --prod --build-optimizer\n\n\n### STAGE 2: Setup ###\n\nFROM nginx:1.15-alpine\n\nLABEL maintainer=\"ivan.subotic@unibas.ch\"\n\n## Copy our default nginx config\nCOPY nginx/default.conf /etc/nginx/conf.d/\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From 'builder' stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist /usr/share/nginx/html\n\nEXPOSE 4200\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}