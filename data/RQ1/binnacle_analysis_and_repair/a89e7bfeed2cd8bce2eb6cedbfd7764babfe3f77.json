{
  "startTime": 1674244663336,
  "endTime": 1674244663456,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.11.4\n\nARG METEOR_VERSION\nARG NAME=base\nARG DESCRIPTION=\"Base Docker image for Reaction.\"\nARG URL=https://github.com/reactioncommerce/base\nARG DOC_URL=https://github.com/reactioncommerce/base\nARG VCS_URL=https://github.com/reactioncommerce/base\nARG VCS_REF\nARG VENDOR\nARG BUILD_DATE\nARG BUILD_COMPARE_URL\nARG BUILD_ENV=test\nARG BUILD_NUMBER\nARG BUILD_PLATFORM\nARG BUILD_PLATFORM_PROJECT_USERNAME\nARG BUILD_PLATFORM_PROJECT_REPONAME\nARG BUILD_PULL_REQUESTS\nARG BUILD_TRIGGERED_BY_TAG\nARG BUILD_URL\nARG CIRCLE_WORKSPACE_ID\nARG CIRCLE_WORKFLOW_ID\nARG CIRCLE_WORKFLOW_JOB_ID\nARG CIRCLE_WORKFLOW_UPSTREAM_JOB_IDS\nARG CIRCLE_WORKSPACE_ID\nARG GIT_REPOSITORY_URL\nARG GIT_SHA1\nARG LICENSE\n\nLABEL maintainer=\"Reaction Commerce <engineering@reactioncommerce.com>\" \\\n      com.reactioncommerce.build-date=$BUILD_DATE \\\n      com.reactioncommerce.name=$NAME \\\n      com.reactioncommerce.description=$DESCRIPTION \\\n      com.reactioncommerce.url=$URL \\\n      com.reactioncommerce.vcs-url=$VCS_URL \\\n      com.reactioncommerce.vcs-ref=$VCS_REF \\\n      com.reactioncommerce.vendor=$VENDOR \\\n      com.reactioncommerce.docker.build.compare-url=$BUILD_COMPARE_URL \\\n      com.reactioncommerce.docker.build.number=$BUILD_NUMBER \\\n      com.reactioncommerce.docker.build.platform=$BUILD_PLATFORM \\\n      com.reactioncommerce.docker.build.platform.project.username=$BUILD_PLATFORM_PROJECT_USERNAME \\\n      com.reactioncommerce.docker.build.platform.project.reponame=$BUILD_PLATFORM_PROJECT_REPONAME \\\n      com.reactioncommerce.docker.build.pull-requests=$BUILD_PULL_REQUESTS \\\n      com.reactioncommerce.docker.build.triggered-by-tag=$BUILD_TRIGGERED_BY_TAG \\\n      com.reactioncommerce.docker.build.url=$BUILD_URL \\\n      com.reactioncommerce.docker.build.circle.workflow.id=$CIRCLE_WORKFLOW_ID \\\n      com.reactioncommerce.docker.build.circle.workflow.job.id=$CIRCLE_WORKFLOW_JOB_ID \\\n      com.reactioncommerce.docker.build.circle.workflow.upstream.job.ids=$CIRCLE_WORKFLOW_UPSTREAM_JOB_IDS \\\n      com.reactioncommerce.docker.build.circle.workflow.url=https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID \\\n      com.reactioncommerce.docker.build.circle.workspace.id=$CIRCLE_WORKSPACE_ID \\\n      com.reactioncommerce.docker.git.repository.url=$GIT_REPOSITORY_URL \\\n      com.reactioncommerce.docker.git.sha1=$GIT_SHA1 \\\n      com.reactioncommerce.docker.license=$LICENSE\n\nENV METEOR_VERSION $METEOR_VERSION\nENV REACTION_DOCKER_BUILD true\nENV APP_SOURCE_DIR /opt/reaction/src\nENV APP_BUNDLE_DIR /opt/reaction/dist\nENV PATH $PATH:/home/node/.meteor\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  bsdtar \\\n  bzip2 \\\n  ca-certificates \\\n  git \\\n  python \\\n  wget \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p \"$APP_SOURCE_DIR\" \\\n && mkdir -p \"$APP_BUNDLE_DIR\" \\\n && chown -R node \"$APP_SOURCE_DIR\" \\\n && chown -R node \"$APP_BUNDLE_DIR\"\n\nRUN npm i -g reaction-cli && npm cache clean --force;\n\nUSER node\n\n################################\n# install-meteor\n# replaces tar command with bsdtar in the install script (bsdtar -xf \"$TARBALL_FILE\" -C \"$INSTALL_TMPDIR\")\n# https://github.com/jshimko/meteor-launchpad/issues/39\n################################\nRUN wget -O /tmp/install_meteor.sh https://install.meteor.com \\\n && sed -i.bak \"s/RELEASE=.*/RELEASE=\\\"$METEOR_VERSION\\\"/g\" /tmp/install_meteor.sh \\\n && sed -i.bak \"s/tar -xzf.*/bsdtar -xf \\\"\\$TARBALL_FILE\\\" -C \\\"\\$INSTALL_TMPDIR\\\"/g\" /tmp/install_meteor.sh \\\n && printf \"\\\\n[-] Installing Meteor %s...\\\\n\" \"$METEOR_VERSION\" \\\n && sh /tmp/install_meteor.sh \\\n && rm /tmp/install_meteor.sh\n\nWORKDIR $APP_SOURCE_DIR\nCOPY test-script.sh .\n# Node flags for the Meteor build tool\nONBUILD ARG TOOL_NODE_FLAGS\nONBUILD ENV TOOL_NODE_FLAGS $TOOL_NODE_FLAGS\n"
}