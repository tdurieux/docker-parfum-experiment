{
  "startTime": 1674238972562,
  "endTime": 1674238972672,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "# Start from Debian stable (Stretch)\nFROM debian:stable\n\n# Add backports repository\nRUN echo 'deb http://deb.debian.org/debian/ stretch-backports main contrib non-free' >>/etc/apt/sources.list\n\n# Install the required package\nRUN apt -qq update\n\n# Create a dedicated user for simplecdd\nRUN useradd -ms /bin/dash cdbuild\n\n# Copy the SSH key into the misc directory, that will be put on the CD image\nRUN mkdir -p /home/cdbuild/misc/root/.ssh\nCOPY --chown=cdbuild:cdbuild ./config/authorized_keys /home/cdbuild/misc/root/.ssh/authorized_keys\n\n# Install the last version of simple-cdd\nRUN apt -qq --no-install-recommends install -t stretch-backports -y simple-cdd && rm -rf /var/lib/apt/lists/*;\n\n# Install the last version of ansible to build the preseed file\nRUN apt -qq --no-install-recommends install -t stretch-backports -y ansible && rm -rf /var/lib/apt/lists/*;\n\n# Copy the miscellaneous files to be part of the CD image\n# but remove the doc file\nCOPY --chown=cdbuild:cdbuild ./misc /home/cdbuild/misc/\nRUN rm -f /home/cdbuild/misc/readme.md\n\n# Copy the playbooks and the configuration\nCOPY --chown=cdbuild:cdbuild ./playbooks /home/cdbuild/playbooks/\nCOPY --chown=cdbuild:cdbuild ./config /home/cdbuild/config/\n\n# Build the ISO image\nUSER cdbuild\nWORKDIR /home/cdbuild\n\n# Copy the Ansible configuration file\nCOPY --chown=cdbuild:cdbuild ansible/ansible.cfg /home/cdbuild\n\n# Create a simple host file for localhost to avoid Ansible warning\nCOPY --chown=cdbuild:cdbuild ansible/hosts.yml /home/cdbuild\n\n# Run the ansible playbook\nRUN ansible-playbook -vv -i hosts.yml -l localhost playbooks/docker.yml\n\n# Build the mirror using simple-cdd\nRUN cd /tmp/build-homebox && ./build-mirror.sh\n\n# And build the CD image\nRUN cd /tmp/build-homebox && ./build-cd.sh\n\n# Copy the final ISO image into the host shared folder\nENTRYPOINT cp /tmp/build-homebox/images/*.iso /tmp/homebox-images/\n\n# For debugging\nENTRYPOINT /bin/bash\n"
}