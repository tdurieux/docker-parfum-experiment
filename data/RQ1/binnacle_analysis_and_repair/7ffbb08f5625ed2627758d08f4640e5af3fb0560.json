{
  "startTime": 1674235702509,
  "endTime": 1674235703244,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 28,
        "columnStart": 23,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from debian/sortsmill\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tsubversion \\\n\tant \\\n\tlibicu-dev \\\n\topenjdk-7-jdk \\\n\tpython-numpy \\\n\tgobject-introspection \\\n\tpython-gobject-dev \\\n\tpkg-config ragel gtk-doc-tools \\\n\tlibgirepository1.0-dev \\\n\tlibpdf-api2-perl \\\n\tlibintl-perl \\\n\tfntsample \\\n\ttexlive-xetex \\\n\twget \\\n\txzdec \\\n\tlatexmk \\\n\tpackaging-dev \\\n\tpkg-config \\\n\tpython-dev \\\n\tgiflib-dbg \\\n\tlibjpeg-dev \\\n\tlibtiff-dev \\\n\tuthash-dev \\\n\tautomake \\\n\tflex \\\n\tbison \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# pdfoutline\n# fntsample\n# hb-shape\n# ot-sanitise\n\nRUN mkdir -p /var/build;\n\nRUN cd /var/build \\\n \t&& svn checkout http://sfntly.googlecode.com/svn/trunk/ sfntly-read-only\n\nENV JAVA_TOOL_OPTIONS -Dfile.encoding=UTF8\n\nRUN cd\t/var/build/sfntly-read-only/java \\\n\t&& ant\n\nRUN echo \"#! /bin/sh\" > /usr/local/bin/sfnttool \\\n        && echo \"java -jar /var/build/sfntly-read-only/java/dist/tools/sfnttool/sfnttool.jar \\$@\" >> /usr/local/bin/sfnttool \\\n        && chmod +x /usr/local/bin/sfnttool\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/google/woff2.git \\\n\t&& cd woff2 \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& git submodule init \\\n\t&& git submodule update \\\n\t&& make clean all \\\n\t&& ln -s `pwd`/woff2_compress /usr/local/bin/ \\\n\t&& ln -s `pwd`/woff2_decompress /usr/local/bin/\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/behdad/fonttools.git \\\n\t&& cd fonttools \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& python setup.py install \\\n\t&& cd /var/build \\\n\t&& rm -rf fonttools\n\nRUN cd /var/build \\\n\t&& git clone --recursive https://github.com/khaledhosny/ots.git \\\n\t&& cd ots \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& ./autogen.sh \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make \\\n\t&& ln -s `pwd`/out/Default/ot-sanitise /usr/local/bin\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/behdad/harfbuzz.git \\\n\t&& cd harfbuzz \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& ./autogen.sh \\\n\t&& make distclean \\\n\t&& mkdir .build \\\n\t&& cd .build \\\n\t&&  ../configure --with-gobject --enable-introspection \\\n\t&& make \\\n\t&& make install \\\n\t&& cd /var/build \\\n\t&& rm -rf harfbuzz\n\nRUN tlmgr init-usertree \\\n\t&& tlmgr install bidi iftex\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/robofab-developers/robofab.git \\\n\t&& cd robofab \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& git checkout ufo3k \\\n\t&& python install.py\n\n\n# todo: precompile these:\n# ;;; compiling /usr/local/share/guile/site/2.0/sortsmill/fonts/anchors.scm\n# ;;; compiling /usr/local/share/guile/site/2.0/sortsmill/fonts/views.scm\n# ;;; compiling /usr/local/share/guile/site/2.0/sortsmill/fontforge-api.scm\n# ;;; compiled /root/.cache/guile/ccache/2.0-LE-8-2.0/usr/local/share/guile/site/2.0/sortsmill/fontforge-api.scm.go\n#;;; compiled /root/.cache/guile/ccache/2.0-LE-8-2.0/usr/local/share/guile/site/2.0/sortsmill/fonts/views.scm.go\n#;;; compiled /root/.cache/guile/ccache/2.0-LE-8-2.0/usr/local/share/guile/site/2.0/sortsmill/fonts/anchors.scm.go\n\n\n# add fontforge to the mix\n# fontforge is better in reading and writing ufo from sfd\n# because these improvements came after the sortsmill fork, AFAIK.\n\n\n# build libuninameslist\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/fontforge/libuninameslist.git \\\n\t&& cd libuninameslist \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& autoreconf -i \\\n\t&& automake --foreign \\\n\t&& mkdir .build \\\n\t&& cd .build \\\n\t&& ../configure \\\n\t&& make \\\n\t&& make install \\\n\t&& cd /var/build \\\n\t&& rm -rf libuninameslist\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/fontforge/fontforge.git\\\n\t&& cd fontforge \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& ./bootstrap \\\n\t&& mkdir .build \\\n\t&& cd .build \\\n\t&& ../configure \\\n\t&& make \\\n\t&& make install \\\n\t&& ldconfig \\\n\t&& cd /var/build \\\n\t&& rm -rf fontforge\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/typesupply/defcon.git \\\n\t&& cd defcon \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& git checkout ufo3 \\\n\t&& python setup.py install \\\n\t&& cd /var/build \\\n\t&& rm -rf defcon\n\nRUN cd /var/build \\\n\t&& git clone https://github.com/typemytype/booleanOperations.git \\\n\t&& cd booleanOperations/cppWrapper \\\n\t&& python setup.py build_ext --inplace \\\n\t&& cp pyClipper.so ../Lib/booleanOperations/pyClipper.so \\\n\t&& cd .. \\\n\t&& echo `git config --get remote.origin.url` at `git rev-parse HEAD` >> /var/build/versions.txt \\\n\t&& python setup.py install \\\n\t&& cd /var/build \\\n\t&& rm -rf booleanOperations\n"
}