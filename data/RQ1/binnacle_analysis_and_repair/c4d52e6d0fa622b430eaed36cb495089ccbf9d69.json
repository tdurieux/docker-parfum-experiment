{
  "startTime": 1674244142740,
  "endTime": 1674244142902,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "# GENERATED FILE, DO NOT MODIFY!\n# To update this file please edit the relevant template and run the generation\n# task `rake generate:ruby-passenger`\n\nFROM instructure/ruby:2.5-jemalloc\nMAINTAINER Instructure\n\nUSER root\n\n#Install Nginx with Passenger from official repository\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \\\n  && apt-get install --no-install-recommends -y apt-transport-https ca-certificates \\\n  && sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    nginx-extras \\\n    sudo \\\n    libnginx-mod-http-passenger \\\n\n# libnginx-mod-http-passenger in bionic destroys the alternatives in the base ruby image\n    && update-alternatives --install /usr/bin/gem gem /usr/bin/gem$RUBY_MAJOR 181 \\\n    && update-alternatives \\\n      --install /usr/bin/ruby ruby /usr/bin/ruby${RUBY_MAJOR} 51 \\\n      --slave /usr/bin/erb erb /usr/bin/erb${RUBY_MAJOR} \\\n      --slave /usr/bin/irb irb /usr/bin/irb${RUBY_MAJOR} \\\n      --slave /usr/bin/rdoc rdoc /usr/bin/rdoc${RUBY_MAJOR} \\\n      --slave /usr/bin/ri ri /usr/bin/ri${RUBY_MAJOR} \\\n\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN gem install passenger --no-rdoc --no-ri\n\nRUN echo 'docker ALL=(ALL) NOPASSWD: SETENV: /usr/sbin/nginx' >> /etc/sudoers\n\n#Sensu check\nCOPY passenger_metrics.rb /monitoring/sensu/\nCOPY passenger_check /monitoring/sensu/\nRUN chmod +x /monitoring/sensu/passenger_metrics.rb /monitoring/sensu/passenger_check\n\nRUN gem install -i /var/lib/gems/$RUBY_MAJOR.0 nokogiri sensu-plugin\n\nUSER docker\nRUN passenger-config build-native-support\n\n# Nginx Configuration\nUSER root\n\nCOPY entrypoint /usr/src/entrypoint\nCOPY nginx.conf.erb /usr/src/nginx/nginx.conf.erb\nCOPY main.d/* /usr/src/nginx/main.d/\nRUN mkdir -p /usr/src/nginx/conf.d \\\n && mkdir -p /usr/src/nginx/location.d \\\n && mkdir -p /usr/src/nginx/main.d \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && chown docker:docker -R /usr/src/nginx && rm -rf /usr/src/nginx/conf.d\n\nUSER docker\n\nEXPOSE 80\nCMD [\"/tini\", \"--\", \"/usr/src/entrypoint\"]\n"
}