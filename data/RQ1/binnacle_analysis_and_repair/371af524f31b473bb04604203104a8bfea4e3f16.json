{
  "startTime": 1674252906819,
  "endTime": 1674252907029,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nRUN apk update && apk upgrade\n\nRUN apk add --no-cache build-base \\\n\tcmake \\\n\tautoconf \\\n\tautomake \\\n\tlibtool \\\n\tbc \\\n\tzlib-dev \\\n\tlibxml2-dev \\\n\tjpeg-dev \\\n\ttiff-dev \\\n\tglib-dev \\\n\tgdk-pixbuf-dev \\\n\tsqlite-dev \\\n\tlibjpeg-turbo-dev \\\n\tlibexif-dev \\\n\tlcms2-dev \\\n\tfftw-dev \\\n\tgiflib-dev \\\n\tlibpng-dev \\\n\tlibwebp-dev \\\n\torc-dev \\\n\tpoppler-dev \\\n\tlibrsvg-dev \\\n\tlibgsf-dev \\\n\topenexr-dev \\\n\tgtk-doc\n\nWORKDIR /usr/local/src\n\n# build latest openjpeg .. alpine has 2.3.0-r3\n\nARG OPENJPEG_VERSION=2.3.1\nARG OPENJPEG_URL=https://github.com/uclouvain/openjpeg/archive\n\nRUN wget ${OPENJPEG_URL}/v${OPENJPEG_VERSION}.tar.gz \\\n\t&& tar xf v${OPENJPEG_VERSION}.tar.gz \\\n\t&& cd openjpeg-${OPENJPEG_VERSION} \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake .. \\\n\t&& make \\\n\t&& make install && rm v${OPENJPEG_VERSION}.tar.gz\n\n# we have to build our own imagemagick to get jp2 support\n\nARG MAGICK_VERSION=7.0.8-46\nARG MAGICK_URL=https://github.com/ImageMagick/ImageMagick/archive\n\nRUN wget ${MAGICK_URL}/${MAGICK_VERSION}.tar.gz \\\n\t&& tar xf ${MAGICK_VERSION}.tar.gz \\\n\t&& cd ImageMagick-${MAGICK_VERSION} \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make V=0 \\\n\t&& make install && rm ${MAGICK_VERSION}.tar.gz\n\nARG VIPS_VERSION=8.8.0\nARG VIPS_URL=https://github.com/libvips/libvips/releases/download\n\nRUN wget ${VIPS_URL}/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz \\\n\t&& tar xf vips-${VIPS_VERSION}.tar.gz \\\n\t&& cd vips-${VIPS_VERSION} \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make V=0 \\\n\t&& make install && rm vips-${VIPS_VERSION}.tar.gz\n\nWORKDIR /data\n"
}