{
  "startTime": 1674248553442,
  "endTime": 1674248553602,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# TODO : use python:2.7.13-alpine3.6 to make this lighter ( it is what we use for letsencryipt as well)\n# But it seems it's not possible for now because alpine only has geos 3.6 which is not supported by django 1.8\n# (probably because of https://code.djangoproject.com/ticket/28441)\n\nFROM python:2.7.14-slim-stretch\n\n# Install system dependencies\nRUN echo \"Updating apt-get\" && \\\r\n    apt-get update && \\\r\n    echo \"Installing build dependencies\" && \\\n    apt-get install --no-install-recommends -y gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \\\n    echo \"Installing Pillow dependencies\" && \\\n    # RUN apt-get install -y NOTHING ?? It was probably added in other packages... ALPINE needed jpeg-dev zlib-dev && \\\r\n    echo \"Installing GDAL dependencies\" && \\\n    apt-get install --no-install-recommends -y libgeos-dev libgdal-dev && \\\n    echo \"Installing Psycopg2 dependencies\" && \\\n    # RUN apt-get install -y NOTHING ?? It was probably added in other packages... ALPINE needed postgresql-dev && \\\r\n    echo \"Installing other dependencies\" && \\\n    apt-get install --no-install-recommends -y libxml2-dev libxslt-dev && \\\n    echo \"Installing GeoIP dependencies\" && \\\n    apt-get install --no-install-recommends -y geoip-bin geoip-database && \\\n    echo \"Installing healthceck dependencies\" && \\\n    apt-get install --no-install-recommends -y curl && \\\n    echo \"Python server\" && \\\n    pip install --no-cache-dir uwsgi && \\\n    echo \"Removing build dependencies and cleaning up\" && \\\n    # TODO : cleanup apt-get with something like apt-get -y --purge autoremove gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \\\r\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf ~/.cache/pip\n\n# Install python dependencies\nRUN echo \"Geonode python dependencies\"\nRUN pip install --no-cache-dir pygdal==$(gdal-config --version).*\nRUN pip install --no-cache-dir celery==4.1.0# see https://github.com/GeoNode/geonode/pull/3714\r\n\n# Install geonode dependencies\nADD requirements.txt /requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\nRUN rm requirements.txt\n\n# Install geonode\nRUN mkdir /spcgeonode\nWORKDIR /spcgeonode/\nADD . /spcgeonode/\nRUN pip install --no-cache-dir -e .\nRUN chmod +x scripts/spcgeonode/django/docker-entrypoint.sh\n\n# Export ports\nEXPOSE 8000\n\n# We provide no command or entrypoint as this image can be used to serve the django project or run celery tasks\n"
}