{
  "startTime": 1674242593390,
  "endTime": 1674242593564,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nMAINTAINER lgordon *at* lgsec *dot* biz\n\nENV SHELL=/bin/bash NM_USR=ansible NB_UID=1000 NM_GRP=srm_sccm NB_GRP=1001\n\n# Run as non-root user but allow full sudo without passwd\n# Create ansible user with UID=1000, Group=1001\n\nRUN groupadd -g $NB_GRP $NM_GRP  && \\\n\tuseradd -m -s $SHELL -u $NB_UID -g $NM_GRP $NM_USR\n\n\nENV HOME /home/$NM_USR\n\n\nARG DEBIAN_FRONTEND=noninteractive\n\n\nRUN apt-get -y update && \\\n\tapt-get install --no-install-recommends -y \\\n\t\t\tapt-utils \\\n\t\t\tsoftware-properties-common \\\n\t\t\t&& \\\n\tapt-add-repository -y ppa:ansible/ansible && \\\n\tapt-get install --no-install-recommends -y \\\n\t\t\topenssh-client \\\n\t\t\tsudo less nano \\\n\t\t\trsync \\\n\t\t\tpython-pip \\\n\t\t\tbuild-essential libssl-dev libffi-dev python-dev \\\n\t\t\tlocales \\\n\t\t\t&& \\\n\n\t# following will require specifying default realm\n\n\tapt-get install --no-install-recommends -y \\\n\t\t\tlibkrb5-dev \\\n\t\t\tkrb5-user \\\n\t\t\t&& \\\n    apt-get purge -y --auto-remove && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n\nRUN pip install --no-cache-dir --proxy=$HTTP_PROXY --upgrade \\\n\t\tpip \\\n\t\tboto \\\n\t\tcs \\\n\t\tPyYAML \\\n\t\tdocker-py \\\n\t\t\"pywinrm>=0.1.1\" \\\n\t\tkerberos \\\n\t\trequests_kerberos \\\n\t\tcryptography \\\n\t\tshade \\\n\t\tansible \\\n\t\tpython-openstackclient \\\n\t\tpython-novaclient \\\n\t\tpython-heatclient \\\n\t\tos_client_config\n\n#\tOther config\n#\tDynamic inventory files *have* to be in a location where ansible will look. e.g. /usr/local/bin will not work.\n\nADD \"https://raw.githubusercontent.com/ansible/ansible/devel/examples/ansible.cfg\" \"/etc/ansible/\"\n\nADD \"https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.py\" \"/etc/ansible/\"\n\nADD \"https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.ini\" \"/etc/ansible/\"\n\nADD \"https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/openstack.py\" \"/etc/ansible/\"\n\nRUN\tchmod 755 /etc/ansible/*py && \\\n\tchmod 644 /etc/ansible/ec2.ini \\\n\t\t/etc/ansible/ansible.cfg && \\\n\t/bin/echo -e \"[local]\\nlocalhost ansible_connection=local\" >> /etc/ansible/hosts && \\\n\tlocale-gen en_US.UTF-8 && \\\n\techo \"ansible ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/ansible\n\nUSER $NM_USR\n\n# Start up in the work directory\nWORKDIR /home/$NM_USR/work\n\n# No use trying to execute an interactive shell with docker-compose up\n# CMD [\"/bin/bash\"]"
}