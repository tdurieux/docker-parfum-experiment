{
  "startTime": 1674241224720,
  "endTime": 1674241225027,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 25,
        "columnStart": 24,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 25,
        "columnStart": 24,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER mislav.novakovic@sartura.hr\n\nRUN \\\n      apt-get update && apt-get install --no-install-recommends -y \\\n\n      git \\\n      cmake \\\n      build-essential \\\n      vim \\\n      supervisor \\\n\n      libpcre3-dev \\\n      pkg-config \\\n\n      libavl-dev \\\n      libev-dev \\\n      libprotobuf-c-dev \\\n      protobuf-c-compiler \\\n\n      libssh-dev \\\n      libssl-dev \\\n\n      swig \\\n      python-dev && rm -rf /var/lib/apt/lists/*;\n\n# add netconf user\nRUN \\\n    adduser --system netconf && \\\n    echo \"netconf:netconf\" | chpasswd\n\n# generate ssh keys for netconf user\nRUN \\\n    mkdir -p /home/netconf/.ssh && \\\n    ssh-keygen -A && \\\n    ssh-keygen -t dsa -P '' -f /home/netconf/.ssh/id_dsa && \\\n    cat /home/netconf/.ssh/id_dsa.pub > /home/netconf/.ssh/authorized_keys\n\n# use /opt/dev as working directory\nRUN mkdir /opt/dev\nWORKDIR /opt/dev\n\n# libyang\nRUN \\\n      git clone -b devel https://github.com/CESNET/libyang.git && \\\n      cd libyang && mkdir build && cd build && \\\n      git checkout devel && \\\n      cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. && \\\n      make -j2 && \\\n      make install && \\\n      ldconfig\n\n# sysrepo\nRUN \\\n      git clone -b devel https://github.com/sysrepo/sysrepo.git && \\\n      cd sysrepo && mkdir build && cd build && \\\n      git checkout devel && \\\n      cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_TESTS=OFF -DREPOSITORY_LOC:PATH=/etc/sysrepo .. && \\\n      make -j2 && \\\n      make install && \\\n      ldconfig\n\n# libnetconf2\nRUN \\\n      git clone -b devel https://github.com/CESNET/libnetconf2.git && \\\n      cd libnetconf2 && mkdir build && cd build && \\\n      git checkout devel && \\\n      cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" -DENABLE_BUILD_TESTS=OFF .. && \\\n      make -j2 && \\\n      make install && \\\n      ldconfig\n\n# keystore\nRUN \\\n      cd /opt/dev && \\\n      git clone https://github.com/CESNET/Netopeer2.git && \\\n      cd Netopeer2 && \\\n      cd keystored && mkdir build && cd build && \\\n      git checkout devel-server && \\\n      cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. && \\\n      make -j2 && \\\n      make install && \\\n      ldconfig\n\n# netopeer2\nRUN \\\n      cd /opt/dev && \\\n      cd Netopeer2/server && mkdir build && cd build && \\\n      cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. && \\\n      make -j2 && \\\n      make install && \\\n      cd ../../cli && mkdir build && cd build && \\\n      cmake -DCMAKE_BUILD_TYPE:String=\"Debug\" .. && \\\n      make -j2 && \\\n      make install\n\nENV EDITOR vim\nEXPOSE 830\n\nCOPY supervisord.conf /etc/supervisord.conf\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n"
}