{
  "startTime": 1674240886692,
  "endTime": 1674240886825,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# new image\nFROM scratch\n# Imported from -\nADD file:62400a49cced0d7521560b501f6c52227c60f5e2fecd0fef20e4d0e1558f7301 in /\nRUN echo '#!/bin/sh' > /usr/sbin/policy-rc.d && \\\n\techo 'exit 101' >> /usr/sbin/policy-rc.d && \\\n\tchmod +x /usr/sbin/policy-rc.d && \\\n\tdpkg-divert --local --rename --add /sbin/initctl && \\\n\tcp -a /usr/sbin/policy-rc.d /sbin/initctl && \\\n\tsed -i 's/^exit.*/exit 0/' /sbin/initctl && \\\n\techo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup && \\\n\techo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean && \\\n\techo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean && \\\n\techo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean && \\\n\techo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages && \\\n\techo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes\nRUN sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list\nCMD [/bin/bash]\n# end of image: ubuntu (id: 5ba9dab47459d81c0037ca3836a368a4f8ce5050505ce89720e1fb8839ea048a tags: 14.04.1,latest,trusty,14.04)\n\n# new image\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y curl software-properties-common python-software-properties && \\\n\tadd-apt-repository ppa:chris-lea/node.js && \\\n\tapt-get update && \\\n\tapt-get install --no-install-recommends -y build-essential nodejs && \\\n\tmkdir -p /opt/my/service && rm -rf /var/lib/apt/lists/*;\nCOPY dir:d23e668df9774f0bb80d5cf05fa913ba58fb912ad9df85e3bed6deebc2d8046a in /opt/my/service\nWORKDIR /opt/my/service\nRUN npm install && npm cache clean --force;\nEXPOSE 8000/tcp\nENTRYPOINT [\"node\" \"/opt/my/service/server.js\"]\n# end of image: my/sample-node-app (id: 0c53ebce746743632efc8886ab93d024d7ea1e42cbc7be5630aee237f16c30ac tags: latest)\n"
}