{
  "startTime": 1674234136536,
  "endTime": 1674234136590,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 17,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# KOA REST API BOILERPLATE\n#\n# build:\n#   docker build --force-rm -t qasimsoomro/koa-rest-api-boilerplate .\n# run:\n#   docker run --rm --it --env-file=path/to/.env --name koa-rest-api-boilerplate -p 80:7071 qasimsoomro/koa-rest-api-boilerplate\n#\n#\n\n### BASE\nFROM node:8.9.4-alpine AS base\nLABEL maintainer \"Qasim Soomro <qasim@soomro.com>\"\n# Set the working directory\nWORKDIR /app\n# Copy project specification and dependencies lock files\nCOPY package.json tsconfig.json yarn.lock tsoa.json ./\n# Install yarn\nRUN apk --no-cache add yarn\n\n\n### DEPENDENCIES\nFROM base AS dependencies\n# Install Node.js dependencies\nRUN yarn\n# Install concurrently\nRUN yarn add global concurrently\n# Build Swagger and routes\nRUN yarn swagger-gen && yarn routes-gen\n\n\n### TEST\nFROM dependencies AS test\n# Copy app sources\nCOPY . .\n# Run linters and tests\nRUN yarn lint && yarn test && yarn cache clean;\n\n\n### DEVELOPMENT\nFROM dependencies as development\n# Copy app sources\nCOPY . .\n# Expose application port\nEXPOSE 7070\n# In development environment\nENV NODE_ENV development\n# Run\nCMD yarn dev\n"
}