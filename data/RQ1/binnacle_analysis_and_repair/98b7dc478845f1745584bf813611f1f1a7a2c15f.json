{
  "startTime": 1674238722044,
  "endTime": 1674238722297,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dependency for php7: libwebp library doesn't work correctly with alpine:v3.3 so we are using alpine:edge\nFROM alpine:edge\nMAINTAINER Onni Hakala - Geniem Oy. <onni.hakala@geniem.com>\n\n# Install dependencies and small amount of devtools\nRUN apk add --update curl bash git openssh-client nano nginx ca-certificates \\\n    # Libs for php\n    libssh2 libpng freetype libjpeg-turbo libgcc libxml2 libstdc++ icu-libs libltdl libmcrypt \\\n    # WP-CLI will try to use interactive mode and causes few errors in output\n    # when ncurses is not installed\n    ncurses \\\n    # For mails\n    msmtp \\\n    # For mysql import/export\n    mysql-client \\\n    # Install gettext\n    gettext \\\n    # Set timezone according your location\n    tzdata && \\\n    # Upgrade musl\n    apk add -u musl && \\\n\n    ##\n    # Install php7\n    # - These repositories are in 'testing' repositories but it's much more stable/easier than compiling our own php.\n    ##\n    apk add --update-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing/ \\\n    php7-pdo_mysql php7-mysqli php7-mysqlnd php7-mcrypt \\\n    php7 php7-session php7-fpm php7-json php7-zlib php7-xml php7-pdo \\\n    php7-gd php7-curl php7-opcache php7-ctype php7-mbstring php7-soap \\\n    php7-intl php7-bcmath php7-dom php7-xmlreader php7-openssl php7-phar php7-redis php7-mongodb  && \\\n\n    # Small fixes to php & nginx\n    ln -s /etc/php7 /etc/php && \\\n    ln -s /usr/bin/php7 /usr/bin/php && \\\n    ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm && \\\n    ln -s /usr/lib/php7 /usr/lib/php && \\\n    rm -rf /var/log/php7 && \\\n    mkdir -p /var/log/php/ && \\\n\n    # No need for the default configs\n    rm -f /etc/php/php-fpm.d/www.conf && \\\n\n    # Remove nginx user because we will create a user with correct permissions dynamically\n    deluser nginx && \\\n    mkdir -p /var/log/nginx && \\\n    mkdir -p /tmp/nginx/body && \\\n\n    # Remove default localhost folder\n    rm -rf /var/www/localhost && \\\n\n    # Create uploads folder and project folder\n    mkdir -p /var/www/uploads && \\\n    mkdir -p /var/www/project/web && \\\n\n    # Remove default crontab\n    rm /var/spool/cron/crontabs/root && \\\n\n    ##\n    # Add S6-overlay to use S6 process manager\n    # source: https://github.com/just-containers/s6-overlay/#the-docker-way\n    ##\n    curl -f -L https://github.com/just-containers/s6-overlay/releases/download/v1.17.2.0/s6-overlay-amd64.tar.gz \\\n    | tar -xvzC / && \\\n\n    ##\n    # Install wp-cli\n    # source: http://wp-cli.org/\n    ##\n    curl -f -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli && \\\n    chmod +rx /usr/local/bin/wp-cli && \\\n    # wp-cli uses less internally to output it's help pages\n    apk add less && \\\n\n    ##\n    # Install cronlock for running cron correctly with mulitple container setups\n    # https://github.com/kvz/cronlock\n    ##\n    curl -f -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock && \\\n    chmod +rx /usr/local/bin/cronlock && \\\n\n    ##\n    # Install Composer\n    ##\n    curl -f -L -sS https://getcomposer.org/installer | \\\n    php -- --install-dir=/usr/local/bin --filename=composer && \\\n    chmod +rx /usr/local/bin/composer && \\\n    # composer parallel install plugin\n    composer global require hirak/prestissimo && \\\n\n    # Remove cache and tmp files\n    rm -rf /var/cache/apk/* && \\\n    rm -rf /tmp/*\n\n##\n# Add Project files like nginx and php-fpm processes and configs\n# Also custom scripts and bashrc\n##\nCOPY rootfs/ /\n\n# Update path with composer files + wpcs\nENV TERM=\"xterm\" \\\n    DB_HOST=\"\" \\\n    DB_NAME=\"\" \\\n    DB_USER=\"\"\\\n    DB_PASSWORD=\"\"\\\n    # Set defaults which can be overriden\n    DB_PORT=\"3306\" \\\n    # Use default web port in nginx but allow it to be overridden\n    # This also works correctly with flynn:\n    # https://github.com/flynn/flynn/issues/3213#issuecomment-237307457\n    PORT=\"80\" \\\n    # Set defaults for redis\n    WP_REDIS_PORT=\"6379\" \\\n    WP_REDIS_DATABASE=\"0\" \\\n    WP_REDIS_SCHEME=\"tcp\" \\\n    WP_REDIS_CLIENT=\"pecl\" \\\n    # Cronlock is used to stop simultaneous cronjobs in clusterised environments\n    CRONLOCK_HOST=\"\" \\\n    # This is for your project root\n    PROJECT_ROOT=\"/var/www/project\" \\\n    # This is used by nginx and php-fpm\n    WEB_ROOT=\"/var/www/project/web\" \\\n    # Nginx include files\n    NGINX_INCLUDE_DIR=\"/var/www/project/nginx\" \\\n    # Allow bigger file uploads\n    NGINX_MAX_BODY_SIZE=\"64M\" \\\n    # Have sane fastcgi timeout by default\n    NGINX_FASTCGI_TIMEOUT=\"30\" \\\n\n    # Default php memory limit\n    PHP_MEMORY_LIMIT=\"128M\" \\\n\n    # This is used automatically by wp-cli\n    WP_CORE=\"/var/www/project/web/wp\" \\\n    # Use host machine as default SMTP_HOST\n    SMTP_HOST=\"172.17.0.1\" \\\n    # This folder is used to mount files into host machine\n    # You should use this path for your uploads since everything else should be ephemeral\n    UPLOADS_ROOT=\"/var/www/uploads\"\\\n    # This can be overidden by you, it's just default for us\n    TZ=\"Europe/Helsinki\"\n\n# Set default path to project folder for easier running commands in project\nWORKDIR ${PROJECT_ROOT}\n\nEXPOSE ${PORT}\n\nENTRYPOINT [\"/init\"]\n"
}