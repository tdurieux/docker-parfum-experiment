{
  "startTime": 1674248452655,
  "endTime": 1674248452786,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Multistage docker build, requires docker 17.05\n\n# builder stage\nFROM nvidia/cuda:10.0-devel as builder\n\nRUN set -ex && \\\n    apt-get update && \\\n    apt-get --no-install-recommends --yes install \\\n        libncurses5-dev \\\n        libncursesw5-dev \\\n        cmake \\\n        git \\\n        curl \\\n        libssl-dev \\\n        pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\nRUN git clone https://github.com/mimblewimble/grin-miner && cd grin-miner && git submodule update --init\n\nRUN cd grin-miner && sed -i '/^cuckoo_miner = {/s/^/#/' Cargo.toml && sed -i '/^#.*build-cuda-plugins\"]/s/^#//' Cargo.toml\n\nRUN cd grin-miner && $HOME/.cargo/bin/cargo build --release\n\n# runtime stage\nFROM nvidia/cuda:10.0-base\n\nRUN set -ex && \\\n    apt-get update && \\\n    apt-get --no-install-recommends --yes install \\\n    libncurses5 \\\n    libncursesw5 && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /grin-miner/target/release/grin-miner /grin-miner/target/release/grin-miner\nCOPY --from=builder /grin-miner/target/release/plugins/* /grin-miner/target/release/plugins/\nCOPY --from=builder /grin-miner/grin-miner.toml /grin-miner/grin-miner.toml\n\nWORKDIR /grin-miner\n\nRUN sed -i -e 's/run_tui = true/run_tui = false/' grin-miner.toml\n\nRUN echo '#!/bin/bash\\n\\\nif [ $# -eq 1 ]\\n\\\n   then\\n\\\nsed -i -e 's/127.0.0.1/\\$1/g' grin-miner.toml\\n\\\nfi\\n\\\n./target/release/grin-miner' > run.sh\n\n# If the grin server is not at 127.0.0.1 provide the ip or hostname to the container\n# by command line (i.e. docker run --name miner1 --rm -i -t miner_image 1.2.3.4)\n\nENTRYPOINT [\"sh\", \"run.sh\"]\n"
}