{
  "startTime": 1674235371550,
  "endTime": 1674235371684,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.9.0\n\nMAINTAINER hugo@exec.sh\n\n# Set app runtime environment variables\nARG NPM_TOKEN\nARG NAME\nENV NAME $NAME\nARG VERSION\nENV VERSION $VERSION\nARG VERSION_COMMIT\nENV VERSION_COMMIT $VERSION_COMMIT\nARG VERSION_BUILD_DATE\nENV VERSION_BUILD_DATE $VERSION_BUILD_DATE\n\n# Create app directory\nENV HOME /opt/$NAME\nRUN mkdir -p $HOME\nWORKDIR $HOME\n\n# Install app runtime and build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1 libnss3 libxss1 libgconf-2-4 libasound2 && \\\n    apt-get install --no-install-recommends -y build-essential git && \\\n    apt-get install --no-install-recommends -y netcat && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\nCOPY package.json $HOME\nCOPY tsconfig.json $HOME\nCOPY webpack.config.js $HOME\nRUN npm install && npm cache clean --force;\n\n# Copy app source\nCOPY src $HOME/src\n\n# Compile app source\nRUN npm run compile\n\n# Remove app build dependencies\nRUN apt-get remove --purge -y build-essential git &&\\\n    apt-get autoremove --purge -y\nRUN npm prune --production\n\nCOPY share/docker/start.sh /start.sh\nRUN chmod +x /start.sh\nCOPY share/docker/test.sh /test.sh\nRUN chmod +x /test.sh\n\nEXPOSE 3000\nENTRYPOINT [ \"/start.sh\" ]\n\nHEALTHCHECK --start-period=10s --interval=5m --timeout=3s \\\n  CMD nc -z localhost 3000 || exit 1\n"
}