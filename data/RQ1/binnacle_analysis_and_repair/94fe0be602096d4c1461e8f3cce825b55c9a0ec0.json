{
  "startTime": 1674247126967,
  "endTime": 1674247127339,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 69,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 33,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\nARG ORCHID_DB_USED='false'\nARG ORCHID_DB_HOST='localhost'\nARG ORCHID_DB_USER='orchid'\nARG ORCHID_DB_PASS='orchid_flower'\n\nMAINTAINER Clint Cario, https://github.com/ccario83\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install python2.7, java 8, and required system libraries\nUSER root\nRUN apt-get update -q && \\\n\tapt-get install --no-install-recommends -y -q \\\n\tpython \\\n\tpython-pip \\\n\tpython-dev \\\n\tpython-six \\\n\tpython-ipykernel \\\n\tpython-tk \\\n\tjupyter-notebook \\\n\tjupyter-core \\\n\tdefault-jre \\\n\tdefault-jdk \\\n\tmysql-client \\\n\tlibmysqlclient-dev \\\n\tbedtools \\\n\tsamtools \\\n\ttabix \\\n\tgit \\\n\twget \\\n\tcurl \\\n\tunzip && \\\n\tapt-get -q clean && rm -rf /var/lib/apt/lists/*;\n\n# Get the orchid code\n#RUN git clone https://github.com/Wittelab/orchid.git\nADD . /orchid\n\n# Set the working directory to /app\nWORKDIR /orchid\n\n# Install any needed packages specified in requirements.txt\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r requirements.txt\n\n# If building a database, get nextflow\nWORKDIR /orchid/workflow\nRUN if [ \"$ORCHID_DB_USED\" = \"true\" ]; then \\\n export NXF_VER='0.26.0'; curl -f -s https://get.nextflow.io | bash; fi\n\n# If building a database, download genomic data\nRUN if [ \"$ORCHID_DB_USED\" = \"true\" ]; then /orchid/workflow/nextflow run /orchid/workflow/download.nf; fi\n\n# If building a database, build it\nWORKDIR /orchid\nRUN if [ \"$ORCHID_DB_USED\" = \"true\" ]; then sh ./make_database.sh ; fi\n\n# Define environment variable\nENV NAME Orchid\n\n# Change to the notebook directory\nWORKDIR /orchid/notebooks\n\n# Make port 8400 available to the world outside this container\nEXPOSE 8400\n\n# There is an issue running jupyter directly in docker (something about pseudo-exec...), this wrapper script is the workaround\n#RUN echo '#!/bin/bash\\njupyter notebook --ip=0.0.0.0 --port=8400 --no-browser --debug' > jupyter_wrapper.sh && chmod a+x jupyter_wrapper.sh\n\n# And start jupyter notebook (using the wrapper script)\nCMD jupyter notebook --ip=0.0.0.0 --port=8400 --no-browser --debug\n#CMD [\"bash\", \"/orchid/notebooks/jupyter_wrapper.sh\"]"
}