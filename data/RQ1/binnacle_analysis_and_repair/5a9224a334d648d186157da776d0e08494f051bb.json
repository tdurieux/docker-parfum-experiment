{
  "startTime": 1674241122449,
  "endTime": 1674241122880,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 36,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest as builder\n\nRUN apk add --no-cache \\\n    autoconf \\\n    automake \\\n    bison \\\n    build-base \\\n    curl \\\n    flex \\\n    git \\\n    libmnl-dev \\\n    libtool \\\n    linux-headers \\\n    readline-dev \\\n    gdb pv strace valgrind vim  # for debug only\n\nRUN mkdir -p \\\n    /baseroot/opt/wh/tools \\\n    /baseroot/usr/bin \\\n    /baseroot/usr/lib \\\n    /baseroot/usr/local/lib/lua/5.3 \\\n    /baseroot/usr/share/bash-completion/completions\n\nWORKDIR /root\nRUN git clone https://github.com/jedisct1/libsodium && \\\n    git clone  https://github.com/miniupnp/miniupnp && \\\n    curl -f -R -O http://www.tcpdump.org/release/libpcap-1.9.0.tar.gz && \\\n    curl -f -R -O https://www.lua.org/ftp/lua-5.3.5.tar.gz && \\\n    tar xfz libpcap-1.9.0.tar.gz && tar xfz lua-5.3.5.tar.gz && rm libpcap-1.9.0.tar.gz\n\n# Build libpcap\nWORKDIR /root/libpcap-1.9.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j && \\\n    make install\n\n# Build sodium\nWORKDIR /root/libsodium\nRUN git checkout stable && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j && \\\n    make install\n\n# Build Lua\nWORKDIR /root/lua-5.3.5\n#RUN sed -i 's/MYCFLAGS=/MYCFLAGS=-g/g' src/Makefile && sed -i 's/-O2//g' src/Makefile\nRUN make -j linux && \\\n    make install\n\n# Build MiniUPNPc\nWORKDIR /root/miniupnp/miniupnpc\nRUN git checkout miniupnpc_2_1 && \\\n    make -j && \\\n    make install && \\\n    make install DESTDIR=/baseroot\n\n# Build WireGuard tools\nWORKDIR /root/wh/\nCOPY deps deps\nWORKDIR /root/wh/deps/WireGuard/src/tools\nRUN make -j && \\\n    make install DESTDIR=/baseroot\n\n# Prepare wh\nRUN printf \"#!/bin/sh\\nexport LUA_PATH=/opt/wh/?.lua\\nlua /opt/wh/tools/cli.lua \\$@\\n\" >> /baseroot/usr/bin/wh && \\\n    chmod +x /baseroot/usr/bin/wh\n\n# Build WireHub\nWORKDIR /root/wh\nCOPY Makefile .\nCOPY src src\nRUN make -j && \\\n    cp src/*.lua /baseroot/opt/wh && \\\n    cp src/tools/*.lua /baseroot/opt/wh/tools && \\\n    cp .obj/*.so /baseroot/usr/local/lib/lua/5.3/\n\nCOPY config/* /baseroot/etc/wirehub/\n\nWORKDIR /baseroot\nRUN cp /usr/local/lib/*.so* usr/lib/ && \\\n    cp /usr/local/bin/lua* usr/bin && \\\n    tar cf /baseroot.tar .\n\n##\n\nFROM alpine:latest as wh\n\nRUN apk add --no-cache \\\n    iptables \\\n    libmnl \\\n    readline\n\nCOPY --from=builder /baseroot.tar /\nRUN tar xf /baseroot.tar && \\\n    rm /baseroot.tar && \\\n    rm -rf /usr/include/* /usr/share/man/* /usr/lib/*.a\n\n"
}