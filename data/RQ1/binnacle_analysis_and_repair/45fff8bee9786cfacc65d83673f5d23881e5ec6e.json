{
  "startTime": 1674239301203,
  "endTime": 1674239301368,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# -*- mode: dockerfile -*-\nFROM debian:9\nMAINTAINER Uchio Kondo <udzura@udzura.jp>\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get -qq -y update\nRUN apt-get -qq --no-install-recommends -y install \\\n    debhelper devscripts bison flex \\\n    automake autoconf libtool git libreadline6-dev \\\n    zlib1g-dev libncurses5-dev libssl-dev libpam0g-dev \\\n    rake autotools-dev cgroup-tools build-essential \\\n    dh-make xz-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -qq --no-install-recommends -y install libprotobuf-dev libprotobuf-c0-dev \\\n    protobuf-c-compiler protobuf-compiler python-protobuf \\\n    libnl-3-dev libnet-dev libcap-dev pkg-config asciidoc xmlto && rm -rf /var/lib/apt/lists/*;\n\nENV VERSION 0.10.3\nENV USER root\nENV SRC_PKG_NAME haconiwa_0.10.3-1_amd64.deb\nENV DST_PKG_NAME haconiwa_0.10.3-1+debian9_amd64.deb\nVOLUME /out\n\nRUN ln -s /tmp/criu-build/lib/c /usr/local/include/criu\nRUN mkdir -p /libexec\nRUN echo '#!/bin/bash'                         >  /libexec/builddeb.sh\nRUN echo 'set -xe'                             >> /libexec/builddeb.sh\nRUN echo 'git clone https://github.com/haconiwa/haconiwa.git /root/haconiwa-$VERSION' >> /libexec/builddeb.sh\nRUN echo 'cd /root/haconiwa-$VERSION'          >> /libexec/builddeb.sh\nRUN echo 'git checkout $(git rev-parse v$VERSION)' >> /libexec/builddeb.sh\nRUN echo 'sed -i.bak \"s;matsumotory/mruby-criu;haconiwa/mruby-criu;\" mrbgem.rake' >> /libexec/builddeb.sh\nRUN echo 'sed -i.bak \"1iENV[%(CRIU_TMP_DIR)] = %(/tmp/criu-build)\" build_config.rb' >> /libexec/builddeb.sh\nRUN echo 'sed -i.bak \"5iconf.cc.defines << %(MRB_CRIU_USE_STATIC)\" build_config.rb' >> /libexec/builddeb.sh\nRUN echo 'rake mruby'                          >> /libexec/builddeb.sh\nRUN echo 'dh_make --single --createorig -y'    >> /libexec/builddeb.sh\nRUN echo 'cp -v packages/deb/debian/* debian/' >> /libexec/builddeb.sh\nRUN echo 'cp -f debian/control.9 debian/control' >> /libexec/builddeb.sh\nRUN echo 'rm -rf debian/*.ex debian/*.EX'      >> /libexec/builddeb.sh\nRUN echo 'debuild -uc -us'                     >> /libexec/builddeb.sh\nRUN echo 'cd ../'                              >> /libexec/builddeb.sh\nRUN echo 'cp $SRC_PKG_NAME /out/pkg/$DST_PKG_NAME' >> /libexec/builddeb.sh\nRUN chmod a+x /libexec/builddeb.sh\n\nCMD [\"/libexec/builddeb.sh\"]\n"
}