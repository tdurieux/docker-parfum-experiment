{
  "startTime": 1674243343181,
  "endTime": 1674243343270,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5-alpine\n\nADD requirements/ /requirements/\nRUN set -ex \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tgcc \\\n\t\tg++ \\\n\t\tmake \\\n\t\tlibc-dev \\\n\t\tmusl-dev \\\n\t\tlinux-headers \\\n\t\tpcre-dev \\\n\t\tpostgresql-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tzlib-dev \\\n\t\tgit \\\n\t&& pyvenv /venv \\\n\t&& /venv/bin/pip install -U pip \\\n\t&& LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install -r /requirements/production.txt\" \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --recursive /venv \\\n\t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r apk info --installed \\\n\t\t\t| sort -u \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .python-rundeps $runDeps \\\n\t&& apk del .build-deps \\\n\t&& apk add --no-cache libjpeg-turbo pcre\nRUN apk add --no-cache postgresql-client\nRUN mkdir /code/\nWORKDIR /code/\nADD . /code/\nEXPOSE 8000\n\n# Add custom environment variables needed by Django or your settings file here:\nENV DJANGO_SETTINGS_MODULE=bakerydemo.settings.production DJANGO_DEBUG=off\n\n# uWSGI configuration (customize as needed):\nENV UWSGI_VIRTUALENV=/venv UWSGI_WSGI_FILE=bakerydemo/wsgi_production.py UWSGI_HTTP=:8000 UWSGI_MASTER=1 UWSGI_WORKERS=2 UWSGI_THREADS=8 UWSGI_UID=1000 UWSGI_GID=2000\n\n# Call collectstatic with dummy environment variables:\nRUN DATABASE_URL=postgres://none REDIS_URL=none /venv/bin/python manage.py collectstatic --noinput\n\n# make sure static files are writable by uWSGI process\nRUN chown -R 1000:2000 /code/bakerydemo/media\n\n# start uWSGI, using a wrapper script to allow us to easily add more commands to container startup:\nENTRYPOINT [\"/code/docker-entrypoint.sh\"]\nCMD [\"/venv/bin/uwsgi\", \"--http-auto-chunked\", \"--http-keepalive\", \"--static-map\", \"/media/=/code/bakerydemo/media/\"]\n"
}