{
  "startTime": 1674241566577,
  "endTime": 1674241566621,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest as clang-format-build\n\n# Build dependencies\nRUN apk update && apk add --no-cache git build-base ninja cmake python3\n\n# Pass `--build-arg LLVM_TAG=master` for latest llvm commit\nARG LLVM_TAG\nENV LLVM_TAG ${LLVM_TAG:-llvmorg-8.0.0}\n\n# Download and setup\nWORKDIR /build\nRUN git clone --branch ${LLVM_TAG} --depth 1 https://github.com/llvm/llvm-project.git\nWORKDIR /build/llvm-project\nRUN mv clang llvm/tools\nRUN mv libcxx llvm/projects\n\n# Build\nWORKDIR llvm/build\nRUN cmake -GNinja -DLLVM_BUILD_STATIC=ON -DLLVM_ENABLE_LIBCXX=ON ..\nRUN ninja clang-format\n\n# Install\nFROM alpine:latest\n\nLABEL io.whalebrew.name 'clang-format'\nLABEL io.whalebrew.config.working_dir '/workdir'\nWORKDIR /workdir\n\nCOPY --from=clang-format-build /build/llvm-project/llvm/build/bin/clang-format /usr/bin\n\nENTRYPOINT [\"clang-format\"]\nCMD [\"--help\"]\n"
}