{
  "startTime": 1674235944040,
  "endTime": 1674235944347,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\n\nRUN apk add --no-cache --update \\\n  git \\\n  llvm-dev \\\n  llvm-static \\\n  clang-dev \\\n  clang-static \\\n  cmake \\\n  flex-dev \\\n  bison \\\n  luajit-dev \\\n  build-base \\\n  iperf \\\n  linux-headers \\\n  elfutils-dev \\\n  zlib-dev \\\n  python-dev\n\nRUN ln -s /usr/lib/cmake/llvm5/ /usr/lib/cmake/llvm; \\\n    ln -s /usr/include/llvm5/llvm-c/ /usr/include/llvm-c; \\\n    ln -s /usr/include/llvm5/llvm/ /usr/include/llvm\n\nRUN git clone https://github.com/iovisor/bcc.git\n\nWORKDIR /bcc\n\n# Specific patches\nRUN git config --global user.email \"build@example.com\" && \\\n    git checkout v0.5.0 && \\\n    git cherry-pick -m 1 b44d705657d24a54605e10da1bd92a2d8b13b908 && \\\n    git cherry-pick -m 1 3dbb0db486b155fb2ce6850d8d9c69bd9974a0db && \\\n    git cherry-pick -m 1 04ec1fa84a669dbf7f48728237f8d24c32a38803\n\nWORKDIR /bcc/build\n\nRUN cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release\nRUN make -j$(nproc)\nRUN make install\nRUN echo -e \"#include <unistd.h>\\n$(cat /usr/include/bcc/libbpf.h)\" > /usr/include/bcc/libbpf.h\nRUN strip /usr/lib64/libbcc.so.0.5.0\n\nFROM golang:1.10-alpine\nRUN wget -O /usr/local/bin/dep https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 && chmod +x /usr/local/bin/dep\nRUN apk add --update --no-cache git gcc musl-dev linux-headers elfutils-libelf zlib libstdc++ libgcc\nWORKDIR $GOPATH/src/github.com/dswarbrick/ebpf_exporter\nCOPY Gopkg.lock Gopkg.toml ./\nRUN dep ensure --vendor-only\nCOPY . .\nCOPY --from=0 /usr/lib64/libbcc.so.0.5.0 /usr/lib/\nRUN ln -s /usr/lib/libbcc.so.0.5.0 /usr/lib/libbcc.so.0 && \\\n    ln -s /usr/lib/libbcc.so.0.5.0 /usr/lib/libbcc.so\nCOPY --from=0 /usr/include/bcc /usr/include/bcc\nCOPY --from=0 /usr/lib64/pkgconfig/libbcc.pc /usr/lib64/pkgconfig/\nRUN go install -ldflags=\"-s -w\" .\n\nFROM alpine:edge\nRUN apk --no-cache --update add elfutils-libelf zlib libstdc++ libgcc\nCOPY --from=0 /usr/lib64/libbcc.so.0.5.0 /usr/lib/\nRUN ln -s /usr/lib/libbcc.so.0.5.0 /usr/lib/libbcc.so.0 && \\\n    ln -s /usr/lib/libbcc.so.0.5.0 /usr/lib/libbcc.so\nCOPY --from=1 /go/bin/ebpf_exporter /\nCMD [\"/ebpf_exporter\"]\n"
}