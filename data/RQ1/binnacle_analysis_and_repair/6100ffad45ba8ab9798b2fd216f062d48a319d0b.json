{
  "startTime": 1674241338027,
  "endTime": 1674241338418,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 1,
        "columnEnd": 45
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 80
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 1,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.redhat.io/rhel7\n\n# GOLANG install steps\n\nENV GOLANG_VERSION 1.11.1\nENV GOLANG_SRC_URL https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\nENV GOLANG_SRC_SHA256 558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117\n\nRUN REPOLIST=rhel-7-server-rpms,rhel-7-server-optional-rpms,rhel-server-rhscl-7-rpms && \\\n\tyum -y update-minimal --disablerepo \"*\" --enablerepo rhel-7-server-rpms --setopt=tsflags=nodocs \\\n\t  --security --sec-severity=Important --sec-severity=Critical && \\\n\tyum -y install --disablerepo \"*\" --enablerepo ${REPOLIST} --setopt=tsflags=nodocs \\\n\t  gcc openssl golang git make rsync wget python27 && \\\n# Add epel repo for dpkg install\n\tcurl -f -o epel-release-latest-7.noarch.rpm -SL https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n            --retry 9 --retry-max-time 0 -C - && \\\n\trpm -ivh epel-release-latest-7.noarch.rpm && rm epel-release-latest-7.noarch.rpm && \\\n\tyum -y install --disablerepo \"*\" --enablerepo epel --setopt=tsflags=nodocs dpkg && \\\n\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" && \\\n\twget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz && \\\n\techo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - && \\\n\ttar -C /usr/local -xzf golang.tar.gz && \\\n\trm golang.tar.gz && \\\n\tcd /usr/local/go/src && \\\n\t./make.bash && \\\n\tyum -y erase golang && \\\n\tyum clean all && rm -rf /var/cache/yum\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\n# install gosu\n# https://github.com/tianon/gosu/blob/master/INSTALL.md#from-centos\nENV GOSU_VERSION 1.10\nRUN set -ex && \\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" && \\\n\twget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" && \\\n\twget -O /tmp/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" && \\\n# verify the signature\n\texport GNUPGHOME=\"$(mktemp -d)\" && \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n\tgpg --batch --verify /tmp/gosu.asc /usr/bin/gosu && \\\n\trm -r \"$GNUPGHOME\" /tmp/gosu.asc && \\\n\tchmod +x /usr/bin/gosu && \\\n# verify that the binary works\n\tgosu nobody true && rm -rf -d\n\n# Controller install steps\nCOPY entrypoint.builder.sh /entrypoint.sh\nCOPY requirements.txt /tmp/requirements.txt\nCOPY requirements.docs.txt /tmp/requirements.docs.txt\n\nRUN source scl_source enable python27 && \\\n\tpip install --no-cache-dir --upgrade pip && \\\n\tpip install --no-cache-dir setuptools flake8 && \\\n\tpip install --no-cache-dir --ignore-installed -r /tmp/requirements.txt && \\\n\tpip install --no-cache-dir -r /tmp/requirements.docs.txt && \\\n\tgo get github.com/wadey/gocovmerge && \\\n\tgo get golang.org/x/tools/cmd/cover && \\\n\tgo get github.com/mattn/goveralls && \\\n\tgo get github.com/onsi/ginkgo/ginkgo && \\\n\tgo get github.com/onsi/gomega && \\\n\tchmod 755 /entrypoint.sh\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ \"/bin/bash\" ]\n"
}