{
  "startTime": 1674249066490,
  "endTime": 1674249066552,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 0, based on Node.js, to build and compile Angular\n\nFROM node:9.3.0-alpine as node\n\nWORKDIR /app\n\nCOPY ./frontend/package.json /app/\n\nRUN npm install && npm cache clean --force;\n\nCOPY ./frontend /app/\n\nRUN npm run build --prod\n\n# Stage 1 - Serve compiled code with NGINX\n\nFROM nginx:alpine\n\nRUN apk update && apk upgrade\n\nRUN rm -rf /etc/nginx/nginx.conf\n\nCOPY ./nginx/nginx*.conf /etc/nginx/\n\nARG NGINX_SSL\n\nARG SERVER_NAME\n\nARG CERT_NAME\n\nRUN sh -c 'if [ \"$NGINX_SSL\" = true ]; then mv /etc/nginx/nginx-ssl.conf /etc/nginx/nginx.conf && sed -i -e 's/localhost/${SERVER_NAME}/g' /etc/nginx/nginx.conf; fi'\n\nRUN sh -c 'if [ \"$CERT_NAME\" != \"\" ] && [ \"$NGINX_SSL\" = true ]; then sed -i -e 's/greynoise/${CERT_NAME}/g' /etc/nginx/nginx.conf; fi'\n\nCOPY --from=node /app/dist /usr/share/nginx/html/\n\nRUN chmod -R 0755 /usr/share/nginx/html/\n"
}