{
  "startTime": 1674246026195,
  "endTime": 1674246026418,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8u191-jdk-alpine3.9\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n    org.label-schema.license=Apache-2.0 \\\n    org.label-schema.name=jenkins-slave \\\n    org.label-schema.vcs-ref=$VCS_REF \\\n    org.label-schema.vcs-url=https://github.com/instantlinux/docker-tools\n\nENV SWARM_CLIENT_EXECUTORS=4 \\\n    SWARM_CLIENT_JAR=/opt/jenkins-swarm/swarm-client.jar \\\n    SWARM_CLIENT_LABELS= \\\n    SWARM_CLIENT_NAME= \\\n    SWARM_CLIENT_PARAMETERS=-disableSslVerification \\\n    SWARM_DELAY_START= \\\n    SWARM_ENV_FILE= \\\n    SWARM_JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk \\\n    SWARM_JENKINS_SECRET=jenkins-agent-password \\\n    SWARM_JENKINS_USER=jenkins \\\n    SWARM_MASTER_URL=http://jenkins:8080 \\\n    SWARM_VM_PARAMETERS=-Dfile.encoding=UTF-8 \\\n    SWARM_WORKDIR=/opt/jenkins \\\n    TZ=UTC\n\nARG _CLIENT_VERSION=3.14\nARG _COMPOSE_VERSION=1.23.2\nARG _DOCKER_VERSION=18.09.1-r0\nARG _PYCRYPTOGRAPHY_VERSION=2.4.2-r2\nARG _TINI_VERSION=0.18.0\nARG _DOCKER_DOWNLOADS=https://github.com/docker/compose/releases/download\nARG _COMPOSE_URL=${_DOCKER_DOWNLOADS}/${_COMPOSE_VERSION}/docker-compose-Linux-x86_64\nARG _PLUGIN_DOWNLOADS=https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client\nARG _TINI_DOWNLOADS=https://github.com/krallin/tini/releases/download\nARG DOCKER_GID=485\nARG JENKINS_UID=1000\nARG CLIENT_SHA=d3bdef93feda423b4271e6b03cd018d1d26a45e3c2527d631828223a5e5a21fc\nARG COMPOSE_SHA=4d618e19b91b9a49f36d041446d96a1a0a067c676330a4f25aca6bbd000de7a9\nARG TINI_SHA=eadb9d6e2dc960655481d78a92d2c8bc021861045987ccd3e27c7eae5af0cf33\n\nCOPY requirements.txt /root/\n\nRUN addgroup -g $DOCKER_GID docker && \\\n    mkdir -p $SWARM_WORKDIR `dirname $SWARM_CLIENT_JAR` && \\\n    adduser -D -h $SWARM_WORKDIR -u $JENKINS_UID -G docker \\\n      -s /bin/bash $SWARM_JENKINS_USER && \\\n    echo '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main' \\\n      >>/etc/apk/repositories && \\\n    apk add --update --no-cache \\\n      bash curl docker==$_DOCKER_VERSION gcc git gzip make \\\n      musl=1.1.20-r4 musl-dev openssh-client python3 python3-dev \\\n      py3-cryptography@edge==$_PYCRYPTOGRAPHY_VERSION py3-pip py3-virtualenv \\\n      tar tzdata uwsgi-python3 wget && \\\n    cp /usr/share/zoneinfo/$TZ /etc/localtime && \\\n    echo $TZ >/etc/timezone && \\\n    curl -f -sLo $SWARM_CLIENT_JAR \\\n      $_PLUGIN_DOWNLOADS/$_CLIENT_VERSION/swarm-client-$_CLIENT_VERSION.jar && \\\n    curl -f -sLo /bin/tini ${_TINI_DOWNLOADS}/v${_TINI_VERSION}/tini-static && \\\n    curl -f -sLo /usr/local/bin/docker-compose ${_COMPOSE_URL} && \\\n\n# Verify downloads and set up paths\n    echo \"$CLIENT_SHA  $SWARM_CLIENT_JAR\" > /tmp/checksums && \\\n    echo \"$TINI_SHA  /bin/tini\" >> /tmp/checksums && \\\n    echo \"$COMPOSE_SHA  /usr/local/bin/docker-compose\" >> /tmp/checksums && \\\n    sha256sum -c /tmp/checksums && rm /tmp/checksums && \\\n    chmod +x /bin/tini /usr/local/bin/docker-compose && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir -r /root/requirements.txt && \\\n    chown $SWARM_JENKINS_USER $SWARM_WORKDIR /etc/localtime /etc/timezone && \\\n    rm -f /var/cache/apk/*\n\nWORKDIR $SWARM_WORKDIR\nVOLUME $SWARM_WORKDIR\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/entrypoint.sh\n\nUSER jenkins\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/entrypoint.sh\"]\nCMD [\"swarm\"]\n"
}