{
  "startTime": 1674235966270,
  "endTime": 1674235966422,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda@sha256:4df157f2afde1cb6077a191104ab134ed4b2fd62927f27b69d788e8e79a45fa1\n# Adapted from mujoco-py image\n\n# Comments from mujoco-py image docker file\n# We need the CUDA base dockerfile to enable GPU rendering\n# on hosts with GPUs.\n# The image below is a pinned version of nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04 (from Jan 2018)\n# If updating the base image, be sure to test on GPU since it has broken in the past.\n\n\nLABEL author=\"Stanford Surreal team\"\n\nRUN apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    curl \\\n    git \\\n    cmake \\\n    unzip \\\n    bzip2 \\\n    wget \\\n    libgl1-mesa-dev \\\n    libgl1-mesa-glx \\\n    libglew-dev \\\n    libosmesa6-dev \\\n    software-properties-common \\\n    net-tools \\\n    unzip \\\n    vim \\\n    virtualenv \\\n    wget \\\n    xpra \\\n    xserver-xorg-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o /usr/local/bin/patchelf https://s3-us-west-2.amazonaws.com/openai-sci-artifacts/manual-builds/patchelf_0.9_amd64.elf \\\n    && chmod +x /usr/local/bin/patchelf\n\nENV LANG C.UTF-8\n\nRUN mkdir -p /root/.mujoco \\\n    && wget https://www.roboti.us/download/mjpro150_linux.zip -O mujoco.zip \\\n    && unzip mujoco.zip -d /root/.mujoco \\\n    && rm mujoco.zip\nENV LD_LIBRARY_PATH /root/.mujoco/mjpro150/bin:${LD_LIBRARY_PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\nCOPY build_files/Xdummy /usr/local/bin/Xdummy\nRUN chmod +x /usr/local/bin/Xdummy\n\n# Workaround for https://bugs.launchpad.net/ubuntu/+source/nvidia-graphics-drivers-375/+bug/1674677\nCOPY build_files/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json\n\n# python deps\nWORKDIR /mylibs\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash Miniconda3-latest-Linux-x86_64.sh -p /mylibs/miniconda -b\nRUN rm /mylibs/Miniconda3-latest-Linux-x86_64.sh\nENV PATH=/mylibs/miniconda/bin:${PATH}\nRUN conda install python=3.5\n\n# pytorch\nRUN conda install --yes pytorch torchvision cuda90 -c pytorch\nRUN conda install --yes ffmpeg -c conda-forge\n# Fake a mujoco key\nRUN touch /root/.mujoco/mjkey.txt\nCOPY build_files/requirements.txt /mylibs/\nRUN pip install --no-cache-dir -r /mylibs/requirements.txt\n\nCOPY surreal /mylibs/surreal\nRUN pip install --no-cache-dir -e /mylibs/surreal\n\nCOPY build_files/entrypoint-nvidia.py /usr/local/bin/entrypoint.py\nENTRYPOINT [\"/usr/local/bin/entrypoint.py\"]\n\n"
}