{
  "startTime": 1674241416479,
  "endTime": 1674241416583,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/rpi-raspbian:jessie\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  apt-utils wget unzip build-essential cmake pkg-config \\\n  libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev \\\n  libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \\\n  libxvidcore-dev libx264-dev \\\n  libgtk2.0-dev libgtk-3-dev \\\n  libatlas-base-dev gfortran \\\n  python3-dev python3-pip python-pip python3-h5py \\\n  python3-numpy python3-matplotlib python3-scipy python3-pandas && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR autonomous\n\nCOPY . .\n\n# https://github.com/samjabrahams/tensorflow-on-raspberry-pi/releases\nRUN wget https://github.com/samjabrahams/tensorflow-on-raspberry-pi/releases/download/v1.1.0/tensorflow-1.1.0-cp34-cp34m-linux_armv7l.whl\n# RUN cp  tensorflow-1.1.0-cp34-cp34m-linux_armv7l.whl  tensorflow-1.1.0-cp35-cp35m-linux_armv7l.whl\n\nRUN pip3 install --no-cache-dir tensorflow-1.1.0-cp34-cp34m-linux_armv7l.whl\n\nRUN pip3 install --no-cache-dir mock\nRUN pip install --no-cache-dir platformio\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# TODO: upload Arduino code to car\n\n# TODO: add default weigths\n\nRUN echo  \"Done\"\n"
}