{
  "startTime": 1674235388200,
  "endTime": 1674235388336,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 2,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fstyle/caffe-ssd:gpu\n\nRUN pip install --no-cache-dir \\\n    jupyter \\\n    lmdb \\\n    opencv-contrib-python \\\n    && rm -rf ~/.cache/pip\n\nRUN ln -s /usr/bin/python /usr/bin/python3\n\n# Install all OS dependencies for notebook server that starts but lacks all\n# features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n    bzip2 \\\n    ca-certificates \\\n    locales \\\n    netcat \\\n    sudo \\\n    wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Configure environment\nENV SHELL=/bin/bash \\\n    NB_USER=aurora \\\n    NB_UID=1000 \\\n    NB_GID=2000 \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\n\n# Create aurora user with UID=1000 and in the 'aurora' group\nRUN groupadd -g $NB_GID $NB_USER \\\n    && useradd -m -s $SHELL -N -u $NB_UID -g $NB_GID $NB_USER \\\n    && echo '%'$NB_USER 'ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nEXPOSE 8888\nWORKDIR /workspace\n\n# Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\n\n# Install Aurora job submit tool\nARG CACHE_DATE\nARG SUBMIT_TOOL_NAME=aurora\nRUN wget https://raw.githubusercontent.com/linkernetworks/aurora/master/install.sh -O - | bash \\\n    && if [ \"$SUBMIT_TOOL_NAME\" != \"aurora\" ]; then mv /usr/local/bin/aurora /usr/local/bin/$SUBMIT_TOOL_NAME; fi\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n"
}