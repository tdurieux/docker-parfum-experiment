{
  "startTime": 1674249913659,
  "endTime": 1674249913768,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-devel-centos7\n\n# Install MKL\nRUN yum-config-manager --add-repo https://yum.repos.intel.com/mkl/setup/intel-mkl.repo\nRUN rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB\nRUN yum install -y intel-mkl-2019.3-062 && rm -rf /var/cache/yum\nENV LD_LIBRARY_PATH /opt/intel/mkl/lib/intel64:$LD_LIBRARY_PATH\nENV LIBRARY_PATH /opt/intel/mkl/lib/intel64:$LIBRARY_PATH\nENV LD_PRELOAD /usr/lib64/libgomp.so.1:/opt/intel/mkl/lib/intel64/libmkl_def.so:\\\n/opt/intel/mkl/lib/intel64/libmkl_avx2.so:/opt/intel/mkl/lib/intel64/libmkl_core.so:\\\n/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.so:/opt/intel/mkl/lib/intel64/libmkl_gnu_thread.so\n\n# Install necessary build tools\nRUN yum install -y gcc-c++ make swig3 && rm -rf /var/cache/yum\n\n# Install necesary headers/libs\nRUN yum install -y python-devel numpy && rm -rf /var/cache/yum\n\nCOPY . /opt/faiss\n\nWORKDIR /opt/faiss\n\n# --with-cuda=/usr/local/cuda-8.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --without-cuda\nRUN make -j $(nproc)\nRUN make -C python\nRUN make test\nRUN make install\nRUN make -C demos demo_ivfpq_indexing && ./demos/demo_ivfpq_indexing\n"
}