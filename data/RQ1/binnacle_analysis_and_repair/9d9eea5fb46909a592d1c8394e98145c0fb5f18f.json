{
  "startTime": 1674245719768,
  "endTime": 1674245720122,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 11,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 11,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Hyperledger fabric base image.\n# If you need a peer node to run, please see the yeasy/hyperledger-peer image.\n# Workdir is set to $GOPATH/src/github.com/hyperledger/fabric\n# Data is stored under /var/hyperledger/db and /var/hyperledger/production\n\n# Currently, the binary will look for config files at corresponding path.\n\nFROM golang:1.7\nMAINTAINER Baohua Yang <yangbaohua@gmail.com>\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV FABRIC_HOME $GOPATH/src/github.com/hyperledger/fabric\nENV ARCH x86_64\n\n# version for the base images, e.g., fabric-ccenv, fabric-baseos\nENV BASE_VERSION 1.0.0-preview\n# version for the peer/orderer binaries\nENV PROJECT_VERSION 1.0.0-preview\n\n# The data and config dir, can map external one with -v\nVOLUME /var/hyperledger\n#VOLUME /etc/hyperledger/fabric\n\nRUN mkdir -p /var/hyperledger/db /var/hyperledger/production /chaincode/input /chaincode/output\n\nRUN apt-get update \\\n        && apt-get install --no-install-recommends -y libsnappy-dev zlib1g-dev libbz2-dev libltdl-dev \\\n        && rm -rf /var/cache/apt && rm -rf /var/lib/apt/lists/*;\n\n# install chaintool\nRUN curl -f -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.1/chaintool > /usr/local/bin/chaintool \\\n        && chmod a+x /usr/local/bin/chaintool\n\n# clone fabric v1.0.0-alpha code\nRUN mkdir -p $GOPATH/src/github.com/hyperledger \\\n        && cd $GOPATH/src/github.com/hyperledger \\\n        && git clone --single-branch -b v1.0.0-alpha --depth 1 http://gerrit.hyperledger.org/r/fabric \\\n        && cp $FABRIC_HOME/devenv/limits.conf /etc/security/limits.conf \\\n        && cd $FABRIC_HOME/ \\\n# install configtxgen\n        && CGO_CFLAGS=\" \" go install -ldflags \"-X github.com/hyperledger/fabric/common/metadata.Version=${PROJECT_VERSION} -X github.com/hyperledger/fabric/common/metadata.BaseVersion=${BASE_VERSION} -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric\" github.com/hyperledger/fabric/common/configtx/tool/configtxgen \\\n# install gotools\n        && go get github.com/golang/lint/golint \\\n        && go get github.com/kardianos/govendor \\\n        && go get golang.org/x/tools/cmd/goimports \\\n        && go get github.com/golang/protobuf/protoc-gen-go \\\n        && go get github.com/onsi/ginkgo/ginkgo \\\n        && go get github.com/axw/gocov/... \\\n        && go get github.com/AlekSi/gocov-xml\n\n# this is only a workaround for current hard-coded problem when using as fabric-baseimage.\nRUN ln -s $GOPATH /opt/gopath\n\nWORKDIR $FABRIC_HOME\n"
}