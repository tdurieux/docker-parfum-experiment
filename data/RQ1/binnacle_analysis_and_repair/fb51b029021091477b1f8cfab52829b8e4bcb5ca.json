{
  "startTime": 1674245489490,
  "endTime": 1674245489741,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.6.0-gpu\n\n# Setup environment for tensorflow models\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        curl \\\n        git \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        protobuf-compiler \\\n        python-pil \\\n        python-lxml \\\n        python-tk \\\n        software-properties-common \\\n        swig \\\n        zip \\\n        zlib1g-dev \\\n        libcurl3-dev \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get install -y --no-install-recommends python-pip python-dev build-essential && rm -rf /var/lib/apt/lists/*;\n\n#RUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n#    python get-pip.py && \\\n#    rm get-pip.py\n\n# Set up grpc\nRUN pip install --no-cache-dir enum34 futures mock six matplotlib jupyter && \\\n    pip install --no-cache-dir --pre 'protobuf>=3.0.0a3' && \\\n    pip install --no-cache-dir -i https://testpypi.python.org/simple --pre grpcio\n\nWORKDIR /\nRUN git clone -b r1.4 https://github.com/tensorflow/tensorflow.git\n\n# Set up Bazel.\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https://github.com/bazelbuild/bazel/issues/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https://github.com/bazelbuild/bazel/issues/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\n# Install the most recent bazel release.\nENV BAZEL_VERSION 0.5.4\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\nWORKDIR /tensorflow\nRUN tensorflow/tools/ci_build/builds/configured CPU \\\n\tbazel build tensorflow/tools/graph_transforms:transform_graph\n\nWORKDIR /\nRUN git clone https://github.com/tensorflow/models.git\nRUN git clone https://github.com/cocodataset/cocoapi.git\nWORKDIR /cocoapi/PythonAPI\nRUN pip install --no-cache-dir Cython && make\nRUN cp -r pycocotools /models/research/\n\nWORKDIR /models/research/\nRUN protoc object_detection/protos/*.proto --python_out=.\nENV PYTHONPATH=$PYTHONPATH:/models/research/:/models/research/slim\n\n# Add dataset into docker file\n# Add volumes for output graph and\nVOLUME /data\n\n# Add files to dockerfile\nADD . /\nRUN chmod +x /run.sh\n\nEXPOSE 8000\nENTRYPOINT [\"/run.sh\"]\nCMD [\"\"]"
}