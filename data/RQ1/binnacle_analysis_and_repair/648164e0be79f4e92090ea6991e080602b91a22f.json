{
  "startTime": 1674252718342,
  "endTime": 1674252718529,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 213
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 213
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-apache\nMAINTAINER sinkcup <sinkcup@gmail.com>\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y cron gnupg2 graphviz icu-devtools libicu-dev libssl-dev unzip vim zlib1g-dev nasm libjpeg62-turbo-dev libpng-dev libwebp-dev libxpm-dev libfreetype6-dev libsasl2-dev libssl-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN docker-php-ext-configure gd --with-gd --with-webp-dir --with-jpeg-dir --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir \\\n    && docker-php-ext-install intl pdo_mysql zip gd \\\n    && docker-php-ext-enable opcache \\\n    && cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean \\\n    && apt-get autoclean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /var/www/laravel\n\nCOPY package.json package-lock.json /var/www/laravel/\nRUN npm install && npm cache clean --force;\n\nCOPY resources/js /var/www/laravel/resources/js\nCOPY resources/sass /var/www/laravel/resources/sass\nCOPY webpack.mix.js /var/www/laravel/\nRUN npm run production\n\nCOPY composer.json composer.lock /var/www/laravel/\nRUN composer install --no-autoloader --no-scripts --no-dev\n\nCOPY app /var/www/laravel/app\nCOPY artisan /var/www/laravel/artisan\nCOPY bootstrap /var/www/laravel/bootstrap\nCOPY config /var/www/laravel/config\nCOPY database /var/www/laravel/database\nCOPY public /var/www/laravel/public\nCOPY resources /var/www/laravel/resources\nCOPY routes /var/www/laravel/routes\nCOPY server.php /var/www/laravel/server.php\nCOPY storage /var/www/laravel/storage\nRUN composer install --optimize-autoloader --no-dev\n\nRUN rm /etc/apache2/sites-enabled/*\nCOPY config/apache2 /etc/apache2/\nRUN sed -i 's/\\/var\\/www\\/.*\\/public/\\/var\\/www\\/laravel\\/public/g' /etc/apache2/sites-available/laravel.conf \\\n    && a2enmod rewrite headers \\\n    && a2ensite laravel\n\nCOPY . /var/www/laravel/\nRUN chown www-data:www-data bootstrap/cache \\\n    && chown -R www-data:www-data storage/\n\nCOPY docker/start.sh /usr/local/bin/start\nRUN chmod +x /usr/local/bin/start\nCMD [\"/usr/local/bin/start\"]\n"
}