{
  "startTime": 1674242277934,
  "endTime": 1674242278000,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "#####\n#\n# This is the Dockerfile for the CloudStream \"Firefox\" example.\n#\n# It installs the firefox browser, and the accompanying 'start.sh'\n# will launch it when the container starts.\n#\n# Copyright Unidata 2015 - 2016\n#####\n\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# The following variables must be left as they are for the system to work\n# properly, please do not change them. They are related to the underlying\n# Ubuntu linux image upon which `unidata/cloudstream` is based.\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n# Specify that this image inherits from the `unidata/cloudstream` image.\nFROM unidata/cloudstream\n\n# Tell Docker that we will be working as `root`.  Note that we can switch back to the\n# default user specified by `${CUSER}` where need be. This value is inherited from\n# `unidata/cloudstream`.\nUSER root\n\n# Tell the Ubuntu package manager that we are running in a non-interactive mode.\nENV DEBIAN_FRONTEND noninteractive\n\n# Update the package manager information and update any installed packages.\nRUN apt-get update && apt-get -y upgrade\n\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# End non-user-configurable options.\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n###############################################################################\n# Begin user-configurable options.\n###############################################################################\n\nMAINTAINER FirstName LastName <email.address@domain.name>\n\n####\n# APPLICATION_NAME - Name of the application.\n#\n# This name is used for the documentation and for convenience.  It does\n# not have to be congruent with the Docker image name.\n#\n# Syntax:\n#    ENV APPLICATION_NAME [application name]\n####\n\nENV APPLICATION_NAME ExampleFirefox\n\n####\n# APPLICATION_VERSION - Version of the application.\n#\n# If you intend to build a versioned docker image, you can set\n# this variable to the desired version.  When running your image,\n# you may then pass it a non-empty VERSION variable and the version\n# of both your application and the underlying unidata/cloudstream image will be printed.\n#\n# Syntax:\n#   ENV APPLICATION_VERSION [desired version]\n#\n####\n\nENV APPLICATION_VERSION DEMO1.0.0\n\n####\n# Package management\n#\n# unidata/cloudstream uses a Ubuntu-based environment.  Ubuntu linux uses the\n# `apt-get` tool for managing packages from the official repositories.  If\n# there are specific utilities or programs or libraries which must be installed\n# for your package to work, install them here\n#\n# Example:\n#    RUN apt-get install -y libcurl4-openssl-dev wget emacs git nano\n####\n\n# RUN apt-get install -y [space-delimited list of package names]\nRUN apt-get install --no-install-recommends -y firefox xdotool && rm -rf /var/lib/apt/lists/*;\n\n###\n# NOTE: If you intend to build your own application from source, you will\n# *at minimum* require the Ubuntu development tools as listed below.\n# You will also need to install any other libraries or utilities your program\n# will need to be compiled.\n###\n\n# RUN apt-get install -y ubuntu-dev-tools libtool autoconf automake\n\n####\n# Revert to non-root admin user.\n#\n# The unidata/cloudstream image provides a default non-root user (who has full\n# sudo privileges.  This useraccount is captured in the ${CUSER} environmental\n# variable. In order to preserve environmental variables, we need to\n# switch over to this user now.\n####\n\nUSER ${CUSER}\n\n####\n# Display Options\n#\n# CloudStream uses a VNC remote desktop server, coupled with the VNC/Websockets\n# interface `noVNC`, to provide visualization via a web browser.  When a\n# unidata/cloudstream-derived image runs, it uses the following default\n# environmental variables to define the screen properties:\n#\n# - SIZEW: Width of display, default 1024\n# - SIZEH: Height of display, default 768\n# - CDEPTH: Color depth of display, default 24\n#\n# These defaults may be overridden here.  They may also be modified at runtime by\n# passing these values as environmental variables at runtime.\n####\n\n# ENV SIZEW 1024\n# ENV SIZEH 768\n# ENV CDEPTH 24\n\n####\n# Custom Environmental Variables\n#\n# If your program or project depends on specific environmental variables,\n# you can set default values below, similar to how `SIZEW`, `SIZEH` and\n# `CDEPTH` are specified above.  These default values can be overridden\n# at runtime.\n#\n# Syntax:\n#    ENV [Variable Name] [Variable Value]\n####\n\n# ENV [Variable Name] [Variable Value]\n\n####\n# Custom Bash Init Script\n#\n# By default, unidata/cloudidv and derivatives run a script when the image is\n# invoked, `bootstrap.sh`.  `bootstrap.sh` is responsible for setting various\n# underlying environmental variables and running the VNC server.  It also\n# performs some actions depending on the environmental variables specified\n# at runtime.\n#\n# If the file `start.sh` exists in the Docker image, `bootstrap.sh` will run\n# this shell script once the environment has been configured.\n#\n# Example uses for `start.sh` include automatically running a specific program,\n# checking out a project from a subversion or git repository, or anything else\n# which can normally be achieved via a bash shell script.\n#\n# In order to work, `start.sh` must be copied to the default directory ${HOME},\n# which maps to /home/${CUSER}/.\n#\n# If no `start.sh` is present, your application will automatically run a\n# standard X11 desktop session using the `fluxbox` windows manager.\n####\n\n# COPY start.sh ${HOME}/\n\n####\n# Application README file\n#\n# When the \"HELP\" environment variable is non-empty at runtime, any\n# unidata/cloudstream derived image will print out the help file associated\n# with unidata/cloudstream.  If there exists one of the following files,\n# it will *also* be printed out:\n#\n# * README\n# * README.txt\n# * README.md\n#\n# This will allow you to add a help file or other documentation to your\n# Docker image.\n#\n# You would view this helpfile at runtime as follows:\n#\n#    $ docker run -it -e HELP=YES [docker image name]\n####\n\n# COPY README ${HOME}/\n# COPY README.txt ${HOME}/\n# COPY README.md ${HOME}/\n\n####\n# Advanced Docker Image customization\n#\n# The application streaming image can be highly customized using standard\n# Docker functionality.  The following space is a good place to add any custom\n# functionality which is not captured in this template.\n#\n# Examples of advanced usage include:\n#\n# * Compiling a program manually for use by the image.\n# * Manipulating the filesystem and/or filesystem contents.\n# * Checking the values of particular options and performing actions based on\n#   their value.\n# * Change the default window manager.\n# * Override other default properties of the `unidata/cloudstream` image.\n#\n# See the files in the `examples/` directory for more examples of advanced\n# usage.\n####\n\n\n\n###\n# Add the default Unidata bundle.\n###\nCOPY start.sh ${HOME}/\nCOPY Dockerfile.firefox ${HOME}/\nCOPY README.md ${HOME}/\n\n####\n# End Advanced Docker Image customization\n####\n\n###############################################################################\n# End user-configurable options.\n###############################################################################\n\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# Do not change anything below this line.\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n####\n# Append application name and version to the version file.\n#\n# This copies the application-specific name and version to the\n# cloudstream version file.  When queried, this allows Docker\n# to print out the version of your Docker image as well as the\n# version of the underlying unidata/cloudstream image.\n#\n# It is safe to leave it alone.\n####\n\nRUN echo \"${APPLICATION_NAME} Version: \\\"${APPLICATION_VERSION}\\\"\\t$(date)\" >> $VERSION_FILE\n\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# End File\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"
}