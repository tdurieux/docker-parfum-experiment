{
  "startTime": 1674250847370,
  "endTime": 1674250847700,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:29\n\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f /lib/systemd/system/multi-user.target.wants/*; \\\nrm -f /etc/systemd/system/*.wants/*; \\\nrm -f /lib/systemd/system/local-fs.target.wants/*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\nrm -f /lib/systemd/system/basic.target.wants/*; \\\nrm -f /lib/systemd/system/anaconda.target.wants/*;\n\nRUN dnf clean all && \\\n    dnf -y upgrade && \\\n    dnf -y --allowerasing install coreutils && \\\n    dnf -y --setopt=install_weak_deps=false install \\\n    acl \\\n    bzip2 \\\n    file \\\n    findutils \\\n    gcc \\\n    git \\\n    glibc-locale-source \\\n    iproute \\\n    libffi \\\n    libffi-devel \\\n    make \\\n    mariadb-server \\\n    openssh-clients \\\n    openssh-server \\\n    openssl-devel \\\n    pass \\\n    procps \\\n    python3-cryptography \\\n    python3-dbus \\\n    python3-devel \\\n    python3-dnf \\\n    python3-httplib2 \\\n    python3-jinja2 \\\n    python3-lxml \\\n    python3-mock \\\n    python3-mysql \\\n    python3-nose \\\n    python3-passlib \\\n    python3-pip \\\n    python3-PyYAML \\\n    python3-setuptools \\\n    python3-virtualenv \\\n    rpm-build \\\n    rubygems \\\n    sshpass \\\n    subversion \\\n    sudo \\\n    tar \\\n    unzip \\\n    which \\\n    zip \\\n    && \\\n    dnf clean all\n\nRUN localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8\nRUN /usr/bin/sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers\nRUN mkdir /etc/ansible/\nRUN /usr/bin/echo -e '[local]\\nlocalhost ansible_connection=local' > /etc/ansible/hosts\nVOLUME /sys/fs/cgroup /run /tmp\nRUN ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \\\n    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \\\n    ssh-keygen -m PEM -q -t rsa -N '' -f /root/.ssh/id_rsa && \\\n    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \\\n    for key in /etc/ssh/ssh_host_*_key.pub; do echo \"localhost $(cat ${key})\" >> /root/.ssh/known_hosts; done\nRUN pip3 install --no-cache-dir coverage junit-xml\nENV container=docker\nCMD [\"/usr/sbin/init\"]\n"
}