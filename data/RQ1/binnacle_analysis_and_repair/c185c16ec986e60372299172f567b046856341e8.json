{
  "startTime": 1674235789027,
  "endTime": 1674235789289,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 119
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nLABEL maintainer=\"James Z.M. Gao <gaozm55@gmail.com>\"\n\nENV OC_VERSION=8.02\n\nRUN set -ex \\\n# 1. install pptpclient\n    && echo '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n    && apk --update --no-progress upgrade \\\n    && apk add --no-progress ca-certificates pptpclient@testing \\\n# 2. build and install openconnect (ref: https://github.com/04n0/docker-openconnect-client)\n## 2.1 install runtime and build dependencies\n    && apk add --no-progress --virtual .openconnect-run-deps \\\n               gnutls gnutls-utils iptables libev libintl \\\n               libnl3 libseccomp linux-pam lz4-libs openssl \\\n               libxml2 nmap-ncat socat openssh-client \\\n    && apk add --no-progress --virtual .openconnect-build-deps \\\n               curl file g++ gnutls-dev gpgme gzip libev-dev \\\n               libnl3-dev libseccomp-dev libxml2-dev linux-headers \\\n               linux-pam-dev lz4-dev make readline-dev tar \\\n               sed readline procps \\\n## 2.2 download vpnc-script\n    && mkdir -p /etc/vpnc \\\n    && curl -f https://git.infradead.org/users/dwmw2/vpnc-scripts.git/blob_plain/HEAD:/vpnc-script -o /etc/vpnc/vpnc-script \\\n    && chmod 750 /etc/vpnc/vpnc-script \\\n## 2.3 create build dir, download, verify and decompress OC package to build dir\n    && gpg --batch --recv-key 0x63762cda67e2f359 \\\n    && mkdir -p /tmp/build/openconnect \\\n    && curl -f -SL \"ftp://ftp.infradead.org/pub/openconnect/openconnect-$OC_VERSION.tar.gz\" -o /tmp/openconnect.tar.gz \\\n    && curl -f -SL \"ftp://ftp.infradead.org/pub/openconnect/openconnect-$OC_VERSION.tar.gz.asc\" -o /tmp/openconnect.tar.gz.asc \\\n    && gpg --batch --verify /tmp/openconnect.tar.gz.asc \\\n    && tar -xf /tmp/openconnect.tar.gz -C /tmp/build/openconnect --strip-components=1 \\\n## 2.4 build and install\n    && cd /tmp/build/openconnect \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd / \\\n# 3. fix ip command location for the pptp client\n    && ln -s \"$(which ip)\" /usr/sbin/ip \\\n# 4. cleanup\n    && apk del .openconnect-build-deps \\\n    && rm -rf /var/cache/apk/* /tmp/* ~/.gnupg && rm /tmp/openconnect.tar.gz\n\nCOPY content /\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}