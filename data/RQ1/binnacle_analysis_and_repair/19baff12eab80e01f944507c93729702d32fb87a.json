{
  "startTime": 1674641741634,
  "endTime": 1674641741714,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mcr.microsoft.com/dotnet/core/sdk:2.2.203 AS build\nWORKDIR /app\n\n# replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# nvm environment variables\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 8.11.3\n\n# install nvm\n# https://github.com/creationix/nvm#install-script\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash\n\n# install node and npm\nRUN source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\n# add node and npm to path so the commands are available\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# confirm installation\nRUN node -v\nRUN npm -v\n\n# copy csproj and restore as distinct layers\nCOPY *.sln .\nCOPY Rnwood.Smtp4dev/*.csproj ./Rnwood.Smtp4dev/\nRUN dotnet restore Rnwood.Smtp4dev\n\nARG version\nENV VERSION $version\n\n# copy everything else and build app\nCOPY . .\nWORKDIR /app/Rnwood.Smtp4dev\nRUN dotnet build -p:Version=$VERSION\nRUN dotnet test -p:Version=$VERSION\n\nFROM build AS publish\nWORKDIR /app/Rnwood.Smtp4dev\nRUN dotnet publish -c Release -o out -p:Version=$VERSION\n\nFROM mcr.microsoft.com/dotnet/core/aspnet:2.2.4 AS runtime\nWORKDIR /app\nEXPOSE 80\nEXPOSE 25\nCOPY --from=publish /app/Rnwood.Smtp4dev/out ./\nENTRYPOINT [\"dotnet\", \"Rnwood.Smtp4dev.dll\"]"
}