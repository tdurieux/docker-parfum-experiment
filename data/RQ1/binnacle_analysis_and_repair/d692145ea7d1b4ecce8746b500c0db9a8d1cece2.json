{
  "startTime": 1674235050340,
  "endTime": 1674235050485,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\n\n# NodeJS's version is not pinned becuase nodesource only serve the latest\n# version.\nENV YARN_VERSION 1.15.2-1\nENV PYTHONUNBUFFERED 1\nENV BASE_DIR /usr/local\nENV APP_DIR $BASE_DIR/app\n\n# Install Node and Yarn from upstream\nRUN curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo 'deb http://deb.nodesource.com/node_8.x stretch main' | tee /etc/apt/sources.list.d/nodesource.list \\\n && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo 'deb http://dl.yarnpkg.com/debian/ stable main' | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y nodejs yarn=$YARN_VERSION \\\n && rm -rf /var/lib/apt/lists/*\nRUN adduser --system --disabled-login docker \\\n && mkdir -p \"$BASE_DIR\" \"$APP_DIR\" \"$APP_DIR/src/assets\" \"$APP_DIR/src/media\" \\\n && chown -R docker:nogroup \"$BASE_DIR\" \"$APP_DIR\"\n\nUSER docker\nWORKDIR $APP_DIR\n# Add bin directory used by `pip install --user`\nENV PATH \"/home/docker/.local/bin:${PATH}\"\n\n# Only copy and install requirements to improve caching between builds\n# Install Python dependencies\nCOPY --chown=docker:nogroup ./requirements $APP_DIR/requirements\nRUN pip3 install --no-cache-dir --user -r \"$APP_DIR/requirements/production.txt\" \\\n && rm -rf $HOME/.cache/pip/*\n# Install Javascript dependencies\nCOPY --chown=docker:nogroup ./package.json $APP_DIR/package.json\nCOPY --chown=docker:nogroup ./yarn.lock $APP_DIR/yarn.lock\nRUN yarn install --dev --frozen-lockfile \\\n && rm -rf $HOME/.cache/yarn/* && yarn cache clean;\n# Finally, copy all the project files along with source files\nCOPY --chown=docker:nogroup . $APP_DIR\n\nWORKDIR $APP_DIR/src\nVOLUME $APP_DIR/src/media\nEXPOSE 8000\nCMD [\"uwsgi\", \"--http-socket\", \":8000\", \"--master\", \\\n     \"--hook-master-start\", \"unix_signal:15 gracefully_kill_them_all\", \\\n     \"--static-map\", \"/static=assets\", \"--static-map\", \"/media=media\", \\\n     \"--mount\", \"/2019=pycontw2016/wsgi.py\", \"--manage-script-name\", \\\n     \"--offload-threads\", \"2\"]\n"
}