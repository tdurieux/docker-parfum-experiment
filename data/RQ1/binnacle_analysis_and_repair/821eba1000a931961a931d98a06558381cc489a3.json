{
  "startTime": 1674241081414,
  "endTime": 1674241081538,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7\n\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  # psycopg2 dependencies\n  #&& apt-get install build-deps gcc python2-dev musl-dev \\\n  #&& apt-get install postgresql-dev \\\n  # Pillow dependencies\n  #&& apt-get install jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev tcl-dev \\\n  # CFFI dependencies\n  #&& apt-get install libffi-dev py-cffi \\\n  # Translations dependencies\n  #&& apt-get install gettext \\\n  # https://docs.djangoproject.com/en/dev/ref/django-admin/#dbshell\n  postgresql-client \\\n  # for downloading dependencies from git\n  #&& apt-get install git \\\n  # xml parser\n  #&& apt-get install libxml2-dev libxslt-dev \\\n  # for numpy / scipy\n  #&& apt-get install openblas-dev gfortran g++ \\\n  # memcahced\n  libmemcached-dev && rm -rf /var/lib/apt/lists/*;\n  # for imagediet\n  #&& apt-get install libmagic\n\n# heroku cli\nRUN curl -f https://cli-assets.heroku.com/install.sh | sh\n\n# install NVM\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 5.6.0\n\nRUN mkdir $NVM_DIR\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \\\n    && . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./pip /pip\n# scikit learn errors if numpy is not previously installed\nRUN pip install --no-cache-dir numpy==1.9.1\nRUN pip install --no-cache-dir -r /pip/requirements.txt\nRUN pip install --no-cache-dir -r /pip/dev-requirements.txt\n\nCOPY ./compose/production/django/entrypoint /entrypoint\nRUN sed -i 's/\\r//' /entrypoint\nRUN chmod +x /entrypoint\n\nCOPY ./compose/local/django/start /start\nRUN sed -i 's/\\r//' /start\nRUN chmod +x /start\n\nCOPY ./compose/local/django/celery/worker/start /start-celeryworker\nRUN sed -i 's/\\r//' /start-celeryworker\nRUN chmod +x /start-celeryworker\n\nCOPY ./compose/local/django/celery/beat/start /start-celerybeat\nRUN sed -i 's/\\r//' /start-celerybeat\nRUN chmod +x /start-celerybeat\n\nWORKDIR /app\n\nENTRYPOINT [\"/entrypoint\"]\n"
}