{
  "startTime": 1674248530458,
  "endTime": 1674248530696,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nENV LANG C.UTF-8\nENV LANGUAGE C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n        cmake git build-essential curl \\\n        libyajl-dev \\\n    && curl -f -sL https://deb.nodesource.com/setup_9.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Google Test\nENV GTEST_ROOT=/opt/gtest\nARG GTEST_VER=release-1.8.1\nRUN mkdir -p ${GTEST_ROOT} \\\n    && cd /tmp \\\n    && curl -f -o gtest.tar.gz \\\n      -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n    && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n    && rm gtest.tar.gz\n\nARG PARALLEL=2\n# start build of kdb\nENV C_FLAGS=\"-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie\"\nWORKDIR /app/kdb\nADD . /app/kdb/\nRUN mkdir build \\\n    && cd build \\\n    && cmake -DENABLE_ASAN=ON -DBUILD_FULL=OFF -DBUILD_SHARED=ON \\\n             -DBUILD_STATIC=OFF -DBUILD_DOCUMENTATION=OFF \\\n             -DINSTALL_SYSTEM_FILES=OFF \\\n             -DPLUGINS=\"ALL;-EXPERIMENTAL;-fstab;-ruby;-lua;-python;-xerces;-yamlcpp;-python2;file;camel;yajl\" \\\n             -DTOOLS=\"kdb;rest-frontend\" \\\n             -DCMAKE_C_FLAGS=\"$C_FLAGS\" \\\n             -DCMAKE_CXX_FLAGS=\"$C_FLAGS\" \\\n             -DCMAKE_EXE_LINKER_FLAGS=\"-Wl,-z,now -Wl,-z,relro\" \\\n             .. \\\n    && make -j ${PARALLEL} \\\n    && ctest -T Test --output-on-failure -j ${PARALLEL} -LE kdbtests \\\n    && make install \\\n    && echo '/usr/local/lib/elektra/' > /etc/ld.so.conf.d/elektra.conf \\\n    && ldconfig\n\nARG BACKEND=https://restapi.libelektra.org/\nARG FRONTEND=https://libelektra.org/\nRUN kdb global-mount \\\n    && kdb mount-rest-frontend-config \\\n    && kdb set -N system /sw/elektra/restfrontend/#0/current/backend/root \"${BACKEND}\" \\\n    && kdb set -N system /sw/elektra/restfrontend/#0/current/website/url \"${URL}\" \\\n    && kdb build-rest-frontend\n\nFROM nginx:alpine\nCOPY --from=0 /usr/local/share/elektra/tool_data/rest-frontend/public \\\n              /usr/share/nginx/html\n"
}