{
  "startTime": 1674241315382,
  "endTime": 1674241315669,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/kwk/docker-registry-frontend\nFROM debian:jessie\n\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\ \n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\ \n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\nUSER root\n\n############################################################\n# Setup environment variables\n############################################################\n\nENV WWW_DIR /var/www/html\nENV SOURCE_DIR /tmp/source\nENV START_SCRIPT /root/start-apache.sh\n\nRUN mkdir -pv $WWW_DIR\n\n############################################################\n# Speedup DPKG and don't use cache for packages\n############################################################\n\n# Taken from here: https://gist.github.com/kwk/55bb5b6a4b7457bef38d\n#\n# this forces dpkg not to call sync() after package extraction and speeds up\n# install\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup\n# # we don't need and apt cache in a container\nRUN echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache\n\n############################################################\n\n# Create dirs\nRUN mkdir -p  $SOURCE_DIR/dist \\\n              $SOURCE_DIR/app \\\n              $SOURCE_DIR/test \\\n              $SOURCE_DIR/.git\n\n# Add dirs\nADD app $SOURCE_DIR/app\nADD test $SOURCE_DIR/test\n\n# Dot files\nADD .jshintrc $SOURCE_DIR/\nADD .bowerrc $SOURCE_DIR/\nADD .editorconfig $SOURCE_DIR/\nADD .travis.yml $SOURCE_DIR/\n\n# Other files\nADD bower.json $SOURCE_DIR/\nADD Gruntfile.js $SOURCE_DIR/\nADD LICENSE $SOURCE_DIR/\nADD package.json $SOURCE_DIR/\nADD README.md $SOURCE_DIR/\n\n# Add some git files for versioning\nADD .git/HEAD $SOURCE_DIR/.git/HEAD\nADD .git/refs $SOURCE_DIR/.git/refs\n\n############################################################\n# Install and configure webserver software\n############################################################\n\nRUN apt-get -y update && \\\n    export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get -y install \\\n      apache2 \\\n      bzip2 \\\n      libapache2-mod-auth-kerb \\\n      libapache2-mod-proxy-html \\\n      git \\\n      nodejs \\\n      nodejs-legacy \\\n      npm \\\n      --no-install-recommends && \\\n    a2enmod proxy && \\\n    a2enmod proxy_http && \\\n    cd $SOURCE_DIR && \\\n    export GITREF=$(cat .git/HEAD | cut -d\" \" -f2) && \\\n    export GITSHA1=$(cat .git/$GITREF) && \\\n    echo \"{\\\"git\\\": {\\\"sha1\\\": \\\"$GITSHA1\\\", \\\"ref\\\": \\\"$GITREF\\\"}}\" > $WWW_DIR/app-version.json && \\\n    cd $SOURCE_DIR && \\\n    rm -rf $SOURCE_DIR/.git && \\\n    git config --global url.\"https://\".insteadOf git:// && \\\n    cd $SOURCE_DIR && \\\n    npm install && \\\n    node_modules/bower/bin/bower install --allow-root && \\\n    node_modules/grunt-cli/bin/grunt build --allow-root && \\\n    cp -rf $SOURCE_DIR/dist/* $WWW_DIR && \\\n    rm -rf $SOURCE_DIR && \\\n    apt-get -y --auto-remove purge git nodejs nodejs-legacy npm bzip2 && \\\n    apt-get -y autoremove && \\\n    apt-get -y clean && \\\n    rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\n############################################################\n# Add and enable the apache site and disable all other sites\n############################################################\n\nRUN a2dissite 000*\nADD apache-site.conf /etc/apache2/sites-available/docker-site.conf\nRUN a2ensite docker-site.conf\n\nADD start-apache.sh $START_SCRIPT\nRUN chmod +x $START_SCRIPT\n\nENV APACHE_RUN_USER www-data\nENV APACHE_RUN_GROUP www-data\nENV APACHE_LOG_DIR /var/log/apache2\n\n# Let people know how this was built\nADD Dockerfile /root/Dockerfile\n\n# Exposed ports\nEXPOSE 80 443\n\nVOLUME [\"/etc/apache2/server.crt\", \"/etc/apache2/server.key\"]\n\nCMD $START_SCRIPT\n"
}