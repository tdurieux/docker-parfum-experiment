{
  "startTime": 1674245701023,
  "endTime": 1674245701161,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 6,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nLABEL version=\"1.0\"\nLABEL maintainer=\"shindu666@gmail.com\"\n\nRUN apt-get -y update \\\n && apt-get install --no-install-recommends -y git curl wget libpng-dev libtool libgif-dev autoconf automake make gcc g++ && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -O https://storage.googleapis.com/golang/go1.11.1.linux-amd64.tar.gz \\\n  && tar xvf go1.11.1.linux-amd64.tar.gz && rm go1.11.1.linux-amd64.tar.gz\n\nENV PATH $PATH:/go/bin\n\nWORKDIR /usr/local/webp\nRUN wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.0.0.tar.gz \\\n      && tar -xvzf libwebp-1.0.0.tar.gz \\\n      && mv libwebp-1.0.0 libwebp && \\\n      rm libwebp-1.0.0.tar.gz && \\\n      cd libwebp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-everything && \\\n      make && \\\n      make install && \\\n      cd .. && \\\n      rm -rf libwebp\n\nENV PATH $PATH:/usr/local/webp/libwebp-0.5.0-linux-x86-64/bin\n\nRUN ldconfig\n\nRUN mkdir -p /examples\n\nCOPY test_images/* /examples/\n\nRUN mkdir -p /gif2web_api\n\nEXPOSE 8080 8080\n\nCOPY go.mod /gif2web_api\nCOPY main.go /gif2web_api\nWORKDIR /gif2web_api\n\nCMD [\"go\", \"run\", \"main.go\"]\n"
}