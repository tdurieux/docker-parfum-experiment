{
  "startTime": 1674249826695,
  "endTime": 1674249826918,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Contributed by: James E. King III (@jeking3) <jking@apache.org>\n#\n# This Dockerfile creates an Ubuntu Xenial build environment\n# that can run the same test suite as Travis CI.\n#\n\nFROM ubuntu:xenial\nMAINTAINER James E. King III <jking@apache.org>\nENV CONTAINER_USER=user\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      add-apt-key \\\n      apt \\\n      apt-transport-https \\\n      apt-utils \\\n      ca-certificates \\\n      curl \\\n      git \\\n      net-tools \\\n      openssh-client \\\n      sudo \\\n      vim \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-key -v 6A755776 -k keyserver.ubuntu.com && \\\n    add-apt-key -v E1DF1F24 -k keyserver.ubuntu.com && \\\n    echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu xenial main\" >> /etc/apt/sources.list && \\\n    echo \"deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu xenial main\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y --install-recommends git python2.7 python3.4 python3.5 python3.6 python3.7 && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python2.7 27 && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.4 34 && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 35 && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 36 && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 37 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \\\n    python3 get-pip.py && \\\n    pip3 install --no-cache-dir tox\n\n# Clean up\nRUN rm -rf /var/cache/apt/* && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/tmp/*\n\n#################################################################\n# Build as a regular user\n# Credit: https://github.com/delcypher/docker-ubuntu-cxx-dev/blob/master/Dockerfile\n# License: None specified at time of import\n# Add non-root user for container but give it sudo access.\n# Password is the same as the username\nRUN useradd -m ${CONTAINER_USER} && \\\n    echo ${CONTAINER_USER}:${CONTAINER_USER} | chpasswd && \\\n    echo \"${CONTAINER_USER}  ALL=(root) ALL\" >> /etc/sudoers\nRUN chsh --shell /bin/bash ${CONTAINER_USER}\nUSER ${CONTAINER_USER}\n#################################################################\n\n# The test suite will not tolerate running against a branch that isn't \"master\", so\n# check out the project to a well-known location that can be used by the test suite.\n# This has the added benefit of protecting the local repo fed into the container\n# as a volume from getting destroyed by a bug exposed by the test suite. :)\nENV TRAVIS=ON\nRUN git clone --recursive https://github.com/gitpython-developers/GitPython.git /home/${CONTAINER_USER}/testrepo && \\\n    cd /home/${CONTAINER_USER}/testrepo && \\\n    ./init-tests-after-clone.sh\nENV GIT_PYTHON_TEST_GIT_REPO_BASE=/home/${CONTAINER_USER}/testrepo\nENV TRAVIS=\n\n# Ensure any local pip installations get on the path\nENV PATH=/home/${CONTAINER_USER}/.local/bin:${PATH}\n\n# Set the global default git user to be someone non-descript\nRUN git config --global user.email ci@gitpython.org && \\\n    git config --global user.name \"GitPython CI User\"\n\n"
}