{
  "startTime": 1674245560811,
  "endTime": 1674245561008,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 8,
        "columnEnd": 95
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-alpine3.6 as BUILDER\n\nENV TAIGA_VERSION 3.3.7\n\nRUN apk update \\\n    && apk add --no-cache --virtual build-dependencies \\\n\n    gcc musl-dev libressl-dev \\\n\n    postgresql-dev \\\n\n    freetype-dev jpeg-dev libwebp-dev tiff-dev libpng-dev lcms2-dev \\\n    openjpeg-dev zlib-dev libxslt-dev libxml2-dev libffi-dev \\\n\n    git\n\nWORKDIR /taiga_backend\n\nADD https://github.com/taigaio/taiga-back/archive/${TAIGA_VERSION}.tar.gz ./\n    RUN tar -xzf ${TAIGA_VERSION}.tar.gz -C ./ taiga-back-${TAIGA_VERSION} --strip-components=1 && rm ${TAIGA_VERSION}.tar.gz\nRUN rm ${TAIGA_VERSION}.tar.gz\n\n# Don't want pip to use git, so I'm replacing with pypi. \nRUN sed -i 's,git+https://github.com/Xof/django-pglocks.git,django-pglocks==1.0.2,g' requirements.txt\n\n# local.py and checkdb.py and celery\n# using gevent to run taiga gunicorn (workers)\n# using gevent on celery (workers)\nRUN echo \"django-environ==0.4.0\" >> requirements.txt\nRUN echo \"gevent==1.1.2\" >> requirements.txt\nRUN echo \"django-anymail==0.5\" >> requirements.txt\n\nRUN pip wheel --wheel-dir=./taiga_python_dependencies -r requirements.txt\n\n\n# FINAL IMAGE\nFROM python:3.6-alpine3.6\n\nLABEL maintainer=\"douglasmirandasilva@gmail.com\"\nLABEL taiga_version=\"tag:3.3.7\"\n\nWORKDIR /taiga_backend\n\nCOPY --from=BUILDER /taiga_backend ./\n\nRUN apk add --no-cache \\\n    # Pillow / PIL\n    freetype jpeg libwebp tiff libpng lcms2 openjpeg zlib libxslt libxml2 libffi \\\n    # Postgres python client\n    libpq \\\n    # Needed for localization stuff: python manage.py compilemessages\n    gettext \\\n    # Other tools\n    git\n\nRUN pip install --no-cache-dir --no-index --find-links=taiga_python_dependencies -r requirements.txt \\\n    && rm -R ./taiga_python_dependencies \\\n    && python manage.py compilemessages\n\nCOPY local.py settings/local.py\nCOPY celery_local.py settings/celery_local.py\nCOPY scripts/ /scripts/\n\nRUN mkdir /taiga_backend/media && mkdir /taiga_backend/static-root \\\n    && addgroup -S taiga && adduser -S -G taiga taiga \\\n    && chown -R taiga ./ \\\n    && chown -R taiga /scripts/ \\\n    && chmod +x /scripts/entrypoint.sh\n\nUSER taiga\n"
}