{
  "startTime": 1674250020147,
  "endTime": 1674250020277,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      apt-utils autoconf bison build-essential flex gawk gdb-multiarch git gperf help2man \\\n      libexpat-dev libncurses5-dev libtool-bin \\\n      python python-dev python-git python-pyelftools python-serial python-six python-yaml \\\n      python3 python3-dev python3-git python3-pyelftools python3-serial python3-six python3-yaml \\\n      software-properties-common texinfo unzip wget zip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      clang libcap-dev valgrind && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -d /opt -m -s /bin/bash user && chown -R user /opt\n\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nARG DOCKER_TAG\nENV MGOS_SDK_REVISION $DOCKER_TAG\nENV MGOS_SDK_BUILD_IMAGE docker.io/mgos/ubuntu-build:$DOCKER_TAG\n"
}