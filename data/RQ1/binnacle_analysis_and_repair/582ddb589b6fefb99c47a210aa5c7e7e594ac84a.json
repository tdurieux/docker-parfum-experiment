{
  "startTime": 1674236400259,
  "endTime": 1674236400686,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM ubuntu:16.04\n\n################## METADATA ######################\n\nLABEL base_image=\"ubuntu:16.04\"\nLABEL version=\"5\"\nLABEL software=\"biocontainers\"\nLABEL software.version=\"1.0.0\"\nLABEL about.summary=\"Base image for BioDocker\"\nLABEL about.home=\"http://biocontainers.pro\"\nLABEL about.documentation=\"https://github.com/BioContainers/specs/wiki\"\nLABEL about.license_file=\"https://github.com/BioContainers/containers/blob/master/LICENSE\"\nLABEL about.license=\"SPDX:Apache-2.0\"\nLABEL about.tags=\"Genomics,Proteomics,Transcriptomics,General,Metabolomics\"\n\n################## MAINTAINER ######################\nMAINTAINER Felipe da Veiga Leprevost <felipe@leprevost.com.br>\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN mv /etc/apt/sources.list /etc/apt/sources.list.bkp && \\\n    bash -c 'echo -e \"deb mirror://mirrors.ubuntu.com/mirrors.txt xenial main restricted universe multiverse\\n\\\ndeb mirror://mirrors.ubuntu.com/mirrors.txt xenial-updates main restricted universe multiverse\\n\\\ndeb mirror://mirrors.ubuntu.com/mirrors.txt xenial-backports main restricted universe multiverse\\n\\\ndeb mirror://mirrors.ubuntu.com/mirrors.txt xenial-security main restricted universe multiverse\\n\\n\" > /etc/apt/sources.list' && \\\n    cat /etc/apt/sources.list.bkp >> /etc/apt/sources.list && \\\n    cat /etc/apt/sources.list\n\nRUN apt-get clean all && \\\n    apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        autotools-dev \\\n        automake \\\n        cmake \\\n        curl \\\n        grep \\\n        sed \\\n        dpkg \\\n        fuse \\\n        git \\\n        wget \\\n        zip \\\n        openjdk-8-jre \\\n        build-essential \\\n        pkg-config \\\n        python \\\n\tpython-dev \\\n        python-pip \\\n        bzip2 \\\n        ca-certificates \\\n        libglib2.0-0 \\\n        libxext6 \\\n        libsm6 \\\n        libxrender1 \\\n        mercurial \\\n        subversion \\\n        zlib1g-dev && \\\n        apt-get clean && \\\n        apt-get purge && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.0.5-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh\n\nRUN TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n    curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n    dpkg -i tini.deb && \\\n    rm tini.deb && \\\n    apt-get clean\n\nRUN mkdir /data /config\n\n# Add user biodocker with password biodocker\nRUN groupadd fuse && \\\n    useradd --create-home --shell /bin/bash --user-group --uid 1000 --groups sudo,fuse biodocker && \\\n    echo `echo \"biodocker\\nbiodocker\\n\" | passwd biodocker` && \\\n    chown biodocker:biodocker /data && \\\n    chown biodocker:biodocker /config\n\n# give write permissions to conda folder\nRUN chmod 777 -R /opt/conda/\n\n# Change user\nUSER biodocker\n\nENV PATH=$PATH:/opt/conda/bin\nENV PATH=$PATH:/home/biodocker/bin\nENV HOME=/home/biodocker\n\nRUN mkdir /home/biodocker/bin\n\nRUN conda config --add channels r\nRUN conda config --add channels bioconda\n\nRUN conda upgrade conda\n\nVOLUME [\"/data\", \"/config\"]\n\n# Overwrite this with 'CMD []' in a dependent Dockerfile\n# CMD [\"/bin/bash\"]\n\nWORKDIR /data\n"
}