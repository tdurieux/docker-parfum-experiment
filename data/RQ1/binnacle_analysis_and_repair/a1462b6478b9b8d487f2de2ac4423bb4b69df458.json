{
  "startTime": 1674244313976,
  "endTime": 1674244314080,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\nFROM node:5.5\n\nUSER root\n\n# Install Xvfb and its dependencies needed to run Electron (Nightmare tests)\nRUN apt-get update && \\\n    apt-get -qq --no-install-recommends install -y \\\n    libgtk2.0-0 \\\n    libgconf-2-4 \\\n    libasound2 \\\n    libxtst6 \\\n    libxss1 \\\n    libnss3 \\\n    libnotify-dev \\\n    libnotify4 \\\n    libgconf2-4 \\\n    dbus-x11 \\\n    xvfb && rm -rf /var/lib/apt/lists/*;\n\n# for debugging purposes, setup node-inspector\nRUN npm install -g node-inspector && npm cache clean --force;\n# add an unprivileged node user\nRUN useradd -ms /bin/bash node\n\nUSER node\nRUN mkdir -p /home/node/app/ext\n\nWORKDIR /home/node/app\n\n# npm install separately, so it is properly cached by docker and not affected by\n# changes in rest of source\nADD package.json package.json\nRUN npm install --quiet && npm cache clean --force;\n\n# add everything else\nUSER root\nADD . /home/node/app\nRUN chown node:node /home/node/app && \\\n    chown -R node:node /home/node/app/data && \\\n    chown -R node:node /home/node/app/public\nUSER node\n\n# build our node app\nRUN npm run build\n\n# always expose server on all interfaces in a container\nENV IP 0.0.0.0\n\n# expose the default express http/https port (3000/3001) and the node debugger port (8080)\nEXPOSE 3000 3001 8080\n\n# default to running npm and the commands in package.json\nENTRYPOINT [\"npm\", \"run\"]\nCMD [\"start\"]\n"
}