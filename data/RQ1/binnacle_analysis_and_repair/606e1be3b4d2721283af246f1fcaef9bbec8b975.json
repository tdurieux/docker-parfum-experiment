{
  "startTime": 1674240503975,
  "endTime": 1674240504105,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image.\nFROM ruby:2.4.1-slim-stretch\n\nRUN apt update && apt -y --no-install-recommends install \\\n  git \\\n  curl \\\n  fontconfig \\\n  build-essential \\\n  patch \\\n  ruby-dev \\\n  zlib1g-dev \\\n  liblzma-dev \\\n  && rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/*;\n\n# Install phantomjs\nRUN cd /usr/local/share \\\n  && curl -f -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 | tar xj \\\n  && ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/share/phantomjs \\\n  && ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs \\\n  && ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs \\\n  && phantomjs --version\n\n\n# Install gems with native extensions before running bundle install\n# This avoids recompiling them everytime the Gemfile.lock changes.\n# The versions need to be kept in sync with the Gemfile.lock\nRUN  gem install nokogiri -v 1.8.0 \\\n  && gem install websocket-driver -v 0.6.5 \\\n  && gem sources -c \\\n  && rm -f /usr/local/bundle/cache/*\n\nRUN mkdir -p /app\n\nWORKDIR /app\n\nCOPY Gemfile /app/Gemfile\nCOPY Gemfile.lock /app/Gemfile.lock\n\nRUN bundle install --without default test development production doc --standalone integration_test api_client\n\nRUN rm -rf /app/Gemfile*\n"
}