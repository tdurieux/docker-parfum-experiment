{
  "startTime": 1674252771780,
  "endTime": 1674252772513,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 220
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 220
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 5,
        "columnEnd": 147
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 21,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 23,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 21,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Image: pubnative/zeppelin\n\nFROM debian:stretch\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y locales \\\n  && dpkg-reconfigure -f noninteractive locales \\\n  && locale-gen C.UTF-8 \\\n  && /usr/sbin/update-locale LANG=C.UTF-8 \\\n  && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n  && locale-gen \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Users with other locales should set this in their derivative image\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y curl unzip \\\n    python3 python3-setuptools \\\n  && ln -s /usr/bin/python3 /usr/bin/python \\\n  && easy_install3 pip py4j \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# http://blog.stuart.axelbrooke.com/python-3-on-spark-return-of-the-pythonhashseed\nENV PYTHONHASHSEED 0\nENV PYTHONIOENCODING UTF-8\nENV PIP_DISABLE_PIP_VERSION_CHECK 1\n\n# JAVA\nARG JAVA_MAJOR_VERSION=8\nARG JAVA_UPDATE_VERSION=181\nARG JAVA_BUILD_NUMBER=13\nENV JAVA_HOME /usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}\n\nENV PATH $PATH:$JAVA_HOME/bin\nRUN curl -f -sL --retry 3 --insecure \\\n  --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n  \"https://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-b${JAVA_BUILD_NUMBER}/96a7b8442fe848ef90c96a2fad6ed6d1/server-jre-${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-linux-x64.tar.gz\" \\\n  | gunzip \\\n  | tar x -C /usr/ \\\n  && ln -s $JAVA_HOME /usr/java \\\n  && rm -rf $JAVA_HOME/man\n\n# HADOOP\nENV HADOOP_VERSION 2.7.3\nENV HADOOP_HOME /usr/hadoop-$HADOOP_VERSION\nENV HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nENV PATH $PATH:$HADOOP_HOME/bin\nRUN curl -f -sL --retry 3 \\\n  \"https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\" \\\n  | gunzip \\\n  | tar -x -C /usr/ \\\n  && rm -rf $HADOOP_HOME/share/doc \\\n  && chown -R root:root $HADOOP_HOME\n\n# SPARK\nENV SPARK_VERSION 2.3.1\nENV SPARK_PACKAGE spark-${SPARK_VERSION}-bin-without-hadoop\nENV SPARK_HOME /usr/spark-${SPARK_VERSION}\nENV SPARK_DIST_CLASSPATH=\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\"\nENV PATH $PATH:${SPARK_HOME}/bin\nRUN curl -f -sL --retry 3 \\\n  \"https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\" \\\n  | gunzip \\\n  | tar x -C /usr/ \\\n  && mv /usr/$SPARK_PACKAGE $SPARK_HOME \\\n  && chown -R root:root $SPARK_HOME\n\nWORKDIR $SPARK_HOME\nCMD [\"bin/spark-class\", \"org.apache.spark.deploy.master.Master\"]\n\n# Python packages\nRUN set -ex \\\n  && buildDeps=' \\\n    libpython3-dev \\\n    build-essential \\\n    pkg-config \\\n    gfortran \\\n  ' \\\n  && apt-get update && apt-get install -y --no-install-recommends \\\n    $buildDeps \\\n    ca-certificates \\\n    wget \\\n    libblas-dev \\\n    libatlas-dev \\\n    liblapack-dev \\\n    libopenblas-dev \\\n    libpng-dev \\\n    libfreetype6-dev \\\n    libxft-dev \\\n    python3-tk \\\n    libxml2-dev \\\n    libxslt-dev \\\n    zlib1g-dev \\\n  && packages=' \\\n    numpy \\\n    pandasql \\\n    matplotlib \\\n    scipy \\\n  ' \\\n  && pip3 install --no-cache-dir $packages \\\n  && rm -rf /root/.cache/pip \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# R and its packages\nRUN set -ex \\\n  && rDeps=' \\\n    r-base \\\n    r-base-dev \\\n    r-cran-evaluate \\\n  ' \\\n  && apt-get update && apt-get install -y --no-install-recommends $rDeps \\\n  && apt-get -y --no-install-recommends install r-base r-base-dev \\\n  && R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\" \\\n  && R -e \"install.packages('ggplot2', repos='http://cran.us.r-project.org')\" \\\n  && R -e \"install.packages('googleVis', repos='http://cran.us.r-project.org')\" \\\n  && R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\" \\\n  && apt-get -y --no-install-recommends install libcurl4-gnutls-dev libssl-dev \\\n  && R -e \"install.packages('devtools', repos='http://cran.us.r-project.org')\" \\\n  && R -e \"install.packages('Rcpp', repos='http://cran.us.r-project.org')\" \\\n  && Rscript -e \"library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')\" \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Zeppelin\nENV ZEPPELIN_PORT 8080\nENV ZEPPELIN_HOME /usr/zeppelin\nENV ZEPPELIN_CONF_DIR $ZEPPELIN_HOME/conf\nENV ZEPPELIN_NOTEBOOK_DIR $ZEPPELIN_HOME/notebook\nENV Z_VERSION 0.8.0\nRUN echo '{ \"allow_root\": true }' > /root/.bowerrc\nRUN apt-get update && apt-get install -y --no-install-recommends gnupg \\\n  && curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && rm -rf /var/lib/apt/lists/*;\nRUN set -ex \\\n  && additionalDeps=' \\\n    git \\\n    bzip2 \\\n    nodejs \\\n    npm \\\n    libfontconfig \\\n ' \\\n  && apt-get update && apt-get install -y --no-install-recommends $additionalDeps \\\n  && wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz https://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz \\\n  && tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n  && rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz \\\n  && mv ./zeppelin-${Z_VERSION}-bin-all ${ZEPPELIN_HOME} && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p $ZEPPELIN_HOME/run\n\n# Mesos\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list\nRUN apt -q update && apt install --no-install-recommends -y libssl1.0.0 && rm -rf /var/lib/apt/lists/*;\nRUN echo 'deb http://repos.mesosphere.com/ubuntu xenial main' >> /etc/apt/sources.list.d/mesosphere.list\nRUN apt-get install -y --no-install-recommends dirmngr && apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF \\\n  && apt-get -y update \\\n  && apt-get -y --no-install-recommends install mesos=1.3.0-2.0.3 \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR $ZEPPELIN_HOME\nCMD [\"bin/zeppelin.sh\"]\n"
}