{
  "startTime": 1674252397887,
  "endTime": 1674252398114,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 183
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 192
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------------------------------------------------------------------------\n# First stage: compiling Exekube CLI\n# ------------------------------------------------------------------------------\nFROM golang:1.9-alpine AS builder\n\nRUN apk add --no-cache \\\n        git\n\nENV GOPATH /build\nWORKDIR /build\n\nRUN go get \\\n        github.com/urfave/cli \\\n        github.com/sirupsen/logrus\n\nADD ./cli ./src/github.com/exekube/exekube/cli\n\nRUN go build -o ./bin/xk github.com/exekube/exekube/cli\n\n# ------------------------------------------------------------------------------\n# Second stage: getting all runtime deps\n# ------------------------------------------------------------------------------\nFROM alpine:3.7\n\nENV AWS_CLI_VERSION 1.15.41\nENV S3CMD_VERSION 2.0.1\nENV HEPTIO_AUTHENTICATOR_AWS_VERSION 0.3.0\nENV KUBECTL_VERSION 1.10.5\nENV HELM_VERSION 2.9.1\nENV TERRAFORM_VERSION 0.11.7\nENV TERRAGRUNT_VERSION 0.14.10\nENV TERRAFORM_PROVIDER_HELM_VERSION 0.6.0\n\nRUN apk --no-cache add \\\n        curl \\\n        python \\\n        py-crcmod \\\n        py-pip \\\n        bash \\\n        libc6-compat \\\n        openssh-client \\\n        git \\\n        openssl \\\n        tar \\\n        ca-certificates \\\n        apache2-utils \\\n        tzdata \\\n        jq\n\nRUN pip install --no-cache-dir --upgrade \\\n        awscli==${AWS_CLI_VERSION} \\\n        s3cmd==${S3CMD_VERSION} \\\n        python-magic\n\nRUN curl -f -L -o kubectl \\\n        https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n        && chmod 0700 kubectl \\\n        && mv kubectl /usr/bin\n\nRUN curl -f -L -o heptio-authenticator-aws \\\n        https://github.com/heptio/aws-iam-authenticator/releases/download/v${HEPTIO_AUTHENTICATOR_AWS_VERSION}/heptio-authenticator-aws_${HEPTIO_AUTHENTICATOR_AWS_VERSION}_linux_amd64 \\\n        && chmod 0700 heptio-authenticator-aws \\\n        && mv heptio-authenticator-aws /usr/bin\n\nRUN curl -f -L -o helm.tar.gz \\\n        https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n        && tar -xvzf helm.tar.gz \\\n        && rm -rf helm.tar.gz \\\n        && chmod 0700 linux-amd64/helm \\\n        && mv linux-amd64/helm /usr/bin\n\nRUN curl -f -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n        && unzip terraform.zip \\\n        && mv terraform /usr/bin \\\n        && rm -rf terraform.zip\n\nRUN curl -f -L -o ./terragrunt \\\n        https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 \\\n        && chmod 0700 terragrunt \\\n        && mv terragrunt /usr/bin\n\nRUN curl -f -L -o ./tph.tar.gz \\\n        https://github.com/mcuadros/terraform-provider-helm/releases/download/v${TERRAFORM_PROVIDER_HELM_VERSION}/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n        && tar -xvzf tph.tar.gz \\\n        && rm -rf tph.tar.gz \\\n        && cd terraform-provider-helm_linux_amd64 \\\n        && mv terraform-provider-helm terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && mkdir -p /root/.terraform.d/plugins/ \\\n        && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} /root/.terraform.d/plugins/\n\nCOPY modules /exekube-modules/\nCOPY --from=builder /build/bin/xk /usr/local/bin/\nENV PATH /exekube-modules/gcp-project-init:/exekube-modules/gcp-secret-mgmt/scripts:$PATH\n\nENTRYPOINT [\"/usr/local/bin/xk\"]\n"
}