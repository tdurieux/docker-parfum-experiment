{
  "startTime": 1674235043602,
  "endTime": 1674235043909,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 149
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:7.5-cudnn4-devel\n\n# Add Tini so signals are forwarded properly (like ctrl+c)\nENV TINI_VERSION v0.10.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\n# Build dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y wget git mercurial libgoogle-perftools-dev libsparsehash-dev libboost-all-dev autoconf libtool openjdk-7-jdk && rm -rf /var/lib/apt/lists/*;\n\n# CMake 3.6.2 (version that ships with Ubuntu 14.04 doesn't fully support CUDA)\nRUN cd /opt && \\\n        wget \"https://cmake.org/files/v3.6/cmake-3.6.2.tar.gz\" && \\\n        tar xf cmake-3.6.2.tar.gz && \\\n        cd cmake-3.6.2 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n        make -j16 install && rm cmake-3.6.2.tar.gz\n\n# fast_align\nENV FAST_ALIGN_VERSION 7c2bbca3d5d61ba4b0f634f098c4fcf63c1373e1\nRUN cd /opt && \\\n        git clone https://github.com/clab/fast_align.git && \\\n        cd fast_align && \\\n        git checkout ${FAST_ALIGN_VERSION} && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j16\nRUN cd /opt/fast_align/build && \\\n        cp atools fast_align force_align.py /usr/local/bin\n\n# Eigen, update version as needed\nENV EIGEN_VERSION b541d80aa4fd\nRUN cd /opt && \\\n        hg clone https://bitbucket.org/eigen/eigen/ && \\\n        cd eigen && \\\n        hg update -r ${EIGEN_VERSION}\n\n# DyNet 2.0.1, update version as needed\nENV DYNET_VERSION 87df34103625102493f8c660684146a636e2482c\nRUN cd /opt && \\\n        git clone https://github.com/clab/dynet.git && \\\n        cd dynet && \\\n        git checkout ${DYNET_VERSION} && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. -DEIGEN3_INCLUDE_DIR=/opt/eigen -DBACKEND=cuda && \\\n        make -j16 install\n"
}