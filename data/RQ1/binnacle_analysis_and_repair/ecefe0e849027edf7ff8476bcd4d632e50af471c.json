{
  "startTime": 1674237089954,
  "endTime": 1674237090090,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lablup/kernel-python:3.6-alpine\n\nRUN apk add --no-cache --virtual=.build-deps \\\n        bash \\\n        cmake \\\n        curl \\\n        freetype-dev \\\n        g++ \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        linux-headers \\\n        make \\\n        musl-dev \\\n        openblas-dev \\\n        openjdk8 \\\n        patch \\\n        perl \\\n        rsync \\\n        sed \\\n        swig \\\n        git \\\n        zip\n\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV BAZEL_VERSION 0.7.0\n\nRUN : install Bazel to build TensorFlow \\\n    && curl -f -SLO https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n    && mkdir bazel-${BAZEL_VERSION} \\\n    && unzip -qd bazel-${BAZEL_VERSION} bazel-${BAZEL_VERSION}-dist.zip \\\n    && cd bazel-${BAZEL_VERSION} \\\n    && : add -fpermissive compiler option to avoid compilation failure \\\n    && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n    && : add '#include <sys/stat.h>' to avoid mode_t type error \\\n    && sed -i -e '/#endif  \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n    && bash compile.sh \\\n    && cp -p output/bazel /usr/local/bin/\n\nRUN ls -l /usr/local/bin/bazel*\n\n# vim: ft=dockerfile\n"
}