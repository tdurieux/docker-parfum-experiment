{
  "startTime": 1674247931759,
  "endTime": 1674247931852,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\n# Install basic environment dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --verbose\nENV PATH=/root/.cargo/bin:$PATH\nRUN rustc -vV && cargo -V\n\n# Install common witnet-rust dependencies\nRUN apt-get install -y --no-install-recommends \\\n    clang \\\n    libssl-dev \\\n    protobuf-compiler \\\n    librocksdb-dev && rm -rf /var/lib/apt/lists/*;\n\n# Clean up apt packages so the docker image is as compact as possible\nRUN apt-get clean && apt-get autoremove\n\n# Set needed environment variables\nENV RUST_BACKTRACE=1 \\\n    ROCKSDB_LIB_DIR=/usr/lib/\n\n# Get source from context and cd into it\nRUN mkdir /source/\nCOPY / /source/\nWORKDIR /source/\n\n# Expose server ports\nEXPOSE 21337\nEXPOSE 21338\nEXPOSE 11212\n\n# Set compilation entry point (always gets executed)\nENTRYPOINT [\"cargo\"]\n\n# Set default command (can be overriden)\nCMD [\"run\", \"--release\", \"node\"]\n"
}