{
  "startTime": 1674239840563,
  "endTime": 1674239840740,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9.2.0\n\nMAINTAINER aokad <aokad@hgc.jp>\n\nRUN curl -f -kL https://bootstrap.pypa.io/get-pip.py | python && \\\n    pip install --no-cache-dir coverage && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y wget unzip && \\\n\n    echo \"#!/bin/bash\"                                                                                                > /run.sh && \\\n    echo \"cd /work/\"                                                                                                 >> /run.sh && \\\n\n    echo \"python setup.py build install\"                                                                             >> /run.sh && \\\n\n    echo \"mkdir -p /home/travis/build/Genomon-Project/paplot/tests/dataset\"                                          >> /run.sh && \\\n    echo \"mkdir -p /home/travis/build/Genomon-Project/paplot/tests/example\"                                          >> /run.sh && \\\n    echo \"cp -r /work/tests/dataset/mutation/ /home/travis/build/Genomon-Project/paplot/tests/dataset/\"              >> /run.sh && \\\n    echo \"cp -r /work/tests/example/mutation_subplot/ /home/travis/build/Genomon-Project/paplot/tests/example/\"      >> /run.sh && \\\n\n    echo \"coverage run --source=./scripts setup.py test\"                                                             >> /run.sh && \\\n    echo \"coverage xml\"                                                                                              >> /run.sh && \\\n    echo \"coverage report\"                                                                                           >> /run.sh && \\\n    echo \"bash tests/build_example.sh\"                                                                               >> /run.sh && \\\n    echo \"cd tests\"                                                                                                  >> /run.sh && \\\n    echo \"npm install\"                                                                                               >> /run.sh && \\\n    echo \"npm test\"                                                                                                  >> /run.sh && \\\n\n    echo \"#!/bin/bash\"                                                                                                > /sonar.sh && \\\n    echo \"cd /work/\"                                                                                                 >> /sonar.sh && \\\n\n    echo \"wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.0.3.778-linux.zip\" >> /sonar.sh && \\\n    echo \"unzip sonar-scanner-cli-3.0.3.778-linux.zip\"                                                               >> /sonar.sh && \\\n    echo \"export PATH=/work/sonar-scanner-3.0.3.778-linux/bin:$PATH\"                                                 >> /sonar.sh && \\\n    echo \"sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=paplot -Dsonar.sources=. -Dsonar.inclusions=paplot,scripts/*.py,scripts/paplot/*.py,scripts/paplot/subcode/*.py,tests/src/js/*.js,tests/src/html/*.js -Dsonar.python.coverage.reportPath=coverage.xml -Dsonar.javascript.lcov.reportPaths=tests/coverage/lcov.info -Dsonar.organization=${SONNAR_KEY} -Dsonar.login=${SONNAR_TOKEN};\" >> /sonar.sh && \\\n\n    chmod 744 /run.sh && \\\n    chmod 744 /sonar.sh && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"/run.sh\"]\n"
}