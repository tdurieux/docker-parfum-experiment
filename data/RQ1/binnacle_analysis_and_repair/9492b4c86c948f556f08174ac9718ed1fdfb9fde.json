{
  "startTime": 1674235783765,
  "endTime": 1674235784722,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 245,
        "lineEnd": 246,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 247,
        "lineEnd": 248,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 8,
        "columnEnd": 20
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 243,
        "lineEnd": 244,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 249,
        "lineEnd": 249,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 243,
        "lineEnd": 244,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER mail@racktear.com\n\nRUN groupadd tarantool \\\n    && adduser -g tarantool tarantool\n\nENV TARANTOOL_VERSION=2.1.2-108-g0bed174d0 \\\n    TARANTOOL_DOWNLOAD_URL=https://github.com/tarantool/tarantool.git \\\n    TARANTOOL_INSTALL_LUADIR=/usr/local/share/tarantool \\\n    CURL_REPO=https://github.com/curl/curl.git \\\n    CURL_TAG=curl-7_65_1 \\\n    LUAROCKS_URL=https://github.com/tarantool/luarocks/archive/6e6fe62d9409fe2103c0fd091cccb3da0451faf5.tar.gz \\\n    LUAROCK_VSHARD_VERSION=0.1.9 \\\n    LUAROCK_CHECKS_VERSION=3.0.1 \\\n    LUAROCK_AVRO_SCHEMA_VERSION=3.0.3 \\\n    LUAROCK_EXPERATIOND_VERSION=1.0.1 \\\n    LUAROCK_QUEUE_VERSION=1.0.3 \\\n    LUAROCK_CONNPOOL_VERSION=1.1.1 \\\n    LUAROCK_HTTP_VERSION=1.1.0 \\\n    LUAROCK_MEMCACHED_VERSION=1.0.0 \\\n    LUAROCK_TARANTOOL_PG_VERSION=2.0.2 \\\n    LUAROCK_TARANTOOL_MYSQL_VERSION=2.0.1 \\\n    LUAROCK_TARANTOOL_GIS_VERSION=1.0.0 \\\n    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=1.0.4 \\\n    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=1.0.1\n\nRUN yum -y install epel-release && \\\n    yum -y update && \\\n    yum -y clean all && rm -rf /var/cache/yum\n\nRUN set -x \\\n    && yum -y install \\\n        libstdc++ \\\n        readline \\\n        openssl \\\n        yaml \\\n        lz4 \\\n        binutils \\\n        ncurses \\\n        libgomp \\\n        lua \\\n        tar \\\n        zip \\\n        unzip \\\n        libunwind \\\n        ca-certificates \\\n    && yum -y install \\\n        perl \\\n        gcc-c++ \\\n        cmake \\\n        readline-devel \\\n        openssl-devel \\\n        libyaml-devel \\\n        lz4-devel \\\n        binutils-devel \\\n        ncurses-devel \\\n        lua-devel \\\n        make \\\n        git \\\n        libunwind-devel \\\n        autoconf \\\n        automake \\\n        libtool \\\n        go \\\n        wget \\\n    && : \"---------- libicu ----------\" \\\n    && wget https://download.icu-project.org/files/icu4c/64.2/icu4c-64_2-src.tgz \\\n    && mkdir -p /usr/src/icu \\\n        && tar -xzf icu4c-64_2-src.tgz -C /usr/src/icu --strip-components=1 \\\n        && rm icu4c-64_2-src.tgz \\\n    && (cd /usr/src/icu/source; \\\n        chmod +x runConfigureICU configure install-sh; \\\n        ./runConfigureICU Linux/gcc; \\\n        make; \\\n        make install; \\\n        echo '/usr/local/lib' > /etc/ld.so.conf.d/local.conf; \\\n        ldconfig ) \\\n    && : \"---------- curl ----------\" \\\n    && mkdir -p /usr/src/curl \\\n    && git clone \"$CURL_REPO\" /usr/src/curl \\\n    && ( cd /usr/src/curl; \\\n        git checkout \"$CURL_TAG\"; \\\n        ./buildconf; \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl --prefix \"/usr/local\"; \\\n        make -j; \\\n        make install; \\\n        ldconfig) \\\n    && : \"---------- gperftools ----------\" \\\n    && yum install -y gperftools-libs \\\n    && (GOPATH=/usr/src/go go get github.com/google/pprof; \\\n        cp /usr/src/go/bin/pprof /usr/local/bin) \\\n    && : \"---------- tarantool ----------\" \\\n    && mkdir -p /usr/src/tarantool \\\n    && git clone \"$TARANTOOL_DOWNLOAD_URL\" /usr/src/tarantool \\\n    && (cd /usr/src/tarantool; git checkout \"$TARANTOOL_VERSION\";) \\\n    && (cd /usr/src/tarantool; git submodule update --init --recursive;) \\\n    && (cd /usr/src/tarantool; \\\n       cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo\\\n             -DENABLE_BUNDLED_LIBYAML:BOOL=OFF\\\n             -DENABLE_BACKTRACE:BOOL=ON\\\n             -DENABLE_DIST:BOOL=ON\\\n             .) \\\n    && make -C /usr/src/tarantool -j \\\n    && make -C /usr/src/tarantool install \\\n    && make -C /usr/src/tarantool clean \\\n    && : \"---------- small ----------\" \\\n    && (cd /usr/src/tarantool/src/lib/small; \\\n        cmake -DCMAKE_INSTALL_PREFIX=/usr \\\n              -DCMAKE_INSTALL_LIBDIR=lib \\\n              -DCMAKE_BUILD_TYPE=RelWithDebInfo \\\n              .) \\\n    && make -C /usr/src/tarantool/src/lib/small \\\n    && make -C /usr/src/tarantool/src/lib/small install \\\n    && make -C /usr/src/tarantool/src/lib/small clean \\\n    && : \"---------- msgpuck ----------\" \\\n    && (cd /usr/src/tarantool/src/lib/msgpuck; \\\n        cmake -DCMAKE_INSTALL_PREFIX=/usr \\\n              -DCMAKE_INSTALL_LIBDIR=lib \\\n              -DCMAKE_BUILD_TYPE=RelWithDebInfo \\\n              .) \\\n    && make -C /usr/src/tarantool/src/lib/msgpuck \\\n    && make -C /usr/src/tarantool/src/lib/msgpuck install \\\n    && make -C /usr/src/tarantool/src/lib/msgpuck clean \\\n    && : \"---------- luarocks ----------\" \\\n    && wget -O luarocks.tar.gz \"$LUAROCKS_URL\" \\\n    && mkdir -p /usr/src/luarocks \\\n    && tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1 \\\n    && ( cd /usr/src/luarocks; \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n        make build; \\\n        make install) \\\n    && rm -r /usr/src/luarocks \\\n    && rm -rf /usr/src/tarantool \\\n    && rm -rf /usr/src/go \\\n    && rm -rf /usr/src/icu \\\n    && rm -rf /usr/src/curl \\\n    && : \"---------- remove build deps ----------\" \\\n    && yum -y remove \\\n        perl \\\n        gcc-c++ \\\n        cmake \\\n        readline-devel \\\n        openssl-devel \\\n        libyaml-devel \\\n        lz4-devel \\\n        binutils-devel \\\n        ncurses-devel \\\n        lua-devel \\\n        make \\\n        git \\\n        libunwind-devel \\\n        autoconf \\\n        automake \\\n        libtool \\\n        go \\\n        wget \\\n        perl \\\n        kernel-headers \\\n        golang-src \\\n    && rpm -qa | grep devel | xargs yum -y remove \\\n    && rm -rf /var/cache/yum\n\n\nCOPY luarocks-config.lua /usr/local/etc/luarocks/config-5.1.lua\n\nRUN set -x \\\n    && yum -y install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-redhat96-9.6-3.noarch.rpm \\\n    && yum -y install \\\n        mariadb-libs \\\n        postgresql96-libs \\\n        cyrus-sasl \\\n        libev \\\n        proj \\\n        geos \\\n        unzip \\\n        openssl-libs \\\n    && yum -y install \\\n        git \\\n        cmake \\\n        make \\\n        gcc-c++ \\\n        postgresql96-devel \\\n        lua-devel \\\n        cyrus-sasl-devel \\\n        libev-devel \\\n        wget \\\n        proj-devel \\\n        geos-devel \\\n        openssl-devel \\\n    && mkdir -p /rocks \\\n    && : \"---------- luarocks ----------\" \\\n    && luarocks install lua-term \\\n    && luarocks install ldoc \\\n    && : \"vshard\" \\\n    && luarocks install vshard $LUAROCK_VSHARD_VERSION \\\n    && : \"checks\" \\\n    && luarocks install checks $LUAROCK_CHECKS_VERSION \\\n    && : \"avro\" \\\n    && luarocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \\\n    && : \"expirationd\" \\\n    && luarocks install expirationd $LUAROCK_EXPERATIOND_VERSION \\\n    && : \"queue\" \\\n    && luarocks install queue $LUAROCK_QUEUE_VERSION \\\n    && : \"connpool\" \\\n    && luarocks install connpool $LUAROCK_CONNPOOL_VERSION \\\n    && : \"http\" \\\n    && luarocks install http $LUAROCK_HTTP_VERSION \\\n    && : \"pg\" \\\n    && luarocks install pg $LUAROCK_TARANTOOL_PG_VERSION \\\n    && : \"mysql\" \\\n    && luarocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \\\n    && : \"memcached\" \\\n    && luarocks install memcached $LUAROCK_MEMCACHED_VERSION \\\n    && : \"prometheus\" \\\n    && luarocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \\\n    && : \"gis\" \\\n    && luarocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \\\n    && : \"gperftools\" \\\n    && luarocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \\\n    && : \"---------- remove build deps ----------\" \\\n    && rm -rf /rocks \\\n    && yum -y remove \\\n        git \\\n        cmake \\\n        make \\\n        gcc-c++ \\\n        postgresql96-devel \\\n        lua-devel \\\n        cyrus-sasl-devel \\\n        libev-devel \\\n        wget \\\n        proj-devel \\\n        geos-devel \\\n        openssl-devel \\\n        perl \\\n        kernel-headers \\\n        golang-src \\\n    && rpm -qa | grep devel | xargs yum -y remove \\\n    && rm -rf /var/cache/yum\n\n\nRUN set -x \\\n    && : \"---------- gosu ----------\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\\n       B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && curl -f -o /usr/local/bin/gosu -SL \\\n       \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64\" \\\n    && curl -f -o /usr/local/bin/gosu.asc -SL \\\n       \"https://github.com/tianon/gosu/releases/download/1.2/gosu-amd64.asc\" \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc \\\n    && rm /usr/local/bin/gosu.asc \\\n    && rm -r /root/.gnupg/ \\\n    && chmod +x /usr/local/bin/gosu\n\n\nRUN mkdir -p /var/lib/tarantool \\\n    && chown tarantool:tarantool /var/lib/tarantool \\\n    && mkdir -p /opt/tarantool \\\n    && chown tarantool:tarantool /opt/tarantool \\\n    && mkdir -p /var/run/tarantool \\\n    && chown tarantool:tarantool /var/run/tarantool \\\n    && mkdir /etc/tarantool \\\n    && chown tarantool:tarantool /etc/tarantool\n\nVOLUME /var/lib/tarantool\nWORKDIR /opt/tarantool\n\nCOPY tarantool-entrypoint.lua /usr/local/bin/\nCOPY tarantool_set_config.lua /usr/local/bin/\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY console /usr/local/bin/\nCOPY tarantool_is_up /usr/local/bin/\nCOPY tarantool.default /usr/local/etc/default/tarantool\n\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nHEALTHCHECK CMD tarantool_is_up\n\nEXPOSE 3301\nCMD [ \"tarantool\" ]\n"
}