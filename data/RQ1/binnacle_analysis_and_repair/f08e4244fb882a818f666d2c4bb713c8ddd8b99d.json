{
  "startTime": 1674246205655,
  "endTime": 1674246205720,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM node:alpine\nFROM alpine:3.6\n\n# set the default NODE_ENV to production\n# for dev/test build with: docker build --build-arg NODE=development .\n# and the testing npms will be included\nARG NODE=production\nENV NODE_ENV ${NODE}\n\n# copy package info early to install npms and delete npm command\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN apk -U --no-cache add curl jq bash nodejs nodejs-npm && \\\n  npm install && apk del --purge nodejs-npm && \\\n  rm -rvf /var/cache/* /root/.npm /tmp/* && npm cache clean --force;\n\n# copy the code\nCOPY . .\nHEALTHCHECK --interval=10s --timeout=3s \\\n  CMD curl -f -s http://localhost:3000/health/ || exit 1\nEXPOSE 3000\nENTRYPOINT [\"bash\",\"/usr/src/app/startup.sh\"]\n"
}