{
  "startTime": 1674252825457,
  "endTime": 1674252825720,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "# Build using: docker build -f Dockerfile.gocd-agent -t gocd-agent .\nFROM gocd/gocd-agent:16.5.0\n\nLABEL version=\"0.02\" \\\n      description=\"This custom go-agent docker file installs additional requirements for the edx pipeline\"\n\n# Add Custom apt repositories\nRUN \\\n  echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  add-apt-repository -y 'deb http://ppa.edx.org trusty main' && \\\n  apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 69464050 && \\\n  apt-get update\n\n# Install Java 7\nRUN \\\n  apt-get install --no-install-recommends -y oracle-java7-installer && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  rm -rf /var/cache/oracle-jdk7-installer\n\n# Install a modern git client\nRUN add-apt-repository -y ppa:git-core/ppa && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;\n\n# Define working directory.\nWORKDIR /data\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-7-oracle\n\n# Install Python and package mgmt tools.\nRUN apt-get update && apt-get install --no-install-recommends -y -q \\\n    python \\\n    python-dev \\\n    python-distribute \\\n    python-pip \\\n    libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install php\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    php5-common \\\n    php5-cli && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies needed for Ansible 2.x\nRUN apt-get update && apt-get install --no-install-recommends -y libffi-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install drush (drupal shell) for access to Drupal commands/Acquia\nRUN php -r \"readfile('http://files.drush.org/drush.phar');\" > drush && \\\n    chmod +x drush && \\\n    sudo mv drush /usr/local/bin\n\n# Install Docker - for Docker container building by a go-agent.\nCOPY docker/build/go-agent/files/docker_install.sh /tmp/docker/\nRUN /bin/bash /tmp/docker/docker_install.sh\n\n# Add the go user to the docker group to allow the go user to run docker commands.\n# See: https://docs.docker.com/engine/installation/linux/ubuntulinux/\nRUN usermod -aG docker go\n\n# Assign the go user root privlidges\nRUN printf \"\\ngo      ALL=(ALL:ALL) NOPASSWD: /usr/bin/pip, /usr/local/bin/pip\\n\" >> /etc/sudoers\n\n# Upgrade pip and setup tools. Needed for Ansible 2.x\n# Must upgrade to latest before pinning to work around bug\n# https://github.com/pypa/pip/issues/3862\nRUN \\\n  pip install --no-cache-dir --upgrade pip && \\\n  #pip may have moved from /usr/bin/ to /usr/local/bin/. This clears bash's path cache.\n  hash -r && \\\n  pip install --no-cache-dir --upgrade pip==8.1.2 && \\\n  # upgrade setuptools early to avoid no distribution errors\n  pip install --no-cache-dir --upgrade setuptools==24.0.3\n\n\n# Install AWS command-line interface - for AWS operations in a go-agent task.\nRUN pip install --no-cache-dir awscli\n\nADD docker/build/go-agent/files/go-agent-start.sh /etc/service/go-agent/run\nADD docker/build/go-agent/files/go-agent-env-vars /etc/default/go-agent\nRUN update-java-alternatives -s java-7-oracle\n\n# !!!!NOTICE!!!! ---- Runner of this pipeline take heed!! You must replace go_github_key.pem with the REAL key material\n# that can checkout private github repositories used as pipeline materials. The key material here is faked and is only\n# used to pass CI!\n# setup the github identity\nADD docker/build/go-agent/files/go_github_key.pem /var/go/.ssh/id_rsa\nRUN chmod 600 /var/go/.ssh/id_rsa && \\\n    chown go:go /var/go/.ssh/id_rsa\n\n# setup the known_hosts\nRUN touch /var/go/.ssh/known_hosts && \\\n    chmod 600 /var/go/.ssh/known_hosts && \\\n    chown go:go /var/go/.ssh/known_hosts && \\\n    ssh-keyscan -t rsa,dsa github.com > /var/go/.ssh/known_hosts\n"
}