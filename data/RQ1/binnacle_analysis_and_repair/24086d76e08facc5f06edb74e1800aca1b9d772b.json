{
  "startTime": 1674641705479,
  "endTime": 1674641705810,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM microsoft/dotnet:aspnetcore-runtime AS build-kaldi\n\nENV CPU_CORE 4\n\nRUN \\\n  apt-get update -qq && \\\n  apt-get install --no-install-recommends -y \\\n    git bzip2 wget \\\n    g++ make python python3 \\\n    zlib1g-dev automake autoconf libtool subversion \\\n    libatlas-base-dev patch sox && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /usr/local/\n# Use the modified kaldi\nRUN git clone https://github.com/hanayashiki/kaldi.git\n\n\nWORKDIR /usr/local/kaldi/tools\nRUN extras/check_dependencies.sh\nRUN make -j $CPU_CORE\n\nWORKDIR /usr/local/kaldi/src\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make depend -j $CPU_CORE && make -j $CPU_CORE\n\n# Fetch changes, avoid rebuild the whole kaldi\nRUN git pull\nWORKDIR /usr/local/kaldi/src/online2\nRUN make\n\nRUN apt-get install --no-install-recommends -y tree vim && rm -rf /var/lib/apt/lists/*;\n\n\n# Install redis\nRUN mkdir /root/tools\nWORKDIR /root/tools\nRUN wget https://download.redis.io/redis-stable.tar.gz && \\\n\ttar xvzf redis-stable.tar.gz && \\\n\tcd redis-stable && \\\n\tmake && make install && rm redis-stable.tar.gz\n\n# Install libevent\nRUN apt-get install --no-install-recommends -y libtool && rm -rf /var/lib/apt/lists/*;\nWORKDIR /root/tools\nRUN git clone https://github.com/libevent/libevent.git\nWORKDIR /root/tools/libevent\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# Install libbson\nWORKDIR /root/tools\nRUN git clone https://github.com/mongodb/libbson.git\nWORKDIR /root/tools/libbson\nRUN ./autogen.sh && make && make install\n\n# Install hiredis\nWORKDIR /root/tools\nRUN git clone https://github.com/redis/hiredis.git\nRUN cd hiredis && make && make install\n\n# Install Python3 deps for APITest\nRUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir requests gevent\n\n# Build dotnet app\nFROM microsoft/dotnet:sdk AS build-env\n\nRUN apt-get update && apt-get install --no-install-recommends -y tree && rm -rf /var/lib/apt/lists/*;\n\n# Copy everything\nWORKDIR /app\t\t\n\nRUN mkdir Service Core CoreRun\nCOPY Service Service/\nCOPY Core Core/\n\n# To make dotnet happy\nCOPY CoreRun CoreRun/ \nCOPY SRService.sln .\n\n# Build web interface\nRUN dotnet publish\n# RUN echo \"\\n####Build results: ####\" && tree .\n\n# Go back to where we build kaldi\nFROM build-kaldi\n\n# Build decoder\n\nWORKDIR /app\n\nCOPY --from=build-env /app .\n\nRUN mkdir Kaldi APITest\n\nCOPY Kaldi/ /app/Kaldi/\nWORKDIR /app/Kaldi\nRUN make kaldi-service\n\nWORKDIR /app\n\nCOPY *.sh ./\nCOPY Makefile ./\nCOPY APITest APITest/\nCOPY KaldiConf KaldiConf/\nCOPY ServiceConf ServiceConf/\n\nRUN chmod +x ./init.sh\n\n\n"
}