{
  "startTime": 1674244352673,
  "endTime": 1674244352813,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 478
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 478
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile extending the generic Node image with application files for a\n# single application.\nFROM gcr.io/google_appengine/nodejs\nLABEL name=\"rendeer\" \\\n      version=\"1.5.0\" \\\n      description=\"When Puppeteer meets Prerender\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget && rm -rf /var/lib/apt/lists/*;\n\nRUN /usr/local/bin/install_node '>=10.12'\n\nRUN npm install pm2 -g && npm cache clean --force;\n\nCOPY . /app/\n\n# Add rendeer as a user\nRUN groupadd -r rendeer && useradd -r -g rendeer -G audio,video rendeer \\\n    && mkdir -p /home/rendeer && chown -R rendeer:rendeer /home/rendeer \\\n    && chown -R rendeer:rendeer /app\n\n# Run rendeer non-privileged\nUSER rendeer\n\nEXPOSE 8080\n\nRUN npm install --production || \\\n  ((if [ -f npm-debug.log ]; then \\\n      cat npm-debug.log; \\\n    fi) && false) && npm cache clean --force;\n\nENTRYPOINT [\"pm2-docker\"]\nCMD [\"process.yml\"]\n"
}