{
  "startTime": 1674239594315,
  "endTime": 1674239594734,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 255,
        "columnEnd": 287
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 172
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 172
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 130
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n## Install Variables\nENV pyversion 2.7.13\n\n## Python\nRUN apt-get update && apt-get -y --no-install-recommends install build-essential checkinstall libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libc6-dev libbz2-dev wget make && wget https://www.python.org/ftp/python/${pyversion}/Python-${pyversion}.tgz && tar -xvf Python-${pyversion}.tgz && rm Python-${pyversion}.tgz && rm -rf /var/lib/apt/lists/*;\nWORKDIR Python-${pyversion}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nWORKDIR /root\n\n## Clang\nRUN apt-get -y --no-install-recommends install clang-4.0 golang-1.9 libz-dev && rm -rf /var/lib/apt/lists/*;\n\n## RUST start\nRUN apt-get -y --no-install-recommends install curl && curl https://sh.rustup.rs -sSf | sh -s -- -y && rm -rf /var/lib/apt/lists/*;\n\n## Set Path\nENV PATH $PATH:/Python-${pyversion}:/usr/lib/go-1.9/bin:/root/.cargo/bin\n\n## RUST finish\nRUN rustup install 1.19.0 && rustup default 1.19.0\n\n## CellRanger 2.1.1\nRUN apt-get -y --no-install-recommends install git && git clone https://github.com/10XGenomics/cellranger.git && rm -rf /var/lib/apt/lists/*;\nWORKDIR cellranger\nRUN make\nWORKDIR /root\n\n## Martian\nRUN git clone https://github.com/martian-lang/martian.git --recursive\nWORKDIR martian\nRUN git fetch origin 2.3\nRUN git checkout origin/2.3\nRUN git submodule update --recursive\nRUN make mrc mrf mrg mrp mrs mrt_helper mrstat mrjob\nWORKDIR /root\n\n## Set paths\nENV PATH $PATH:/root/cellranger/bin:/root/cellranger/lib/bin:/root/cellranger/tenkit/bin:/root/martian/bin\nENV PYTHONPATH $PYTHONPATH:/root/cellranger/lib/python:/root/cellranger/tenkit/lib/python:/root/martian/adapters/python\nENV MROPATH $MROPATH:/root/cellranger/mro:/root/cellranger/tenkit/mro\nENV RUST_SRC_PATH $RUST_SRC_PATH:/root/cellranger/lib/rust\nENV _TENX_LD_LIBRARY_PATH tenx_path\n\nRUN apt-get update && apt-get -y --no-install-recommends install python-pip liblzma-dev liblz4-tool libopenblas-dev libatlas-base-dev python-tables cython && rm -rf /var/lib/apt/lists/*;\nCOPY requirements.txt /opt/requirements.txt\nRUN pip install --no-cache-dir -r /opt/requirements.txt\n\n# Install samtools\nRUN wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2 \\\n && tar xjvf samtools-1.9.tar.bz2 \\\n && rm samtools-1.9.tar.bz2 \\\n && cd samtools-1.9 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n && make \\\n && make install \\\n && cd .. \\\n && rm -rf samtools-1.9\n\n# Install STAR aligner\nRUN wget https://github.com/alexdobin/STAR/archive/2.5.1b.tar.gz \\\n && tar xf 2.5.1b.tar.gz \\\n && rm 2.5.1b.tar.gz \\\n && cd STAR-2.5.1b \\\n && make \\\n && mv bin/Linux_x86_64_static/STAR* /usr/bin \\\n && cd .. \\\n && rm -rf STAR-2.5.1b\n\n# Install tsne python package. pip installing it doesn't work\nRUN git clone https://github.com/danielfrg/tsne.git \\\n && cd tsne \\\n && make install \\\n && cd .. \\\n && rm -rf tsne\n\n## Default command\nCMD [\"cellranger\", \"-h\"]\n"
}