{
  "startTime": 1674252213002,
  "endTime": 1674252213123,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 166
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM balenalib/%%RESIN_MACHINE_NAME%%-debian:latest AS buildstep\n\n# downloading utils\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends wget build-essential libc6-dev git pkg-config protobuf-compiler libprotobuf-dev libprotoc-dev automake libtool autoconf python-dev python-rpi.gpio && rm -rf /var/lib/apt/lists/*;\n\nENV UDEV=off\n\nWORKDIR /etc\n\n# versions\nENV NODE_EXPORTER_VERSION 0.16.0\nENV DIST_ARCH linux-armv6\nRUN wget https://github.com/prometheus/node_exporter/releases/download/v${NODE_EXPORTER_VERSION}/node_exporter-${NODE_EXPORTER_VERSION}.${DIST_ARCH}.tar.gz  \\\n\t&& tar xvfz node_exporter-${NODE_EXPORTER_VERSION}.${DIST_ARCH}.tar.gz \\\n\t&& rm node_exporter-${NODE_EXPORTER_VERSION}.${DIST_ARCH}.tar.gz\n\nCOPY gwexporter.tgz /opt/ttn-gateway/gwexporter.tgz\nWORKDIR /opt/gwexporter\nRUN tar xvzf /opt/ttn-gateway/gwexporter.tgz && rm /opt/ttn-gateway/gwexporter.tgz\nRUN wget https://nodejs.org/dist/v8.8.1/node-v8.8.1-linux-armv6l.tar.gz \\\n\t&& tar xvzf node-v8.8.1-linux-armv6l.tar.gz \\\n\t&& mv node-v8.8.1-linux-armv6l/* . \\\n\t&& rm -rf node-v8.8.1-linux-armv6l && rm node-v8.8.1-linux-armv6l.tar.gz\n\nWORKDIR /opt/ttn-gateway/\nCOPY dev dev\nRUN ./dev/build.sh\n\nFROM balenalib/%%RESIN_MACHINE_NAME%%-debian:latest\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends python-rpi.gpio && \\\n\tapt-get clean && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Enable systemd\nENV INITSYSTEM on\n\n# versions\nENV NODE_EXPORTER_VERSION 0.16.0\nENV DIST_ARCH linux-armv6\n\nWORKDIR /etc\nCOPY --from=buildstep /etc/node_exporter-${NODE_EXPORTER_VERSION}.${DIST_ARCH} .\n\nWORKDIR /opt/gwexporter\nCOPY --from=buildstep /opt/gwexporter .\n\nWORKDIR /opt/ttn-gateway\nCOPY --from=buildstep /opt/ttn-gateway/mp_pkt_fwd .\nCOPY --from=buildstep /usr/local/lib/libpaho-embed-* /usr/lib/\nCOPY --from=buildstep /usr/lib/libttn* /usr/lib/\nCOPY run.py run.py\n\nWORKDIR /\n\nCOPY start.sh.metering start.sh\n\n# run when container lands on device\nCMD [\"bash\", \"start.sh\"]\n"
}