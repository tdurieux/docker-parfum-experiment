{
  "startTime": 1674248920955,
  "endTime": 1674248921139,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n\nARG PHP_VERSION=${PHP_VERSION}\nFROM php:${PHP_VERSION}-alpine\n\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\n\nRUN apk --update --no-cache add wget \\\n  curl \\\n  git \\\n  build-base \\\n  libmemcached-dev \\\n  libmcrypt-dev \\\n  libxml2-dev \\\n  zlib-dev \\\n  autoconf \\\n  cyrus-sasl-dev \\\n  libgsasl-dev \\\n  supervisor\n\nRUN docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml pcntl\nRUN pecl channel-update pecl.php.net && pecl install memcached mcrypt-1.0.1 && docker-php-ext-enable memcached\n\n#Install BCMath package:\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ]; then \\\n  docker-php-ext-install bcmath \\\n  ;fi\n\n# Install PostgreSQL drivers:\nARG INSTALL_PGSQL=false\nRUN if [ ${INSTALL_PGSQL} = true ]; then \\\n  apk --update --no-cache add postgresql-dev \\\n  && docker-php-ext-install pdo_pgsql \\\n  ; fi\n\n###########################################################################\n# PHP Memcached:\n###########################################################################\n\nARG INSTALL_MEMCACHED=false\n\nRUN if [ ${INSTALL_MEMCACHED} = true ]; then \\\n  if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n  curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/2.2.0.tar.gz\"; \\\n  else \\\n  curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\"; \\\n  fi \\\n  && mkdir -p memcached \\\n  && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n  && ( cd memcached \\\n  && phpize \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make -j$(nproc) \\\n  && make install) \\\n\n  && rm -r memcached \\\n  && rm /tmp/memcached.tar.gz \\\n  && docker-php-ext-enable memcached \\\n  ; else \\\n  curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\"; \\\n  fi \\\n\n\n\n\n\n\n\n\n\n\n\n\n  fi\n\nRUN rm /var/cache/apk/* \\\n  && mkdir -p /var/www\n\n#\n#--------------------------------------------------------------------------\n# Optional Supervisord Configuration\n#--------------------------------------------------------------------------\n#\n# Modify the ./supervisor.conf file to match your App's requirements.\n# Make sure you rebuild your container with every change.\n#\n\nCOPY supervisord.conf /etc/supervisord.conf\n\nENTRYPOINT [\"/usr/bin/supervisord\", \"-n\", \"-c\",  \"/etc/supervisord.conf\"]\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# If you need to modify this image, feel free to do it right here.\n#\n# -- Your awesome modifications go here -- #\n\n#\n#--------------------------------------------------------------------------\n# Check PHP version\n#--------------------------------------------------------------------------\n#\n\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nWORKDIR /etc/supervisor/conf.d/\n"
}