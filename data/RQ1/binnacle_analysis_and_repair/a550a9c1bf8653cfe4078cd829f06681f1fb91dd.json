{
  "startTime": 1674245511417,
  "endTime": 1674245511588,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build the test\nFROM golang:1.12-alpine as build-step\nENV GOPATH=/go\n\nRUN apk update && apk add --no-cache ca-certificates curl git build-base\n\nENV TERRAFORM_VERSION=0.11.14\nENV TERRAFORM_URL=\"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\"\nENV TERRAFORM_ZIP=\"terraform_${TERRAFORM_VERSION}_linux_amd64.zip\"\nENV TERRAFORM_SHA256SUM=9b9a4492738c69077b079e595f5b2a9ef1bc4e8fb5596610f69a6f322a8af8dd\n\nRUN curl -fsSLO \"$TERRAFORM_URL\" \\\n\t&& echo \"${TERRAFORM_SHA256SUM}  ${TERRAFORM_ZIP}\" | sha256sum -c - \\\n\t&& unzip \"$TERRAFORM_ZIP\" \\\n\t&& mv \"terraform\" \"/usr/local/bin/terraform-${TERRAFORM_VERSION}\" \\\n\t&& ln -s \"/usr/local/bin/terraform-${TERRAFORM_VERSION}\" /usr/local/bin/terraform\n\nENV KUBECTL_VERSION=v1.11.1\nENV KUBECTL_URL=https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\nENV KUBECTL_SHA256SUM=d16a4e7bfe0033ea5f56f8d11e74f7a2dec5ff8832a046a643c8355b79b4ba5c\n\nRUN curl -fsSLO \"${KUBECTL_URL}\" \\\n\t&& echo \"${KUBECTL_SHA256SUM}  kubectl\" | sha256sum -c - \\\n\t&& chmod +x kubectl \\\n\t&& mv kubectl \"/usr/local/bin/kubectl-${KUBECTL_VERSION}\" \\\n\t&& ln -s \"/usr/local/bin/kubectl-${KUBECTL_VERSION}\" /usr/local/bin/kubectl\n\nRUN go get github.com/docker/distribution/cmd/registry\nRUN go get github.com/onsi/ginkgo/ginkgo\n\nADD . /go/src/github.com/replicatedhq/ship\nRUN cd /go/src/github.com/replicatedhq/ship && \\\n    ginkgo build ./integration/base && \\\n    ginkgo build ./integration/update && \\\n    ginkgo build ./integration/init_app && \\\n    ginkgo build ./integration/init && \\\n    ginkgo build ./integration/unfork\n\n# package things up\nFROM node:8-alpine\nENV GOPATH=/go\nWORKDIR /test\n\nRUN npm install -g http-echo-server && npm cache clean --force;\n\nCOPY --from=build-step /usr/local/bin/terraform /usr/local/bin/terraform\nCOPY --from=build-step /usr/local/bin/kubectl /usr/local/bin/kubectl\nCOPY --from=build-step $GOPATH/bin/registry $GOPATH/bin/registry\nCOPY --from=build-step $GOPATH/bin/ginkgo $GOPATH/bin/ginkgo\nRUN apk update && apk add ca-certificates git openssh && rm -rf /var/cache/apk/*\n\nRUN mkdir -p /var/lib/registry\n\n\nADD ./integration /test\nRUN cd /test && rm *.go\nCOPY --from=build-step /go/src/github.com/replicatedhq/ship/integration/base/base.test /test/base/\nCOPY --from=build-step /go/src/github.com/replicatedhq/ship/integration/update/update.test /test/update/\nCOPY --from=build-step /go/src/github.com/replicatedhq/ship/integration/init_app/init_app.test /test/init_app/\nCOPY --from=build-step /go/src/github.com/replicatedhq/ship/integration/init/init.test /test/init/\nCOPY --from=build-step /go/src/github.com/replicatedhq/ship/integration/unfork/unfork.test /test/unfork\nCMD ./integration_docker_start.sh\n\n\n\n\n"
}