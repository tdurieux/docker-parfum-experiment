{
  "startTime": 1674253029847,
  "endTime": 1674253029979,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==============================================================================\n#  Copyright 2019 Intel Corporation\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n# ==============================================================================\n\n# Environment to build and unit-test ngraph-bridge on CentOS 7.6\n\nFROM centos:7.6.1810\n\n# Python environment is python 3.6, which is preferred Py3 on CentOS 7.6\n# git is needed to clone tensorflow repository\n# unzip and wget are needed for installing bazel\n# sudo is required for installing the TF wheel into /usr/local/...\n# zlib-dev and bash-completion are required by bazel install\n# zip is needed to run TensorFlow tests\n# wget is used below to get the bazel distro\n# curl and mlocate are needed by Tensorflow's configure command\n# \"which\" is needed to unpack bazel\n# gcc, gcc-c++, and cmake3 are needed to build ngraph\n\nRUN yum groupinstall -y \"Development Tools\" && \\\n    yum -y --enablerepo=extras install epel-release && \\\n    yum -y install \\\n    python36 python36-devel python36-setuptools python36-pip \\\n    java-1.8.0-openjdk \\\n    git \\\n    unzip \\\n    sudo \\\n    zlib-dev \\\n    zip \\\n    wget \\\n    mlocate curl \\\n    which \\\n    gcc gcc-c++ \\\n    cmake3 && rm -rf /var/cache/yum\n\n# We need to make cmake3, required by ngraph builds, to be runnable as the\n# default \"cmake\" command\nRUN ln -s /usr/bin/cmake3 /usr/bin/cmake\n\n# Print versions, for reference\nRUN cmake --version\nRUN make --version\nRUN gcc --version\nRUN c++ --version\n\n# The \"locate\" command uses a prepopulated index.  If this index is not built,\n# then \"locate\" will find absolutely nothing.  In Tensorflow's configure,\n# this manifests itself as a silent failure of the configure script to run to\n# completion.  Therefore, updatedb MUST BE RUN to provide an index for \"locate\".\nRUN updatedb\n\n# The pip-upgrade for pip, setuptools, and virtualenv is to avoid a nasty\n#   bug in setuptools: \"_NamespacePath object has no attribute sort\"\nRUN pip3 install --no-cache-dir --upgrade pip setuptools virtualenv==16.1.0\n\n# We include pytest so the Docker image can be used for daily validation\nRUN pip3 install --no-cache-dir --upgrade pytest\n\n# This bazel version works with current TF\n# Install the most recent bazel release.\nARG BAZEL_VERSION=0.24.1\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    wget --quiet https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \\\n    wget --quiet https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE; \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh\n# Copy in the run-as-user.sh script\n# This will allow the builds, which are done in a mounted directory, to\n# be run as the user who runs \"docker run\".  This then allows the mounted\n# directory to be properly deleted by the user later (e.g. by jenkins).\nWORKDIR /home\n"
}