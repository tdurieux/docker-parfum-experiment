{
  "startTime": 1674243574211,
  "endTime": 1674243574842,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 140,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==================================================================\n# Based on Ubuntu\n# ------------------------------------------------------------------\n#  C / C++ / Python2 / Python3 / PHP / Golang / NodeJS\n# ==================================================================\n\n\nFROM nvidia/cuda:10.1-cudnn7-devel\n\nLABEL maintainer.name=\"xczh\" \\\n      maintainer.email=\"xczh.me@foxmail.com\" \\\n      description=\"Cloud9 WebIDE\"\n\nUSER root\n\nWORKDIR /root\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV LANG=\"C.UTF-8\"\n\n# ==================================================================\n# add files\n# ------------------------------------------------------------------\n\nCOPY build/ /tmp/build/\n\n# ==================================================================\n# prepare\n# ------------------------------------------------------------------\n\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" && \\\n    PIP2_INSTALL=\"pip2 --no-cache-dir install --upgrade\" && \\\n    PIP3_INSTALL=\"pip3 --no-cache-dir install --upgrade\" && \\\n    GIT_CLONE=\"git clone --single-branch --depth 1\" && \\\n\n    rm -rf /var/lib/apt/lists/* \\\n           /etc/apt/sources.list.d/cuda.list \\\n           /etc/apt/sources.list.d/nvidia-ml.list && \\\n    apt-get update && \\\n    echo 'PATH=$PATH:/cloud9/bin:/usr/local/ide-bin' >> /root/.bashrc && \\\n    echo \"alias open='c9 open'\" >> /root/.bashrc && \\\n\n# ==================================================================\n# tools\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        apt-transport-https \\\n        apt-utils \\\n        ca-certificates \\\n        curl \\\n        file \\\n        git \\\n        gnupg \\\n        htop \\\n        inetutils-ping \\\n        nano \\\n        net-tools \\\n        openssl \\\n        tzdata \\\n        unzip \\\n        vim \\\n        wget \\\n        xauth \\\n        zip \\\n        && \\\n    echo \"Asia/Shanghai\" > /etc/timezone && \\\n    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n\n# ==================================================================\n# copy/move files [before]\n# ------------------------------------------------------------------\n\n    mv -f /tmp/build/ide-run /usr/sbin/ && \\\n    mv -f /tmp/build/ide-bin/ /usr/local/ && \\\n    chmod -R a+x /usr/sbin/ide-run /usr/local/ide-bin/* && \\\n\n# ==================================================================\n# c AND c++\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        build-essential \\\n        cmake \\\n        g++ \\\n        gcc \\\n        gdb \\\n        make \\\n        && \\\n\n# ==================================================================\n# python2 AND python3\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        python \\\n        python-dev \\\n        python3 \\\n        python3-dev \\\n        && \\\n    curl -f -L https://bootstrap.pypa.io/get-pip.py | python2 && \\\n    curl -f -L https://bootstrap.pypa.io/get-pip.py | python3 && \\\n    $PIP2_INSTALL \\\n        setuptools \\\n        virtualenv \\\n        && \\\n    $PIP3_INSTALL \\\n        setuptools \\\n        virtualenv \\\n        && \\\n\n# ==================================================================\n# php\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        php-bz2 \\\n        php-cli \\\n        php-curl \\\n        php-gd \\\n        php-json \\\n        php-mbstring \\\n        php-mysql \\\n        php-net-smtp \\\n        php-net-socket \\\n        php-soap \\\n        php-sqlite3 \\\n        php-xdebug \\\n        php-xml \\\n        php-zip \\\n        && \\\n    curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer && \\\n\n# ==================================================================\n# golang\n# ------------------------------------------------------------------\n\n    GOLANG_VER=`git ls-remote -t https://github.com/golang/go | awk -F/ '$3 ~ /^go1(\\.[0-9]+)+$/ {print $3}' | sort -Vr | head -n 1` && \\\n    curl -f -o /tmp/${GOLANG_VER}.linux-amd64.tar.gz \\\n        https://dl.google.com/go/${GOLANG_VER}.linux-amd64.tar.gz && \\\n    tar -zxf /tmp/${GOLANG_VER}.linux-amd64.tar.gz -C /usr/local/ && \\\n    ln -s /usr/local/go/bin/go /usr/local/bin/go && \\\n    ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt && \\\n    ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc && \\\n    rm -f /tmp/${GOLANG_VER}.linux-amd64.tar.gz && \\\n    /usr/local/bin/go version && \\\n\n# ==================================================================\n# node.js\n# ------------------------------------------------------------------\n\n    curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        nodejs \\\n        && \\\n    ln -s /usr/bin/nodejs /usr/local/bin/node && \\\n    npm config set registry https://registry.npm.taobao.org && \\\n    npm install -g http-server && \\\n\n# ==================================================================\n# cloud9\n# note: tmux-1.9 required\n# ------------------------------------------------------------------\n\n    $GIT_CLONE https://github.com/c9/core.git /cloud9 && \\\n    /cloud9/scripts/install-sdk.sh && \\\n\n# ==================================================================\n# c9-codeintel\n# see: https://github.com/c9/c9.ide.language.codeintel\n# ------------------------------------------------------------------\n\n    virtualenv --python=python2 /root/.c9/python2 && \\\n    . /root/.c9/python2/bin/activate && \\\n    mkdir /tmp/codeintel && \\\n    pip download -d /tmp/codeintel codeintel==0.9.3 && \\\n    cd /tmp/codeintel && \\\n    tar xf CodeIntel-0.9.3.tar.gz && \\\n    mv CodeIntel-0.9.3/SilverCity CodeIntel-0.9.3/silvercity && \\\n    tar -zcf CodeIntel-0.9.3.tar.gz CodeIntel-0.9.3 && \\\n    pip install --no-cache-dir -U --no-index --find-links=/tmp/codeintel codeintel && \\\n    deactivate && \\\n    cd /root && \\\n\n# ==================================================================\n# openssh\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        openssh-server \\\n        && \\\n    mkdir /var/run/sshd && \\\n    sed -i 's/.*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed -i 's/.*X11Forwarding.*/X11Forwarding yes/' /etc/ssh/sshd_config && \\\n\n# ==================================================================\n# supervisor\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        supervisor \\\n        && \\\n    sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' \\\n        /etc/supervisor/supervisord.conf && \\\n\n# ==================================================================\n# copy/move files [after]\n# ------------------------------------------------------------------\n\n    mkdir -p /root/.c9/ /etc/supervisor/ && \\\n    mv -f /tmp/build/config/user.settings /root/.c9/user.settings && \\\n    mv -f /tmp/build/config/supervisord.conf /etc/supervisor/supervisord.conf && \\\n\n# ==================================================================\n# cleanup\n# ------------------------------------------------------------------\n\n    sed -i 's/http:\\/\\/archive.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list && \\\n    sed -i 's/http:\\/\\/security.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list && \\\n    apt-get clean -y && \\\n    apt-get autoremove -y && \\\n    npm cache clean --force && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /root/.c9/tmux-* /root/.c9/libevent-* /root/.c9/ncurses-* && rm CodeIntel-0.9.3.tar.gz\n\n# ==================================================================\n# meta\n# ------------------------------------------------------------------\n\nVOLUME /workspace\n\nEXPOSE 80\nEXPOSE 22\n\nENV C9_AUTH=root:webide\nENV EXTERNAL_PORT=\n\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n"
}