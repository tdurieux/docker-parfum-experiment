{
  "startTime": 1674242022395,
  "endTime": 1674242022458,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6.11.2-alpine\n\n# Alternatively use ADD https:// (which will not be cached by Docker builder)\nRUN apk --no-cache add curl \\ \n    && echo \"Pulling watchdog binary from Github.\" \\\n    && curl -f -sSL https://github.com/alexellis/faas/releases/download/0.6.1/fwatchdog > /usr/bin/fwatchdog \\\n    && chmod +x /usr/bin/fwatchdog \\\n    && apk del curl --no-cache\n\nWORKDIR /root/\n\n# Turn down the verbosity to default level.\nENV NPM_CONFIG_LOGLEVEL warn\n\n# Wrapper/boot-strapper\nCOPY package.json       .\nRUN npm i && npm cache clean --force;\n\n# Function\nCOPY index.js           .\nRUN mkdir -p ./root/function\n\nCOPY function/*.json    ./function/\nWORKDIR /root/function\nRUN npm i || : && npm cache clean --force;\nWORKDIR /root/\nCOPY function           function\nWORKDIR /root/function\n\nWORKDIR /root/\n\nENV cgi_headers=\"true\"\n\nENV fprocess=\"node index.js\"\n\nHEALTHCHECK --interval=1s CMD [ -e /tmp/.lock ] || exit 1\n\nCMD [\"fwatchdog\"]"
}