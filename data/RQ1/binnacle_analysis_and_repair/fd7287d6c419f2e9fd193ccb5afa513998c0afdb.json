{
  "startTime": 1674234730957,
  "endTime": 1674234731280,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 8,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 13,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine\n\nMAINTAINER Waldemar Hummer (whummer@atlassian.com)\nLABEL authors=\"Waldemar Hummer (whummer@atlassian.com)\"\n\n# install some common libs\nRUN apk add --no-cache autoconf automake build-base ca-certificates curl docker git \\\n        libffi-dev libtool linux-headers make openssl openssl-dev python python-dev \\\n        py-pip supervisor tar xz zip && \\\n    update-ca-certificates\n\n# Install Java - taken from official repo:\n# https://github.com/docker-library/openjdk/blob/master/8-jdk/alpine/Dockerfile)\nENV LANG C.UTF-8\nRUN { \\\n        echo '#!/bin/sh'; echo 'set -e'; echo; \\\n        echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n    } > /usr/local/bin/docker-java-home \\\n    && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV PATH $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin\nENV JAVA_VERSION 8u131\nENV JAVA_ALPINE_VERSION 8.131.11-r2\nRUN set -x && apk add --no-cache openjdk8=\"$JAVA_ALPINE_VERSION\" \\\n    && [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n\n\n# Install Maven - taken from official repo:\n# https://github.com/carlossg/docker-maven/blob/master/jdk-8/Dockerfile)\nARG MAVEN_VERSION=3.5.0\nARG USER_HOME_DIR=\"/root\"\nARG SHA=beb91419245395bd69a4a6edad5ca3ec1a8b64e41457672dc687c173a495f034\nARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\nADD https://raw.githubusercontent.com/carlossg/docker-maven/master/jdk-8/settings-docker.xml /usr/share/maven/ref/\n\n# set workdir\nRUN mkdir -p /opt/code/localstack\nWORKDIR /opt/code/localstack/\n\n# init environment and cache some dependencies\nADD requirements.txt .\nRUN wget -O /tmp/localstack.es.zip \\\n        https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.3.0.zip && \\\n    ( pip install --no-cache-dir --upgrade pip) && \\\n    ( test `which virtualenv` || \\\n        pip install --no-cache-dir virtualenv || \\\n        sudo pip install --no-cache-dir virtualenv) && \\\n    ( virtualenv .testvenv && \\\n        source .testvenv/bin/activate && \\\n        pip install --no-cache-dir six==1.10.0 && \\\n        pip install --no-cache-dir --quiet -r requirements.txt && \\\n        rm -rf .testvenv)\n\n# add files required to run \"make install-web\"\nADD Makefile .\nADD localstack/dashboard/web/package.json localstack/dashboard/web/package.json\n\n# install web dashboard dependencies\nRUN make install-web\n\n# cache Maven dependencies\nADD localstack/ext/java/pom.xml localstack/ext/java/pom.xml\nRUN cd localstack/ext/java && mvn -q -DskipTests package || true\n"
}