{
  "startTime": 1674245864443,
  "endTime": 1674245864766,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage for BerkeleyDB\nFROM alpine:3.8 as berkeleydb\n\nRUN apk --no-cache add autoconf\nRUN apk --no-cache add automake\nRUN apk --no-cache add build-base\nRUN apk --no-cache add libressl\n\nENV BERKELEYDB_VERSION=db-4.8.30.NC\nENV BERKELEYDB_PREFIX=/opt/${BERKELEYDB_VERSION}\n\nRUN wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz\nRUN tar -xzf *.tar.gz && rm *.tar.gz\nRUN sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h\nRUN mkdir -p ${BERKELEYDB_PREFIX}\n\nWORKDIR /${BERKELEYDB_VERSION}/build_unix\n\nRUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}\nRUN make -j4\nRUN make install\nRUN rm -rf ${BERKELEYDB_PREFIX}/docs\n\n# Build stage for Bitcoin ABC\nFROM alpine:3.8 as bitcoin-abc\n\nCOPY --from=berkeleydb /opt /opt\n\nRUN apk --no-cache add autoconf\nRUN apk --no-cache add automake\nRUN apk --no-cache add boost-dev\nRUN apk --no-cache add build-base\nRUN apk --no-cache add chrpath\nRUN apk --no-cache add file\nRUN apk --no-cache add gnupg\nRUN apk --no-cache add libevent-dev\nRUN apk --no-cache add libressl\nRUN apk --no-cache add libressl-dev\nRUN apk --no-cache add libtool\nRUN apk --no-cache add linux-headers\nRUN apk --no-cache add protobuf-dev\nRUN apk --no-cache add zeromq-dev\nRUN set -ex \\\n  && for key in \\\n    90C8019E36C2E964; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\"; \\\n  done\n\nENV BITCOIN_ABC_VERSION=0.18.0\nENV BITCOIN_ABC_SHASUM=\"11dc3ba7f193c70879b3fc3cc716fde56880dfebfab8bb556b7a355b2e64f09d  bitcoin-abc-${BITCOIN_ABC_VERSION}.tar.gz\"\nENV BITCOIN_ABC_PREFIX=/opt/bitcoin-abc-${BITCOIN_ABC_VERSION}\n\nRUN wget https://download.bitcoinabc.org/${BITCOIN_ABC_VERSION}/linux/bitcoin-abc-${BITCOIN_ABC_VERSION}.tar.gz\nRUN echo \"${BITCOIN_ABC_SHASUM}\" | sha256sum -c\nRUN tar -xzf *.tar.gz && rm *.tar.gz\n\nWORKDIR /bitcoin-abc-${BITCOIN_ABC_VERSION}\n\nRUN sed -i '/AC_PREREQ/a\\AR_FLAGS=cr' src/univalue/configure.ac\nRUN sed -i '/AX_PROG_CC_FOR_BUILD/a\\AR_FLAGS=cr' src/secp256k1/configure.ac\nRUN sed -i s:sys/fcntl.h:fcntl.h: src/compat.h\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" LDFLAGS=-L`ls -d /opt/db*`/lib/ CPPFLAGS=-I`ls -d /opt/db*`/include/ \\\n    BDB_LIBS=\"-L${BERKELEYDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n    --prefix=${BITCOIN_ABC_PREFIX} \\\n    --mandir=/usr/share/man \\\n    --disable-tests \\\n    --disable-bench \\\n    --disable-ccache \\\n    --with-gui=no \\\n    --with-utils \\\n    --with-libs \\\n    --with-daemon \\\n    --without-seeder\nRUN make -j4\nRUN make install\nRUN strip ${BITCOIN_ABC_PREFIX}/bin/bitcoin-cli\nRUN strip ${BITCOIN_ABC_PREFIX}/bin/bitcoin-tx\nRUN strip ${BITCOIN_ABC_PREFIX}/bin/bitcoind\nRUN strip ${BITCOIN_ABC_PREFIX}/lib/libbitcoinconsensus.a\nRUN strip ${BITCOIN_ABC_PREFIX}/lib/libbitcoinconsensus.so.0.0.0\n\n# Build stage for compiled artifacts\nFROM alpine:3.8\n\nLABEL maintainer.0=\"Jo√£o Fonseca (@joaopaulofonseca)\" \\\n  maintainer.1=\"Pedro Branco (@pedrobranco)\" \\\n  maintainer.2=\"Rui Marinho (@ruimarinho)\"\n\nRUN adduser -S bitcoin\nRUN apk --no-cache add \\\n  boost \\\n  boost-program_options \\\n  curl \\\n  libevent \\\n  libressl \\\n  libzmq \\\n  su-exec\n\nENV BITCOIN_ABC_DATA=/home/bitcoin/.bitcoin\nENV BITCOIN_ABC_VERSION=0.18.0\nENV BITCOIN_ABC_PREFIX=/opt/bitcoin-abc-${BITCOIN_ABC_VERSION}\nENV PATH=${BITCOIN_ABC_PREFIX}/bin:$PATH\n\nCOPY --from=bitcoin-abc /opt /opt\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nVOLUME [\"/home/bitcoin/.bitcoin\"]\n\nEXPOSE 8332 8333 18332 18333 18444\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"bitcoind\"]\n"
}