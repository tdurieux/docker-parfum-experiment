{
  "startTime": 1674235156455,
  "endTime": 1674235156565,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# ARG usage in FROMs has to go up here in global\n\nARG jupyterq_img=kxsys/jupyterq:latest\nARG nlp_img=kxsys/nlp:latest\n\n####\nFROM $nlp_img AS nlp\nFROM $jupyterq_img AS jupyterq\n\nFROM jupyterq AS mlnotebooks\n\nCOPY requirements.txt README.md /opt/kx/mlnotebooks/\nCOPY data/ /opt/kx/mlnotebooks/data/\nCOPY images/ /opt/kx/mlnotebooks/images/\nCOPY notebooks/ /opt/kx/mlnotebooks/notebooks/\nCOPY utils/ /opt/kx/mlnotebooks/utils/\n#hack, better way, tensorflow-gpu should be used if possible\nRUN sed -i s/tensorflow-gpu/tensorflow/g /opt/kx/mlnotebooks/requirements.txt\n\n# do not clean here, its cleaned later!\nRUN apt-get update \\\n\t&& apt-get -yy update\n\nARG port=8888\nENV PORT=${port}\nEXPOSE ${port}/tcp\n\nCOPY --from=nlp /opt/kx/nlp/ /opt/kx/nlp/\nCOPY --from=nlp /opt/kx/q/nlp/ /opt/kx/q/nlp/\n\nARG VCS_REF=dev\nARG BUILD_DATE=dev\n\nLABEL\torg.label-schema.schema-version=\"0.1\" \\\n\torg.label-schema.name=jupyterq \\\n\torg.label-schema.description=\"Machine Learning notebook examples for kdb+\" \\\n\torg.label-schema.vendor=\"Kx\" \\\n\torg.label-schema.license=\"Apache-2.0\" \\\n\torg.label-schema.url=\"https://code.kx.com/q/ml/\" \\\n\torg.label-schema.version=\"${VERSION:-dev}\" \\\n\torg.label-schema.vcs-url=\"https://github.com/KxSystems/mlnotebooks.git\" \\\n\torg.label-schema.vcs-ref=\"$VCS_REF\" \\\n\torg.label-schema.build-date=\"$BUILD_DATE\" \\\n\torg.label-schema.docker.cmd=\"docker run -it -v 8888:8888 kxsys/nlp\"\n\nRUN apt-get -yy --no-install-recommends install build-essential \\\n\t&& apt-get clean \\\n\t&& find /var/lib/apt/lists -type f -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN chown -R kx:kx /opt/kx/mlnotebooks\n\nUSER kx\n# jupyterq is the base, install requirements for nlp and mlnotebooks\nRUN . /opt/conda/etc/profile.d/conda.sh \\\n\t&& conda activate kx \\\n\t&& conda install --file /opt/kx/nlp/requirements.txt \\\n\t&& pip install --no-cache-dir -r /opt/kx/mlnotebooks/requirements.txt \\\n\t&& conda install -c anaconda graphviz \\\n\t&& conda clean -y --all \\\n\t&& python -m spacy download en\n\nUSER root\n\nENTRYPOINT [\"/init\"]\nCMD [\"/bin/sh\", \"-l\", \"-c\", \"printf '\\npoint your browser at http://127.0.0.1:%s/tree/notebooks/\\n\\n' $PORT && exec jupyter notebook --notebook-dir=/opt/kx/mlnotebooks --ip='0.0.0.0' --port=$PORT --no-browser\"]\n"
}