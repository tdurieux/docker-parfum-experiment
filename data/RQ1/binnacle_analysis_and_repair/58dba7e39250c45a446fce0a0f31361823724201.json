{
  "startTime": 1674253126929,
  "endTime": 1674253127215,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# ch-test-scope: full\n# ch-test-arch-exclude: aarch64  # only x86-64 and ppc64le supported by nVidia\n\n# This Dockerfile demonstrates a multi-stage build. With a single-stage build\n# that brings along the nVidia build environment, the resulting unpacked image\n# is 2.9 GiB; with the multi-stage build, it's 146 MiB.\n#\n# See: https://docs.docker.com/develop/develop-images/multistage-build\n\n\n## Stage 1: Install the nVidia build environment and build a sample app.\nFROM ubuntu:16.04\n\n# OS packages needed\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n      gnupg-curl \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\n# Install CUDA from nVidia.\n# See: https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1704&target_type=debnetwork\nWORKDIR /usr/local/src\nRUN wget -nv https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1704/x86_64/cuda-repo-ubuntu1704_9.1.85-1_amd64.deb\nRUN dpkg --install cuda-repo-ubuntu1704_9.1.85-1_amd64.deb\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1704/x86_64/7fa2af80.pub\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y cuda-toolkit-9-1 && rm -rf /var/lib/apt/lists/*;\n\n# Build the sample app we'll use to test.\nWORKDIR /usr/local/cuda-9.1/samples/0_Simple/matrixMulCUBLAS\nRUN make\n\n\n## Stage 2: Copy the built sample app into a clean Ubuntu image.\nFROM ubuntu:16.04\n\nCOPY --from=0 /usr/local/cuda-9.1/samples/0_Simple/matrixMulCUBLAS /\n\n# This is the one nVidia shared library that the sample app needs. We could be\n# smarter about finding this path. However, one thing to avoid is copying in\n# all of /usr/local/cuda-9.1/targets/x86_64-linux/lib, because that directory\n# is 1.3GiB.\nCOPY --from=0 /usr/local/cuda-9.1/targets/x86_64-linux/lib/libcublas.so.9.1.181 /usr/local/lib\nRUN ldconfig\n"
}