{
  "startTime": 1674246846910,
  "endTime": 1674246847477,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ffmpeg_gpu:latest\nLABEL maintainer=\"Erwan BERNARD https://github.com/edmBernard/DockerFiles\"\n\nRUN add-apt-repository \"deb http://security.ubuntu.com/ubuntu xenial-security main\"\n\n# Pick up some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libjasper-dev \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p \"/home/dev/lib/opencv\"\nENV OPENCV_DIR \"/home/dev/lib/opencv\"\n\n# download opencv4\nRUN cd \"$OPENCV_DIR\" && \\\n    wget https://github.com/opencv/opencv/archive/4.1.0.zip && \\\n    unzip 4.1.0.zip && \\\n    rm 4.1.0.zip\n    # git clone https://github.com/opencv/opencv.git  <-- don't work anymore : GnuTLS recv error\n\n# download opencv4 contrib\nRUN cd \"$OPENCV_DIR\" && \\\n    wget https://github.com/opencv/opencv_contrib/archive/4.1.0.zip && \\\n    unzip 4.1.0.zip && \\\n    rm 4.1.0.zip\n    # git clone https://github.com/opencv/opencv_contrib.git  <-- don't work anymore : GnuTLS recv error\n\n# build opencv4\nRUN cd \"$OPENCV_DIR/opencv-4.1.0\" && mkdir build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D WITH_CUDA=ON \\\n    # -D WITH_NVCUVID=ON \\\n    -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D INSTALL_C_EXAMPLES=OFF \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D OPENCV_EXTRA_MODULES_PATH=\"$OPENCV_DIR/opencv_contrib-4.1.0/modules\" \\\n    -D OPENCV_ENABLE_NONFREE=ON \\\n    -D BUILD_EXAMPLES=OFF \\\n    -D BUILD_TESTS=OFF \\\n    -D BUILD_PERF_TESTS=OFF \\\n    -D WITH_IPP=ON .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' && \\\n    ldconfig && \\\n    cd .. && rm -r build\n\n"
}