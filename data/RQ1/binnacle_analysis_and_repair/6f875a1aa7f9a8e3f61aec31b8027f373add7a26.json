{
  "startTime": 1674245517306,
  "endTime": 1674245517495,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV TZ=America/Chicago\nRUN    ln --symbolic --no-dereference --force /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone\n\nRUN apt update                                                          \\\n    && apt upgrade --yes \\\n    && apt install --no-install-recommends --yes \\\n           autoconf build-essential curl flex gcc libffi-dev libmpfr-dev \\\n           libtool make maven opam openjdk-8-jdk pandoc pkg-config python3 \\\n           zlib1g-dev libsecp256k1-dev netcat && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\nRUN    git clone 'https://github.com/z3prover/z3' --branch=z3-4.6.0 \\\n    && cd z3                                                        \\\n    && python scripts/mk_make.py                                    \\\n    && cd build                                                     \\\n    && make -j8                                                     \\\n    && make install                                                 \\\n    && cd ../..                                                     \\\n    && rm -rf z3\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN    groupadd --gid $GROUP_ID user                                        \\\n    && useradd --create-home --uid $USER_ID --shell /bin/sh --gid user user\n\nUSER $USER_ID:$GROUP_ID\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.28.0\n\nADD .build/k/k-distribution/src/main/scripts/bin/k-configure-opam-dev .build/k/k-distribution/src/main/scripts/bin/k-configure-opam-common /home/user/.tmp-opam/bin/\nADD .build/k/k-distribution/src/main/scripts/lib/opam  /home/user/.tmp-opam/lib/opam/\nRUN    cd /home/user \\\n    && ./.tmp-opam/bin/k-configure-opam-dev\n\nENV LC_ALL=C.UTF-8\nADD --chown=user:user .build/k/haskell-backend/src/main/native/haskell-backend/stack.yaml /home/user/.tmp-haskell/\nADD --chown=user:user .build/k/haskell-backend/src/main/native/haskell-backend/src/main/haskell/kore/package.yaml /home/user/.tmp-haskell/src/main/haskell/kore/\nRUN    cd /home/user/.tmp-haskell \\\n    && stack build --only-snapshot --test --bench --haddock --library-profiling\n"
}