{
  "startTime": 1674234364133,
  "endTime": 1674234364196,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ============================================================================================================================\n# Building Environment\n# ============================================================================================================================\nFROM node:9.6.1 as builder\n\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\nCOPY package.json /usr/src/app/package.json\nRUN npm install && npm cache clean --force;\nRUN npm install react-scripts@1.1.1 -g && npm cache clean --force;\n\nCOPY . /usr/src/app\n\nARG PUBLIC_URL\nENV PUBLIC_URL ${PUBLIC_URL}\n\nARG HOST_ENV\nRUN node -r dotenv/config ./node_modules/.bin/react-scripts build dotenv_config_path=${HOST_ENV}.env\n\n\n# ============================================================================================================================\n# Runtime environment\n# docker run -it --rm alpine /bin/ash\n# ============================================================================================================================\nFROM nginx:1.13.9-alpine\n\nRUN rm -rf /etc/nginx/conf.d\nCOPY nginx.conf /etc/nginx\n\nCOPY --from=builder /usr/src/app/build /usr/share/nginx/html\n\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}