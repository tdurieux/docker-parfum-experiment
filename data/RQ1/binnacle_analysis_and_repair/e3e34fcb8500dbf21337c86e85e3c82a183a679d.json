{
  "startTime": 1674234007108,
  "endTime": 1674234007515,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t find3 .\n# mkdir /tmp/find3\n# docker run -p 11883:1883 -p 8003:8003 -v /tmp/find3:/data -t find3\n\nFROM ubuntu:18.04\n\nENV GOLANG_VERSION 1.11\nENV PATH=\"/usr/local/go/bin:/usr/local/work/bin:${PATH}\"\nENV GOPATH /usr/local/work\nENV GO111MODULE=on\n# RUN apt-get update && apt-get -y upgrade && \\\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y wget git libc6-dev make pkg-config g++ gcc mosquitto-clients mosquitto python3 python3-dev python3-pip python3-setuptools python3-wheel supervisor libfreetype6-dev python3-matplotlib python3-scipy python3-numpy libopenblas-dev libblas-dev liblapack-dev gfortran && \\\n\tmkdir /usr/local/work && \\\n\trm -rf /var/lib/apt/lists/* && \\\n\tset -eux; \\\n\n# this \"case\" statement is generated via \"update.sh\"\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n\t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499' ;; \\\n\t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd' ;; \\\n\t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9' ;; \\\n\t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e' ;; \\\n\t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272' ;; \\\n\t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15' ;; \\\n\t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \\\n\t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \\\n\tesac; \\\n\n\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \\\n\twget -O go.tgz \"$url\"; \\\n\techo \"${goRelSha256}  *go.tgz\" | sha256sum -c -; \\\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\n\tif [ \"$goRelArch\" = 'src' ]; then \\\n\t\techo >&2; \\\n\t\techo >&2 'error: UNIMPLEMENTED'; \\\n\t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \\\n\t\techo >&2; \\\n\t\texit 1; \\\n\tfi; \\\n\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version && \\\n\tmkdir /build && cd /build && \\\n\tgit clone https://github.com/schollz/find3 && \\\n\tmkdir /data && \\\n\tmkdir /app && \\\n\techo '#!/bin/bash\\n\\\npkill -9 mosquitto\\n\\\ncp -R -u -p /app/mosquitto_config /data\\n\\\nmosquitto -d -c /data/mosquitto_config/mosquitto.conf\\n\\\nmkdir -p /data/logs\\n\\\n/usr/bin/supervisord\\n'\\\n> /app/startup.sh && \\\n\tchmod +x /app/startup.sh && echo '[supervisord]\\n\\\nnodaemon=true\\n\\\n[program:main]\\n\\\ndirectory=/app/main\\n\\\ncommand=/app/main/main -debug -data /data/data -mqtt-dir /data/mosquitto_config\\n\\\npriority=1\\n\\\nstdout_logfile=/data/logs/main.stdout\\n\\\nstdout_logfile_maxbytes=0\\n\\\nstderr_logfile=/data/logs/main.stderr\\n\\\nstderr_logfile_maxbytes=0\\n\\\n[program:ai]\\n\\\ndirectory=/app/ai\\n\\\ncommand=make production\\n\\\npriority=2\\n\\\nstdout_logfile=/data/logs/ai.stdout\\n\\\nstdout_logfile_maxbytes=0\\n\\\nstderr_logfile=/data/logs/ai.stderr\\n\\\nstderr_logfile_maxbytes=0\\n'\\\n> /etc/supervisor/conf.d/supervisord.conf && \\\n\tmkdir /app/mosquitto_config && \\\n\ttouch /app/mosquitto_config/acl  && \\\n\ttouch /app/mosquitto_config/passwd  && echo 'allow_anonymous false\\n\\\nacl_file /data/mosquitto_config/acl\\n\\\npassword_file /data/mosquitto_config/passwd\\n\\\npid_file /data/mosquitto_config/pid\\n'\\\n> /app/mosquitto_config/mosquitto.conf && \\\n\techo \"moving to find3\" && cd /build/find3/server/main  && go build -v && \\\n\techo \"moving main\" && mv /build/find3/server/main /app/main && \\\n\techo \"moving to ai\" && cd /build/find3/server/ai  && python3 -m pip install -r requirements.txt && \\\n\techo \"moving ai\" && mv /build/find3/server/ai /app/ai && \\\n\techo \"removing go srces\" && rm -rf /usr/local/work/src && \\\n\techo \"purging packages\" && apt-get remove -y --auto-remove git libc6-dev pkg-config g++ gcc && \\\n\techo \"autoclean\" && apt-get autoclean && \\\n\techo \"clean\" && apt-get clean && \\\n\techo \"autoremove\" && apt-get autoremove && \\\n\techo \"rm trash\" && rm -rf ~/.local/share/Trash/* && \\\n\techo \"rm go\" && rm -rf /usr/local/go* && \\\n\techo \"rm perl\" && rm -rf /usr/share/perl* && \\\n\techo \"rm build\" && rm -rf /build* && \\\n\techo \"rm doc\" && rm -rf /usr/share/doc*\n\nWORKDIR /app\nCMD [\"/app/startup.sh\"]\n\n"
}