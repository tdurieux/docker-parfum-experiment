{
  "startTime": 1674236043307,
  "endTime": 1674236044033,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 37,
        "columnStart": 25,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 64,
        "columnStart": 25,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM nginx:latest\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN echo \"America/Sao_Paulo\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\n\n### UPDATE DEBIAN\nRUN apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y\n\nRUN apt-get update -y && apt-get install -y \\\n    sudo \\\n    htop \\\n    curl \\\n    git \\\n    libpng-dev \\\n    libjpeg-dev \\\n    libpq-dev \\\n    vim \\\n    imagemagick \\\n    mysql-client \\\n    bash-completion \\\n    libfontconfig1 \\\n    bzip2 \\\n    build-essential \\\n    software-properties-common \\\n    locales \\\n    wget \\\n    openconnect \\\n    netcat \\\n    tig \\\n    ca-certificates \\\n    apt-transport-https \\\n    xz-utils \\\n    libfontconfig1 \\\n    rsync \\\n    gnupg \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n### INSTALL PHP-FPM AND EXTENSION\n## Add PHP7.2 source\nRUN wget https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -\nRUN echo \"deb https://packages.sury.org/php/ stretch main\" | sudo tee /etc/apt/sources.list.d/php.list\n\nRUN apt-get update -y && apt-get install -y \\\n    php7.2-fpm \\\n    php7.2-cli \\\n    php7.2-common \\\n    php7.2-curl \\\n    php7.2-mbstring \\\n    php7.2-mysql \\\n    php7.2-xml \\\n    php7.2-gd \\\n    php7.2-json \\\n    php7.2-ldap \\\n    php7.2-sqlite3 \\\n    php7.2-xmlrpc \\\n    php-geoip \\\n    php-imagick \\\n    php-imap \\\n    php-xdebug \\\n    php-xml \\\n    php-apcu \\\n    libfcgi0ldbl \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n### CONFIGURE LOCALES\n#ENV LOCALE_DEFAULT en_US.UTF8\nENV LOCALE_DEFAULT pt_BR.UTF8\nRUN echo \"LANGUAGE=$LOCALE_DEFAULT\" >> /etc/environment\nRUN echo \"LANG=$LOCALE_DEFAULT\"     >> /etc/environment\nRUN echo \"LC_ALL=$LOCALE_DEFAULT\"   >> /etc/environment\nRUN locale-gen $LOCALE_DEFAULT\nRUN dpkg-reconfigure locales\n\n### INSTALL COMPOSER\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_DISABLE_XDEBUG_WARN 1\nRUN curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer && \\\n    composer self-update\n\n### INSTALL NODEJS\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 10.x\n\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -\nRUN curl -f -sL https://deb.nodesource.com/setup_$NODE_VERSION | bash -\nRUN apt-get update -y && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN npm install npm -g && npm cache clean --force;\nRUN npm install bower gulp -g && npm cache clean --force;\nRUN npm cache verify\n\n### INSTALL DRUSH\nRUN wget -O drush.phar https://github.com/drush-ops/drush/releases/download/8.1.18/drush.phar\nRUN chmod +x drush.phar\nRUN mv drush.phar /usr/local/bin/drush\n\nRUN apt-get install --no-install-recommends unzip --yes && rm -rf /var/lib/apt/lists/*;\n\n### CONFIGURE PHP-FPM\nRUN echo \"xdebug.max_nesting_level=9999\" >> /etc/php/7.2/mods-available/xdebug.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i \"s/memory_limit = 128M/memory_limit = 1256M/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i \"s/display_errors = Off/display_errors = stderr/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i \"s/post_max_size = 8M/post_max_size = 30M/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 30M/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i \"s/;opcache.enable=0/opcache.enable=1/\" /etc/php/7.2/fpm/php.ini && \\\n    sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.2/fpm/php-fpm.conf && \\\n    sed -i '/^listen = /clisten = 9000' /etc/php/7.2/fpm/pool.d/www.conf && \\\n    sed -i '/^listen.allowed_clients/c;listen.allowed_clients =' /etc/php/7.2/fpm/pool.d/www.conf && \\\n    sed -i '/^;catch_workers_output/ccatch_workers_output = yes' /etc/php/7.2/fpm/pool.d/www.conf && \\\n    sed -i '/^;env\\[TEMP\\] = .*/aenv[DB_PORT_3306_TCP_ADDR] = $DB_PORT_3306_TCP_ADDR' /etc/php/7.2/fpm/pool.d/www.conf\n\n### APPLY NGINX CONFIGURATION\nRUN mkdir -p /tmp/logs\nRUN chmod 777 /tmp/logs\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/fastcgi.conf /etc/nginx/fastcgi.conf\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\n\n### CREATE USER FOR DEVELOPMENT\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    useradd -u 1000 -G www-data,sudo -d /pece --shell /bin/bash -m pece && \\\n    echo \"secret\\nsecret\" | passwd pece\n\nCOPY ./docker/bash.bashrc /etc/bash.bashrc\nRUN chmod +x /etc/bash.bashrc\nADD ./docker/docker-entrypoint.sh /pece/docker-entrypoint.sh\nRUN chmod +x /pece/docker-entrypoint.sh\n\nUSER pece\nWORKDIR /pece\n\nRUN mkdir ~/.drush\n# RUN drush init -y -bg --fallback=/usr/local/bin/drush\nRUN cd ~/.drush && git clone -b local_workflow_improvements --single-branch https://github.com/TallerWebSolutions/kraftwagen.git\n# RUN cd ~/.drush && drush cc drush\n\nCMD [ \"bash\" ]\nENTRYPOINT [\"/pece/docker-entrypoint.sh\"]\n"
}