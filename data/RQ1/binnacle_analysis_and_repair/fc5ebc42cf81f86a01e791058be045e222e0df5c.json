{
  "startTime": 1674253173949,
  "endTime": 1674253174081,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:latest\n\nEXPOSE 3000\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        g++ \\\n        make \\\n        wget \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\n# Install Thrift 0.10.0\nRUN wget -q https://archive.apache.org/dist/thrift/0.10.0/thrift-0.10.0.tar.gz && \\\n    tar -xzf thrift-0.10.0.tar.gz && \\\n    cd thrift-0.10.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-python && \\\n    make && \\\n    ln -n ~/thrift-0.10.0/compiler/cpp/thrift /usr/local/bin/thrift && rm thrift-0.10.0.tar.gz\n\nADD frontend/package.json /modeldb/frontend/package.json\nRUN cd /modeldb/frontend && \\\n    npm install && npm cache clean --force;\n\nADD . /modeldb\n\nWORKDIR /modeldb/frontend\n\nRUN mkdir -p './thrift' && \\\n    thrift -r -out './thrift' -gen js:node '../thrift/ModelDB.thrift' && \\\n    npm install && npm cache clean --force;\n\nENTRYPOINT [\"/modeldb/dockerbuild/wait_for_backend.sh\"]\nCMD [\"backend\"]"
}