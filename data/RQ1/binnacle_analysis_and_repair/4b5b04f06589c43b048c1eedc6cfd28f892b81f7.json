{
  "startTime": 1674249490698,
  "endTime": 1674249490884,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lambci/lambda-base:build\n\nARG ERLANG_VERSION\nARG ELIXIR_VERSION\n\nWORKDIR /work\n\nADD https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/Precompiled.zip /work/\nADD http://erlang.org/download/otp_src_${ERLANG_VERSION}.tar.gz /work/\n\n\nRUN tar xf otp_src_${ERLANG_VERSION}.tar.gz && \\\n  cd /work/otp_src_${ERLANG_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-hipe --without-termcap --without-javac \\\n    --without-dialyzer --without-diameter --without-debugger --without-edoc \\\n    --without-eldap --without-erl_docgen --without-mnesia --without-observer \\\n    --without-odbc --without-tftp --without-wx --without-xmerl --without-otp_mibs \\\n    --without-reltool --without-snmp --without-tftp \\\n    --without-common_test --without-eunit --without-ftp --without-hipe \\\n    --without-megaco --without-sasl --without-syntax_tools --without-tools \\\n    --prefix=/opt && \\\n  make install && \\\n  cd /opt && unzip /work/Precompiled.zip && \\\n  rm -r /opt/lib/erlang/lib/*/src /opt/lib/erlang/misc /opt/lib/erlang/usr && \\\n  rm -r /opt/lib/elixir/lib /opt/lib/eex/lib /opt/lib/logger/lib /opt/man && \\\n  rm -r /opt/lib/ex_unit/lib /opt/lib/mix/lib /opt/lib/iex && rm otp_src_${ERLANG_VERSION}.tar.gz\n\nCOPY bootstrap /opt/\nCOPY runtime/ /work/runtime/\n\nRUN cd /work/runtime && \\\n  mix local.hex --force && \\\n  mix test && \\\n  MIX_ENV=prod mix package && \\\n  rm -r _build/prod/lib/*/.mix _build/prod/lib/runtime/consolidated && \\\n  cp -r _build/prod/lib/* /opt/lib\n\n# Package\nRUN cd /opt && \\\n  zip -yr /tmp/runtime.zip ./*\n\n  # zip -yr /tmp/runtime.zip bootstrap LICENSE bin/elixir bin/erl lib/eex/ebin lib/exixir/ebin \\\n  #   lib/jason/ebin lib/logger/ebin lib/runtime/ebin lib/erlang\n"
}