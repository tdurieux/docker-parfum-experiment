{
  "startTime": 1674244253618,
  "endTime": 1674244253918,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 0,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 0,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ----------------------------------------------------------------------\n# Numenta Platform for Intelligent Computing (NuPIC)\n# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from\n# Numenta, Inc. a separate commercial license for this software code, the\n# following terms and conditions apply:\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Affero Public License version 3 as\n# published by the Free Software Foundation.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n# See the GNU Affero Public License for more details.\n#\n# You should have received a copy of the GNU Affero Public License\n# along with this program.  If not, see http://www.gnu.org/licenses.\n#\n# http://numenta.org/licenses/\n# ----------------------------------------------------------------------\n\nFROM ubuntu:14.04\n\n# Install dependencies\nRUN apt-get update; \\\n apt-get install --no-install-recommends -y wget git-core default-jdk lib32stdc++6 lib32z1 && rm -rf /var/lib/apt/lists/*;\n\n# Download and install android-sdk\nRUN wget -qO- https://dl.google.com/android/android-sdk_r24.2-linux.tgz | /bin/tar xz\nRUN mkdir -p /usr/local/opt; mv android-sdk-linux /usr/local/opt/android-sdk\nENV ANDROID_HOME /usr/local/opt/android-sdk\n\n# Add android tools and platform tools to PATH\nENV PATH $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools\n\n# Update android latest tools\nRUN echo y | android update sdk --all --no-ui --force --filter \\\ntools,platform-tools,extra-android-m2repository,extra-google-m2repository,\\\nextra-android-support\n# Version specific build tools and system images\nRUN echo y | android update sdk --all --no-ui --force --filter \\\nandroid-22,build-tools-22.0.1,android-16,sys-img-armeabi-v7a-android-16\n\n# Set up emulator\nRUN echo no | android create avd --force -n test -t android-16\nRUN echo \"emulator -avd test -no-boot-anim -no-skin -no-audio -no-window -force-32bit &\" > /usr/local/bin/start-emulator;\\\nchmod a+x /usr/local/bin/start-emulator\n\n# Download latest local dynamodb tool\nWORKDIR /opt/numenta/dynamodb\nRUN wget -qO- https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz | tar xz\nRUN echo \"java -Djava.library.path=/opt/numenta/dynamodb/DynamoDBLocal_lib -jar /opt/numenta/dynamodb/DynamoDBLocal.jar -inMemory -sharedDb &\" > /usr/local/bin/start-dynamodb;\\\nchmod a+x /usr/local/bin/start-dynamodb\n\n# Create \"products\" mount point\nRUN mkdir -p /opt/numenta/products/taurus-mobile/android\nRUN echo \"echo 'Map your repository to \\\"/opt/numenta/products\\\"'\" > \\\n/opt/numenta/products/taurus-mobile/android/gradlew;\\\nchmod +x /opt/numenta/products/taurus-mobile/android/gradlew\nVOLUME /opt/numenta/products\n\n# Move application signing keystore to default location\nADD .keys/htmit.keystore /etc/numenta/products/keys/htmit.keystore\n\n# Build taurus-mobile\nWORKDIR /opt/numenta/products/taurus-mobile/android\nCMD start-dynamodb;start-emulator;adb wait-for-device;./gradlew clean build connectedCheck\n\n"
}