{
  "startTime": 1674252497119,
  "endTime": 1674252497395,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG region\nFROM 520713654638.dkr.ecr.$region.amazonaws.com/sagemaker-tensorflow-scriptmode:1.11.0-cpu-py3\n\nRUN echo $region\nRUN buildDeps=\" \\\n        wget \\\n        build-essential \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $buildDeps \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n##############################################################\n# Horovod & its dependencies\n##############################################################\n\n# Install Open MPI\nRUN mkdir /tmp/openmpi && \\\n    cd /tmp/openmpi && \\\n    wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz && \\\n    tar zxf openmpi-3.0.0.tar.gz && \\\n    cd openmpi-3.0.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-orterun-prefix-by-default && \\\n    make -j $(nproc) all && \\\n    make install && \\\n    ldconfig && \\\n    rm -rf /tmp/openmpi && rm openmpi-3.0.0.tar.gz\n\n# Install Horovod, temporarily using CUDA stubs\nRUN ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs && \\\n    HOROVOD_CPU_ALLREDUCE=MPI HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod && \\\n    ldconfig\n\n# Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real && \\\n    echo '#!/bin/bash' > /usr/local/bin/mpirun && \\\n    echo 'mpirun.real --allow-run-as-root \"$@\"' >> /usr/local/bin/mpirun && \\\n    chmod a+x /usr/local/bin/mpirun\n\n# Configure OpenMPI to run good defaults:\n#   --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0\nRUN echo \"hwloc_base_binding_policy = none\" >> /usr/local/etc/openmpi-mca-params.conf && \\\n    echo \"rmaps_base_mapping_policy = slot\" >> /usr/local/etc/openmpi-mca-params.conf\n\nENV LD_LIBRARY_PATH=/usr/local/openmpi/lib:$LD_LIBRARY_PATH\nENV PATH /usr/local/openmpi/bin/:$PATH\nENV PATH=/usr/local/nvidia/bin:$PATH\n\nENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1\n\n# SSH. Partially taken from https://docs.docker.com/engine/examples/running_ssh_service/\nRUN apt-get update && apt-get install -y --no-install-recommends openssh-server && \\\n    mkdir -p /var/run/sshd && rm -rf /var/lib/apt/lists/*;\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# Create SSH key.\nRUN mkdir -p /root/.ssh/ && \\\n  ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \\\n  cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \\\n  printf \"Host *\\n  StrictHostKeyChecking no\\n\" >> /root/.ssh/config\n\n# Hostname Fix\nCOPY docker/resources/changehostname.c /\nCOPY docker/resources/change-hostname.sh /\nCOPY docker/resources/change-hostname.sh /usr/local/bin/change-hostname.sh\n\nRUN chmod +x /usr/local/bin/change-hostname.sh\nRUN chmod +x /change-hostname.sh\n\nRUN pip install --no-cache-dir keras\nRUN pip install --no-cache-dir retrying\n##############################################################"
}