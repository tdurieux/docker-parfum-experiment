{
  "startTime": 1674251858217,
  "endTime": 1674251858448,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 21,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 21,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nRUN apt update -y && apt install --no-install-recommends -y \\\n        git \\\n        cmake \\\n        g++ \\\n        make \\\n        libleveldb-dev libsnappy-dev \\\n        curl \\\n        sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && \\\n    apt install --no-install-recommends -y \\\n        nodejs \\\n        bash jq bc \\\n        python3 \\\n        python && rm -rf /var/lib/apt/lists/*;\n\n#RUN git clone --recursive https://github.com/ethereum/cpp-ethereum --branch develop --single-branch --depth 1\nRUN git clone https://github.com/jwasinger/cpp-ethereum --branch ewasm-json-trace --single-branch\nRUN cd cpp-ethereum && git submodule update --init\nRUN cd cpp-ethereum/hera && git fetch origin && git checkout evm-trace\n\nRUN cd cpp-ethereum && echo \"{}\"                                         \\\n          | jq \".+ {\\\"repo\\\":\\\"$(git config --get remote.origin.url)\\\"}\" \\\n          | jq \".+ {\\\"branch\\\":\\\"$(git rev-parse --abbrev-ref HEAD)\\\"}\"  \\\n          | jq \".+ {\\\"commit\\\":\\\"$(git rev-parse HEAD)\\\"}\"               \\\n          > /cpp-ethereum-version.json\n\nRUN cd cpp-ethereum/hera && echo \"{}\"                                    \\\n          | jq \".+ {\\\"repo\\\":\\\"$(git config --get remote.origin.url)\\\"}\" \\\n          | jq \".+ {\\\"branch\\\":\\\"$(git rev-parse --abbrev-ref HEAD)\\\"}\"  \\\n          | jq \".+ {\\\"commit\\\":\\\"$(git rev-parse HEAD)\\\"}\"               \\\n          > /hera-version.json\n\nRUN mkdir -p build\nRUN cd build && cmake ../cpp-ethereum -DCMAKE_BUILD_TYPE=RelWithDebInfo -DHERA=ON -DHERA_DEBUGGING=ON -DHERA_EVM2WASM=ON -DHERA_EVM2WASM_EVM_TRACE=ON\nRUN cd build && make -j8\nRUN cd build && make install\n\nRUN cp cpp-ethereum/scripts/jsonrpcproxy.py /jsonrpcproxy.py\nADD ewasm-testnet-cpp-config.json /ewasm-testnet-cpp-config.json\n\n# ADD cpp-eth.sh /cpp-eth.sh\n\n#USER builder\n#WORKDIR /home/builder\n\n# Export the usual networking ports to allow outside access to the node\nEXPOSE 8545 30303\n\n# ENTRYPOINT [\"/build/test/testeth\"]\n"
}