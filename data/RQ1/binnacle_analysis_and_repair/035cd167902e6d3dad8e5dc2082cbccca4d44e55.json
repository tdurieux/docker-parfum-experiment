{
  "startTime": 1674236898494,
  "endTime": 1674236898608,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Fetch base image\nFROM debian:stretch as qemu\n\nENV QEMU_VERSION 4.0.0\n# Install build dependencies\nRUN apt-get update -qq && apt-get install -yqq \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    xz-utils \\\n    git \\\n    libglib2.0-dev \\\n    libpixman-1-dev \\\n    pkg-config \\\n    python \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f \"https://download.qemu.org/qemu-${QEMU_VERSION}.tar.xz\" -o \"qemu-${QEMU_VERSION}.tar.xz\"\nRUN mkdir qemu && tar xf \"qemu-${QEMU_VERSION}.tar.xz\" --strip-components=1 -C qemu && rm \"qemu-${QEMU_VERSION}.tar.xz\"\nWORKDIR qemu\n\n# Apply patch to fix issues with Go\n# - patches the file \"linux-user/signal.c\"\nRUN curl -f -sSL https://github.com/resin-io/qemu/commit/db186a3f83454268c43fc793a48bc28c41368a6c.patch | patch linux-user/signal.c\n\n# Build qemu-*-static binaries for arm, aarch64, ppc64le\n# - resulting binaries are located in \"/usr/local/bin/qemu-*\"\nARG TARGET_ARCH=arm-linux-user,aarch64-linux-user,ppc64le-linux-user\nRUN mkdir build \\\n && cd build \\\n && ../configure --static --target-list=$TARGET_ARCH  \\\n && make -j $(nproc) install\n\nFROM busybox\nCOPY --from=qemu /usr/local/bin/qemu-arm /qemu-arm\nCOPY --from=qemu /usr/local/bin/qemu-aarch64 /qemu-aarch64\nCOPY --from=qemu /usr/local/bin/qemu-ppc64le /qemu-ppc64le\nADD register.sh /register.sh\nCMD [\"/register.sh\", \"--reset\"]\n"
}