{
  "startTime": 1674252245043,
  "endTime": 1674252245363,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE=gcc:9.1\nFROM $BASE\n\nARG NPROCS=4\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        python3-dev \\\n        python3-pip \\\n        && \\\n    pip3 install --no-cache-dir numpy scipy h5py && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# Install CMake\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_VERSION=3.13.4 && \\\n    CMAKE_VERSION_SHORT=3.13 && \\\n    CMAKE_URL=https://cmake.org/files/v${CMAKE_VERSION_SHORT}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    wget --quiet ${CMAKE_URL} --output-document=${CMAKE_SCRIPT} && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm ${CMAKE_SCRIPT}\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\n# Install OpenMPI\nENV OPENMPI_DIR=/opt/openmpi\nRUN OPENMPI_VERSION=3.1.3 && \\\n    OPENMPI_VERSION_SHORT=3.1 && \\\n    OPENMPI_SHA1=b3c60e2bdd5a8a8e758fd741f9a5bebb84da5e81 && \\\n    OPENMPI_URL=https://download.open-mpi.org/release/open-mpi/v${OPENMPI_VERSION_SHORT}/openmpi-${OPENMPI_VERSION}.tar.bz2 && \\\n    OPENMPI_ARCHIVE=openmpi-${OPENMPI_VERSION}.tar.bz2 && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${OPENMPI_URL} --output-document=${OPENMPI_ARCHIVE} && \\\n    echo \"${OPENMPI_SHA1} ${OPENMPI_ARCHIVE}\" | sha1sum -c && \\\n    mkdir -p openmpi && \\\n    tar -xf ${OPENMPI_ARCHIVE} -C openmpi --strip-components=1 && \\\n    mkdir -p build && cd build && \\\n    ../openmpi/configure --prefix=${OPENMPI_DIR} && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\nENV PATH=${OPENMPI_DIR}/bin:$PATH\n\n# Install LAPACK\nRUN SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    git clone https://github.com/Reference-LAPACK/lapack-release.git && \\\n    cd lapack-release && \\\n    mkdir build && cd build && \\\n    cmake -DCMAKE_Fortran_FLAGS=\"-fPIC\" -DCMAKE_C_FLAGS=\"-fPIC\" .. && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\n\n# Install TPLS's\nENV TRUCHAS_TPL_DIR=/opt/truchas-tpl\nRUN SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    git clone https://gitlab.com/truchas/truchas-tpl.git && \\\n    cd truchas-tpl && \\\n    mkdir build && cd build && \\\n    cmake -C ../config/linux-gcc.cmake -DCMAKE_INSTALL_PREFIX=${TRUCHAS_TPL_DIR} .. && \\\n    make -j${NPROCS} && \\\n    rm -rf ${SCRATCH_DIR}\n\n# Install Truchas\nENV TRUCHAS_DIR=/opt/truchas\nRUN SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    git clone https://gitlab.com/truchas/truchas.git && \\\n    cd truchas && \\\n    mkdir build && cd build && \\\n    cmake -C ../config/gcc-opt.cmake -D TRUCHAS_TPL_DIR=${TRUCHAS_TPL_DIR} -D CMAKE_INSTALL_PREFIX=${TRUCHAS_DIR} .. && \\\n    make -j${NPROCS} && make install && \\\n    rm -rf ${SCRATCH_DIR}\n\n\n\n"
}