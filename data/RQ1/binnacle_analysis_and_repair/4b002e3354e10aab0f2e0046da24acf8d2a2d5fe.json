{
  "startTime": 1674238580068,
  "endTime": 1674238580486,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm-stretch\n\nARG log_errors\nARG display_errors\nARG site_name\nARG app_env\nARG app_secret\nARG trusted_proxies\nARG trusted_hosts\nARG no_reply_address\nARG mailer_url\nARG database_url\nARG git_sha\nARG git_branch\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y libpq-dev libcurl4-openssl-dev libpng-dev libjpeg-dev zlib1g-dev ruby gnupg libfreetype6-dev \\\n  && pecl install apcu_bc-1.0.4 \\\n  && apt-get install --no-install-recommends -y libpq-dev \\\n  && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n  && docker-php-ext-install pdo pdo_pgsql pgsql \\\n  && docker-php-ext-install mbstring curl iconv opcache \\\n  && docker-php-ext-configure gd \\\n            --with-freetype-dir=/usr/include/ \\\n            --with-png-dir=/usr/include \\\n            --with-jpeg-dir=/usr/include \\\n  && docker-php-ext-install gd \\\n  && docker-php-ext-enable apcu opcache gd pdo pdo_pgsql pgsql \\\n  && curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n  && apt-get install --no-install-recommends -y nodejs \\\n  && apt-get install --no-install-recommends -y zip git \\\n  && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n  && php composer-setup.php --install-dir=/usr/bin --filename=composer \\\n  && php -r \"unlink('composer-setup.php');\" \\\n  && rm -r /var/lib/apt/lists/* /tmp/*\nADD package.json      /var/www/\nRUN cd /var/www && npm install && npm cache clean --force;\n\n# PHP-FPM Config\n          # prod only: opcache.validate_timestamps=0\n           # composer dump-autoload --optimize --no-dev --classmap-authoritative\nRUN echo \"[www]                                        \\n\\\n          user = www-data                              \\n\\\n          group = www-data                             \\n\\\n          listen = 127.0.0.1:9000                      \\n\\\n          listen.backlog = 65536                       \\n\\\n          pm = static                                  \\n\\\n          pm.max_children = 2                          \\n\\\n          ;pm.max_requests = 0                         \\n\\\n          ;pm.status_path = /status                    \\n\\\n          php_admin_value[error_reporting]=0           \\n\\\n          php_admin_flag[log_errors] = ${log_errors}   \\n\\\n          php_flag[display_errors] = ${display_errors} \\n\\\n          php_value[memory_limit] = 256M               \\n\\\n          php_value[opcache.enable] = 1                           \\n\\\n          php_value[opcache.max_accelerated_files] = 20000        \\n\\\n          php_value[opcache.memory_consumption]=256               \\n\\\n          php_value[realpath_cache_size]=4096K                    \\n\\\n          php_value[realpath_cache_ttl]=600                       \"  > /usr/local/etc/php-fpm.d/www.conf\n\n# Generate ENV\nADD ./.env.erb /tmp\nRUN erb -T - site_name=$site_name                           \\\n    app_env=$app_env                                        \\\n    app_secret=$app_secret                                  \\\n    trusted_proxies=$trusted_proxies                        \\\n    trusted_hosts=$trusted_hosts                            \\\n    database_url=$database_url                              \\\n    aws_ssm_name_db_url=$aws_ssm_name_db_url                \\\n    aws_ssm_region=$aws_ssm_region                          \\\n    no_reply_address=$no_reply_address                      \\\n    mailer_url=$mailer_url                                  \\\n    git_sha=$git_sha                                        \\\n    git_branch=$git_branch                                  \\\n    /tmp/.env.erb > /tmp/.env\n\n# build prod-like stuff\nADD assets/           /var/www/assets/\nADD config/           /var/www/config/\nADD public/           /var/www/public/\nADD src/              /var/www/src/\nADD templates/        /var/www/templates/\nADD translations/     /var/www/translations/\nADD composer.json     /var/www/\nADD fontello.json     /var/www/\nADD phpunit.xml.dist  /var/www/\nADD webpack.config.js /var/www\n\n# uncomment me for lighter container and slower build\n# RUN apt-get purge   -y ruby\n\nRUN echo \"cd /var/www; \\\n          cp /tmp/.env /var/www/.env; \\\n          chown www-data:www-data /var/www/.env; \\\n          composer install; npm run build-${app_env}; \\\n          cp /tmp/.env /var/www/.env && rm /tmp/.env && rm /tmp/env.erb;\\\n          chown www-data:www-data /var/www/.env; \\\n          mkdir -p ./public/media/; chown www-data:www-data public/media -R; \\\n          mkdir -p ./public/submission_images/; chown www-data:www-data public/submission_images -R; \\\n          mkdir -p ./var/cache/; chown www-data:www-data ./var/cache/ -R; \\\n          bin/console doctrine:migrations:migrate --no-interaction; \\\n          bin/console app:user:add -a -p devdevdev dev; \\\n          cd /var/www/public; php-fpm\"> /start.sh && chmod +x /start.sh\n\nWORKDIR /var/www/public\nCMD /start.sh\n\n"
}