{
  "startTime": 1674246603781,
  "endTime": 1674246604151,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04.2\n\nRUN apt-get update && \\\n    apt-get -q --no-install-recommends -y install bc xz-utils ca-certificates syslinux xorriso && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /usr/src\n\nENV KERNEL_VERSION 4.0.9\nCOPY os-base.tar.xz /usr/src/\nRUN tar xJf os-base.tar.xz && \\\n    tar xf dist/kernel/linux-*.tar -C dist/kernel && rm os-base.tar.xz\n\nRUN mkdir -p root && \\\n    cp -r dist/kernel/lib root\n# Taken from boot2docker\n# Remove useless kernel modules, based on unclejack/debian2docker\nRUN cd root/lib/modules && \\\n    rm -rf ./*/kernel/build && \\\n    rm -rf ./*/kernel/source && \\\n    rm -rf ./*/kernel/sound/* && \\\n    rm -rf ./*/kernel/drivers/gpu/* && \\\n    rm -rf ./*/kernel/drivers/infiniband/* && \\\n    rm -rf ./*/kernel/drivers/isdn/* && \\\n    rm -rf ./*/kernel/drivers/media/* && \\\n    rm -rf ./*/kernel/drivers/staging/lustre/* && \\\n    rm -rf ./*/kernel/drivers/staging/comedi/* && \\\n    rm -rf ./*/kernel/fs/ocfs2/* && \\\n    rm -rf ./*/kernel/fs/reiserfs/* && \\\n    rm -rf ./*/kernel/net/bluetooth/* && \\\n    rm -rf ./*/kernel/net/mac80211/* && \\\n    rm -rf ./*/kernel/net/wireless/*\n\nCOPY assets/sbin/mount.vboxsf root/sbin/\nCOPY assets/lib/modules/*.ko root/lib/modules/${KERNEL_VERSION}-rancher/\nRUN depmod -a -b /usr/src/root ${KERNEL_VERSION}-rancher\n\n# Start assembling root\nRUN tar xf dist/rootfs.tar -C root && \\\n    cd root && \\\n    rm -rf run \\\n      linuxrc \\\n      etc/os-release \\\n      var/cache \\\n      var/lock \\\n      var/log \\\n      var/run \\\n      var/spool \\\n      var/lib/misc \\\n      usr/share/locale && \\\n    mkdir -p run \\\n      var/cache \\\n      var/lock \\\n      var/log \\\n      var/run \\\n      var/spool && rm dist/rootfs.tar\n\nRUN mkdir -p root/etc/ssl/certs && \\\n    cp /etc/ssl/certs/ca-certificates.crt root/etc/ssl/certs/\n\n# Install docker\nENV DOCKER_VERSION 1.7.1\nCOPY docker-$DOCKER_VERSION.tgz /usr/src/\nRUN mkdir -p root/bin && \\\n    tar xvzf docker-$DOCKER_VERSION.tgz -C root/bin --strip-components=3 && rm docker-$DOCKER_VERSION.tgz\n\nCOPY assets/init /usr/src/root/\nCOPY assets/respawn /usr/src/root/usr/bin/\nCOPY assets/shutdown /usr/src/root/sbin/\nRUN cd /usr/src/root/sbin/ && \\\n    for i in halt reboot poweroff; do \\\n      rm -f $i; \\\n      ln -s shutdown $i; \\\n    done\n\nENV ISO /usr/src/rancheros-lite\n\nRUN mkdir -p $ISO/boot && \\\n    cp dist/kernel/boot/vmlinuz* $ISO/boot/vmlinuz && \\\n    cd root && find | cpio -H newc -o | lzma -c > $ISO/boot/initrd\n\nRUN mkdir -p $ISO/boot/isolinux && \\\n    cp /usr/lib/syslinux/isolinux.bin $ISO/boot/isolinux/ && \\\n    cp /usr/lib/syslinux/linux.c32 $ISO/boot/isolinux/ldlinux.c32\n\nCOPY assets/isolinux.cfg $ISO/boot/isolinux/\n\n# Copied from boot2docker, thanks.\nRUN cd $ISO && \\\n    xorriso \\\n      -publisher \"A.I. <ailis@paw.zone>\" \\\n      -as mkisofs \\\n      -l -J -R -V \"RANCHEROS_LITE\" \\\n      -no-emul-boot -boot-load-size 4 -boot-info-table \\\n      -b boot/isolinux/isolinux.bin -c boot/isolinux/boot.cat \\\n      -isohybrid-mbr /usr/lib/syslinux/isohdpfx.bin \\\n      -no-pad -o /rancheros-lite.iso $(pwd)\n\nCMD [\"cat\", \"/rancheros-lite.iso\"]\n"
}