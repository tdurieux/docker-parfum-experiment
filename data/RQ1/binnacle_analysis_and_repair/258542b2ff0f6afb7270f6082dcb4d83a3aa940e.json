{
  "startTime": 1674235831172,
  "endTime": 1674235831358,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2018\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n################# Dockerfile for Puppet-master version 5.5.2 ####################\n#\n# This Dockerfile builds a basic installation of Puppet-master.\n#\n# When set up as an agent/master architecture, a Puppet master server controls the configuration information,\n# and each managed agent node requests its own configuration catalog from the master.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To Start Puppet master run the below command:\n# docker run --name <container_name> -d <image>\n#\n# To start Puppet with custom configuration , use:\n# docker run --name <container_name> -d <image>\n#\n# Reference:\n# https://puppetlabs.com/\n#\n################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV SOURCE_DIR=/\nWORKDIR $SOURCE_DIR\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tcron \\\n\tg++ \\\n\tgit \\\n\tlibc6-dev \\\n\tlibreadline6 \\\n\tlibreadline6-dev \\\n\tlibsqlite3-dev \\\n\tlibssl-dev \\\n\tlibyaml-dev \\\n\tlocales \\\n\tmake \\\n\topenssl \\\n\truby \\\n\truby-dev \\\n\ttar \\\n\tunzip \\\n\twget \\\n\n# Install bundler\n\t&& cd $SOURCE_DIR \\\n\t&& /usr/bin/gem install bundler rake-compiler \\\n\n# Install Puppet\n\t&& /usr/bin/gem install puppet -v 5.5.2 \\\n\n# Locate the $confdir by command\n\t&& chmod 755 /usr/local/lib \\\n\t&& confdir=`puppet master --configprint confdir` \\\n\t&& mkdir -p $confdir \\\n\n# Create necessary directories and files in $confdir\n\t&& mkdir $confdir/modules \\\n\t&& mkdir $confdir/manifests \\\n\t&& cd $confdir \\\n\t&& touch puppet.conf \\\n\t&& wget https://raw.githubusercontent.com/puppetlabs/puppet/master/conf/auth.conf \\\n\t&& mkdir -p $confdir/opt/puppetlabs/puppet \\\n\t&& mkdir -p $confdir/var/log/puppetlabs \\\n\n# Create \"puppet\" user and group\n\t&& useradd -d /home/puppet -m -s /bin/bash puppet \\\n\t&& /usr/local/bin/puppet resource group puppet ensure=present \\\n\n# Add sample puppet.conf\n\t&& echo \"[main]\" >> puppet.conf \\\n\t&& echo \"        logdir = $confdir/var/log/puppetlabs\" >> puppet.conf \\\n\t&& echo \"        basemodulepath = $confdir/modules\" >> puppet.conf \\\n\t&& echo \"        server = hostname\" >> puppet.conf \\\n\t&& echo \"        user  = puppet\" >> puppet.conf \\\n\t&& echo \"        group = puppet\" >> puppet.conf \\\n\t&& echo \"        pluginsync = false\" >> puppet.conf \\\n\t&& echo \"\" >> puppet.conf \\\n\t&& echo \"[master]\" >> puppet.conf \\\n\t&& echo \"        certname = hostname\" >> puppet.conf \\\n\t&& echo \"\t\t  autosign = true\" >> puppet.conf \\\n\n# Clean up cache data and remove dependencies which are not required\n\t&& apt-get -y remove \\\n\t\tgit \\\n\t\tmake \\ \n\t\tunzip \\\n\t\twget \\\n\t&& apt autoremove -y \\\n\t&& apt-get autoremove -y \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nCMD sed -i \"s/hostname/$HOSTNAME/\" /etc/puppetlabs/puppet/puppet.conf && puppet master --verbose --no-daemonize\n\n# End of Dockerfile\n"
}