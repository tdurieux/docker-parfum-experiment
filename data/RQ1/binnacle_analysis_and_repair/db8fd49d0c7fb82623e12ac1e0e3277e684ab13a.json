{
  "startTime": 1674238696214,
  "endTime": 1674238696421,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#name of container: docker-zoneminder\n#versison of container: 0.6.2\nFROM quantumobject/docker-baseimage:18.04\nLABEL maintainer=\"Angel Rodriguez <angel@quantumobject.com>\"\n\nENV TZ America/New_York\n\n# Update the container\n# Installation of nesesary package/software for this containers...\nRUN echo \"deb http://ppa.launchpad.net/iconnor/zoneminder-1.32/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME` main\" >> /etc/apt/sources.list  \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 776FFB04 \\\n    && echo $TZ > /etc/timezone && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q --no-install-recommends \\\n                                        libvlc-dev  \\\n                                        libvlccore-dev\\\n                                        libapache2-mod-perl2 \\\n                                        vlc \\\n                                        ntp \\\n                                        dialog \\\n                                        ntpdate \\\n                                        ffmpeg \\\n\t\t\t\t\tlibyaml-perl \\\n\t\t\t\t\tlibjson-perl \\\n\t\t\t\t\tmake \\\t\n\t\t\t\t\tgcc \\\n\t\t\t\t\tbuild-essential \\\n                    && apt-get clean \\\n                    && rm -rf /tmp/* /var/tmp/*  \\\n                    && rm -rf /var/lib/apt/lists/*\n\n# to add apache2 deamon to runit\nRUN mkdir -p /etc/service/apache2  /var/log/apache2 ; sync\nCOPY apache2.sh /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run \\\n    && cp /var/log/cron/config /var/log/apache2/ \\\n    && chown -R www-data /var/log/apache2\n\n# to add zm deamon to runit\nRUN mkdir -p /var/log/zm ; sync\nCOPY zm.sh /sbin/zm.sh\nRUN chmod +x /sbin/zm.sh\n\n##startup scripts \n#Pre-config scrip that maybe need to be run one time only when the container run the first time .. using a flag to don't\n#run it again ... use for conf for service ... when run the first time ...\nRUN mkdir -p /etc/my_init.d\nCOPY startup.sh /etc/my_init.d/startup.sh\nRUN chmod +x /etc/my_init.d/startup.sh\n\n#pre-config scritp for different service that need to be run when container image is create\n#maybe include additional software that need to be installed ... with some service running ... like example mysqld\nCOPY pre-conf.sh /sbin/pre-conf\nRUN chmod +x /sbin/pre-conf ; sync \\\n    && /bin/bash -c /sbin/pre-conf \\\n    && rm /sbin/pre-conf\n\n##scritp that can be running from the outside using docker-bash tool ...\n## for example to create backup for database with convitation of VOLUME   dockers-bash container_ID backup_mysql\nCOPY backup.sh /sbin/backup\nRUN chmod +x /sbin/backup\n\nRUN cd /usr/src \\\n    && wget https://www.andywilcock.com/code/cambozola/cambozola-latest.tar.gz \\\n    && tar -xzvf /usr/src/cambozola-latest.tar.gz \\\n    && mv cambozola-0.936/dist/cambozola.jar /usr/share/zoneminder/www \\\n    && rm /usr/src/cambozola-latest.tar.gz \\\n    && rm -R /usr/src/cambozola-0.936\n\n# add stuff or zmeventnotification.pl\nRUN cd /usr/bin/ \\\n    && wget https://raw.githubusercontent.com/pliablepixels/zmeventserver/master/zmeventnotification.pl \\\n    && chmod a+x zmeventnotification.pl \\\n    && mkdir -p /var/lib/zmeventnotification/push/ \\\n    && chown -R www-data:www-data /var/lib/zmeventnotification\nRUN perl -MCPAN -e \"install Digest::SHA1\"\nRUN perl -MCPAN -e \"install Crypt::MySQL\"\nRUN perl -MCPAN -e \"install Config::IniFiles\"\nRUN perl -MCPAN -e \"install Net::WebSocket::Server\"\nRUN perl -MCPAN -e \"install LWP::Protocol::https\"\nRUN perl -MCPAN -e \"install Net::MQTT::Simple\"\n\nVOLUME /var/backups /var/cache/zoneminder /config\n# to allow access from outside of the container  to the container service\n# at that ports need to allow access from firewall if need to access it outside of the server.\nEXPOSE 80 9000 6802\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n"
}