{
  "startTime": 1674242836971,
  "endTime": 1674242837447,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 115
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-runtime\n\n## This handle reaches Carl and Dirk\nMAINTAINER \"Carl Boettiger and Dirk Eddelbuettel\" rocker-maintainers@eddelbuettel.com\n\n## Prepare R installation from\nRUN sh -c 'echo \"deb http://cloud.r-project.org/bin/linux/ubuntu xenial/\" >> /etc/apt/sources.list' \\\n    && gpg --batch --keyserver keyserver.ubuntu.com --recv-key E084DAB9 \\\n    && gpg --batch -a --export E084DAB9 | apt-key add -\n\nRUN apt-get update \\\n    && apt-get upgrade -y -q \\\n    && apt-get install -y --no-install-recommends \\\n           r-base \\\n           r-base-dev \\\n           r-cran-littler \\\n           libxml2-dev \\\n           libxt-dev \\\n           libssl-dev \\\n           libcurl4-openssl-dev \\\n           imagemagick \\\n           python-pip \\\n           libpython2.7 \\\n    && python -m pip install --upgrade pip \\\n    && pip install --no-cache-dir virtualenv \\\n    && echo 'options(repos = c(CRAN = \"https://cloud.r-project.org\"))' >> /etc/R/Rprofile.site \\\n    && /usr/lib/R/site-library/littler/examples/install.r tensorflow keras \\\n    && r -e \"keras::install_keras(tensorflow = '1.10.0-gpu')\" && rm -rf /var/lib/apt/lists/*;\n\n# copied from rstudio dockerfile https://github.com/rocker-org/rocker-versioned/tree/master/rstudio/3.5.2\nARG RSTUDIO_VERSION\n#ENV RSTUDIO_VERSION=${RSTUDIO_VERSION:0.1.463}\nARG S6_VERSION\nENV S6_VERSION=${S6_VERSION:-v1.21.7.0}\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2\nENV PATH=/usr/lib/rstudio-server/bin:$PATH\n\n## Download and install RStudio server & dependencies\n## Attempts to get detect latest version, otherwise falls back to version given in $VER\n## Symlink pandoc, pandoc-citeproc so they are available system-wide\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    file \\\n    git \\\n    libapparmor1 \\\n    libcurl4-openssl-dev \\\n    libedit2 \\\n    libssl-dev \\\n    lsb-release \\\n    psmisc \\\n    procps \\\n    python-setuptools \\\n    sudo \\\n    wget \\\n  && wget -O libssl1.0.0.deb https://ftp.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb \\\n  && dpkg -i libssl1.0.0.deb \\\n  && rm libssl1.0.0.deb \\\n  && RSTUDIO_LATEST=$(wget --no-check-certificate -qO- https://s3.amazonaws.com/rstudio-server/current.ver) \\\n  && [ -z \"$RSTUDIO_VERSION\" ] && RSTUDIO_VERSION=$RSTUDIO_LATEST || true \\\n  && wget -q https://download2.rstudio.org/rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n  && dpkg -i rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n  && rm rstudio-server-*-amd64.deb \\\n  ## Symlink pandoc & standard pandoc templates for use system-wide\n  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin \\\n  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin \\\n  && git clone https://github.com/jgm/pandoc-templates \\\n  && mkdir -p /opt/pandoc/templates \\\n  && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \\\n  && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/ \\\n  ## RStudio wants an /etc/R, will populate from $R_HOME/etc\n  && mkdir -p /etc/R \\\n  && mkdir -p /usr/local/lib/R/etc/ \\\n  ## Write config files in $R_HOME/etc\n  && echo '\\n\\\n    \\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST \\\n    \\n# is not set since a redirect to localhost may not work depending upon \\\n    \\n# where this Docker container is running. \\\n    \\nif(is.na(Sys.getenv(\"HTTR_LOCALHOST\", unset=NA))) { \\\n    \\n  options(httr_oob_default = TRUE) \\\n    \\n}' >> /usr/local/lib/R/etc/Rprofile.site \\\n  && echo \"PATH=${PATH}\" >> /usr/local/lib/R/etc/Renviron \\\n  ## Need to configure non-root user for RStudio\n  && useradd rstudio \\\n  && echo \"rstudio:rstudio\" | chpasswd \\\n\t&& mkdir /home/rstudio \\\n\t&& chown rstudio:rstudio /home/rstudio \\\n\t&& addgroup rstudio staff \\\n  ## Prevent rstudio from deciding to use /usr/bin/R if a user apt-get installs a package\n  && echo 'rsession-which-r=/usr/local/bin/R' >> /etc/rstudio/rserver.conf \\\n  ## use more robust file locking to avoid errors when using shared volumes:\n  && echo 'lock-type=advisory' >> /etc/rstudio/file-locks \\\n  ## configure git not to request password each time\n  && git config --system credential.helper 'cache --timeout=3600' \\\n  && git config --system push.default simple \\\n  ## Set up S6 init system\n  && wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz \\\n  && tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \\\n  && mkdir -p /etc/services.d/rstudio \\\n  && echo '#!/usr/bin/with-contenv bash \\\n          \\n## load /etc/environment vars first: \\\n  \t\t  \\n for line in $( cat /etc/environment ) ; do export $line ; done \\\n          \\n exec /usr/lib/rstudio-server/bin/rserver --server-daemonize 0' \\\n          > /etc/services.d/rstudio/run \\\n  && echo '#!/bin/bash \\\n          \\n rstudio-server stop' \\\n          > /etc/services.d/rstudio/finish \\\n  && mkdir -p /home/rstudio/.rstudio/monitored/user-settings \\\n  && echo 'alwaysSaveHistory=\"0\" \\\n          \\nloadRData=\"0\" \\\n          \\nsaveAction=\"0\"' \\\n          > /home/rstudio/.rstudio/monitored/user-settings/user-settings \\\n  && chown -R rstudio:rstudio /home/rstudio/.rstudio && rm /tmp/s6-overlay-amd64.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nCOPY userconf.sh /etc/cont-init.d/userconf\n\n## running with \"-e ADD=shiny\" adds shiny server\nCOPY add_shiny.sh /etc/cont-init.d/add\nCOPY disable_auth_rserver.conf /etc/rstudio/disable_auth_rserver.conf\nCOPY pam-helper.sh /usr/lib/rstudio-server/bin/pam-helper\n\nEXPOSE 8787\n\n## automatically link a shared volume for kitematic users\nVOLUME /home/rstudio/kitematic\n\nCMD [\"/init\"]"
}