{
  "startTime": 1674243471350,
  "endTime": 1674243471506,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 43,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 439
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# FROM openhorizon/cuda-tx1-full\n# OR\nFROM openhorizon/cuda-tx1-fullcudnn\n\nMAINTAINER dyec@us.ibm.com\n#AUTHOR dima@us.ibm.com\n\nENV ARCH=arm64\n\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential cmake git gfortran libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev libhdf5-serial-dev libleveldb-dev liblmdb-dev libopencv-dev libprotobuf-dev libsnappy-dev protobuf-compiler python-all-dev python-dev python-h5py python-matplotlib python-numpy python-opencv python-pil python-pip python-protobuf python-scipy python-skimage python-sklearn && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\n# RUN git clone https://github.com/NVIDIA/caffe.git\nRUN git clone https://github.com/BVLC/caffe\nWORKDIR /caffe\n\nRUN apt-get install --no-install-recommends -y python-setuptools && rm -rf /var/lib/apt/lists/*;\n# RUN cat python/requirements.txt | xargs -n1 sudo pip install\nWORKDIR /caffe/python\nRUN for req in $(cat requirements.txt); do pip install --no-cache-dir $req; done\nWORKDIR /caffe\nRUN cp Makefile.config.example Makefile.config\n# RUN mkdir build\n# WORKDIR /caffe/build\n# RUN cmake\nRUN sed -i \"s/INCLUDE_DIRS := \\$(PYTHON_INCLUDE) \\/usr\\/local\\/include/INCLUDE_DIRS := \\$(PYTHON_INCLUDE) \\/usr\\/local\\/include \\/usr\\/include\\/hdf5\\/serial/g\" Makefile.config\nRUN sed -i \"s/LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_hl hdf5/LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_serial_hl hdf5_serial/g\" Makefile\nRUN sed -i \"s/# USE_CUDNN := 1/USE_CUDNN := 1/g\" Makefile.config\n\n# ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/aarch64-linux-gnu/tegra\nRUN make all -j4\nRUN make pycaffe -j4\nRUN make test -j4\nRUN make distribute\n"
}