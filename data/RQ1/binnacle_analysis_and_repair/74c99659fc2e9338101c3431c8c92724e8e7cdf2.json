{
  "startTime": 1674234456514,
  "endTime": 1674234456628,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 15,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nimmis/alpine-apache\n\nMAINTAINER nimmis <kjell.havneskold@gmail.com>\n\nARG IMAGE_NAME\nARG DOCKER_REPO\nARG BUILD_DATE\nARG VCS_REF\n\nLABEL maintainer=\"nimmis <kjell.havneskold@gmail.com>\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.name=\"Apache2/php7 on Alpine OS\" \\\n      org.label-schema.url=\"https://www.nimmis.nu\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/nimmis/docker-alpine-apache-php7.git\"\n\nRUN apk update && apk upgrade && \\\n\n    # Make info file about this build\n    printf \"Build of %s, date: %s\\n\" $(echo $IMAGE_NAME | sed 's#^.*io/##')  `date -u +\"%Y-%m-%dT%H:%M:%SZ\"` > /etc/BUILDS/$(echo $DOCKER_REPO | awk -F '/' '{print $NF}') && \\\n\n    apk add libressl && \\\n    apk add curl openssl && \\\n\n    apk add php7 php7-apache2 php7-openssl php7-mbstring && \\\n    apk add php7-apcu php7-intl php7-mcrypt php7-json php7-gd php7-curl && \\\n    apk add php7-fpm php7-mysqlnd php7-pgsql php7-sqlite3 php7-phar && \\\n    apk add php7-imagick@testing && \\\n\n    # install composer\n    cd /tmp && curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer && \\\n\n    #clear cache\n    rm -rf /var/cache/apk/*\n\n\n"
}