{
  "startTime": 1674239206586,
  "endTime": 1674239206699,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build this image, use a command like the following:\n# docker build --build-arg REPOSE_VERSION=latest -t repose-container .\n# To run the built image, use a command like the following:\n# docker run --rm repose-container\nFROM ubuntu:xenial\n\nMAINTAINER The Repose Team <reposecore@rackspace.com>\n\n# The service ports -- one for accepting HTTP traffic to Repose, and the other for connecting a JDWP debugger\n# Note that these are not exposed to the host by default, but can be using the Docker CLI -p or -P flag.\nEXPOSE 8080 10037\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -qq \\\n    apt-transport-https \\\n    ca-certificates \\\n    wget \\\n    curl \\\n    python-pip \\\n    openjdk-8-jre-headless && rm -rf /var/lib/apt/lists/*;\nRUN wget --quiet -O - https://nexus.openrepose.org/repository/el/RPM_GPG_KEY-openrepose | apt-key add -\nRUN echo 'deb https://nexus.openrepose.org/repository/debian stable main' > /etc/apt/sources.list.d/openrepose.list\n\n# Note: The COPY instruction was used rather than VOLUME since the behave of VOLUME varies based on the host OS\nCOPY etc_repose /release-verification/etc_repose\nCOPY fake-services /release-verification/fake-services\nCOPY scripts /release-verification/scripts\nCOPY *.deb /release-verification/\n\nRUN rm /release-verification/DELETE-ME.deb\n\nRUN sh /release-verification/scripts/node_install.sh\n\nRUN sh /release-verification/scripts/fake_keystone_prepare.sh\nRUN cp /release-verification/fake-services/fake-keystone2/package.json /opt/fake-keystone/package.json\nRUN cp /release-verification/fake-services/fake-keystone2/app.js /opt/fake-keystone/app.js\nRUN sh /release-verification/scripts/fake_keystone_install.sh\n\nRUN sh /release-verification/scripts/fake_origin_prepare.sh\nRUN cp /release-verification/fake-services/fake-origin/package.json /opt/fake-origin/package.json\nRUN cp /release-verification/fake-services/fake-origin/app.js /opt/fake-origin/app.js\nRUN sh /release-verification/scripts/fake_origin_install.sh\n\n# This build-arg is used to pass the Repose version number which will be set up in this image.\nARG REPOSE_VERSION\n\nRUN apt-get update -qq && sh /release-verification/scripts/repose_install_deb.sh $REPOSE_VERSION\nRUN cp --force /release-verification/etc_repose/* /etc/repose/\n\nCMD [\"/bin/bash\", \"/release-verification/scripts/verify.sh\"]\n"
}