{
  "startTime": 1674242897375,
  "endTime": 1674242897495,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 42,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 21,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copy of https://github.com/elastic/kibana-docker/blob/master/build/kibana/Dockerfile\nFROM centos:7\nLABEL maintainer \"Elastic Docker Team <docker@elastic.co>\"\nEXPOSE 5601\n\n\n### Beats specific args ####\nARG DOWNLOAD_URL=https://snapshots.elastic.co/downloads\nARG ELASTIC_VERSION=7.0.0-alpha1-SNAPSHOT\nARG CACHE_BUST=1\nARG XPACK=1\n\n# Healthcheck create by beats team\nRUN yum install update -y epel-release && yum install -y jq && rm -rf /var/cache/yum\nHEALTHCHECK --interval=1s --retries=600 CMD curl -f http://localhost:5601/api/status | jq '. | .status.overall.state' | grep -q green\n### Beats ###\n\n# Add Reporting dependencies + healthcheck tool\nRUN yum update -y && yum install -y fontconfig freetype && yum clean all && rm -rf /var/cache/yum\n\nWORKDIR /usr/share/kibana\nRUN curl -f -Ls ${DOWNLOAD_URL}/kibana/kibana-${ELASTIC_VERSION}-linux-x86_64.tar.gz?c=${CACHE_BUST} | tar --strip-components=1 -zxf - && \\\n    ln -s /usr/share/kibana /opt/kibana\n\nENV ELASTIC_CONTAINER true\nENV PATH=/usr/share/kibana/bin:$PATH\n\n# Set some Kibana configuration defaults.\nCOPY config/kibana-x-pack.yml /usr/share/kibana/config/kibana.yml\n\n# Add the launcher/wrapper script. It knows how to interpret environment\n# variables and translate them to Kibana CLI options.\nCOPY bin/kibana-docker /usr/local/bin/\n\n# Add a self-signed SSL certificate for use in examples.\n#COPY ssl/kibana.example.org.* /usr/share/kibana/config/\n\n# Provide a non-root user to run the process.\nRUN groupadd --gid 1000 kibana && \\\n    useradd --uid 1000 --gid 1000 \\\n      --home-dir /usr/share/kibana --no-create-home \\\n      kibana\nUSER kibana\n\n# Beats specific check for XPACK to have both variables in one\nRUN if [ ${XPACK} = \"1\" ]; then NODE_OPTIONS=\"--max-old-space-size=4096\" bin/kibana-plugin install ${DOWNLOAD_URL}/kibana-plugins/x-pack/x-pack-${ELASTIC_VERSION}.zip?c=${CACHE_BUST}; fi\n\nCMD [\"/bin/bash\", \"/usr/local/bin/kibana-docker\"]\n\n"
}