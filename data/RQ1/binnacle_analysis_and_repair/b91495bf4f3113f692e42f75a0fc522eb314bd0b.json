{
  "startTime": 1674235607228,
  "endTime": 1674235607868,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 52,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#------------------------------------------------------------------------------\n# We have 2 ways to deploy RNAcentral in production:\n# bare-metal managed (no root permissions) CentOS 6 VMs and Kubernetes.\n#\n# This dockerfile is meant to mimic the environment of\n# bare-metal CentOS VMs in order to reate a reproducible\n# installation of the RNAcentral website.\n#\n# All local dependencies are installed manually to mirror the\n# bare-metal production setup on EBI VMs, where Docker or yum\n# are not available.\n#\n#-------------------------------------------------------------------------------\n\nFROM centos:6.10\n\nRUN yum install -y \\\n    curl \\\n    gcc \\\n    git \\\n    httpd \\\n    httpd-devel \\\n    libaio \\\n    \"nc.x86_64\" \\\n    openssl \\\n    openssl-devel \\\n    tar \\\n    unzip \\\n    wget \\\n    zlib-devel \\\n    gcc-c++ \\\n    make && rm -rf /var/cache/yum\n\nRUN mkdir /rnacentral\nRUN mkdir /rnacentral/local\nRUN mkdir /rnacentral/static\n\nENV LOC /rnacentral/local\n\n# Install Python\n# NOTE: Python-2.7.11 and python-2.7.11 are DIFFERENT folders, the former contains the sources, the later - binaries\nRUN \\\n    cd $LOC && \\\n    curl -f -OL https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tgz && \\\n    tar -zxvf Python-2.7.11.tgz && \\\n    cd Python-2.7.11 && \\\n    PREFIX=$LOC/python-2.7.11/ && \\\n    export LD_RUN_PATH=$PREFIX/lib && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX --enable-shared && \\\n    make && \\\n    make install && \\\n    cd $LOC && \\\n    rm -Rf Python-2.7.11 && \\\n    rm Python-2.7.11.tgz\n\n# Install virtualenv\nRUN \\\n    cd $LOC && \\\n    curl -f -OL https://pypi.python.org/packages/source/v/virtualenv/virtualenv-15.0.0.tar.gz && \\\n    tar -zxvf virtualenv-15.0.0.tar.gz && \\\n    cd virtualenv-15.0.0 && \\\n    $LOC/python-2.7.11/bin/python setup.py install && \\\n    cd $LOC && \\\n    rm -Rf virtualenv-15.0.0.tar.gz && \\\n    rm -Rf virtualenv-15.0.0\n\n# Create RNAcentral virtual environment\nRUN \\\n    cd $LOC && \\\n    mkdir virtualenvs && \\\n    cd virtualenvs && \\\n    $LOC/python-2.7.11/bin/virtualenv RNAcentral --python=$LOC/python-2.7.11/bin/python\n\n# Install Redis\nRUN \\\n    cd $LOC && \\\n    curl -f -OL https://download.redis.io/redis-stable.tar.gz && \\\n    tar -xvzf redis-stable.tar.gz && \\\n    cd redis-stable && \\\n    make && \\\n    cd $LOC && \\\n    rm redis-stable.tar.gz && \\\n    mv redis-stable redis\n\n# Install libevent (memcached requirement)\nRUN \\\n    cd $LOC && \\\n    curl -f --tlsv1 -OL https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz && \\\n    tar -zxvf libevent-2.0.21-stable.tar.gz && \\\n    cd libevent-2.0.21-stable && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$LOC/libevent && \\\n    make && \\\n    make install && \\\n    cd $LOC && \\\n    rm -Rf libevent-2.0.21-stable && \\\n    rm libevent-2.0.21-stable.tar.gz\n\n# Install memcached (requires libevent)\nRUN \\\n    cd $LOC && \\\n    curl -f -OL https://www.memcached.org/files/memcached-1.4.17.tar.gz && \\\n    tar -zxvf memcached-1.4.17.tar.gz && \\\n    cd memcached-1.4.17 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$LOC/memcached --with-libevent=$LOC/libevent/ && \\\n    make && \\\n    make install && \\\n    cd $LOC && \\\n    rm -Rf memcached-1.4.17 && \\\n    rm memcached-1.4.17.tar.gz\n\n# Create a user for memcached\nRUN adduser -g root xfm_adm\n\n# Install Infernal\nRUN \\\n    cd $LOC && \\\n    curl -f -OL https://eddylab.org/infernal/infernal-1.1.1.tar.gz && \\\n    tar -xvzf infernal-1.1.1.tar.gz && \\\n    cd infernal-1.1.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$LOC/infernal-1.1.1 && \\\n    make && \\\n    make install && \\\n    cd easel && \\\n    make install && \\\n    cd $LOC && \\\n    rm infernal-1.1.1.tar.gz\n\n# Install mod_wsgi\nRUN \\\n    cd $LOC && \\\n    mkdir httpd && \\\n    mkdir httpd/modules && \\\n    curl -f --tlsv1 -L -o mod_wsgi-3.4.tar.gz https://github.com/GrahamDumpleton/mod_wsgi/archive/3.4.tar.gz && \\\n    tar -zxvf mod_wsgi-3.4.tar.gz && \\\n    cd mod_wsgi-3.4 && \\\n    export LD_RUN_PATH=$LOC/python-2.7.11/lib && \\\n    export LD_LIBRARY_PATH=$LOC/python-2.7.11/lib/:$LD_LIBRARY_PATH && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-python=$LOC/python-2.7.11/bin/python && \\\n    make && \\\n    mv .libs/mod_wsgi.so $LOC/httpd/modules && \\\n    cd $LOC && \\\n    rm -Rf mod_wsgi-3.4 && \\\n    rm mod_wsgi-3.4.tar.gz\n\n# Install UCSC utilities\nRUN \\\n  cd $LOC && \\\n  mkdir ucsc && \\\n  cd ucsc && \\\n  wget https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes && \\\n  wget https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed && \\\n  chmod o+x fetchChromSizes && \\\n  chmod o+x bedToBigBed\n\n# Define container environment variables\nENV RNACENTRAL_HOME /rnacentral/rnacentral-webcode\nENV RNACENTRAL_LOCAL /rnacentral/local\n\n# Install Django requirements\nADD rnacentral/requirements.txt $RNACENTRAL_HOME/rnacentral/\nRUN \\\n    source $LOC/virtualenvs/RNAcentral/bin/activate && \\\n    pip install --no-cache-dir -r $RNACENTRAL_HOME/rnacentral/requirements.txt\n\n# Install Node.js\nRUN curl -f -sL https://rpm.nodesource.com/setup_6.x | bash -\nRUN yum install -y nodejs && rm -rf /var/cache/yum\n\n# Install NPM dependencies\nADD rnacentral/portal/static/package.json $RNACENTRAL_HOME/rnacentral/portal/static/\nRUN cd $RNACENTRAL_HOME/rnacentral/portal/static && npm install --only=production && npm cache clean --force;\n\n# Expose a container port where the website is served\nEXPOSE 8000\n\n# Start up the app\nENTRYPOINT \\\n    source $LOC/virtualenvs/RNAcentral/bin/activate && \\\n    supervisord -c $RNACENTRAL_HOME/supervisor/supervisor.conf && \\\n    python $RNACENTRAL_HOME/rnacentral/manage.py runserver 0.0.0.0:8000\n"
}