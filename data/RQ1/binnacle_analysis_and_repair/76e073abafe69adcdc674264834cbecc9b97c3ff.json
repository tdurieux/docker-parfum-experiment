{
  "startTime": 1674242080352,
  "endTime": 1674242080408,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dkarchmervue/python27-opencv\n\n# https://github.com/ampervue/docker-python27-opencv\n\nMAINTAINER David Karchmer <dkarchmer@gmail.com>\n\n# ============================================================================\n# As an example, we compile a small program to load an image and write out\n#     a gray scale version of it.\n# See http://docs.opencv.org/doc/tutorials/introduction/load_save_image/load_save_image.html\n#\n# ~~~~\n# git clone https://dkarchmer-vue@bitbucket.org/ampervue/python27-opencv.git\n# cd example\n# docker build -t opencvtest .\n# docker run -it --rm -p 5901:5901 -e USER=root opencvtest \\\n#    bash -c \"vncserver :1 -geometry 1280x800 -depth 24 && tail -F /root/.vnc/*.log\"\n#\n# Connect to vnc://<host>:5901 via VNC client.\n# On a terminal, call program with: `opencvtest sample.jpg` and open generated Gray_Image.jpg\n# ~~~~\n# ============================================================================\n\n# Step 0: Install a VNC Server so we can use OpenCV GUI features\n# --------------------------------------------------------------\n\n# Install VNC server and an editor\nRUN apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  x11-apps \\\n  firefox \\\n  lxde-core \\\n  lxterminal \\\n  tightvncserver \\\n  emacs \\\n  gpicview \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN touch /root/.Xresources\n\n# Step 1: Install any Python packages\n# ----------------------------------------\n\nRUN mkdir /code\nWORKDIR /code\n\n# Step 2: Copy code\n# ----------------------------------------\n\nADD app /code/app\n\n# Step 3: Compile Code\n# ----------------------------------------\n\nWORKDIR /code/app\n\nRUN g++ -ggdb `pkg-config --cflags opencv` -o `basename opencvtest.cpp .cpp` opencvtest.cpp `pkg-config --libs opencv`\n\n# Define default command.\nCMD [\"bash\"]\n\n# Expose ports.\nEXPOSE 5901\n\n\n\n\n\n\n\n\n"
}