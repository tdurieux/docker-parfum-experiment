{
  "startTime": 1674234262458,
  "endTime": 1674234263875,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 77,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nCOPY get-last-layer.sh build.mk fix-execvpe-signature-ghc-7.8.4.patch /tmp/\nRUN : \"Layer 1: fully working basic GHC in /usr/local\" && \\\n    mkdir /tmp/ghc && \\\n    cd /tmp/ghc && \\\n    apk add --no-cache --update curl xz alpine-sdk perl gmp-dev file gmp openssh openssl zlib-dev strace vim less jq ncurses-dev bash autoconf && \\\n    cd /tmp && \\\n    wget https://nixos.org/releases/patchelf/patchelf-0.8/patchelf-0.8.tar.bz2 && \\\n    tar xfj patchelf-0.8.tar.bz2 && \\\n    cd patchelf-0.8 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && \\\n    cd .. && \\\n    rm -rf patchelf* && \\\n    sh /tmp/get-last-layer.sh nilcons/ghc-musl-auto ghc-cross >ghc-cross.tar.gz && \\\n    tar xvfz ghc-cross.tar.gz && \\\n    tar -xvJ -C / -f /tmp/ghc/ghc-7.8.4-x86_64-unknown-linux-musl.tar.xz && \\\n    wget https://www.haskell.org/ghc/dist/7.8.4/ghc-7.8.4-src.tar.bz2 && \\\n    tar xvfj ghc-7.8.4-src.tar.bz2 && \\\n    cd /tmp/ghc/ghc-7.8.4 && \\\n    cp -v /tmp/build.mk mk/build.mk && \\\n    patch -p1 </tmp/fix-execvpe-signature-ghc-7.8.4.patch && \\\n    PATH=/opt/ghc-cross/bin:$PATH ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    : \"libffi has a bug, which we patch here\" && \\\n    sed -i 's,chmod,sed -i s/__gnu_linux__/1/ libffi/build/src/closures.c \\&\\& chmod,' libffi/ghc.mk && \\\n    make -j8 && \\\n    make binary-dist && \\\n    cd /tmp && \\\n    mv ghc/ghc-7.8.4/ghc-7.8.4-x86_64-unknown-linux.tar.bz2 . && \\\n    rm -rf ghc /opt/ghc-cross && \\\n    : && \\\n    : end of build, but we want to minimize docker layer sizes && \\\n    : so we extract ghc here and delete the tarball && \\\n    : && \\\n    tar xvfj ghc-7.8.4-x86_64-unknown-linux.tar.bz2 && \\\n    cd ghc-7.8.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    : musl ld requires --no-pie to work for some reason with ghc && \\\n    sed -i '/C\\ compiler\\ link/{ s/\"\"/\"--no-pie\"/ }' settings && \\\n    make install && \\\n    cd /tmp && \\\n    rm -rf ghc-7.8.4 ghc-7.8.4-x86_64-unknown-linux.tar.bz2\n\nENV PATH=/root/.cabal/bin:$PATH\nRUN : \"Layer 2: cabal-install, but only the binary, no executables\" && \\\n    cd /tmp && \\\n    wget https://hackage.haskell.org/package/cabal-install-1.22.4.0/cabal-install-1.22.4.0.tar.gz && \\\n    tar xvfz cabal-install-1.22.4.0.tar.gz && \\\n    cd cabal-install-1.22.4.0 && \\\n    EXTRA_CONFIGURE_OPTS=--disable-library-profiling ./bootstrap.sh && \\\n    cd / && \\\n    rm -rf /root/.ghc /tmp/cabal-install-1.22.4.0* /tmp/cabal- /root/.cabal/lib /root/.cabal/share && rm cabal-install-1.22.4.0.tar.gz\n\nRUN : \"Layer 3: cabal-install from stackage and stackage is set up\" && \\\n    cd /root/.cabal && \\\n    cabal update && \\\n    curl -f -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >>config && \\\n    : Waiting for https://github.com/haskell/network/commit/6afe609308b90c1fd4b185978a15d44bc1dbd678 && \\\n    : to hit Stackage LTS, until that we have a workaround, but this should be \"cabal install cabal-install\" && \\\n    cabal install --global mtl network-uri parsec random stm text zlib && \\\n    cabal unpack network-2.6.2.0 && \\\n    cd network-2.6.2.0 && \\\n    sed -i '/defined(AF_CAN)/ s/AF_CAN/NO_CAN_OF_WORMS/' Network/Socket/Types.hsc && \\\n    cabal install --global && \\\n    cd .. && \\\n    rm -rf network-2.6.2.0 && \\\n    cabal install --global cabal-install && \\\n    cd / && \\\n    : We regenerate the config with the stackage cabal, so that && \\\n    : they are compatible. && \\\n    rm -rf /root/.cabal && \\\n    cabal update && \\\n    cp /root/.cabal/config /root/.cabal/config.before-stackage && \\\n    curl -f -sS 'https://www.stackage.org/lts-2.12/cabal.config?global=true' >>/root/.cabal/config\n\nRUN : \"Layer 4: install some packages\" && \\\n    : the ncurses hackage package is a little bit broken && \\\n    ln -s /usr/include /usr/include/ncursesw && \\\n    apk add --no-cache curl-dev openssl-dev zeromq-dev libx11-dev libxkbfile-dev libxfont-dev \\\n            libxcb-dev libxv-dev libxt-dev libxdmcp-dev libxp-dev libxshmfence-dev libxft-dev \\\n            libxxf86dga-dev libxtst-dev libxxf86misc-dev libxfixes-dev libxkbui-dev libxpm-dev \\\n            libxcomposite-dev libxaw-dev libxau-dev libxinerama-dev libxkbcommon-dev \\\n            libxmu-dev libxext-dev libxdamage-dev libxxf86vm-dev libxi-dev libxrandr-dev \\\n            libxres-dev libxcursor-dev libxrender-dev libxvmc-dev fuse-dev \\\n            mesa-dev glu-dev freeglut-dev gtk+2.0-dev && \\\n    cabal install --global alex happy && \\\n    cabal install --global c2hs && \\\n    cabal install --global gtk2hs-buildtools && \\\n    cabal install --global attoparsec fgl haskell-src haskell-src-exts haskell-src-meta hashable html HUnit \\\n                           parallel QuickCheck regex-base regex-compat regex-posix split syb \\\n                           unordered-containers vector primitive async bytedump unix-bytestring colour \\\n                           conduit criterion crypto-api cryptohash curl data-accessor-template \\\n                           data-default data-memocombinators digest elerea filemanip foldl Glob \\\n                           lens haskeline hflags hit hslogger HsOpenSSL hspec hybrid-vectors \\\n                           kan-extensions lens-datetime linear mime-mail MissingH modular-arithmetic \\\n                           monad-loops netwire network-conduit pipes pipes-bytestring pipes-safe \\\n                           pipes-zlib pretty-show random-fu regex-tdfa regex-tdfa-rc regex-tdfa-text \\\n                           SafeSemaphore snap snap-blaze statistics statvfs \\\n                           temporary test-framework test-framework-hunit test-framework-th \\\n                           test-framework-quickcheck2 thyme tls trifecta tz tzdata unix-time \\\n                           utf8-string utility-ht vector-algorithms vector-th-unbox zip-archive \\\n                           X11 xtest zeromq4-haskell Hfuse direct-sqlite sqlite-simple \\\n                           gtk chart-gtk ncurses basic-prelude classy-prelude-conduit conduit-combinators \\\n                           conduit-extra double-conversion hamlet http-client \\\n                           http-client-tls http-conduit http-types path-pieces \\\n                           persistent persistent-template shakespeare \\\n                           shakespeare-css uuid xml-conduit yesod yesod-static \\\n                           zlib-conduit acid-state clock distributed-process multimap \\\n                           network-transport-tcp tasty tasty-hunit safecopy \\\n                           sodium unbounded-delays && \\\n    : template-default needs jailbraking && \\\n    cd /tmp && \\\n    cabal unpack -d template-default template-default && \\\n    cd /tmp/template-default/* && \\\n    sed s/2.9/2.10/ -i template-default.cabal && \\\n    cabal install --global --only-dependencies && \\\n    cabal install --global && \\\n    cd /tmp && \\\n    rm -rf template-default && \\\n    : gloss needs some love and a big pile of jailbraking && \\\n    cd /tmp && \\\n    cabal unpack -d gloss-rendering gloss-rendering-1.9.2.1 && \\\n    cd /tmp/gloss-rendering/* && \\\n    sed -i 's/GLUT.*/GLUT,/' gloss-rendering.cabal && \\\n    sed -i 's/OpenGL.*/OpenGL,/' gloss-rendering.cabal && \\\n    cabal install --global --only-dependencies && \\\n    cabal install --global && \\\n    cd /tmp && \\\n    rm -rf gloss-rendering && \\\n    cabal unpack -d gloss gloss-1.9.2.1 && \\\n    cd /tmp/gloss/* && \\\n    sed -i 's/GLUT.*==.*/GLUT,/' gloss.cabal && \\\n    sed -i 's/OpenGL.*==.*/OpenGL,/' gloss.cabal && \\\n    cabal install --global --only-dependencies && \\\n    cabal install --global && \\\n    cd /tmp && \\\n    rm -rf gloss && \\\n    : deepseq-th jailbraking && \\\n    cd /tmp && \\\n    cabal unpack -d deepseq-th deepseq-th && \\\n    cd /tmp/deepseq-th/* && \\\n    sed -i 's/base.*,/base,/' deepseq-th.cabal && \\\n    sed -i 's/2.9/2.10/' deepseq-th.cabal && \\\n    cabal install --global --only-dependencies && \\\n    cabal install --global && \\\n    cd /tmp && \\\n    rm -rf deepseq-th && \\\n    : \"bindings-posix fixes: musl has no POSIX2_{CHAR_TERM,LOCALEDEF}\" && \\\n    cd /tmp && \\\n    cabal unpack -d bindings-posix bindings-posix && \\\n    cd /tmp/bindings-posix/* && \\\n    sed -i 's/#num _POSIX2_CHAR_TERM//' src/Bindings/Posix/Unistd.hsc && \\\n    sed -i 's/#num _POSIX2_LOCALEDEF//' src/Bindings/Posix/Unistd.hsc && \\\n    cabal install --global --only-dependencies && \\\n    cabal install --global && \\\n    cd /tmp && \\\n    rm -rf bindings_posix && \\\n    : \"hmatrix should use random in musl, not random_r, also openblas...\" && \\\n    echo \"@testing http://dl-4.alpinelinux.org/alpine/edge/testing\" >>/etc/apk/repositories && \\\n    apk add --no-cache --update openblas-dev@testing && \\\n    cd /tmp && \\\n    cabal unpack -d hmatrix hmatrix && \\\n    cd /tmp/hmatrix/* && \\\n    sed -i 's/def __APPLE__/ 1/' src/C/vector-aux.c && \\\n    cabal install --global --only-dependencies && \\\n    cabal install --global -f openblas && \\\n    cd /tmp && \\\n    rm -rf hmatrix\n\n# TODO: network-protocol-xmpp supports libgsasl only, not cyrus-sasl-dev,\n#       either have to fix that or put a libgsasl-dev into Alpine\n\nCMD /bin/sh\n"
}