{
  "startTime": 1674245074691,
  "endTime": 1674245075517,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 116,
        "columnEnd": 127
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 158,
        "columnEnd": 220
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 140,
        "columnEnd": 151
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 120,
        "columnEnd": 170
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 375
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 66,
        "columnEnd": 93
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 109,
        "columnEnd": 136
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 80,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 73,
        "columnEnd": 97
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 97,
        "columnEnd": 124
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 101,
        "columnEnd": 136
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.0.1406\n\nENV LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64\n\n# Needed to install libopenssl\nRUN yum -y swap -- remove fakesystemd -- install systemd systemd-libs\nRUN yum install -y yum-plugin-ovl && rm -rf /var/cache/yum\nRUN yum install -y zlib-devel bzip2 bzip2-devel flex bison git tar make mesa-libGL-devel libpng-devel libjpeg-tuqrbo-devel libtiff-devel readline-devel sqlite-devel openssl-devel gdbm-devel libffi-devel qt5-base-devel qt5-qtquickcontrols2-devel glew-devel turbojpeg-devel turbojpeg gmp-devel mpfr-devel cpp libgcc libstdc++-devel libgomp libmpc-devel kernel-headers yum-utils && rm -rf /var/cache/yum\nRUN yum update -y nss nss-util nspr curl\n\n# Installing gcc and some dependencies by hand to avoid a glibc update.\nRUN curl -f ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/7.0/x86_64/os/Packages/glibc-headers-2.17-55.el7.x86_64.rpm -O && rpm -i /glibc-headers-2.17-55.el7.x86_64.rpm\nRUN curl -f ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/7.0/x86_64/os/Packages/glibc-devel-2.17-55.el7.x86_64.rpm -O && rpm -i /glibc-devel-2.17-55.el7.x86_64.rpm\nRUN yumdownloader gcc gcc-c++ && rpm -i gcc-*rpm\n\nRUN yum clean all\n\n# GCC 5.4.0\n################\n\nRUN curl -f ftp.gnu.org/gnu/gcc/gcc-5.4.0/gcc-5.4.0.tar.bz2 -O && \\\ntar xvfj gcc-5.4.0.tar.bz2 && \\\nmkdir gcc-5.4.0/build && cd  gcc-5.4.0/build && \\\n../configure --enable-languages=c,c++ --disable-multilib && \\\nmake -j && make install && rm -rf /gcc-5.4.0 && rm gcc-5.4.0.tar.bz2\n\nENV CXX=/usr/local/bin/g++\nENV CC=/usr/local/bin/gcc\n\n# CMake\n################\n\n# Need to build this from source, since the binaries from Kitware don't\n# run with the old version of the libraries in this Centos version\nRUN curl -f -OL https://cmake.org/files/v3.12/cmake-3.12.2.tar.gz && tar xfz cmake-3.12.2.tar.gz && cd cmake-3.12.2 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j6 install && rm cmake-3.12.2.tar.gz\nRUN rm -rf cmake-3.12.2*\n\n# HDF5\n################\n\nRUN curl -f -OL https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.3/src/hdf5-1.10.3.tar.bz2 && tar xfj hdf5-1.10.3.tar.bz2 && cd hdf5-1.10.3 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --enable-build-mode=production && make -j6 install && rm hdf5-1.10.3.tar.bz2\nRUN rm -rf hdf5-1.10.3*\n\n# Doxygen\n################\n\n# Needed for docstrings generation and system doxygen is too old\n# after 1.8.6, we can't use anymore system flex, see https://stackoverflow.com/questions/20844635\nRUN curl -f -OL https://github.com/doxygen/doxygen/archive/Release_1_8_5.tar.gz && tar xfz Release_1_8_5.tar.gz && cd doxygen-Release_1_8_5 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j6 && make install && rm Release_1_8_5.tar.gz\nRUN rm -rf Release_1_8_5.tar.gz doxygen-Release_1_8_5\n\n# Python 3.7\n################\n\nRUN curl -f -OL https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz && tar xfz Python-3.7.0.tgz && cd Python-3.7.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --enable-shared && make -j 6 && make install && rm Python-3.7.0.tgz\nRUN find /usr/local/lib/python3.7/ | grep \"\\(__pycache__\\|/test$\\)$\" | xargs rm -rf\nRUN rm -rf /usr/local/lib/python3.7/tests Python-3.7.0*\nRUN pip3 install --no-cache-dir pyopengl numpy sphinx==1.3.6 PyQt5==5.9.2 ipython lxml\n# Needed for building Boost.Python\nRUN ln -s /usr/local/include/python3.7m /usr/local/include/python3.7\n\n# Boost\n################\n\nRUN curl -f -OL https://downloads.sourceforge.net/project/boost/boost/1.65.0/boost_1_65_0.tar.gz && tar xfz boost_1_65_0.tar.gz && rm boost_1_65_0.tar.gz\n# Patching boost source code\nRUN cd boost_1_65_0 && sed -i -e \"s/_PyUnicode_AsString/(void*)_PyUnicode_AsString/\" libs/python/src/converter/builtin_converters.cpp\nRUN cd boost_1_65_0 && ./bootstrap.sh --with-libraries=date_time,iostreams,filesystem,program_options,regex,serialization,system,test,thread,python --with-python=python3 && ./b2 -s -j6 -q threading=multi --build-type=minimal install\nRUN rm -rf boost_1_65_0*\n\n #$OpenSceneGraph\n###############\nRUN env |grep -i CXX\nRUN curl -f -OL https://github.com/openscenegraph/OpenSceneGraph/archive/OpenSceneGraph-3.4.1.tar.gz && tar xfz OpenSceneGraph-3.4.1.tar.gz && cd OpenSceneGraph-OpenSceneGraph-3.4.1 && mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local && make -j6 && make -j6 install && rm OpenSceneGraph-3.4.1.tar.gz\nRUN rm -rf OpenSceneGraph*\n"
}