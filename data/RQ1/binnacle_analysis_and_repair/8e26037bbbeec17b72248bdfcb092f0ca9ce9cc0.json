{
  "startTime": 1674246691274,
  "endTime": 1674246691423,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\nMAINTAINER dev@jpillora.com\n# prepare go env\nENV GOPATH /go\nENV NAME cloud-torrent\nENV PACKAGE github.com/jpillora/$NAME\nENV PACKAGE_DIR $GOPATH/src/$PACKAGE\nENV GOLANG_VERSION 1.7.1\nENV GOLANG_SRC_URL https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\nENV GOLANG_SRC_SHA256 2b843f133b81b7995f26d0cb64bbdbb9d0704b90c44df45f844d28881ad442d3\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n# https://golang.org/issue/14851\nCOPY docker-golang.patch /no-pic.patch\n# in one step (to prevent creating superfluous layers):\n# 1. fetch and install temporary build programs,\n# 2. build cloud-torrent alpine binary\n# 3. remove build programs\nRUN set -ex \\\n    && apk update \\\n\t&& apk add --no-cache ca-certificates \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tbash \\\n\t\tgcc \\\n\t\tmusl-dev \\\n\t\topenssl \\\n\t\tgit \\\n\t\tgo \\\n\t&& export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\\n\t&& wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \\\n\t&& echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C /usr/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz \\\n\t&& cd /usr/local/go/src \\\n\t&& patch -p2 -i /no-pic.patch \\\n\t&& ./make.bash \\\n\t&& mkdir -p $PACKAGE_DIR \\\n\t&& git clone https://$PACKAGE.git $PACKAGE_DIR \\\n\t&& cd $PACKAGE_DIR \\\n\t&& go build -ldflags \"-X main.VERSION=$(git describe --abbrev=0 --tags)\" -o /usr/local/bin/$NAME \\\n\t&& apk del .build-deps \\\n\t&& rm -rf /no-pic.patch $GOPATH /usr/local/go\n#run!\nENTRYPOINT [\"cloud-torrent\"]\n"
}