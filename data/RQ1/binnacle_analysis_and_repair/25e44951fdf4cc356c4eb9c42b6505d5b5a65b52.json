{
  "startTime": 1674249848026,
  "endTime": 1674249848209,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.16\n\n# Dependencies\nRUN DEBIAN_FRONTEND='noninteractive' add-apt-repository ppa:nginx/stable && \\\n  sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list' && \\\n  curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n  apt-get update && \\\n  DEBIAN_FRONTEND='noninteractive' apt-get --no-install-recommends -y --force-yes install wget \\\n  python-dev build-essential ncurses-dev software-properties-common \\\n  python-software-properties libpq-dev binutils gdal-bin libproj-dev \\\n  libgdal-dev python-gdal ncurses-dev postgresql-9.4-postgis-scripts \\\n  nginx-full git-core && rm -rf /var/lib/apt/lists/*;\n\n# Due to an ubuntu bug (#1306991) we can't use the ubuntu provided pip package, so we're using\n# the recommended way: http://pip.readthedocs.org/en/latest/installing.html#install-pip\nRUN curl -f --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python2.7\n\n# APP_HOME, if you change this variable make sure you update the files in docker/ too\nENV APP_HOME /srv/postcodeinfo\n\nRUN mkdir -p /var/log/gunicorn /var/log/nginx/postcodeinfo\nRUN touch /var/log/gunicorn/access.log /var/log/gunicorn/error.log\nRUN chown -R www-data:www-data /var/log/gunicorn && chmod -R g+s /var/log/gunicorn\n\n# copy the nginx config\nADD ./docker/nginx.conf /etc/nginx/nginx.conf\n\n# install service files for runit\nADD ./docker/nginx.service /etc/service/nginx/run\nADD ./docker/gunicorn.service /etc/service/gunicorn/run\nADD ./docker/syslog-format.conf /etc/syslog-ng/conf.d/001-format.conf\n\n# create cache dir owned by the web server\nRUN mkdir -p /var/cache/postcodeinfo && chown www-data /var/cache/postcodeinfo\n\n# Define mountable directories.\nVOLUME [\"/var/log/nginx\", \"/var/log/gunicorn\"]\n\n# Add project directory to docker\nWORKDIR ${APP_HOME}\nADD . ${APP_HOME}\nRUN rm -rf ${APP_HOME}/.git\nRUN chown -R www-data: ${APP_HOME}\nRUN cd ${APP_HOME} && pip install --no-cache-dir -r requirements.txt\nRUN ./manage.py collectstatic --noinput\n\n#Â List of tunables (env vars) used by apps inside the container.\n#ENV DJANGO_DEBUG true\n#ENV DJANGO_ALLOWED_HOSTS 127.0.0.1\n#ENV SECRET_KEY tfZmYFM7KWWbSujx2F4WZyYAIcUrQRZp\n#ENV OS_FTP_USERNAME anonymous\n#ENV OS_FTP_PASSWORD anonymous@\n#ENV DB_NAME postcodeinfo\n#ENV DB_USERNAME postcodeinfo\n#ENV DB_PASSWORD postcodeinfo\n#ENV DB_HOST postgres\n#ENV DB_PORT 5432\n\nEXPOSE 80\n\n# Slim down the image\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n"
}