{
  "startTime": 1674237102727,
  "endTime": 1674237103094,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:17.04\n\n# gcc for cgo\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tcurl \\\n\t\tpkg-config && rm -rf /var/lib/apt/lists/*;\n\nENV GOLANG_VERSION 1.8.3\n\nRUN apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\nENV capath /etc/ssl/certs/\nENV cacert /etc/ssl/certs/ca-certificates.crt\nRUN curl -f -sL https://golang.org/dl/go1.8.3.linux-amd64.tar.gz | tar -C /usr/local -xzf -\nENV PATH /usr/local/go/bin:${PATH}\nRUN\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\nRUN apt-get install --no-install-recommends -y git build-essential cmake xxd gdb && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /opt\nRUN git clone https://github.com/iotaledger/ccurl\nRUN cd ccurl && git submodule update --init --recursive\nRUN cd ccurl && mkdir build && cd build && cmake .. && cmake --build . && mv bin/ccurl-cli /opt/ccurl\n\nRUN go get -u github.com/Masterminds/glide\n\nRUN mkdir -p /go/src/github.com/iotaledger/sandbox\n\nCOPY . /go/src/github.com/iotaledger/sandbox\n\nWORKDIR /go/src/github.com/iotaledger/sandbox\n\nRUN glide install\n\nRUN go build -o sandbox-worker ./cmd/worker\nCMD [\"./sandbox-worker\"]\n"
}