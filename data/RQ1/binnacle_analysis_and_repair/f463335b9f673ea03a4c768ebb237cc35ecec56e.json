{
  "startTime": 1674244249470,
  "endTime": 1674244249691,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8 as liberica\n\n### Modify argument LIBERICA_IMAGE_VARIANT or redefine it via --build-arg parameter to have specific liberica image installed:\n###    docker build . --build-arg LIBERICA_IMAGE_VARIANT=[full|lite|base]\n### base: minimal image with compressed java.base module, Server VM and optional files stripped, ~37 MB with Alpine base\n### lite: lite image with minimal footprint and Server VM, ~ 100 MB\n### full: full jdk image with Server VM and jmods, can be used to create arbirary module set, ~180 MB\n\nENV  LANG=en_US.UTF-8 \\\n     LANGUAGE=en_US:en\n#\t LC_ALL=en_US.UTF-8\n\nARG LIBERICA_IMAGE_VARIANT=lite\n\nARG LIBERICA_JVM_DIR=/usr/lib/jvm\nARG LIBERICA_ROOT=${LIBERICA_JVM_DIR}/bellsoft-java12\nARG LIBERICA_VERSION=12.0.1\nARG LIBERICA_VARIANT=jdk\nARG LIBERICA_RELEASE_TAG=\nARG LIBERICA_ARCH=x64\nARG LIBERICA_GLIBC=no\n\nRUN RTAG=\"$LIBERICA_RELEASE_TAG\" && if [ \"x${RTAG}\" = \"x\" ]; then RTAG=\"$LIBERICA_VERSION\"; fi && \\\n  RSUFFIX=\"\" && if [ \"$LIBERICA_IMAGE_VARIANT\" = \"lite\" ]; then RSUFFIX=\"-lite\"; fi && \\\n  LIBSUFFIX=\"\" && if [ \"$LIBERICA_GLIBC\" = \"no\" ]; then LIBSUFFIX=\"-musl\"; fi && \\\n  mkdir -p /tmp/java && \\\n  PKG=`echo \"bellsoft-${LIBERICA_VARIANT}${LIBERICA_VERSION}-linux-${LIBERICA_ARCH}${LIBSUFFIX}${RSUFFIX}.tar.gz\"` && \\\n  wget \"https://download.bell-sw.com/java/${LIBERICA_VERSION}/${PKG}\" -O /tmp/java/jdk.tar.gz && \\\n  SHA1=`wget -q \"https://download.bell-sw.com/sha1sum/java/${LIBERICA_VERSION}\" -O - | grep ${PKG} | cut -f1 -d' '` && \\\n  echo \"${SHA1} */tmp/java/jdk.tar.gz\" | sha1sum -c - && \\\n  tar xzf /tmp/java/jdk.tar.gz -C /tmp/java && \\\n  UNPACKED_ROOT=\"/tmp/java/${LIBERICA_VARIANT}-${LIBERICA_VERSION}\" && \\\n  if [ \"$LIBERICA_IMAGE_VARIANT\" = \"lite\" ]; then mkdir -pv \"${LIBERICA_ROOT}\" && find /tmp/java/${LIBERICA_VARIANT}* -maxdepth 1 -mindepth 1 -exec mv -v \"{}\" \"${LIBERICA_ROOT}/\" \\; ; fi && \\\n  if [ \"$LIBERICA_IMAGE_VARIANT\" = \"base\" ]; then mkdir -pv \"${LIBERICA_JVM_DIR}\" && \"${UNPACKED_ROOT}/bin/jlink\" --add-modules java.base --compress=2 --no-header-files --no-man-pages --strip-debug --module-path \\\n    \"${UNPACKED_ROOT}\"/jmods --vm=server --output \"${LIBERICA_ROOT}\"; fi && \\\n  if [ \"$LIBERICA_IMAGE_VARIANT\" = \"full\" ]; then mkdir -pv \"${LIBERICA_JVM_DIR}\" && MODS=`ls \"${UNPACKED_ROOT}/jmods/\" | sed \"s/.jmod//\" | grep -v javafx | tr '\\n' ', ' | sed \"s/,$//\"` && \\\n    \"${UNPACKED_ROOT}/bin/jlink\" --add-modules \"${MODS}\" --module-path \"${UNPACKED_ROOT}/jmods\" --vm=server --output \"${LIBERICA_ROOT}\"; fi && \\\n  rm -rf /tmp/java && rm -rf /tmp/hsperfdata_root && rm /tmp/java/jdk.tar.gz\n\nENV JAVA_HOME=${LIBERICA_ROOT} \\\n\tPATH=${LIBERICA_ROOT}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n"
}