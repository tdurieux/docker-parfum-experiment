{
  "startTime": 1674238793999,
  "endTime": 1674238794398,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n\nENV NGINX_VERSION 1.13.6\n\nWORKDIR /tmp\n\nRUN set -ex \\\n  && apk add --no-cache \\\n    ca-certificates \\\n    libressl \\\n    pcre \\\n    zlib \\\n    logrotate \\\n  && apk add --no-cache --virtual .build-deps \\\n    build-base \\\n    linux-headers \\\n    libressl-dev \\\n    pcre-dev \\\n    wget \\\n    zlib-dev \\\n  && cd /tmp \\\n  && wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\n  && tar xzf nginx-${NGINX_VERSION}.tar.gz \\\n  && cd /tmp/nginx-${NGINX_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-client-body-temp-path=/var/lib/nginx/body \\\n    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --http-proxy-temp-path=/var/lib/nginx/proxy \\\n    --lock-path=/var/lock/nginx.lock \\\n    --pid-path=/var/run/nginx.pid \\\n    --with-http_gzip_static_module \\\n    --with-http_ssl_module \\\n    --with-ipv6 \\\n    --without-http_browser_module \\\n    --without-http_geo_module \\\n    --without-http_limit_req_module \\\n    --without-http_memcached_module \\\n    --without-http_referer_module \\\n    --without-http_scgi_module \\\n    --without-http_split_clients_module \\\n    --with-http_stub_status_module \\\n    --without-http_ssi_module \\\n    --without-http_userid_module \\\n    --without-http_uwsgi_module \\\n    --with-http_slice_module \\\n    --with-threads \\\n    --with-file-aio \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && make install \\\n  && mkdir -p /var/cache/nginx /var/lib/nginx/body \\\n  && apk del .build-deps \\\n  && rm -rf /tmp/* /etc/nginx/conf.d/* /etc/nginx/sites-enabled/* && rm nginx-${NGINX_VERSION}.tar.gz\n\nCOPY logrotate.conf /etc/logrotate.d/nginx\n\nRUN set -ex \\\n  && chmod 0644 /etc/logrotate.d/nginx\n\nCMD [\"start-nginx.sh\"]\n"
}