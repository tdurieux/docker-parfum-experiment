{
  "startTime": 1674245682864,
  "endTime": 1674245682980,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/rhel7\nMAINTAINER Red Hat Systems Engineering <refarch-feedback@redhat.com>\n\n### Atomic/OpenShift Labels - https://github.com/projectatomic/ContainerApplicationGenericLabels\nLABEL name=\"acme/starter\" \\\n      maintainer=\"refarch-feedback@redhat.com\" \\\n      vendor=\"Acme Corp\" \\\n      version=\"3.7\" \\\n      release=\"1\" \\\n      summary=\"Acme Corp's Starter app\" \\\n      description=\"Starter app will do .....\" \\\n### Required labels above - recommended below\n      url=\"https://www.acme.io\" \\\n      run='docker run -tdi --name ${NAME} ${IMAGE}' \\\n      io.k8s.description=\"Starter app will do .....\" \\\n      io.k8s.display-name=\"Starter app\" \\\n      io.openshift.expose-services=\"\" \\\n      io.openshift.tags=\"acme,starter\"\n\n### Atomic Help File - Write in Markdown, it will be converted to man format at build time.\n### https://github.com/projectatomic/container-best-practices/blob/master/creating/help.adoc\nCOPY help.md /tmp/\n\n### add licenses to this directory\nCOPY licenses /licenses\n\n### Add necessary Red Hat repos here\nRUN REPOLIST=rhel-7-server-rpms,rhel-7-server-optional-rpms \\\n### Add your package needs here\n    INSTALL_PKGS=\"golang-github-cpuguy83-go-md2man\" && \\\n    yum -y update-minimal --disablerepo \"*\" --enablerepo rhel-7-server-rpms --setopt=tsflags=nodocs \\\n      --security --sec-severity=Important --sec-severity=Critical && \\\n    yum -y install --disablerepo \"*\" --enablerepo ${REPOLIST} --setopt=tsflags=nodocs ${INSTALL_PKGS} && \\\n### help file markdown to man conversion\n    go-md2man -in /tmp/help.md -out /help.1 && \\\n    yum clean all && rm -rf /var/cache/yum\n\n### Setup user for build execution and application runtime\nENV APP_ROOT=/opt/app-root \\\n    USER_NAME=default \\\n    USER_UID=10001\nENV APP_HOME=${APP_ROOT}/src  PATH=$PATH:${APP_ROOT}/bin\nRUN mkdir -p ${APP_HOME}\nCOPY bin/ ${APP_ROOT}/bin/\nRUN chmod -R u+x ${APP_ROOT}/bin && \\\n    useradd -l -u ${USER_UID} -r -g 0 -d ${APP_ROOT} -s /sbin/nologin -c \"${USER_NAME} user\" ${USER_NAME} && \\\n    chown -R ${USER_UID}:0 ${APP_ROOT} && \\\n    chmod -R g=u ${APP_ROOT}\n\n####### Add app-specific needs below. #######\n### Containers should NOT run as root as a good practice\nUSER 10001\nWORKDIR ${APP_ROOT}\nVOLUME ${APP_ROOT}/logs ${APP_ROOT}/data\nCMD run\n"
}