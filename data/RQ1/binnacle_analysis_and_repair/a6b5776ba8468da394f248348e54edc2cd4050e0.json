{
  "startTime": 1674250501986,
  "endTime": 1674250502101,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 23,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 23,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedDockerfile": "# Image based on buildkite docker agent, with the tools used for Istio installer and tests.\n# This will run in a dockerfile or k8s - 'make test' should work.\n# Image to create go binaries\nFROM golang:1.12.5 as golang\nRUN GO111MODULE=\"on\" go get -u sigs.k8s.io/kind@master\n\n#get helm binary - do here to limit to only binary in final image\nRUN mkdir tmp\nRUN curl -f -Lo - https://storage.googleapis.com/kubernetes-helm/helm-v2.13.1-linux-amd64.tar.gz | (cd tmp; tar -zxvf -)\n\n# do repo for consistency - doesn't pull extra..\nRUN curl -f https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo\nRUN chmod +x /usr/local/bin/repo\n\nFROM buildkite/agent:3-ubuntu\n\n# Environment variables used in the build.\nENV     GOROOT=/usr/local/go\nENV     PATH=/usr/local/go/bin:/bin:/usr/bin:${PATH}\n\nRUN apt-get update && apt-get -qqy --no-install-recommends install make git && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -Lo - https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz | tar -C /usr/local -xzf -\n\n# It appears go test in istio/istio requires gcc\nRUN apt-get -qqy --no-install-recommends install build-essential autoconf libtool autotools-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=golang /go/bin/kind /usr/local/bin/kind\nCOPY --from=golang /go/tmp/linux-amd64/helm /usr/local/bin/helm\nCOPY --from=golang /usr/local/bin/repo /usr/local/bin/repo"
}