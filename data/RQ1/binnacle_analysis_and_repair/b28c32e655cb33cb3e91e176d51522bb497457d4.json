{
  "startTime": 1674251270488,
  "endTime": 1674251270641,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://docs.docker.com/engine/reference/builder/\n\n# FAQ\n#\n# Q: Why \"apt-get update && apt-get install\"?\n#\n# See https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/apt-get\n#\n# Q: How to debug ssh?\n#\n# Commenting out the CMD line, then shell into the machine via:\n#\n#   $ docker exec --privileged -it barry bash -l\n#\n# From the shell on the machine, run sshd in debug mode:\n#\n#   $ sudo /usr/sbin/sshd -ddd\n#\n# Q: How does /etc/ssh/keys/authorized_keys work?\n#\n# It's a Docker-created file/volume that must be mapped via \"docker run\"\n# or \"docker create\", see https://docs.docker.com/engine/reference/run/#/volume-shared-filesystems\n\nFROM ubuntu:18.04\n\n# Configure ssh (allow root to ssh)\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      openssh-server && \\\n    echo \"AuthorizedKeysCommand /bin/cat /etc/ssh/keys/authorized_keys\" >> /etc/ssh/sshd_config && \\\n    echo \"AuthorizedKeysCommandUser root\" >> /etc/ssh/sshd_config && \\\n    mkdir /var/run/sshd && rm -rf /var/lib/apt/lists/*;\nEXPOSE 22\n# TODO: Should https://github.com/Yelp/dumb-init be used here?\nCMD [ \"/usr/sbin/sshd\", \"-D\" ]\n\n# Install packages (with --no-install-recommends)\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      command-not-found \\\n      curl \\\n      git \\\n      jed \\\n      less \\\n      locales \\\n      man-db \\\n      mtr-tiny \\\n      net-tools \\\n      rsync \\\n      sudo \\\n      unzip \\\n      wget \\\n      zip && rm -rf /var/lib/apt/lists/*;\n\n# Install fish (without --no-install-recommends)\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      software-properties-common && \\\n    apt-add-repository -y ppa:fish-shell/release-3 && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      fish && rm -rf /var/lib/apt/lists/*;\n\n# Generate locale\nRUN locale-gen en_GB.UTF-8\n\n# Create user\nENV USER mjs\nRUN adduser --disabled-login --gecos \"\" $USER\nRUN echo \"$USER ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN chsh -s /usr/bin/fish $USER\n"
}