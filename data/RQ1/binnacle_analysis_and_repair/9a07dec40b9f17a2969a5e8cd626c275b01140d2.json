{
  "startTime": 1674253128410,
  "endTime": 1674253128702,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 30,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 40,
        "columnStart": 0,
        "columnEnd": 71
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 75,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 3,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 91,
        "columnEnd": 128
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lambci/lambda:build-python3.6\n\n# define env\nENV LEPTONICA_VERSION=leptonica-1.76.0\nENV TESSERACT_VERSION=4.0.0\nENV PYTHON_VERSION=3.6.1\n\n# tesseract data parameters\nARG TESSERACT_LANG\nARG TESSERACT_MODE\n\n## install dependencies\nRUN yum -y clean expire-cache && yum -y makecache fast && yum -y update && yum -y install tar xz gcc gcc-c++ make autoconf aclocal automake libtool findutils \\\nlibjpeg-devel libpng-devel libtiff-devel zlib-devel \\\nlibzip-devel freetype-devel lcms2-devel libwebp-devel \\\ntcl-devel tk-devel wget tar diffutils autoconf automake \\\nlibjpeg8-devel libtiff5-devel zlib1g-devel zip && rm -rf /var/cache/yum\n\n## build python\nRUN curl -f -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\nRUN tar xf Python-${PYTHON_VERSION}.tar.xz && rm Python-${PYTHON_VERSION}.tar.xz\nRUN mkdir -p /var/task/python\nWORKDIR Python-${PYTHON_VERSION}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/var/task/python\nRUN make -j9 && make altinstall\n\n## build leptonica\nRUN mkdir -p \"/tmp/${LEPTONICA_VERSION}-build\"\nWORKDIR \"/tmp/${LEPTONICA_VERSION}-build\"\nRUN curl -f -L -o \"${LEPTONICA_VERSION}.tar.gz\" \"https://www.leptonica.org/source/${LEPTONICA_VERSION}.tar.gz\" \\\n&& tar -zxvf ${LEPTONICA_VERSION}.tar.gz \\\n&& cd ${LEPTONICA_VERSION} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm ${LEPTONICA_VERSION}.tar.gz\n\n# build tesseract\nRUN mkdir -p \"/tmp/tesseract-${TESSERACT_VERSION}-build\"\nWORKDIR \"/tmp/${TESSERACT_VERSION}-build\"\nRUN wget https://github.com/tesseract-ocr/tesseract/archive/${TESSERACT_VERSION}.tar.gz && tar -zxvf ${TESSERACT_VERSION}.tar.gz \\\n&& cd tesseract-${TESSERACT_VERSION} && ./autogen.sh && \\\n LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\" \\\nLIBLEPT_HEADERSDIR=\"/usr/local/include/leptonica\" \\\nPKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n&& LDFLAGS=\"-L/usr/local/lib\" CFLAGS=\"-I/usr/local/include\" make && make install && rm ${TESSERACT_VERSION}.tar.gz\n\nRUN pip install --no-cache-dir \\\n  --target=/var/task/python \\\n  --global-option=build_ext --global-option=\"-L/var/lang/lib:/var/task/lib\" \\\n  --global-option=build_ext --global-option=\"-I/var/lang/include/python3.6m:/var/task/lib\" \\ tesserocr==2.3.1 --global-option=\"-L/var/lang/lib:/var/task/lib\" \\\n  --global-option=build_ext --global-option=\"-I/var/lang/include/python3.6m:/var/task/lib\" \\ tesserocr==2.3.1 --global-option=build_ext --global-option=\"-I/var/lang/include/python3.6m:/var/task/lib\" \\ tesserocr==2.3.1 --global-option=\"-I/var/lang/include/python3.6m:/var/task/lib\" \\ tesserocr==2.3.1\n\nRUN pip install --no-cache-dir \\\n  --target=/var/task/python/ pytesseract==0.2.5\nRUN pip install --no-cache-dir \\\n  --target=/var/task/python/ --upgrade cython==0.29.1\nRUN pip install --no-cache-dir \\\n  --target=/var/task/python/ --upgrade pillow==5.4.0\n\nRUN mkdir -p /var/task/tessdata\nRUN for lang in $TESSERACT_LANG; do wget https://github.com/tesseract-ocr/tessdata_${TESSERACT_MODE}/raw/master/$lang.traineddata -P /var/task/tessdata; done\n\nRUN rm -rf /var/task/Python-3.6.1*\nRUN ls /var/task/python/bin\n"
}