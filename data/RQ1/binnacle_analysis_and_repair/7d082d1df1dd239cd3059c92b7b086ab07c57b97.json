{
  "startTime": 1674241391753,
  "endTime": 1674241392245,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 81,
        "columnStart": 25,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 81,
        "columnStart": 25,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "# Image metadata and config\nFROM debian:jessie\n\nLABEL name=\"angular.io PR preview\" \\\n      description=\"This image implements the PR preview functionality for angular.io.\" \\\n      vendor=\"Angular\" \\\n      version=\"1.0\"\n\nVOLUME /aio-secrets\nVOLUME /var/www/aio-builds\n\nEXPOSE 80 443\n\n\n# Build-time args and env vars\nARG      AIO_BUILDS_DIR=/var/www/aio-builds\nARG TEST_AIO_BUILDS_DIR=/tmp/aio-builds\nARG      AIO_DOMAIN_NAME=ngbuilds.io\nARG TEST_AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME.localhost\nARG      AIO_GITHUB_ORGANIZATION=angular\nARG TEST_AIO_GITHUB_ORGANIZATION=angular\nARG      AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG TEST_AIO_GITHUB_TEAM_SLUGS=angular-core,aio-contributors\nARG      AIO_NGINX_HOSTNAME=$AIO_DOMAIN_NAME\nARG TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_DOMAIN_NAME\nARG      AIO_NGINX_PORT_HTTP=80\nARG TEST_AIO_NGINX_PORT_HTTP=8080\nARG      AIO_NGINX_PORT_HTTPS=443\nARG TEST_AIO_NGINX_PORT_HTTPS=4433\nARG      AIO_REPO_SLUG=angular/angular\nARG TEST_AIO_REPO_SLUG=test-repo/test-slug\nARG      AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG TEST_AIO_TRUSTED_PR_LABEL=\"aio: preview\"\nARG      AIO_UPLOAD_HOSTNAME=upload.localhost\nARG TEST_AIO_UPLOAD_HOSTNAME=upload.localhost\nARG      AIO_UPLOAD_MAX_SIZE=20971520\nARG TEST_AIO_UPLOAD_MAX_SIZE=20971520\nARG      AIO_UPLOAD_PORT=3000\nARG TEST_AIO_UPLOAD_PORT=3001\n\nENV AIO_BUILDS_DIR=$AIO_BUILDS_DIR                     TEST_AIO_BUILDS_DIR=$TEST_AIO_BUILDS_DIR                     \\\n    AIO_DOMAIN_NAME=$AIO_DOMAIN_NAME                   TEST_AIO_DOMAIN_NAME=$TEST_AIO_DOMAIN_NAME                   \\\n    AIO_GITHUB_ORGANIZATION=$AIO_GITHUB_ORGANIZATION   TEST_AIO_GITHUB_ORGANIZATION=$TEST_AIO_GITHUB_ORGANIZATION   \\\n    AIO_GITHUB_TEAM_SLUGS=$AIO_GITHUB_TEAM_SLUGS       TEST_AIO_GITHUB_TEAM_SLUGS=$TEST_AIO_GITHUB_TEAM_SLUGS       \\\n    AIO_LOCALCERTS_DIR=/etc/ssl/localcerts             TEST_AIO_LOCALCERTS_DIR=/etc/ssl/localcerts-test             \\\n    AIO_NGINX_HOSTNAME=$AIO_NGINX_HOSTNAME             TEST_AIO_NGINX_HOSTNAME=$TEST_AIO_NGINX_HOSTNAME             \\\n    AIO_NGINX_LOGS_DIR=/var/log/aio/nginx              TEST_AIO_NGINX_LOGS_DIR=/var/log/aio/nginx-test              \\\n    AIO_NGINX_PORT_HTTP=$AIO_NGINX_PORT_HTTP           TEST_AIO_NGINX_PORT_HTTP=$TEST_AIO_NGINX_PORT_HTTP           \\\n    AIO_NGINX_PORT_HTTPS=$AIO_NGINX_PORT_HTTPS         TEST_AIO_NGINX_PORT_HTTPS=$TEST_AIO_NGINX_PORT_HTTPS         \\\n    AIO_REPO_SLUG=$AIO_REPO_SLUG                       TEST_AIO_REPO_SLUG=$TEST_AIO_REPO_SLUG                       \\\n    AIO_SCRIPTS_JS_DIR=/usr/share/aio-scripts-js                                                                    \\\n    AIO_SCRIPTS_SH_DIR=/usr/share/aio-scripts-sh                                                                    \\\n    AIO_TRUSTED_PR_LABEL=$AIO_TRUSTED_PR_LABEL         TEST_AIO_TRUSTED_PR_LABEL=$TEST_AIO_TRUSTED_PR_LABEL         \\\n    AIO_UPLOAD_HOSTNAME=$AIO_UPLOAD_HOSTNAME           TEST_AIO_UPLOAD_HOSTNAME=$TEST_AIO_UPLOAD_HOSTNAME           \\\n    AIO_UPLOAD_MAX_SIZE=$AIO_UPLOAD_MAX_SIZE           TEST_AIO_UPLOAD_MAX_SIZE=$TEST_AIO_UPLOAD_MAX_SIZE           \\\n    AIO_UPLOAD_PORT=$AIO_UPLOAD_PORT                   TEST_AIO_UPLOAD_PORT=$TEST_AIO_UPLOAD_PORT                   \\\n    AIO_WWW_USER=www-data                                                                                           \\\n    NODE_ENV=production\n\n\n# Create directory for logs\nRUN mkdir /var/log/aio\n\n\n# Add extra package sources\nRUN apt-get update -y && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f --silent --show-error --location https://deb.nodesource.com/setup_6.x | bash -\nRUN curl -f --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN echo \"deb http://ftp.debian.org/debian jessie-backports main\" | tee /etc/apt/sources.list.d/backports.list\n\n\n# Install packages\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    chkconfig \\\n    cron \\\n    dnsmasq \\\n    nano \\\n    nodejs \\\n    openssl \\\n    rsyslog \\\n    yarn && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -t jessie-backports -y nginx && rm -rf /var/lib/apt/lists/*;\nRUN yarn global add pm2@2\n\n\n# Set up log rotation\nCOPY logrotate/* /etc/logrotate.d/\nRUN chmod 0644 /etc/logrotate.d/*\n\n\n# Set up cronjobs\nCOPY cronjobs/aio-builds-cleanup /etc/cron.d/\nRUN chmod 0744 /etc/cron.d/aio-builds-cleanup\nRUN crontab /etc/cron.d/aio-builds-cleanup\nRUN printenv | grep AIO_ >> /etc/environment\n\n\n# Set up dnsmasq\nCOPY dnsmasq/dnsmasq.conf /etc/\nRUN sed -i \"s|{{\\$AIO_NGINX_HOSTNAME}}|$AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{\\$TEST_AIO_NGINX_HOSTNAME}}|$TEST_AIO_NGINX_HOSTNAME|g\" /etc/dnsmasq.conf\nRUN sed -i \"s|{{\\$TEST_AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/dnsmasq.conf\n\n\n# Set up SSL/TLS certificates\nCOPY nginx/create-selfsigned-cert.sh /tmp/\nRUN chmod a+x /tmp/create-selfsigned-cert.sh\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-prod\" \"$AIO_NGINX_HOSTNAME\" \"$AIO_LOCALCERTS_DIR\"\nRUN /tmp/create-selfsigned-cert.sh \"selfcert-test\" \"$TEST_AIO_NGINX_HOSTNAME\" \"$TEST_AIO_LOCALCERTS_DIR\"\nRUN rm /tmp/create-selfsigned-cert.sh\nRUN update-ca-certificates\n\n\n# Set up nginx (for production and testing)\nRUN sed -i -E \"s|^user\\s+\\S+;|user $AIO_WWW_USER;|\" /etc/nginx/nginx.conf\nRUN rm -f /etc/nginx/conf.d/*\nRUN rm -f /etc/nginx/sites-enabled/*\n\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_BUILDS_DIR}}|$AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_DOMAIN_NAME}}|$AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_LOCALCERTS_DIR}}|$AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_NGINX_LOGS_DIR}}|$AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_NGINX_PORT_HTTP}}|$AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_NGINX_PORT_HTTPS}}|$AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_HOSTNAME}}|$AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_MAX_SIZE}}|$AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-prod.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_PORT}}|$AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-prod.conf\n\nCOPY nginx/aio-builds.conf /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_BUILDS_DIR}}|$TEST_AIO_BUILDS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_DOMAIN_NAME}}|$TEST_AIO_DOMAIN_NAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_LOCALCERTS_DIR}}|$TEST_AIO_LOCALCERTS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_NGINX_LOGS_DIR}}|$TEST_AIO_NGINX_LOGS_DIR|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_NGINX_PORT_HTTP}}|$TEST_AIO_NGINX_PORT_HTTP|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_NGINX_PORT_HTTPS}}|$TEST_AIO_NGINX_PORT_HTTPS|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_HOSTNAME}}|$TEST_AIO_UPLOAD_HOSTNAME|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_MAX_SIZE}}|$TEST_AIO_UPLOAD_MAX_SIZE|g\" /etc/nginx/conf.d/aio-builds-test.conf\nRUN sed -i \"s|{{\\$AIO_UPLOAD_PORT}}|$TEST_AIO_UPLOAD_PORT|g\" /etc/nginx/conf.d/aio-builds-test.conf\n\n\n# Set up pm2\nRUN pm2 startup systemv -u root > /dev/null\nRUN chkconfig pm2-root on\n\n\n# Set up the shell scripts\nCOPY scripts-sh/ $AIO_SCRIPTS_SH_DIR/\nRUN chmod a+x $AIO_SCRIPTS_SH_DIR/*\nRUN find $AIO_SCRIPTS_SH_DIR -maxdepth 1 -type f -printf \"%P\\n\" \\\n    | while read file; do ln -s $AIO_SCRIPTS_SH_DIR/$file /usr/local/bin/aio-${file%.*}; done\n\n\n# Set up the Node.js scripts\nCOPY scripts-js/ $AIO_SCRIPTS_JS_DIR/\nWORKDIR $AIO_SCRIPTS_JS_DIR/\nRUN yarn install --production --frozen-lockfile && yarn cache clean;\n\n\n# Set up health check\nHEALTHCHECK --interval=5m CMD /usr/local/bin/aio-health-check\n\n\n# Go!\nWORKDIR /\nCMD aio-init && tail -f /dev/null\n"
}