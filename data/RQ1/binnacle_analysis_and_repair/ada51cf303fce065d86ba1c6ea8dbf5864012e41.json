{
  "startTime": 1674246535936,
  "endTime": 1674246536478,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 55,
        "columnStart": 24,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 55,
        "columnStart": 24,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This Docker image encapsulates the Collaborative Research Into Threats (CRITs)\n# malware and threat repository by The MITRE Corporation from https://crits.github.io/\n#\n# To run this image after installing Docker, use a command like this, replacing “~/crits-data\"\n# with the path to the location for storing CRITs data, indefinitely:\n#\n# sudo docker run --rm -it -v ~/crits-data:/home/nonroot/workdir -p 8443:8443 remnux/crits\n#\n# Before running CRITs, create the ~/crits-data directory and make it world-accessible\n# (“chmod a+xwr\").\n#\n\nFROM ubuntu:16.04\nMAINTAINER Zod (@wzod)\n\nENV DEBIAN_FRONTEND noninteractive\nENV LC_ALL C\n\nUSER root\nRUN apt-get -qq update && \\\n  apt-get install --no-install-recommends -y software-properties-common && \\\n  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 && \\\n  echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list && \\\n  apt-add-repository -y universe && \\\n  apt-get -qq update && apt-get install --no-install-recommends -y --fix-missing \\\n  apache2 \\\n  build-essential \\\n  curl \\\n  git \\\n  libevent-dev \\\n  libz-dev \\\n  libjpeg-dev \\\n  libfuzzy-dev \\\n  libldap2-dev \\\n  libpcap-dev \\\n  libpcre3-dev \\\n  libsasl2-dev \\\n  libssl-dev \\\n  libtool \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  libyaml-dev \\\n  mongodb-org \\\n  numactl \\\n  p7zip-full \\\n  python-dev \\\n  python-pip \\\n  ssdeep \\\n  swig \\\n  supervisor \\\n  upx \\\n  vim \\\n  wget \\\n  zip \\\n  libapache2-mod-wsgi && \\\n  cp /etc/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf && \\\n  ldconfig && rm -rf /var/lib/apt/lists/*;\n\n# Setup supervisord to manage apache and mongod\nRUN sed -i 's/^\\[supervisord\\]$/&\\nnodaemon\\=true\\nlogfile\\=\\/data\\/log\\/supervisord\\.log\\npidfile\\=\\/data\\/run\\/supervisord\\.pid\\n\\n\\[program\\:apache2\\]\\ncommand\\=\\/bin\\/bash\\ \\-c\\ \\\"source \\/etc\\/apache2\\/envvars\\ \\&\\&\\ exec\\ \\/usr\\/sbin\\/apache2\\ \\-DFOREGROUND\\\"\\nuser\\=nonroot\\nstdout\\_logfile\\=\\/data\\/log\\/supervisor\\/\\%\\(program\\_name\\)s\\.log\\nstderr\\_logfile\\=\\/data\\/log\\/supervisor\\/\\%\\(program\\_name\\)s\\.log\\nautostart\\=true\\nautorestart\\=true\\n\\n\\[program\\:mongod\\]\\ncommand\\=\\/usr\\/bin\\/mongod\\nstdout\\_logfile\\=\\/data\\/log\\/supervisor\\/\\%\\(program\\_name\\)s\\.log\\nstderr\\_logfile\\=\\/data\\/log\\/supervisor\\/\\%\\(program\\_name\\)s\\.log\\nautostart\\=true\\nautorestart\\=true\\n/' /etc/supervisor/conf.d/supervisord.conf\n\n# Create nonroot account\nRUN groupadd -r nonroot && \\\n  useradd -r -g nonroot -d /home/nonroot -m -s /sbin/nologin -c \"Nonroot User\" nonroot\n\n# Setup CRITs\nRUN bash -c 'mkdir -pv /data/{db,lock/apache2,log/apache2,log/supervisor,run/apache2,ssl/certs,ssl/private}' && \\\n  cd /data/ && \\\n  git clone https://github.com/crits/crits.git && \\\n  cd crits/ && \\\n  pip install --no-cache-dir -r requirements.txt\n\n# For better perfomance, include the following modifications from the host (i.e. outside of Docker container).\n#  echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse && \\\n#  echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle && \\\n#  sed -i '$ i\\echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse\\necho 1 > /proc/sys/net/ipv4/tcp_tw_recycle\\n' /etc/rc.local && \\\n\n# Setup environment\nRUN cd /data/crits/ && \\\n  touch /data/crits/logs/crits.log && \\\n  touch /data/log/startup.log && \\\n  ln -f -s /data/crits/logs/crits.log /data/log/crits.log && \\\n  chgrp -R nonroot logs && \\\n  chmod 664 /data/crits/logs/crits.log && \\\n  sed -i 's/^nonroot.*$/&www\\-data/' /etc/group && \\\n\n  cp crits/config/database_example.py crits/config/database.py && \\\n  SC=$(cat /dev/urandom | LC_CTYPE=C tr -dc 'abcdefghijklmnopqrstuvwxyz0123456789!@#%^&*(-_=+)' | fold -w 50 | head -n 1) && \\\n  SE=$(echo ${SC} | sed -e 's/\\\\/\\\\\\\\/g' | sed -e 's/\\//\\\\\\//g' | sed -e 's/&/\\\\\\&/g') && \\\n  sed -i -e \"s/^\\(SECRET_KEY = \\).*$/\\1\\'${SE}\\'/1\" crits/config/database.py\n\n# Setup Apache web server\nRUN /etc/init.d/apache2 stop && \\\n  rm -rf /etc/apache2/sites-available/* && \\\n  cp /data/crits/extras/*.conf /etc/apache2 && \\\n  cp -r /data/crits/extras/sites-available /etc/apache2 && \\\n  rm /etc/apache2/sites-enabled/* && \\\n  ln -f -s /etc/apache2/sites-available/default-ssl /etc/apache2/sites-enabled/default-ssl && \\\n  mkdir -pv /etc/apache2/conf.d/i && \\\n  usermod -a -G nonroot www-data\n\n# Setup self-signed cert and perform initial setup\nRUN cd /tmp && \\\n  openssl req -nodes -newkey rsa:4096 -keyout new.cert.key -out new.cert.csr -subj \"/CN=CRITs/O=REMnux/C=US\" && \\\n  openssl x509 -in new.cert.csr -out new.cert.cert -req -signkey new.cert.key -days 1825 && \\\n  cp new.cert.cert /data/ssl/certs/crits.crt && \\ \n  cp new.cert.key  /data/ssl/private/crits.plain.key && \\\n  chown -R nonroot /data/ && \\\n  a2enmod ssl && \\\n\n  export \"LANG=en_US.UTF-8\" && \\\n  sed -i \"/export\\ LANG\\=C/ s/C/en\\_US\\.UTF\\-8/\" /etc/apache2/envvars && \\\n  sed -i '$ i\\\\n0 * * * *       root    cd /data/crits/ && /usr/bin/python manage.py mapreduces\\n0 * * * *       root    cd /data/crits/ && /usr/bin/python manage.py generate_notifications' /etc/crontab && \\\n  sed -i 's/^CustomLog \\/var/CustomLog\\ \\/data/' /etc/apache2/apache2.conf && \\\n  sed -i 's/^ErrorLog\\ \\/var/ErrorLog\\ \\/data/' /etc/apache2/apache2.conf && \\\n  sed -i 's/\\/var/\\/data/' /etc/apache2/envvars && \\\n  sed -i 's/www\\-data/nonroot/' /etc/apache2/envvars && \\\n  sed -i 's/\\ 443/\\ 8443/' /etc/apache2/ports.conf && \\\n  sed -i 's/\\/var/\\/data/' /etc/apache2/sites-available/default && \\\n  sed -i 's/443/8443/' /etc/apache2/sites-available/default-ssl && \\\n  sed -i 's/\\/etc/\\/data/' /etc/apache2/sites-available/default-ssl && \\ \n  sed -i 's/\\/var/\\/data/' /etc/apache2/sites-available/default-ssl && \\\n  sed -i 's/\\/var/\\/data/' /etc/supervisor/conf.d/supervisord.conf && \\\n  sed -i -e :a -e '$d;N;2,3ba' -e 'P;D'  /etc/supervisor/conf.d/supervisord.conf && \\\n  sed -i 's/\\/var/\\/data/' /etc/supervisor/supervisord.conf && \\\n  sed -i 's/\\$CWD/\\/data\\/log\\//' /etc/supervisor/supervisord.conf && \\\n  sed -i 's/\\$CWD/\\/data\\/log\\//' /etc/supervisor/conf.d/supervisord.conf\n\nRUN ldconfig && \\\n  apt-get remove -y --purge build-essential libtool && \\\n  apt-get autoremove -y --purge && \\\n  apt-get clean -y && \\\n  rm -rf /tmp/* && \\\n  rm -rf /var/lib/apt/lists/*\n\nUSER nonroot\nENV HOME /home/nonroot\nENV USER nonroot\nWORKDIR /data/crits\n\n# Expose ports 8443 and 27017 from the container to the host\nEXPOSE 8443 27017\n\nENTRYPOINT /usr/bin/supervisord --user=nonroot -c /etc/supervisor/conf.d/supervisord.conf & > /data/log/startup.log; sleep 5; rm /data/db/mongod.lock; /usr/bin/mongod --fork --logpath /data/crits/logs/mongodb.log --logappend --nohttpinterface --dbpath /data/db --smallfiles && python /data/crits/manage.py create_default_collections && python /data/crits/manage.py users -a -A -e \"nonroot@crits.local\" -f \"Nonroot\" -l \"User\" -o \"REMnux\" -u \"nonroot\" > /dev/null && python /data/crits/manage.py setconfig allowed_hosts \"*\" && printf \"\\n\" && echo \"To access CRITS user interface, go https://localhost:8443 and use the following credentials:\" && printf \"\\n\" && echo \"Username: nonroot\" && echo -n \"Password: \" && python /data/crits/manage.py users -u nonroot -r 2> /dev/null | grep ^New | awk -F:\\  '{print $2}' && printf \"\\n\" && echo \"Please change the temporary password upon successful login to the web interface by clicking on 'Nonroot User' near the top left panel and selecting 'Change Password'.\" && printf \"\\n\" && echo \"If changes made to the CRITs application require a restart of the web server, run 'service apache2 stop' and supervisor will automatically restart the web server for you.\" && printf \"\\n\" && /bin/bash\n"
}