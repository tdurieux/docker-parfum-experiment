{
  "startTime": 1674234311476,
  "endTime": 1674234311633,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# mount the GHC source code into /home/ghc\n#\n#    sudo docker run --rm -i -t -v `pwd`:/home/ghc gregweber/ghc-haskell-dev /bin/bash\n#\n# There is one final setup step to run once you have the image up:\n#\n#    arc install-certificate\n#\n# This places a .arcrc file (which is ignored) in your repo\n# arc is a tool to interface with phabricator, the main ghc development tool.\n# When you have a patch ready, run:\n#\n#    arc diff\n#\n# Look here on how to kick off your first build:\n# https://ghc.haskell.org/trac/ghc/wiki/Building/Hacking\n\nFROM debian:testing\nMAINTAINER Greg Weber\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\n  gnupg \\\n  gpgv && rm -rf /var/lib/apt/lists/*;\n\n## add ppa for ubuntu trusty haskell packages\n# from darinmorrison/haskell\n# from http://downloads.haskell.org/debian/\nRUN  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80  --recv-keys BA3CBA3FFE22B574 \\\n  && echo 'deb     http://downloads.haskell.org/debian stretch main' >> /etc/apt/sources.list.d/haskell.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\n  # from darinmorrison/haskell, related to ncurses, not sure if it is needed\n  libtinfo5 \\\n\n  # mentioned on the GHC wiki\n  autoconf automake libtool make libgmp-dev ncurses-dev g++ python bzip2 ca-certificates \\\n  llvm \\\n  llvm-6.0 \\\n\n  xz-utils \\\n\n  ## install minimal set of haskell packages\n  # from darinmorrison/haskell\n  ghc-8.4.4 \\\n  alex \\\n  cabal-install-2.4 \\\n  happy \\\n\n  # development conveniences\n  sudo xutils-dev \\\n\n  # For document generation\n  xsltproc docbook-xsl \\\n  python-sphinx \\\n  texinfo \\\n\n  # Needed for testing current HEAD\n  python3 \\\n\n  # Needed for running nofib\n  time \\\n\n  # arc tool\n  # It makes a lot more sense to run this from your host\n  git php-cli php-curl libssl-dev vim-tiny \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /php && cd /php \\\n  && git clone https://github.com/phacility/libphutil.git \\\n  && git clone https://github.com/phacility/arcanist.git\n\n# for building the ghc manual\n#RUN apt-get update \\\n# && apt-get install -y dblatex docbook-xsl docbook-utils \\\n# && apt-get clean\n\nENV LANG     C.UTF-8\nENV LC_ALL   C.UTF-8\nENV LANGUAGE C.UTF-8\n\nRUN useradd -m -d /home/ghc -s /bin/bash ghc\nRUN echo \"ghc ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/ghc && chmod 0440 /etc/sudoers.d/ghc\nENV HOME /home/ghc\nWORKDIR /home/ghc\nUSER ghc\n\nENV PATH /opt/ghc/8.4.4/bin:/opt/cabal/2.4/bin:/php/arcanist/bin:$PATH\n\n# Build dependencies for nofib-analyse\nRUN cabal update && cabal install html regex-compat\n\n"
}