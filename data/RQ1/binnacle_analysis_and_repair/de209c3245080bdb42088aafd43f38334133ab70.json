{
  "startTime": 1674241770616,
  "endTime": 1674241770678,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\nMAINTAINER Abelardo Pardo\n\n# Project Files and Settings\nENV PROJECT=ontask\nARG PROJECT=ontask\nARG PROJECT_DIR=/data/web\nENV PROJECT_DIR=${PROJECT_DIR}\nENV PROJECT_PATH=${PROJECT_DIR}\nENV CELERY_BIN=/usr/local/bin/celery\nENV PYTHONUNBUFFERED 1\n\n# Set up packages\nRUN apt-get -yqq update && \\\n    apt-get install --no-install-recommends -yqq \\\n      apache2 \\\n      apache2-utils \\\n      apt-utils \\\n      curl \\\n      dialog \\\n      libapache2-mod-wsgi-py3 \\\n      python3 \\\n      python3-pip \\\n      postgresql-client \\\n      libpq-dev \\\n      rsync \\\n      vim \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Copy apache config\nCOPY docker/server/000-default.conf /etc/apache2/sites-available\n\n# Get pip\nRUN python3 -m pip install --no-cache-dir --upgrade pip\n\n# Create directory and copy django project\nRUN mkdir -p $PROJECT_DIR\nWORKDIR $PROJECT_DIR\nCOPY --chown=www-data:www-data . $PROJECT_DIR\n\n# Install Requirements\nRUN python3 -m pip install --no-cache-dir --upgrade -r requirements/development.txt\n\n# Generate the documentation (so that this step is not repeated if restarting)\nWORKDIR $PROJECT_DIR/docs_src\nRUN make clean html copy_to_docs\n\nENTRYPOINT [\"/data/web/docker/server/docker-entrypoint.sh\"]\n\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n\nEXPOSE 80\n\n"
}