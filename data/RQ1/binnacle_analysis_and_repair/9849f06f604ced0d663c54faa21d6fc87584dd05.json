{
  "startTime": 1674242541176,
  "endTime": 1674242541569,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kpengboy/trisquel:latest\n\nRUN useradd jenkins -u 1500 -g root\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        build-essential m4 apt-utils \\\n        libssl-dev \\\n        libev-dev \\\n        libbz2-dev \\\n        libsnappy-dev \\\n        help2man \\\n        pkg-config \\\n        time \\\n        aspcud \\\n        wget \\\n        curl \\\n        rsync \\\n        darcs \\\n        git \\\n        unzip \\\n        automake \\\n        python-dev \\\n        python-pip \\\n        debhelper \\\n        sudo \\\n        iptables \\\n        net-tools \\\n        ncurses-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh\n\nenv ocaml_version=4.03.0\nRUN sh ./opam_installer.sh /usr/local/bin ${ocaml_version}\n\nENV opam_root=/home/jenkins/OPAM\nENV opam_env=\"opam config env --root=${opam_root}\"\nRUN opam init --root=${opam_root} --comp ${ocaml_version}\n\nRUN eval `${opam_env}` && \\\n    opam update && \\\n    opam install -y \\\n        ocamlfind \\\n        ssl.0.5.2 \\\n        camlbz2 \\\n        snappy \\\n        bisect \\\n        lwt.2.5.2 \\\n        camltc.0.9.3 \\\n        ocplib-endian.1.0 \\\n        quickcheck.1.0.2 \\\n        conf-libev \\\n        core.113.33.02+4.03 \\\n        redis.0.3.3 \\\n        uri.1.9.2\n\n\nRUN pip install --no-cache-dir fabric junit-xml nose simplejson python-etcd\n\nRUN mkdir /home/tests\nRUN chmod 777 /home/tests\n\n# Install etcd:\nENV etcd_version=2.3.5\nRUN curl -f \\\n      -L https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz \\\n      -o etcd-v${etcd_version}-linux-amd64.tar.gz \\\n    && tar xzvf etcd-v${etcd_version}-linux-amd64.tar.gz \\\n    && cp ./etcd-v${etcd_version}-linux-amd64/etcd /usr/bin \\\n    && cp ./etcd-v${etcd_version}-linux-amd64/etcdctl /usr/bin \\\n    && rm -rf etcd-* && rm etcd-v${etcd_version}-linux-amd64.tar.gz\n\n# Install redis:\nRUN wget https://download.redis.io/releases/redis-3.0.7.tar.gz\nRUN tar xzvf redis-3.0.7.tar.gz && rm redis-3.0.7.tar.gz\nRUN cd redis-3.0.7 && make\nRUN cp ./redis-3.0.7/src/redis-server /usr/bin\nRUN cp ./redis-3.0.7/src/redis-cli /usr/bin\n\n\nRUN chmod ugoa+rxw -R ${opam_root}\nRUN su - -c \"echo 'eval `${opam_env}`' >> /home/jenkins/.profile\"\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >/etc/sudoers.d/jenkins\n\n\nENTRYPOINT [\"/home/jenkins/arakoon/docker/docker-entrypoint.sh\"]\n"
}