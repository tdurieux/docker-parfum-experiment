{
  "startTime": 1674243973356,
  "endTime": 1674243973924,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "ARG DOCKER_PREFIX=\n\nFROM ${DOCKER_PREFIX}ubuntu:artful\n\nARG TRUST_CERT=\n\nRUN if [ ! -z \"$TRUST_CERT\" ]; then \\\n        echo \"$TRUST_CERT\" > /usr/local/share/ca-certificates/build-trust.crt ; \\\n        update-ca-certificates ; \\\n    fi\n\n# Normalize apt sources\nRUN cat /etc/apt/sources.list | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.1 && \\\n    cat /etc/apt/sources.list | sed s/deb\\ /deb-src\\ /g | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.2 && \\\n    cat sources.tmp.1 sources.tmp.2 > /etc/apt/sources.list && \\\n    rm -f sources.tmp.1 sources.tmp.2\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get build-dep -y squid && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget tar xz-utils libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nARG SQUID_VERSION=4.0.21\n\n# TODO: verify the squid download with the signing key\nRUN mkdir /src \\\n    && cd /src \\\n    && wget https://www.squid-cache.org/Versions/v4/squid-$SQUID_VERSION.tar.xz \\\n    && mkdir squid \\\n    && tar -C squid --strip-components=1 -xvf squid-$SQUID_VERSION.tar.xz && rm squid-$SQUID_VERSION.tar.xz\n\nRUN cd /src/squid && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --datadir=/usr/share/squid4 \\\n\t\t--sysconfdir=/etc/squid4 \\\n\t\t--localstatedir=/var \\\n\t\t--mandir=/usr/share/man \\\n\t\t--enable-inline \\\n\t\t--enable-async-io=8 \\\n\t\t--enable-storeio=\"ufs,aufs,diskd,rock\" \\\n\t\t--enable-removal-policies=\"lru,heap\" \\\n\t\t--enable-delay-pools \\\n\t\t--enable-cache-digests \\\n\t\t--enable-underscores \\\n\t\t--enable-icap-client \\\n\t\t--enable-follow-x-forwarded-for \\\n\t\t--enable-auth-basic=\"DB,fake,getpwnam,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB\" \\\n\t\t--enable-auth-digest=\"file,LDAP\" \\\n\t\t--enable-auth-negotiate=\"kerberos,wrapper\" \\\n\t\t--enable-auth-ntlm=\"fake\" \\\n\t\t--enable-external-acl-helpers=\"file_userip,kerberos_ldap_group,LDAP_group,session,SQL_session,unix_group,wbinfo_group\" \\\n\t\t--enable-url-rewrite-helpers=\"fake\" \\\n\t\t--enable-eui \\\n\t\t--enable-esi \\\n\t\t--enable-icmp \\\n\t\t--enable-zph-qos \\\n\t\t--with-openssl \\\n\t\t--enable-ssl \\\n\t\t--enable-ssl-crtd \\\n\t\t--disable-translation \\\n\t\t--with-swapdir=/var/spool/squid4 \\\n\t\t--with-logdir=/var/log/squid4 \\\n\t\t--with-pidfile=/var/run/squid4.pid \\\n\t\t--with-filedescriptors=65536 \\\n\t\t--with-large-files \\\n\t\t--with-default-user=proxy \\\n         --disable-arch-native\n\nARG CONCURRENCY=1\n\nRUN cd /src/squid && \\\n    make -j$CONCURRENCY && \\\n    make install\n\n# Download p2cli dependency\nRUN wget -O /usr/local/bin/p2 \\\n    https://github.com/wrouesnel/p2cli/releases/download/r1/p2 && \\\n    chmod +x /usr/local/bin/p2\n\n# Clone and build proxychains-ng for SSL upstream proxying\nARG PROXYCHAINS_COMMITTISH=7a233fb1f05bcbf3d7f5c91658932261de1e13cb\n\nRUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/rofl0r/proxychains-ng.git /src/proxychains-ng && \\\n    cd /src/proxychains-ng && \\\n    git checkout $PROXYCHAINS_COMMITTISH && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --sysconfdir=/etc && \\\n    make -j$CONCURRENCY && make install\n\nARG URL_DOH=https://github.com/wrouesnel/dns-over-https-proxy/releases/download/v0.0.2/dns-over-https-proxy_v0.0.2_linux-amd64.tar.gz\n\nRUN wget -O /tmp/doh.tgz \\\n    $URL_DOH && \\\n    tar -xvvf /tmp/doh.tgz --strip-components=1 -C /usr/local/bin/ && \\\n    chmod +x /usr/local/bin/dns-over-https-proxy && rm /tmp/doh.tgz\n\nCOPY squid.conf.p2 /squid.conf.p2\nCOPY squid.bsh /squid.bsh\n\n# Configuration environment\nENV HTTP_PORT=3128 \\\n    ICP_PORT= \\\n    HTCP_PORT= \\\n    MITM_PROXY= \\\n    MITM_CERT= \\\n    MITM_KEY= \\\n    VISIBLE_HOSTNAME=docker-squid4 \\\n    MAX_CACHE_SIZE=40000 \\\n    MAX_OBJECT_SIZE=\"1536 MB\" \\\n    MEM_CACHE_SIZE=\"128 MB\" \\\n    DNS_OVER_HTTPS_LISTEN_ADDR=\"127.0.0.153:53\" \\\n    DNS_OVER_HTTPS_SERVER=\"https://dns.google.com/resolve\" \\\n    DNS_OVER_HTTPS_NO_FALLTHROUGH=\"\" \\\n    DNS_OVER_HTTPS_FALLTHROUGH_STATUSES=NXDOMAIN \\\n    DNS_OVER_HTTPS_PREFIX_SERVER= \\\n    DNS_OVER_HTTPS_SUFFIX_SERVER=\n\nEXPOSE 3128\n\nENTRYPOINT [ \"/squid.bsh\" ]\n"
}