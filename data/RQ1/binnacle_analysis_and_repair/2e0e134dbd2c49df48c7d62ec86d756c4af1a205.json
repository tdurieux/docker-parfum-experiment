{
  "startTime": 1674252485583,
  "endTime": 1674252485775,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# ASPTAG = appsecpipeline/base-tools:1.0\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    ca-certificates \\\n    git \\\n    python-pip \\\n    python2.7 \\\n    python2.7-dev \\\n    csvtool \\\n    openjdk-9-jre-headless \\\n    nikto \\\n    unzip \\\n    nmap \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n########## AppSecPipeline Install ##########\nCOPY tools /usr/bin/appsecpipeline/tools\nCOPY dockers/base/setupdocker.sh /tmp\nENV PATH=\"/usr/bin/appsecpipeline/tools:${PATH}\"\nRUN sh /tmp/setupdocker.sh\nRUN rm /tmp/setupdocker.sh\n\n########## Tenable Install ##########\nRUN pip install --no-cache-dir -U tenable_io\n\n########## Bandit Install ##########\nRUN pip install --no-cache-dir -U bandit\n\n########## Cloc Install ##########\nARG CLOCVER=1.74\n\nRUN mkdir /tmp/cloc\nRUN wget -qO- https://github.com/AlDanial/cloc/releases/download/${CLOCVER}/cloc-${CLOCVER}.tar.gz | tar xvz -C /tmp/cloc --strip-components=1\nRUN cp /tmp/cloc/cloc /usr/bin/\nRUN rm -R /tmp/cloc\n\n########## Arachni Install ##########\n#Install Arachni, packaged apt-get install Arachni doesn't work for some reason, hangs on BrowserCluster\nARG VERSION=1.5.1\nARG WEB_VERSION=0.5.12\n\nRUN mkdir /usr/share/arachni && \\\n          wget -qO- https://github.com/Arachni/arachni/releases/download/v${VERSION}/arachni-${VERSION}-${WEB_VERSION}-linux-x86_64.tar.gz | tar xvz -C /usr/share/arachni --strip-components=1\n\nRUN echo '#!/bin/bash\\n\\ncd /usr/share/arachni/bin/ && ./arachni \"$@\"' > /usr/bin/arachni\nRUN echo '#!/bin/bash\\n\\ncd /usr/share/arachni/bin/ && ./arachni_reporter \"$@\"' > /usr/bin/arachni_reporter\n\nRUN chmod +x /usr/bin/arachni\nRUN chmod +x /usr/bin/arachni_reporter\n\n#For Arachni to run properly the appsecpipeline user needs write permissions on component cache\nRUN chown -R appsecpipeline: /usr/share/arachni/system/\n\n########## SSLLabs Scanner Install ##########\nARG SSLLAB=1.4.0\n\nRUN wget -qO- https://github.com/ssllabs/ssllabs-scan/releases/download/v${SSLLAB}/ssllabs-scan_${SSLLAB}-linux64.tgz | tar xvz -C /usr/bin --strip-components=1\n\n########## Checkmarx Install ##########\nRUN pip install --no-cache-dir -r /usr/bin/appsecpipeline/tools/checkmarx/requirements.txt\n\n########## Change to appsecpipeline user ##########\nUSER appsecpipeline\n\nENTRYPOINT [\"launch.py\"]\n\nHEALTHCHECK --interval=1m --retries=2 --timeout=5s CMD python /usr/bin/appsecpipeline/tools/health.py\n"
}