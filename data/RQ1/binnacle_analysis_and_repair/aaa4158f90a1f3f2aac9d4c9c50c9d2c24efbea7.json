{
  "startTime": 1674250918306,
  "endTime": 1674250919063,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 5,
        "columnEnd": 208
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 5,
        "columnEnd": 123
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 5,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 200,
        "lineEnd": 200,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 19,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10\n\nARG NEXTCLOUD_VERSION=16.0.1\nARG GPG_nextcloud=\"2880 6A87 8AE4 23A2 8372  792E D758 99B9 A724 937A\"\n\nARG BUILD_CORES\n\nARG NGINX_VER=1.17.0\nARG PHP_VER=7.3.6\nARG LIBICONV_VERSION=1.16\n\nLABEL description=\"A server software for creating file hosting services\" \\\n      nextcloud=\"Nextcloud v${NEXTCLOUD_VERSION}\" \\\n      maintainer=\"Starbix <starbix@laubacher.io>\" \\\n      php_version=\"PHP v$PHP_VER built from source\" \\\n      nginx_version=\"NGINX v$NGINX_VER built from source\"\n\nARG PHP_MIRROR=https://secure.php.net\nARG GNU_MIRROR=https://mirror.init7.net\n\nARG NGINX_CONF=\" \\\n    --prefix=/nginx \\\n    --sbin-path=/usr/local/sbin/nginx \\\n    --http-log-path=/nginx/logs/access.log \\\n    --error-log-path=/nginx/logs/error.log \\\n    --pid-path=/nginx/run/nginx.pid \\\n    --lock-path=/nginx/run/nginx.lock \\\n    --with-threads \\\n    --with-file-aio \\\n    --without-http_geo_module \\\n    --without-http_autoindex_module \\\n    --without-http_split_clients_module \\\n    --without-http_memcached_module \\\n    --without-http_empty_gif_module \\\n    --without-http_browser_module\"\n\nARG PHP_CONF=\" \\\n    --prefix=/usr \\\n    --libdir=/usr/lib/php \\\n    --datadir=/usr/share/php \\\n    --sysconfdir=/php/etc \\\n    --localstatedir=/php/var \\\n    --with-pear=/usr/share/php \\\n    --with-config-file-scan-dir=/php/conf.d \\\n    --with-config-file-path=/php \\\n    --enable-option-checking=fatal \\\n    --enable-zip=shared \\\n    --with-libzip=/usr \\\n    --with-pic \\\n    --disable-short-tags \\\n    --without-readline \\\n    --enable-bcmath=shared \\\n    --enable-fpm \\\n    --disable-cgi \\\n    --enable-mysqlnd \\\n    --enable-mbstring \\\n    --with-curl \\\n    --with-libedit \\\n    --with-openssl \\\n    --with-iconv=/usr/local \\\n    --with-gd \\\n    --with-jpeg-dir \\\n    --with-png-dir \\\n    --with-webp-dir \\\n    --with-xpm-dir=no \\\n    --with-freetype-dir \\\n    --disable-gd-jis-conv \\\n    --with-sodium=shared \\\n    --with-zlib\"\n\nARG PHP_EXT_LIST=\" \\\n    mysqli \\\n    ctype \\\n    dom \\\n    json \\\n    xml \\\n    mbstring \\\n    posix \\\n    xmlwriter \\\n    zip \\\n    zlib \\\n    sqlite3 \\\n    pdo_sqlite \\\n    pdo_pgsql \\\n    pdo_mysql \\\n    pcntl \\\n    curl \\\n    fileinfo \\\n    bz2 \\\n    intl \\\n    openssl \\\n    ldap \\\n    simplexml \\\n    pgsql \\\n    ftp \\\n    exif \\\n    gmp \\\n    sodium \\\n    imap\"\n\nARG CUSTOM_BUILD_PKGS=\" \\\n    freetype-dev \\\n    openldap-dev \\\n    gmp-dev \\\n    icu-dev \\\n    postgresql-dev \\\n    libpng-dev \\\n    libwebp-dev \\\n    gd-dev \\\n    libjpeg-turbo-dev \\\n    libxpm-dev \\\n    libedit-dev \\\n    libxml2-dev \\\n    openssl-dev \\\n    libbz2 \\\n    re2c \\\n    sqlite-dev \\\n    imagemagick-dev \\\n    libsodium-dev \\\n    libzip-dev \\\n    imap-dev\"\n\nARG CUSTOM_PKGS=\" \\\n    freetype \\\n    openldap \\\n    gmp \\\n    bzip2-dev \\\n    icu \\\n    libpq \\\n    libzip \\\n    libsodium \\\n    imagemagick \\\n    c-client\"\n\nENV UID=991 GID=991 \\\n    UPLOAD_MAX_SIZE=25G \\\n    APC_SHM_SIZE=128M \\\n    OPCACHE_MEM_SIZE=128 \\\n    MEMORY_LIMIT=512M \\\n    CRON_PERIOD=15m \\\n    CRON_MEMORY_LIMIT=1g \\\n    TZ=Etc/UTC \\\n    DB_TYPE=sqlite3 \\\n    DOMAIN=localhost\n\nCOPY rootfs-nginx-php /\n\nRUN apk -U upgrade \\\n && apk add -t build-dependencies \\\n    gnupg \\\n    tar \\\n    build-base \\\n    autoconf \\\n    automake \\\n    pcre-dev \\\n    libtool \\\n    samba-dev \\\n    linux-headers \\\n    libtool \\\n    build-base \\\n    pcre-dev \\\n    zlib-dev \\\n    wget \\\n    gnupg \\\n    autoconf \\\n    gcc \\\n    g++ \\\n    libc-dev \\\n    make \\\n    pkgconf \\\n    curl-dev \\\n    ca-certificates \\\n    ${CUSTOM_BUILD_PKGS} \\\n && apk add \\\n    openssl \\\n    ca-certificates \\\n    libsmbclient \\\n    tzdata \\\n    s6 \\\n    su-exec \\\n    curl \\\n    libedit \\\n    libxml2 \\\n    libwebp \\\n    gd \\\n    pcre \\\n    zlib \\\n    ${CUSTOM_PKGS} \\\n && NB_CORES=${BUILD_CORES-$(getconf _NPROCESSORS_CONF)} \\\n\n ### Source downloading\n  # && export CC=\"/gcc/bin/gcc\" \\\n  && wget https://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n  && wget https://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n  && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz \\\n  && wget ${PHP_MIRROR}/get/php-${PHP_VER}.tar.gz.asc/from/this/mirror -O /tmp/php-${PHP_VER}.tar.gz.asc \\\n  && wget ${GNU_MIRROR}/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz -O /tmp/libiconv-${LIBICONV_VERSION}.tar.gz \\\n  && mkdir -p /php/conf.d \\\n  && mkdir -p /usr/src \\\n  && tar xzf /tmp/nginx-${NGINX_VER}.tar.gz -C /usr/src \\\n  && tar xzvf /tmp/php-${PHP_VER}.tar.gz -C /usr/src \\\n  && tar xzf /tmp/libiconv-${LIBICONV_VERSION}.tar.gz -C /usr/src \\\n\n ### NGINX installation\n  && cd /usr/src/nginx-${NGINX_VER} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -m64 --param=ssp-buffer-size=4 -gsplit-dwarf -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" ${NGINX_CONF} \\\n  && make -j ${NB_CORES} \\\n  && make install \\\n\n ### GNU Libiconv installation\n  && cd /usr/src/libiconv-${LIBICONV_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n  && make && make install && libtool --finish /usr/local/lib \\\n\n ### PHP installation\n  && mv /usr/src/php-${PHP_VER} /usr/src/php \\\n  && cd /usr/src/php \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O3 -fstack-protector-strong -fpic -fpie\" LDFLAGS=\"-Wl,-O2 -Wl,--hash-style=both -pie\" ${PHP_CONF} \\\n  && make -j ${NB_CORES} \\\n  && make install \\\n\n ### Strip, clean, install modules\n  && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \\\n  && make clean \\\n  && chmod u+x /usr/local/bin/* /etc/s6.d/*/* \\\n  && docker-php-ext-install ${PHP_EXT_LIST} \\\n  && mkdir -p /nginx/logs /nginx/run /php/php-fpm.d /php/logs /php/run /php/session \\\n && pecl install \\\n    smbclient \\\n    apcu \\\n    redis \\\n    imagick \\\n && echo \"extension=smbclient.so\" > /php/conf.d/smbclient.ini \\\n && echo \"extension=redis.so\" > /php/conf.d/redis.ini \\\n && mkdir /nextcloud \\\n && cd /tmp \\\n && NEXTCLOUD_TARBALL=\"nextcloud-${NEXTCLOUD_VERSION}.tar.bz2\" \\\n && wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL} \\\n && wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}.sha512 \\\n && wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}.asc \\\n && wget -q https://nextcloud.com/nextcloud.asc \\\n && echo \"Verifying both integrity and authenticity of ${NEXTCLOUD_TARBALL}...\" \\\n && CHECKSUM_STATE=$(echo -n $(sha512sum -c ${NEXTCLOUD_TARBALL}.sha512) | tail -c 2) \\\n && if [ \"${CHECKSUM_STATE}\" != \"OK\" ]; then echo \"Warning! Checksum does not match!\" && exit 1; fi \\\n && gpg --batch --import nextcloud.asc \\\n && FINGERPRINT=\"$( LANG=C gpg --batch --verify ${NEXTCLOUD_TARBALL}.asc ${NEXTCLOUD_TARBALL} 2>&1 \\\n  | sed -n \"s#Primary key fingerprint: \\(.*\\)#\\1#p\")\" \\\n && if [ -z \"${FINGERPRINT}\" ]; then echo \"Warning! Invalid GPG signature!\" && exit 1; fi \\\n && if [ \"${FINGERPRINT}\" != \"${GPG_nextcloud}\" ]; then echo \"Warning! Wrong GPG fingerprint!\" && exit 1; fi \\\n && echo \"All seems good, now unpacking ${NEXTCLOUD_TARBALL}...\" \\\n && tar xjf ${NEXTCLOUD_TARBALL} --strip 1 -C /nextcloud \\\n && update-ca-certificates \\\n && apk del build-dependencies \\\n && rm -rf /var/cache/apk/* /tmp/* /root/.gnupg /usr/src/* /gcc && rm /tmp/nginx-${NGINX_VER}.tar.gz\n\nCOPY rootfs /\n\nRUN chmod +x /usr/local/bin/* /etc/s6.d/*/* /etc/s6.d/.s6-svscan/*\n\nVOLUME /data /config /apps2 /nextcloud/themes\n\nHEALTHCHECK --interval=2m --timeout=5s \\\n  CMD curl -f http://localhost:8888/ || exit 1\n\nEXPOSE 8888\n\nCMD [\"run.sh\"]\n"
}