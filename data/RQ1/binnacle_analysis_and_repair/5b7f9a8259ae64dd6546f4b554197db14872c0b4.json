{
  "startTime": 1674249921239,
  "endTime": 1674249921709,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 60,
        "columnEnd": 82
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 40,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 62,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 60,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 56,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 56,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 62,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 60,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 56,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 56,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ubuntu_version=16.04\nFROM ubuntu:$ubuntu_version\n# needed to do again after FROM due to docker limitation\nARG ubuntu_version\n\nARG DEBIAN_FRONTEND=noninteractive\n# do not start services during installation as this will fail and log a warning / error.\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\n\n# basic dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y wget git build-essential software-properties-common pkg-config locales && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libicu-dev libblocksruntime0 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y lsof dnsutils netcat-openbsd net-tools && rm -rf /var/lib/apt/lists/*;\n\n# local\nRUN locale-gen en_US.UTF-8\nRUN locale-gen en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nRUN echo 'export LANG=en_US.UTF-8' >> $HOME/.profile\nRUN echo 'export LANGUAGE=en_US:en' >> $HOME/.profile\nRUN echo 'export LC_ALL=en_US.UTF-8' >> $HOME/.profile\n\n# known_hosts\nRUN mkdir -p $HOME/.ssh\nRUN touch $HOME/.ssh/known_hosts\nRUN ssh-keyscan github.com 2> /dev/null >> $HOME/.ssh/known_hosts\n\n# clang\nRUN apt-get update && apt-get install --no-install-recommends -y clang-3.9 && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.9 100\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.9 100\n\n# modern curl, if needed\nARG install_curl_from_source\nRUN [ ! -z $install_curl_from_source ] || { \\\n  apt-get update && apt-get install --no-install-recommends -y curl libcurl4-openssl-dev libz-dev; \\\n} && rm -rf /var/lib/apt/lists/*;\nRUN [ -z $install_curl_from_source ] || { \\\n  apt-get update && apt-get install --no-install-recommends -y libssl-dev; \\\n} && rm -rf /var/lib/apt/lists/*;\nRUN [ -z $install_curl_from_source ] || mkdir $HOME/.curl\nRUN [ -z $install_curl_from_source ] || wget -q https://curl.haxx.se/download/curl-7.50.3.tar.gz -O $HOME/curl.tar.gz\nRUN [ -z $install_curl_from_source ] || tar xzf $HOME/curl.tar.gz --directory $HOME/.curl --strip-components=1 && rm $HOME/curl.tar.gz\nRUN [ -z $install_curl_from_source ] || ( cd $HOME/.curl && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl && make && make install && cd -)\nRUN [ -z $install_curl_from_source ] || ldconfig\n\n# ruby and jazzy for docs generation\nARG skip_ruby_from_ppa\nRUN [ -n \"$skip_ruby_from_ppa\" ] || apt-add-repository -y ppa:brightbox/ruby-ng\nRUN [ -n \"$skip_ruby_from_ppa\" ] || { \\\n  apt-get update && apt-get install --no-install-recommends -y ruby2.4 ruby2.4-dev; \\\n} && rm -rf /var/lib/apt/lists/*;\nRUN [ -z \"$skip_ruby_from_ppa\" ] || { \\\n  apt-get update && apt-get install --no-install-recommends -y ruby ruby-dev; \\\n} && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\nRUN gem install jazzy --no-ri --no-rdoc\n\n# swift\nARG swift_version=4.0.3\nARG swift_flavour=RELEASE\nARG swift_builds_suffix=release\n\nRUN mkdir $HOME/.swift\nRUN wget -q \"https://swift.org/builds/swift-${swift_version}-${swift_builds_suffix}/ubuntu$(echo $ubuntu_version | sed 's/\\.//g')/swift-${swift_version}-${swift_flavour}/swift-${swift_version}-${swift_flavour}-ubuntu${ubuntu_version}.tar.gz\" -O $HOME/swift.tar.gz\nRUN tar xzf $HOME/swift.tar.gz --directory $HOME/.swift --strip-components=1 && rm $HOME/swift.tar.gz\nRUN echo 'export PATH=\"$HOME/.swift/usr/bin:$PATH\"' >> $HOME/.profile\nRUN echo 'export LINUX_SOURCEKIT_LIB_PATH=\"$HOME/.swift/usr/lib\"' >> $HOME/.profile\n\n# script to allow mapping framepointers on linux\nRUN mkdir -p $HOME/.scripts\nRUN wget -q https://raw.githubusercontent.com/apple/swift/master/utils/symbolicate-linux-fatal -O $HOME/.scripts/symbolicate-linux-fatal\nRUN chmod 755 $HOME/.scripts/symbolicate-linux-fatal\nRUN echo 'export PATH=\"$HOME/.scripts:$PATH\"' >> $HOME/.profile\n"
}