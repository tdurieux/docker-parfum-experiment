{
  "startTime": 1674250497114,
  "endTime": 1674250497389,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 9,
        "columnEnd": 94
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 9,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 6,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 6,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Build Ubuntu Docker image for build of MIRTK\n##\n## The build of this image is time consuming. Moreover, this base image\n## rarely changes and can thus be built and pushed to Docker Hub manually.\n##\n## How to build the image:\n## - Change to the Docker/Ubuntu/ directory of the MIRTK source tree\n## - Run \"docker build -t biomedia/ubuntu:mirtk .\"\n##\n## Upload image to Docker Hub:\n## - Log in with \"docker login\" command if necessary\n## - Push image using \"docker push biomedia/ubuntu:mirtk\"\n##\n## https://hub.docker.com/r/biomedia/ubuntu/\n\nFROM ubuntu:14.04\n\nMAINTAINER Andreas Schuh <andreas.schuh.84@gmail.com>\nLABEL Description=\"Ubuntu with prerequisits for MIRTK installed\" Vendor=\"BioMedIA\"\n\n# No. of threads to use for build (--build-arg THREADS=8)\n# By default, all available CPUs are used. When a Docker Machine is used,\n# set the number of CPUs in the VirtualBox VM Settings.\nARG THREADS\n\n# When VTK_VERSION='', the official libvtk6-dev package is used.\n# Note, however, that this results in a Docker image that is about twice\n# the size of the image when a custom VTK build without Qt, wrappers,\n# and unused VTK modules is used instead!\nARG VTK_VERSION=7.0.0\n\nARG EIGEN_VERSION=3.2.8\n\n# Install prerequisites for MIRTK build\n#\n# The bzindovic/suitesparse-bugfix-1319687 PPA is required for building\n# shared libraries which link with the static SuiteSparse libraries due\n# to a bug in the official Ubuntu package:\n# https://bugs.launchpad.net/ubuntu/+source/suitesparse/+bug/1333214\nRUN NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`} \\\n    && echo \"Maximum number of build threads = $NUM_CPUS\" \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n      software-properties-common \\\n    && add-apt-repository -y ppa:bzindovic/suitesparse-bugfix-1319687 \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n      wget \\\n      gcc \\\n      g++ \\\n      make \\\n      cmake \\\n      python \\\n      freeglut3-dev \\\n      libarpack2-dev \\\n      libboost-math-dev \\\n      libboost-random-dev \\\n      libflann-dev \\\n      libgtest-dev \\\n      libnifti-dev \\\n      libpng-dev \\\n      libsuitesparse-dev \\\n      libtbb-dev \\\n      zlib1g-dev \\\n    && mkdir /usr/src/gtest/build \\\n    && cd /usr/src/gtest/build \\\n    && cmake .. \\\n    && make -j $NUM_CPUS \\\n    && mv -f libgtest.a libgtest_main.a /usr/lib \\\n    && cd /usr/src \\\n    && rm -rf /usr/src/gtest/build \\\n    && \\\n    if [ -z ${VTK_VERSION} ]; then \\\n      apt-get install --no-install-recommends -y libeigen3-dev; \\\n    else \\\n      EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION} \\\n      && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3 \\\n      && cd ${EIGEN_SOURCE_DIR} \\\n      && wget -O archive.tar.bz2 https://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2 \\\n      && tar vxjf archive.tar.bz2 --strip 1 \\\n      && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/ \\\n      && mv cmake/FindEigen3.cmake /usr/share/cmake-2.8/Modules/ \\\n      && cd /usr/src \\\n      && rm -rf ${EIGEN_SOURCE_DIR}; \\\n    fi \\\n    && \\\n    if [ -z ${VTK_VERSION} ]; then \\\n      apt-get install --no-install-recommends -y libvtk6-dev; \\\n    else \\\n      VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//` \\\n      && cd /usr/src \\\n      && wget https://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz \\\n      && tar -xvzf VTK-${VTK_VERSION}.tar.gz \\\n      && rm -f VTK-${VTK_VERSION}.tar.gz \\\n      && mkdir VTK-${VTK_VERSION}/Build \\\n      && cd VTK-${VTK_VERSION}/Build \\\n      && cmake \\\n        -D CMAKE_INSTALL_PREFIX=/usr/local \\\n        -D CMAKE_BUILD_TYPE=Release \\\n        -D CMAKE_CXX_FLAGS=-std=c++11 \\\n        -D VTK_USE_SYSTEM_PNG=ON \\\n        -D VTK_USE_SYSTEM_ZLIB=ON \\\n        -D BUILD_SHARED_LIBS=ON \\\n        -D BUILD_EXAMPLES=OFF \\\n        -D BUILD_TESTING=OFF \\\n        -D BUILD_DOCUMENTATION=OFF \\\n        .. \\\n      && make -j $NUM_CPUS install \\\n      && cd /usr/src \\\n      && rm -rf /usr/src/VTK-${VTK_VERSION} \\\n      && ldconfig; \\\n    fi \\\n    && rm -rf /var/lib/apt/lists/*\n"
}