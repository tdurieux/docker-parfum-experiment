{
  "startTime": 1674246369450,
  "endTime": 1674246369588,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 17,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nLABEL maintainer=\"Michael Mayer <michael@liquidbytes.net>\"\n\nENV DEBIAN_FRONTEND noninteractive\nENV TMP /tmp\nENV EXTRA_BAZEL_ARGS \"--host_javabase=@local_jdk//:jdk\"\n\n# Configure apt-get\nRUN echo 'Acquire::Retries \"10\";' > /etc/apt/apt.conf.d/80retry\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/80recommends\nRUN echo 'APT::Install-Suggests \"false\";' > /etc/apt/apt.conf.d/80suggests\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/80forceyes\nRUN echo 'APT::Get::Fix-Missing \"true\";' > /etc/apt/apt.conf.d/80fixmissin\n\n# Install dev / build dependencies\nRUN apt-get update && apt-get upgrade && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    build-essential \\\n    autoconf \\\n    automake \\\n    libtool \\\n    g++-4.8 \\\n    gcc-4.8 \\\n    libc6-dev \\\n    zlib1g-dev \\\n    libssl-dev \\\n    curl \\\n    chrpath \\\n    pkg-config \\\n    unzip \\\n    zip \\\n    make \\\n    nano \\\n    wget \\\n    git \\\n    libtool \\\n    python3 \\\n    python3-git \\\n    openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n# Use GCC 4.8 and Python 3 as default\n# See https://www.tensorflow.org/install/source#tested_build_configurations\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 10 && \\\n    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 10 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3.6 10\n\n# Download Bazel & TensorFlow\nWORKDIR \"/home/tensorflow\"\nRUN wget https://github.com/tensorflow/tensorflow/archive/v1.14.0.tar.gz\nRUN wget https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-dist.zip\nRUN tar -xzf v1.14.0.tar.gz && rm v1.14.0.tar.gz\n\n# Build Bazel\nWORKDIR \"/home/tensorflow/bazel-0.24.1\"\nRUN unzip ../bazel-0.24.1-dist.zip\nRUN bash ./compile.sh\nRUN cp output/bazel /usr/local/bin/bazel\n\n# Configure TensorFlow\nWORKDIR \"/home/tensorflow/tensorflow-1.14.0\"\nCOPY /docker/tensorflow/*.sh .\nCOPY /docker/tensorflow/*.diff .\nCOPY /docker/tensorflow/.tf_configure.bazelrc .tf_configure.bazelrc\nCOPY /docker/tensorflow/Makefile Makefile\nRUN make patch\n"
}