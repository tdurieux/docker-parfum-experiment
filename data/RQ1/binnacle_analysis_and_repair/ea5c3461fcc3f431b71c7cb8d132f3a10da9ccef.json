{
  "startTime": 1674252777152,
  "endTime": 1674252777273,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# John Howard Feb 2018. Based on github.com/linuxkit/lcow/pkg/init-lcow/Dockerfile\n# This Dockerfile builds initrd.img and rootfs.tar.gz from local opengcs sources.\n# It can be used on a Windows machine running in LCOW mode.\n#\n# Manual steps:\n#   git clone https://github.com/Microsoft/opengcs c:\\go\\src\\github.com\\Microsoft\\opengcs\n#   cd c:\\go\\src\\github.com\\Microsoft\\opengcs\n#   docker build --platform=linux -t opengcs .\n#   docker run --rm -v c:\\target:/build/out opengcs\n#   copy c:\\target\\initrd.img \"c:\\Program Files\\Linux Containers\"\n#   <TODO: Additional step to generate VHD from rootfs.tar.gz and install>\n#   <Restart the docker daemon to pick up the new initrd>\n\nFROM linuxkit/runc:069d5cd3cc4f0aec70e4af53aed5d27a21c79c35 AS runc\nFROM busybox AS busybox\n\nFROM golang:1.12.4-alpine3.9\nENV GOPATH=/go PATH=$PATH:/go/bin SRC=/go/src/github.com/Microsoft/opengcs\nWORKDIR /build\nRUN \\\n    # Create all the directories\n    mkdir -p /target/etc/apk &&  \\\n    mkdir -p /target/bin && \\\n    mkdir -p /target/sbin && \\\n    \\\n    # Generate base filesystem in /target\n    cp -r /etc/apk/* /target/etc/apk/ && \\\n    apk add --no-cache --initdb -p /target alpine-baselayout busybox e2fsprogs musl && \\\n    rm -rf /target/etc/apk /target/lib/apk /target/var/cache && \\\n    \\\n    # Install the build packages\n    apk add --no-cache build-base curl git musl-dev libarchive-tools e2fsprogs file && \\\n    \\\n    # Grab udhcpc_config.script\n    curl -fSL \"https://raw.githubusercontent.com/mirror/busybox/38d966943f5288bb1f2e7219f50a92753c730b14/examples/udhcp/simple.script\" -o /target/sbin/udhcpc_config.script && \\\n    chmod ugo+rx /target/sbin/udhcpc_config.script && \\\n    \\\n    # Install gingko for testing\n    go get github.com/onsi/ginkgo/ginkgo\n\nCOPY --from=runc / /target/\nCOPY --from=runc /usr/bin/runc /usr/bin/\n\n# Create a test bundle for GCS tests\nENV GCS_TEST_BUNDLE /testbundle\nCOPY --from=busybox / $GCS_TEST_BUNDLE/rootfs\n\n# Construct a base tar that is added to by the make step below\nRUN tar -zcf /build/base.tar.gz -C /target . && rm /build/base.tar.gz\n\n# Add the sources for opengcs\nCOPY . $SRC\n\n# By default, build.\nCMD make -f $SRC/Makefile\n"
}