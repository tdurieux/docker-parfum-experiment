{
  "startTime": 1674249830475,
  "endTime": 1674249830832,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 24,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 248
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 248
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 248
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 272
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV HOME /root\n\nENV XMPP_DOMAIN example.com\n\nENV DB_NAME docker\nENV DB_USER docker\nENV DB_PWD docker\n\nENV LDAP_HOST container\nENV LDAP_DN \"\"\nENV LDAP_PWD \"\"\nENV LDAP_GROUP mygroup\nENV LDAP_USER_BASE ou=users,dc=example.com\nENV LDAP_GROUP_BASE ou=groups,dc=example.com\n\nENV SSL_CRT \"\"\nENV SSL_KEY \"\"\n\nRUN sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list && \\\n    sed -i 's/^#\\s*\\(deb.*multiverse\\)$/\\1/g' /etc/apt/sources.list && \\\n    apt-get -y update && \\\n    dpkg-divert --local --rename --add /sbin/initctl && \\\n    ln -sf /bin/true /sbin/initctl && \\\n    dpkg-divert --local --rename --add /usr/bin/ischroot && \\\n    ln -sf /bin/true /usr/bin/ischroot && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends -y vim wget sudo net-tools pwgen unzip openssh-server \\\n        logrotate supervisor language-pack-en software-properties-common \\\n        python-software-properties apt-transport-https ca-certificates curl && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US && locale-gen en_US.UTF-8 && echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale\n\nRUN add-apt-repository -y ppa:patrick-georgi/ppa\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y --force-yes postgresql-client lua5.1 liblua5.1-dev lua-bitop lua-bitop-dev lua-sec lua-ldap lua-dbi-postgresql lua-expat lua-socket lua-filesystem lua-zlib lua-event libidn11-dev libssl-dev mercurial bsdmainutils make openssl && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd prosody\nRUN useradd -g prosody prosody\n\nRUN hg clone http://hg.prosody.im/trunk prosody-trunk\n\nRUN cd prosody-trunk && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --ostype=debian --prefix=/usr --sysconfdir=/etc/prosody --datadir=/var/lib/prosody --require-config\n\nRUN cd prosody-trunk && make && make install\n\nRUN mkdir /etc/prosody/conf.d /var/log/prosody\n\nRUN chown -R prosody:prosody /etc/prosody /var/lib/prosody /var/log/prosody\n\nRUN mkdir -p /var/run/prosody\nRUN chown prosody.prosody /var/run/prosody\n\nADD app /app\nRUN chmod +x /app/start.sh\n\nCMD \"/app/start.sh\"\n"
}