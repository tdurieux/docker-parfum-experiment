{
  "startTime": 1674237161593,
  "endTime": 1674237162127,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 46,
        "columnStart": 0,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n# based on blacktop bro\nMAINTAINER danielguerra, https://github.com/danielguerra\n\n#Prevent daemon start during install\nRUN echo '#!/bin/sh\\nexit 101' > /usr/sbin/policy-rc.d && \\\nchmod +x /usr/sbin/policy-rc.d\n\n# Install Bro Required Dependencies\nRUN \\\n apt-get -qq update && \\\napt-get -qq upgrade && \\\napt-get install -yq vim \\\nphp5-curl \\\nsendmail \\\nbison \\\nflex \\\ngawk \\\ncurl \\\ngeoip-database \\\ngeoip-database-extra \\\ntor-geoipdb \\\nwget \\\nopenssh-server \\\nbuild-essential \\\nca-certificates \\\nlibgoogle-perftools-dev \\\nlibcurl3-dev \\\nlibgeoip-dev \\\nlibpcap-dev \\\nlibssl-dev \\\npython-dev \\\nzlib1g-dev \\\nlibedit-dev \\\ndoxygen \\\ngit-core \\\ncmake \\\nmake \\\ng++ \\\ngcc \\\nlibpcre3-dev \\\npython-setuptools \\\nlibsnappy-dev \\\nlibbz2-dev \\\ndevscripts \\\ninstall-info \\\nautoconf --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n#swig latest for broker python integration\nWORKDIR /tmp\nRUN wget https://prdownloads.sourceforge.net/swig/swig-3.0.7.tar.gz\nRUN tar xvfz swig-3.0.7.tar.gz && rm swig-3.0.7.tar.gz\nWORKDIR /tmp/swig-3.0.7\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n#rocksdb gives memory\nWORKDIR /tmp\nRUN git clone --recursive https://github.com/facebook/rocksdb.git\nWORKDIR /tmp/rocksdb\nRUN export CFLAGS=\"$CFLAGS -fPIC\" && export CXXFLAGS=\"$CXXFLAGS -fPIC\" && make shared_lib\nRUN export CFLAGS=\"$CFLAGS -fPIC\" && export CXXFLAGS=\"$CXXFLAGS -fPIC\" && make install\n\n# ipsumdump\nWORKDIR /tmp\nRUN git clone --recursive https://github.com/kohler/ipsumdump.git\nWORKDIR /tmp/ipsumdump\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n#actor framework caf to enable broker\nWORKDIR /tmp\nRUN git clone --recursive --branch 0.14.2 https://github.com/actor-framework/actor-framework.git\nWORKDIR /tmp/actor-framework\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --no-examples --no-benchmarks --no-opencl\nRUN make\nRUN make install\n\n# bro\nWORKDIR /tmp\nRUN  git clone --recursive git://git.bro.org/bro\nWORKDIR /tmp/bro\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n# ELK integration\n\n# Do some kibana changes for timestamp\nADD ElasticSearch.cc.patch /tmp/ElasticSearch.cc.patch\nRUN patch /tmp/bro/aux/plugins/elasticsearch/src/ElasticSearch.cc  /tmp/ElasticSearch.cc.patch\n#set host to virtual host elasticsearch\nRUN sed -i \"s/127.0.0.1/elasticsearch/g\" /tmp/bro/aux/plugins/elasticsearch/scripts/init.bro\n# give more time to write\nRUN sed -i \"s/2secs/60secs/g\" /tmp/bro/aux/plugins/elasticsearch/scripts/init.bro\n# smaller batches for bro file read eg 1 having flush problems\nRUN sed -i \"s/const max_batch_size = 1000/const max_batch_size = 1/g\" /tmp/bro/aux/plugins/elasticsearch/scripts/init.bro\n#install the plugin\nWORKDIR /tmp/bro/aux/plugins/elasticsearch\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n# mal-dns to get intel\nWORKDIR /tmp\nRUN git clone --recursive https://github.com/jonschipp/mal-dnssearch.git\nWORKDIR /tmp/mal-dnssearch\nRUN make\n\n# for geohash example python execute\nWORKDIR /tmp\nRUN wget https://pypi.python.org/packages/source/G/Geohash/Geohash-1.0.tar.gz#md5=a7c4e57874061fae1e30dd8aa8b9b390\nRUN tar xvfz Geohash-1.0.tar.gz && rm Geohash-1.0.tar.gz\nWORKDIR /tmp/Geohash-1.0\nRUN python setup.py build\nRUN python setup.py install\nWORKDIR /root\n\n# removed for develop purposes\n# clean up\n#RUN apt-get clean\n#RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n#set the path\nENV PATH /usr/local/bro/bin:$PATH\nRUN echo \"export PATH=$PATH:/usr/local/bro/bin\" > /root/.profile\n\n# add custom bro scripts\nADD /custom /usr/local/bro/share/bro/custom\nRUN echo \"@load custom\" >> /usr/local/bro/share/bro/base/init-default.bro\n\n# add maintance shell scripts\nADD updateintel.sh /bin/updateintel.sh\nADD cleanelastic.sh /bin/cleanelastic.sh\nADD elasticsearchMapping.sh /bin/elasticsearchMapping.sh\nADD removeMapping.sh /bin/removeMapping.sh\n# update intel files\nRUN /bin/updateintel.sh\n\n#do some elasticsearch tweaks\n#socks version causes type conflict\nRUN sed -i \"s/version:     count           \\&log/socks_version:     count           \\&log/g\" /usr/local/bro/share/bro/base/protocols/socks/main.bro\nRUN sed -i \"s/\\$version=/\\$socks_version=/g\" /usr/local/bro/share/bro/base/protocols/socks/main.bro\n\n#ssh version conflict\n\n#set sshd config for key based authentication for root\nRUN mkdir -p /var/run/sshd && sed -i \"s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g\" /etc/ssh/sshd_config && sed -i \"s/UsePAM.*/UsePAM no/g\" /etc/ssh/sshd_config && sed -i \"s/PermitRootLogin.*/PermitRootLogin yes/g\" /etc/ssh/sshd_config && sed -i \"s/#AuthorizedKeysFile/AuthorizedKeysFile/g\" /etc/ssh/sshd_config\n\n#set the expose ports\nEXPOSE 22\nEXPOSE 47761\nEXPOSE 47762\n\n#set elasticsearch mapping\nCMD [\"exec\".\"/bin/elasticsearchMapping.sh\"]\n\n#start sshd\nCMD [\"exec\",\"/usr/sbin/sshd\",\"-D\"]\n"
}