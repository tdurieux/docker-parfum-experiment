{
  "startTime": 1674240443100,
  "endTime": 1674240443300,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9.3\n\nENV TERRAFORM_VERSION 0.11.9\nENV ANSIBLE_VERSION 2.7\n\nRUN apk add --update wget ca-certificates unzip git bash && \\\n    wget -q -O /terraform.zip \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" && \\\n    unzip /terraform.zip -d /bin && \\\n    apk del --purge wget ca-certificates unzip && \\\n    rm -rf /var/cache/apk/* /terraform.zip\n\nENV BUILD_PACKAGES \\\n  bash \\\n  curl \\\n  tar \\\n  openssh-client \\\n  sshpass \\\n  git \\\n  python \\\n  py-boto \\\n  py-dateutil \\\n  py-httplib2 \\\n  py-jinja2 \\\n  py-paramiko \\\n  py-pip \\\n  ca-certificates \\\n  jq\n\nRUN apk add --no-cache build-base\n\nRUN set -x && \\\n    \\\n    echo \"==> Adding build-dependencies...\"  && \\\n    apk --update add --virtual build-dependencies \\\n      gcc \\\n      musl-dev \\\n      libffi-dev \\\n      openssl-dev \\\n      python-dev && \\\n    \\\n    echo \"==> Upgrading apk and system...\"  && \\\n    apk update && apk upgrade && \\\n    \\\n    echo \"==> Adding Python runtime...\"  && \\\n    apk add --no-cache ${BUILD_PACKAGES} && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir python-keyczar docker-py && \\\n\n    echo \"==> Installing Ansible...\" && \\\n    pip install --no-cache-dir ansible==${ANSIBLE_VERSION} && \\\n\n    echo \"==> installing azure-cli...\" && \\\n    pip install --no-cache-dir azure-cli && \\\n    # Uninstall pyOpenSSL: https://github.com/erjosito/ansible-azure-lab/issues/5\n    echo \"==> un-installing pyOpenSSL... \" && \\\n    pip uninstall -y pyOpenSSL && \\\n\n    echo \"==> Cleaning up...\" && \\\n    apk del build-dependencies && \\\n    rm -rf /var/cache/apk/* && \\\n\n    echo \"==> Adding hosts for convenience...\" && \\\n    mkdir -p /etc/ansible /ansible && \\\n    echo \"[local]\" >> /etc/ansible/hosts && \\\n    echo \"localhost\" >> /etc/ansible/hosts\n\nENV ANSIBLE_GATHERING smart \\\n  ANSIBLE_HOST_KEY_CHECKING false \\\n  ANSIBLE_RETRY_FILES_ENABLED false \\\n  ANSIBLE_ROLES_PATH /ansible/playbooks/roles \\\n  ANSIBLE_SSH_PIPELINING True \\\n  PYTHONPATH /ansible/lib \\\n  PATH /ansible/bin:$PATH \\\n  ANSIBLE_LIBRARY /ansible/library\n\nRUN mkdir /epiphany/\nWORKDIR /epiphany/\n\nRUN terraform --version\nRUN python --version\nRUN ansible --version\nRUN az --version\n\nENTRYPOINT [\"/bin/bash\"]\n"
}