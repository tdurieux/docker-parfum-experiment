{
  "startTime": 1674250756585,
  "endTime": 1674250757039,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pythonlib_cpu:latest\nLABEL maintainer=\"Erwan BERNARD https://github.com/edmBernard/DockerFiles\"\n\nENV OPENCV_DIR \"$LIB_DIR/opencv\"\nRUN mkdir -p \"$OPENCV_DIR\"\n\nENV NDK_VERSION \"android-ndk-r14b\"\nENV NDK_TOOLCHAIN_DIR \"$LIB_DIR/arm7-toolchain\"\nENV OPENBLAS_DIR \"$LIB_DIR/OpenBLAS_build\"\nENV MXNET_DIR \"$LIB_DIR/mxnet\"\n# ENV ANDROID_STANDALONE_TOOLCHAIN \"$NDK_TOOLCHAIN_DIR\"\nENV ANDROID_NDK \"$LIB_DIR/$NDK_VERSION\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        openjdk-8-jre \\\n        openjdk-8-jdk \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create toolchain\nRUN cd \"$LIB_DIR\" && \\\n    wget https://dl.google.com/android/repository/${NDK_VERSION}-linux-x86_64.zip && \\\n    unzip ${NDK_VERSION}-linux-x86_64.zip && \\\n    rm ${NDK_VERSION}-linux-x86_64.zip\n\nRUN $LIB_DIR/${NDK_VERSION}/build/tools/make_standalone_toolchain.py \\\n    --arch arm --api 21 --install-dir $NDK_TOOLCHAIN_DIR --stl=libc++\n\n# Compile OpenBLAS\nENV PATH \"${PATH}:$NDK_TOOLCHAIN_DIR/bin\"\nRUN cd \"$LIB_DIR\" && git clone https://github.com/xianyi/OpenBLAS.git && cd OpenBLAS && \\\n    git checkout tags/v0.2.19 && \\\n    make TARGET=ARMV7 HOSTCC=gcc CC=arm-linux-androideabi-gcc NOFORTRAN=1 && \\\n    make PREFIX=$OPENBLAS_DIR install\n\n# Compile MXNet Amalgamation\nENV PATH \"${PATH}:$NDK_TOOLCHAIN_DIR/bin\"\nENV CC arm-linux-androideabi-clang\nENV CXX arm-linux-androideabi-clang++\n\nRUN cd \"$LIB_DIR\" && git clone --recursive https://github.com/dmlc/mxnet && cd mxnet/amalgamation && \\\n    git checkout c8f7dce0eb49ab1a62ddc2c7e37b93e9b92c2ae4 && \\\n    git submodule update --init --recursive && \\\n    sed -i \"s|/usr/local/opt/openblas|$OPENBLAS_DIR|g\" Makefile && \\\n    sed  -i -e 's/\\(#if defined(__MACH__)\\)/#define fopen64 std::fopen\\n\\1/' amalgamation.py && \\\n    sed -i '1i DEFS += -DMSHADOW_USE_CUDA=0 -DMSHADOW_USE_MKL=0 -DMSHADOW_RABIT_PS=0 -DMSHADOW_DIST_PS=0 -DMSHADOW_USE_SSE=0 -DDMLC_LOG_STACK_TRACE=0 -DMSHADOW_FORCE_STREAM -DMXNET_USE_OPENCV=0 -DMXNET_PREDICT_ONLY=1 -DDISABLE_OPENMP=1' ../nnvm/amalgamation/Makefile && \\\n    sed -i '4i CFLAGS = -std=c++11 -Wall -O3 -Wno-unknown-pragmas -funroll-loops -Iinclude -fPIC $(DEFS)' ../nnvm/amalgamation/Makefile && \\\n    make clean && \\\n    make ANDROID=1\n    # We can't use multiprocess compilation\n\n# download opencv3\nRUN cd \"$OPENCV_DIR\" && \\\n    wget https://github.com/opencv/opencv/archive/master.zip && \\\n    unzip master.zip && \\\n    rm master.zip\n    # git clone https://github.com/opencv/opencv.git  <-- don't work anymore : GnuTLS recv error\n\n# download opencv3 contrib\nRUN cd \"$OPENCV_DIR\" && \\\n    wget https://github.com/opencv/opencv_contrib/archive/master.zip && \\\n    unzip master.zip && \\\n    rm master.zip\n    # git clone https://github.com/opencv/opencv_contrib.git  <-- don't work anymore : GnuTLS recv error\n\n# Compile opencv3\nRUN cd \"$OPENCV_DIR/opencv-master/platforms/scripts\" && \\\n    sh cmake_android_arm.sh -DANDROID_NATIVE_API_LEVEL=21 -DBUILD_SHARED_LIBS=OFF -DBUILD_opencv_world=ON && \\\n    cd ../build_android_arm && \\\n    make -j$(nproc) && \\\n    make install\n\nCMD [\"/bin/bash\"]\n"
}