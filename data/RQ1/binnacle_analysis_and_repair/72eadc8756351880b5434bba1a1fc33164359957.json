{
  "startTime": 1674240720622,
  "endTime": 1674240721339,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 105,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 212,
        "lineEnd": 212,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Creates an image for skycoin development\nFROM golang:1.11-stretch\n\nARG BDATE=\"test_build\"\nARG SCOMMIT=\"develop\"\n\n# Image labels (see ./hooks/build for ARGS)\nLABEL \"org.label-schema.name\"=\"skycoindev-cli\" \\\n      \"org.label-schema.description\"=\"Docker image with go, node and command line tools for Skycoin developers\" \\\n      \"org.label-schema.vendor\"=\"Skycoin project\" \\\n      \"org.label-schema.url\"=\"skycoin.net\" \\\n      \"org.label-schema.schema-version\"=\"1.0\" \\\n      \"org.label-schema.build-date\"=$BDATE \\\n      \"org.label-schema.vcs-url\"=\"https://github.com/skycoin/skycoin.git\" \\\n      \"org.label-schema.vcs-ref\"=$SCOMMIT \\\n      \"org.label-schema.usage\"=\"https://github.com/skycoin/skycoin/blob/\"$SCOMMIT\"/docker/images/dev-cli/README.md\" \\\n      \"org.label-schema.version\"=\"1.0.0-rc.1\" \\\n      \"org.label-schema.docker.cmd\"=\"mkdir src; docker run --rm -v src:/go/src skycoin/skycoindev-cli ; go get github.com/skycoin/skycoin ; sudo chown -R `whoami` src\"\n\n# Installs nodejs and npm. Needed for moxygen.\n\n# Packages installed in buildpack-deps:stretch\nRUN set -ex; \\\n  apt-get update; \\\n  apt-get install -y --no-install-recommends \\\n    autoconf \\\n    automake \\\n    bzip2 \\\n    dpkg-dev \\\n    file \\\n    g++ \\\n    gcc \\\n    imagemagick \\\n    libbz2-dev \\\n    libc6-dev \\\n    libcurl4-openssl-dev \\\n    libdb-dev \\\n    libevent-dev \\\n    libffi-dev \\\n    libgdbm-dev \\\n    libgeoip-dev \\\n    libglib2.0-dev \\\n    libjpeg-dev \\\n    libkrb5-dev \\\n    liblzma-dev \\\n    libmagickcore-dev \\\n    libmagickwand-dev \\\n    libncurses5-dev \\\n    libncursesw5-dev \\\n    libpng-dev \\\n    libpq-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libtool \\\n    libwebp-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libyaml-dev \\\n    make \\\n    patch \\\n    xz-utils \\\n    zlib1g-dev \\\n    build-essential \\\n    ruby \\\n    ruby-dev \\\n    \\\n# No need for MySQL client\n#\n# # https://lists.debian.org/debian-devel-announce/2016/09/msg00000.html\n#     $( \\\n# # if we use just \"apt-cache show\" here, it returns zero because \"Can't select versions from package 'libmysqlclient-dev' as it is purely virtual\", hence the pipe to grep\n#       if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \\\n#         echo 'default-libmysqlclient-dev'; \\\n#       else \\\n#         echo 'libmysqlclient-dev'; \\\n#       fi \\\n#     ) \\\n   ; \\\n  apt-get clean; \\\n  rm -rf /var/lib/apt/lists/*\n\n# Build steps in node:10 (uid=2000)\nRUN groupadd --gid 2000 node \\\n  && useradd --uid 2000 --gid node --shell /bin/bash --create-home node\n\n# gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A; \\\n  do \\\n    gpg --batch --no-tty --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --no-tty --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done\n\nENV NODE_VERSION 10.13.0\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nENV YARN_VERSION 1.12.3\n\nRUN set -ex \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5; \\\n  do \\\n    gpg --batch --no-tty --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --no-tty --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n\n# Installs software\nRUN set -ex ; \\\n    apt-get update ; \\\n    apt-get install -y --no-install-recommends \\\n    cmake \\\n    libpcre3-dev \\\n    gdbserver \\\n    gdb \\\n    vim \\\n    less \\\n    ctags \\\n    vim-scripts \\\n    screen \\\n    sudo \\\n    doxygen \\\n    valgrind \\\n    bsdmainutils \\\n    texlive-latex-base \\\n    ; \\\n    apt-get clean ; \\\n    rm -rf /var/lib/apt/lists/* ; \\\n    npm install moxygen -g ; npm cache clean --force; \\\n\n\n    echo 'Installing Criterion ...' ; \\\n    git clone --recurse-submodules -j8 https://github.com/skycoin/Criterion /go/Criterion ; \\\n    cd /go/Criterion ; \\\n    cmake . ; \\\n    make install ; \\\n    rm -r /go/Criterion ; \\\n    echo 'Success nstalling Criterion ...'\n\n# Installs go development tools\nRUN go get -u github.com/derekparker/delve/cmd/dlv  && \\\n    go get -u github.com/FiloSottile/vendorcheck && \\\n    go get -u github.com/alecthomas/gometalinter && \\\n    gometalinter --vendored-linters --install && \\\n    go get -u github.com/zmb3/gogetdoc && \\\n    go get -u golang.org/x/tools/cmd/guru && \\\n    go get -u github.com/davidrjenni/reftools/cmd/fillstruct && \\\n    go get -u github.com/rogpeppe/godef && \\\n    go get -u github.com/fatih/motion && \\\n    go get -u github.com/nsf/gocode && \\\n    go get -u github.com/jstemmer/gotags && \\\n    go get -u github.com/josharian/impl && \\\n    go get -u github.com/fatih/gomodifytags && \\\n    go get -u github.com/dominikh/go-tools/cmd/keyify && \\\n    go get -u golang.org/x/tools/cmd/gorename && \\\n    go get -u github.com/klauspost/asmfmt/cmd/asmfmt && \\\n    go get -u github.com/vektra/mockery/.../ && \\\n    go get -u github.com/wadey/gocovmerge && \\\n    curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n\n\n# Install vim-go development tools\nRUN git clone https://github.com/fatih/vim-go /usr/share/vim/vim80/pack/dev/start/vim-go && \\\n    git clone https://github.com/tpope/vim-fugitive /usr/share/vim/vim80/pack/dev/start/vim-fugitive && \\\n    git clone https://github.com/Shougo/vimshell.vim /usr/share/vim/vim80/pack/dev/start/0vimshell && \\\n    git clone https://github.com/Shougo/vimproc.vim /usr/share/vim/vim80/pack/dev/start/0vimproc && \\\n    git clone https://github.com/w0rp/ale.git /usr/share/vim/vim80/pack/dev/start/ale && \\\n    cd /usr/share/vim/vim80/pack/dev/start/0vimproc && make ;\\\n    git clone https://github.com/iberianpig/tig-explorer.vim.git /tmp/tig-explorer;\\\n    cp /tmp/tig-explorer/autoload/tig_explorer.vim /usr/share/vim/vim80/autoload;\\\n    cp /tmp/tig-explorer/plugin/tig_explorer.vim /usr/share/vim/vim80/plugin;\\\n    rm -rf /tmp/tig-explorer\n\n\n# Install SWIG-3.0.12\nRUN cd /tmp/; \\\n    wget https://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz && \\\n    tar -zxf swig-3.0.12.tar.gz; rm swig-3.0.12.tar.gz \\\n    cd swig-3.0.12 ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n    rm -rf /tmp/swig-*\n# Install Travis CLI\n# Install golangci-lint\nENV GOLANGCI_LINT 1.12.3\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v$GOLANGCI_LINT\n\n# Install Travis CLI\nRUN gem install travis\n\nWORKDIR $GOPATH/src/github.com/skycoin\nVOLUME $GOPATH/src/\n\nENV LD_LIBRARY_PATH=/usr/local/lib\n"
}