{
  "startTime": 1674250831312,
  "endTime": 1674250831769,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nFROM centos:centos7.5.1804\n\nMAINTAINER tangxiaoqing214445\n\nENV DEFAULT_DIR /var/local\n\nARG GCC_VERSION=7.3.0\nARG GCC_URL=https://mirrors.ustc.edu.cn/gnu/gcc/gcc-${GCC_VERSION}\n\n# install dependencies and build gcc\nRUN yum install -y bzip2 wget git gcc-c++ libstdc++-static byacc flex automake libtool binutils-devel bison ncurses-devel make mlocate unzip patch which vim-common redhat-lsb-core zip libcurl-devel \\\n  && updatedb \\\n  && yum -y clean all \\\n  && rm -rf /var/cache/yum \\\n  && mkdir -p  /var/local/gcc \\\n  && curl -fsSL -o /tmp/gcc.tar.gz  ${GCC_URL}/gcc-${GCC_VERSION}.tar.gz \\\n  && tar -xzf /tmp/gcc.tar.gz -C /var/local/gcc --strip-components=1 \\\n  && cd /var/local/gcc \\\n  && sed -i 's/ftp:\\/\\/gcc.gnu.org\\/pub\\/gcc\\/infrastructure\\//http:\\/\\/mirror.linux-ia64.org\\/gnu\\/gcc\\/infrastructure\\//g' contrib/download_prerequisites \\\n  && ./contrib/download_prerequisites \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-multilib --enable-languages=c,c++ --prefix=/usr \\\n  && make -j$[$(nproc)/4+1] && make install \\\n  && rm -rf /var/local/gcc \\\n  && rm -f /tmp/gcc.tar.gz\n\n# build cmake\nARG CMAKE_VERSION=3.12.3\nARG CMAKE_DOWNLOAD_URL=https://cmake.org/files/v3.12/cmake-${CMAKE_VERSION}.tar.gz\nRUN mkdir -p /tmp/cmake && curl -fsSL -o /tmp/cmake.tar.gz ${CMAKE_DOWNLOAD_URL} \\\n    && tar -zxf /tmp/cmake.tar.gz -C /tmp/cmake --strip-components=1 \\\n    && cd /tmp/cmake \\\n    && ./bootstrap --system-curl \\\n    && gmake -j$[$(nproc)/4+1] \\\n    && gmake install \\\n    && rm -rf /tmp/cmake.tar.gz \\\n    && rm -rf /tmp/cmake\n\n# install jdk\nCOPY ./jdk.rpm ./\nRUN touch  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo '#!/bin/bash' >> ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'rpm -Uvh jdk.rpm > /dev/null 2>&1' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'mv /usr/java/jdk* /usr/java/jdk' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'export JAVA_HOME=/usr/java/jdk' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'echo \"export JAVA_HOME=/usr/java/jdk\" >> /etc/environment' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'export JRE_HOME=/usr/java/jdk/jre' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'echo \"export JRE_HOME=/usr/java/jdk/jre\" >> /etc/environment' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'ls /usr/java/jdk > /dev/null 2>&1' >>  ${DEFAULT_DIR}/install_jdk.sh \\\n    && echo 'echo \"export JAVA_HOME=/usr/java/jdk\" >> /root/.bashrc' >> ${DEFAULT_DIR}/install_jdk.sh \\\n    && chmod 777 ${DEFAULT_DIR}/install_jdk.sh \\\n    && /bin/bash ${DEFAULT_DIR}/install_jdk.sh \\\n    && rm -rf *.rpm \\\n    && rm ${DEFAULT_DIR}/install_jdk.sh\n\nENV JAVA_HOME /usr/java/jdk\n\n# install maven 3.6.0\nARG MAVEN_VERSION=3.6.0\nARG SHA=fae9c12b570c3ba18116a4e26ea524b29f7279c17cbaadc3326ca72927368924d9131d11b9e851b8dc9162228b6fdea955446be41207a5cfc61283dd8a561d2f\nARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha512sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nENV MAVEN_HOME /usr/share/maven\n\n# build environment\nWORKDIR ${DEFAULT_DIR}\n\n# there is a repo which is included all of thirdparty\nENV REPOSITORY_URL=https://doris-incubating-repo.bj.bcebos.com/thirdparty\n\n# clone lastest source code, download and build thirdparty\nCOPY incubator-doris ${DEFAULT_DIR}/incubator-doris\nRUN cd ${DEFAULT_DIR}/incubator-doris && /bin/bash thirdparty/build-thirdparty.sh \\\n    && rm -rf ${DEFAULT_DIR}/incubator-doris/thirdparty/src \\\n    && rm -rf ${DEFAULT_DIR}/doris-thirdparty.tar.gz \\\n    && rm -rf ${DEFAULT_DIR}/doris-thirdparty \\\n    && mkdir -p ${DEFAULT_DIR}/thirdparty \\\n    && mv ${DEFAULT_DIR}/incubator-doris/thirdparty/installed ${DEFAULT_DIR}/thirdparty/ \\\n    && rm -rf ${DEFAULT_DIR}/incubator-doris\n\nENV DORIS_THIRDPARTY /var/local/thirdparty\nWORKDIR /root\n"
}