{
  "startTime": 1674241531221,
  "endTime": 1674241531395,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 image\n\n# FROM arm64v8/node:alpine as base # aarch64\nFROM mhart/alpine-node:10 as base\n\nENV DOCKER_VERSION=18.03.1-ce\n\n#ENV ARCH=aarch64 # aarch64\nENV ARCH=x86_64\n\nRUN apk --no-cache add openssl \\\n    && wget https://download.docker.com/linux/static/stable/$ARCH/docker-$DOCKER_VERSION.tgz -O /tmp/docker.tgz \\\n    && mkdir /tmp/docker && tar xzf /tmp/docker.tgz -C /tmp \\\n    && ln -s /tmp/docker/docker /usr/bin/docker && chmod 755 /usr/bin/docker && rm -rf /tmp/docker.tgz \\\n    && apk del openssl\n\n\n# Stage 2 image\nFROM base as build\n\nWORKDIR /app\n\nCOPY package.json package-lock.json tsconfig.json webpack.*.js angular.json /app/\nCOPY src /app/src\n\nRUN apk add --no-cache --virtual .build-dependencies make gcc g++ python curl sqlite git \\\n    && npm set progress=false && npm config set depth 0 \\\n    && npm i --only=production \\\n    && cp -R node_modules prod_node_modules \\\n    && npm i && npm run build:prod && ls -lha /usr/lib/node_modules \\\n    && apk del .build-dependencies && npm cache clean --force;\n\n\n# Stage 3 image\nFROM alpine:3.7\n\nARG VCS_REF=n/a\nARG VERSION=dev\nARG BUILD_DATE=n/a\n\nLABEL maintainer=\"Jan Kuri <jan@bleenco.com>\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.name=\"abstruse\" \\\n      org.label-schema.description=\"Continuous integration platform, simple, scalable and fast\" \\\n      org.label-schema.url=\"https://abstruse.bleenco.io/\" \\\n      org.label-schema.vcs-url=\"https://github.com/bleenco/abstruse\" \\\n      org.label-schema.vendor=\"Bleenco\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.build-date=$BUILD_DATE\n\nWORKDIR /app\n\nRUN apk --no-cache add tini sqlite git wget\n\nCOPY --from=base /usr/bin/node /usr/bin\nCOPY --from=base /usr/lib/libgcc* /usr/lib/libstdc* /usr/lib/\nCOPY --from=base /tmp/docker/docker /usr/bin/docker\n\nCOPY --from=build /app/package.json /app/\nCOPY --from=build /app/prod_node_modules /app/node_modules\nCOPY --from=build /app/dist /app/dist\nCOPY --from=build /app/src/files /app/src/files\n\nHEALTHCHECK --interval=10s --timeout=2s --start-period=20s \\\n    CMD wget -q -O- http://localhost:6500/status || exit 1\n\nEXPOSE 6500\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [ \"node\", \"dist/api/index.js\" ]\n"
}