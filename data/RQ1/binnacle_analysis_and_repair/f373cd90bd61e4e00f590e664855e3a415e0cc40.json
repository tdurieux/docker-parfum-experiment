{
  "startTime": 1674248329717,
  "endTime": 1674248330040,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 The Skaffold Authors All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM gcr.io/gcp-runtimes/ubuntu_16_0_4 as runtime_deps\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends --no-install-suggests -y \\\n  git \\\n  python && \\\n  rm -rf /var/lib/apt/lists/*\n\nENV KUBECTL_VERSION v1.12.0\nRUN curl -f -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n  chmod +x /usr/local/bin/kubectl\n\nENV HELM_VERSION v2.8.1\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz && \\\n  tar -xvf helm-${HELM_VERSION}-linux-amd64.tar.gz -C /usr/local/bin --strip-components 1 && \\\n  rm -f helm-${HELM_VERSION}-linux-amd64.tar.gz\n\nENV CLOUD_SDK_VERSION 217.0.0\nRUN curl -f -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n  tar -zxvf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n  CLOUDSDK_PYTHON=\"python2.7\" /google-cloud-sdk/install.sh --usage-reporting=false \\\n  --bash-completion=false \\\n  --disable-installation-options && \\\n  rm -rf google-cloud-sdk-*.tar.gz\nENV PATH=$PATH:/google-cloud-sdk/bin\nRUN /google-cloud-sdk/bin/gcloud auth configure-docker\n\nENV KUSTOMIZE_VERSION=2.0.3\nRUN curl -f -LO https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64 && \\\n  chmod +x kustomize_${KUSTOMIZE_VERSION}_linux_amd64 && \\\n  mv kustomize_${KUSTOMIZE_VERSION}_linux_amd64 /usr/local/bin/kustomize\n\nENV KOMPOSE_VERSION=1.17.0\nRUN curl -f -L https://github.com/kubernetes/kompose/releases/download/v${KOMPOSE_VERSION}/kompose-linux-amd64 -o kompose && \\\n  chmod +x kompose && \\\n  mv kompose /usr/local/bin\n\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list \\\n  && curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y bazel && \\\n  rm -rf /var/lib/apt/lists/*\n\nENV CONTAINER_STRUCTURE_TEST_VERSION=1.5.0\nRUN curl -f -LO https://storage.googleapis.com/container-structure-test/v${CONTAINER_STRUCTURE_TEST_VERSION}/container-structure-test-linux-amd64 \\\n  && chmod +x container-structure-test-linux-amd64 \\\n  && mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test\n\nENV PATH /usr/local/go/bin:/go/bin:/google-cloud-sdk/bin:$PATH\n\nFROM runtime_deps as builder\n\nRUN apt-get update && apt-get install --no-install-recommends --no-install-suggests -y \\\n  ca-certificates \\\n  curl \\\n  build-essential \\\n  gcc \\\n  python-setuptools \\\n  lsb-release \\\n  openjdk-8-jdk \\\n  software-properties-common \\\n  apt-transport-https && \\\n  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n  apt-key fingerprint 0EBFCD88 && \\\n  add-apt-repository \\\n  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n  xenial \\\n  edge\" && \\\n  apt-get -y update && \\\n  apt-get -y --no-install-recommends install docker-ce=17.12.0~ce-0~ubuntu && \\\n  rm -rf /var/lib/apt/lists/*\n\nCOPY --from=golang:1.11 /usr/local/go /usr/local/go\nENV PATH /usr/local/go/bin:/go/bin:$PATH\nENV GOPATH /go/\n\nWORKDIR /go/src/github.com/GoogleContainerTools/skaffold\n\nCOPY . .\n\nFROM builder as integration\nARG VERSION\n\nENV KIND_VERSION=v0.3.0\nRUN curl -f -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64 && \\\n  chmod +x kind && \\\n  mv kind /usr/local/bin/\n\nRUN make out/skaffold-linux-amd64 VERSION=$VERSION && mv out/skaffold-linux-amd64 /usr/bin/skaffold\n\nCMD [\"make\", \"integration\"]\n\nFROM runtime_deps as distribution\n\nCOPY --from=integration /usr/bin/skaffold /usr/bin/skaffold\n"
}