{
  "startTime": 1674234703966,
  "endTime": 1674234704157,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Debian Jessie debootstrap from 2017-02-27\nFROM debian@sha256:52af198afd8c264f1035206ca66a5c48e602afb32dc912ebf9e9478134601ec4\nMAINTAINER Jupyter\nUSER root\n\n# Install all OS dependencies for notebook server that starts but lacks all\n# features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND noninteractive\nRUN REPO=http://cdn-fastly.deb.debian.org \\\n && echo \"deb $REPO/debian jessie main\\ndeb $REPO/debian-security jessie/updates main\" > /etc/apt/sources.list \\\n && apt-get update && apt-get -yq dist-upgrade \\\n && apt-get install -yq --no-install-recommends \\\n    wget \\\n    bzip2 \\\n    ca-certificates \\\n    sudo \\\n    locales \\\n    git \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Configure environment\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV SHELL /bin/bash\nENV NB_USER jovyan\nENV NB_UID 1000\nENV HOME /home/$NB_USER\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Create jovyan user with UID=1000 and in the 'users' group\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown $NB_USER $CONDA_DIR\n\nUSER $NB_USER\n\n# Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work && \\\n    mkdir /home/$NB_USER/.jupyter && \\\n    echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\n\nENV CONDA_VERSION 4.3.11\n# https://repo.continuum.io/miniconda/Miniconda3-4.3.11-Linux-x86_64.sh\n\n# Install conda as jovyan\nRUN cd /tmp && \\\n    mkdir -p $CONDA_DIR && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh && \\\n    # echo \"c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a *Miniconda3-4.2.12-Linux-x86_64.sh\" | sha256sum -c - && \\\n    /bin/bash Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh && \\\n    $CONDA_DIR/bin/conda config --system --add channels conda-forge && \\\n    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \\\n    conda clean -tipsy\n\n# Install Jupyter Notebook and Hub\nRUN conda install --quiet --yes \\\n    'python=3.6.1' \\\n    'notebook' \\\n    'jupyterhub' \\\n    'jupyterlab' \\\n    && conda clean -tipsy\n\nRUN /opt/conda/bin/pip install rise \\\n    && jupyter-nbextension install rise --py --sys-prefix \\\n    && jupyter-nbextension enable rise --py --sys-prefix\n\nUSER root\n\nEXPOSE 8888\nWORKDIR /home/$NB_USER/work\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\n# Add local files as late as possible to avoid cache busting\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start.sh /usr/local/bin/\nCOPY lectures.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n\n# Personal keybindings\nCOPY .config/main.js /opt/conda/share/jupyter/nbextensions/rise\n\n# Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_USER\n\nRUN pip install --no-cache-dir --upgrade pip \\\n    howdoi beeprint mypy\n"
}