{
  "startTime": 1674240405161,
  "endTime": 1674240405405,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "# Docker Image for HFOS\n#\n# This image essentially packages up HFOS along with mongodb\n# into a Docker Image/Container.\n#\n# Usage Examples::\n#\n# To run your instance and see if the backend starts:\n#     $ docker run -i -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && hfos_launcher.py\"\n#\n# To investigate problems on the docker container, i.e. get a shell:\n#     $ docker run -i -t --name hfos-test-live -t hackerfleet/hfos\n#\n# If you want to run a productive instance with working SSL:\n#     $ docker run -i -p 127.0.0.1:443:443 -t hackerfleet/hfos /bin/bash -c \"/etc/init.d/mongodb start && \\\n#       python3 hfos_launcher.py --port 443 --cert /etc/ssl/certs/hfos/selfsigned.pem --log 10 --dev\"\n#\n# VERSION: 1.1.2\n#\n# Last Updated: 20170712\n\nFROM debian:experimental\nMAINTAINER Heiko 'riot' Weinen <riot@c-base.org>\n\n# Install dependencies\n\nRUN echo \"deb ftp://ftp2.de.debian.org/debian unstable main\" > /etc/apt/sources.list\nRUN echo \"deb ftp://ftp2.de.debian.org/debian experimental main\" > /etc/apt/sources.list.d/experimental.list\n\nRUN apt-get update && \\\n    apt-get install -qy --no-install-recommends \\\n        git \\\n        bzip2 \\\n        npm \\\n        nodejs-legacy \\\n        libfontconfig \\\n        build-essential \\\n        gdal-bin \\\n        locales \\\n        python-gdal \\\n        enchant \\\n        python3-virtualenv \\\n        python3-dev \\\n        python3-pymongo \\\n        python3-bson-ext \\\n        python3-pip \\\n        python3-wheel \\\n        python3-urwid \\\n        python3-setuptools \\\n        python3-setuptools-scm \\\n        python3-setuptools-git \\\n        python3-serial \\\n        python3-openssl && rm -rf /var/lib/apt/lists/*;\n\n\nRUN echo \"C.UTF-8\" > /etc/locale.gen\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nRUN locale-gen\n\n# Get a very recent mongodb\n\nRUN apt-get install --no-install-recommends -qy -t experimental mongodb && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean\n\n# Activate mongodb\n\nRUN echo smallfiles = true >> /etc/mongodb.conf\n\n# The next one was necessary on one installation, but that could've been due to a weird mongodb release\n#RUN echo setParameter = textSearchEnabled = true >> /etc/mongodb.conf\n\n# Create virtual environment\n\n#RUN python3 /usr/lib/python3/dist-packages/virtualenv.py -p /usr/bin/python3.5 --system-site-packages venv\n\nRUN useradd -ms /bin/bash hfos\nWORKDIR /home/hfos\n\n# Copy repository\n\nCOPY . hfos\nWORKDIR hfos\n\n# Fetch Frontend\n\nRUN git submodule init && git submodule update\n\n# Install HFOS\n\nRUN pip3 install --no-cache-dir -r requirements-dev.txt\nRUN python3 setup.py develop\n\n# Upgrade npm (from ancient Debian version to 4.6.1 which has a proven track record at assembling the frontend)\n\nRUN npm install -g npm@4.6.1 && npm cache clean --force;\n\n# Install HFOS\n\nRUN python3 -u hfos_manage.py install cert\nRUN python3 -u hfos_manage.py install var\n# Rest might need a running db\nRUN /etc/init.d/mongodb start && python3 -u hfos_manage.py install modules\n# Temporary hack, until we have provisioning obey dependencies again:\nRUN /etc/init.d/mongodb start && python3 -u hfos_manage.py install provisions -p system\nRUN /etc/init.d/mongodb start && python3 -u hfos_manage.py install provisions -p user\nRUN /etc/init.d/mongodb start && python3 -u hfos_manage.py install provisions\nRUN /etc/init.d/mongodb start && python3 -u hfos_manage.py install docs\nRUN /etc/init.d/mongodb start && python3 -u hfos_manage.py install frontend --rebuild --dev\n\n#  Services\n\nEXPOSE 443\n\n# There is a frontend development server with hot reloading which can be started with\n#   $ hfos/frontend/npm run start\n# If you want to run the frontend development live server, uncomment this:\n#\n# EXPOSE 8081\n\n"
}