{
  "startTime": 1674250757050,
  "endTime": 1674250757139,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#*******************************************************************************\n#Dockerfile\n#*******************************************************************************\n\n#Purpose:\n#This file describes the operating system prerequisites for RRR, and is used by\n#the Docker software.\n#Author:\n#Cedric H. David, 2018-2018\n\n\n#*******************************************************************************\n#Usage\n#*******************************************************************************\n#docker build -t rrr:myimage -f Dockerfile .             #Create image\n#docker run --rm --name rrr_mycontainer     \\\n#           -it rrr:myimage                              #Run image in container\n#docker run --rm --name rrr_mycontainer     \\\n#           -v $PWD/input:/home/rrr/input   \\\n#           -v $PWD/output:/home/rrr/output \\\n#           -it rrr:myimage                              #Run and map volumes\n#docker save -o rrr_myimage.tar rrr:myimage              #Save a copy of image\n#docker load -i rrr_myimage.tar                          #Load a saved image\n\n\n#*******************************************************************************\n#Operating System\n#*******************************************************************************\nFROM ubuntu:trusty\n\n\n#*******************************************************************************\n#Copy files into Docker image (this ignores the files listed in .dockerignore)\n#*******************************************************************************\nWORKDIR /home/rrr/\nCOPY . .\n\n\n#*******************************************************************************\n#Operating System Requirements\n#*******************************************************************************\nRUN  apt-get update && \\\n     apt-get install -y --no-install-recommends $(grep -v -E '(^#|^$)' requirements.apt) && \\\n     rm -rf /var/lib/apt/lists/*\n\n\n#*******************************************************************************\n#Python requirements\n#*******************************************************************************\nRUN pip install --no-cache-dir $(grep setuptools requirements.pip) && \\\n     pip install --no-cache-dir $(grep numpy requirements.pip) && \\\n     pip install --no-cache-dir -r requirements.pip\n\n\n#*******************************************************************************\n#Intended (default) command at execution of image (not used during build)\n#*******************************************************************************\nCMD  /bin/bash\n\n\n#*******************************************************************************\n#End\n#*******************************************************************************\n"
}