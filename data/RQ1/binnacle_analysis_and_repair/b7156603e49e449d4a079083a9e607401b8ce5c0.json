{
  "startTime": 1674242166137,
  "endTime": 1674242166269,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 6,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using a \"slim\" base image ends up being about 100MB smaller than the regular ubuntu\n#FROM ubuntu:16.04\nFROM debian:jessie-slim\n\n# Set some parameters.\nENV NODE_USER  app\nENV NODE_GROUP mqclient\nENV APP_DIR    /usr/local/nodejs/mqput\n\n# This is a queue predefined in the MQ Developer Edition server container\nENV DOCKER_Q    DEV.QUEUE.1\nENV DOCKER_QMGR QM1\n\nWORKDIR ${APP_DIR}\n\n# Create the application directory so we can put stuff in there immediately\nRUN mkdir -p ${APP_DIR}\n\n# Copy project files into the container. In this source directory, the\n# package file has been given a different name, to avoid any attempt to\n# reference it with the rest of the samples. But it gets renamed to the\n# correct name during this copy.\nCOPY amqsput.js ${APP_DIR}/\nCOPY package.docker ${APP_DIR}/package.json\n\n# Update the base image and make sure we've installed basic capabilities\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends curl gcc g++ make git ca-certificates \\\n    && curl -f --silent -k --location https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -g npm \\\n# Define the userid and set up the location for the program\n   && groupadd -r ${NODE_GROUP} && useradd -r -m -g ${NODE_GROUP} ${NODE_USER} \\\n# Now get all the prereq packages installed and cleanup the\n# pieces that are not needed after building the C interface pieces.\n   && npm install \\\n   && apt-get autoremove -y curl make gcc g++ python git \\\n   && apt-get purge -y \\\n   && rm -rf /var/lib/apt/lists/* \\\n   && chmod a+rx ${APP_DIR}/* && npm cache clean --force;\n\nUSER ${NODE_USER}\n# Now ready to run the amqsput program.\nCMD node amqsput ${DOCKER_Q} ${DOCKER_QMGR}\n"
}