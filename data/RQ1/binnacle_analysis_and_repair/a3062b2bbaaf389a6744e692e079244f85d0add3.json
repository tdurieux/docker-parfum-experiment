{
  "startTime": 1674248802317,
  "endTime": 1674248802473,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\nENV GFDL_WORK /tmp\nENV GFDL_BASE /isca\nENV GFDL_DATA /data\nENV GFDL_ENV docker\n\n# # ignore missing hardware needed lfor openMPI speedup\n# ENV [\"OMPI_MCA_btl\", \"^openib\"]\n# # avoid mpi vader error [d3f8787e619d:05992] Read -1, expected 8192, errno = 1\n# # https://github.com/open-mpi/ompi/issues/4948\n# ENV  [\"OMPI_MCA_btl_vader_single_copy_mechanism\", \"none\"]\n\nRUN apt-get update && apt-get upgrade -y\nRUN DEBIAN_FRONTEND=noninteractive \\\n\tapt-get --no-install-recommends install -y \\\n\tbuild-essential \\\n\tcurl \\\n\tgfortran \\\n\tgit \\\n    libnetcdf-dev \\\n    libpnetcdf-dev \\\n    libnetcdff-dev \\\n    libhdf5-openmpi-dev \\\n    python3 \\\n    python3-pip \\\n    tcl \\\n    tcl-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# support for running as a local user so file permissions are correct\nRUN curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture)\" \\\n    && chmod +x /usr/local/bin/gosu\n\nRUN groupadd -g 9004 isca_build\nRUN useradd -ms /bin/bash -u 9002 -g isca_build isca\nCOPY . /isca\nRUN chown -R isca /isca\n\nRUN pip3 install --no-cache-dir -r /isca/src/extra/python/requirements.txt\nRUN pip3 install --no-cache-dir -e /isca/src/extra/python\n\nRUN mkdir -p /data && chown -R isca /data\nVOLUME /data\nVOLUME /isca\n\nWORKDIR /isca\n\nCOPY docker-entrypoint.sh /usr/local/bin/entrypoint.sh\nRUN chmod +x /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n\n#RUN python3 -c \"import isca; cb = isca.IscaCodeBase.from_directory('/isca'); cb.compile()\"\n#CMD python3 /isca/exp/held_suarez.py --compile --up-to -i 3 -n 2\n"
}