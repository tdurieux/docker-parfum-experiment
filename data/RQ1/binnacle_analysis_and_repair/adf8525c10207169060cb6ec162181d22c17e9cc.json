{
  "startTime": 1674244380867,
  "endTime": 1674244381088,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is an auto generated Dockerfile for ros:nightly\n# generated from docker_images_ros2/nightly/create_ros_image.Dockerfile.em\nFROM ubuntu:bionic\n\n# setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && apt-get install --no-install-recommends -q -y tzdata && rm -rf /var/lib/apt/lists/*\n\n# install packages\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    bash-completion \\\n    dirmngr \\\n    gnupg2 \\\n    lsb-release \\\n    python3-pip \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup ros2 keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros2-testing/ubuntu `lsb_release -sc` main\" > /etc/apt/sources.list.d/ros2-testing.list\n\n# install bootstrap tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    python3-rosdep \\\n    python3-vcstool \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# bootstrap rosdep\nRUN rosdep init \\\n    && rosdep update\n\n# install python packages\nRUN pip3 install --no-cache-dir -U \\\n    argcomplete \\\n    colcon-common-extensions \\\n    flake8 \\\n    flake8-blind-except \\\n    flake8-builtins \\\n    flake8-class-newline \\\n    flake8-comprehensions \\\n    flake8-deprecated \\\n    flake8-docstrings \\\n    flake8-import-order \\\n    flake8-quotes \\\n    pytest-repeat \\\n    pytest-rerunfailures\n\n# FIXME This is a workaround for pytest not found causing builds to fail\n# Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722\nRUN pip3 freeze | grep pytest \\\n    && python3 -m pytest --version\n# install ros2 packages\nENV ROS_DISTRO dashing\nRUN mkdir -p /opt/ros/$ROS_DISTRO\nARG ROS2_BINARY_URL=https://ci.ros2.org/view/packaging/job/packaging_linux/lastSuccessfulBuild/artifact/ws/ros2-package-linux-x86_64.tar.bz2\nRUN wget -q $ROS2_BINARY_URL -O - | \\\n    tar -xj --strip-components=1 -C /opt/ros/$ROS_DISTRO\n\n# install setup files\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    ros-$ROS_DISTRO-ros-workspace \\\n    && rm -rf /var/lib/apt/lists/*\n\n# add custom rosdep rule files\nCOPY prereqs.yaml /etc/ros/rosdep/\nRUN echo \"yaml file:///etc/ros/rosdep/prereqs.yaml\" | \\\n    cat - /etc/ros/rosdep/sources.list.d/20-default.list > temp && \\\n    mv temp /etc/ros/rosdep/sources.list.d/20-default.list\nRUN rosdep update\n\n# install dependencies\nRUN . /opt/ros/$ROS_DISTRO/setup.sh \\\n    && apt-get update \\\n    && rosdep install -y \\\n    --from-paths /opt/ros/$ROS_DISTRO/share \\\n    --ignore-src \\\n    --skip-keys \" \\\n      libopensplice69 \\\n      rti-connext-dds-5.3.1\" \\\n    && rm -rf /var/lib/apt/lists/*\n\n# FIXME Remove this once rosdep detects ROS 2 packages https://github.com/ros-infrastructure/rosdep/issues/660\n# ignore installed rosdep keys\nENV ROS_PACKAGE_PATH /opt/ros/$ROS_DISTRO/share\n\n# FIXME Remove this once ament_export_interfaces respects COLCON_CURRENT_PREFIX https://github.com/ament/ament_cmake/issues/173\n#Workaround hard coded paths in nightly tarball setup scripts\nARG UPSTREAM_CI_WS=/home/jenkins-agent/workspace/packaging_linux/ws\nRUN mkdir -p $UPSTREAM_CI_WS && ln -s /opt/ros/$ROS_DISTRO $UPSTREAM_CI_WS/install\n\n# setup entrypoint\nCOPY ./ros_entrypoint.sh /\n\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n"
}