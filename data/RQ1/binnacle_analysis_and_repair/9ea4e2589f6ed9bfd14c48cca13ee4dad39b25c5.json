{
  "startTime": 1674250253709,
  "endTime": 1674250253897,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM koumoul/webapp-base:1.10.1\nMAINTAINER \"contact@koumoul.com\"\n\nRUN apk add --no-cache --update python make g++ unzip\n\n# Install the prepair command line tool\nRUN mkdir /prepair\nWORKDIR /tmp\n# cf https://github.com/appropriate/docker-postgis/pull/97/commits/9fbb21cf5866be05459a6a7794c329b40bdb1b37\nRUN apk add --no-cache --virtual .build-deps cmake linux-headers boost-dev gmp gmp-dev mpfr-dev && \\\n    apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main libressl2.7-libcrypto && \\\n    apk add --no-cache --virtual .gdal-build-deps --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing gdal-dev && \\\n    apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing gdal proj4 && \\\n    curl -f -L https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-4.12/CGAL-4.12.tar.xz -o cgal.tar.xz && \\\n    tar -xf cgal.tar.xz && \\\n    rm cgal.tar.xz && \\\n    cd CGAL-4.12 && \\\n    cmake . && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf CGAL-4.12 && \\\n    curl -f -L https://github.com/tudelft3d/prepair/archive/v0.7.1.tar.gz -o prepair.tar.gz && \\\n    tar -xzf prepair.tar.gz && \\\n    rm prepair.tar.gz && \\\n    cd prepair-0.7.1 && \\\n    cmake . && \\\n    make && \\\n    mv prepair /prepair/prepair && \\\n    cd .. && \\\n    rm -rf prepair-0.7.1 && \\\n    apk del .build-deps .gdal-build-deps\nRUN test -f /usr/lib/libproj.so.15\nRUN ln -s /usr/lib/libproj.so.15 /usr/lib/libproj.so\n\nARG VERSION\nENV VERSION=$VERSION\nENV NODE_ENV production\nENV DEBUG db,upgrade*\nWORKDIR /webapp\nADD package.json .\nADD yarn.lock .\nRUN yarn --production\nADD nodemon.json .\n\n# Adding UI files\nADD public public\nADD nuxt.config.js .\nADD i18n i18n\nADD doc/components/DocPage.vue public/components/DocPage.vue\nADD doc/pages/user-guide public/pages/user-guide\nADD doc/pages/interoperate public/pages/interoperate\n\n# Adding server files\nADD server server\nADD shared shared\nADD contract contract\nADD config config\nADD scripts scripts\nADD upgrade upgrade\nADD README.md .\n\nVOLUME /data\nVOLUME /webapp/.nuxt\nEXPOSE 8080\n\nCMD [\"node\", \"--max-http-header-size\", \"64000\", \"server\"]\n"
}