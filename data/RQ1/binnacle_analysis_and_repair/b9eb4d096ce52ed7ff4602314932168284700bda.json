{
  "startTime": 1674248691995,
  "endTime": 1674248692261,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NGINX_VERSION\n\nFROM nginx:${NGINX_VERSION}-alpine\n\nARG NPS_VERSION\nARG PSOL_VERSION\n\nMAINTAINER Alexey Zhokhov <alexey@zhokhov.com>\n\nRUN set -ex \\\n\t&& mkdir -p /usr/src \\\n    && cd /usr/src \\\n    && apk add --no-cache \\\n    \t\t   tar \\\n    \t\t   gzip \\\n    && GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n\t&& apk add --no-cache --virtual .build-deps \\\n               apr-dev \\\n               apr-util-dev \\\n               build-base \\\n               ca-certificates \\\n               gd-dev \\\n               geoip-dev \\\n               git \\\n               gnupg \\\n               icu-dev \\\n               libjpeg-turbo-dev \\\n               libpng-dev \\\n               libxslt-dev \\\n               linux-headers \\\n               libressl-dev \\\n               pcre-dev \\\n               tar \\\n               zlib-dev \\\n\t&& wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -O nginx.tar.gz \\\n\t&& wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -O nginx.tar.gz.asc \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& found=''; \\\n\tfor server in \\\n\t\tha.pool.sks-keyservers.net \\\n\t\thkp://keyserver.ubuntu.com:80 \\\n\t\thkp://p80.pool.sks-keyservers.net:80 \\\n\t\tpgp.mit.edu; \\\n\tdo \\\n\t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \\\n\t\tgpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \\\n\tdone; \\\n\ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \\\n\tgpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n\t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \\\n\t&& tar -zxC /usr/src -f nginx.tar.gz \\\n\t&& rm nginx.tar.gz \\\n    && wget https://github.com/apache/incubator-pagespeed-ngx/archive/v${NPS_VERSION}.zip -O nps.zip \\\n\t&& unzip nps.zip \\\n\t&& rm nps.zip \\\n    && nps_dir=$(find . -name \"*pagespeed-ngx-${NPS_VERSION}\" -type d) \\\n    && cd \"$nps_dir\" \\\n    && wget https://github.com/donbeave/docker-nginx-pagespeed-psol/releases/download/v${PSOL_VERSION}-nginx-${NGINX_VERSION}-alpine/psol.tar.gz -O psol.tar.gz \\\n    && tar -xzf psol.tar.gz \\\n    && rm psol.tar.gz \\\n    && cd /usr/src/nginx-$NGINX_VERSION \\\n    && uname -a \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --add-dynamic-module=../incubator-pagespeed-ngx-${NPS_VERSION} \\\n                   --modules-path=/usr/lib/nginx/modules \\\n                   --with-compat \\\n                   --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n    && make modules \\\n    && cp objs/ngx_pagespeed.so /usr/lib/nginx/modules \\\n    && rm -rf /usr/src/* \\\n    && apk del .build-deps \\\n    && apk del tar \\\n               gzip \\\n    && apk add --no-cache \\\n               --update \\\n               g++ \\\n               apr \\\n               apr-util \\\n               icu-libs\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n"
}