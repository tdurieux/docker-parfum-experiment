{
  "startTime": 1674251271454,
  "endTime": 1674251271605,
  "originalSmells": [
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 27,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\nMAINTAINER wangdong <mail@wangdong.io>\n\nENV C_FORCE_ROOT true\n\nENV REDASH_DATE_FORMAT YYYY-MM-DD\nENV REDASH_FEATURE_ALLOW_ALL_TO_EDIT false\nENV REDASH_FEATURE_SHOW_PERMISSIONS_CONTROL true\nENV REDASH_FEATURE_ALLOW_CUSTOM_JS_VISUALIZATIONS true\nENV REDASH_VERSION_CHECK false\n\nENV REDASH_MAIL_SERVER smtp-mail.outlook.com\nENV REDASH_MAIL_PORT 587\nENV REDASH_MAIL_USE_TLS true\nENV REDASH_MAIL_USE_SSL false\nENV REDASH_MAIL_USERNAME serve-notice@outlook.com\nENV REDASH_MAIL_PASSWORD 12345678\nENV REDASH_MAIL_DEFAULT_SENDER serve-notice@outlook.com\n\nRUN sed -i -e 's~dl-cdn.alpinelinux.org~mirrors.aliyun.com~g' /etc/apk/repositories\nRUN apk --no-cache add bash build-base g++ make autoconf python-dev py2-pip tzdata nodejs nodejs-npm git pwgen \\\n    mariadb-dev postgresql-dev libffi-dev linux-headers musl-dev libressl-dev cyrus-sasl-dev libpq && \\\n    yes | cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\nADD freetds-0.95.95.tar.gz /opt/\nADD redash-3.0.0.tar.gz /\n\nRUN mv /redash-3.0.0 /app && \\\n    cd /opt/freetds-0.95.95 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    rm -rf /opt/freetds-0.95.95\n\nWORKDIR /app\n\n# 汉化处理\nCOPY data/redash/client/app /app/client/app\nCOPY data/redash/redash /app/redash\nCOPY data/redash/package.json /app/package.json\n\nRUN pip --no-cache-dir install \\\n    -i https://pypi.tuna.tsinghua.edu.cn/simple \\\n    -r requirements.txt -r requirements_dev.txt -r requirements_all_ds.txt\n\nRUN node -v && npm -v && \\\n    npm config set registry https://registry.npm.taobao.org && \\\n    echo 'sass_binary_site=https://npm.taobao.org/mirrors/node-sass' >> ~/.npmrc && \\\n    make && \\\n    cp -r ./client/app/assets/fonts/roboto ./client/dist/fonts/ && \\\n    rm -rf node_modules && npm cache clear --force\n\nRUN ln -s /usr/bin/celery /usr/local/bin/celery && \\\n    ln -s /usr/bin/gunicorn /usr/local/bin/gunicorn\n\nENTRYPOINT [\"/app/bin/docker-entrypoint\"]\n"
}