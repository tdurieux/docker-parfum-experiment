{
  "startTime": 1674240961059,
  "endTime": 1674240961340,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Yosinski's caffe fork is based off of older CUDNN\nFROM nvidia/cuda:7.5-cudnn4-devel-ubuntu14.04\n\n# This is Trusty, so a lot of this stuff is out of date, esp. Python\n# Make it minimal so that we can use conda's libs instead\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgtk2.0-dev \\\n        libhdf5-serial-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Env vars\nENV HOME=/home/developer \\\n    CONDA_ROOT=/opt/conda \\\n    CAFFE_ROOT=/opt/caffe \\\n    DVTB_ROOT=/opt/dvtb \\\n    PATH=/opt/conda/bin:$PATH \\\n    uid=1000 gid=1000\n\n# Make a \"developer\" user, conda is easier as non-root\nRUN groupadd -g $gid developer && \\\n    useradd -N -m -d $HOME -u $uid -g $gid -s /bin/bash -c Developer developer && \\\n    echo \"developer ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/developer && \\\n    chmod 0440 /etc/sudoers.d/developer && \\\n    mkdir -p $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT && \\\n    chown ${uid}:${gid} -R $HOME $CONDA_ROOT $CAFFE_ROOT $DVTB_ROOT\n\n# Change to user\nWORKDIR $HOME\nUSER developer\n\n# Get Miniconda and install it into $CONDA_ROOT\n# Also get older opencv that won't break everything (see issues on yosinski/caffe)\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh && \\\n    echo \"d573980fe3b5cdf80485add2466463f5 Miniconda2-4.3.11-Linux-x86_64.sh\" | md5sum -c - && \\\n    bash Miniconda2-4.3.11-Linux-x86_64.sh -b -f -p $CONDA_ROOT && \\\n    rm Miniconda2-4.3.11-Linux-x86_64.sh && \\\n    conda update -y conda && \\\n    conda install -y --channel menpo opencv\n\n# Move to $CAFFE_ROOT and get Yosinski's fork\nWORKDIR $CAFFE_ROOT\nRUN git clone --depth 1 https://github.com/BVLC/caffe.git . && \\\n    git remote add yosinski https://github.com/yosinski/caffe.git && \\\n    git fetch --all && \\\n    git checkout --track -b deconv-deep-vis-toolbox yosinski/deconv-deep-vis-toolbox\n\n# Split out python-dateutil into its own requirements file because it's not on conda,\n# then use conda to install most of the packages and requirements, including the required\n# system libraries (like protobuf, etc.)\n# Also install pip because conda installs can coexist nicely with pip\nRUN egrep 'python-dateutil' python/requirements.txt > python/requirements.pip.txt && \\\n    egrep -v 'python-dateutil' python/requirements.txt > python/requirements.conda.txt && \\\n    conda install -y --file=python/requirements.conda.txt \\\n        pip \\\n        curl \\\n        gflags \\\n        glog \\\n        leveldb \\\n        libprotobuf \\\n        libtiff \\\n        libpng \\\n        lmdb \\\n        protobuf \\\n        pydot \\\n        scikit-image \\\n        scipy \\\n        snappy \\\n    && pip install --no-cache-dir -r python/requirements.pip.txt\n\n# We need to get the conda libs into the system (this will warn about truncated\n# libraries, but hasn't been an issue so far)\nRUN sudo bash -c \"echo \\\"$CONDA_ROOT/lib\\\" > /etc/ld.so.conf.d/conda.conf && ldconfig\"\n\n# This version of caffe doesn't support nccl, but leave this here for later\n# RUN git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j\"$(nproc)\" && sudo make install && cd .. && rm -rf nccl\n\n# Not sure why, but we need a Makefile.config. This is mostly the same as\n# Makefile.config.example in Yosinski's fork\nCOPY Makefile.config .\n\n# Run cmake -- add all the include/lib support by hand, I welcome pull requests\n# for this\nRUN mkdir build && cd build && \\\n    cmake \\\n          -DGFLAGS_INCLUDE_DIR=$CONDA_ROOT/include \\\n          -DGFLAGS_LIBRARY=$CONDA_ROOT/lib \\\n          -DGLOG_INCLUDE_DIR=$CONDA_ROOT/include \\\n          -DGLOG_LIBRARY=$CONDA_ROOT/lib \\\n          -DLevelDB_INCLUDE=$CONDA_ROOT/include \\\n          -DLevelDB_LIBRARY=$CONDA_ROOT/lib \\\n          -DLMDB_INCLUDE_DIR=$CONDA_ROOT/include \\\n          -DLMDB_LIBRARIES=$CONDA_ROOT/lib \\\n          -DMKLROOT=$CONDA_ROOT \\\n          -DPROTOBUF_LIBRARY=$CONDA_ROOT/lib/libprotobuf.so \\\n          -DPROTOBUF_INCLUDE_DIR=$CONDA_ROOT/include \\\n          -DPROTOBUF_PROTOC_LIBRARY=$CONDA_ROOT/lib/libprotoc.so \\\n          -DPROTOBUF_PROTOC_EXECUTABLE=$CONDA_ROOT/bin/protoc \\\n          -DSNAPPY_ROOT_DIR=$CONDA_ROOT \\\n          -DUSE_CUDNN=1 ..\n#           -DUSE_CUDNN=1 -DUSE_NCCL=1 ..\nRUN make -j\"$(nproc)\"\nRUN make -j\"$(nproc)\" pycaffe\n\n# Update python stuff, redo ld.so cache\nENV PYCAFFE_ROOT=$CAFFE_ROOT/python \\\n    PYTHONPATH=$PYCAFFE_ROOT:$PYTHONPATH \\\n    PATH=$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN sudo bash -c \"echo \\\"$CAFFE_ROOT/build/lib\\\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\"\n\n# Switch to $DVTB_ROOT, clone into location, and update caffe root because we can\nWORKDIR $DVTB_ROOT\nRUN git clone --depth 1 https://github.com/yosinski/deep-visualization-toolbox . && \\\n    sed -e\"s,/path/to/caffe,${CAFFE_ROOT},\" models/caffenet-yos/settings_local.template-caffenet-yos.py > settings_local.py\n\n# Phew\n\n"
}