{
  "startTime": 1674238686380,
  "endTime": 1674238686463,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.10.4-alpine as build\n\nWORKDIR /go/src/github.com/alexellis/derek\nCOPY . .\n\nRUN go test $(go list ./... | grep -v /vendor/) -cover\n\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o derek .\n\nFROM alpine:3.8\n\nRUN apk --no-cache add curl ca-certificates \\ \n    && echo \"Pulling watchdog binary from Github.\" \\\n    && curl -f -sSL https://github.com/alexellis/faas/releases/download/0.9.6/fwatchdog > /usr/bin/fwatchdog \\\n    && chmod +x /usr/bin/fwatchdog \\\n    && apk del curl --no-cache\n\nWORKDIR /root/\nCOPY --from=build /go/src/github.com/alexellis/derek/derek derek\n\nENV cgi_headers=\"true\"\nENV validate_hmac=\"true\"\nENV validate_customers=\"true\"\n\nENV combine_output=\"true\"\n\nENV fprocess=\"./derek\"\n\nHEALTHCHECK --interval=5s CMD [ -e /tmp/.lock ] || exit 1\n\nEXPOSE 8080\nCMD [\"fwatchdog\"]\n"
}