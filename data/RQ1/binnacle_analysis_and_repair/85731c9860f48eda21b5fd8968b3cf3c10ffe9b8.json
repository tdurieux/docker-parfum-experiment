{
  "startTime": 1674251552836,
  "endTime": 1674251552988,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for development purposes.\n# Read docs/development.md for more information\n\n# vi: ft=dockerfile\n\n###############################################################################\n# Base build image\nFROM golang:1.11-alpine AS build_base\nRUN apk add --no-cache bash ca-certificates git gcc g++ libc-dev\nWORKDIR /go/src/github.com/semi-technologies/weaviate\nENV GO111MODULE=on\n# Populate the module cache based on the go.{mod,sum} files.\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\n\n###############################################################################\n# This image builds the weavaite server\nFROM build_base AS server_builder\nCOPY . .\nRUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go install -a -tags netgo -ldflags '-w -extldflags \"-static\"' ./cmd/weaviate-server\n\n###############################################################################\n# This image builds the genesis\nFROM build_base AS genesis\nCOPY . .\nRUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go install -a -tags netgo -ldflags '-w -extldflags \"-static\"' ./genesis/cmd/weaviate-genesis-server/\nENTRYPOINT [\"/go/bin/weaviate-genesis-server\"]\n\n# ###############################################################################\n# # This creates an image that can be run to import the demo dataset for development\n# FROM build_base AS data_importer\n# COPY . .\n# ENTRYPOINT [\"./tools/dev/import_demo_data.sh\"]\n\n###############################################################################\n# This creates an image that can be used to fake a genesis for a local network setup\nFROM build_base AS genesis_fake\nCOPY . .\nENTRYPOINT [\"./tools/dev/genesis_fake.sh\"]\n\n###############################################################################\n# This creates an image that can be used to fake a genesis for a local network setup\nFROM build_base AS remote_weaviate_fake\nCOPY . .\nENTRYPOINT [\"./tools/dev/remote_weaviate_fake.sh\"]\n\n###############################################################################\n# This creates an image that can be used to fake an api for telemetry acceptance test purposes\nFROM build_base AS telemetry_mock_api\nCOPY . .\nENTRYPOINT [\"./tools/dev/telemetry_mock_api.sh\"]\n\n###############################################################################\n# Weaviate (no differentiation between dev/test/prod - 12 factor!)\n# It has a development-friendly config file by default, but the config\n# can of course be overwritten through any mounted config file.\nFROM alpine AS weaviate\nENTRYPOINT [\"/bin/weaviate\"]\nCOPY ./tools/dev/config.docker.yaml /weaviate.conf.yaml\nCOPY --from=server_builder /go/bin/weaviate-server /bin/weaviate\nCOPY --from=build_base /etc/ssl/certs /etc/ssl/certs\nCMD [ \"--host\", \"0.0.0.0\", \"--port\", \"8080\", \"--scheme\", \"http\", \"--config-file\", \"./weaviate.conf.yaml\" ]\n"
}