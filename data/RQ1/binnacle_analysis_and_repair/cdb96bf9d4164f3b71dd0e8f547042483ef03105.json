{
  "startTime": 1674243419710,
  "endTime": 1674243419919,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "# This image serves the dependencies like tesseract@latest and OCRmyPDF@latest and the ocr worker for the nextcloud ocr app.\n# important steps:\n# docker build --build-arg LANGUAGES=\"tesseract-ocr-deu\" -t <your username>/ocr .\n# docker network create --driver bridge isolated_ocr\n# docker run --name ocr --network=isolated_ocr -e \"NODE_ENV=production\" -e \"REDIS_HOST=redis\" -e \"REDIS_DB=0\" -e \"REDIS_PORT=6379\" -e \"REDIS_PASSWORD=OCR\" -v /path/to/data/directory/of/nextcloud:/home/node/data:ro -v /path/to/tmp:/home/node/output -d <your username>/ocr\n#\nFROM ubuntu:17.10\n\nLABEL maintainer=\"janiskoehr@icloud.com\" description=\"This image serves the dependencies like tesseract and OCRmyPDF and the ocr worker for the nextcloud ocr app.\" vendor=\"Janis Koehr\"\nARG LANGUAGES=\"tesseract-ocr-fra tesseract-ocr-spa tesseract-ocr-deu\"\n\n# User\nRUN groupadd --gid 1000 node \\\n    && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\n# Lang\nENV LC_ALL=\"C.UTF-8\"\nENV LANG=\"C.UTF-8\"\n\n# Tesseract / languages\n# For now leave tess4 because of bad performance RUN add-apt-repository ppa:alex-p/tesseract-ocr -y   && \\\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    tesseract-ocr \\\n    $LANGUAGES && rm -rf /var/lib/apt/lists/*;\n\n\n# OcrMyPDF\nRUN apt-get install -y --no-install-recommends \\\n    ocrmypdf && rm -rf /var/lib/apt/lists/*;\n\n# Nodejs\nRUN apt-get install lsb-release ca-certificates wget -y --no-install-recommends \\\n    && wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n    && echo \"deb https://deb.nodesource.com/node_8.x $(lsb_release -s -c) main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n    && echo \"deb-src https://deb.nodesource.com/node_8.x $(lsb_release -s -c) main\" | tee -a /etc/apt/sources.list.d/nodesource.list && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Clean up\nRUN rm -rf /tmp/* /var/tmp/* \\\n    && apt-get autoremove -y \\\n    && apt-get autoclean -y\n\n# Create working directory and linked dirs for input and output\nRUN mkdir -p /home/node/worker \\\n    && mkdir /home/node/data \\\n    && mkdir /home/node/output\n\n# Workdir\nWORKDIR /home/node/worker\n\n# Bundle worker src\nCOPY . /home/node/worker\n\n# Install worker dependencies\nRUN npm install && npm cache clean --force;\n\n# Build worker javascript files and delete src afterwards\nRUN npm run build \\\n    && rm -r src/ package.json tsconfig.app.json tsconfig.json\n\nUSER node\n\nCMD [\"node\",\"/home/node/worker/dist/main.js\"]\n"
}