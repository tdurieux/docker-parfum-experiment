{
  "startTime": 1674240192545,
  "endTime": 1674240192710,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm-alpine\n\n# Install Magento requirements\nRUN \\\n    apk add --no-cache --virtual .persistent-deps \\\n        freetype-dev \\\n        git \\\n        jq \\\n        icu-libs \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        libxml2-dev \\\n        libxml2-utils \\\n        openssh-client \\\n        patch \\\n        perl \\\n        ssmtp \\\n        yarn && \\\n    apk add --no-cache --virtual .build-deps \\\n        $PHPIZE_DEPS \\\n        icu-dev && \\\n    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \\\n    docker-php-ext-install -j$(nproc) \\\n        bcmath \\\n        intl \\\n        gd \\\n        opcache \\\n        pdo_mysql \\\n        soap \\\n        zip && \\\n    yes \"\" | pecl install apcu lzf mongodb redis && \\\n    docker-php-ext-enable apcu lzf mongodb redis && \\\n    curl -f -sS https://packages.blackfire.io/binaries/blackfire-php/1.22.0/blackfire-php-alpine_amd64-php-72.so \\\n        --output $(php -r \"echo ini_get('extension_dir');\")/blackfire.so && \\\n    perl -pi -e \"s/mailhub=mail/mailhub=maildev/\" /etc/ssmtp/ssmtp.conf && \\\n    perl -pi -e \"s|;pm.status_path = /status|pm.status_path = /php_fpm_status|g\" /usr/local/etc/php-fpm.d/www.conf && \\\n    pear channel-discover pear.phing.info && \\\n    pear install phing/phing && \\\n    yarn global add grunt-cli && \\\n    apk del .build-deps\n\n# Install Composer globally\nENV COMPOSER_ALLOW_SUPERUSER 1\nRUN \\\n    curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer && \\\n    composer global require \"hirak/prestissimo:dev-master\" --no-suggest --optimize-autoloader --classmap-authoritative\n\n# Install custom PHP configuration\nCOPY conf/* /usr/local/etc/php/\n\n# Install custom entrypoint\nCOPY entrypoint.sh /usr/local/bin/docker-custom-entrypoint\nRUN chmod 777 /usr/local/bin/docker-custom-entrypoint\nCMD [\"php-fpm\"]\nENTRYPOINT [\"docker-custom-entrypoint\"]\n"
}