{
  "startTime": 1674240129974,
  "endTime": 1674240130238,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 11,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 11,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 11,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 11,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Hyperledger fabric base image.\n# If you need a peer node to run, please see the yeasy/hyperledger-peer image.\n# Workdir is set to $GOPATH/src/github.com/hyperledger/fabric\n# Data is stored under /var/hyperledger/db and /var/hyperledger/production\n\n# Currently, the binary will look for config files at corresponding path.\n\nFROM golang:1.9\nLABEL maintainer \"Baohua Yang <yangbaohua@gmail.com>\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Reused in all children images\nENV FABRIC_CFG_PATH=/etc/hyperledger/fabric\n\n# Only useful for the building\nENV FABRIC_ROOT=$GOPATH/src/github.com/hyperledger/fabric\nENV ARCH=x86_64\n# version for the base images, e.g., fabric-ccenv, fabric-baseos\nENV BASEIMAGE_RELEASE=0.3.2\n# BASE_VERSION is required in core.yaml to build and run cc container\nENV BASE_VERSION=1.0.2\n# version for the peer/orderer binaries, the community version tracks the hash value like 1.0.0-snapshot-51b7e85\nENV PROJECT_VERSION=1.0.2\n# generic builder environment: builder: $(DOCKER_NS)/fabric-ccenv:$(ARCH)-$(PROJECT_VERSION)\nENV DOCKER_NS=hyperledger\n# for golang or car's baseos: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASEIMAGE_RELEASE)\nENV BASE_DOCKER_NS=hyperledger\nENV LD_FLAGS=\"-X github.com/hyperledger/fabric/common/metadata.Version=${PROJECT_VERSION} \\\n             -X github.com/hyperledger/fabric/common/metadata.BaseVersion=${BASEIMAGE_RELEASE} \\\n             -X github.com/hyperledger/fabric/common/metadata.BaseDockerLabel=org.hyperledger.fabric \\\n             -X github.com/hyperledger/fabric/common/metadata.DockerNamespace=hyperledger \\\n             -X github.com/hyperledger/fabric/common/metadata.BaseDockerNamespace=hyperledger\"\n\nRUN mkdir -p /var/hyperledger/db \\\n        /var/hyperledger/production \\\n# only useful when use as a ccenv image\n        /chaincode/input \\\n        /chaincode/output \\\n        $FABRIC_CFG_PATH\n\nRUN apt-get update \\\n        && apt-get install --no-install-recommends -y libsnappy-dev zlib1g-dev libbz2-dev libltdl-dev \\\n        && apt-get install --no-install-recommends -y tree jq \\\n        && apt-get install --no-install-recommends -y unzip \\\n        && rm -rf /var/cache/apt && rm -rf /var/lib/apt/lists/*;\n\n# install chaintool\nRUN curl -f -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.3/chaintool > /usr/local/bin/chaintool \\\n        && chmod a+x /usr/local/bin/chaintool\n\n# install gotools\nRUN go get github.com/golang/protobuf/protoc-gen-go \\\n        && go get github.com/kardianos/govendor \\\n        && go get github.com/golang/lint/golint \\\n        && go get golang.org/x/tools/cmd/goimports \\\n        && go get github.com/onsi/ginkgo/ginkgo \\\n        && go get github.com/axw/gocov/... \\\n        && go get github.com/client9/misspell/cmd/misspell \\\n        && go get github.com/AlekSi/gocov-xml\n\n# clone hyperledger fabric code and add configuration files\nRUN mkdir -p $GOPATH/src/github.com/hyperledger \\\n        && cd $GOPATH/src/github.com/hyperledger \\\n        && wget https://github.com/hyperledger/fabric/archive/v${PROJECT_VERSION}.zip && unzip v${PROJECT_VERSION}.zip && rm v${PROJECT_VERSION}.zip && mv fabric-${PROJECT_VERSION} fabric \\\n        && cp $FABRIC_ROOT/devenv/limits.conf /etc/security/limits.conf \\\n        && cp -r $FABRIC_ROOT/sampleconfig/* $FABRIC_CFG_PATH\n\n# install configtxgen, cryptogen and configtxlator\nRUN cd $FABRIC_ROOT/ \\\n        && CGO_CFLAGS=\" \" go install -tags \"nopkcs11\" -ldflags \"-X github.com/hyperledger/fabric/common/configtx/tool/configtxgen/metadata.Version=${PROJECT_VERSION}\" github.com/hyperledger/fabric/common/configtx/tool/configtxgen \\\n        && CGO_CFLAGS=\" \" go install -tags \"\" -ldflags \"-X github.com/hyperledger/fabric/common/tools/cryptogen/metadata.Version=${PROJECT_VERSION}\" github.com/hyperledger/fabric/common/tools/cryptogen \\\n        && CGO_CFLAGS=\" \" go install -tags \"\" -ldflags \"-X github.com/hyperledger/fabric/common/tools/configtxlator/metadata.Version=${PROJECT_VERSION}\" github.com/hyperledger/fabric/common/tools/configtxlator\n\n# Install block-listener\nRUN cd $FABRIC_ROOT/examples/events/block-listener \\\n        && go build \\\n        && mv block-listener $GOPATH/bin\n\n# The data and config dir, can map external one with -v\nVOLUME /var/hyperledger\n#VOLUME /etc/hyperledger/fabric\n\n# this is only a workaround for current hard-coded problem when using as fabric-baseimage.\nRUN ln -s $GOPATH /opt/gopath\n\n# temporarily fix the `go list` complain problem, which is required in chaincode packaging, see core/chaincode/platforms/golang/platform.go#GetDepoymentPayload\nENV GOROOT=/usr/local/go\n\nWORKDIR $FABRIC_ROOT\n\nLABEL org.hyperledger.fabric.version=${PROJECT_VERSION} \\\n      org.hyperledger.fabric.base.version=${BASEIMAGE_RELEASE}\n"
}