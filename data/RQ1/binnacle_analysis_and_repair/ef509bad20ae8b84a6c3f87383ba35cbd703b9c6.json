{
  "startTime": 1674241879510,
  "endTime": 1674241879698,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 25,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 60,
        "columnStart": 25,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 25,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 60,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# Builder image to generate proto files\n# -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS builder\n\n# Install the runtime deps from apt.\nRUN apt-get -y update && apt-get -y --no-install-recommends install curl make virtualenv zip && rm -rf /var/lib/apt/lists/*;\n\n# Install protobuf compiler.\nRUN curl -Lfs https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip && \\\n  unzip protoc3.zip -d protoc3 && \\\n  mv protoc3/bin/protoc /usr/bin/protoc && \\\n  chmod a+rx /usr/bin/protoc && \\\n  cp -r protoc3/include/google /usr/include/ && \\\n  chmod -R a+Xr /usr/include/google && \\\n  rm -rf protoc3.zip protoc3\n\nENV MAGMA_ROOT /magma\nENV PYTHON_BUILD /build/python\nENV PIP_CACHE_HOME ~/.pipcache\n\n# Generate python proto bindings.\nCOPY feg/protos $MAGMA_ROOT/feg/protos\nCOPY lte/gateway/python/defs.mk $MAGMA_ROOT/lte/gateway/python/defs.mk\nCOPY lte/gateway/python/Makefile $MAGMA_ROOT/lte/gateway/python/Makefile\nCOPY lte/protos $MAGMA_ROOT/lte/protos\nCOPY orc8r/gateway/python/python.mk $MAGMA_ROOT/orc8r/gateway/python/python.mk\nCOPY orc8r/protos $MAGMA_ROOT/orc8r/protos\nCOPY protos $MAGMA_ROOT/protos\nRUN make -C $MAGMA_ROOT/lte/gateway/python protos\n\n# -----------------------------------------------------------------------------\n# Production image\n# -----------------------------------------------------------------------------\nFROM ubuntu:xenial AS gateway_python\n\n# Add the magma apt repo\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils software-properties-common apt-transport-https && rm -rf /var/lib/apt/lists/*;\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub && \\\n    apt-add-repository \"deb https://magma.jfrog.io/magma/list/dev/ xenial main\"\n\n# Install the runtime deps from apt.\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n  curl \\\n  libc-ares2 \\\n  libev4 \\\n  libevent-openssl-2.0-5 \\\n  libffi-dev \\\n  libjansson4 \\\n  libjemalloc1 \\\n  libssl-dev \\\n  libsystemd-dev \\\n  magma-nghttpx=1.31.1-1 \\\n  net-tools \\\n  openssl \\\n  pkg-config \\\n  python-cffi \\\n  python3-pip \\\n  redis-server && rm -rf /var/lib/apt/lists/*;\n\n# Install docker.\nRUN curl -f -sSL https://get.docker.com/ > /tmp/get_docker.sh && \\\n    sh /tmp/get_docker.sh && \\\n    rm /tmp/get_docker.sh\n\n# Install python code.\nCOPY orc8r/gateway/python /tmp/orc8r\nRUN pip3 install --no-cache-dir /tmp/orc8r\n\n# Copy the build artifacts.\nCOPY --from=builder /build/python/gen /usr/local/lib/python3.5/dist-packages/\n\n# Copy the configs.\nCOPY feg/gateway/configs /etc/magma\n# Add docker config overrides\nCOPY feg/gateway/docker/configs /etc/magma\n\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\nCOPY orc8r/cloud/docker/proxy/magma_headers.rb /etc/nghttpx/magma_headers.rb\n\nRUN mkdir -p /var/opt/magma/configs\n"
}