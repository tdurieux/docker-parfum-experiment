{
  "startTime": 1674244799442,
  "endTime": 1674244799662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-devel-ubuntu16.04\n\n# Install some basic utilities\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    ca-certificates \\\n    sudo \\\n    git \\\n    bzip2 \\\n    libx11-6 \\\n    cmake \\\n    libboost-all-dev \\\n    libtbb-dev \\\n    libopencv-dev \\\n    && sudo rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nRUN mkdir /rigidity\nWORKDIR /rigidity\n\n# All users can use /home/user as their home directory\nENV HOME=/home/user\nRUN mkdir /home/user\nRUN chmod 777 /home/user\n\nCOPY ./setup /rigidity/setup\n\n# Install Miniconda\n ENV CONDA_AUTO_UPDATE_CONDA=false\n\nRUN curl -f https://repo.anaconda.com/miniconda/Miniconda2-4.5.4-Linux-x86_64.sh -o ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc\n\n\n# Create a Python 2.7 environment with all the required packages\nRUN . /opt/conda/etc/profile.d/conda.sh \\\n    && conda env create -f ./setup/rigidity.yml \\\n    && echo \"conda activate rigidity\" >> ~/.bashrc \\\n    && conda activate rigidity\n\n# COPY External Packages\nCOPY ./external_packages /rigidity/external_packages\n\n# Build GTSAM\nRUN cd /rigidity/external_packages/gtsam \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make install -j8 \\\n    && cd ../..\n\n# Build correlation layer\nRUN . /opt/conda/etc/profile.d/conda.sh \\\n    && conda activate rigidity \\\n    && cd /rigidity/external_packages/correlation-pytorch-master/correlation-pytorch/correlation_package/src \\\n    && nvcc -c -o corr_cuda_kernel.cu.o corr_cuda_kernel.cu -x cu -Xcompiler -fPIC -arch=sm_52 \\\n    && nvcc -c -o corr1d_cuda_kernel.cu.o corr1d_cuda_kernel.cu -x cu -Xcompiler -fPIC -arch=sm_52 \\\n    && cd ../../ \\\n    && python setup.py build install\n\n# compile the refinement module\nRUN cd /rigidity/external_packages/flow2pose \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n         -DPYTHON_INCLUDE_DIR:PATH=/opt/conda/envs/rigidity/include/python2.7 \\\n         -DPYTHON_LIBRARY:PATH=/opt/conda/envs/rigidity/lib/python2.7 \\\n         -DPYTHON_EXECUTABLE:FILEPATH=/opt/conda/envs/rigidity/bin/python \\\n    && make install -j8 \\\n    && cp pyFlow2Pose.so /opt/conda/envs/rigidity/lib/python2.7/site-packages \\\n    && cp libpyboostcv_bridge.so /usr/local/lib\n\nRUN rm -rf /rigidity\n\n# Set the default cmd`\nCMD [\"/bin/bash\"]"
}