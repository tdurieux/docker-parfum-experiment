{
  "startTime": 1674243798162,
  "endTime": 1674243798701,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n#FROM lsiobase/alpine.python:3.7\n\n# Set python to use utf-8 rather than ascii.\nENV PYTHONIOENCODING=\"UTF-8\"\nENV DOCKERIZE_VERSION=v0.6.0\n# set version for s6 overlay\nARG OVERLAY_VERSION=\"v1.21.8.0\"\nARG OVERLAY_ARCH=\"amd64\"\n\n# Add edge/testing repositories.\nRUN printf \"\\\n@edge http://nl.alpinelinux.org/alpine/edge/main\\n\\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n\\\n@community http://nl.alpinelinux.org/alpine/edge/community\\n\\\n\" >> /etc/apk/repositories\n\nRUN \\\n echo \"**** install build packages ****\" \\\n    && apk update \\\n    && apk add --no-cache \\\n#        --virtual=build-dependencies \\\n    \ttar apk-tools bash dumb-init ip6tables ufw@testing openvpn shadow transmission-daemon curl jq ssmtp rsync nano \\\n        py2-pip \\\n&& echo \"Install dockerize $DOCKERIZE_VERSION\" \\\n    && wget -qO- https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz | tar xz -C /usr/bin \\\n&& echo \"**** add s6 overlay ****\" \\\n    && curl -f -o /tmp/s6-overlay.tar.gz -L \\\n\t\t\t\t\t\"https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}.tar.gz\" \\\n    && tar xfz /tmp/s6-overlay.tar.gz -C / && rm /tmp/s6-overlay.tar.gz\n\nRUN pip install --no-cache-dir -U pip \\\n    # Make sure to install setuptools version >=36 to avoid a race condition, see:\n    # https://github.com/pypa/setuptools/issues/951\n    && pip install --no-cache-dir -U setuptools >=36 \\\n    && pip install --no-cache-dir -U urllib3[socks] \\\n    && pip install --no-cache-dir -U subliminal \\\n    && pip install --no-cache-dir -U chardet \\\n    && pip install --no-cache-dir -U irc_bot \\\n    && pip install --no-cache-dir -U rarfile \\\n    && pip install --no-cache-dir -U transmissionrpc \\\n    # Install flexget last (it might force specific versions of other packages).\n    && pip install --no-cache-dir -U flexget\n\nRUN \\\necho \"**** clean up ****\" \\\n    && rm -rf /root/.cache /tmp/*\n\nVOLUME /data\nVOLUME /config\n\nENV PUID=1000\n\nRUN \\\necho \"**** Creating user to run transmission *****\" \\\n    && addgroup -g ${PUID} abc \\\n    && adduser -D -H -s /bin/bash -u ${PUID} -G abc abc \\\n    && passwd -d abc \\\n    && addgroup abc wheel\n\n# Copy local files.\nCOPY ./bashrc /root/.bashrc\nCOPY ./bash_history* /root/.bash_history\nCOPY etc/ /etc\nRUN chmod -v +x /etc/cont-init.d/*\n\n# Expose port and run\n# Web UI and rpc port\nEXPOSE 9091\nCMD [\"dumb-init\", \"/etc/openvpn/start.sh\"]\n"
}