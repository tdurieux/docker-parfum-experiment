{
  "startTime": 1674252945441,
  "endTime": 1674252945787,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM       quay.io/fenicsproject/stable:2017.2.0.r4\nMAINTAINER pf4d <mail@cummings.evan@gmail.com>\nUSER       root\n\n# note that many extra latex options are installed for matplotlib plotting :\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install python-pip \\\n                       python-netcdf4 \\\n                       python-matplotlib \\\n                       git \\\n                       curl \\\n                       wget \\\n                       subversion \\\n                       patch \\\n                       gmsh \\\n                       libxrender1 \\\n                       libgeos-dev \\\n                       libglu1-mesa \\\n                       libsm6 \\\n                       libxcursor1 \\\n                       texlive-base \\\n                       texlive-fonts-recommended \\\n                       texlive-latex-extra \\\n                       texlive-math-extra \\\n                       texlive-fonts-extra \\\n                       texlive-science && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\n# get the latest python packages :\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade ipython \\\n                          colored \\\n                          termcolor \\\n                          shapely \\\n                          pyproj \\\n                          tifffile\n\n# install everything as user 'fenics' and local dir '~/.local/' :\nUSER fenics\n\nCOPY WELCOME         $FENICS_HOME/WELCOME\nENV  CSLVR_VERSION   2017.2.0\nENV  PKG_DIR         $FENICS_HOME/.local\nENV  IPOPT_DIR       $PKG_DIR\nENV  GEOS_DIR        $PKG_DIR\nENV  PYTHONPATH      $FENICS_HOME/cslvr:$PYTHONPATH\nENV  PATH            $PKG_DIR/bin:$PATH\nENV  LD_LIBRARY_PATH $PKG_DIR/lib:$LD_LIBRARY_PATH\n\n# install libadjoint :\nRUN  cd $FENICS_HOME && \\\n     git clone -b libadjoint-2017.2.0 \\\n                  https://bitbucket.org/dolfin-adjoint/libadjoint\nRUN  cd $FENICS_HOME/libadjoint && \\\n     mkdir build; cd build && \\\n     cmake -DCMAKE_INSTALL_PREFIX=$PKG_DIR .. && \\\n     make install && \\\n     cd ../.. && rm -r libadjoint\n\n# install dolfin-adjoint :\nRUN  cd $FENICS_HOME && \\\n     git clone -b dolfin-adjoint-2017.2.0 \\\n                  https://bitbucket.org/dolfin-adjoint/dolfin-adjoint\nRUN  cd $FENICS_HOME/dolfin-adjoint && \\\n     python setup.py install --user && \\\n     cd .. && rm -r dolfin-adjoint\n\n# install ipopt with default packages -- these overlap with those used by\n# fenics, but it works, and is supported by IPOPT crew :\nRUN  cd $FENICS_HOME && \\\n     svn co https://projects.coin-or.org/svn/Ipopt/stable/3.12 ipopt\n#     git clone https://github.com/coin-or/Ipopt\nRUN  cd $FENICS_HOME/ipopt/ThirdParty/Metis && ./get.Metis\nRUN  cd $FENICS_HOME/ipopt/ThirdParty/Lapack && ./get.Lapack\nRUN  cd $FENICS_HOME/ipopt/ThirdParty/Blas && ./get.Blas\nRUN  cd $FENICS_HOME/ipopt/ThirdParty/Mumps && ./get.Mumps\nRUN  cd $FENICS_HOME/ipopt/ThirdParty/ASL && ./get.ASL\nRUN cd $FENICS_HOME/ipopt && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PKG_DIR && \\\n     make -j 4 && \\\n     make install && \\\n     cd .. && rm -r ipopt\n\n# install pyipopt :\nRUN  cd $FENICS_HOME && git clone https://github.com/pf4d/pyipopt.git\nRUN  cd $FENICS_HOME/pyipopt && \\\n     python setup.py install --user && \\\n     cd .. && rm -r pyipopt\n\n# install basemap for matplotlib :\nRUN cd $PKG_DIR && \\\n    git clone https://github.com/matplotlib/basemap.git && \\\n    cd basemap && \\\n    python setup.py install --user && \\\n    cd ..\n\n# install gmsh-dynamic 2.10.1 :\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git\nRUN cd gmsh && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -D ENABLE_WRAP_PYTHON=ON \\\n          -D ENABLE_FLTK=ON \\\n          -D ENABLE_PRIVATE_API=ON \\\n          -D PYTHON_EXECUTABLE:FILEPATH=$(which python) \\\n          -D ENABLE_PETSC=OFF \\\n          -D ENABLE_SLEPC=OFF \\\n          -D ENABLE_PETSC4PY=OFF \\\n          -D ENABLE_MPI=ON \\\n          -D CMAKE_C_COMPILER=mpicc \\\n          -D CMAKE_CXX_COMPILER=mpicxx \\\n          -D CMAKE_Fortran_COMPILER=mpifort \\\n          -D CMAKE_INSTALL_PREFIX=$PKG_DIR .. && \\\n    make && \\\n    make install\n\n# install cslvr :\nRUN  cd $PKG_DIR && \\\n     git clone https://github.com/pf4d/cslvr\n\nUSER root\n\n\n\n"
}