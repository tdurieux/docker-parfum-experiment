{
  "startTime": 1674249287857,
  "endTime": 1674249287975,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\n\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update && apt-get install --no-install-recommends python-dev python3-dev -y && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements/requirements.txt ./\n\nRUN pip install --no-cache-dir -U pip setuptools pip-tools\n\nRUN pip-sync requirements.txt\n\nCOPY . /app\n\n# Get Maxmind GeoIP2 database\nRUN curl -f https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz -o /tmp/geoip.tar.gz\nRUN tar xva -C /app/utils/maxmind --overwrite --strip-components 1 -f /tmp/geoip.tar.gz && rm /tmp/geoip.tar.gz\n\nRUN mkdir -p /logs\n\nRUN groupadd -r django \\\n    && useradd -r -g django django\n\nCOPY docker/app/gunicorn.sh /gunicorn.sh\n\nRUN sed -i 's/\\r//' /gunicorn.sh \\\n    && chmod +x /gunicorn.sh \\\n    && chown django /gunicorn.sh\n\nWORKDIR /app\n\nRUN chown -R django /app\n\nENV POSTGRES_PASSWORD postgres\nENV RQWORKER_NUM 5\nENV DJANGO_SETTINGS_MODULE config.production\nENV REDIS_HOST redis\nENV DATABASE_URL postgres://postgres:$POSTGRES_PASSWORD@db:5432/postgres\nENV DJANGO_SECURE_SSL_REDIRECT True\nENV DJANGO_DEBUG False\nENV DJANGO_ALLOWED_HOSTS the-federation.info,dev.the-federation.info,thefederation.local\nENV DBHOST=db\n\nCMD bash -c \"./utils/wait-for-it/wait-for-it.sh --strict --timeout=10 $DBHOST:5432 && circusd /app/config/circus.ini\"\n"
}