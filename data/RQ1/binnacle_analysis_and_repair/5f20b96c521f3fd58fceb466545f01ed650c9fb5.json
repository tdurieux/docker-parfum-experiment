{
  "startTime": 1674240290558,
  "endTime": 1674240291111,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.19\n\nARG BRANCH_NAME\nARG GIT_COMMIT\nARG AZURE_UPLOAD\nARG AZURE_STORAGE_ACCOUNT\nARG AZURE_STORAGE_ACCESS_KEY\nARG AZURE_STORAGE_CONNECTION_STRING\nARG UPLOAD_PATH\nARG BUILD_VERSION\nARG LIVE_TESTNET\n\nENV LANG=en_US.UTF-8\n\nENV LIVE_TESTNET=${LIVE_TESTNET:-OFF}\n\nRUN \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y \\\n            autoconf \\\n            automake \\\n            autotools-dev \\\n            bsdmainutils \\\n            build-essential \\\n            cmake \\\n            doxygen \\\n            git \\\n            libboost-all-dev \\\n            libicu-dev \\\n            libreadline-dev \\\n            libssl-dev \\\n            libtool \\\n            ncurses-dev \\\n            pbzip2 \\\n            pkg-config \\\n            python3 \\\n            python3-dev \\\n            python3-jinja2 \\\n            python3-pip \\\n            python-pip \\\n            nginx \\\n            fcgiwrap \\\n            s3cmd \\\n            awscli \\\n            jq \\\n            wget \\\n            gdb \\\n        && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n        pip3 install --no-cache-dir gcovr && \\\n        pip install --no-cache-dir azure-cli\n\nADD . /usr/local/src/scorum\n\nRUN \\\n    cd /usr/local/src/scorum && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Debug \\\n        -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} \\\n        -DSCORUM_LOW_MEMORY_NODE=OFF \\\n        -DSCORUM_CLEAR_VOTES=ON \\\n        -DSCORUM_SKIP_BY_TX_ID=ON \\\n        -DENABLE_COVERAGE_TESTING=ON \\\n        .. && \\\n    make -j$(nproc) && \\\n    ./libraries/chainbase/test/chainbase_test && \\\n    ./tests/utests/utests && \\\n    ./tests/chain_tests/chain_tests && \\\n    ./tests/wallet_tests/wallet_tests && \\\n    cd /usr/local/src/scorum && \\\n    doxygen && \\\n    programs/build_helpers/check_reflect.py && \\\n    programs/build_helpers/get_config_check.sh && \\\n    cd /usr/local/src/scorum/build && \\\n    mkdir -p /var/cobertura && \\\n    gcovr --object-directory=\"../\" --root=../ --xml-pretty --gcov-exclude=\".*tests.*\" --gcov-exclude=\".*fc.*\" --gcov-exclude=\".*app*\" --gcov-exclude=\".*net*\" --gcov-exclude=\".*plugins*\" --gcov-exclude=\".*schema*\" --gcov-exclude=\".*time*\" --gcov-exclude=\".*utilities*\" --gcov-exclude=\".*wallet*\" --gcov-exclude=\".*programs*\" --output=\"/var/cobertura/coverage.xml\" && \\\n    cd /usr/local/src/scorum && \\\n    rm -rf /usr/local/src/scorum/build\n\nRUN \\\n    cd /usr/local/src/scorum && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-default \\\n        -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} \\\n        -DSCORUM_LOW_MEMORY_NODE=ON \\\n        -DSCORUM_CLEAR_VOTES=ON \\\n        -DSCORUM_SKIP_BY_TX_ID=ON \\\n        .. && \\\n    make -j$(nproc) && \\\n    ./libraries/chainbase/test/chainbase_test && \\\n    ./tests/utests/utests && \\\n    ./tests/chain_tests/chain_tests && \\\n    ./tests/wallet_tests/wallet_tests && \\\n    ./programs/util/test_fixed_string && \\\n    make install && \\\n    rm -rf /usr/local/src/scorum/build\n\nRUN \\\n    cd /usr/local/src/scorum && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/scorumd-full \\\n        -DSCORUM_LIVE_TESTNET=${LIVE_TESTNET} \\\n        -DSCORUM_LOW_MEMORY_NODE=OFF \\\n        -DSCORUM_CLEAR_VOTES=OFF \\\n        -DSCORUM_SKIP_BY_TX_ID=OFF \\\n        .. && \\\n    make -j$(nproc) && \\\n    ./libraries/chainbase/test/chainbase_test && \\\n    ./tests/utests/utests && \\\n    ./tests/chain_tests/chain_tests && \\\n    ./tests/wallet_tests/wallet_tests && \\\n    ./programs/util/test_fixed_string && \\\n    make install && \\\n    cd / && \\\n    rm -rf /usr/local/src/scorum\n\nRUN \\\n    ( /usr/local/scorumd-default/bin/scorumd --version \\\n      | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*' \\\n      && echo '_' \\\n      && git rev-parse --short HEAD ) \\\n      | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n//g' \\\n      > /etc/scorumdversion && \\\n    cat /etc/scorumdversion\n\nRUN \\\n        apt-get remove -y \\\n            automake \\\n            autotools-dev \\\n            bsdmainutils \\\n            build-essential \\\n            cmake \\\n            doxygen \\\n            dpkg-dev \\\n            git \\\n            libicu-dev \\\n            libboost-all-dev \\\n            libc6-dev \\\n            libexpat1-dev \\\n            libgcc-5-dev \\\n            libhwloc-dev \\\n            libibverbs-dev \\\n            libicu-dev \\\n            libltdl-dev \\\n            libncurses5-dev \\\n            libnuma-dev \\\n            libopenmpi-dev \\\n            libpython-dev \\\n            libpython2.7-dev \\\n            libreadline-dev \\\n            libreadline6-dev \\\n            libssl-dev \\\n            libstdc++-5-dev \\\n            libtinfo-dev \\\n            libtool \\\n            linux-libc-dev \\\n            m4 \\\n            make \\\n            manpages \\\n            manpages-dev \\\n            mpi-default-dev \\\n            python-dev \\\n            python2.7-dev \\\n            python3-dev \\\n        && \\\n        apt-get autoremove -y && \\\n        rm -rf \\\n            /var/lib/apt/lists/* \\\n            /tmp/* \\\n            /var/tmp/* \\\n            /var/cache/* \\\n            /usr/include \\\n            /usr/local/include\n\nRUN useradd -s /bin/bash -m -d /var/lib/scorumd scorumd\n\nRUN mkdir /var/cache/scorumd && \\\n          chown scorumd:scorumd -R /var/cache/scorumd\n\nENV HOME /var/lib/scorumd\nRUN chown scorumd:scorumd -R /var/lib/scorumd\n\nVOLUME [\"/var/lib/scorumd\"]\n\n# rpc service:\nEXPOSE 8001\n# p2p service:\nEXPOSE 2001\n\n# the following adds lots of logging info to stdout\nADD contrib/config.ini.witness /etc/scorumd/config.ini.witness\nADD contrib/config.ini.rpc /etc/scorumd/config.ini.rpc\nADD contrib/seeds.ini.mainnet /etc/scorumd/seeds.ini.mainnet\nADD contrib/seeds.ini.testnet /etc/scorumd/seeds.ini.testnet\n\n# upload archive to azure\nADD contrib/azure_upload.sh /usr/local/bin/azure_upload.sh\nRUN chmod +x /usr/local/bin/azure_upload.sh\nRUN /usr/local/bin/azure_upload.sh\n\n# new entrypoint for all instances\n# this enables exitting of the container when the writer node dies\n# for PaaS mode (elasticbeanstalk, etc)\n# AWS EB Docker requires a non-daemonized entrypoint\nADD contrib/scorumdentrypoint.sh /usr/local/bin/scorumdentrypoint.sh\nRUN chmod +x /usr/local/bin/scorumdentrypoint.sh\nCMD [\"/bin/bash\", \"/usr/local/bin/scorumdentrypoint.sh\"]\n"
}