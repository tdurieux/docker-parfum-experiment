{
  "startTime": 1674251348686,
  "endTime": 1674251348927,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 17,
        "columnEnd": 22
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.6\n\nRUN apt-get update && apt-get install -qq -y inotify-tools curl libnotify-bin --fix-missing --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_9.x | bash -\nRUN apt-get update && apt-get install -qq -y nodejs  tar --fix-missing --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=1.33.0\nRUN set -eux; \\\n\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='c9837990bce0faab4f6f52604311a19bb8d2cde989bea6a7b605c8e526db6f02' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='297661e121048db3906f8c964999f765b4f6848632c0c2cfb6a1e93d99440732' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='a68ac2d400409f485cb22756f0b3217b95449884e1ea6fd9b70522b3c0a929b2' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='27e6109c7b537b92a6c2d45ac941d959606ca26ec501d86085d651892a55d849' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n\n    url=\"https://static.rust-lang.org/rustup/archive/1.11.0/${rustArch}/rustup-init\"; \\\n    wget \"$url\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain $RUST_VERSION; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\nWORKDIR /app\nCOPY ./mix* ./\nRUN mix local.hex --force\nRUN mix local.rebar --force\nRUN export MIX_ENV=prod && mix deps.get --force\nRUN cd deps/html5ever/native/html5ever_nif && cargo update\nRUN export MIX_ENV=prod && mix deps.compile\n\nCOPY ./assets/package* ./assets/\nRUN cd assets && npm i && npm cache clean --force;\nCOPY ./assets ./assets/\nRUN cd assets && npm run build\nRUN mkdir -p /app/priv/static/js\nRUN cp /app/assets/node_modules/openpgp/dist/openpgp.worker.min.js /app/priv/static/js\nRUN cp /app/assets/node_modules/openpgp/dist/openpgp.min.js /app/priv/static/js\n\n\nCOPY ./manifest.json ./priv/static/\nCOPY ./react-logo.png ./priv/static/images/\nCOPY ./ ./\nRUN export MIX_ENV=prod && mix compile --force\nRUN export MIX_ENV=prod && mix phx.digest\nRUN rm -rf deps/*/.fetch\n\nEXPOSE 4000\nENTRYPOINT [ \"./docker-entrypoint.sh\" ]\n"
}