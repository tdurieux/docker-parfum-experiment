{
  "startTime": 1674250474747,
  "endTime": 1674250475403,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 38,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 26,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 26,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 26,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 26,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 26,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as base\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install curl cmake file git build-essential xz-utils software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL --retry 10 --retry-delay 60 https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install clang-6.0 && ln -s /usr/bin/clang-6.0 /usr/bin/clang && ln -s /usr/bin/clang++-6.0 /usr/bin/clang++ && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -q --depth 1 https://github.com/tpoechtrager/osxcross.git\n#RUN sed -i -e 's,/usr/include/c++/v1,/usr/include/c++,g' /osxcross/wrapper/target.cpp\n#RUN sed -i -e 's,test_compiler o,#test_compiler o,g' -e 's,-f \"have,true || -f \"have,g' /osxcross/build.sh\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install automake libxml2-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n#RUN git clone -q --depth 1 https://github.com/mackyle/xar.git && cd /xar/xar && ./autogen.sh --prefix=/osxcross/target && make -j $(grep -c ^processor /proc/cpuinfo) && make install -j $(grep -c ^processor /proc/cpuinfo) && ./autogen.sh --prefix=/usr && make -j $(grep -c ^processor /proc/cpuinfo) && make install -j $(grep -c ^processor /proc/cpuinfo)\n\n#ENV LD_LIBRARY_PATH=/osxcross/target/lib\n#RUN git clone -q --depth 1 -b 1000.10.8 https://github.com/tpoechtrager/apple-libtapi.git && cd /apple-libtapi && INSTALLPREFIX=/osxcross/target ./build.sh && ./install.sh\n#RUN git clone -q --depth 1 https://github.com/tpoechtrager/cctools-port.git && cd /cctools-port/cctools && ./configure --prefix=/osxcross/target --target=x86_64-apple-darwin18 --with-libtapi=/osxcross/target && make -j $(grep -c ^processor /proc/cpuinfo) && make install -j $(grep -c ^processor /proc/cpuinfo)\n\n\n#RUN curl -sL --retry 10 --retry-delay 60 -o /osxcross/tarballs/MacOSX10.14.sdk.tar.xz https://.../MacOSX10.14.sdk.tar.xz\nCOPY MacOSX10.14.sdk.tar.xz /osxcross/tarballs/MacOSX10.14.sdk.tar.xz\n\n\nRUN cd /osxcross && OSX_VERSION_MIN=10.12 UNATTENDED=1 ./build.sh\n#RUN find /osxcross/target/ -name '*.tbd' -exec sed -i'' s/zippered/macosx/ {} \\;\nRUN cd /osxcross && ./target/bin/o64-clang++-libc++ -o osxcross ./oclang/test_libcxx.cpp\n\n\nFROM ubuntu:16.04\nLABEL maintainer therecipe\n\nENV USER user\nENV HOME /home/$USER\nENV GOPATH $HOME/work\nENV PATH /usr/local/go/bin:$PATH\nENV QT_API 5.12.0\nENV QT_DOCKER true\nENV QT_QMAKE_DIR $GOPATH/src/github.com/therecipe/env_darwin_amd64_512/5.12.0/clang_64/bin\n\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install curl git build-essential libglib2.0-dev software-properties-common && apt-get -qq clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=base /osxcross/target /osxcross/target\nRUN ln -s /osxcross/target/bin/xcrun /usr/bin/xcrun\nRUN rm /usr/bin/strip && ln -s /osxcross/target/bin/x86_64-apple-darwin18-strip /usr/bin/strip\nRUN ln -s /osxcross/target/bin/x86_64-apple-darwin18-otool /usr/bin/otool\nRUN ln -s /osxcross/target/bin/x86_64-apple-darwin18-install_name_tool /usr/bin/install_name_tool\n\nRUN GO=go1.12.4.linux-amd64.tar.gz && curl -f -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/$GO && tar -xzf $GO -C /usr/local\nRUN go get github.com/therecipe/qt/cmd/...\nRUN GOOS=darwin go get github.com/therecipe/qt/cmd/... && DST=$GOPATH/src/github.com/therecipe/env_darwin_amd64_512/5.12.0/clang_64/bin && rm -r $DST && cp -r $GOPATH/src/github.com/therecipe/env_linux_amd64_512/5.12.0/gcc_64/bin $DST\n\nRUN sed -i -e 's/isEmpty(QMAKE_XCODEBUILD_PATH)/if(false)/g' -e 's/!if/if/g' -e 's/!if/if/g' -e 's/isEmpty(QMAKE/if(false){#/g' $GOPATH/src/github.com/therecipe/env_darwin_amd64_512/5.12.0/clang_64/mkspecs/features/mac/default_pre.prf\nRUN sed -i -e 's/$$QMAKE_MAC_SDK_PATH/$$(QMAKE_MAC_SDK_PATH)/g' $GOPATH/src/github.com/therecipe/env_darwin_amd64_512/5.12.0/clang_64/mkspecs/features/mac/default_post.prf\nENV QMAKE_MAC_SDK_PATH /osxcross/target/SDK/MacOSX10.14.sdk\n\nRUN curl -f -sL --retry 10 --retry-delay 60 https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install clang-6.0 && apt-get -qq clean && ln -s /usr/bin/clang-6.0 /usr/bin/clang && ln -s /usr/bin/clang++-6.0 /usr/bin/clang++ && rm -rf /var/lib/apt/lists/*;\n\nENV LD_LIBRARY_PATH=$GOPATH/src/github.com/therecipe/env_linux_amd64_512/5.12.0/gcc_64/lib\nENV QT_PLUGIN_PATH=$GOPATH/src/github.com/therecipe/env_linux_amd64_512/5.12.0/gcc_64/plugins\nRUN git clone -q --depth 1 -b 5.13 https://github.com/qt/qttools.git && \\\ncd /qttools/src/macdeployqt/macdeployqt && \\ \nsed -i -e 's/LIBS/#LIBS/g' macdeployqt.pro && \\\nsed -i -e 's,QString binaryPath;,QString binaryPath = QString(appBundlePath); binaryPath.chop(4); auto bS = binaryPath.split(\"/\"); binaryPath.append(\".app/Contents/MacOS/\").append(bS.at(bS.size()-1)); return binaryPath;,g' ../shared/shared.cpp && \\\n$GOPATH/src/github.com/therecipe/env_linux_amd64_512/5.12.0/gcc_64/bin/qmake macdeployqt.pro && make -j $(grep -c ^processor /proc/cpuinfo) && \\\nmv /qttools/bin/macdeployqt $GOPATH/src/github.com/therecipe/env_darwin_amd64_512/5.12.0/clang_64/bin/macdeployqt && rm -rf /qttools\n\nENV CC /osxcross/target/bin/x86_64-apple-darwin18-clang\nENV CXX /osxcross/target/bin/x86_64-apple-darwin18-clang++\n\nRUN $GOPATH/bin/qtsetup prep darwin\nRUN $GOPATH/bin/qtsetup check darwin\nRUN $GOPATH/bin/qtsetup generate darwin\nRUN cd $GOPATH/src/github.com/therecipe/qt/internal/examples/widgets/line_edits && $GOPATH/bin/qtdeploy build darwin && rm -rf ./deploy\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates git pkg-config && rm -rf /var/lib/apt/lists/*;"
}