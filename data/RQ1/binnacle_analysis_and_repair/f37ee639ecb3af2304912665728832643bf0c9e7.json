{
  "startTime": 1674246146479,
  "endTime": 1674246146627,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM smizy/scikit-learn:0.18-alpine\n\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nARG EXTRA_BAZEL_ARGS\n\nLABEL \\\n    org.label-schema.build-date=$BUILD_DATE \\\n    org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n    org.label-schema.license=\"Apache License 2.0\" \\\n    org.label-schema.name=\"smizy/keras\" \\\n    org.label-schema.url=\"https://gitlab.com/smizy\" \\\n    org.label-schema.vcs-ref=$VCS_REF \\\n    org.label-schema.vcs-type=\"Git\" \\\n    org.label-schema.version=$VERSION \\\n    org.label-schema.vcs-url=\"https://gitlab.com/smizy/docker-keras-tensorflow\"\n\nENV KERAS_VERSION  $VERSION\nENV KERAS_BACKEND  tensorflow\n\nENV BAZEL_VERSION       0.4.5\nENV TENSORFLOW_VERSION  1.2.1\n\nENV JAVA_HOME  /usr/lib/jvm/default-jvm\n\nENV EXTRA_BAZEL_ARGS  $EXTRA_BAZEL_ARGS\n\nRUN set -x \\\n    && apk update \\\n    ## bazel\n    && apk --no-cache add --virtual .builddeps \\\n        bash \\\n        build-base \\\n        linux-headers \\\n        openjdk8 \\\n        python3-dev \\\n        wget \\\n        zip \\\n    && mkdir /tmp/bazel \\\n    && wget -q -O /tmp/bazel-dist.zip https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n    && unzip -q -d /tmp/bazel /tmp/bazel-dist.zip \\\n    && cd /tmp/bazel \\\n    # add -fpermissive compiler option to avoid compilation failure \n    && sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n    # add '#include <sys/stat.h>' to avoid mode_t type error \n    && sed -i -e '/#endif  \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n    # # add jvm opts for circleci\n    # && sed -i -E 's/(jvm_opts.*\\[)/\\1 \"-Xmx1024m\",/g' src/java_tools/buildjar/BUILD \\\n    && bash compile.sh \\\n    && cp output/bazel /usr/local/bin/ \\\n    ## tensorflow\n    && apk --no-cache add \\\n        jemalloc \\\n        libc6-compat \\\n    && apk --no-cache add --virtual .builddeps.1 \\\n        patch \\\n        perl \\\n        sed \\\n    && pip3 install --no-cache-dir wheel \\\n    && wget -q -O - https://github.com/tensorflow/tensorflow/archive/v${TENSORFLOW_VERSION}.tar.gz \\\n        | tar -xzf - -C /tmp \\\n    && cd /tmp/tensorflow-* \\\n    ## - use alpine-patched protobuf (Undef major/minor if they are defined as macro. #2775)\n    && sed -ri 's/2b7430d96aeff2bb624c8d52182ff5e4b9f7f18a/af2d5f5ad3808b38ea58c9880be1b81fd2a89278/g' tensorflow/workspace.bzl \\\n    && sed -ri 's/e5d3d4e227a0f7afb8745df049bbd4d55474b158ca5aaa2a0e31099af24be1d0/89fb700e6348a07829fac5f10133e44de80f491d1f23bcc65cba072c3b374525/g' tensorflow/workspace.bzl \\\n    && echo | \\\n        CC_OPT_FLAGS=-march=native \\\n        PYTHON_BIN_PATH=/usr/bin/python \\\n        TF_NEED_MKL=0 \\\n        TF_NEED_VERBS=0 \\\n        TF_NEED_CUDA=0 \\\n        TF_NEED_GCP=0 \\\n        TF_NEED_JEMALLOC=0 \\\n        TF_NEED_HDFS=0 \\\n        TF_NEED_OPENCL=0 \\\n        TF_ENABLE_XLA=0 \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n\n\n\n\n\n\n    # build (option: --local_resources 3072,1.0,1.0)\n    && bazel build -c opt ${EXTRA_BAZEL_ARGS} //tensorflow/tools/pip_package:build_pip_package \\\n    && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n    # install\n    && pip3 install --no-cache-dir /tmp/tensorflow_pkg/tensorflow-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl \\\n    && pip3 install --no-cache-dir keras==${KERAS_VERSION} \\\n    # - hdf5\n    && apk --no-cache add \\\n        --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \\\n        hdf5 \\\n    && apk --no-cache add --virtual .builddeps.edge \\\n        --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ \\\n        hdf5-dev \\\n    && pip3 install --no-cache-dir h5py \\\n    ## clean\n    && apk del \\\n        .builddeps \\\n        .builddeps.1 \\\n        .builddeps.edge \\\n    && find /usr/lib/python3.5 -name __pycache__ | xargs rm -r \\\n    && rm -rf \\\n        /root/.[acpw]* \\\n        /tmp/bazel* \\\n        /tmp/tensorflow* \\\n        /usr/local/bin/bazel"
}