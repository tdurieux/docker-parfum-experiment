{
  "startTime": 1674235658607,
  "endTime": 1674235658867,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Dockerfile for the Aftok environment\nFROM       phusion/baseimage:0.9.19\nMAINTAINER Kris Nuttycombe <kris@aftok.com>\n\n## ensure locale is set during build\nENV LANG            C.UTF-8\n\n# Base GHC/cabal install\nRUN echo 'deb http://download.fpcomplete.com/ubuntu xenial main' > /etc/apt/sources.list.d/fpco.list && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 575159689BEFB442\n\n# Install libpq-dev to enable postgresql-simple build\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential autotools-dev autoconf dh-autoreconf \\\n    libpq-dev libsqlite3-dev \\\n    git stack && rm -rf /var/lib/apt/lists/*;\n#    apt-get install -y --no-install-recommends wget && \\\n#    echo 'deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' > /etc/apt/sources.list.d/pgdg.list && \\\n#    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n\n# Install npm, then use it to get purescript, pulp and bower\n# RUN apt-get install -y --no-install-recommends nodejs\n# RUN apt-get install -y --no-install-recommends npm\n# RUN npm install -g npm bower pulp\n\n# Fix executable name used by the purescript npm installer\n# RUN ln -s /usr/bin/nodejs /usr/local/bin/node\n\n# Install ghc globally so that we don't have to reinstall it\n# whenever we change stack.yaml or aftok.cabal\nADD ./docker/global-stack.yaml /root/.stack/global-project/stack.yaml\nRUN stack --resolver lts-7.16 setup\n\n# Globally install database migrations tool\nRUN stack install dbmigrations\nRUN stack install dbmigrations-postgresql\n\n# Set up /etc/aftok volume for mounting configuration from the host system\nRUN mkdir /etc/aftok\nVOLUME [\"/etc/aftok\"]\nENV AFTOK_CFG /etc/aftok/aftok.cfg\n\n# Install and build aftok-server dependencies\nRUN mkdir -p /opt/aftok\nWORKDIR /opt/aftok\n\nADD ./aftok.cabal /opt/aftok/aftok.cabal\nADD ./stack.yaml  /opt/aftok/stack.yaml\n\n# Build dependencies\nRUN stack setup\nRUN stack install cpphs\nRUN stack build --only-dependencies\n\nADD ./lib         /opt/aftok/lib\nADD ./daemon      /opt/aftok/daemon\nADD ./server      /opt/aftok/server\nADD ./test        /opt/aftok/test\nADD ./migrations  /opt/aftok/migrations\n\n# build and install and aftok-server sources\nRUN stack install\n\n# Build the client application and install it where snap can serve it\n#ADD ./client /opt/aftok/client\n#WORKDIR /opt/aftok/client\n#RUN npm install\n#ENV PATH=./node_modules/.bin:${PATH}\n#\n#RUN bower --allow-root install\n#RUN pulp build\n#RUN pulp browserify --optimise --to dist/aftok.js\n#ADD ./dist /opt/aftok/server/static\n\n# Add the main shell script that starts the aftok server\nRUN mkdir /etc/service/aftok\nADD ./docker/aftok-server.sh /etc/service/aftok/run\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n"
}