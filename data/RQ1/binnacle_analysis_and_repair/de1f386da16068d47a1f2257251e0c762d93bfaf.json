{
  "startTime": 1674252558231,
  "endTime": 1674252558251,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image for building our IdP server (not run in kubernetes--see\n# Dockerfile.idp for that)\n#\n# Building in alpine instead of ubuntu (or whatever other distro the host\n# machine is running) allows us to link the SAML IdP with the musl libc\n# implementaion instead of glibc.  This allows us to compile the IdP server\n# into a completely static binary even though it calls the libc function\n# getaddrinfo() (via Go's \"net\" library).\n#\n# Also note: this is a separate Dockerfile from the one used to create the\n# image (Dockerfile.idp) because we need to mount ../vendor into the container\n# as part of the build process, and there's no way to mount an external\n# directory into a docker container as part of 'docker build'\nFROM golang:1.10.2-alpine AS build\nLABEL maintainer=\"msteffen@pachyderm.io\"\n\n# Add libc so we can build with it (saml-idp uses getaddrinfo)\nRUN apk update\nRUN apk add --no-cache git gcc libc-dev\n\n# Add saml-idp source to container\nRUN mkdir -p /go/src/saml-idp\nADD ./*.go /go/src/saml-idp\n\n# Build saml-id (quote -ldflags arguments)\nCMD go install -ldflags \"-linkmode external -extldflags -static\" -a saml-idp \\\n  && chmod 755 /go/bin/saml-idp \\\n  && cp /go/bin/saml-idp /out\n"
}