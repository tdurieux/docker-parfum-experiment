{
  "startTime": 1674249730819,
  "endTime": 1674249731124,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 441
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# HHVM\n# @version 3.3.1\n# @author Lorenzo Fontana <fontanalorenzo@me.com>\nFROM centos:centos6\n\nMAINTAINER Lorenzo Fontana, fontanalorenzo@me.com\n\n# Prerequisites\nRUN yum install -y install tar wget telnet git svn cpp make autoconf automake libtool patch memcached gcc-c++ cmake wget boost-devel mysql-devel pcre-devel gd-devel libxml2-devel expat-devel libicu-devel bzip2-devel oniguruma-devel openldap-devel readline-devel libc-client-devel libcap-devel binutils-devel pam-devel elfutils-libelf-devel ImageMagick-devel libxslt-devel libevent-devel libcurl-devel libmcrypt-devel tbb-devel libdwarf-devel && rm -rf /var/cache/yum\n\n# Get HHVM\nRUN wget -nv -O - https://github.com/facebook/hhvm/archive/HHVM-3.3.1.tar.gz | tar zx\n\nWORKDIR HHVM-3.3.1\n\nRUN export CMAKE_PREFIX_PATH=`pwd`/..\n\nWORKDIR /\n\n# CMAKE\nRUN wget -nv -O - https://www.cmake.org/files/v2.8/cmake-2.8.12.tar.gz | tar zx\nWORKDIR cmake-2.8.12\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN echo \"-ltinfo\" >> Source/CMakeFiles/cmake.dir/link.txt\nRUN make -j\nRUN make install\nRUN export PATH=/usr/local/cmake/bin:$PATH\n\nWORKDIR /\n\n# Boost\nRUN wget -nv -O - https://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz/download -O | tar zx\nWORKDIR boost_1_55_0\nRUN ./bootstrap.sh --prefix=$CMAKE_PREFIX_PATH --libdir=$CMAKE_PREFIX_PATH/lib\nRUN ./b2 --layout=system install\nRUN export Boost_LIBRARYDIR=$CMAKE_PREFIX_PATH/include/boost/\n\n# Glog\nWORKDIR /\nRUN wget -nv -O - wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz | tar zx\nRUN svn checkout http://google-glog.googlecode.com/svn/trunk/ google-glog\nWORKDIR google-glog\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$CMAKE_PREFIX_PATH\nRUN make -j\nRUN make install\n\n# libmemcached\nWORKDIR /\nRUN wget -nv -O - https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz | tar zx\nWORKDIR libmemcached-1.0.18\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$CMAKE_PREFIX_PATH\nRUN make -j\nRUN make install\n\n# jemalloc\nWORKDIR /\nRUN wget -nv -O - https://www.canonware.com/download/jemalloc/jemalloc-3.5.1.tar.bz2 | tar zx\nWORKDIR jemalloc-3.5.1\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$CMAKE_PREFIX_PATH\nRUN make -j\nRUN make install\n\n# HHVM\nWORKDIR HHVM-3.3.1\nRUN git submodule update --init --recursive\nRUN cmake .\nRUN make\nWORKDIR /\n"
}