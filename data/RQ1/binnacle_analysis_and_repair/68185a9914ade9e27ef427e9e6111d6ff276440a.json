{
  "startTime": 1674242943459,
  "endTime": 1674242943541,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This Dockerfile builds a recent curl with HTTP/2 client support, using\n# a recent nghttp2 build.\n#\n# See the Makefile for how to tag it. If Docker and that image is found, the\n# Go tests use this curl binary for integration tests.\n#\n\nFROM alpine:edge\n\nRUN apk add --no-cache \\\n\tca-certificates \\\n\tnghttp2 \\\n\topenssl\n\nENV CURL_VERSION 7.60.0\n\nRUN set -x \\\n    && apk add --no-cache --virtual .build-deps \\\n\t\tg++ \\\n\t\tmake \\\n\t\tnghttp2-dev \\\n\t\topenssl-dev \\\n\t\tperl \\\n\t&& wget https://curl.haxx.se/download/curl-$CURL_VERSION.tar.bz2 \\\n    && tar xjvf curl-$CURL_VERSION.tar.bz2 \\\n    && rm curl-$CURL_VERSION.tar.bz2 \\\n    && ( cd curl-$CURL_VERSION \\\n     && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --with-nghttp2=/usr \\\n         --with-ssl \\\n         --enable-ipv6 \\\n         --enable-unix-sockets \\\n         --without-libidn \\\n         --disable-static \\\n         --disable-ldap \\\n         --with-pic \\\n     && make \\\n     && make install) \\\n\n    && rm -r curl-$CURL_VERSION \\\n    && rm -r /usr/share/man \\\n    && apk del .build-deps\n\nENTRYPOINT [\"/usr/local/bin/curl\"]\nCMD [\"-h\"]\n"
}