{
  "startTime": 1674245790634,
  "endTime": 1674245790860,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER Tomaz Zaman <tomaz@codeable.io>\n\n# Set up some useful environment variables\nENV DEBIAN_FRONTEND noninteractive\n\nENV WP_ROOT /var/www/wordpress\nENV WP_VERSION 4.7.5\nENV WP_SHA1 fbe0ee1d9010265be200fe50b86f341587187302\nENV WP_DOWNLOAD_URL https://wordpress.org/wordpress-$WP_VERSION.tar.gz\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    locales \\\n    runit \\\n    syslog-ng \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n    && locale-gen en_US.UTF-8\n\nRUN echo \"deb http://nginx.org/packages/debian/ jessie nginx\" > \\\n      /etc/apt/sources.list.d/nginx.list \\\n    && echo \"deb https://packages.sury.org/php/ jessie main\" > \\\n      /etc/apt/sources.list.d/php.list \\\n    && curl -f -vs https://nginx.org/keys/nginx_signing.key | apt-key add - \\\n    && curl -f -o /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    nginx imagemagick \\\n    php7.1-fpm php7.1-mysqli php7.1-curl php7.1-gd php7.1-geoip php7.1-xml php7.1-xmlrpc \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Temporary, until Docker's built-in init becomes more wide-spread\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/bin/dumb-init\nRUN chmod +x /usr/bin/dumb-init\n\n# Since we want to be able to update WordPress seamlessly, we need to\n# declare a volume that is mounted in place of the default wp-content, so\n# we can swap WP versions and re-use the same wp-content\nVOLUME /var/www/wordpress/wp-content\nWORKDIR /var/www/wordpress/wp-content\n\n# For convenience, set www-data to UID and GID 1000\nRUN groupmod -g 1000 www-data && usermod -u 1000 www-data\n\n# Download and extract WordPress into /var/www/wordpress\nRUN curl -f -o wordpress.tar.gz -SL $WP_DOWNLOAD_URL \\\n    && echo \"$WP_SHA1 *wordpress.tar.gz\" | sha1sum -c - \\\n    && tar -xzf wordpress.tar.gz -C $(dirname $WP_ROOT) \\\n    && rm wordpress.tar.gz\n\n# Create an empty directory in which we can mount secrets\nVOLUME /etc/secrets\n\n# Copy our custom wp-config.php over. This is arguably the most important\n# part/trick, that makes WordPress container-friendly. Instead of hard-coding\n# configuraion, we just loop through all environment variables and define\n# them for use inside WordPress/PHP\nCOPY wp-config.php $WP_ROOT\nRUN chown -R www-data:www-data $WP_ROOT \\\n    && chmod 640 $WP_ROOT/wp-config.php\n\nCOPY rootfs /\n\n# We only expose port 80, but not 443. In a proper \"containerized\" manner\n# HTTPS should be handled by a separate Nginx container/reverse proxy\nEXPOSE 80\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n\nCMD [\"runsvdir\", \"-P\", \"/etc/service\"]\n"
}