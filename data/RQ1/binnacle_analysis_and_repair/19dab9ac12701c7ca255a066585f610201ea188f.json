{
  "startTime": 1674246356188,
  "endTime": 1674246356362,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 36,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 45,
        "columnStart": 36,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 36,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 45,
        "columnStart": 36,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 70,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "###########\n## Usage ##\n###########\n\n# sp-society-camera-model-identification should be in the $CODE directory.\n\n# alias andres=\"docker run --runtime=nvidia --init -it --rm \\\n#               --ipc=host \\\n#               -v $CODE:/code -v $DATA:/data \\\n#               -w=/code/sp-society-camera-model-identification \\\n#               mwksmith/cam:andres\"\n\n# When you get into the container enter \"sa\" to activate the conda environment,\n# then create sym links to your data folders according to the globals set in train.py,\n# then run train.py.\n\n# Direct questions here: https://www.kaggle.com/c/sp-society-camera-model-identification/discussion/48293#274879\n\n# Mini-tutorial on docker run options: https://github.com/MattKleinsmith/dockerfiles/tree/master/fastai#explanation\n\n###########\n\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\n# To allow unicode characters in the terminal\nENV LANG C.UTF-8\n\n###########\n## Tools ##\n###########\n\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y \\\n    wget \\\n    vim \\\n    git \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n##############\n## Anaconda ##\n##############\n\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y \\\n    libglib2.0-0 \\\n    libsm6 \\\n    libxext6 \\\n    libxrender1 && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh -O ~/anaconda.sh && \\\n    /bin/bash ~/anaconda.sh -b -p /opt/conda && \\\n    rm ~/anaconda.sh\n\nENV PATH /opt/conda/bin:$PATH\n\n################\n## Tensorflow ##\n################\n\n# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN conda create -n tf python=3.5 anaconda\n\nRUN /bin/bash -c \"\\\n    source activate tf && \\\n    pip install --ignore-installed --upgrade \\\n        https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl\"\n\n###########\n## Keras ##\n###########\n\nRUN /bin/bash -c \"source activate tf && \\\n    pip install \\\n        keras\"\n\n#########################\n## Andres dependencies ##\n#########################\n\nRUN /bin/bash -c \"source activate tf && \\\n    pip install \\\n        numpngw \\\n        tqdm \\\n        jpeg4py \\\n        opencv-python \\\n        conditional\"\n\nRUN apt-get install --no-install-recommends -y libturbojpeg && rm -rf /var/lib/apt/lists/*;\n\n# Add sym links to:\n#   train\n#   test\n#   models\n\n###########\n## Other ##\n###########\n\n# TODO: MKL\n\nRUN echo \"export CUDA_DEVICE_ORDER=PCI_BUS_ID\" >> ~/.bashrc\n\nRUN echo \"alias sa=\\\"source activate tf\\\"\" >> ~/.bashrc\n\nCMD bash\n"
}