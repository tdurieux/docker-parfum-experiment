{
  "startTime": 1674236067437,
  "endTime": 1674236067526,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 40,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-alpine\n\nRUN apk add --no-cache \\\n      curl \\\n      gnupg \\\n      nodejs \\\n      sed \\\n      unzip\n\nENV SONARQUBE_SCANNER_VERSION \"3.3.0.1492\"\n\nRUN curl -f -sSO https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONARQUBE_SCANNER_VERSION-linux.zip \\\n && curl -f -sSO https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONARQUBE_SCANNER_VERSION-linux.zip.asc \\\n && gpg --batch --recv-keys CFCA4A29D26468DE && gpg --batch --verify sonar-scanner-cli-$SONARQUBE_SCANNER_VERSION-linux.zip.asc \\\n && unzip sonar-scanner-cli-$SONARQUBE_SCANNER_VERSION-linux.zip \\\n && rm sonar-scanner-cli-$SONARQUBE_SCANNER_VERSION-linux.zip* \\\n && mv sonar-scanner-$SONARQUBE_SCANNER_VERSION-linux sonar-scanner \\\n && sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' /sonar-scanner/bin/sonar-scanner\n\nENV PATH \"/sonar-scanner/bin:$PATH\"\n\n# SonarQube Scanner sometimes relies on matching absolute paths in coverage reports,\n# so we create common paths we've used in projects, but just default to /usr/src/app.\nRUN mkdir -p /app /src\nWORKDIR /usr/src/app\n\nENTRYPOINT [\"sonar-scanner\"]\n"
}