{
  "startTime": 1674246492067,
  "endTime": 1674246492151,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:dubnium-alpine AS base\n# Create a user\nRUN adduser -S appuser\nWORKDIR /app\nCOPY scripts ./scripts\nEXPOSE 3000\nCOPY package.json .\n\n#\n# ---- Dependencies ----\nFROM base AS dependencies\nRUN npm set progress=false && npm config set depth 0\nRUN npm install --production && npm cache clean --force;\nRUN cp -R node_modules prod_node_modules\nRUN npm install && npm cache clean --force;\n\n#\n# ---- Test ----\n# run linters, setup and tests\nFROM dependencies AS test\nCOPY . .\nRUN npm run lint && npm run build && npm run test-unit\n\n#\n# ---- Release ----\nFROM base AS release\n# Tell docker that all commands in this step should run as the appuser user\nUSER appuser\nCOPY --from=dependencies /app/prod_node_modules ./node_modules\nCOPY --from=test /app/dist ./dist\nENTRYPOINT [ \"sh\", \"./scripts/start-service.sh\" ]\n\n#\n# ---- Integration Test ----\n# run integration tests\nFROM dependencies AS integration\nARG integration_server_url=localhost:3000\nENV integration_server_url=${integration_server_url}\nCOPY . .\nCOPY --from=dependencies /app/prod_node_modules ./node_modules\nRUN chown -R appuser /app\n# Tell docker that all commands in this step should run as the appuser user\nUSER appuser\nENTRYPOINT [ \"sh\", \"./scripts/run-integration.sh\" ]"
}