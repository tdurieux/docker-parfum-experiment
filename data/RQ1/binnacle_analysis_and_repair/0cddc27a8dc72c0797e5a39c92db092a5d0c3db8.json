{
  "startTime": 1674240394457,
  "endTime": 1674240394724,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 23,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 23,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 23,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 23,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 23,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 23,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# GEO optimized pyspark container\n# This environment was build for a workshop demonstration on PyData Berlin 2016\n\nFROM jupyter/pyspark-notebook\n\nUSER root\n\n# Here are some informations how-to change the 'conda' environment\n# https://hub.docker.com/r/pdonorio/py3dataconda/~/dockerfile\n\n# Force bash always\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Setup python 2.7 as default environment\nENV CONDA_ENV_PATH /opt/conda/envs/python2\nENV CONDA_DEFAULT_ENV python2\nENV CONDA_DIR /opt/conda\nENV CONDA_ACTIVATE \"source $CONDA_ENV_PATH/bin/activate python2\"\nENV PATH $CONDA_ENV_PATH/bin:$PATH\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    git-core \\\n    build-essential \\\n    cpio \\\n    python-pip \\\n    libpython-dev \\\n    libgeos-dev \\\n    libproj-dev \\\n    libgdal-dev \\\n    libspatialite-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install bats for automated testing\nRUN git clone https://github.com/sstephenson/bats.git && \\\n    cd bats && ./install.sh /usr/local && \\\n    cd .. && rm -rf  ./bats\n\n# Install / upgrade python libs\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir overpy --upgrade\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir retrying --upgrade\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir geopandas --upgrade\n\n# Geovislization libraries\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir folium --upgrade\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir branca --upgrade\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir vincent --upgrade\n\n# Install conda packages\nRUN conda install libgfortran -y\nRUN conda install fiona -y\nRUN conda install gdal -y\n\n# Get custom GEO libs\nRUN curl -f -k -o /usr/local/lib/spatial-spark_2.10-1.1.1-beta-SNAPSHOT.jar \\\n      https://dl.dropboxusercontent.com/u/96303065/spark-workshop/spatial-spark_2.10-1.1.1-beta-SNAPSHOT.jar\n\nRUN curl -f -k -o /usr/local/lib/jts-1.13.jar \\\n      https://central.maven.org/maven2/com/vividsolutions/jts/1.13/jts-1.13.jar\n\n\n# Add GEO libs to spark class path\nENV SPARK_CLASSPATH=\"/usr/local/lib/jts-1.13.jar:/usr/local/lib/spatial-spark_2.10-1.1.1-beta-SNAPSHOT.jar\"\n\n# Clone the latest notebook and GEO data\nRUN ls -a && git clone https://github.com/sabman/PySparkGeoAnalysis.git . && pwd && ls -la work-flow\n\n# Download the data\nRUN curl -f -o ./06_Europe_Cities_Boundaries_with_Labels_Population.geo.json \\\n      https://dl.dropboxusercontent.com/u/96303065/spark-workshop/06_Europe_Cities_Boundaries_with_Labels_Population.geo.json && \\\n      mv 06_Europe_Cities_Boundaries_with_Labels_Population.geo.json ./work-flow\n\nRUN curl -f -o ./pois.json \\\n      https://dl.dropboxusercontent.com/u/96303065/spark-workshop/pois.json && \\\n      mv pois.json ./work-flow\n\n# FIXME: jupyter contrib command not found\n# RUN $CONDA_ACTIVATE && pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master --user\n# RUN $CONDA_ACTIVATE && jupyter contrib nbextension install --user\n# RUN $CONDA_ACTIVATE && pip install jupyter_nbextensions_configurator --user\n"
}