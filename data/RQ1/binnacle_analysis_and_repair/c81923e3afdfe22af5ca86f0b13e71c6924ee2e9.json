{
  "startTime": 1674245783969,
  "endTime": 1674245784099,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 0,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 0,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 0,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker file to create an image for a hass.io add-on that contains enough software to query a network printer via <ink> and publish the ink levels to a MQTT broker.\n\nARG BUILD_FROM\nFROM $BUILD_FROM\n\nENV LANG C.UTF-8\n\nMAINTAINER James Fry\n\nLABEL Description=\"This image is used to start a script that will monitor for RF events on 433Mhz (configurable) and send the data to an MQTT server\"\n\n#\n# First install software packages needed to compile rtl_433 and to publish MQTT events\n#\nRUN \\\n apk add --no-cache --virtual build-deps alpine-sdk cmake libusb-dev && \\\nmkdir /tmp/src && \\\ncd /tmp/src && \\\n curl -f -L https://downloads.sourceforge.net/libinklevel/libinklevel-0.9.3.tar.gz > libinklevel-0.9.3.tar.gz && \\\ntar xvfz libinklevel-0.9.3.tar.gz && \\\ncd libinklevel-0.9.3 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install && \\\ncd /tmp/src && \\\n curl -f -L https://downloads.sourceforge.net/ink/ink-0.5.3.tar.gz > ink-0.5.3.tar.gz && \\\ntar xvfz ink-0.5.3.tar.gz && \\\ncd ink-0.5.3 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install && \\\napk add --no-cache mosquitto-clients jq && rm libinklevel-0.9.3.tar.gz\n\n#\n# Define an environment variable\n#\n# Use this variable when creating a container to specify the MQTT broker host.\nENV MQTT_HOST=\"hassio.local\"\nENV MQTT_USER=\"guest\"\nENV MQTT_PASS=\"guest\"\nENV MQTT_TOPIC=\"homeassistant/sensor/ink\"\n\nCMD cd / && cp /config/ink2mqtt/ink2mqtt.sh /ink2mqtt.sh && chmod +x /ink2mqtt.sh && /ink2mqtt.sh\n"
}