{
  "startTime": 1674234828993,
  "endTime": 1674234829777,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 5,
        "columnEnd": 113
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 146
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 127,
        "columnStart": 5,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ntodd/video-transcoding:0.21.1\n\nFROM ntodd/ruby-xenial:2.4.0\nLABEL maintainer=\"Nate Todd <nate@pixelauthorityllc.com>\"\n\nENV GEM_VERSION 0.25.2\nENV NASM_VERSION 2.13.01\nENV FDKAAC_VERSION 0.1.6\nENV LIBX265_VERSION 2.9\nENV HANDBRAKE_VERSION 1.1.2\nENV FFMPEG_VERSION 4.1\n\n# install build dependencies to compile ffmpeg from master\nRUN set -ex \\\n  && buildDeps=' \\\n  autoconf \\\n  automake \\\n  build-essential \\\n  git \\\n  libass-dev \\\n  libbz2-dev \\\n  libfontconfig1-dev \\\n  libfreetype6-dev \\\n  libfribidi-dev \\\n  libharfbuzz-dev \\\n  libjansson-dev \\\n  libogg-dev \\\n  libsamplerate-dev \\\n  libtheora-dev \\\n  libtool \\\n  libvorbis-dev \\\n  libxml2-dev \\\n  m4 \\\n  make \\\n  patch \\\n  pkg-config \\\n  python \\\n  tar \\\n  libtool-bin \\\n  texinfo \\\n  wget \\\n  zlib1g-dev \\\n  yasm \\\n  cmake \\\n  cmake-curses-gui \\\n  mercurial \\\n  libmp3lame-dev \\\n  libopus-dev \\\n  libvpx-dev \\\n  libx264-dev \\\n  unzip \\\n  mkvtoolnix \\\n  mp4v2-utils \\\n  mpv \\\n  ' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && mkdir -p /usr/src/ffmpeg/bin \\\n  && mkdir -p /usr/src/ffmpeg/build \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" \\\n  && cd /usr/src/ffmpeg \\\n  # NASM \\\n  && wget https://www.nasm.us/pub/nasm/releasebuilds/$NASM_VERSION/nasm-$NASM_VERSION.tar.bz2 \\\n  && tar xjvf nasm-*.tar.bz2 \\\n  && cd nasm-* \\\n  && ./autogen.sh \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr/src/ffmpeg/build\" --bindir=\"/usr/src/ffmpeg/bin\" \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" make -j\"$(nproc)\" \\\n  && make install \\\n  && cd /usr/src/ffmpeg \\\n  && rm -rf nasm-* \\\n  # libx264 stable\n  && git clone -b stable http://git.videolan.org/git/x264.git x264 \\\n  && cd x264 \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr/src/ffmpeg/build\" --bindir=\"/usr/src/ffmpeg/bin\" --enable-static --disable-opencl \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" make -j\"$(nproc)\" \\\n  && make install \\\n  && cd /usr/src/ffmpeg \\\n  && rm -rf x264-snapshot* \\\n  # libfdk-aac\n  && git clone https://github.com/mstorsjo/fdk-aac.git \\\n  && cd fdk-aac && git checkout tags/v$FDKAAC_VERSION \\\n  && autoreconf -fiv \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr/src/ffmpeg/build\" --disable-shared \\\n  && make -j\"$(nproc)\" \\\n  && make install \\\n  && cd /usr/src/ffmpeg \\\n  && rm -rf mstorsjo-fdk-aac* \\\n  # libx265\n  && wget -O x265.tar.gz https://bitbucket.org/multicoreware/x265/downloads/x265_$LIBX265_VERSION.tar.gz \\\n  && tar xzvf x265.tar.gz \\\n  && cd x265_*/build/linux \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"/usr/src/ffmpeg/build\" -DENABLE_SHARED:bool=off ../../source \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" make -j\"$(nproc)\" \\\n  && make install \\\n  && cd /usr/src/ffmpeg \\\n  && rm -rf x265 \\\n  # HandbrakeCli\n  && git clone https://github.com/HandBrake/HandBrake.git \\\n  && cd HandBrake && git checkout tags/$HANDBRAKE_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --launch-jobs=$(nproc) --disable-gtk --launch \\\n  && cd build && make install \\\n  && cd /usr/src/ffmpeg \\\n  && rm -rf HandBrake \\\n  # FFmpeg\n  && wget -O ffmpeg.zip https://github.com/FFmpeg/FFmpeg/archive/n$FFMPEG_VERSION.zip \\\n  && unzip ffmpeg.zip \\\n  && mv FFmpeg* ffmpeg_src \\\n  && cd ffmpeg_src \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" PKG_CONFIG_PATH=\"/usr/src/ffmpeg/build/lib/pkgconfig\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  --prefix=\"/usr/src/ffmpeg/build\" \\\n  --pkg-config-flags=\"--static\" \\\n  --extra-cflags=\"-I/usr/src/ffmpeg/build/include\" \\\n  --extra-ldflags=\"-L/usr/src/ffmpeg/build/lib\" \\\n  --bindir=\"/usr/src/ffmpeg/bin\" \\\n  --extra-libs=-lpthread \\\n  --enable-gpl \\\n  --enable-libass \\\n  --enable-libfdk-aac \\\n  --enable-libfreetype \\\n  --enable-libmp3lame \\\n  --enable-libopus \\\n  --enable-libtheora \\\n  --enable-libvorbis \\\n  --enable-libvpx \\\n  --enable-libx264 \\\n  --enable-libx265 \\\n  --enable-nonfree \\\n  && PATH=\"/usr/src/ffmpeg/bin:$PATH\" make -j\"$(nproc)\" \\\n  && make install \\\n  && hash -r \\\n  && cd / \\\n  && mv /usr/src/ffmpeg/bin/ff* /usr/local/bin \\\n  && rm -rf /usr/src/ffmpeg && rm nasm-*.tar.bz2 && rm -rf /var/lib/apt/lists/*;\n\nRUN set -ex \\\n  # Install application dependencies\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && gem install video_transcoding -v \"$GEM_VERSION\" \\\n  && mkdir /data\n\nWORKDIR /data\n\nCMD [ \"/bin/bash\" ]\n"
}