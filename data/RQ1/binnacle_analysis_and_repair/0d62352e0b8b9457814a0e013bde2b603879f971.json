{
  "startTime": 1674235728731,
  "endTime": 1674235728913,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 398
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 398
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:9\n# Docker build arguments\nARG SOURCE_DIR=/jellyfin\nARG PLATFORM_DIR=/jellyfin/deployment/debian-package-armhf\nARG ARTIFACT_DIR=/dist\nARG SDK_VERSION=2.2\n# Docker run environment\nENV SOURCE_DIR=/jellyfin\nENV ARTIFACT_DIR=/dist\nENV DEB_BUILD_OPTIONS=noddebs\nENV ARCH=amd64\n\n# Prepare Debian build environment\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y apt-transport-https debhelper gnupg wget devscripts mmv && rm -rf /var/lib/apt/lists/*;\n\n# Install dotnet repository\n# https://dotnet.microsoft.com/download/linux-package-manager/debian9/sdk-current\nRUN wget https://download.visualstudio.microsoft.com/download/pr/69937b49-a877-4ced-81e6-286620b390ab/8ab938cf6f5e83b2221630354160ef21/dotnet-sdk-2.2.104-linux-x64.tar.gz -O dotnet-sdk.tar.gz \\\n && mkdir -p dotnet-sdk \\\n && tar -xzf dotnet-sdk.tar.gz -C dotnet-sdk \\\n && ln -s $( pwd )/dotnet-sdk/dotnet /usr/bin/dotnet && rm dotnet-sdk.tar.gz\n\n# Prepare the cross-toolchain\nRUN dpkg --add-architecture armhf \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y cross-gcc-dev \\\n && TARGET_LIST=\"armhf\" cross-gcc-gensource 6 \\\n && cd cross-gcc-packages-amd64/cross-gcc-6-armhf \\\n && apt-get install --no-install-recommends -y gcc-6-source libstdc++6-armhf-cross binutils-arm-linux-gnueabihf bison flex libtool gdb sharutils netbase libcloog-isl-dev libmpc-dev libmpfr-dev libgmp-dev systemtap-sdt-dev autogen expect chrpath zlib1g-dev zip libc6-dev:armhf linux-libc-dev:armhf libgcc1:armhf libcurl4-openssl-dev:armhf libfontconfig1-dev:armhf libfreetype6-dev:armhf liblttng-ust0:armhf libstdc++6:armhf && rm -rf /var/lib/apt/lists/*;\n\n# Link to docker-build script\nRUN ln -sf ${PLATFORM_DIR}/docker-build.sh /docker-build.sh\n\n# Link to Debian source dir; mkdir needed or it fails, can't force dest\nRUN mkdir -p ${SOURCE_DIR} && ln -sf ${PLATFORM_DIR}/pkg-src ${SOURCE_DIR}/debian\n\nVOLUME ${ARTIFACT_DIR}/\n\nCOPY . ${SOURCE_DIR}/\n\nENTRYPOINT [\"/docker-build.sh\"]\n"
}