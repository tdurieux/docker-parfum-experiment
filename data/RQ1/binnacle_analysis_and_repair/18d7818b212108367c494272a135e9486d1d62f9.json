{
  "startTime": 1674245280193,
  "endTime": 1674245280259,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine as builder\nENV NODE_ENV production\nRUN apk --no-cache add build-base python\nRUN npm install npm@6 --global --quiet && npm cache clean --force;\nRUN npm set unsafe-perm true\nRUN mkdir -p /opt/target\nWORKDIR /opt/src\nCOPY . .\nRUN npm ci\nARG SCOPE\nRUN npx lerna exec --scope $SCOPE mv nginx.conf /opt/target/\nRUN npx lerna run --scope $SCOPE build\nRUN npx lerna exec --scope $SCOPE mv build /opt/target/\n\nFROM nginx:stable-alpine\nEXPOSE 80\nRUN apk --no-cache add jq\nCOPY --from=builder /opt/target/nginx.conf /etc/nginx/nginx.conf\nCOPY --from=builder /opt/target/build /usr/share/nginx/html\nRUN chown nginx.nginx /usr/share/nginx/html/ -R\nCMD jq -nc 'env | with_entries(select(.key | test(\"^REACT_APP_\")))' \\\n      | echo \"window.process={env:$(cat)}\" \\\n      > /usr/share/nginx/html/runtime-env.js \\\n    && nginx -g 'daemon off;'\n"
}