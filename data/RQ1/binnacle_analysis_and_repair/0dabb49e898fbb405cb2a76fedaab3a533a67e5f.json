{
  "startTime": 1674246341000,
  "endTime": 1674246341071,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    pkg-config \\\n    git \\\n    automake \\\n    libtool \\\n    m4 \\\n    autoconf \\\n    make \\\n    file \\\n    binutils && rm -rf /var/lib/apt/lists/*;\n\nCOPY xargo.sh /\nRUN bash /xargo.sh\n\nCOPY android-ndk.sh /\nRUN bash /android-ndk.sh x86 21\nENV PATH=$PATH:/android-ndk/bin\n\nCOPY android-system.sh /\nRUN bash /android-system.sh x86\n\n# We could supposedly directly run i686 binaries like we do for x86_64, but\n# doing so generates an assertion failure:\n#   ... assertion failed: signal(libc::SIGPIPE, libc::SIG_IGN) != libc::SIG_ERR\n#   ... src/libstd/sys/unix/mod.rs\n#   fatal runtime error: failed to initiate panic, error 5\n#\n# Running with qemu works as expected\nCOPY qemu.sh /\nRUN bash /qemu.sh i386 android\n\n# Build with no-asm to make openssl linked binaries position-independent (PIE)\nCOPY openssl.sh /\nRUN bash /openssl.sh android-x86 i686-linux-android- no-asm\n\nRUN cp /android-ndk/sysroot/usr/lib/libz.so /system/lib/\n\n# Libz is distributed in the android ndk, but for some unknown reason it is not\n# found in the build process of some crates, so we explicit set the DEP_Z_ROOT\nENV CARGO_TARGET_I686_LINUX_ANDROID_LINKER=i686-linux-android-gcc \\\n    CARGO_TARGET_I686_LINUX_ANDROID_RUNNER=\"qemu-i386 -cpu n270\" \\\n    CC_i686_linux_android=i686-linux-android-gcc \\\n    CXX_i686_linux_android=i686-linux-android-g++ \\\n    DEP_Z_INCLUDE=/android-ndk/sysroot/usr/include/ \\\n    LIBZ_SYS_STATIC=1 \\\n    OPENSSL_STATIC=1 \\\n    OPENSSL_DIR=/openssl \\\n    OPENSSL_INCLUDE_DIR=/openssl/include \\\n    OPENSSL_LIB_DIR=/openssl/lib \\\n    RUST_TEST_THREADS=1 \\\n    HOME=/tmp/ \\\n    TMPDIR=/tmp/ \\\n    ANDROID_DATA=/ \\\n    ANDROID_DNS_MODE=local \\\n    ANDROID_ROOT=/system\n"
}