{
  "startTime": 1674238533575,
  "endTime": 1674238533796,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\n# install dependencies\nRUN apt-get update && apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install \\\n  build-essential \\\n  clang \\\n  cmake \\\n  ruby-dev \\\n  python-dev \\\n  libaugeas-dev \\\n  libyajl-dev \\\n  libgit2-dev \\\n  libboost-all-dev \\\n  libssl-dev \\\n  libdbus-1-dev \\\n  libpcre3-dev \\\n  libpcre++-dev \\\n  libglib2.0-dev \\\n  libxerces-c-dev \\\n  swig \\\n  valgrind \\\n  libmarkdown2-dev \\\n  discount \\\n  dh-lua \\\n  python-all \\\n  python3-all \\\n  libgtest-dev \\\n  ruby-ronn \\\n  libgcrypt20-dev \\\n  libgpgme-dev \\\n  libbotan1.10-dev \\\n  libev-dev \\\n  libuv1-dev \\\n  libsystemd-dev \\\n  libuv1-dev \\\n\tlibzmq3-dev \\\n  openjdk-8-jdk-headless \\\n  ghc \\\n  ghc-dynamic \\\n  cabal-install \\\n  alex \\\n  happy \\\n  c2hs \\\n  openssh-server \\\n  maven \\\n  git \\\n  libcurl4-gnutls-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# TODO use elektra for the configuration steps below\n\n# setup the ssh server\nRUN sed --in-place 's/^\\(PermitRootLogin\\|UsePAM\\|UseDNS\\)/#\\1/' /etc/ssh/sshd_config && \\\n  echo \"\" >> /etc/ssh/sshd_config && \\\n  echo \"# Custom changes from `date`\" >> /etc/ssh/sshd_config && \\\n  echo \"PermitRootLogin no\" >> /etc/ssh/sshd_config && \\\n  echo \"UsePAM no\" >> /etc/ssh/sshd_config && \\\n  echo \"UseDNS no\" >> /etc/ssh/sshd_config && \\\n  echo \"SSH daemon config updated\"\n\n# setup jenkins prerequisites\nRUN echo \"\\n\\n\\n\\n\\nY\" | adduser --quiet --disabled-password jenkins && \\\n  echo \"jenkins:<password>\" | chpasswd && \\\n  mkdir /home/jenkins/.m2/ && \\\n  chown -R jenkins:jenkins /home/jenkins/.m2/ && \\\n  mkdir /home/jenkins/libelektra && \\\n  echo \"[user]\\nname = Jenkins Buildbot\\nemail = bot@libelektra.org\" >> /home/jenkins/.gitconfig\n\n# setup cabal for the jenkins user, then go back to root\nUSER jenkins\n# Handle Haskell dependencies\nENV HASKELL_SHARED_SANDBOX /home/jenkins/elektra-cabal-sandbox\nRUN mkdir -p $HASKELL_SHARED_SANDBOX \\\n    && cd $HASKELL_SHARED_SANDBOX \\\n    && cabal update \\\n    && cabal sandbox init \\\n    && cabal install 'base >=4.9 && <4.12' 'containers >=0.5 && <0.6' \\\n        'directory >=1.2 && <1.4' 'process >=1.4 && <1.7' 'binary >=0.8 && <0.9' \\\n        'haskell-src-exts-any' 'pretty -any' 'hint >=0.7.0 && <0.8.0' 'temporary -any' \\\n        'exceptions -any' 'text -any' 'simple-logger -any' 'megaparsec -any' \\\n        'hspec -any' 'QuickCheck-any' --avoid-reinstalls\nUSER root\n\n# setup the run- utilities\nCOPY run-make /usr/local/bin/run-make\nCOPY run-make-env /usr/local/bin/run-make-env\nCOPY run-nice /usr/local/bin/run-nice\nRUN chmod a+x /usr/local/bin/run-*\n\n# start the ssh server\nEXPOSE 22\nRUN service ssh start\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-e\"]\n"
}