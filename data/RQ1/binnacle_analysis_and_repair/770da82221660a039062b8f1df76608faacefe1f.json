{
  "startTime": 1674245591572,
  "endTime": 1674245591677,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV SLUGIFY_USES_TEXT_UNIDECODE=yes\n\n# install deps\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n        wget \\\n        python-dev \\\n        python-pip \\\n        libczmq-dev \\\n        libcurlpp-dev \\\n        curl \\\n        libssl-dev \\\n        git \\\n        inetutils-telnet \\\n        bind9utils \\\n        zip \\\n        unzip \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\n\n# Since we install vanilla Airflow, we also want to have support for Postgres and Kubernetes\nRUN pip install --no-cache-dir -U setuptools && \\\n    pip install --no-cache-dir kubernetes && \\\n    pip install --no-cache-dir cryptography && \\\n    pip install --no-cache-dir psycopg2-binary==2.7.4\n\n# install airflow\nRUN pip install --no-cache-dir apache-airflow[kubernetes,postgres]\n\nCOPY bootstrap.sh /bootstrap.sh\nRUN chmod +x /bootstrap.sh\n\nENTRYPOINT [\"/bootstrap.sh\"]\n"
}