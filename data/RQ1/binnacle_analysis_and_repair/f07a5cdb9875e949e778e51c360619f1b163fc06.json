{
  "startTime": 1674243157994,
  "endTime": 1674243158095,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 26,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# CACHEKEY: \"bionic_coq-V2019-06-21-V1\"\n# ^^ Update when modifying this file.\n\nFROM ubuntu:bionic\nLABEL maintainer=\"e@x80.org\"\n\nENV DEBIAN_FRONTEND=\"noninteractive\"\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -qq \\\n        # Dependencies of the image, the test-suite and external projects\n        m4 automake autoconf time wget rsync git gcc-multilib build-essential unzip \\\n        # Dependencies of lablgtk (for CoqIDE)\n        libgtksourceview-3.0-dev \\\n        # Dependencies of stdlib and sphinx doc\n        texlive-latex-extra texlive-fonts-recommended texlive-xetex latexmk \\\n        xindy python3-pip python3-setuptools python3-pexpect python3-bs4 \\\n        # Dependencies of source-doc and coq-makefile\n        texlive-science tipa && rm -rf /var/lib/apt/lists/*;\n\n# More dependencies of the sphinx doc\nRUN pip3 install --no-cache-dir sphinx==1.7.8 sphinx_rtd_theme==0.2.5b2 \\\n                 antlr4-python3-runtime==4.7.1 sphinxcontrib-bibtex==0.4.0\n\n# We need to install OPAM 2.0 manually for now.\nRUN wget https://github.com/ocaml/opam/releases/download/2.0.3/opam-2.0.3-x86_64-linux -O /usr/bin/opam && chmod 755 /usr/bin/opam\n\n# Basic OPAM setup\nENV NJOBS=\"2\" \\\n    OPAMJOBS=\"2\" \\\n    OPAMROOT=/root/.opamcache \\\n    OPAMROOTISOK=\"true\" \\\n    OPAMYES=\"true\"\n\n# Base opam is the set of base packages required by Coq\nENV COMPILER=\"4.05.0\"\n\n# Common OPAM packages.\n# `num` does not have a version number as the right version to install varies\n# with the compiler version.\nENV BASE_OPAM=\"num ocamlfind.1.8.0 dune.1.6.2 ounit.2.0.8 odoc.1.4.0\" \\\n    CI_OPAM=\"menhir.20181113 elpi.1.4.0 ocamlgraph.1.8.8\"\n\n# BASE switch; CI_OPAM contains Coq's CI dependencies.\nENV COQIDE_OPAM=\"cairo2.0.6 lablgtk3-sourceview3.3.0.beta5\"\n\n# Must add this to COQIDE_OPAM{,_EDGE} when we update the opam\n# packages \"lablgtk3-gtksourceview3\"\n\n# base switch\nRUN opam init -a --disable-sandboxing --compiler=\"$COMPILER\" default https://opam.ocaml.org && eval $(opam env) && opam update && \\\n    opam install $BASE_OPAM $COQIDE_OPAM $CI_OPAM\n\n# base+32bit switch\nRUN opam switch create \"${COMPILER}+32bit\" && eval $(opam env) && \\\n    opam install $BASE_OPAM\n\n# EDGE switch\nENV COMPILER_EDGE=\"4.07.1\" \\\n    COQIDE_OPAM_EDGE=\"cairo2.0.6 lablgtk3-sourceview3.3.0.beta5\" \\\n    BASE_OPAM_EDGE=\"dune-release.1.1.0\"\n\n# EDGE+flambda switch, we install CI_OPAM as to be able to use\n# `ci-template-flambda` with everything.\nRUN opam switch create \"${COMPILER_EDGE}+flambda\" && eval $(opam env) && \\\n    opam install $BASE_OPAM $BASE_OPAM_EDGE $COQIDE_OPAM_EDGE $CI_OPAM\n\nRUN opam clean -a -c\n"
}