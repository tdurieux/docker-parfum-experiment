{
  "startTime": 1674234988415,
  "endTime": 1674234988709,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "FROM turbinelabs/envoy-simple:0.19.0\n\nFROM turbinelabs/envtemplate:0.19.0\n\nFROM turbinelabs/rotor:0.19.0\n\nFROM phusion/baseimage:0.10.2\n\n# upgrade/install deps\nRUN apt-get update\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get upgrade -y\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y git && rm -rf /var/lib/apt/lists/*;\n\n# install node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install http-server\nRUN npm install http-server -g && npm cache clean --force;\n\n# install go\nRUN curl -f -s -L -O https://storage.googleapis.com/golang/go1.10.3.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.10.3.linux-amd64.tar.gz && rm go1.10.3.linux-amd64.tar.gz\nENV GOPATH /go\nENV PATH \"$PATH:/usr/local/go/bin:$GOPATH/bin\"\n\n# tbnctl\nRUN go get github.com/turbinelabs/tbnctl\nRUN go install github.com/turbinelabs/tbnctl\nRUN mv $GOPATH/bin/tbnctl /usr/local/bin/tbnctl\n\n# all-in-one driver\nADD driver/main/all-in-one-driver $GOPATH/src/github.com/turbinelabs/all-in-one-driver\nRUN go get github.com/turbinelabs/all-in-one-driver\nRUN go install github.com/turbinelabs/all-in-one-driver\nRUN mv $GOPATH/bin/all-in-one-driver /usr/local/bin/all-in-one-driver\nRUN mkdir -p /etc/service/driver\nADD bin/start-driver.sh /etc/service/driver/run\nRUN chmod +x /etc/service/driver/run\n\n# cleanup go\nRUN rm -rf /usr/local/go\nRUN rm -rf $GOPATH\n\n# cleanup git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get remove -y git\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get autoremove -y\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists* /tmp/* /var/tmp/*\n\n# install envoy\nCOPY --from=0 /usr/local/bin/envoy /usr/local/bin/envoy\nCOPY --from=0 /usr/local/bin/start-envoy.sh /usr/local/bin/start-envoy.sh\nCOPY --from=0 /etc/envoy/bootstrap.conf.tmpl /etc/envoy/bootstrap.conf.tmpl\nADD bin/envoy.sh /etc/service/envoy/run\nRUN chmod +x /etc/service/envoy/run\nRUN mkdir -p /var/log/envoy\n\n# install envtemplate\nCOPY --from=1 /usr/local/bin/envtemplate /usr/local/bin/envtemplate\n\n# all-in-one shell utils\nADD scripts/envcheck.sh /usr/local/bin/envcheck.sh\nRUN chmod +x /usr/local/bin/envcheck.sh\n\n# rotor\nENV ROTOR_STATS_SOURCE all-in-one\nCOPY --from=2 /usr/local/bin/rotor* /usr/local/bin/\nCOPY --from=2 /usr/local/bin/rotor.sh /usr/local/bin/rotor.sh\nADD config/clusters.yml /opt/rotor/clusters.yml\nADD bin/rotor.sh /etc/service/rotor/run\nRUN chmod +x /etc/service/rotor/run\n\n# all-in-one server\nADD server/server.js /opt/all-in-one/server/server.js\nADD server/main.js /opt/all-in-one/server/main.js\n\nRUN mkdir -p /etc/service/blue\nADD bin/start-blue.sh /etc/service/blue/run\nRUN chmod +x /etc/service/blue/run\nRUN mkdir -p /etc/service/green\nADD bin/start-green.sh /etc/service/green/run\nRUN chmod +x /etc/service/green/run\nRUN mkdir -p /etc/service/yellow\nADD bin/start-yellow.sh /etc/service/yellow/run\nRUN chmod +x /etc/service/yellow/run\n\n# all-in-one client\nENV ALL_IN_ONE_CLIENT_DIR /opt/all-in-one/client\nENV ALL_IN_ONE_CLIENT_PORT 8083\nADD client/create-workers.js /opt/all-in-one/client/create-workers.js\nADD client/index.html /opt/all-in-one/client/index.html\nADD client/start.sh /etc/service/client/run\nRUN chmod +x /etc/service/client/run\n\n# check time\nADD bin/check-time.sh /etc/my_init.d/01_check-time.sh\nRUN chmod +x /etc/my_init.d/01_check-time.sh\n\n# init\nADD bin/init.sh /etc/my_init.d/02_init.sh\nRUN chmod +x /etc/my_init.d/02_init.sh\n\n# Document that the service listens on port 80 and the admin port\nEXPOSE 80 9999\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n"
}