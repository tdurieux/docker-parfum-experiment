{
  "startTime": 1674253179381,
  "endTime": 1674253179614,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 43,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 121,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 121,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "# Two stage Dockerfile to build OpenWPM\n# Stage 1 builds the extension, stage 2 builds the main OpenWPM image\n\nFROM node:10 as extension\nWORKDIR /usr/src/app\n\n# Copy the package.json and package-lock.json first and install all the\n# packages. Should the source code of the extension be changed without\n# altering the list of required packages, this step can be cached by Docker.\nCOPY automation/Extension/firefox/package*.json ./\n\n# The extension needs to run for example the TypeScript transpiler\n# to generate the JavaScript code of the extension. This must be done as root\n# as long as the directory of the extension is only writeable as root.\nRUN npm config set unsafe-perm true\n\nRUN npm install && npm cache clean --force;\nCOPY automation/Extension/firefox/. ./\nRUN npm run build\n\n\n# Stage 2, build the main OpenWPM image\nFROM ubuntu:18.04\n\nWORKDIR /opt/OpenWPM\n# This is just a performance optimization and can be skipped by non-US\n# based users\nRUN sed -i'' 's/archive\\.ubuntu\\.com/us\\.archive\\.ubuntu\\.com/' /etc/apt/sources.list\n\nRUN apt-get clean -y && rm -r /var/lib/apt/lists/* -vf && apt-get clean -y && apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends sudo -y && rm -rf /var/lib/apt/lists/*;\n\n# Install the Ubuntu packages as well as firefox and the geckodriver first\nCOPY ./install-system.sh .\nRUN ./install-system.sh --no-flash\n\n# Instead of running install-pip-and-packages.sh, the packages are installed\n# manually using pip and pip3 so that python2 and python3 are supported in the\n# final image.\nRUN apt-get -y --no-install-recommends install python-pip python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# For some reasons, python3-publicsuffix doesn't work with pip3 at the moment,\n# so install it from the ubuntu repository\nRUN apt-get -y --no-install-recommends install python3-publicsuffix && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements.txt .\nRUN pip3 install --no-cache-dir -U -r requirements.txt && pip install --no-cache-dir -U -r requirements.txt\n\nCOPY --from=extension /usr/src/app/dist/openwpm-*.zip automation/Extension/firefox/openwpm.xpi\n\n# Node is not required, the extension is build in the first build stage so\n# there is no noeed to run install-node.sh and build-extension.sh\n\n# Technically, the automation/Extension/firefox directory could be skipped\n# here, but there is no nice way to do that with the Docker COPY command\nCOPY . .\n\n# Optionally create an OpenWPM user. This is not strictly required since it is\n# possible to run everything as root as well.\nRUN adduser --disabled-password --gecos \"OpenWPM\"  openwpm\n\n# Alternatively, python3 could be used here\nCMD python demo.py\n"
}