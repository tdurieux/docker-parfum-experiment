{
  "startTime": 1674240027855,
  "endTime": 1674240027997,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.6\n\nRUN apt-get update && apt-get install -yq --no-install-recommends patch bzip2 && rm -rf /var/lib/apt/lists/*;\n\n# enable faketime\nADD enable-fake-time.patch /usr/local/go/\nRUN patch /usr/local/go/src/runtime/rt0_nacl_amd64p32.s /usr/local/go/enable-fake-time.patch\n\n# add fake file system\nADD fake_fs.lst /usr/local/go/\nRUN cd /usr/local/go && go run misc/nacl/mkzip.go -p syscall fake_fs.lst src/syscall/fstest_nacl.go\n\n# Install go1.4 ss $HOME/go1.4 (the default location), as we need it to build\n# Go 1.5+. We can't just use the existing Go installation to bootstrap, as the\n# first thing make.bash does is clean the existing binaries.\nRUN curl -f https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz | tar -xz -C /root && mv /root/go /root/go1.4\n\n# Build the Go nacl tool chain.\nRUN cd /usr/local/go/src && GOOS=nacl GOARCH=amd64p32 ./make.bash --no-clean\nRUN curl -f -s https://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/44.0.2403.157/naclsdk_linux.tar.bz2 | tar -xj -C /usr/local/bin --strip-components=2 pepper_44/tools/sel_ldr_x86_64\n\n# add and compile tour packages\nRUN GOOS=nacl GOARCH=amd64p32 go get \\\n\tgolang.org/x/tour/pic \\\n\tgolang.org/x/tour/reader \\\n\tgolang.org/x/tour/tree \\\n\tgolang.org/x/tour/wc \\\n\tgolang.org/x/talks/2016/applicative/google\n\n# add tour packages under their old import paths (so old snippets still work)\nRUN mkdir -p $GOPATH/src/code.google.com/p/go-tour && \\\n\tcp -R $GOPATH/src/golang.org/x/tour/* $GOPATH/src/code.google.com/p/go-tour/ && \\\n\tsed -i 's_// import_// public import_' $(find $GOPATH/src/code.google.com/p/go-tour/ -name *.go) && \\\n\tgo install \\\n\t\tcode.google.com/p/go-tour/pic \\\n\t\tcode.google.com/p/go-tour/reader \\\n\t\tcode.google.com/p/go-tour/tree \\\n\t\tcode.google.com/p/go-tour/wc\n\n# add and compile sandbox daemon\nADD . /go/src/sandbox/\nRUN go install sandbox\n\n# make sure it works\nRUN /go/bin/sandbox test\n\nEXPOSE 8080\nENTRYPOINT [\"/go/bin/sandbox\"]\n"
}