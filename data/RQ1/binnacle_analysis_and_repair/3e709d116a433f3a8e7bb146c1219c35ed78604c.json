{
  "startTime": 1674244966773,
  "endTime": 1674244966955,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 220
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\nMAINTAINER Doug Smith <info@laboratoryb.org>\nENV build_date 2016-05-15\n\nRUN yum update -y\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install git kernel-headers gcc gcc-c++ cpp ncurses ncurses-devel libxml2 libxml2-devel sqlite sqlite-devel openssl-devel newt-devel kernel-devel libuuid-devel net-snmp-devel xinetd tar jansson-devel make bzip2 -y && rm -rf /var/cache/yum\n\nWORKDIR /tmp\n# Get pj project\nRUN git clone -b pjproject-2.4.5 --depth 1 https://github.com/asterisk/pjproject.git\n\n# Build pj project\nWORKDIR /tmp/pjproject\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr 1> /dev/null\nRUN make dep 1> /dev/null\nRUN make 1> /dev/null\nRUN make install\nRUN ldconfig\nRUN ldconfig -p | grep pj\n\nENV AUTOBUILD_UNIXTIME 123124\nWORKDIR /tmp\n\n# Download asterisk.\nRUN git clone -b certified/13.8 --depth 1 https://gerrit.asterisk.org/asterisk\nWORKDIR /tmp/asterisk\n\n# Configure\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64 1> /dev/null\n# Remove the native build option\n# from: https://wiki.asterisk.org/wiki/display/AST/Building+and+Installing+Asterisk\nRUN make menuselect.makeopts\nRUN menuselect/menuselect \\\n  --disable BUILD_NATIVE \\\n  --enable cdr_csv \\\n  --enable chan_sip \\\n  --enable res_snmp \\\n  --enable res_http_websocket \\\n  --enable res_hep_pjsip \\\n  --enable res_hep_rtcp \\\n  menuselect.makeopts\n\n# Continue with a standard make.\nRUN make 1> /dev/null\nRUN make install 1> /dev/null\nRUN make samples 1> /dev/null\nWORKDIR /\n\n# Update max number of open files.\nRUN sed -i -e 's/# MAXFILES=/MAXFILES=/' /usr/sbin/safe_asterisk\n\nCMD asterisk -f\n"
}